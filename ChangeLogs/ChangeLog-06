Thu Dec 21 13:41:14 UTC 2006  Joe Hoffert  <jhoffert@dre.vanderbilt.edu>

        * PSM/DQML/DQML-writeup.doc:

          Added in graphics from DQML PowerPoint presentation and made
          slight textual changes.

Tue Dec 19 18:02:18 UTC 2006  akogekar  <akogekar@dre.vanderbilt.edu>

        * PIM/POSAML/interpreters/OmnetInterpreter:

        * PIM/POSAML/interpreters/OmnetInterpreter/BON2Component.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/BON2Component.cpp:
        * PIM/POSAML/interpreters/OmnetInterpreter/CompIcon.ico:
        * PIM/POSAML/interpreters/OmnetInterpreter/Component.rc:
        * PIM/POSAML/interpreters/OmnetInterpreter/ComponentConfig.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/GMESources.txt:
        * PIM/POSAML/interpreters/OmnetInterpreter/Interpreter.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/Interpreter.cpp:
        * PIM/POSAML/interpreters/OmnetInterpreter/OmnetInterpreter.mpc:
        * PIM/POSAML/interpreters/OmnetInterpreter/Patterns.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/Patterns.cpp:
        * PIM/POSAML/interpreters/OmnetInterpreter/Resource.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/StdAfx.h:
        * PIM/POSAML/interpreters/OmnetInterpreter/StdAfx.cpp:
        * PIM/POSAML/interpreters/OmnetInterpreter/component.def:
        * PIM/POSAML/interpreters/OmnetInterpreter/dlldata.c:

          Added a new interpreter to generate OMNeT++ files

        * PIM/POSAML/interpreters/interpreters.mwc:

        * PIM/POSAML/paradigms/POSAML.xme:
        * PIM/POSAML/paradigms/POSAML.xmp:

          Latest version of POSAML

Tue Dec 19 06:25:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/gme.pl:

          Update script so that it releases GME resources, i.e., invokes
          Exit, once it is finished.

Mon Dec 18 17:09:35 UTC 2006  Joe Hoffert  <jhofert@dre.vanderbilt.edu>

        * PSM/

          Added DQML (DDS QoS Modeling Language) directories.

Sat Dec 16 04:31:58 UTC 2006  Akshay V. Dabholkar  <aky@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xmp:

          Latest interpreted version for CQML.

Sat Dec 16 04:23:21 UTC 2006  Akshay V. Dabholkar  <aky@dre.vanderbilt.edu>

        * PSM/CQML/examples/BasicSP.xme:

          Works with new CQML containing FT and Security QoS

        * PSM/CQML/interpreters/Interpreters.mwc:

          Added Security QoS interpreter.

        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSDumper.cpp:

          Now the interpreter dumps the metadeta for CCM Container configuration

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

          FT now conforms to CQML

        * PSM/CQML/paradigms/icons/DeploymentPlan.bmp:
        * PSM/CQML/paradigms/icons/RootRiskGroup.bmp:
        * PSM/CQML/paradigms/icons/TargetReliabilityModel.bmp:

          FT icons upgraded

Fri Dec 15 02:16:11 UTC 2006  Akshay V. Dabholkar <aky@dre.vanderbilt.edu>

        * PSM/CQML/paradigms/icons/assembly_qos.bmp:
        * PSM/CQML/paradigms/icons/assembly_ref.bmp:
        * PSM/CQML/paradigms/icons/assembly_rule.GIF:
        * PSM/CQML/paradigms/icons/component_qos.bmp:
        * PSM/CQML/paradigms/icons/component_rule.gif:
        * PSM/CQML/paradigms/icons/critical_path.bmp:
        * PSM/CQML/paradigms/icons/critical_path_ref.bmp:
        * PSM/CQML/paradigms/icons/group.bmp:
        * PSM/CQML/paradigms/icons/initiator.bmp:
        * PSM/CQML/paradigms/icons/operation_set.bmp:
        * PSM/CQML/paradigms/icons/policy_set.bmp:
        * PSM/CQML/paradigms/icons/port_qos.bmp:
        * PSM/CQML/paradigms/icons/port_rule.GIF:
        * PSM/CQML/paradigms/icons/realm.bmp:
        * PSM/CQML/paradigms/icons/rights.bmp:
        * PSM/CQML/paradigms/icons/role.bmp:
        * PSM/CQML/paradigms/icons/role_access_rights.bmp:
        * PSM/CQML/paradigms/icons/security_domain.bmp:
        * PSM/CQML/paradigms/icons/security_policy.bmp:
        * PSM/CQML/paradigms/icons/user.gif:

          Added some security QoS icons

Wed Dec 13 00:49:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * Installer/CoSMIC_common.wxs:

          UDM component was referencing the wrong version of the
          UDM binary file.

Mon Dec 11 19:52:44 UTC 2006  Akshay V. Dabholkar  <aky@dre.vanderbilt.edu>

        * PSM/CQML/interpreters/NetQoSComponent/compicon.ico:
        * PSM/CQML/interpreters/NetQoSComponent/resource.h:

          Corrected Interpreter Icon problem

        * PSM/CQML/interpreters/SecurityQoS/SecurityQoS.mpc:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSAdder.h:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSAdder.cpp:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSDumper.h:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSDumper.cpp:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSInjector.h:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSInjector.cpp:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSVisitor.h:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSVisitor.cpp:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoS_Export.h:
        * PSM/CQML/interpreters/SecurityQoS/common.h:
        * PSM/CQML/interpreters/SecurityQoS/common.cpp:

        * PSM/CQML/interpreters/SecurityQoSComponent/CompIcon.ico:
        * PSM/CQML/interpreters/SecurityQoSComponent/Component.def:
        * PSM/CQML/interpreters/SecurityQoSComponent/Component.rc:
        * PSM/CQML/interpreters/SecurityQoSComponent/ComponentConfig.h:
        * PSM/CQML/interpreters/SecurityQoSComponent/RawComponent.h:
        * PSM/CQML/interpreters/SecurityQoSComponent/RawComponent.cpp:
        * PSM/CQML/interpreters/SecurityQoSComponent/SecurityQoSComponent.mpc:
        * PSM/CQML/interpreters/SecurityQoSComponent/StdAfx.h:
        * PSM/CQML/interpreters/SecurityQoSComponent/StdAfx.cpp:
        * PSM/CQML/interpreters/SecurityQoSComponent/UdmApp.h:
        * PSM/CQML/interpreters/SecurityQoSComponent/UdmApp.cpp:
        * PSM/CQML/interpreters/SecurityQoSComponent/UdmConfig.h:
        * PSM/CQML/interpreters/SecurityQoSComponent/resource.h:

        Added Interpreter for Security QoS for CQML. Metamodel remaining to be checked in.


Fri Dec  8 16:45:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp (visit_attribute):

          Removed the call to emit_diagnostic() for the AttributeMember,
          which followed immediately after the corresponding call for
          the Attribute itself. The AttributeMember is a GME Reference,
          but its "referred" attribute hasn't been set yet - this action
          was deferred in order to catch a possible type change in the
          IDL attribute. Just before this GME attribute is set, a call
          to BE_GlobalData::type_change_diagnostic() is made. This
          method has been modified (see below) to output an "adding"
          diagnostic if the GME "referred" attribute wasn't previously
          set.

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          emit_diagnotic() - when processing a GME Reference, simply
          return if the "referred" GME attribute hasn't been set.
          Better to omit a diagnostic message (which can be caught
          and fixed later) than to crash due to making a call on
          a null pointer.

          type_change_diagnostic() - modified this method to do more
          than just return when a GME Reference's "referred" attribute
          hasn't been set (the previous behavior). Now the method
          will output an "added" diagnostic, using the value for
          the "referred" GME attribute which was passed in as an
          argument, and which will be set immediately after this call
          returns. So if there is an existing value for the
          DOMElement's "referred" attribute, a "type changed" diagnostic
          is output, otherwise an "added" diagnostic is output.

          Thanks to Abdullah Sowayan <abdullah.sowayan@lmco.com> for
          reporting the bug and providing IDL for testing.

Mon Dec  4 21:38:45 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * Installer/CoSMIC_common.wxs:

          Updated the script to use UDM 3.1.1.

Sun Nov 26 16:03:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

          Refreshed the PICML library in CQML.

Sat Nov 25 20:02:30 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE.xme:

          Updated the model to the latest version of PICML.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Relaxed the cardinality containts for Finish connection
          between state and input actions so that a state is allowed
          to have multiple finish connections.

Fri Nov 24 17:11:22 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp (add_supported_elements):

          Added missing parens in a call to AST_Decl::imported().
          Thanks to Andy Gokhale <a.gokhale@vanderbilt.edu> for
          reporting the oversight.

Mon Nov 20 22:33:06 UTC 2006  Sumant Tambe <sutambe@dre.vanderbilt.edu>

        * PSM/CQML/interpreters/NetQoS/common.h
        * PSM/CQML/interpreters/NetQoS/NetQoS.mpc
        * PSM/CQML/interpreters/NetQoS/NetQoS_Splitter.cpp
        * PSM/CQML/interpreters/NetQoS/NetQoS_Splitter.h
        * PSM/CQML/interpreters/NetQoS/NetQoSRequirementsIterator.cpp
        * PSM/CQML/interpreters/NetQoS/NetQoSRequirementsIterator.h
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

          The first version of NetQoS attribute splitting functionality.
          This feature is not complete yet and is not be included in the
          compilation.

Wed Nov 15 14:42:59 UTC 2006  Nishanth Shanakran  <nshankar@nospam.com>

        * PIM/PICML/examples/Sample_Strings.xme:

          Modified the names of the components to Gizmo, Comm, Analysis,
          etc. Also, created the deployment plan for the "combination string".

Tue Nov 14 06:19:35 UTC 2006  Nishanth Shankran  <nshankar@nospam.com>

        * PIM/PICML/examples/Sample_Strings.xme:

          Updated the model to include the "combination string".

Tue Nov 14 000:04:29 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:

          Modified BE_GlobalData::imported_dom_element() to accept
          an additional argument, the boolean return value of a
          call to imported() on the AST node corresponding to the
          DOM being searched for. The previous branching of
          imported_dom_element() on an 'imported' node was based
          on calls to the IDL_GLobalData state, which did not
          always return the values expected.

Mon Nov 13 19:27:06 UTC 2006  Nishanth Shankaran  <nshnakar@nospam.com>

        * PIM/PICML/examples/Sample_Strings.xme:

          Updated the example.

Mon Nov 13 15:42:59 UTC 2006  Nishanth Shankaran  <nshankar@nospam.com>

        * PIM/PICML/examples/Sample_Strings.xme:

          Updated the example.

Thu Nov  9 22:46:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE.xme:

          Migrated version of the SLICE example.

        * PIM/PICML/migration:

          Directory for XSLT scripts related to PICML.

        * PIM/PICML/migration/@derivedfrom_cleaner.xsl:
        * PIM/PICML/migration/Effect_to_InputEffect.xsl:
        * PIM/PICML/migration/PeriodicAction_to_PeriodicEvent.xsl:
        * PIM/PICML/migration/PeriodicEvent_disconnect.xsl:

          XSLT scripts for converting old behavior models to new behavior
          models. The scripts should be run in the following order:

            - PeriodicAction_to_PeriodicEvent.xsl
            - PeriodicEvent_disconnect.xsl
            - Effect_to_InputEffect.xsl
            - @derivedfrom_cleaner.xsl

        * PIM/PICML/paradigms/icons/environment.gif:
        * PIM/PICML/paradigms/icons/periodic.gif:

          Missing images for the PICML paradigm.

        * PIM/PICML/paradigms/icons/StartState.bmp:
        * PIM/PICML/paradigms/icons/TimerState.bmp:

          Removed these files.

Thu Nov  9 20:32:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * Installer/CoSMIC_common.wxs:

          Added a merge component for VC8 merge modules.

Thu Nov  9 17:12:39 UTC 2006  Amogh Kavimandan <amoghk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

          Fixed xml files such that picml gets built.

Wed Nov  8 23:43:46 UTC 2006  Amogh Kavimandan <amoghk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

          PICML changes: Platform Independent QoS models additions
          for EC and RT configurations.
          CQML changes: CQML changes to use PICML as a library,
          thus any changes to PICML would have to be accompanied
          by a corresponding library refresh in CQML.

Wed Nov  8 23:01:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor_cpp:

          Added check for altered PredefinedTypes folder in an XME
          file input on the command line. An upcoming version of GME
          will allow this folder to be made readonly, until then
          this check will output an error message and abort if items
          have been removed from this folder, either by cutting from
          the XME file directly or by deletion from the model that
          exported it.

Wed Nov  8 22:19:20 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          Extended the error checking added in

          Fri Nov  3 22:22:06 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          to cover overlooked use cases. Again, thanks to Adam Nagel,
          <nagelar@isis.vanderbilt.edu> for supplying the example IDL
          files.

Fri Nov  3 22:22:06 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          - Added abort and diagnostic message if an IDL redefinition
            is found. Such a redefinition (if it occurred in a
            different IDL file than the original) was previously
            flagged only by the catching of an unknown exception
            thrown by a Xerces call. Thanks to Adam Nagel
            <nagelar@isis.vanderbilt.edu> for supplying the example
            IDL files that pointed out the need for a more informative
            diagnostic.

          - Disabled the writing of the XME file if there is an error
            during processing.

Wed Nov  1 22:49:39 UTC 2006  Nishanth Shankaran  <nshankar@nospam.com>

        * PIM/PICML/examples/RACE.xme:

          Updated the model to include the XML Output Adapter.

Wed Nov  1 20:17:03 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService.NET/BDC.mpc:

          Missing MPC file to allow compilation of BDCWebService.NET.

Thu Oct 19 01:17:26 UTC 2006  Sumant Tambe <sutambe@nospam>

          * PSM/CQML/paradigms/CQML-uml.xme
          * PSM/CQML/paradigms/CQML.xme
          * PSM/CQML/paradigms/CQML.xml
          * PSM/CQML/paradigms/CQML.xmp

            Added the HIGH_THROUGHPUT attribute to the NetQoS.

Tue Oct 17 23:34:14 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:

          Fixes to ensure that configProperty associated with
          AttributeMapping gets generated as part of the .cid file.
          Thanks to Nishanth for reporting the bug.

Tue Oct 17 21:50:53 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Sample_Strings.xme:

          Updated the model.

Tue Oct 17 21:38:17 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RACE.xme:
        * PIM/PICML/examples/RACE_NetQoS.xme:

          Moved these files up one level in the directory hierarchy.

        * PIM/PICML/examples/RACE/RACE.xme:
        * PIM/PICML/examples/RACE/RACE_NetQoS.xme:

          Removed these files.

Tue Oct 17 16:32:44 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Sample_Strings.xme:

          Checking in the initial version of the operational strings
          used for the ARMS/NASA demo.

Sat Oct 14 03:37:17 UTC 2006  Sumant Tambe <sutambe@nospam>

        * PSM/CQML/paradigms/CQML-uml.xme
        * PSM/CQML/paradigms/CQML.xme
        * PSM/CQML/paradigms/CQML.xml
        * PSM/CQML/paradigms/CQML.xmp

          Fixed a constraint in ConnectionQoS modeling.

Fri Oct 13 03:42:58 UTC 2006  Sumant Tambe <sutambe@nospam>

        * PIM/PICML/examples/RACE/RACE_NetQoS.xme
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

        Fixed NetQoS interpreter and modified the RACE_NetQoS xme file.

Thu Oct 12 01:57:57 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/examples/SLICE.xme:

          Updated example to reflect changes in the paradigm.

        * PIM/SIML/interpreters/GatewayGenerator/AspNetVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/AspNetVisitor.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.h:
        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorUtils.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorUtils.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/GsoapVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GsoapVisitor.cpp:

          New implementation which adds support for generation of ASP.NET
          web services using C++/CLI.

        * bon.mpb:  Updated to remove some erroneous include paths.

        * demos/STI/BDCWebService.NET/Benchmark_Data_Collector.cpp:
          Updated to fix some missing declarations in the destructor.

Tue Oct 10 20:15:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/gme.pl:

          PERL script for GME. It can be used to query the version
          of GME and run components on a target project file. Usage
          of the script still needs to be added.

Tue Oct 10 18:06:25 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/interpreters/GatewayGenerator/GsoapVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GsoapVisitor.cpp:

          Renamed the files to reflect their task.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:

          Removed these files.

Tue Oct 10 17:58:15 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp:

          Removed generation of leading underscore for component
          implementations.

        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:

          Updates to use Boost to remove a lot of redundant code.

        * PIM/SIML/examples/SLICE.xme:

        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:

          Updates to use Boost and to reflect the changes in the
          metamodel.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:

          Updated to reflect changes in PICML and WSML.  New additions to
          make the modeling of gateways more intuitive.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated to add a new ServiceRef element.

        * bon.mpb:
        * cosmic_common.mpb:
        * cosmic_utils.mpb:
        * udm.mpb:

          Fixes to remove a bunch of inconsistencies.

        * demos/STI/BDCWebService.NET/Benchmark_Data_Collector.h:
        * demos/STI/BDCWebService.NET/Benchmark_Data_Collector.cpp:

          New files that implement BDC using ASP.NET.

Mon Oct  9 16:40:15 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * CUTS/default.features:

          Reverting to the previous version since this file was accidentaly
          checked in during the previous commit.

Mon Oct  9 16:34:22 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE.xme:

          Checking in the SPACE model that is being used for the LMCO ATC project.

Thu Oct  5 10:13:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE.xme:
        * PIM/PICML/examples/SLICE:
        * PIM/PICML/examples/SLICE/SLICE.xme:

          Moved the SLICE example to the parent directory.

Wed Oct  4 00:50:15 UTC 2006  Sumant Tambe <sutambe@nospam>

        * PIM/PICML/examples/RACE/RACE.xme
        * PIM/PICML/examples/RACE/RACE_NetQoS.xme

          Added a model of RACE with a NetQoS planner in it.
          Fixed name typos in the RACE model.

Mon Oct  2 20:18:57 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RACE/RACE.xme: Updated the RACE model.

Mon Oct  2 16:29:56 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RACE/RACE.xme: Checking in the model for RACE.

Fri Sep 29 00:01:02 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/paradigms/icons/componentassembly.bmp:
        * PIM/PICML/paradigms/icons/componentassemblyref.bmp:
        * PIM/SIML/paradigms/icons/component.bmp:
        * PIM/SIML/paradigms/icons/componentassembly.bmp:
        * PIM/SIML/paradigms/icons/componentassemblyref.bmp:
        * PIM/SIML/paradigms/icons/componentref.bmp:
        * PIM/SIML/paradigms/icons/refarrow.bmp:

          Updates to the icons to make them more appealing.

Mon Sep 25 21:16:25 UTC 2006  akogekar  <akogekar@dre.vanderbilt.edu>

        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.sln:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BenchmarkingBON2Component.vcproj:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib.tlb:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib_i.c:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib_p.c:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.sln:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.vcproj:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_xml.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_xml.cpp:

        * PIM/POSAML/interpreters/ConfiguratorInterpreter/Component.aps:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib.tlb:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib_i.c:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib_p.c:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfigurationBON2Component.sln:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfigurationBON2Component.vcproj:

          Removed these files.

Mon Sep 25 20:37:31 UTC 2006  akogekar  <akogekar@dre.vanderbilt.edu>

        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.cpp:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BenchmarkInterpreter.mpc:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentConfig.h:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.cpp:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.mpc:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/component.def:

        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfiguratorInterpreter.mpc:

        * PIM/POSAML/interpreters/interpreters.mwc:

        Updated POSAML files

Thu Sep 21 02:43:52 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService.NET:
        * demos/STI/BDCWebService.NET/AssemblyInfo.cpp:
        * demos/STI/BDCWebService.NET/BDCWebService.sln:
        * demos/STI/BDCWebService.NET/BDCWebService.vcproj:
        * demos/STI/BDCWebService.NET/Benchmark_Data_Collector.h:
        * demos/STI/BDCWebService.NET/Benchmark_Data_Collector.cpp:
        * demos/STI/BDCWebService.NET/CORBA.wsdl:
        * demos/STI/BDCWebService.NET/CORBA.xsd:
        * demos/STI/BDCWebService.NET/SLICE.asmx:
        * demos/STI/BDCWebService.NET/SLICE.wsdl:
        * demos/STI/BDCWebService.NET/Web.config:

          Implementation of Benchmark_Data_Collector WebService in .NET.
          This is a hand-written one that works.

        * demos/STI/BDC_WSClient/BDCClient.csproj:
        * demos/STI/BDC_WSClient/BDC_Client.cs:
        * demos/STI/BDC_WSClient/Benchmark_Data_Collector.cs:
        * demos/STI/BDC_WSClient/CORBA.wsdl:

          Minor updates to make BDCWebService.NET work.

Wed Sep 20 01:46:24 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:  Fixed the decorator
          problems associated with using a single decorator for multiple
          paradigms.  We no longer rely on any specific version of GME.

Mon Sep 18 14:05:56 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/decorators/IDMLDecorators.cpp:

          Fixed bug that resulted from an inconsitent checkin.

Fri Sep 15 22:08:25 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Target/Domain.mpc:
        * PIM/PICML/interpreters/TargetComponent/Component.def:
        * PIM/PICML/interpreters/TargetComponent/DomainComponent.mpc:
        * PIM/SIML/interpreters/GatewayGenerator/component.def:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
        * PSM/CQML/interpreters/CQML/CQML.mpc:
        * PSM/CQML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PSM/CQML/interpreters/FaultToleranceComponent/Component.def:
        * PSM/CQML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc:
        * PSM/CQML/interpreters/NetQoSComponent/Component.def:
        * PSM/CQML/interpreters/NetQoSComponent/NetQoSComponent.mpc:
        * PIM/PICML/interpreters/PathComponent/Component.def:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:
        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/PackageComponent/Component.def:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/Path/Path.mpc:
        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/decorators/DecoratorApp.def:
        * PIM/PICML/interpreters/MPC/MPC_Interpreter.mpc:
        * PIM/PICML/interpreters/MPCComponent/MPCComponent.mpc:
        * PIM/PICML/interpreters/MPCComponent/component.def:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/component.def:
        * PIM/PICML/interpreters/CIDL/CIDL_Interpreter.mpc:
        * PIM/PICML/interpreters/CIDLComponent/CIDLComponent.mpc:
        * PIM/PICML/interpreters/CIDLComponent/Component.def:
        * PIM/PICML/interpreters/BGML/BGML.mpc:
        * PIM/PICML/interpreters/BGMLComponent/BGMLComponent.mpc:
        * PIM/PICML/interpreters/BGMLComponent/Component.def:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:
        * PIM/PICML/addons/UUIDManager/component.def:  Updates to fix the
          compilation errors caused due to a change in MPC.  While they
          are working on a fix, temporarily use the registration solution
          used by CUTS.

        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/resource.h:

        * PIM/PICML/interpreters/CIDL:  Moved the directory
          CIDL_Interpreter to CIDL to be consistent with other
          directories' naming convention.

        * PIM/PICML/interpreters/Interpreters.mwc:
        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp:  Fixed errors
          caused by directory renaming.

        * PIM/PICML/interpreters/MPC: Moved the directory MPC_Interpreter
          to MPC to be consistent with other directories' naming
          convention.

        * PIM/PICML/interpreters/MPC/MPCStream.h:
        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/MPC_Visitor.h:
        * PIM/PICML/interpreters/MPC/MPC_Visitor.cpp:
        * PIM/PICML/interpreters/MPCComponent/UdmApp.cpp:  Fixes to remove
          compilation errors caused by directory renaming.

        * PIM/PICML/interpreters/PICML/PICML.mpc:  Added Utils to the list
          of projects to be built.

        * PIM/PICML/interpreters/PathComponent/UdmConfig.h:
        * PIM/PICML/interpreters/Path/PathVisitor.h:  Fixed compilation
          error caused due to improper #includes.

        * PIM/PICML/paradigms/icons/component.bmp:
        * PIM/PICML/paradigms/icons/componentassembly.bmp:
        * PIM/PICML/paradigms/icons/componentassemblyref.bmp:
        * PIM/PICML/paradigms/icons/componentref.bmp:  New icons which
          look a lot better than the old ones, and which differentiate
          between components and component assemblies using colour.

        * PIM/SIML/interpreters/GatewayGenerator/Component.rc:
        * PIM/SIML/interpreters/GatewayGenerator/ComponentConfig.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:

          Updates to conform to the Visitor generated by the new
          BonExtender.

        * cqmllib.mpb:
        * picml.mwc:
        * picmllib.mpb:
        * register.mpb:
        * udm.mpb:

          Various updated to refactor and re-organize the base MPC
          projects.


        * PIM/PICML/interpreters/CIDL_Interpreter:
        * PIM/PICML/interpreters/CIDL_Interpreter/CIDL_Export.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/CIDL_Interpreter.mpc:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:
        * PIM/PICML/interpreters/FlatPlan:
        * PIM/PICML/interpreters/FlatPlanComponent:
        * PIM/PICML/interpreters/MPC_Interpreter:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Export.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Interpreter.mpc:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Visitor.h:
        * PIM/PICML/interpreters/MPC_Interpreter/MPC_Visitor.cpp:
        * PIM/PICML/interpreters/MPC_Interpreter/generate_export_file.pl:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.cpp:

          Removed these files.

Wed Sep 13 00:02:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Updated model to latest version of PICML.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Removed the interface inheritence from I/O automata
            ActionTypes paradigm sheet.
          - Removed the implementation inheritence from the
            WML paradigm sheet.

Fri Sep  8 20:16:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/icons/componentref.bmp:

          Update component reference bitmap to have same look and
          feel as the component bitmap.

Fri Sep  8 20:01:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/icons/refarrow.bmp:

          Overall arrow for references. It's stored as a bitmap so we
          do not lose its quality.

Mon Sep  4 20:10:44 UTC 2006  Arundhati Kogekar  <akogekar@dre.vanderbilt.edu>

        Added first version of POSAML.

        * PIM/POSAML:

        * PIM/POSAML/interpreters:

        * PIM/POSAML/interpreters/BenchmarkInterpreter:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.cpp:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BON2Component.sln:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BenchmarkingBON2Component.vcproj:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/CompIcon.ico:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/Component.rc:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentConfig.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib.tlb:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib_i.c:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/ComponentLib_p.c:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/GMESources.txt:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/Resource.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/StdAfx.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/StdAfx.cpp:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.sln:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.vcproj:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_test/benchmark_test.cpp:

        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_xml.h:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/benchmark_xml.cpp:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/component.def:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/dlldata.c:

        * PIM/POSAML/interpreters/ConfiguratorInterpreter:

        * PIM/POSAML/interpreters/ConfiguratorInterpreter/BON2Component.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/BON2Component.cpp:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/CMMLBonX.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/CMMLBonX.cpp:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/CompIcon.ico:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/Component.aps:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/Component.rc:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentConfig.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib.tlb:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib_i.c:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ComponentLib_p.c:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfigurationBON2Component.sln:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfigurationBON2Component.vcproj:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/GMESources.txt:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/Resource.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/StdAfx.h:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/StdAfx.cpp:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/component.def:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/dlldata.c:

        * PIM/POSAML/paradigms:

        * PIM/POSAML/paradigms/POSAML.xme:
        * PIM/POSAML/paradigms/POSAML.xmp:
        * PIM/POSAML/paradigms/icons:

        * PIM/POSAML/paradigms/icons/Acceptor.bmp:
        * PIM/POSAML/paradigms/icons/Acceptor_Connector.bmp:
        * PIM/POSAML/paradigms/icons/Connector.bmp:
        * PIM/POSAML/paradigms/icons/Dispatcher.bmp:
        * PIM/POSAML/paradigms/icons/Latency.bmp:
        * PIM/POSAML/paradigms/icons/Port.bmp:
        * PIM/POSAML/paradigms/icons/PortEndPoint.bmp:
        * PIM/POSAML/paradigms/icons/PortSmall.bmp:
        * PIM/POSAML/paradigms/icons/Property.bmp:
        * PIM/POSAML/paradigms/icons/Queue.bmp:
        * PIM/POSAML/paradigms/icons/Reactor.bmp:
        * PIM/POSAML/paradigms/icons/Reactor_Type.bmp:
        * PIM/POSAML/paradigms/icons/Service.bmp:
        * PIM/POSAML/paradigms/icons/Throughput.bmp:
        * PIM/POSAML/paradigms/icons/Transport_Handle.bmp:
        * PIM/POSAML/paradigms/icons/Transport_HandleA.bmp:
        * PIM/POSAML/paradigms/icons/Transport_HandleC.bmp:
        * PIM/POSAML/paradigms/icons/concurrency.bmp:
        * PIM/POSAML/paradigms/icons/event_handler.bmp:
        * PIM/POSAML/paradigms/icons/handle.bmp:
        * PIM/POSAML/paradigms/icons/handle_set.bmp:
        * PIM/POSAML/paradigms/icons/reactor_pattern.bmp:
        * PIM/POSAML/paradigms/icons/service_time.bmp:
        * PIM/POSAML/paradigms/icons/sync_event.bmp:
        * PIM/POSAML/paradigms/icons/threads.bmp:

Mon Sep  4 15:25:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * Installer/CoSMIC_common.wxs:

          Added a UDM 3.0.1 component to the installer.

Fri Sep  1 19:21:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:

          Removed block that disabled the use of the name_modifier since
          we are no longer using BON for this project.

        * PSM/CQML/interpreters/CQML/CQML.mpc:

          Updated the base project specification to use cosmic_utils instead
          of utils.

Fri Sep  1 18:14:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cosmic_utils.mpb:

          This file was the original utils.mpb. I changed its name
          becuase TAO has a utils.mpb base project as well. This was
          causing problems with the CUTS project because it was picking
          up the utils.mpb located in $ACE_ROOT/bin/MakeProjectCreator/config
          instead of the one located in $COSMIC_ROOT

        * cqmllib.mpb:
        * picmllib.mpb:

          Updated the base project specification to use cosmic_utils instead
          of utils.

        * utils.mpb:

          Removd this file.

Fri Sep  1 07:38:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * Installer/CoSMIC_common.wxs:

          Windows Installer XML (WIX) project file for the common
          parts of CoSMIC (PICML.dll and Utils.dll). This allows
          other installers to include them so that all installers
          reference the same components.

Fri Sep  1 06:31:02 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Fixed the case for BGML_Component

Fri Sep  1 05:46:30 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp:
        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:
        * PIM/PICML/interpreters/PICML/XercesString.h:
        * PIM/PICML/interpreters/PICML/XercesString.cpp:

          Merge from branches/CUTS-dev

Fri Sep  1 00:02:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:
        * PIM/PICML/interpreters/PICML/XercesString.h:
        * PIM/PICML/interpreters/PICML/XercesString.cpp:

          Removed these files since they are now located at
          $(COSMIC_ROOT)/Utils

Tue Aug 29 00:33:54 UTC 2006  Sumant Tambe <sutambe@nospam>

        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h

          Fixed a deployment plan interpreter bug and refactored
          unique identifier creation code. Fixed UUIDManager mpc.

Mon Aug 28 19:38:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          Added code to make sure that the 'referred' attribute
          of a ReturnType is set before emitting a diagnostic
          that is has been added to the model from imported IDL,
          since this attribute may be looked up as part of
          emitting the diagnostic. Also added code to recreate
          the ComponentImplementations, ImplementationArtifacts,
          and ComponentTypes folders, if we are importing an
          XME file and the modeler has removed one or more of
          them for some reason.

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Added a check that prevents a bailout when checking for
          a match between multiple openings of a module, as part
          of the process of determining whether one of the module
          openings has been imported from XME or not.

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/DIDLEmitVisitor.cpp:

          Cosmetic changes.

Mon Aug 28 19:16:34 UTC 2006  Sumant Tambe <sutambe@nospam>

        * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.cpp

          I missed this file in the last checkin.

Mon Aug 28 16:18:52 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp: Removed
          an extraneous line which dealt with setting namespaces.  This
          was cause by an accidental check-in that should have been done
          after a new GME version has been released.

Mon Aug 28 07:35:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

       * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
       * PSM/CQML/interpreters/NetQoS/NetQoS.mpc
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

         Changed the NetQoS interpreter to generate deployment plans
         using the Deployment Plan Framework.

Mon Aug 28 07:15:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

       * PIM/PICML/interpreters/BGMLComponent/UdmApp.cpp
       * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp
       * PIM/PICML/interpreters/MPCComponent/UdmApp.cpp
       * PIM/PICML/interpreters/Path/PathVisitor.cpp
       * PIM/PICML/interpreters/Path/PathVisitor.h
       * PIM/PICML/interpreters/PathComponent/UdmApp.cpp
       * PIM/PICML/interpreters/Target/DomainVisitor.cpp
       * PIM/PICML/interpreters/Target/DomainVisitor.h
       * PIM/PICML/interpreters/TargetComponent/UdmApp.cpp
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

         Fixed these files to compile as per the new refactored
         CoSMIC code.

Mon Aug 28 01:15:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

       * cosmic.mwc
       * cosmic_common.mpb
       * cqmllib.mpb
       * picmllib.mpb
       * udm.mpb
       * Utils
       * utils.mpb

       * PIM/PICML/addons/UUIDManager/RawComponent.cpp
       * PIM/PICML/addons/UUIDManager/UUIDManager.mpc

       * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc
       * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
       * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h

       * PIM/PICML/interpreters/DeploymentPlanComponent/ComponentConfig.h
       * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp

       * PIM/PICML/interpreters/Package/PackageVisitor.cpp
       * PIM/PICML/interpreters/Package/PackageVisitor.h

       * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp

       * PIM/PICML/interpreters/PICML/PICML.mpc
       * PIM/PICML/interpreters/PICML/Utils.cpp

       * PIM/PICML/paradigms/PICML.xmp

       * PSM/CQML/interpreters/CQML/CQML.mpc

       * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc
       * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
       * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h

       * PSM/CQML/interpreters/FaultTolerance/FaultTolerance.mpc

       * PSM/CQML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc
       * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.cpp

       * PSM/CQML/interpreters/Interpreters.mwc

       * PSM/CQML/interpreters/NetQoS/NetQoS.mpc
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
       * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

       * PSM/CQML/interpreters/NetQoSComponent/NetQoSComponent.mpc
       * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp

       * Utils/Utils.cpp
       * Utils/Utils.h
       * Utils/Utils.mpc
       * Utils/Utils_export.h
       * Utils/XercesString.cpp
       * Utils/XercesString.h

        Refactored some CoSMIC code into Utils directory in COSMIC_ROOT.

Sat Aug 26 03:24:09 UTC 2006  Sumant Tambe  <sutambe@nospam>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h

          New interpreter after adding support for infoProperty in the DeploymentPlan.

        * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp

          New paradigm after adding support for infoProperty in the DeploymentPlan.

        * PSM/CQML/examples/BasicSP.xme

        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h
        * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.h

          Improved DeploymentPlanFramework Injector interface.

        * PSM/CQML/interpreters/FaultTolerance/FTAdders.cpp
        * PSM/CQML/interpreters/FaultTolerance/FTAdders.h
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.cpp
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.h

          Uses infoProperty.

        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h

          Uses infoProperty.

        * PSM/CQML/paradigms/CQML-uml.xme
        * PSM/CQML/paradigms/CQML.xme
        * PSM/CQML/paradigms/CQML.xml
        * PSM/CQML/paradigms/CQML.xmp

          Added infoProperty support in PICML and CQML DeploymentPlan sheet.

Thu Aug 24 02:59:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:
        * PIM/SIML/examples/SLICE.xme:
        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:
        * PIM/WSML/examples/SLICE.xme:

          Updated files to reflect the latest changes in the paradigms.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:

          Fixed a bug where the directory of the interpreter was not
          included in the list of includes.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:

          Fixed a bug where the namespaces were not separated by a comma
          in the generated code.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updates to ensure that we can use these tools without having an
          internet connection.  Need to figure out a more robust
          solution.

        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICE.wsdl:
        * demos/STI/BDCWebService/SLICEC.cpp:
        * demos/STI/BDCWebService/SLICEH.h:
        * demos/STI/BDCWebService/SLICEStub.h:
        * demos/STI/BDC_CCMClient/BDC_CCMClient.cpp:
        * demos/STI/BDC_WSClient/BDC_Client.cs:

          Minor updates to make the output look good for the demo.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          Removed these files.

Thu Aug 17 02:36:11 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/paradigms/icons/component.bmp:  Updated icon to a
          better looking icon :-)

        * PIM/SIML/examples/SLICE.xme:  Updated example so that the layout
          of the items that we want to show are not convoluted.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:  Updated paradigm to reflect the
          changes in the WSML paradigm.

        * PIM/SIML/paradigms/icons/address.bmp:
        * PIM/SIML/paradigms/icons/binding.bmp:
        * PIM/SIML/paradigms/icons/binding.gif:
        * PIM/SIML/paradigms/icons/bindingoperation.gif:
        * PIM/SIML/paradigms/icons/definitions.gif:
        * PIM/SIML/paradigms/icons/documentation.bmp:
        * PIM/SIML/paradigms/icons/element.bmp:
        * PIM/SIML/paradigms/icons/fault.bmp:
        * PIM/SIML/paradigms/icons/import.bmp:
        * PIM/SIML/paradigms/icons/input.bmp:
        * PIM/SIML/paradigms/icons/message.bmp:
        * PIM/SIML/paradigms/icons/messages.bmp:
        * PIM/SIML/paradigms/icons/notification.bmp:
        * PIM/SIML/paradigms/icons/oneway.gif:
        * PIM/SIML/paradigms/icons/operation.gif:
        * PIM/SIML/paradigms/icons/operationport.gif:
        * PIM/SIML/paradigms/icons/output.bmp:
        * PIM/SIML/paradigms/icons/part.bmp:
        * PIM/SIML/paradigms/icons/port.gif:
        * PIM/SIML/paradigms/icons/porttype.bmp:
        * PIM/SIML/paradigms/icons/requestresponse.bmp:
        * PIM/SIML/paradigms/icons/schema.bmp:
        * PIM/SIML/paradigms/icons/schemaimport.gif:
        * PIM/SIML/paradigms/icons/schemareference.gif:
        * PIM/SIML/paradigms/icons/service.bmp:
        * PIM/SIML/paradigms/icons/soapbinding.gif:
        * PIM/SIML/paradigms/icons/solicitresponse.bmp:
        * PIM/SIML/paradigms/icons/types.bmp:
        * PIM/SIML/paradigms/icons/wsdlport.bmp:

          Icons for the WSML paradigm.

        * PIM/WSML/examples/SLICE.xme:  Updated example so that the layout
          of the items that we want to show are not convoluted.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated paradigm to add icons.

        * PIM/WSML/paradigms/icons/address.bmp:
        * PIM/WSML/paradigms/icons/attribute.bmp:
        * PIM/WSML/paradigms/icons/binding.bmp:
        * PIM/WSML/paradigms/icons/binding.gif:
        * PIM/WSML/paradigms/icons/bindingoperation.gif:
        * PIM/WSML/paradigms/icons/definitions.gif:
        * PIM/WSML/paradigms/icons/documentation.bmp:
        * PIM/WSML/paradigms/icons/element.bmp:
        * PIM/WSML/paradigms/icons/fault.bmp:
        * PIM/WSML/paradigms/icons/import.bmp:
        * PIM/WSML/paradigms/icons/input.bmp:
        * PIM/WSML/paradigms/icons/message.bmp:
        * PIM/WSML/paradigms/icons/messages.bmp:
        * PIM/WSML/paradigms/icons/notification.bmp:
        * PIM/WSML/paradigms/icons/oneway.gif:
        * PIM/WSML/paradigms/icons/operation.gif:
        * PIM/WSML/paradigms/icons/operationport.gif:
        * PIM/WSML/paradigms/icons/output.bmp:
        * PIM/WSML/paradigms/icons/part.bmp:
        * PIM/WSML/paradigms/icons/port.gif:
        * PIM/WSML/paradigms/icons/porttype.bmp:
        * PIM/WSML/paradigms/icons/requestresponse.bmp:
        * PIM/WSML/paradigms/icons/schema.bmp:
        * PIM/WSML/paradigms/icons/schemaimport.gif:
        * PIM/WSML/paradigms/icons/schemareference.gif:
        * PIM/WSML/paradigms/icons/service.bmp:
        * PIM/WSML/paradigms/icons/soapbinding.gif:
        * PIM/WSML/paradigms/icons/solicitresponse.bmp:
        * PIM/WSML/paradigms/icons/types.bmp:
        * PIM/WSML/paradigms/icons/wsdlport.bmp:

          Icons for the WSML paradigm.

Tue Aug 15 22:09:34 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/interpreters/GatewayGenerator/Resource.h: Added file
          necessary to ensure compilation.

Mon Aug 14 23:13:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/decorators/PICMLDecorator.mpc:  Added _WINDLL _USRDLL
          and _ATL_DLL back to the list of macros.  GME crashes without
          these macros.

        * PIM/PICML/examples/SLICE-Path.xme:  Updated to add a timeout
          value of 7 seconds.  This is so that multiple clients can fetch
          the value of the execution time from the BDC.

        * demos/STI/BDC_CCMClient/BDC_CCMClient.cpp:
        * demos/STI/BDC_CCMClient/BDC_CCMClient.mpc:  New CCM client which
          does the same job as the Web Service client.

        * demos/STI/BDC_WSClient/BDC_Client.cs:  Updated WS client to
          print 0 if the Web Service is not yet up.

        * demos/STI/BDCClient/BDCClient.csproj:
        * demos/STI/BDCClient/BDCClient.sln:
        * demos/STI/BDCClient/BDC_Client.cs:
        * demos/STI/BDCClient/CUTSBenchmark_Data_Collector.cs:
        * demos/STI/BDCClient/Properties/AssemblyInfo.cs:

          Removed these files.

Mon Aug 14 02:41:35 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * picml.mwc:  Added new workspace to build just the PICML
          interpreters, decorators and add-ons.

Sun Aug 13 23:04:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * bon.mpb:  Added mfc as a base project, since BON requires mfc in
          almost all cases.

        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
          Updated the files to reflect the refactoring of base projects.

        * PIM/PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:

          Updated to add support for SIML.  I haven't checked in all of
          the files yet, since doing so will require latest alpha version
          of GME.

Sun Aug 13 21:48:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:
        * PIM/WSML/interpreters/WSDLExporter/build.xml:
        * PIM/WSML/interpreters/WSDLImporter/build.xml:

        * bon.mpb:  Don't depend on xerces.  There are interpreters which
          don't need xerces.

        * cqmllib.mpb:
        * picmllib.mpb:  Add xerces explicitly to the list of base
          projects.

        * udm.mpb:  Use UDM_3RDPARTY_PATH to find zlib.

        * demos/STI/BDCClient/BDC_Client.cs:  Reduced the time interval
          for polling the BDC from 20s to 10s.  Catch
          System.Net.WebException to make sure that we don't crash if
          there is any problem with the network.

Wed Aug  9 20:08:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xme:

          Fixed "DanglingAction" constraint.

Wed Aug  9 18:42:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Fixed inconsistency in metamodel and XML backend.

Wed Aug  9 02:38:01 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService/BDC.mpc:

          Updated to reflect the new names for the generated code.

        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.h:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.cpp:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector.nsmap:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollectorService.cpp:

          Added a version of the generated code as a backup.

        * demos/STI/BDCWebService/BDCWebService.cpp:

          Removed this file.

Wed Aug  9 02:07:49 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/SLICE-Path.xme:  Added a new example which
          doesn't depend on database, and has critical path defined.

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
          New file to build the GatewayGenerator interpreter.

Wed Aug  9 00:45:48 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/examples/SLICE.xme:  Updated example to reflect the
          integration of CCM and Web Services.

        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.h:
        * PIM/SIML/interpreters/GatewayGenerator/BON2Component.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/CompIcon.ico:
        * PIM/SIML/interpreters/GatewayGenerator/Component.rc:
        * PIM/SIML/interpreters/GatewayGenerator/ComponentConfig.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/GatewayGeneratorVisitor.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX1.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX2.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX3.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.h:
        * PIM/SIML/interpreters/GatewayGenerator/PICMLBonX4.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/StdAfx.h:
        * PIM/SIML/interpreters/GatewayGenerator/StdAfx.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/WSMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/component.def:

          New interpreter which generates the integration glue code
          automatically from the model.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:

          Updated paradigm to reflect changes that were necessitated by
          the interpreter.

        * bon.mpb:
        * register.mpb:
        * udm.mpb:

          New base projects to reflect their true purpose.

        * demos/STI/BDCWebService/BDCWebService.cpp:
        * demos/STI/BDCWebService/CUTS_Benchmark_Data_Collector.nsmap:
        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICEC.cpp:

          Minor modifications to reflect change in the name of the
          WebService.

        * picmllib.mpb:
        * cqmllib.mpb:

          Refactored the files to use the newly created base projects.

        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.cpp:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrols.nsmap:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.h:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.cpp:

          Removed these files.

Sat Aug  5 20:55:32 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * demos/STI/BDCWebService/BDC.mpc:
        * demos/STI/BDCWebService/BDCWebService.cpp:
        * demos/STI/BDCWebService/CORBA.nsmap:
        * demos/STI/BDCWebService/CORBA.wsdl:
        * demos/STI/BDCWebService/CORBA_.nsmap:
        * demos/STI/BDCWebService/CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrols.nsmap:
        * demos/STI/BDCWebService/SLICE.h:
        * demos/STI/BDCWebService/SLICE.wsdl:
        * demos/STI/BDCWebService/SLICEC.cpp:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.h:
        * demos/STI/BDCWebService/SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.cpp:
        * demos/STI/BDCWebService/SLICEH.h:
        * demos/STI/BDCWebService/SLICEStub.h:
        * demos/STI/BDCWebService/typemap.dat:

          Handwritten implementation of the CUTS Benchmark_Data_Collector
          exposed as a web service.

        * demos/STI/BDCClient/BDCClient.csproj:
        * demos/STI/BDCClient/BDCClient.sln:
        * demos/STI/BDCClient/BDC_Client.cs:
        * demos/STI/BDCClient/CUTSBenchmark_Data_Collector.cs:
        * demos/STI/BDCClient/Properties/AssemblyInfo.cs:

          A web service client written in C# which queries the information
          from the BDC web service.


Sat Aug  5 07:05:06 UTC 2006  Sumant Tambe  <sutambe@nospam>

        * PIM/PICML/examples/RobotAssembly.xme:

          Fixed some minor inconsistencies in the example.

        * PIM/PICML/paradigms/PICML-monolith.xmp:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML/examples/BasicSP.xme:

          Fixed some minor inconsistencies in the example.

        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp:

          Changed the Visitor name.

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:

          Updated the paradigm for NetQoS.

Sat Aug  5 05:40:45 UTC 2006  Sumant Tambe  <sutambe@nospam>

        * PIM/PICML/interpreters/Interpreters.mwc:

        * PIM/PICML/paradigms/PICML-monolith.xme:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PSM/CQML:

        * PSM/CQML/examples:

        * PSM/CQML/examples/BasicSP.xme:

        * PSM/CQML/interpreters:

        * PSM/CQML/interpreters/CQML:

        * PSM/CQML/interpreters/CQML/CQML.mpc:

        * PSM/CQML/interpreters/DeploymentPlanFramework:

        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PSM/CQML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:
        * PSM/CQML/interpreters/DeploymentPlanFramework/Injector.h:

          Moved DeploymentPlanFramework to CQML.

        * PSM/CQML/interpreters/FaultTolerance:

        * PSM/CQML/interpreters/FaultTolerance/FTAdders.h:
        * PSM/CQML/interpreters/FaultTolerance/FTAdders.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.h:
        * PSM/CQML/interpreters/FaultTolerance/FTInjector.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FTVisitors.h:
        * PSM/CQML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PSM/CQML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PSM/CQML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PSM/CQML/interpreters/FaultTolerance/FaultTolerance_Export.h:
        * PSM/CQML/interpreters/FaultTolerance/common.h:

          Added FT interpreter to CQML.

        * PSM/CQML/interpreters/FaultToleranceComponent:

        * PSM/CQML/interpreters/FaultToleranceComponent/CompIcon.ico:
        * PSM/CQML/interpreters/FaultToleranceComponent/Component.def:
        * PSM/CQML/interpreters/FaultToleranceComponent/Component.rc:
        * PSM/CQML/interpreters/FaultToleranceComponent/ComponentConfig.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc:
        * PSM/CQML/interpreters/FaultToleranceComponent/RawComponent.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/RawComponent.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/StdAfx.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/StdAfx.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmApp.cpp:
        * PSM/CQML/interpreters/FaultToleranceComponent/UdmConfig.h:
        * PSM/CQML/interpreters/FaultToleranceComponent/resource.h:

          Added FT interpreter to CQML.

        * PSM/CQML/interpreters/Interpreters.mwc:
        * PSM/CQML/interpreters/NetQoS:

        * PSM/CQML/interpreters/NetQoS/NetQoS.mpc:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.h:
        * PSM/CQML/interpreters/NetQoS/NetQoSVisitor.cpp:
        * PSM/CQML/interpreters/NetQoS/NetQoS_Export.h:

          Added NetQoS interpreter to CQML.

        * PSM/CQML/interpreters/NetQoSComponent:

        * PSM/CQML/interpreters/NetQoSComponent/Component.def:
        * PSM/CQML/interpreters/NetQoSComponent/Component.rc:
        * PSM/CQML/interpreters/NetQoSComponent/ComponentConfig.h:
        * PSM/CQML/interpreters/NetQoSComponent/NetQoSComponent.mpc:
        * PSM/CQML/interpreters/NetQoSComponent/RawComponent.h:
        * PSM/CQML/interpreters/NetQoSComponent/RawComponent.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/StdAfx.h:
        * PSM/CQML/interpreters/NetQoSComponent/StdAfx.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.h:
        * PSM/CQML/interpreters/NetQoSComponent/UdmApp.cpp:
        * PSM/CQML/interpreters/NetQoSComponent/UdmConfig.h:
        * PSM/CQML/interpreters/NetQoSComponent/compicon.ico:
        * PSM/CQML/interpreters/NetQoSComponent/resource.h:

          Added NetQoS interpreter to CQML.

        * PSM/CQML/paradigms:

        * PSM/CQML/paradigms/CQML-uml.xme:
        * PSM/CQML/paradigms/CQML.xme:
        * PSM/CQML/paradigms/CQML.xml:
        * PSM/CQML/paradigms/CQML.xmp:
        * PSM/CQML/paradigms/icons:

        * PSM/CQML/paradigms/icons/Any.bmp:
        * PSM/CQML/paradigms/icons/Assembly.bmp:
        * PSM/CQML/paradigms/icons/AttributeMapping.bmp:
        * PSM/CQML/paradigms/icons/Average.bmp:
        * PSM/CQML/paradigms/icons/BandedConnection.bmp:
        * PSM/CQML/paradigms/icons/BandedConnectionRef.bmp:
        * PSM/CQML/paradigms/icons/Bridge.bmp:
        * PSM/CQML/paradigms/icons/Capability.bmp:
        * PSM/CQML/paradigms/icons/ComponentPackage.bmp:
        * PSM/CQML/paradigms/icons/ComponentProperty.bmp:
        * PSM/CQML/paradigms/icons/ComponentSet.bmp:
        * PSM/CQML/paradigms/icons/ConnectionBand.bmp:
        * PSM/CQML/paradigms/icons/Connector.bmp:
        * PSM/CQML/paradigms/icons/DataType.bmp:
        * PSM/CQML/paradigms/icons/Discrete-Benchmark.bmp:
        * PSM/CQML/paradigms/icons/Domain.bmp:
        * PSM/CQML/paradigms/icons/EnvironmentConf.bmp:
        * PSM/CQML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PSM/CQML/paradigms/icons/FOU.bmp:
        * PSM/CQML/paradigms/icons/ImplementationArtifact.bmp:
        * PSM/CQML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PSM/CQML/paradigms/icons/ImplementationDependency.bmp:
        * PSM/CQML/paradigms/icons/ImplementationReference.bmp:
        * PSM/CQML/paradigms/icons/ImplementationRequirement.bmp:
        * PSM/CQML/paradigms/icons/InputAction.bmp:
        * PSM/CQML/paradigms/icons/Interconnect.bmp:
        * PSM/CQML/paradigms/icons/Jitter.bmp:
        * PSM/CQML/paradigms/icons/Latency.bmp:
        * PSM/CQML/paradigms/icons/Max.bmp:
        * PSM/CQML/paradigms/icons/Min.bmp:
        * PSM/CQML/paradigms/icons/MonolithicImplementation.bmp:
        * PSM/CQML/paradigms/icons/Node.bmp:
        * PSM/CQML/paradigms/icons/NodeGroup.bmp:
        * PSM/CQML/paradigms/icons/OutputAction.bmp:
        * PSM/CQML/paradigms/icons/PackageConfiguration.bmp:
        * PSM/CQML/paradigms/icons/PackageConfigurationReference.bmp:
        * PSM/CQML/paradigms/icons/PackageReference.bmp:
        * PSM/CQML/paradigms/icons/Periodic-Bench.bmp:
        * PSM/CQML/paradigms/icons/PolicySet.bmp:
        * PSM/CQML/paradigms/icons/PolicySetRef.bmp:
        * PSM/CQML/paradigms/icons/PriorityModelPolicy.bmp:
        * PSM/CQML/paradigms/icons/Property.bmp:
        * PSM/CQML/paradigms/icons/RPG.bmp:
        * PSM/CQML/paradigms/icons/RTModel.bmp:
        * PSM/CQML/paradigms/icons/Requirement.bmp:
        * PSM/CQML/paradigms/icons/Resource.bmp:
        * PSM/CQML/paradigms/icons/ResourceContainer.bmp:
        * PSM/CQML/paradigms/icons/SatisfierProperty.bmp:
        * PSM/CQML/paradigms/icons/SharedResource.bmp:
        * PSM/CQML/paradigms/icons/SharedRiskGroup.bmp:
        * PSM/CQML/paradigms/icons/SimpleThreadPool.bmp:
        * PSM/CQML/paradigms/icons/StartState.bmp:
        * PSM/CQML/paradigms/icons/State.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolLane.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolRef.bmp:
        * PSM/CQML/paradigms/icons/ThreadPoolWithLanes.bmp:
        * PSM/CQML/paradigms/icons/Throughput.bmp:
        * PSM/CQML/paradigms/icons/TimerState.bmp:
        * PSM/CQML/paradigms/icons/TopLevelPackage.bmp:
        * PSM/CQML/paradigms/icons/Trigger-Bench.bmp:
        * PSM/CQML/paradigms/icons/action.bmp:
        * PSM/CQML/paradigms/icons/aggregate.bmp:
        * PSM/CQML/paradigms/icons/aggregateref.bmp:
        * PSM/CQML/paradigms/icons/alias.bmp:
        * PSM/CQML/paradigms/icons/aliasref.bmp:
        * PSM/CQML/paradigms/icons/attribute.bmp:
        * PSM/CQML/paradigms/icons/boolean.bmp:
        * PSM/CQML/paradigms/icons/boxed.bmp:
        * PSM/CQML/paradigms/icons/boxedref.bmp:
        * PSM/CQML/paradigms/icons/byte.bmp:
        * PSM/CQML/paradigms/icons/comp-proj.bmp:
        * PSM/CQML/paradigms/icons/component.bmp:
        * PSM/CQML/paradigms/icons/componentfactory.bmp:
        * PSM/CQML/paradigms/icons/componentfactoryref.bmp:
        * PSM/CQML/paradigms/icons/componentref.bmp:
        * PSM/CQML/paradigms/icons/composite.bmp:
        * PSM/CQML/paradigms/icons/conjunction_group.bmp:
        * PSM/CQML/paradigms/icons/const.bmp:
        * PSM/CQML/paradigms/icons/discriminator.bmp:
        * PSM/CQML/paradigms/icons/disjunction_group.bmp:
        * PSM/CQML/paradigms/icons/ec_consumer.bmp:
        * PSM/CQML/paradigms/icons/ec_dependency.bmp:
        * PSM/CQML/paradigms/icons/ec_event.bmp:
        * PSM/CQML/paradigms/icons/ec_option.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/ec_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/ec_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/ec_supplier.bmp:
        * PSM/CQML/paradigms/icons/ec_supplier_id.bmp:
        * PSM/CQML/paradigms/icons/enum.bmp:
        * PSM/CQML/paradigms/icons/enumref.bmp:
        * PSM/CQML/paradigms/icons/enumvalue.bmp:
        * PSM/CQML/paradigms/icons/event.bmp:
        * PSM/CQML/paradigms/icons/event_sink.bmp:
        * PSM/CQML/paradigms/icons/event_source.bmp:
        * PSM/CQML/paradigms/icons/eventref.bmp:
        * PSM/CQML/paradigms/icons/eventtype-port.bmp:
        * PSM/CQML/paradigms/icons/eventtype.bmp:
        * PSM/CQML/paradigms/icons/exception.bmp:
        * PSM/CQML/paradigms/icons/exceptionref.bmp:
        * PSM/CQML/paradigms/icons/factory.bmp:
        * PSM/CQML/paradigms/icons/file.bmp:
        * PSM/CQML/paradigms/icons/fileref.bmp:
        * PSM/CQML/paradigms/icons/genericobject.bmp:
        * PSM/CQML/paradigms/icons/genericvalue.bmp:
        * PSM/CQML/paradigms/icons/genericvalueobject.bmp:
        * PSM/CQML/paradigms/icons/getexception.bmp:
        * PSM/CQML/paradigms/icons/in.bmp:
        * PSM/CQML/paradigms/icons/inevent_lf.bmp:
        * PSM/CQML/paradigms/icons/inevent_rt.bmp:
        * PSM/CQML/paradigms/icons/ineventport.bmp:
        * PSM/CQML/paradigms/icons/inherits.bmp:
        * PSM/CQML/paradigms/icons/inout.bmp:
        * PSM/CQML/paradigms/icons/label.bmp:
        * PSM/CQML/paradigms/icons/logical_and_group.bmp:
        * PSM/CQML/paradigms/icons/long.bmp:
        * PSM/CQML/paradigms/icons/lookup.bmp:
        * PSM/CQML/paradigms/icons/lookupkey.bmp:
        * PSM/CQML/paradigms/icons/member.bmp:
        * PSM/CQML/paradigms/icons/ns_admin.bmp:
        * PSM/CQML/paradigms/icons/ns_config.bmp:
        * PSM/CQML/paradigms/icons/ns_constraint.bmp:
        * PSM/CQML/paradigms/icons/ns_consumer.bmp:
        * PSM/CQML/paradigms/icons/ns_event.bmp:
        * PSM/CQML/paradigms/icons/ns_filter-port.bmp:
        * PSM/CQML/paradigms/icons/ns_filter.bmp:
        * PSM/CQML/paradigms/icons/ns_option.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/ns_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/ns_qos-port.bmp:
        * PSM/CQML/paradigms/icons/ns_qos.bmp:
        * PSM/CQML/paradigms/icons/ns_resource_factory-port.bmp:
        * PSM/CQML/paradigms/icons/ns_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/ns_supplier.bmp:
        * PSM/CQML/paradigms/icons/object.bmp:
        * PSM/CQML/paradigms/icons/objectref.bmp:
        * PSM/CQML/paradigms/icons/oneway.bmp:
        * PSM/CQML/paradigms/icons/operationref.bmp:
        * PSM/CQML/paradigms/icons/out.bmp:
        * PSM/CQML/paradigms/icons/outevent_lf.bmp:
        * PSM/CQML/paradigms/icons/outevent_rt.bmp:
        * PSM/CQML/paradigms/icons/outeventport.bmp:
        * PSM/CQML/paradigms/icons/package.bmp:
        * PSM/CQML/paradigms/icons/private.bmp:
        * PSM/CQML/paradigms/icons/project.bmp:
        * PSM/CQML/paradigms/icons/providedrequestport.bmp:
        * PSM/CQML/paradigms/icons/readonlyattribute.bmp:
        * PSM/CQML/paradigms/icons/realnumber.bmp:
        * PSM/CQML/paradigms/icons/receptacle_lf.bmp:
        * PSM/CQML/paradigms/icons/receptacle_rt.bmp:
        * PSM/CQML/paradigms/icons/requiredrequestport.bmp:
        * PSM/CQML/paradigms/icons/return.bmp:
        * PSM/CQML/paradigms/icons/rt_info-port.bmp:
        * PSM/CQML/paradigms/icons/rt_info.bmp:
        * PSM/CQML/paradigms/icons/rtec_proxy_consumer.bmp:
        * PSM/CQML/paradigms/icons/rtec_proxy_supplier.bmp:
        * PSM/CQML/paradigms/icons/rtec_resource_factory-port.bmp:
        * PSM/CQML/paradigms/icons/rtec_resource_factory.bmp:
        * PSM/CQML/paradigms/icons/setexception.bmp:
        * PSM/CQML/paradigms/icons/setexceptionref.bmp:
        * PSM/CQML/paradigms/icons/short.bmp:
        * PSM/CQML/paradigms/icons/string.bmp:
        * PSM/CQML/paradigms/icons/supports.bmp:
        * PSM/CQML/paradigms/icons/switchedaggregate.bmp:
        * PSM/CQML/paradigms/icons/switchedaggregateref.bmp:
        * PSM/CQML/paradigms/icons/task.bmp:
        * PSM/CQML/paradigms/icons/taskset.bmp:
        * PSM/CQML/paradigms/icons/timer.bmp:
        * PSM/CQML/paradigms/icons/twoway.bmp:
        * PSM/CQML/paradigms/icons/typeencoding.bmp:
        * PSM/CQML/paradigms/icons/typekind.bmp:
        * PSM/CQML/paradigms/icons/value.bmp:
        * PSM/CQML/paradigms/icons/valueref.bmp:
        * PSM/CQML/paradigms/icons/variablecollection.bmp:
        * PSM/CQML/paradigms/icons/variablecollectionref.bmp:
        * PSM/CQML/paradigms/icons/vertex.bmp:
        * PSM/CQML/paradigms/icons/worker.gif:
        * PSM/CQML/paradigms/icons/workerref.gif:
        * PSM/CQML/paradigms/icons/workspace.bmp:

          Added a whole bunch of icons.

        * cosmic.mwc:
        * cqmllib.mpb:

          Moved following these files to COSMIC_ROOT/PSM/CQML/interpreters

        * PIM/PICML/interpreters/DeploymentPlanFramework:

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

        * PIM/PICML/interpreters/FaultTolerance:

        * PIM/PICML/interpreters/FaultTolerance/FTAdders.h:
        * PIM/PICML/interpreters/FaultTolerance/FTAdders.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.h:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.h:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance_Export.h:
        * PIM/PICML/interpreters/FaultTolerance/common.h:

        * PIM/PICML/interpreters/FaultToleranceComponent:

        * PIM/PICML/interpreters/FaultToleranceComponent/CompIcon.ico:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.aps:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.def:
        * PIM/PICML/interpreters/FaultToleranceComponent/Component.rc:
        * PIM/PICML/interpreters/FaultToleranceComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/FaultToleranceComponent.mpc:
        * PIM/PICML/interpreters/FaultToleranceComponent/RawComponent.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/StdAfx.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/FaultToleranceComponent/UdmConfig.h:
        * PIM/PICML/interpreters/FaultToleranceComponent/resource.h:

          QoS characteristics such as RT, FT and Event-channel configuration
          has been removed out of PICML and are moved to new PSM level language
          called CQML. The old version of PICML can be found in PICML-monolith.xme.

          The new PSM level language, CQML, has been added to COSMIC_ROOT/PSM/.
          FT interpreter has been moved to be a CQML interpreter rather than
          PICML interpreter. NetQoS interpreter has been added for CQML. The
          DeploymentPlanFramework has also been moved to CQML.

Sat Aug  5 03:04:39 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/SIML/examples/SLICE.xme: Example model of SLICE scenario in
          SIML.

        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLBonX.cpp:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.h:
        * PIM/SIML/interpreters/GatewayGenerator/SIMLVisitor.cpp:

          Bon Extender files for SIML.  These need tweaking.

        * PIM/SIML/paradigms/SIML.xme:
        * PIM/SIML/paradigms/SIML.xmp:
        * PIM/SIML/paradigms/icons/Any.bmp:
        * PIM/SIML/paradigms/icons/Assembly.bmp:
        * PIM/SIML/paradigms/icons/AttributeMapping.bmp:
        * PIM/SIML/paradigms/icons/Average.bmp:
        * PIM/SIML/paradigms/icons/BandedConnection.bmp:
        * PIM/SIML/paradigms/icons/BandedConnectionRef.bmp:
        * PIM/SIML/paradigms/icons/Bridge.bmp:
        * PIM/SIML/paradigms/icons/Capability.bmp:
        * PIM/SIML/paradigms/icons/ComponentPackage.bmp:
        * PIM/SIML/paradigms/icons/ComponentProperty.bmp:
        * PIM/SIML/paradigms/icons/ComponentSet.bmp:
        * PIM/SIML/paradigms/icons/ConnectionBand.bmp:
        * PIM/SIML/paradigms/icons/Connector.bmp:
        * PIM/SIML/paradigms/icons/DataType.bmp:
        * PIM/SIML/paradigms/icons/Discrete-Benchmark.bmp:
        * PIM/SIML/paradigms/icons/Domain.bmp:
        * PIM/SIML/paradigms/icons/EnvironmentConf.bmp:
        * PIM/SIML/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * PIM/SIML/paradigms/icons/FOU.bmp:
        * PIM/SIML/paradigms/icons/ImplementationArtifact.bmp:
        * PIM/SIML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PIM/SIML/paradigms/icons/ImplementationDependency.bmp:
        * PIM/SIML/paradigms/icons/ImplementationReference.bmp:
        * PIM/SIML/paradigms/icons/ImplementationRequirement.bmp:
        * PIM/SIML/paradigms/icons/InputAction.bmp:
        * PIM/SIML/paradigms/icons/Interconnect.bmp:
        * PIM/SIML/paradigms/icons/Jitter.bmp:
        * PIM/SIML/paradigms/icons/Latency.bmp:
        * PIM/SIML/paradigms/icons/Max.bmp:
        * PIM/SIML/paradigms/icons/Min.bmp:
        * PIM/SIML/paradigms/icons/MonolithicImplementation.bmp:
        * PIM/SIML/paradigms/icons/Node.bmp:
        * PIM/SIML/paradigms/icons/NodeGroup.bmp:
        * PIM/SIML/paradigms/icons/OutputAction.bmp:
        * PIM/SIML/paradigms/icons/PackageConfiguration.bmp:
        * PIM/SIML/paradigms/icons/PackageConfigurationReference.bmp:
        * PIM/SIML/paradigms/icons/PackageReference.bmp:
        * PIM/SIML/paradigms/icons/Periodic-Bench.bmp:
        * PIM/SIML/paradigms/icons/PolicySet.bmp:
        * PIM/SIML/paradigms/icons/PolicySetRef.bmp:
        * PIM/SIML/paradigms/icons/PriorityModelPolicy.bmp:
        * PIM/SIML/paradigms/icons/Property.bmp:
        * PIM/SIML/paradigms/icons/RPG.bmp:
        * PIM/SIML/paradigms/icons/RTModel.bmp:
        * PIM/SIML/paradigms/icons/Requirement.bmp:
        * PIM/SIML/paradigms/icons/Resource.bmp:
        * PIM/SIML/paradigms/icons/ResourceContainer.bmp:
        * PIM/SIML/paradigms/icons/SatisfierProperty.bmp:
        * PIM/SIML/paradigms/icons/SharedResource.bmp:
        * PIM/SIML/paradigms/icons/SharedRiskGroup.bmp:
        * PIM/SIML/paradigms/icons/SimpleThreadPool.bmp:
        * PIM/SIML/paradigms/icons/StartState.bmp:
        * PIM/SIML/paradigms/icons/State.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolLane.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolRef.bmp:
        * PIM/SIML/paradigms/icons/ThreadPoolWithLanes.bmp:
        * PIM/SIML/paradigms/icons/Throughput.bmp:
        * PIM/SIML/paradigms/icons/TimerState.bmp:
        * PIM/SIML/paradigms/icons/TopLevelPackage.bmp:
        * PIM/SIML/paradigms/icons/Trigger-Bench.bmp:
        * PIM/SIML/paradigms/icons/action.bmp:
        * PIM/SIML/paradigms/icons/aggregate.bmp:
        * PIM/SIML/paradigms/icons/aggregateref.bmp:
        * PIM/SIML/paradigms/icons/alias.bmp:
        * PIM/SIML/paradigms/icons/aliasref.bmp:
        * PIM/SIML/paradigms/icons/attribute.bmp:
        * PIM/SIML/paradigms/icons/boolean.bmp:
        * PIM/SIML/paradigms/icons/boxed.bmp:
        * PIM/SIML/paradigms/icons/boxedref.bmp:
        * PIM/SIML/paradigms/icons/byte.bmp:
        * PIM/SIML/paradigms/icons/comp-proj.bmp:
        * PIM/SIML/paradigms/icons/component.bmp:
        * PIM/SIML/paradigms/icons/componentfactory.bmp:
        * PIM/SIML/paradigms/icons/componentfactoryref.bmp:
        * PIM/SIML/paradigms/icons/componentref.bmp:
        * PIM/SIML/paradigms/icons/composite.bmp:
        * PIM/SIML/paradigms/icons/conjunction_group.bmp:
        * PIM/SIML/paradigms/icons/const.bmp:
        * PIM/SIML/paradigms/icons/discriminator.bmp:
        * PIM/SIML/paradigms/icons/disjunction_group.bmp:
        * PIM/SIML/paradigms/icons/ec_consumer.bmp:
        * PIM/SIML/paradigms/icons/ec_dependency.bmp:
        * PIM/SIML/paradigms/icons/ec_event.bmp:
        * PIM/SIML/paradigms/icons/ec_option.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/ec_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/ec_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/ec_supplier.bmp:
        * PIM/SIML/paradigms/icons/ec_supplier_id.bmp:
        * PIM/SIML/paradigms/icons/enum.bmp:
        * PIM/SIML/paradigms/icons/enumref.bmp:
        * PIM/SIML/paradigms/icons/enumvalue.bmp:
        * PIM/SIML/paradigms/icons/event.bmp:
        * PIM/SIML/paradigms/icons/event_sink.bmp:
        * PIM/SIML/paradigms/icons/event_source.bmp:
        * PIM/SIML/paradigms/icons/eventref.bmp:
        * PIM/SIML/paradigms/icons/eventtype-port.bmp:
        * PIM/SIML/paradigms/icons/eventtype.bmp:
        * PIM/SIML/paradigms/icons/exception.bmp:
        * PIM/SIML/paradigms/icons/exceptionref.bmp:
        * PIM/SIML/paradigms/icons/factory.bmp:
        * PIM/SIML/paradigms/icons/file.bmp:
        * PIM/SIML/paradigms/icons/fileref.bmp:
        * PIM/SIML/paradigms/icons/genericobject.bmp:
        * PIM/SIML/paradigms/icons/genericvalue.bmp:
        * PIM/SIML/paradigms/icons/genericvalueobject.bmp:
        * PIM/SIML/paradigms/icons/getexception.bmp:
        * PIM/SIML/paradigms/icons/in.bmp:
        * PIM/SIML/paradigms/icons/inevent_lf.bmp:
        * PIM/SIML/paradigms/icons/inevent_rt.bmp:
        * PIM/SIML/paradigms/icons/ineventport.bmp:
        * PIM/SIML/paradigms/icons/inherits.bmp:
        * PIM/SIML/paradigms/icons/inout.bmp:
        * PIM/SIML/paradigms/icons/label.bmp:
        * PIM/SIML/paradigms/icons/logical_and_group.bmp:
        * PIM/SIML/paradigms/icons/long.bmp:
        * PIM/SIML/paradigms/icons/lookup.bmp:
        * PIM/SIML/paradigms/icons/lookupkey.bmp:
        * PIM/SIML/paradigms/icons/member.bmp:
        * PIM/SIML/paradigms/icons/ns_admin.bmp:
        * PIM/SIML/paradigms/icons/ns_config.bmp:
        * PIM/SIML/paradigms/icons/ns_constraint.bmp:
        * PIM/SIML/paradigms/icons/ns_consumer.bmp:
        * PIM/SIML/paradigms/icons/ns_event.bmp:
        * PIM/SIML/paradigms/icons/ns_filter-port.bmp:
        * PIM/SIML/paradigms/icons/ns_filter.bmp:
        * PIM/SIML/paradigms/icons/ns_option.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/ns_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/ns_qos-port.bmp:
        * PIM/SIML/paradigms/icons/ns_qos.bmp:
        * PIM/SIML/paradigms/icons/ns_resource_factory-port.bmp:
        * PIM/SIML/paradigms/icons/ns_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/ns_supplier.bmp:
        * PIM/SIML/paradigms/icons/object.bmp:
        * PIM/SIML/paradigms/icons/objectref.bmp:
        * PIM/SIML/paradigms/icons/oneway.bmp:
        * PIM/SIML/paradigms/icons/operationref.bmp:
        * PIM/SIML/paradigms/icons/out.bmp:
        * PIM/SIML/paradigms/icons/outevent_lf.bmp:
        * PIM/SIML/paradigms/icons/outevent_rt.bmp:
        * PIM/SIML/paradigms/icons/outeventport.bmp:
        * PIM/SIML/paradigms/icons/package.bmp:
        * PIM/SIML/paradigms/icons/private.bmp:
        * PIM/SIML/paradigms/icons/project.bmp:
        * PIM/SIML/paradigms/icons/providedrequestport.bmp:
        * PIM/SIML/paradigms/icons/readonlyattribute.bmp:
        * PIM/SIML/paradigms/icons/realnumber.bmp:
        * PIM/SIML/paradigms/icons/receptacle_lf.bmp:
        * PIM/SIML/paradigms/icons/receptacle_rt.bmp:
        * PIM/SIML/paradigms/icons/requiredrequestport.bmp:
        * PIM/SIML/paradigms/icons/return.bmp:
        * PIM/SIML/paradigms/icons/rt_info-port.bmp:
        * PIM/SIML/paradigms/icons/rt_info.bmp:
        * PIM/SIML/paradigms/icons/rtec_proxy_consumer.bmp:
        * PIM/SIML/paradigms/icons/rtec_proxy_supplier.bmp:
        * PIM/SIML/paradigms/icons/rtec_resource_factory-port.bmp:
        * PIM/SIML/paradigms/icons/rtec_resource_factory.bmp:
        * PIM/SIML/paradigms/icons/setexception.bmp:
        * PIM/SIML/paradigms/icons/setexceptionref.bmp:
        * PIM/SIML/paradigms/icons/short.bmp:
        * PIM/SIML/paradigms/icons/string.bmp:
        * PIM/SIML/paradigms/icons/supports.bmp:
        * PIM/SIML/paradigms/icons/switchedaggregate.bmp:
        * PIM/SIML/paradigms/icons/switchedaggregateref.bmp:
        * PIM/SIML/paradigms/icons/task.bmp:
        * PIM/SIML/paradigms/icons/taskset.bmp:
        * PIM/SIML/paradigms/icons/timer.bmp:
        * PIM/SIML/paradigms/icons/twoway.bmp:
        * PIM/SIML/paradigms/icons/typeencoding.bmp:
        * PIM/SIML/paradigms/icons/typekind.bmp:
        * PIM/SIML/paradigms/icons/value.bmp:
        * PIM/SIML/paradigms/icons/valueref.bmp:
        * PIM/SIML/paradigms/icons/variablecollection.bmp:
        * PIM/SIML/paradigms/icons/variablecollectionref.bmp:
        * PIM/SIML/paradigms/icons/vertex.bmp:
        * PIM/SIML/paradigms/icons/worker.gif:
        * PIM/SIML/paradigms/icons/workerref.gif:
        * PIM/SIML/paradigms/icons/workspace.bmp:

          New metamodel for SIML (System Integration Modeling Language).

Thu Aug  3 04:38:25 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/examples/AmazonWebServices.wsdl:
        * PIM/WSML/examples/AmazonWebServices.xme:
        * PIM/WSML/examples/CORBA.wsdl:
        * PIM/WSML/examples/CORBA.xsd:
        * PIM/WSML/examples/GoogleSearch.wsdl:
        * PIM/WSML/examples/GoogleSearch.xme:
        * PIM/WSML/examples/SLICE.wsdl:
        * PIM/WSML/examples/SLICE.xme:

          New directory with some example models and WSDL files.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:

          Fixed a bug where we generated mis-matched names of messages
          between portType and binding.

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xml:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated to reflect the latest round of changes.

Tue Aug  1 17:04:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/RawComponent.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp:

          The UUID manager now manages (creates/valdates) the UUIDs of
          the following PICML elements:

            - Component
            - ComponentAssembly
            - ComponentPackage
            - ComponentImplementation
            - DeploymentPlan
            - Domain
            - ImplementationArtifact
            - MonolithicImplementation

Tue Aug  1 15:14:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Added an activate environment input action to all components
          with a database worker so that a database connection could
          be established at component activation time.

Sun Jul 30 05:38:29 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xml:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated metamodel to add an attribute called Order on Element
          which allows us to preserver the ordering of elements within a
          Schema.  Also removed the gazillion built-in types by creating a
          single element called AtomicType, which has an enum attribute
          with the various typecode choices.

        * PIM/WSML/interpreters/WSDLExporter/build.xml:

        * PIM/WSML/interpreters/WSDLExporter/src/WSML.xsd:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExporter.java:

          First working version of the WSDLExporter.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_1.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/AtomicType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Attribute.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Binding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingPortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindsOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyParts.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Definitions.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Documentation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Element.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibilityElement.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensiblePort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FactoryRepository.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Fault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderPart.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/IORef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Import.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Input.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Message.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MessageRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Messages.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MgaObject.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/NotificationOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OneWayOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Operation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OperationRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Output.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Part.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PartRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Port.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Referrable.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RequestResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolder.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderFileFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderStringFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPAddress.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBody.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFaultExtension.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeader.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaderFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaders.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Schema.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaBuiltins.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaImport.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaReference.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Service.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SolicitResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Types.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Utils.java:
        * PIM/WSML/interpreters/WSDLExporter/src/test/TestExample.java:

        * PIM/WSML/interpreters/WSDLImporter/build.xml:

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updates to accomodate changes to the metamodel.


        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PrimitiveTypes.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsAnyUri.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBase64Binary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBoolean.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDate.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDateTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDecimal.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDouble.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDuration.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntities.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntity.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsFloat.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonthDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYear.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYearMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsHexBinary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsId.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRefs.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLanguage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNcName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmTokens.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNormalizedString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNotation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsQName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedShort.java:

          Removed these files.

Fri Jul 28 19:32:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          Rewrote class binding_visitor to traverse the AST for
          all its actions, instead of traversing the DOM tree for
          some of them, and generating based on the contents of
          the corresponding port_type elements. This latter approach
          made the correctness of the generated XML dependent on
          the order of processing IDL files on the command line.
          Also refactored generation of 'fault' elements in class
          port_type_visitor to be similar to that conceived for
          class binding_visitor.

Fri Jul 28 17:11:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/RawComponent.cpp (verify_uuid):

          Fixed bug in UUID manager that was causing an infinite loop
          when a component was added to the model. It was a result
          of using CW2A () incorrectly.

          Currently, this bug was only present in the vc8 version.

Fri Jul 28 16:38:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Fixed build error on vc8 resulting from insert () operation
          when constructing the hashdef for the CIDL file.

Fri Jul 28 04:37:56 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Refactored the model to reduce the number of projects generated
          by the CUTS interpreter and showcase some of the new functionality
          of the CIDL and CUTS interpreter.

Fri Jul 28 02:51:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDLComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/CIDL_Interpreter/CIDL_Interpreter.mpc:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Changed the entry point for the intepreter. Instead of creating
          CIDL files based on the interface definitions, we now genereate
          CIDL files based on the component implemenations.

        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.cpp:

          Removed these files.

Thu Jul 27 19:09:15 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed typos in code generation.

Thu Jul 27 15:01:56 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          Fixed several minor problems.

Thu Jul 27 04:00:09 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLExporter/build.xml:  Updated to use
          SLICE as example.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:

          Initial attempt at WSDL export.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Separate the type definitions into elements and types, and add
          them into separate maps.  This ensures that we have accurate
          type information.

        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/lib/edu/vanderbilt/isis/gme/xme/Value.java:

          Removed these files.

Wed Jul 26 22:21:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp::

          Added support for interfaces as members and operation
          parameters.

Wed Jul 26 20:46:00 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:

          - Added 'schemaLocation' attribute to 'schema' element under
            'types'.

          - Added 'name' attribute to 'fault' element under 'binding'.

          - Removed all occurrences of 'Service', 'Binding', and 'Port'
            suffixes from generated code - they are not required by
            the mapping.

Wed Jul 26 04:00:55 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Reverted the change that removed slashes in File element names
          so that CUTS generated files still compile.  Jeff is working on
          the right fix.

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:  Added an
          int return type to the member function to make it compile using
          VC8.

        * PIM/WSML/interpreters/WSDLExporter/build.xml:  New ant build file for
          building WSDLExporter tool.

        * PIM/WSML/interpreters/WSDLExporter/src/WSML.xsd:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExportVisitor.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/dre/WSML/WSDLExporter/WSDLExporter.java:

          Files for the WSDLExporter tool.

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_udm_xml_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_0.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/meta/WSML_xsd_1.java:

        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Attribute.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Binding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingPortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindingRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BindsOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/BodyParts.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Definitions.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Documentation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Element.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibilityElement.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensibleOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/ExtensiblePort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FactoryRepository.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Fault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/FaultRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/HeaderPart.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/IORef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Import.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Input.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/InputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Message.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MessageRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Messages.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/MgaObject.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/NotificationOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OneWayOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Operation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OperationRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Output.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputMessage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/OutputRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Part.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PartRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Port.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PortType.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/PrimitiveTypes.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Referrable.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RequestResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolder.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderFileFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/RootFolderStringFactory.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPAddress.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBinding.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPBody.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPFaultExtension.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeader.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaderFault.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPHeaders.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SOAPOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Schema.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaBuiltins.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaImport.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SchemaReference.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Service.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/SolicitResponseOperation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Types.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/Utils.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsAnyUri.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBase64Binary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsBoolean.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDate.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDateTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDecimal.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDouble.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsDuration.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntities.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsEntity.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsFloat.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGMonthDay.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYear.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsGYearMonth.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsHexBinary.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsId.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRef.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsIdRefs.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLanguage.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNcName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNmTokens.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonNegativeInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNonPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNormalizedString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsNotation.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsPositiveInteger.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsQName.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsString.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsTime.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsToken.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedByte.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedInt.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedLong.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/XsUnsignedShort.java:
        * PIM/WSML/interpreters/WSDLExporter/src/edu/vanderbilt/isis/wsml/package.html:

        * PIM/WSML/interpreters/WSDLExporter/src/test/TestExample.java:

          Udm generated API for WSML metamodel.

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Updated ant
          buildfile to build using environment variables.

        * PIM/WSML/paradigms/WSML-uml.xme:
        * PIM/WSML/paradigms/WSML.xml:

          New files required to use WSML with Udm.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Updated paradigm to put all the Message elements in a Definition
          underneath a Messages element, as they were polluting the
          top-level of a Definition.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updated WSDLImporter to reflect changes in the paradigm.  The
          WSDLImporter also does validation of the input WSDL file against
          the WSDL schema.  So, the WSDLImporter only accepts valid WSDL
          files.

Tue Jul 25 23:24:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * POIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * POIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:

          Fixed bug in 'import' attribute generation, and in 'name'
          attribute generation for ComplexType (IDL sequence).

Tue Jul 25 19:10:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed bug in message part generation when the type is array
          or sequence, and factored out some common type name
          generating code.

Tue Jul 25 17:00:29 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLStream.cpp:

          - Added logic to discover and generate an IDL #include
            for a base component, if it is in a different File
            model than its child.

          - Changed generation of filenames for output to always use
            the stripped name of the File model, removing any forward
            slashes that may have been added for other reasons.

          - Fixed a bug in the logic of ordering model elements in a
            given scope for IDL generation.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:

          Removed generation of 'xsd' qualifier before 'types' element.

        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:

          Changed to lower case some overlooked occurrences of 'SOAP-ENC'.

Mon Jul 24 19:56:25 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:

          Changed installation of executable to $COSMIC_ROOT/bin.

Sun Jul 23 04:36:42 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Changed the names of the built-in types to be prefixed by Xs so
          that confusion doesn't reign when types such as int are used in
          the BON Extender code.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Updated to reflect change in the paradigm.

Sun Jul 23 03:10:54 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/binding_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/message_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/port_type_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/service_visitor.h:

          New visitors, specialized to add types, messages, port
          types, bindings and services to the generated WSDL document.

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_produce.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/README:

          Modified files. The idl_to_wsdl_visitor class is now a base
          class for the new visitors described above.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.h:

          Removed files, stream output is not used by this backend.

Sat Jul 22 08:20:28 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC.ise: Updated installer to reflect new release
          of CoSMIC.

        * Installer/CoSMIC-Installer.aip:
        * Installer/CoSMIC-Installer.ise:

          Removed these files.

        * Installer/RegisterParadigm/RegisterParadigm.cpp: Updated the
          file to remove registration of OCML, since we don't release OCML
          anymore.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:  Updated to reflect upcoming
          CoSMIC-0.5.2.

        * default.features:  Added cidl=1 to enable building CUTS.
          Unnecessary complications...

        * Release.mwc:  New file to allow building all the pieces of
          CoSMIC that should be released.

Sat Jul 22 04:52:02 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          First complete version of the WSDLImporter.  Still needs work
          with respect to placement of elements.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:

          Minor modifications including removal of name attribute from
          Definitions.

Fri Jul 21 08:22:32 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml: Minor updates.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Closer to completion, but not yet there.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:  Updated paradigm to make the
          connection between a BindingOperation and the bound Operation of
          the PortType explicit.

Thu Jul 20 09:06:55 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Updated to
          reflect the parameters used for testing.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          Added more functionality.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          Regenerated to fix the problem with the original dtd2xsd
          conversion.

        * PIM/WSML/interpreters/WSDLImporter/mga.xsd:  Added the converted
          mga.xsd file so that it is permanent.

        * PIM/WSML/paradigms/WSML.xme:
        * PIM/WSML/paradigms/WSML.xmp:  Updated to move Port into
          Service.

Wed Jul 19 23:56:47 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Updated the
          visitor such that config/info properties attached to a component
          type are captured in the ccd file.

Tue Jul 18 03:08:12 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml: Updated the file
          such that this file doesn't need to be modified locally.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:

          Updated to reflect the split of the visitor logic into a
          separate class.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/XmlExportVisitor.java:

          New file which implements the visitation logic.

        * PIM/WSML/paradigms/WSML.xmp:  Added the paradigm file too to the
          repository.
        * PIM/WSML/paradigms/WSML.xme:  Updated paradigm to support
          setting attributes on a Definitions element.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/BindingImpl.java:

          Removed this file.

Fri Jul 14 22:28:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/interpreters/WSDLImporter/build.xml:  Ant file for
          building WSDLImporter.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/BindingImpl.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/Visitor.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/dre/WSML/WSDLImporter/WSDLImporter.java:

          WSDImporter java source files.

        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Atom.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Attribute.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Author.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Comment.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connection.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Connpoint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Constraint.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Folder.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Model.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Name.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/ObjectFactory.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Project.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Reference.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Regnode.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Set.java:
        * PIM/WSML/interpreters/WSDLImporter/src/edu/vanderbilt/isis/gme/xme/Value.java:

          XML Schema to Java compiler (xjc) generated java files
          corresponding to the elements in mga.xsd.

Fri Jul 14 03:36:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:

          Fixed generation for valuetype inheritance and component
          inheritance and interface support.

Thu Jul 13 17:34:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:

          Fixed bug in generation of binding name.

Thu Jul 13 15:22:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL_BE_Export.h:

          New file, over looked in previous checkin.

        * PIM/WSML/interpreters/IDL_to_WSDL/README:

          Removed irrelevant item.

        * PIM/WSML/interpreters/IDL_to_WSDL/be_init.cpp (BE_post_init):

           Added call to frontend datastore class to set option to
           disable implied IDL generation from IDL3 constructs.

Thu Jul 13 15:01:54 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/WSML/interpreters/IDL_to_WSDL/be_extern.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_global.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_helper.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_helper.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_init.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_produce.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/be_sunsoft.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/EntityResolver.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/EntityResolver.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/IDL_to_WSDL.mpc:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/idl_to_wsdl_visitor.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/README:
        * PIM/WSML/interpreters/IDL_to_WSDL/XercesString.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/XercesString.h:
        * PIM/WSML/interpreters/IDL_to_WSDL/XML_Error_Handler.cpp:
        * PIM/WSML/interpreters/IDL_to_WSDL/XML_Error_Handler.h:

          New files, backend and MPC file for an IDL to WSDL translator.

Tue Jul 11 05:20:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Next version of the SLICE scenario with behavior.

Mon Jul 10 04:46:59 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Added 'Author', 'Comment' and 'Version' information to the
          model.

Mon Jul 10 03:57:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/SLICE.xme:

          Re-birth of the SLICE scenario without any behavior.

Sun Jul  9 20:05:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.h:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:

          - Refactored the UUIDManager to get it ready for enhancements
            of truely managing UUIDs of all elements w/ a UUID.
          - The UUID manager no longer validates the UUIDs at load time
            due to GME exceptions, which I haven't resolved at this
            moment.

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
        * PIM/PICML/interpreters/QoSMapping/QoSMappingVisitor.cpp:

          Fixed compiler warnings.

        * PIM/PICML/addons/UUIDManager/Component_Listener.h:
        * PIM/PICML/addons/UUIDManager/Component_Listener.cpp:

          Removed these files.

Fri Jul  7 21:40:21 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:  Updated to fix problems that were
          detected when actually modeling an example.  Added support for
          all the XML schema datatypes.

Thu Jul  6 05:28:52 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/WSML/paradigms/WSML.xme:  First version of Web Services
          Modeling Language (WSML).

Thu Jun 29 05:42:31 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDLComponent/UdmApp.cpp: Fixed the
          AfxMessageBox() to not show a warning dialog box on successful
          generation.

Tue Jun 27 23:59:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/install.dat:
        * bin/installer.pl:

          Simple perl script that will install the CoSMIC interpreters
          if the regular registration method fails. Eventually the
          input file will become a XML-based file.

Sat Jun 24 02:53:04 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Fixed a
          compilation error with VC8.

Fri Jun 23 23:14:42 UTC 2006  Jeff parsons  <j.parosns@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:

          Fixed typo.

Fri Jun 23 19:43:48 UTC 2006  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/be_extern.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          - idl_to_picml backend changes corresponding to recent
            frontend changes to elminate memory leaks.

          - Change to MPC file to reflect recent changes to the
            inclusion of TAO/Version.h.

Fri Jun 23 01:54:18 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Removed some legacy interpreters.

        * cosmic.mwc:

          Removed some legacy projects.

Fri Jun 16 22:10:48 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * ChangeLog:  Integrated the version of CoSMIC from the ARMS
          X_5_1_REFRESH branch to the Subversion repository.  RIP CVS!

Tue Jun 13 04:54:27 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Fixed a few constraint violations in the FaultTolerance folder

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added new constraints in the FaultTolerance paradigm sheet.

Thu Jun  8 17:18:23 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

          Minor #ifdef changes.

        * PIM/PICML/interpreters/FaultTolerance/FTAdders.h:
        * PIM/PICML/interpreters/FaultTolerance/FTAdders.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.h:
        * PIM/PICML/interpreters/FaultTolerance/FTInjector.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.h:
        * PIM/PICML/interpreters/FaultTolerance/FTVisitors.cpp:
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
        * PIM/PICML/interpreters/FaultTolerance/common.h:

          Restructured the FaultTolerance interpreter.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added a few constraints in the FaultTolerance paradigm sheet.

Wed Jun  7 18:01:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:

          Support for generating simple cases of recursive IDL types.

Sun Jun  4 20:38:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Update the model(s) and regenerated the source code to match the new
          name decorations of the PICML interpreter.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_Shared_A.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_Shared_B.cdp:

          Regenerated the descriptors w/ the new entry points.

        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          Removed this file.

Sat Jun  3 02:25:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Don't use
          ACE_NEW since Xerces doesn't override all the versions of
          operator new(), especially the new(nothrow_t) ones, which
          results in compile errors.  For now, just use plain new.  Fixes
          a compile error with VC8.

Fri Jun  2 04:42:45 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          InputAction elements in CBML now can contain Property
          elements.

Fri May 26 21:07:55 UTC 2006  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Fixed the bug which has to do with multiple ComponentImplementation-
          Descriptions having the same name, which leads to overwriting some
          files at descriptor generation time and ultimately to erroneous
          parsing of the PackageConfiguration

Fri May 26 20:01:26 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp: Updated the model
          to include the importance bin packer.

Fri May 26 18:03:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          - Fixed errors in the model.
          - Revert the model back to the regular BDC.

Wed May 23 7:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

  * PIM/PICML/examples/RT1H/RT1H_Combined.xme

Thu May 18 19:36:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/descriptors/RT1H_BDC_Ex.cdp:

          Updated the RT1H model to include the extended BDC.

Mon May 15 23:02:30 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Sample_Strings/Sample_Strings.xme: Added the
          PICML model for the sample strings.

        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/AnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Analyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/AssemblyPlannerManager.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_Impl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Ex_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_Monolithic_Impl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/BDC_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Benchmark_Data_Collector.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Benchmark_Data_Collector_Ex.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ComponentPackage.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ConfigOp_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Config_Op_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/ControllerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Controller_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DAnCE_Output_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/DeploymentPlan.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/Domain.cdd:
        * PIM/PICML/examples/Sample_Strings/descriptors/EffectorSecondary_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Main_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Effector_Secondary_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/EffectoryMain_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/EnvDectector_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Dectector_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Env_Detector_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Input_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Interactive_Input_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/MonolithicImplementation.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/OutputManager.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Adapter_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_ManagerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Output_Manager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlanAnalyzerAssembly.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_AnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Plan_Analyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerOne_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/PlannerThree_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_ManagerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Manager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_One_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_Three_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Planner_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACE.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RACEAllocation.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT10H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT11H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT1H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT2H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT3H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT4H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT5H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT6H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT7H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT8H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cdp:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/RT9H.pcd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleAllocationAnalyzer_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPackerMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/SimpleBinPacker_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManagerImpl.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManagerImplMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TargetManager_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/TopLevelPackage.tpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_1_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_2_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_3_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_4_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_5_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_6_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_7_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8MonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_Package.cpd:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/Trigger_8_svnt.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter.ccd:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_AdapterMonolithicImpl.cid:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_exec.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_stub.iad:
        * PIM/PICML/examples/Sample_Strings/descriptors/XML_Output_Adapter_svnt.iad:

        Added the descriptors for the sample strings.

        * PIM/PICML/examples/Sample_Strings/source/Config_Op.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op.idl:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main.idl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary.idl:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector.idl:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types.idl:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Planner.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three.idl:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Sample_Strings.mwc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_1_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_2_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_3_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_4_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_5_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_6_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.cpp:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_7_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8.cidl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8.idl:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.h:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.mpc:
        * PIM/PICML/examples/Sample_Strings/source/Trigger_8_CoWorkEr.cpp:

        Added the CUTS generated code for the sample strings.

Sat May 13 00:24:46 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/descriptors/README: Added the README file.

Sat May 13 00:13:59 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme: Updated the model to include
          the "Component Types" folder.

Sat May 13 00:09:37 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_Impl.cid:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Ex_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Monolithic_Impl.cid:
        * PIM/PICML/examples/SPACE/descriptors/BDC_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/BDC_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/BDC_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_High_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.cid:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Backup_Gizmo_Low_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Benchmark_Data_Collector.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Benchmark_Data_Collector_Ex.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Comm_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Compression_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Domain.cdd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Exec_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Filter_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component.cid:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Component_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/Ground_Station.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Linux.cid:
        * PIM/PICML/examples/SPACE/descriptors/NodeDetails.dat:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo.ccd:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo.cid:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_exec.iad:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_stub.iad:
        * PIM/PICML/examples/SPACE/descriptors/Primary_Gizmo_svnt.iad:
        * PIM/PICML/examples/SPACE/descriptors/RACE.cdp:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.cdp:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.cid:
        * PIM/PICML/examples/SPACE/descriptors/SPACE.pcd:
        * PIM/PICML/examples/SPACE/descriptors/SPACE_Package.cpd:
        * PIM/PICML/examples/SPACE/descriptors/SPACE_PackageConfiguration.pcd:
        * PIM/PICML/examples/SPACE/descriptors/Space_Station.cid:
        * PIM/PICML/examples/SPACE/descriptors/TopLevelPackage.tpd:
        * PIM/PICML/examples/SPACE/descriptors/VxWorks.cid:
        * PIM/PICML/examples/SPACE/descriptors/deployment.dat:
        * PIM/PICML/examples/SPACE/descriptors/run_test.pl:

        Descriptors for the SPACE model.

Fri May 12 11:32:52 UTC 2006  James H. Hill  <hillj@isis.vaderbilt.edu>

        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component.idl:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Event_Types.idl:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/SPACE.xme:
        * PIM/PICML/examples/SPACE/SPACE_CUTS.mwc:

          Checkin of valid model that deploys.

Thu May 11 23:03:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/Backup_Gizmo_High.cidl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High.idl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_High_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low.cidl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low.idl:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Backup_Gizmo_Low_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component.cidl:
        * PIM/PICML/examples/SPACE/Comm_Component.idl:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Comm_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Compression_Component.cidl:
        * PIM/PICML/examples/SPACE/Compression_Component.idl:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Compression_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types.cidl:
        * PIM/PICML/examples/SPACE/Event_Types.idl:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component.cidl:
        * PIM/PICML/examples/SPACE/Exec_Component.idl:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Exec_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component.cidl:
        * PIM/PICML/examples/SPACE/Filter_Component.idl:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Filter_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component.cidl:
        * PIM/PICML/examples/SPACE/Ground_Component.idl:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/Ground_Component_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo.cidl:
        * PIM/PICML/examples/SPACE/Primary_Gizmo.idl:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.h:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.mpc:
        * PIM/PICML/examples/SPACE/Primary_Gizmo_CoWorkEr.cpp:
        * PIM/PICML/examples/SPACE/SPACE_CUTS.mwc:

          Initial checkin of generated code.

Thu May 11 22:47:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Fixed version skewing in the model.

Thu May 11 16:02:09 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:

          Merged changes that somehow didn't get picked up when the ARMS
          branch was made.

Thu May 11 14:31:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:

          Regenerated implemenation code to be consistent with
          CUTS architecture.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Regenerated implemenation code to be consistent with
          CUTS architecture.

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Finished implementing the initial scenario.

Wed May 10 20:50:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Updated the generated code to be consistent w/ the CUTS
          architecture.

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Still completing the PICML model.

Wed May 10 7:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp

          Added genration of infoProperties and configProperties
          on assemblies.

Wed May 10 6:58:46 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

          Added web input datapter models.

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp

          Made connection names unique in generated deployment plans.

Wed May 10 00:58:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

          Updated generated code to reflect changes in the CUTS
          architecture.

Fri May  5 06:34:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Added state variables to the I/O Automata language.
          - Added conditional workflows to I/O Automata language.

        * PIM/PICML/paradigms/icons/composite.bmp:

          Added missing bitmap.

Fri Apr 28 03:04:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op.idl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.idl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.idl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_String.xme:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc:
        * PIM/PICML/examples/RACE/RACE.xme:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
        * PIM/PICML/examples/SPACE/SPACE.xme:

          Updated all examples to latest PICML paradigm and regenerated
          all the source files.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Behavior specification can have a concept of a CompositeAction,
            which allows hierarchial specification of workloads.
          - Removed WorkerActions from the metamodel. Everything is now
            expressed in terms of actions, instead of worker actions.

        * PIM/PICML/paradigms/icons/State.bmp:
        * PIM/PICML/paradigms/icons/action.bmp:
        * PIM/PICML/paradigms/icons/file.bmp:
        * PIM/PICML/paradigms/icons/worker.gif:
        * PIM/PICML/paradigms/icons/workerref.gif:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_TypesS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeS.cpp:
        * PIM/PICML/paradigms/icons/InOutAction.bmp:
        * PIM/PICML/paradigms/icons/InputState.bmp:
        * PIM/PICML/paradigms/icons/InternalAction.bmp:
        * PIM/PICML/paradigms/icons/OutputState.bmp:
        * PIM/PICML/paradigms/icons/ShutdownState.bmp:
        * PIM/PICML/paradigms/icons/StartupState.bmp:

          Removed these files.

Sat Apr 22 21:18:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SPACE/SPACE.xme:

          Initial PICML model of the SPACE example.

Fri Apr 21 23:19:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          - Regenerated the code and updated model to use the new features of the
            interpreter.
          - The names of the library files are now placed in the
            'libs' section of the executor project.
          - The location of the worker file is placed in the 'includes' section
            of the executor project.
          - The location of the worker library is placed in the 'libpaths' section
            of the executor project.
          - The locations can handle environment variables in the format $(...).

        * PIM/PICML/examples/SLICE/slice-results.sql:

Thu Apr 20 02:19:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/SLICE/Config_Op.cidl:
        * PIM/PICML/examples/SLICE/Config_Op.idl:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main.cidl:
        * PIM/PICML/examples/SLICE/Effector_Main.idl:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector.cidl:
        * PIM/PICML/examples/SLICE/Env_Detector.idl:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery.cidl:
        * PIM/PICML/examples/SLICE/Error_Recovery.idl:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Error_Recovery_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types.idl:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One.cidl:
        * PIM/PICML/examples/SLICE/Planner_One.idl:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three.cidl:
        * PIM/PICML/examples/SLICE/Planner_Three.idl:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          Finish implementing the SLICE scenario.

        * PIM/PICML/examples/SLICE/Effector_Secondary.cidl:
        * PIM/PICML/examples/SLICE/Effector_Secondary.idl:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:

          Removed these files.

Wed Apr 19 09:29:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the periodic task to 1 Hz instead of 1000 Hz. This
          will make it consitent with the RT1H_Combined model.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

          Regenerated the source code with the new UDM interpreter for CUTS.

Tue Apr 18 23:38:14 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Merged FT changes after April ARMS demo.

Tue Apr 18 23:06:52 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Merging FT changes after April ARMS demo.

Sun Apr  9 16:24:27 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Merged the last checkin by Jai with the latest FT requirements folder.

Sun Apr  9 01:12:20 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Fixed the version skew caused by some overlapping checkins

Fri Apr  7 19:19:40 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

          Changed the interface to support the ability of fixing the primary
          component's assignment and just inject replica assignement.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Supports above interface functionality.

        * PIM/PICML/interpreters/FaultToleranceComponent/UdmApp.cpp:

          Changed to start web-browser from within the interpreter.

Fri Apr  7 17:33:12 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Added the "importance" config property to the RT1H assembly.

Fri Apr  7 14:33:42 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Made changes to the package configuration elements to match
          their corresponding deployment plan names.

Fri Apr  7 14:05:51 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/example/RT1H/RT1H_Combined.xme:

          Changed the model to add memory and bandwidth execparameters to
          all the monolithic implementations that are part of the RT1H
          assembly.

Thu Apr  6 21:21:40 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Added some fault tolerance elements such as more SRGs.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          The BranchNBound algorithm work in this version.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed FOURequirement to FOU_Requirement.

Thu Apr  6 19:49:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          - Added the extended BDC to the shared components assemblies.

Mon Apr  3 08:08:17 UTC 2006  William Otte <wotte>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

          Minor changes to support demo.

Thu Apr  6 15:48:48 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_String/Hog_Config_Op.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op.idl:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_OpS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_MainS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary.idl:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_SecondaryS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector.idl:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_DetectorS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types.idl:
        * PIM/PICML/examples/Hog_String/Hog_Event_TypesS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_OneS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.cidl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three.idl:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeES.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_ThreeS.cpp:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/Hog_String/Hog_Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/Hog_String/Hog_String.cdp:
        * PIM/PICML/examples/Hog_String/Hog_String.xme:
        * PIM/PICML/examples/Hog_String/Hog_String_CUTS.mwc: Added the
          generated code for the "hog_string".

        * PIM/PICML/examples/Hog_string/Hog_string.xme: Removed this file.

Thu Apr  6 15:40:13 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * CUTS/cuts/CPUWorker.cpp: Calibrated the CPU worker for the
          blades.

        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp: Modified the
          CPU workload coefficient of the WLGs.

Thu Apr  6 06:32:14 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Use the
          getPath() to generate names of ImplementationArtifacts and
          MonolithicImplementations.  Thanks to Stoyan for motivating this
          change.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to add
          more constraints to catch errors within ComponentPackage and
          ComponentImplementation.

Thu Apr  6 02:22:12 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Use the
          getPath() to generate names of the primaryArtifact element
          inside a MonolithicImplementationDescription.  Thanks to Stoyan
          for reporting this enhancement.

Thu Apr  6 01:55:17 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/decorators/CommonError.h:  Added a using statement to
          fix a compilation error with VC8.

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:  Fixes to
          allow compilation of IDLImporter with VC8.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Generate a
          UUID for the PackageConfigurationDescription element.  Also
          generate TopLevelPackageDescription elements with names as given
          in the model instead of overwriting the same file by using
          "package.tpd" for every TopLevelPackageDescription element.
          Thanks to Stoyan for pointing out these bugs.

Mon Apr  3 22:51:21 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          - Change the BDC to the extended BDC.
          - Moved the BDC to blade10 in the deployment plans.

        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/descriptors/SLICE.cdp:
        * PIM/PICML/examples/SLICE/descriptors/System_Monitor.cdp:

          Updated the publication rate and regenerated the desciptors.

Mon Apr  3 19:56:46 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Changed CriticalPath_FTRequirements

Mon Apr  3 08:08:17 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Added some test cases for the FT Injector interpreter.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:
          Integration of FT Injector with the DeploymentPlanFramework
          is complete. (components, connections and random node assignment)

Sun Apr  2 09:14:19 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

           Changed FaultTolerance folder.

        * PIM/PICML/interpreters/DeploymentPlanFramework/Injector.h:

          Updated DeploymentPlanFramework's injector interface.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated some FT elements.

Sat Apr  1 08:44:14 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Added FaultTolerance folder and other FT elements.

Sat Apr  1 05:07:03 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated the
          interpreter to generate specificType and supportedType elements
          for all the different port types in addition to the component
          types.

Fri Mar 31 20:23:16 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Refactored the interpreter to use DeploymentPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed FT paradigm sheet.

Thu Mar 30 18:02:52 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:

          Added changes to the deployment plan framework to add QoS injectors.


Wed Mar 29 18:25:07 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:

          First cut prototype of the deployment plan framework.

Wed Mar 29 17:37:41 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
        * PIM/PICML/interpreters/FlatPlan:
        * PIM/PICML/interpreters/FlatPLanComponent:

          Made changes to remove the FlatPlan and FlatPlanComponent
          directories and its associated files.

          Update the interpreters.mwc to reflect the above change.

Wed Mar 29 23:25:23 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/Plan_Export.h:

          Removed the above mentioned files as they were no longer used.

Wed Mar 29 16:54:59 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan.mpc:

          Made changes to use the new visitor files while creating the
          DeploymentPlan library.

Wed Mar 29 16:53:18 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:

          Made changes to create the flattened deployment plan DLL.

Wed Mar 29 16:50:31 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.def:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.rc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:

          Made changes to generate the flattened deployment plans.

Wed Mar 29 16:41:59 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlan/DeploymentPlan_Export.h:

          Added new files under the DeploymentPlan directory, that
          generate the flattened deployment plans.

          The goal here is to get rid of the unnecessary directories
          in the CoSMIC repository.

          We will maintain the flattened deployment plan interpreter
          from this directory from now on.

          All other directories will be removed in the upcoming release.

Wed Mar 29 13:03:23 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

Wed Mar 29 12:12:20 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Created new helper functions to generate deployment plan
          descriptor given a set of components and their connections.

Wed Mar 29 00:07:51 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

        More changes to the flat plan interpreter to separate the logic of
        parsing the deployment plan paradigm sheet and the actual
        generation of XML descriptors.

Wed Mar 29 05:20:34 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework.mpc:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanFramework/DeploymentPlanFramework_Export.h:

          The FlatPlanFramework has been renamed as DeploymentPlanFramework.

        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h:
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp:

          Changed dependencies.

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added FaultTolerance and DeploymentPlanFramework projects

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Minor fixes in FT paradigm sheet.

Wed Mar 29 03:20:39 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
          Modified to not build Fault Tolerance stuff and so called FlatPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Rechecking because apparently these files were not checked in successfully.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanFramework.mpc:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFrameworkVisitor.h:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFrameworkVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanFramework_Export.h:

          Removed these files as these were checked in the FlatPlan directory
          errneously.

Tue Mar 28 20:17:38 UTC 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:
          Added FaultTolerance, FaultToleranceComponent, FlatPlanFramework

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed the meta-model to add Fault Tolerance elements.

        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance.mpc
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.cpp
        * PIM/PICML/interpreters/FaultTolerance/FaultToleranceVisitor.h
        * PIM/PICML/interpreters/FaultTolerance/FaultTolerance_Export.h

          New Fault Tolerance interpreter along with FaultToleranceComponent

        * PIM/PICML/interpreters/FlatPlanFramework
          First cut of Flatplan Framework to integrate other interpreters
          into the original flatplan interpreter.

Tue Mar 28 20:15:17 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Removed the
          "Processor" Requirement which was causing constraint
          violations.  It is not used at present.

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Added
          support for generating RepositoryIds of Components in the .ccd
          file.

Tue Mar 28 14:07:03 GMT 2006  Jaiganesh Balasubramanian  <jai.dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Made changes restructuring the flat plan interpreter to separate
          out the logic parsing the deployment plan paradigm sheet from
          point where it is used to write the XML descriptors.

Fri Mar 24 22:03:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the flat plan interpreter to add execParameter
          tag into the MonolithicDeploymentDescription elements.

Fri Mar 24 15:49:16 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme

          Enhanced RA with elements necessary to support dynamic resource
          allocation and enhanced RT1High to have CPU utilization
          information.

Fri Mar 24 07:49:16 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:  Updated the Hog
          assembly to reflect the change in the hostnames as well as the
          increase in the number of hosts.

Fri Mar 24 07:22:20 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          fix the erroneous criticalPath element in the RT1H assembly.

Fri Mar 24 02:53:18 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Updated the flat plan interpreter to generate correct
          deployment plans when shared components are included.

Fri Mar 24 02:52:17 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the model with the shared component scenario.
          Used the newly added shared component reference element to
          refer to the shared component in the deployment plan paradigm
          sheet.

          Thanks to Krishnakumar for discussing the solution.

Fri Mar 24 00:10:18 UTC 2006  Krishnkumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          add more nodes.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:  Updated the
          descriptors.

Thu Mar 23 23:59:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        Made changes to the deployment plan paradigm sheet to support
        shared component deployments.

Thu Mar 23 21:39:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made a fix to include the right set of component assembly
          parents while creating the connections.

Thu Mar 23 17:13:52 UTC 2006  Nishanth Shanakran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:

        Modified the "hog" string so that it's identical to RT1High.


Thu Mar 23 07:49:42 UTC 2006  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated the model to
          include the assemblies and the deployment plans for the shared
          component deployment scenario.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:  Regenerated these
          files.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:  Fixed a
          compilation problem where a string constant was split into two
          lines with an embedded newline character.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a
          problem where the UUID add-on was not getting triggered when
          elements are copied wholesale, i.e., when a whole assembly is
          cut'n paste and renamed, the individual components present in
          the two assemblies ended up sharing the same UUIDs.  Now the
          interpreter doesn't assume that UUIDs, if present are valid,
          i.e., component instances don't share the same UUID.  It checks
          it and changes it accordingly if they are the same.

Tue Mar 21 22:28:17 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made lot of cosmetic changes

Mon Mar 20 16:12:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Updated model to contain a deployment plan with on the
        components in the critical path. The deployment plan is
        called Critical-Path.

Mon Mar 20 17:39:29 UTC 2006  Nishanth Shankaran  <nshankar@dre.vanderbilt.edu>

        * PIM/PICML/examples/Hog_string/Hog_string.xme:

        Added the model for the "hog_string".


Fri Mar 17 20:16:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:

        Changed the periodic event's timeout to 1000 msecs.

        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:

        Changed the periodic event's timeout to 10000 msec for
        debugging purposes.

        * PIM/PICML/examples/SLICE/descriptors/node_map.dat:

  Updated the port number for the node mapping.

Fri Mar 17 19:52:36 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Added constraint NoSameTypePortNameClash to Component in
            ComponentType paradigm sheet. This constraint disallows
            name clashes between a Component's ports of the same
            category (facet, event sink, etc.). Violation of this
            constraint means that generated IDL won't compile, since
            implied IDL operations corresponding to the ports will
            be overloaded, which is not allowed in IDL.

          - Added constraint NoEmitsUsesPortNameClash to Component
            ComponentType paradigm sheet. Both emits (in PICML, an
            OutEventPort with the single_destination attribute set
            to TRUE) and uses (in PICML, a RequiredRequestPort) ports
            generate implied IDL operations called 'connect_<port name>',
            so a name clash must be disallowed for the same reason
            as above.

          - Rewrote the description (output error message) in the
            ValidEventConnection constraint in the AssemblyConnections
            paradigm sheet to cover all the logic of the constraint,
            rather than just half the logic as previously.

Thu Mar 16 23:56:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Regenerated the path diagram with the Nilabja's fix.

        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

        Regenerated the flat plan descriptors.

        * PIM/PICML/examples/SLICE/Config_Op.cidl:
        * PIM/PICML/examples/SLICE/Config_Op.idl:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main.cidl:
        * PIM/PICML/examples/SLICE/Effector_Main.idl:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary.cidl:
        * PIM/PICML/examples/SLICE/Effector_Secondary.idl:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Env_Detector.cidl:
        * PIM/PICML/examples/SLICE/Env_Detector.idl:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types.cidl:
        * PIM/PICML/examples/SLICE/Event_Types.idl:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One.cidl:
        * PIM/PICML/examples/SLICE/Planner_One.idl:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three.cidl:
        * PIM/PICML/examples/SLICE/Planner_Three.idl:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/SLICE/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/SLICE/SLICE.xme:
        * PIM/PICML/examples/SLICE/SLICE_CUTS.mwc:

        * PIM/PICML/examples/SLICE/descriptors/SLICE.cdp:
        * PIM/PICML/examples/SLICE/descriptors/System_Monitor.cdp:
        * PIM/PICML/examples/SLICE/descriptors/node_map.dat:

        Added the SLICE scenario to PICML examples.

Thu Mar 16 21:58:30 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
          Changed the code to diferentiate between Input and Output ports


Tue Mar 14 21:55:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

        Removed the cuts_coworker_id attributes from the model
        since it has no meaning in CUTS and the component id
        is taken from the context.

Tue Mar 14 21:47:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op.idl:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Main.idl:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary.idl:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Env_Detector.idl:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types.idl:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_One.idl:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three.idl:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:

        - Updated generated code to reflect changes in CUTS
          framework.
        - Remove the cuts_coworker_id () attribute from all the interface
          definitions for the application string since the id is provide
          by the DAnCE infrastructure.

        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

        Regenerated deployment descriptors. There were no changes. Just
        unconsciously did it!! :o)

Sat Mar 11 06:04:19 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed the
          format of the value of the criticalPath property as requested by
          Nishanth.

Fri Mar  10 21.50:11 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Corrected more entrypoint typos.

Fri Mar  10 21:18:21 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Made changes to the RACE model to change the entrypoint names
          of RACE controller and also the library names of the TargetManager
          implementation.

Fri Mar  10 21:10:35 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:

          Made changes to change the descriptor tag from Deployment:Domain
          to Deployment:domain.

Fri Mar 10 20:08:41 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Fixed a bug
          in the generation of the criticalPath configProperty.  Also
          changed the format of the configProperty to ease parsing.
          Thanks to Nishanth for reporting the problem.

Fri Mar 10 20:06:36 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:
          Added the Top Level Packages for Application String.

Fri Mar  10 18:56:45 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the interpreter to generate the EventEmitter
          tag appropriately.

Thu Mar  9 23:36:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a
          silly thinko where the internalEndPoints were not getting
          attached to the connection element.

Thu Mar  9 06:40:58 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme: Updated the model to
          reflect changes to the PathComponent and PackageComponent.  We
          now use a '/' to delineate nodes in the criticalPath as well as
          the configProperty elements created to capture properties
          attached to the criticalPath.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp: Fixed the
          interpreter to use '/' as the tokenizer element.

        * PIM/PICML/interpreters/Target/DomainVisitor.h:
        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:  Updated the
          interpreter to generate XML for Resource elements.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          the required extensions to SatisfierProperty for generation of
          valid component domain descriptors.

Thu Mar  9 05:40:55 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to insert "." instead of "_" in the path names
          of the instances, implementations and artifacts.

Thu Mar  9 04:48:01 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
          Fixed the Path interpreter to give node names with 'getPath'

Thu Mar   9 03:07:55 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to support selective deployment and shared
          components in the flattened deployment plan.

          Thanks to Krishnakumar for many helpful discussions leading
          to the solution for this problem.

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to get the UUIDs integrated with the path
          to create the instance deployment description names.

Wed Mar  8 16:50:45 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

          Made changes to the deployment plan interpreter to create
          instance description names with the collocation group name
          and the node name appended. This will allow duplicate instances
          to be deployed across different collocation groups.

          Thanks to Krishnakumar for helpful discussions leading to
          this solution.

Wed Mar  8 16:12:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/Config_Op.cidl:
        * PIM/PICML/examples/RT1H/Config_Op.idl:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Config_Op_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main.cidl:
        * PIM/PICML/examples/RT1H/Effector_Main.idl:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Effector_Main_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary.cidl:
        * PIM/PICML/examples/RT1H/Effector_Secondary.idl:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Effector_Secondary_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector.cidl:
        * PIM/PICML/examples/RT1H/Env_Detector.idl:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Env_Detector_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types.cidl:
        * PIM/PICML/examples/RT1H/Event_Types.idl:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Event_Types_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One.cidl:
        * PIM/PICML/examples/RT1H/Planner_One.idl:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/Planner_One_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three.cidl:
        * PIM/PICML/examples/RT1H/Planner_Three.idl:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.h:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.cpp:
        * PIM/PICML/examples/RT1H/Planner_Three_CoWorkEr.mpc:
        * PIM/PICML/examples/RT1H/RT1H_CUTS.mwc:
        * PIM/PICML/examples/RT1H/descriptors/RACE.cdp:
        * PIM/PICML/examples/RT1H/descriptors/RTH1.cdp:

          Checked in the neccessary source files to run the RTH1
          demo.

Wed Mar  8 16:00:56 UTC 2006 Jaiganesh B  <jai@dre.vanderbilt.edu>

  * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

    Made changes to use the names entered by the modeler
    for the artifact names. Previously, we were using the
    unique UUIDs.

Wed Mar  8 05:50:27 UTC 2006 Jaiganesh B <jai@dre.vanderbilt.edu>

  * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:

    Fixed the logic of generating UUIDs to not prepend
    an _, unless they are used as IDs and IDREFs in XML
    terminology.

    Thanks to Krishnakumar for suggesting this fix.

Wed Mar  8 04:43:18 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated model to fix
          constraint errors due to duplicated UUIDs.  This will most
          likely cause errors during deployment.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed the
          logic of generating UUIDs to not prepend an _, unless it is
          needed.  Thanks to James for suggesting this fix.  Now, the
          UUIDs that are stored in the models are unadorned with _.  Fixed
          code where the idref attribute for component instances inside
          internalEndPoint were replaced with text elements which will
          break deployment since the schema uses an IDREF.

        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:  Formatted the
          code.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:  Updated metamodel to fix some
          wrong constraints which didn't check for unique UUIDs
          effectively.

Wed Mar  8 01:42:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS/cuts/fe/PICML/PICMLBonX.h:
        * CUTS/cuts/fe/PICML/PICMLBonX.cpp:

          Regenerated BON extensions to match the metamodel.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Verified the changes to the metamodel do not break anything.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Remodeled the changes that were missing from the version
          that was last checked in. In other words, there was a
          version mismatch.

Tue Mar  7 23:57:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS/cuts/System_Metric.h:
        * CUTS/cuts/System_Metric.inl:
        * CUTS/cuts/System_Metric.cpp:

          The component metrics of the system can be accessed
          outside the class.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the model to have the BDC as a shared component.

Tue Mar 7 23:18:55 UTC 2006  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.cpp:
        * PIM/PICML/interpreters/FlatPlan/FlatPlanVisitor.h:

          Made changes to the FlatPlan interpreter to add support
          for selective deployments (ReDac), shared components support
          and UUID support.

Tue Mar 7 23:15:56 UTC 2006  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Made changes to add UUID attribute to the DeploymentPlan.

Tue Mar  7 19:47:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RACE/RACE.xme:
        * PIM/PICML/examples/RT1H/RT1H.xme:
        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Updated the models to reflect the changes in CUTS. More
          specifically, update the location of the
          Benchmark_Data_Collector and its artifacts.

Mon Mar  6 21:25:34 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/addons/UUIDManager/component.def:  Fixed a warning
          about inconsistent name of the target dll.

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:  Updated to add an
          example of how path-specific properties can be assigned to an
          assembly.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Fixed a bug
          where we traversed null references.

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp: Fixed a wrong
          check-in where somehow this file had the same contents as
          PackageComponent/UdmApp.cpp.

Mon Mar 6 16:34:01 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp

          Merge changes to support package config handlers from head.

Mon Feb 27 16:34:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Fixed bug in deployment plan specification for RT1H. The
          BDC was deployed on two seperate host, which meant
          replication which is not supported.

Mon Feb 27 15:50:26 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H_Combined.xme:

          Combined the RACE + CUTS models into a single model until
          we have full generation for generating flat plans with
          shared components.

Mon Feb 27 04:44:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the RT1H model to reflect the changes to CUTS. All the
          components now use a Testing_Service interface.

Sun Feb 26 09:38:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          Updated the RT1H model to reflect the changes to CUTS.

Tue Feb 21 23:00:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/examples/RT1H/RT1H.xme:

          PICML model of RT1HIGH to be used the LM March Demo.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          - Updated the PeriodicAction method with a Probability attribute.
          - Fixed constraint that verifies each action has a parent worker.
          - Added constraint that verifies each output action's name matches
            the name of the output event port.

        * PIM/PICML/paradigms/icons/workerref.gif:

          Image for the WorkerType element.

Sat Feb 18 00:00:06 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/Package/PackageVisitor.h:
        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated
          Package interpreter to generate descriptors for capturing
          critical path information required by RACE.

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:  Updated to reflect
          changes in the metamodel.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          capturing critical path related metadata.

        * picmllib.mpb:  Removed the dialog box prompt from the
          interpreter registration.

Wed Feb 15 22:55:34 UTC 2006  Nilabja R  <nilabjar@invalid.domain>

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
          Added a dialog box to change port order.

Tue Feb 14 19:34:39 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp

          Resolved compile errors/warnings associated with
          Borland Builder.

Mon Feb 13 16:37:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.cpp (usage):

          Removed a redundant usage message and fixed formatting of
          another one.

Sun Feb 12 19:33:44 UTC 2006  NilabjaR  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
          Updated for the Path Diagram Interpreter

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Updated for changes in the Critical Path Component

Sat Feb 11 02:31:30 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.mpc:  Updated file
          to include dependencies.

        * PIM/PICML/decorators/PICMLDecorator.mpc:  Fixed file to depend
          on the global picmllib.mpb and not duplicate settings.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Visit the
          RootFolders inside RootFolder.  This takes care of handling
          libraries.  But this can also lead to problems, if the
          component/assembly instances in libraries don't have UUIDs.

        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:  Fixed a
          warning.

        * picmllib.mpb:  Updated to include a generic outputext.

        * PIM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.sln:

          Removed this file.

Fri Feb 10 22:04:41 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Replaced usage of 'I_TRUE' and 'I_FALSE' with 'true'
          and 'false' respectively, to correspond with the changes
          in

          Wed Feb  8 18:26:11 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>


Wed Feb  8 20:58:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * picmllib.mpb:

          Added compile flag specific to Visual Studio that disables
          warning C4251, which is a bogus warning about exporting
          class members that are instantiations of some STL container
          template type.

Wed Feb  8 19:30:10 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added 'cmdline' items to:

          - use the feature file at $COSMIC_ROOT/default.features
          - include $COSMIC_ROOT in the search path for base
            projects

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Added overlooked files to the MPC project. Thanks to Will
          Otte <wotte@dre.vanderbilt.edu> for pointing out the
          oversight.

Wed Feb  8 18:26:11 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:

          Removed all use of 'idl_bool' (typedef of long) and replaced
          with native 'bool'.

Wed Feb  8 17:54:02 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Added support for union discriminators of type char.

Wed Feb  8 17:16:49 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp (visit_valuebox):

          Added support for boxed valuetypes.

Tue Feb  7 17:24:46 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xml:

          Changed the LegalConstantValue constraint to use the toReal()
          conversion for the attribute value when bounds checking
          a PICML LongInteger constant type. The toInteger() conversion
          has a 32-bit bound, the same as that intended for LongInteger,
          so any rhs literal integer would get wrapped around to a
          legal value. Thanks again to Zoltan Molnar
          <zolmol@isis.vanderbilt.edu> and to Steve Baker
          <Stever_D_Baker@Raytheon.com> for their suggestions.

Mon Feb  6 23:18:59 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xml:

          - Added an aspect to WorkerFile.
          - Changed the name of the aspect in the WML paradigm sheet
            from Behavior to WorkerBehavior, to avoid an aspect name
            clash.
          - Removed an attribute in WML that wasn't attached to
            anything.
          - Changed the LegalDiscriminatorType constraint to accept
            a Discriminator of type Byte, which allows IDL unions
            with a discriminator of type Char to be imported without
            constratint violations.
          - Changed LegalConstantValue constraint to make the allowed
            limits of a LongInteger to be within the limits accepted
            by the Constrain Manager. Thanks to Zoltan Molnar
            <zolmol@isis.vanderbilt.edu> for help with this fix.

Mon Feb  6 21:52:28 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Renamed these files (by removing them) to the pair of
          (added) files below.

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          New name for removed files above.

        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.h:

          Renamed these files (by removing them) to the pair of
          (added) files below.

        * PIM/PICML/interpreters/IDLImporter/xme_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/xme_dom_visitor.h:

          New name for removed files above.

        * PIM/PICML/interpreters/IDLImporter/removing_closure_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/removing_closure_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/removing_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/removing_visitor.h:

          New files, containing visitors which are subclasses of the
          base class visitor in xme_dom_visitor.{h,cpp}. The removing
          visitor traverses the DOM tree and removes anything whose
          GME id has not been added to a table by the adding visitor
          (which traverses the IDL of the input files).
          Each removal also spawns an instance of the removing closure
          visitor, which also traverses the DOM tree and removes
          references that refer to removed items and connections that
          have removed items as an endpoint. References are removed
          recursively until no more are discovered.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/XML_Error_Handler.cpp:
        * PIM/PICML/interpreters/IDLImporter/XercesString.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          Changes to assist and stay in sync with the above changes.

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:

          Updates to documentation reflecting the above changes.

Mon Feb  6 16:49:10 UTC 2006  Stoyan Paunov  <spaunov@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:

          fixs for the compile error for the UUIDManager project.

        * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.h:
        * PIM/PICML/interpreters/RTConfig/RTConfigVisitor.cpp:

          Tying up couple of loose screws in the RTConfig interpreter.

        * PIM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.vcproj:

          Removed this file.

Fri Feb  3 00:51:05 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/Component.rc:
        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.h:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:
        * PIM/PICML/addons/UUIDManager/component.def:
        * PIM/PICML/addons/UUIDManager/RawComponent.cpp
        * PIM/PICML/addons/UUIDManager/RawComponent.h
        * PIM/PICML/addons/UUIDManager/Component_Listener.cpp
        * PIM/PICML/addons/UUIDManager/Component_Listener.h

          Implemented the UUIDManager as a RawComponent.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated the CUTS/WML portion of PICML. Added constaints
          and simplified the I/O Automata and WML DSMLs.

        * cosmic.mwc:

          Added the UUIDManager back to the regular build.

Thu Jan 26 20:25:58 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Stubbed out the IOAutomata interpreter since we are no longer
          using configuration file in the new version of CUTS.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated the PICML paradigm with the CUTS modeling elements. This
          includes a new folder for containing workers and the ability for
          components to contain instances of worker actions and worker types.

        * PIM/PICML/paradigms/icons/worker.gif:

          GME image for the worker elements.

Fri Jan 20 19:29:35 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:

          Tried to fix bug WRT to importing a PICML model, but it's located
          in the BON library.

        * PIM/PICML/interpreters/PICML/Utils.cpp:

          Browse for folder dialog is displayed as a a modal dialog box.
          Also fixed bug where displaying dialog would cause GME to
          hide and the dialog would not show.

        * cosmic.mwc:

          Removed the UUIDManager from the default project build. It will remain
          this way until the bug in BON mentioned above is fixed.

        * PIM/PICML/interpreters/PathComponent/RegisterPathComponent.vcproj:

          Removed this file.

Fri Jan 20 15:30:17 2006  Sumant Tambe  <sutambe@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IOAutomata/README.txt: Added new into the repo.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Simplified/changed I/O Automata meta-model. Actions are changed from atoms
          to models which contain properties. Due to this change, the I/O Automata
          interpreter will not build in the CoSMIC source. Please checkout my Dec 14
          version if you want to build that interpreter.

        * PIM/PICML/paradigms/icons/State.bmp: Added a 'S'!

Tue Jan 17 20:07:45 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:  Updated the decorator
          to display shared components and component assemblies.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:  Updated the
          interpreter to add support for sharing components and component
          assemblies across different component assemblies.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:  Updated the metamodel to support
          shared components and component assemblies.

Sat Jan 14 00:46:12 UTC 2006  Nilabja Roy  <nilabjar@invalid.domain>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated paradigms to reflect CoSMIC-0.4.8 release.

Fri Jan 13 21:48:05 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:
          The format of the Release Note and the Readme updated

        * PIM/PICML/interpreters/Path/Path.mpc:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:
          These are done to add the BOOST path to the Path Project

        * PIM/PICML/interpreters/PathComponent/Component.rc:
        * PIM/PICML/interpreters/PathComponent/resource.h:
          These are to change the icon file in the Path Project

        * PIM/PICML/interpreters/Path/Path.vcproj:

        * PIM/PICML/interpreters/PathComponent/Component.aps:
        * PIM/PICML/interpreters/PathComponent/PathComponent.vcproj:

          Removed these files. Unnecessary files

Wed Jan 11 03:10:54 UTC 2006  Nilabja R  <nilabjar@dre.vanderbilt.edu>

        * Installer/CoSMIC-Installer.ise:
          Changed to prepare for the release of CoSMIC 0.4.8

        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile:
        * PIM/OCML/interpreters/TAOServiceConfExporter/GNUmakefile.SvcConfExporter:

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf:

        * PIM/PICML/interpreters/Interpreters.mwc:
          Changed to include the new interpreter for Path Diagram

        * PIM/PICML/interpreters/Path/Path.mpc:
        * PIM/PICML/interpreters/Path/Path.vcproj:
        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
        * PIM/PICML/interpreters/Path/Path_Export.h:

        * PIM/PICML/interpreters/PathComponent/Component.aps:
        * PIM/PICML/interpreters/PathComponent/Component.def:
        * PIM/PICML/interpreters/PathComponent/Component.rc:
        * PIM/PICML/interpreters/PathComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:
        * PIM/PICML/interpreters/PathComponent/PathComponent.vcproj:
        * PIM/PICML/interpreters/PathComponent/Pathicon.ico:
        * PIM/PICML/interpreters/PathComponent/RawComponent.h:
        * PIM/PICML/interpreters/PathComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PathComponent/RegisterPathComponent.vcproj:
        * PIM/PICML/interpreters/PathComponent/StdAfx.h:
        * PIM/PICML/interpreters/PathComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PathComponent/UdmApp.h:
        * PIM/PICML/interpreters/PathComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PathComponent/UdmConfig.h:
        * PIM/PICML/interpreters/PathComponent/resource.h:

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Changed to add the new extension of PICML , Path Diagrams.
          This module generates all the possible paths that can take
          place in the run-time.

Wed Jan 11 02:36:07 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:  Fixed the
          hardcoded path to GME_ROOT to get this project to compile on
          Windows XP x64.

        * PIM/PICML/interpreters/QoSMappingComponent/RawComponent.h:
          Added required but missing file to the directory.

Tue Jan 10 16:41:18 2006  James H. Hill <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.h:
        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:

          Fixed compilation issues.

        * PIM/PICML/interpreters/PICML/Utils.cpp:

          The validation routine for UUIDs does uses a UUID data
          structure on the stack to temporarily store the UUID instead
          of dynamically allocating a structure each time.

Tue Jan 10 02:32:47 2006  James H. Hill <hillj@isis.vanderbilt.edu>

        * PIM/PICML/addons/UUIDManager/BON2Component.h:
        * PIM/PICML/addons/UUIDManager/BON2Component.cpp:
        * PIM/PICML/addons/UUIDManager/Component.rc:
        * PIM/PICML/addons/UUIDManager/ComponentConfig.h:
        * PIM/PICML/addons/UUIDManager/Resource.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.h:
        * PIM/PICML/addons/UUIDManager/StdAfx.cpp:
        * PIM/PICML/addons/UUIDManager/UUIDManager.mpc:
        * PIM/PICML/addons/UUIDManager/component.def:

          Created an add-on to managed the specification of UUIDs on
          Component and ComponentAssembly elements. Whenever an
          Component or ComponentAssembly is inserted into the model,
          a UUID is generated and stored in the model. Whenever an
          instance of a Component or a ComponentAssembly is inserted
          a UUID is generated and stored into the model. Also, if
          the UUID is manually changed by the user and its invalid,
          a new UUID is generated.

        * PIM/PICML/interpreters/PICML/Utils.h:
        * PIM/PICML/interpreters/PICML/Utils.cpp:

          Added a routine that validates an existing UUID.

        * cosmic.mwc:

          Excluded CUTS from the default build of CoSMIC since its
          not ready for nightly builds.

Sat Jan  7 05:13:29 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PIM/PICML/interpreters/QoSMappingComponent/CompIcon.ico:
          Updated icon to be different from PackageComponent.

        * PIM/PICML/interpreters/RTConfigComponent/CompIcon.ico:
        * PIM/PICML/interpreters/RTConfigComponent/Component.rc:
        * PIM/PICML/interpreters/RTConfigComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/RTConfigComponent/RTConfigComponent.mpc:
        * PIM/PICML/interpreters/RTConfigComponent/resource.h:

          Fixed icon to show up differently than the PackageComponent.
          The problem was due to two different image types, one at 32x32
          pixels and 16 colours, and another at 16x16 pixels and 16
          colours, being present within the same file.  This file
          was originally copied from PackageComponent's CompIcon.ico and
          only the 32x32 pixels, 16 colours was overridden.  But GME uses
          16x16 pixels, 16 colours by default.  So both this interpreter
          and PackageComponent ended up showing the same icon :-(

        * PIM/PICML/interpreters/IOAutomataComponent/Component.aps:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.tlb:
        * PIM/PICML/interpreters/RTConfigComponent/CompIcon_RTConfig.ico:
        * PSM/CCM/EQAL/interpreters/ComponentConfig.old:
        * PSM/CCM/MIDCESS/interpreters/ComponentConfig.old:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/ComponentConfig.old:

          Removed these files.

Thu Jan  5 20:07:26 2006  hillj  <hillj@isis.vanderbilt.edu>
        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Updated the IDL generator to skip IDL models/files that
          are defined in GME read-only libraries.

Thu Jan  5 08:42:17 2006  hillj  <hillj@isis.vanderbilt.edu>

        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/Cidlc_Visitor.cpp:

          Fixed a bug in the CIDL interpreter involving the usage
          of modules. If multiple ComponentFactorys had the same name
          but in seperate Packages, it would create a single file and
          overwrite each the CIDL definitions. Now, each IDL file in a
          model generates its own CIDL file. All factories defined in
          that file are defined in the CIDL file. The interpreter also
          preserves Package location, which is represented as a module.

        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.h:
        * PIM/PICML/interpreters/CIDL_Interpreter/IDLStream.cpp:

          Updated the IDL stream generator to reflect the changes above.

Tue Jan  3 16:25:16 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.ise:

          Updated to reflect the addition of two new interpreters.

        * PIM/PICML/interpreters/Package/PackageVisitor.cpp:

          Updated to fix the generation of UUIDs.  We no longer use the
          path of each element as the UUID, but generate UUIDs and store
          in the corresponding model element as an attribute.  This
          ensures that the UUIDs are not only unique, but also that they
          can be reused across multiple invocations of the interpreter.

        * PIM/PICML/paradigms/icons/boolean.bmp:
        * PIM/PICML/paradigms/icons/byte.bmp:
        * PIM/PICML/paradigms/icons/genericobject.bmp:
        * PIM/PICML/paradigms/icons/genericvalue.bmp:
        * PIM/PICML/paradigms/icons/genericvalueobject.bmp:
        * PIM/PICML/paradigms/icons/realnumber.bmp:
        * PIM/PICML/paradigms/icons/short.bmp:
        * PIM/PICML/paradigms/icons/string.bmp:
        * PIM/PICML/paradigms/icons/typeencoding.bmp:
        * PIM/PICML/paradigms/icons/typekind.bmp:

          Reverted the reduction in size to 32x32 pixels for these images,
          as they look awful at the lower resolution because they get
          stretched.

        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib.h:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_i.c:
        * PIM/PICML/interpreters/QoSMappingComponent/ComponentLib_p.c:

          Removed these files.

Mon Jan  2 14:42:14 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.h:

          Added backend option '-r <path>' to be passed instead
          of a list of IDL files. This option will cause the
          IDL importer to process every file having '.idl' or
          '.pidl' as an extension in the passed directory and
          all of its subdirectories.

        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_dom_visitor.h:

          New files defining a visitor that will traverse the
          in-memory DOM tree and remove items not found in the
          corresponding AST formed from IDL files. This visitor
          is in development and is currently a no-op.

