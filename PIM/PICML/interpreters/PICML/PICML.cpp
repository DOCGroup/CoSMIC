// cpp (meta datanetwork format) source file PICML.cpp
// generated from diagram PICML
// generated on Thu Jun 05 02:11:47 2014

#include "PICML.h"
#include <UmlExt.h>
#include <UdmStatic.h>

using namespace std;

namespace PICML {

	ComponentImplementationArtifact::ComponentImplementationArtifact() {}
	ComponentImplementationArtifact::ComponentImplementationArtifact(::Udm::ObjectImpl *impl) : ImplementationArtifactReference(impl) {}
	ComponentImplementationArtifact::ComponentImplementationArtifact(const ComponentImplementationArtifact &master) : ImplementationArtifactReference(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationArtifact::ComponentImplementationArtifact(ComponentImplementationArtifact &&master) : ImplementationArtifactReference(master) {};

	ComponentImplementationArtifact ComponentImplementationArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationArtifact& ComponentImplementationArtifact::operator=(ComponentImplementationArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationArtifact ComponentImplementationArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationArtifact ComponentImplementationArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationArtifact ComponentImplementationArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationArtifact>(impl); }
	ComponentImplementationArtifact ComponentImplementationArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Derived() { return ::Udm::DerivedAttr< ComponentImplementationArtifact>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationArtifact>(impl); }
	::Udm::StringAttr ComponentImplementationArtifact::EntryPoint() const { return ::Udm::StringAttr(impl, meta_EntryPoint); }
	::Udm::PointerAttr< ImplementationArtifact> ComponentImplementationArtifact::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentImplementationArtifact::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationArtifact::Accept(Visitor &v) { v.Visit_ComponentImplementationArtifact(*this); }

	::Uml::Class ComponentImplementationArtifact::meta;
	::Uml::Attribute ComponentImplementationArtifact::meta_EntryPoint;
	::Uml::AssociationRole ComponentImplementationArtifact::meta_ref;

	ComponentServantArtifact::ComponentServantArtifact() {}
	ComponentServantArtifact::ComponentServantArtifact(::Udm::ObjectImpl *impl) : ImplementationArtifactReference(impl) {}
	ComponentServantArtifact::ComponentServantArtifact(const ComponentServantArtifact &master) : ImplementationArtifactReference(master) {}

#ifdef UDM_RVALUE
	ComponentServantArtifact::ComponentServantArtifact(ComponentServantArtifact &&master) : ImplementationArtifactReference(master) {};

	ComponentServantArtifact ComponentServantArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentServantArtifact& ComponentServantArtifact::operator=(ComponentServantArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentServantArtifact ComponentServantArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentServantArtifact ComponentServantArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentServantArtifact ComponentServantArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentServantArtifact> ComponentServantArtifact::Instances() { return ::Udm::InstantiatedAttr< ComponentServantArtifact>(impl); }
	ComponentServantArtifact ComponentServantArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentServantArtifact> ComponentServantArtifact::Derived() { return ::Udm::DerivedAttr< ComponentServantArtifact>(impl); }
	::Udm::ArchetypeAttr< ComponentServantArtifact> ComponentServantArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ComponentServantArtifact>(impl); }
	::Udm::StringAttr ComponentServantArtifact::EntryPoint() const { return ::Udm::StringAttr(impl, meta_EntryPoint); }
	::Udm::PointerAttr< ImplementationArtifact> ComponentServantArtifact::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentServantArtifact::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentServantArtifact::Accept(Visitor &v) { v.Visit_ComponentServantArtifact(*this); }

	::Uml::Class ComponentServantArtifact::meta;
	::Uml::Attribute ComponentServantArtifact::meta_EntryPoint;
	::Uml::AssociationRole ComponentServantArtifact::meta_ref;

	MonolithicImplementationBase::MonolithicImplementationBase() {}
	MonolithicImplementationBase::MonolithicImplementationBase(::Udm::ObjectImpl *impl) : Implemenation(impl) {}
	MonolithicImplementationBase::MonolithicImplementationBase(const MonolithicImplementationBase &master) : Implemenation(master) {}

#ifdef UDM_RVALUE
	MonolithicImplementationBase::MonolithicImplementationBase(MonolithicImplementationBase &&master) : Implemenation(master) {};

	MonolithicImplementationBase MonolithicImplementationBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithicImplementationBase& MonolithicImplementationBase::operator=(MonolithicImplementationBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithicImplementationBase MonolithicImplementationBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithicImplementationBase MonolithicImplementationBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithicImplementationBase MonolithicImplementationBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithicImplementationBase> MonolithicImplementationBase::Instances() { return ::Udm::InstantiatedAttr< MonolithicImplementationBase>(impl); }
	MonolithicImplementationBase MonolithicImplementationBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithicImplementationBase> MonolithicImplementationBase::Derived() { return ::Udm::DerivedAttr< MonolithicImplementationBase>(impl); }
	::Udm::ArchetypeAttr< MonolithicImplementationBase> MonolithicImplementationBase::Archetype() const { return ::Udm::ArchetypeAttr< MonolithicImplementationBase>(impl); }
	::Udm::AClassAssocAttr< MonolithprimaryArtifact, ImplementationArtifactReference> MonolithicImplementationBase::dstMonolithprimaryArtifact() const { return ::Udm::AClassAssocAttr< MonolithprimaryArtifact, ImplementationArtifactReference>(impl, meta_dstMonolithprimaryArtifact, meta_dstMonolithprimaryArtifact_rev); }
	::Udm::AClassAssocAttr< MonolithExecParameter, Property> MonolithicImplementationBase::dstMonolithExecParameter() const { return ::Udm::AClassAssocAttr< MonolithExecParameter, Property>(impl, meta_dstMonolithExecParameter, meta_dstMonolithExecParameter_rev); }
	::Udm::AClassAssocAttr< MonolithDeployRequirement, ImplementationRequirement> MonolithicImplementationBase::dstMonolithDeployRequirement() const { return ::Udm::AClassAssocAttr< MonolithDeployRequirement, ImplementationRequirement>(impl, meta_dstMonolithDeployRequirement, meta_dstMonolithDeployRequirement_rev); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithicImplementationBase::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MonolithicImplementationBase::meta;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithExecParameter;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithExecParameter_rev;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithDeployRequirement;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev;

	ImplementationContainer::ImplementationContainer() {}
	ImplementationContainer::ImplementationContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationContainer::ImplementationContainer(const ImplementationContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationContainer::ImplementationContainer(ImplementationContainer &&master) : MgaObject(master) {};

	ImplementationContainer ImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationContainer& ImplementationContainer::operator=(ImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationContainer ImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationContainer ImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationContainer ImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationContainer> ImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ImplementationContainer>(impl); }
	ImplementationContainer ImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationContainer> ImplementationContainer::Derived() { return ::Udm::DerivedAttr< ImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ImplementationContainer> ImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> ImplementationContainer::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationRequirement> ImplementationContainer::ImplementationRequirement_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationRequirement>(impl, meta_ImplementationRequirement_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ImplementationContainer::ImplementationArtifactReference_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_children); }
	::Udm::ChildrenAttr< ::PICML::MonolithExecParameter> ImplementationContainer::MonolithExecParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithExecParameter>(impl, meta_MonolithExecParameter_children); }
	::Udm::ChildrenAttr< ::PICML::MonolithDeployRequirement> ImplementationContainer::MonolithDeployRequirement_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithDeployRequirement>(impl, meta_MonolithDeployRequirement_children); }
	::Udm::ChildrenAttr< ::PICML::MonolithprimaryArtifact> ImplementationContainer::MonolithprimaryArtifact_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithprimaryArtifact>(impl, meta_MonolithprimaryArtifact_children); }
	::Udm::ChildrenAttr< ::PICML::ConfigProperty> ImplementationContainer::ConfigProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::ConfigProperty>(impl, meta_ConfigProperty_children); }
	::Udm::ChildrenAttr< ::PICML::InfoProperty> ImplementationContainer::InfoProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::InfoProperty>(impl, meta_InfoProperty_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact> ImplementationContainer::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact> ImplementationContainer::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MonolithExecParameter> ImplementationContainer::MonolithExecParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithExecParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MonolithDeployRequirement> ImplementationContainer::MonolithDeployRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithDeployRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MonolithprimaryArtifact> ImplementationContainer::MonolithprimaryArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithprimaryArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InfoProperty> ImplementationContainer::InfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConfigProperty> ImplementationContainer::ConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ImplementationContainer::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> ImplementationContainer::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> ImplementationContainer::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> ImplementationContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationRequirement> ImplementationContainer::ImplementationRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementBase> ImplementationContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::Udm::Object> ImplementationContainer::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ImplementationContainer::meta;
	::Uml::CompositionChildRole ImplementationContainer::meta_Property_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ImplementationRequirement_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ImplementationArtifactReference_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithExecParameter_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithDeployRequirement_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithprimaryArtifact_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ConfigProperty_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_InfoProperty_children;

	Implemenation::Implemenation() {}
	Implemenation::Implemenation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implemenation::Implemenation(const Implemenation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implemenation::Implemenation(Implemenation &&master) : MgaObject(master) {};

	Implemenation Implemenation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implemenation& Implemenation::operator=(Implemenation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implemenation Implemenation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implemenation Implemenation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implemenation Implemenation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implemenation> Implemenation::Instances() { return ::Udm::InstantiatedAttr< Implemenation>(impl); }
	Implemenation Implemenation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implemenation> Implemenation::Derived() { return ::Udm::DerivedAttr< Implemenation>(impl); }
	::Udm::ArchetypeAttr< Implemenation> Implemenation::Archetype() const { return ::Udm::ArchetypeAttr< Implemenation>(impl); }
	::Udm::StringAttr Implemenation::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr Implemenation::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassAssocAttr< InfoProperty, Property> Implemenation::dstInfoProperty() const { return ::Udm::AClassAssocAttr< InfoProperty, Property>(impl, meta_dstInfoProperty, meta_dstInfoProperty_rev); }
	::Udm::AClassAssocAttr< ConfigProperty, Property> Implemenation::dstConfigProperty() const { return ::Udm::AClassAssocAttr< ConfigProperty, Property>(impl, meta_dstConfigProperty, meta_dstConfigProperty_rev); }
	::Udm::ParentAttr< ::PICML::MgaObject> Implemenation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Implemenation::meta;
	::Uml::Attribute Implemenation::meta_label;
	::Uml::Attribute Implemenation::meta_UUID;
	::Uml::AssociationRole Implemenation::meta_dstInfoProperty;
	::Uml::AssociationRole Implemenation::meta_dstInfoProperty_rev;
	::Uml::AssociationRole Implemenation::meta_dstConfigProperty;
	::Uml::AssociationRole Implemenation::meta_dstConfigProperty_rev;

	MonolithExecParameter::MonolithExecParameter() {}
	MonolithExecParameter::MonolithExecParameter(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithExecParameter::MonolithExecParameter(const MonolithExecParameter &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithExecParameter::MonolithExecParameter(MonolithExecParameter &&master) : MgaObject(master) {};

	MonolithExecParameter MonolithExecParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithExecParameter& MonolithExecParameter::operator=(MonolithExecParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithExecParameter MonolithExecParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithExecParameter MonolithExecParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithExecParameter MonolithExecParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithExecParameter> MonolithExecParameter::Instances() { return ::Udm::InstantiatedAttr< MonolithExecParameter>(impl); }
	MonolithExecParameter MonolithExecParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithExecParameter> MonolithExecParameter::Derived() { return ::Udm::DerivedAttr< MonolithExecParameter>(impl); }
	::Udm::ArchetypeAttr< MonolithExecParameter> MonolithExecParameter::Archetype() const { return ::Udm::ArchetypeAttr< MonolithExecParameter>(impl); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithExecParameter::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithExecParameter::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase> MonolithExecParameter::srcMonolithExecParameter_end() const { return ::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase>(impl, meta_srcMonolithExecParameter_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> MonolithExecParameter::dstMonolithExecParameter_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstMonolithExecParameter_end_); }
	void MonolithExecParameter::Accept(Visitor &v) { v.Visit_MonolithExecParameter(*this); }

	::Uml::Class MonolithExecParameter::meta;
	::Uml::CompositionParentRole MonolithExecParameter::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithExecParameter::meta_srcMonolithExecParameter_end_;
	::Uml::AssociationRole MonolithExecParameter::meta_dstMonolithExecParameter_end_;

	MonolithDeployRequirement::MonolithDeployRequirement() {}
	MonolithDeployRequirement::MonolithDeployRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithDeployRequirement::MonolithDeployRequirement(const MonolithDeployRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithDeployRequirement::MonolithDeployRequirement(MonolithDeployRequirement &&master) : MgaObject(master) {};

	MonolithDeployRequirement MonolithDeployRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithDeployRequirement& MonolithDeployRequirement::operator=(MonolithDeployRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithDeployRequirement MonolithDeployRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithDeployRequirement MonolithDeployRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithDeployRequirement MonolithDeployRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithDeployRequirement> MonolithDeployRequirement::Instances() { return ::Udm::InstantiatedAttr< MonolithDeployRequirement>(impl); }
	MonolithDeployRequirement MonolithDeployRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithDeployRequirement> MonolithDeployRequirement::Derived() { return ::Udm::DerivedAttr< MonolithDeployRequirement>(impl); }
	::Udm::ArchetypeAttr< MonolithDeployRequirement> MonolithDeployRequirement::Archetype() const { return ::Udm::ArchetypeAttr< MonolithDeployRequirement>(impl); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithDeployRequirement::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithDeployRequirement::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase> MonolithDeployRequirement::srcMonolithDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase>(impl, meta_srcMonolithDeployRequirement_end_); }
	::Udm::AssocEndAttr< ::PICML::ImplementationRequirement> MonolithDeployRequirement::dstMonolithDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationRequirement>(impl, meta_dstMonolithDeployRequirement_end_); }
	void MonolithDeployRequirement::Accept(Visitor &v) { v.Visit_MonolithDeployRequirement(*this); }

	::Uml::Class MonolithDeployRequirement::meta;
	::Uml::CompositionParentRole MonolithDeployRequirement::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_;
	::Uml::AssociationRole MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_;

	MonolithprimaryArtifact::MonolithprimaryArtifact() {}
	MonolithprimaryArtifact::MonolithprimaryArtifact(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithprimaryArtifact::MonolithprimaryArtifact(const MonolithprimaryArtifact &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithprimaryArtifact::MonolithprimaryArtifact(MonolithprimaryArtifact &&master) : MgaObject(master) {};

	MonolithprimaryArtifact MonolithprimaryArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithprimaryArtifact& MonolithprimaryArtifact::operator=(MonolithprimaryArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithprimaryArtifact MonolithprimaryArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithprimaryArtifact MonolithprimaryArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithprimaryArtifact MonolithprimaryArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Instances() { return ::Udm::InstantiatedAttr< MonolithprimaryArtifact>(impl); }
	MonolithprimaryArtifact MonolithprimaryArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Derived() { return ::Udm::DerivedAttr< MonolithprimaryArtifact>(impl); }
	::Udm::ArchetypeAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Archetype() const { return ::Udm::ArchetypeAttr< MonolithprimaryArtifact>(impl); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithprimaryArtifact::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> MonolithprimaryArtifact::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase> MonolithprimaryArtifact::srcMonolithprimaryArtifact_end() const { return ::Udm::AssocEndAttr< ::PICML::MonolithicImplementationBase>(impl, meta_srcMonolithprimaryArtifact_end_); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifactReference> MonolithprimaryArtifact::dstMonolithprimaryArtifact_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifactReference>(impl, meta_dstMonolithprimaryArtifact_end_); }
	void MonolithprimaryArtifact::Accept(Visitor &v) { v.Visit_MonolithprimaryArtifact(*this); }

	::Uml::Class MonolithprimaryArtifact::meta;
	::Uml::CompositionParentRole MonolithprimaryArtifact::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_;
	::Uml::AssociationRole MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_;

	InfoProperty::InfoProperty() {}
	InfoProperty::InfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InfoProperty::InfoProperty(const InfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InfoProperty::InfoProperty(InfoProperty &&master) : MgaObject(master) {};

	InfoProperty InfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InfoProperty& InfoProperty::operator=(InfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InfoProperty InfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InfoProperty InfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InfoProperty InfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InfoProperty> InfoProperty::Instances() { return ::Udm::InstantiatedAttr< InfoProperty>(impl); }
	InfoProperty InfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InfoProperty> InfoProperty::Derived() { return ::Udm::DerivedAttr< InfoProperty>(impl); }
	::Udm::ArchetypeAttr< InfoProperty> InfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< InfoProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> InfoProperty::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> InfoProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Implemenation> InfoProperty::srcInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Implemenation>(impl, meta_srcInfoProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> InfoProperty::dstInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstInfoProperty_end_); }
	void InfoProperty::Accept(Visitor &v) { v.Visit_InfoProperty(*this); }

	::Uml::Class InfoProperty::meta;
	::Uml::CompositionParentRole InfoProperty::meta_ImplementationContainer_parent;
	::Uml::AssociationRole InfoProperty::meta_srcInfoProperty_end_;
	::Uml::AssociationRole InfoProperty::meta_dstInfoProperty_end_;

	ConfigProperty::ConfigProperty() {}
	ConfigProperty::ConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConfigProperty::ConfigProperty(const ConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConfigProperty::ConfigProperty(ConfigProperty &&master) : MgaObject(master) {};

	ConfigProperty ConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConfigProperty& ConfigProperty::operator=(ConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConfigProperty ConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConfigProperty ConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConfigProperty ConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConfigProperty> ConfigProperty::Instances() { return ::Udm::InstantiatedAttr< ConfigProperty>(impl); }
	ConfigProperty ConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConfigProperty> ConfigProperty::Derived() { return ::Udm::DerivedAttr< ConfigProperty>(impl); }
	::Udm::ArchetypeAttr< ConfigProperty> ConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< ConfigProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> ConfigProperty::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> ConfigProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Implemenation> ConfigProperty::srcConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Implemenation>(impl, meta_srcConfigProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> ConfigProperty::dstConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstConfigProperty_end_); }
	void ConfigProperty::Accept(Visitor &v) { v.Visit_ConfigProperty(*this); }

	::Uml::Class ConfigProperty::meta;
	::Uml::CompositionParentRole ConfigProperty::meta_ImplementationContainer_parent;
	::Uml::AssociationRole ConfigProperty::meta_srcConfigProperty_end_;
	::Uml::AssociationRole ConfigProperty::meta_dstConfigProperty_end_;

	ComponentFactoryInstance::ComponentFactoryInstance() {}
	ComponentFactoryInstance::ComponentFactoryInstance(::Udm::ObjectImpl *impl) : MonolithicImplementationBase(impl), Implemenation(impl) {}
	ComponentFactoryInstance::ComponentFactoryInstance(const ComponentFactoryInstance &master) : MonolithicImplementationBase(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryInstance::ComponentFactoryInstance(ComponentFactoryInstance &&master) : MonolithicImplementationBase(master), Implemenation(master) {};

	ComponentFactoryInstance ComponentFactoryInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryInstance& ComponentFactoryInstance::operator=(ComponentFactoryInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryInstance ComponentFactoryInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryInstance ComponentFactoryInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryInstance ComponentFactoryInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryInstance> ComponentFactoryInstance::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryInstance>(impl); }
	ComponentFactoryInstance ComponentFactoryInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryInstance> ComponentFactoryInstance::Derived() { return ::Udm::DerivedAttr< ComponentFactoryInstance>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryInstance> ComponentFactoryInstance::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryInstance>(impl); }
	::Udm::PointerAttr< ComponentFactory> ComponentFactoryInstance::ref() const { return ::Udm::PointerAttr< ComponentFactory>(impl, meta_ref); }
	::Udm::AssocAttr< ComponentFactoryRef> ComponentFactoryInstance::referedbyComponentFactoryRef() const { return ::Udm::AssocAttr< ComponentFactoryRef>(impl, meta_referedbyComponentFactoryRef); }
	::Udm::ParentAttr< ::PICML::ComponentFactoryImplementationContainer> ComponentFactoryInstance::ComponentFactoryImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactoryImplementationContainer>(impl, meta_ComponentFactoryImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentFactoryImplementationContainer> ComponentFactoryInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactoryImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryInstance::Accept(Visitor &v) { v.Visit_ComponentFactoryInstance(*this); }

	::Uml::Class ComponentFactoryInstance::meta;
	::Uml::AssociationRole ComponentFactoryInstance::meta_ref;
	::Uml::AssociationRole ComponentFactoryInstance::meta_referedbyComponentFactoryRef;
	::Uml::CompositionParentRole ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent;

	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer() {}
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(::Udm::ObjectImpl *impl) : ImplementationContainer(impl) {}
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(const ComponentFactoryImplementationContainer &master) : ImplementationContainer(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(ComponentFactoryImplementationContainer &&master) : ImplementationContainer(master) {};

	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryImplementationContainer& ComponentFactoryImplementationContainer::operator=(ComponentFactoryImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryImplementationContainer>(impl); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Derived() { return ::Udm::DerivedAttr< ComponentFactoryImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryInstance> ComponentFactoryImplementationContainer::ComponentFactoryInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryInstance>(impl, meta_ComponentFactoryInstance_children); }
	::Udm::ChildrenAttr< ::PICML::MonolithicImplementationBase> ComponentFactoryImplementationContainer::MonolithicImplementationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithicImplementationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Implemenation> ComponentFactoryImplementationContainer::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryInstance> ComponentFactoryImplementationContainer::ComponentFactoryInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentFactoryImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentFactoryImplementations> ComponentFactoryImplementationContainer::ComponentFactoryImplementations_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactoryImplementations>(impl, meta_ComponentFactoryImplementations_parent); }
	::Udm::ParentAttr< ::PICML::ComponentFactoryImplementations> ComponentFactoryImplementationContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactoryImplementations>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryImplementationContainer::Accept(Visitor &v) { v.Visit_ComponentFactoryImplementationContainer(*this); }

	::Uml::Class ComponentFactoryImplementationContainer::meta;
	::Uml::CompositionChildRole ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children;
	::Uml::CompositionParentRole ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent;

	ComponentFactoryImplementations::ComponentFactoryImplementations() {}
	ComponentFactoryImplementations::ComponentFactoryImplementations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentFactoryImplementations::ComponentFactoryImplementations(const ComponentFactoryImplementations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryImplementations::ComponentFactoryImplementations(ComponentFactoryImplementations &&master) : UDM_OBJECT(master) {};

	ComponentFactoryImplementations ComponentFactoryImplementations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryImplementations& ComponentFactoryImplementations::operator=(ComponentFactoryImplementations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryImplementations ComponentFactoryImplementations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryImplementations ComponentFactoryImplementations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryImplementations ComponentFactoryImplementations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryImplementations>(impl); }
	ComponentFactoryImplementations ComponentFactoryImplementations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Derived() { return ::Udm::DerivedAttr< ComponentFactoryImplementations>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryImplementations>(impl); }
	::Udm::StringAttr ComponentFactoryImplementations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementationContainer> ComponentFactoryImplementations::ComponentFactoryImplementationContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementationContainer>(impl, meta_ComponentFactoryImplementationContainer_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationContainer> ComponentFactoryImplementations::ImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementationContainer> ComponentFactoryImplementations::ComponentFactoryImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentFactoryImplementations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentFactoryImplementations::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentFactoryImplementations::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryImplementations::Accept(Visitor &v) { v.Visit_ComponentFactoryImplementations(*this); }

	::Uml::Class ComponentFactoryImplementations::meta;
	::Uml::Attribute ComponentFactoryImplementations::meta_name;
	::Uml::CompositionChildRole ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children;
	::Uml::CompositionParentRole ComponentFactoryImplementations::meta_RootFolder_parent;

	ServiceConsumer::ServiceConsumer() {}
	ServiceConsumer::ServiceConsumer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceConsumer::ServiceConsumer(const ServiceConsumer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceConsumer::ServiceConsumer(ServiceConsumer &&master) : MgaObject(master) {};

	ServiceConsumer ServiceConsumer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceConsumer& ServiceConsumer::operator=(ServiceConsumer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceConsumer ServiceConsumer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceConsumer ServiceConsumer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceConsumer ServiceConsumer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceConsumer> ServiceConsumer::Instances() { return ::Udm::InstantiatedAttr< ServiceConsumer>(impl); }
	ServiceConsumer ServiceConsumer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceConsumer> ServiceConsumer::Derived() { return ::Udm::DerivedAttr< ServiceConsumer>(impl); }
	::Udm::ArchetypeAttr< ServiceConsumer> ServiceConsumer::Archetype() const { return ::Udm::ArchetypeAttr< ServiceConsumer>(impl); }
	::Udm::BooleanAttr ServiceConsumer::prioritize_service_invocations() const { return ::Udm::BooleanAttr(impl, meta_prioritize_service_invocations); }
	::Udm::ParentAttr< ::PICML::RTRequirements> ServiceConsumer::RTRequirements_parent() const { return ::Udm::ParentAttr< ::PICML::RTRequirements>(impl, meta_RTRequirements_parent); }
	::Udm::ParentAttr< ::PICML::RTRequirements> ServiceConsumer::parent() const { return ::Udm::ParentAttr< ::PICML::RTRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceConsumer::Accept(Visitor &v) { v.Visit_ServiceConsumer(*this); }

	::Uml::Class ServiceConsumer::meta;
	::Uml::Attribute ServiceConsumer::meta_prioritize_service_invocations;
	::Uml::CompositionParentRole ServiceConsumer::meta_RTRequirements_parent;

	MultipleServiceRequests::MultipleServiceRequests() {}
	MultipleServiceRequests::MultipleServiceRequests(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultipleServiceRequests::MultipleServiceRequests(const MultipleServiceRequests &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultipleServiceRequests::MultipleServiceRequests(MultipleServiceRequests &&master) : MgaObject(master) {};

	MultipleServiceRequests MultipleServiceRequests::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultipleServiceRequests& MultipleServiceRequests::operator=(MultipleServiceRequests &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultipleServiceRequests MultipleServiceRequests::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultipleServiceRequests MultipleServiceRequests::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultipleServiceRequests MultipleServiceRequests::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultipleServiceRequests> MultipleServiceRequests::Instances() { return ::Udm::InstantiatedAttr< MultipleServiceRequests>(impl); }
	MultipleServiceRequests MultipleServiceRequests::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultipleServiceRequests> MultipleServiceRequests::Derived() { return ::Udm::DerivedAttr< MultipleServiceRequests>(impl); }
	::Udm::ArchetypeAttr< MultipleServiceRequests> MultipleServiceRequests::Archetype() const { return ::Udm::ArchetypeAttr< MultipleServiceRequests>(impl); }
	::Udm::IntegerAttr MultipleServiceRequests::minimum_simultaneous_service_level() const { return ::Udm::IntegerAttr(impl, meta_minimum_simultaneous_service_level); }
	::Udm::BooleanAttr MultipleServiceRequests::simultaneous_service_execution() const { return ::Udm::BooleanAttr(impl, meta_simultaneous_service_execution); }
	::Udm::BooleanAttr MultipleServiceRequests::buffer_service_requests() const { return ::Udm::BooleanAttr(impl, meta_buffer_service_requests); }
	::Udm::IntegerAttr MultipleServiceRequests::maximum_simultaneous_service_level() const { return ::Udm::IntegerAttr(impl, meta_maximum_simultaneous_service_level); }
	::Udm::ParentAttr< ::PICML::ServiceProvider> MultipleServiceRequests::ServiceProvider_parent() const { return ::Udm::ParentAttr< ::PICML::ServiceProvider>(impl, meta_ServiceProvider_parent); }
	::Udm::ParentAttr< ::PICML::ServiceProvider> MultipleServiceRequests::parent() const { return ::Udm::ParentAttr< ::PICML::ServiceProvider>(impl, ::Udm::NULLPARENTROLE); }
	void MultipleServiceRequests::Accept(Visitor &v) { v.Visit_MultipleServiceRequests(*this); }

	::Uml::Class MultipleServiceRequests::meta;
	::Uml::Attribute MultipleServiceRequests::meta_minimum_simultaneous_service_level;
	::Uml::Attribute MultipleServiceRequests::meta_simultaneous_service_execution;
	::Uml::Attribute MultipleServiceRequests::meta_buffer_service_requests;
	::Uml::Attribute MultipleServiceRequests::meta_maximum_simultaneous_service_level;
	::Uml::CompositionParentRole MultipleServiceRequests::meta_ServiceProvider_parent;

	ServiceLevels::ServiceLevels() {}
	ServiceLevels::ServiceLevels(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceLevels::ServiceLevels(const ServiceLevels &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceLevels::ServiceLevels(ServiceLevels &&master) : MgaObject(master) {};

	ServiceLevels ServiceLevels::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceLevels& ServiceLevels::operator=(ServiceLevels &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceLevels ServiceLevels::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceLevels ServiceLevels::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceLevels ServiceLevels::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceLevels> ServiceLevels::Instances() { return ::Udm::InstantiatedAttr< ServiceLevels>(impl); }
	ServiceLevels ServiceLevels::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceLevels> ServiceLevels::Derived() { return ::Udm::DerivedAttr< ServiceLevels>(impl); }
	::Udm::ArchetypeAttr< ServiceLevels> ServiceLevels::Archetype() const { return ::Udm::ArchetypeAttr< ServiceLevels>(impl); }
	::Udm::BooleanAttr ServiceLevels::varying_service_levels() const { return ::Udm::BooleanAttr(impl, meta_varying_service_levels); }
	::Udm::ParentAttr< ::PICML::ServiceProvider> ServiceLevels::ServiceProvider_parent() const { return ::Udm::ParentAttr< ::PICML::ServiceProvider>(impl, meta_ServiceProvider_parent); }
	::Udm::ParentAttr< ::PICML::ServiceProvider> ServiceLevels::parent() const { return ::Udm::ParentAttr< ::PICML::ServiceProvider>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceLevels::Accept(Visitor &v) { v.Visit_ServiceLevels(*this); }

	::Uml::Class ServiceLevels::meta;
	::Uml::Attribute ServiceLevels::meta_varying_service_levels;
	::Uml::CompositionParentRole ServiceLevels::meta_ServiceProvider_parent;

	ServiceProvider::ServiceProvider() {}
	ServiceProvider::ServiceProvider(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceProvider::ServiceProvider(const ServiceProvider &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceProvider::ServiceProvider(ServiceProvider &&master) : MgaObject(master) {};

	ServiceProvider ServiceProvider::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceProvider& ServiceProvider::operator=(ServiceProvider &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceProvider ServiceProvider::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceProvider ServiceProvider::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceProvider ServiceProvider::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceProvider> ServiceProvider::Instances() { return ::Udm::InstantiatedAttr< ServiceProvider>(impl); }
	ServiceProvider ServiceProvider::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceProvider> ServiceProvider::Derived() { return ::Udm::DerivedAttr< ServiceProvider>(impl); }
	::Udm::ArchetypeAttr< ServiceProvider> ServiceProvider::Archetype() const { return ::Udm::ArchetypeAttr< ServiceProvider>(impl); }
	::Udm::BooleanAttr ServiceProvider::fixed_prioirty_service_execution() const { return ::Udm::BooleanAttr(impl, meta_fixed_prioirty_service_execution); }
	::Udm::ChildAttr< ::PICML::ServiceLevels> ServiceProvider::ServiceLevels_child() const { return ::Udm::ChildAttr< ::PICML::ServiceLevels>(impl, meta_ServiceLevels_child); }
	::Udm::ChildAttr< ::PICML::MultipleServiceRequests> ServiceProvider::MultipleServiceRequests_child() const { return ::Udm::ChildAttr< ::PICML::MultipleServiceRequests>(impl, meta_MultipleServiceRequests_child); }
	::Udm::ChildrenAttr< ::PICML::MultipleServiceRequests> ServiceProvider::MultipleServiceRequests_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MultipleServiceRequests>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ServiceLevels> ServiceProvider::ServiceLevels_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ServiceLevels>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ServiceProvider::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RTRequirements> ServiceProvider::RTRequirements_parent() const { return ::Udm::ParentAttr< ::PICML::RTRequirements>(impl, meta_RTRequirements_parent); }
	::Udm::ParentAttr< ::PICML::RTRequirements> ServiceProvider::parent() const { return ::Udm::ParentAttr< ::PICML::RTRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceProvider::Accept(Visitor &v) { v.Visit_ServiceProvider(*this); }

	::Uml::Class ServiceProvider::meta;
	::Uml::Attribute ServiceProvider::meta_fixed_prioirty_service_execution;
	::Uml::CompositionChildRole ServiceProvider::meta_ServiceLevels_child;
	::Uml::CompositionChildRole ServiceProvider::meta_MultipleServiceRequests_child;
	::Uml::CompositionParentRole ServiceProvider::meta_RTRequirements_parent;

	RTRequirements::RTRequirements() {}
	RTRequirements::RTRequirements(::Udm::ObjectImpl *impl) : Requirement(impl) {}
	RTRequirements::RTRequirements(const RTRequirements &master) : Requirement(master) {}

#ifdef UDM_RVALUE
	RTRequirements::RTRequirements(RTRequirements &&master) : Requirement(master) {};

	RTRequirements RTRequirements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RTRequirements& RTRequirements::operator=(RTRequirements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RTRequirements RTRequirements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RTRequirements RTRequirements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RTRequirements RTRequirements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RTRequirements> RTRequirements::Instances() { return ::Udm::InstantiatedAttr< RTRequirements>(impl); }
	RTRequirements RTRequirements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RTRequirements> RTRequirements::Derived() { return ::Udm::DerivedAttr< RTRequirements>(impl); }
	::Udm::ArchetypeAttr< RTRequirements> RTRequirements::Archetype() const { return ::Udm::ArchetypeAttr< RTRequirements>(impl); }
	::Udm::ChildAttr< ::PICML::ServiceConsumer> RTRequirements::ServiceConsumer_child() const { return ::Udm::ChildAttr< ::PICML::ServiceConsumer>(impl, meta_ServiceConsumer_child); }
	::Udm::ChildAttr< ::PICML::ServiceProvider> RTRequirements::ServiceProvider_child() const { return ::Udm::ChildAttr< ::PICML::ServiceProvider>(impl, meta_ServiceProvider_child); }
	::Udm::ChildrenAttr< ::PICML::ServiceConsumer> RTRequirements::ServiceConsumer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ServiceConsumer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ServiceProvider> RTRequirements::ServiceProvider_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ServiceProvider>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> RTRequirements::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> RTRequirements::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void RTRequirements::Accept(Visitor &v) { v.Visit_RTRequirements(*this); }

	::Uml::Class RTRequirements::meta;
	::Uml::CompositionChildRole RTRequirements::meta_ServiceConsumer_child;
	::Uml::CompositionChildRole RTRequirements::meta_ServiceProvider_child;

	ECRole::ECRole() {}
	ECRole::ECRole(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ECRole::ECRole(const ECRole &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ECRole::ECRole(ECRole &&master) : MgaObject(master) {};

	ECRole ECRole::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECRole& ECRole::operator=(ECRole &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECRole ECRole::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECRole ECRole::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECRole ECRole::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECRole> ECRole::Instances() { return ::Udm::InstantiatedAttr< ECRole>(impl); }
	ECRole ECRole::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECRole> ECRole::Derived() { return ::Udm::DerivedAttr< ECRole>(impl); }
	::Udm::ArchetypeAttr< ECRole> ECRole::Archetype() const { return ::Udm::ArchetypeAttr< ECRole>(impl); }
	::Udm::StringAttr ECRole::ECFilterType() const { return ::Udm::StringAttr(impl, meta_ECFilterType); }
	::Udm::StringAttr ECRole::rolekind() const { return ::Udm::StringAttr(impl, meta_rolekind); }
	::Udm::ParentAttr< ::PICML::ECRequirements> ECRole::ECRequirements_parent() const { return ::Udm::ParentAttr< ::PICML::ECRequirements>(impl, meta_ECRequirements_parent); }
	::Udm::ParentAttr< ::PICML::ECRequirements> ECRole::parent() const { return ::Udm::ParentAttr< ::PICML::ECRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ECRole::Accept(Visitor &v) { v.Visit_ECRole(*this); }

	::Uml::Class ECRole::meta;
	::Uml::Attribute ECRole::meta_ECFilterType;
	::Uml::Attribute ECRole::meta_rolekind;
	::Uml::CompositionParentRole ECRole::meta_ECRequirements_parent;

	ECRequirements::ECRequirements() {}
	ECRequirements::ECRequirements(::Udm::ObjectImpl *impl) : Requirement(impl) {}
	ECRequirements::ECRequirements(const ECRequirements &master) : Requirement(master) {}

#ifdef UDM_RVALUE
	ECRequirements::ECRequirements(ECRequirements &&master) : Requirement(master) {};

	ECRequirements ECRequirements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECRequirements& ECRequirements::operator=(ECRequirements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECRequirements ECRequirements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECRequirements ECRequirements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECRequirements ECRequirements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECRequirements> ECRequirements::Instances() { return ::Udm::InstantiatedAttr< ECRequirements>(impl); }
	ECRequirements ECRequirements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECRequirements> ECRequirements::Derived() { return ::Udm::DerivedAttr< ECRequirements>(impl); }
	::Udm::ArchetypeAttr< ECRequirements> ECRequirements::Archetype() const { return ::Udm::ArchetypeAttr< ECRequirements>(impl); }
	::Udm::BooleanAttr ECRequirements::ConfigureRTQoS() const { return ::Udm::BooleanAttr(impl, meta_ConfigureRTQoS); }
	::Udm::ChildrenAttr< ::PICML::ECRole> ECRequirements::ECRole_children() const { return ::Udm::ChildrenAttr< ::PICML::ECRole>(impl, meta_ECRole_children); }
	::Udm::ChildAttr< ::PICML::ECBehavior> ECRequirements::ECBehavior_child() const { return ::Udm::ChildAttr< ::PICML::ECBehavior>(impl, meta_ECBehavior_child); }
	::Udm::ChildrenAttr< ::PICML::ECRole> ECRequirements::ECRole_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ECRole>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ECBehavior> ECRequirements::ECBehavior_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ECBehavior>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ECRequirements::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> ECRequirements::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ECRequirements::Accept(Visitor &v) { v.Visit_ECRequirements(*this); }

	::Uml::Class ECRequirements::meta;
	::Uml::Attribute ECRequirements::meta_ConfigureRTQoS;
	::Uml::CompositionChildRole ECRequirements::meta_ECRole_children;
	::Uml::CompositionChildRole ECRequirements::meta_ECBehavior_child;

	ECBehavior::ECBehavior() {}
	ECBehavior::ECBehavior(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ECBehavior::ECBehavior(const ECBehavior &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ECBehavior::ECBehavior(ECBehavior &&master) : MgaObject(master) {};

	ECBehavior ECBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECBehavior& ECBehavior::operator=(ECBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECBehavior ECBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECBehavior ECBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECBehavior ECBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECBehavior> ECBehavior::Instances() { return ::Udm::InstantiatedAttr< ECBehavior>(impl); }
	ECBehavior ECBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECBehavior> ECBehavior::Derived() { return ::Udm::DerivedAttr< ECBehavior>(impl); }
	::Udm::ArchetypeAttr< ECBehavior> ECBehavior::Archetype() const { return ::Udm::ArchetypeAttr< ECBehavior>(impl); }
	::Udm::BooleanAttr ECBehavior::SupplierBasedFiltering() const { return ::Udm::BooleanAttr(impl, meta_SupplierBasedFiltering); }
	::Udm::BooleanAttr ECBehavior::ConsumerBasedFiltering() const { return ::Udm::BooleanAttr(impl, meta_ConsumerBasedFiltering); }
	::Udm::BooleanAttr ECBehavior::DisconnectDanglingConnections() const { return ::Udm::BooleanAttr(impl, meta_DisconnectDanglingConnections); }
	::Udm::BooleanAttr ECBehavior::MultithreadedConsumer() const { return ::Udm::BooleanAttr(impl, meta_MultithreadedConsumer); }
	::Udm::IntegerAttr ECBehavior::DispatchingMultithreadingLevel() const { return ::Udm::IntegerAttr(impl, meta_DispatchingMultithreadingLevel); }
	::Udm::BooleanAttr ECBehavior::MultithreadedSupplier() const { return ::Udm::BooleanAttr(impl, meta_MultithreadedSupplier); }
	::Udm::ParentAttr< ::PICML::ECRequirements> ECBehavior::ECRequirements_parent() const { return ::Udm::ParentAttr< ::PICML::ECRequirements>(impl, meta_ECRequirements_parent); }
	::Udm::ParentAttr< ::PICML::ECRequirements> ECBehavior::parent() const { return ::Udm::ParentAttr< ::PICML::ECRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ECBehavior::Accept(Visitor &v) { v.Visit_ECBehavior(*this); }

	::Uml::Class ECBehavior::meta;
	::Uml::Attribute ECBehavior::meta_SupplierBasedFiltering;
	::Uml::Attribute ECBehavior::meta_ConsumerBasedFiltering;
	::Uml::Attribute ECBehavior::meta_DisconnectDanglingConnections;
	::Uml::Attribute ECBehavior::meta_MultithreadedConsumer;
	::Uml::Attribute ECBehavior::meta_DispatchingMultithreadingLevel;
	::Uml::Attribute ECBehavior::meta_MultithreadedSupplier;
	::Uml::CompositionParentRole ECBehavior::meta_ECRequirements_parent;

	PathReference::PathReference() {}
	PathReference::PathReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PathReference::PathReference(const PathReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PathReference::PathReference(PathReference &&master) : MgaObject(master) {};

	PathReference PathReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathReference& PathReference::operator=(PathReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathReference PathReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathReference PathReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathReference PathReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathReference> PathReference::Instances() { return ::Udm::InstantiatedAttr< PathReference>(impl); }
	PathReference PathReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathReference> PathReference::Derived() { return ::Udm::DerivedAttr< PathReference>(impl); }
	::Udm::ArchetypeAttr< PathReference> PathReference::Archetype() const { return ::Udm::ArchetypeAttr< PathReference>(impl); }
	::Udm::PointerAttr< Path> PathReference::ref() const { return ::Udm::PointerAttr< Path>(impl, meta_ref); }
	::Udm::AClassPointerAttr< CriticalPath, ComponentAssembly> PathReference::srcCriticalPath() const { return ::Udm::AClassPointerAttr< CriticalPath, ComponentAssembly>(impl, meta_srcCriticalPath, meta_srcCriticalPath_rev); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> PathReference::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> PathReference::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PathReference::Accept(Visitor &v) { v.Visit_PathReference(*this); }

	::Uml::Class PathReference::meta;
	::Uml::AssociationRole PathReference::meta_ref;
	::Uml::AssociationRole PathReference::meta_srcCriticalPath;
	::Uml::AssociationRole PathReference::meta_srcCriticalPath_rev;
	::Uml::CompositionParentRole PathReference::meta_ComponentImplementationContainer_parent;

	PathProperty::PathProperty() {}
	PathProperty::PathProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PathProperty::PathProperty(const PathProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PathProperty::PathProperty(PathProperty &&master) : MgaObject(master) {};

	PathProperty PathProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathProperty& PathProperty::operator=(PathProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathProperty PathProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathProperty PathProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathProperty PathProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathProperty> PathProperty::Instances() { return ::Udm::InstantiatedAttr< PathProperty>(impl); }
	PathProperty PathProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathProperty> PathProperty::Derived() { return ::Udm::DerivedAttr< PathProperty>(impl); }
	::Udm::ArchetypeAttr< PathProperty> PathProperty::Archetype() const { return ::Udm::ArchetypeAttr< PathProperty>(impl); }
	::Udm::ParentAttr< ::PICML::Paths> PathProperty::Paths_parent() const { return ::Udm::ParentAttr< ::PICML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::PICML::Paths> PathProperty::parent() const { return ::Udm::ParentAttr< ::PICML::Paths>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Path> PathProperty::srcPathProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Path>(impl, meta_srcPathProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> PathProperty::dstPathProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstPathProperty_end_); }
	void PathProperty::Accept(Visitor &v) { v.Visit_PathProperty(*this); }

	::Uml::Class PathProperty::meta;
	::Uml::CompositionParentRole PathProperty::meta_Paths_parent;
	::Uml::AssociationRole PathProperty::meta_srcPathProperty_end_;
	::Uml::AssociationRole PathProperty::meta_dstPathProperty_end_;

	Paths::Paths() {}
	Paths::Paths(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Paths::Paths(const Paths &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Paths::Paths(Paths &&master) : MgaObject(master) {};

	Paths Paths::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Paths& Paths::operator=(Paths &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Paths Paths::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Paths Paths::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Paths Paths::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Paths> Paths::Instances() { return ::Udm::InstantiatedAttr< Paths>(impl); }
	Paths Paths::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Paths> Paths::Derived() { return ::Udm::DerivedAttr< Paths>(impl); }
	::Udm::ArchetypeAttr< Paths> Paths::Archetype() const { return ::Udm::ArchetypeAttr< Paths>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> Paths::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::PathProperty> Paths::PathProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::PathProperty>(impl, meta_PathProperty_children); }
	::Udm::ChildrenAttr< ::PICML::Path> Paths::Path_children() const { return ::Udm::ChildrenAttr< ::PICML::Path>(impl, meta_Path_children); }
	::Udm::ChildrenAttr< ::PICML::PathProperty> Paths::PathProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PathProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Path> Paths::Path_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Path>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> Paths::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> Paths::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> Paths::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Paths::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::PathDiagrams> Paths::PathDiagrams_parent() const { return ::Udm::ParentAttr< ::PICML::PathDiagrams>(impl, meta_PathDiagrams_parent); }
	::Udm::ParentAttr< ::PICML::PathDiagrams> Paths::parent() const { return ::Udm::ParentAttr< ::PICML::PathDiagrams>(impl, ::Udm::NULLPARENTROLE); }
	void Paths::Accept(Visitor &v) { v.Visit_Paths(*this); }

	::Uml::Class Paths::meta;
	::Uml::CompositionChildRole Paths::meta_Property_children;
	::Uml::CompositionChildRole Paths::meta_PathProperty_children;
	::Uml::CompositionChildRole Paths::meta_Path_children;
	::Uml::CompositionParentRole Paths::meta_PathDiagrams_parent;

	DisplayNode::DisplayNode() {}
	DisplayNode::DisplayNode(::Udm::ObjectImpl *impl) : GraphVertex(impl), MgaObject(impl) {}
	DisplayNode::DisplayNode(const DisplayNode &master) : GraphVertex(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	DisplayNode::DisplayNode(DisplayNode &&master) : GraphVertex(master), MgaObject(master) {};

	DisplayNode DisplayNode::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DisplayNode& DisplayNode::operator=(DisplayNode &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DisplayNode DisplayNode::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DisplayNode DisplayNode::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DisplayNode DisplayNode::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DisplayNode> DisplayNode::Instances() { return ::Udm::InstantiatedAttr< DisplayNode>(impl); }
	DisplayNode DisplayNode::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DisplayNode> DisplayNode::Derived() { return ::Udm::DerivedAttr< DisplayNode>(impl); }
	::Udm::ArchetypeAttr< DisplayNode> DisplayNode::Archetype() const { return ::Udm::ArchetypeAttr< DisplayNode>(impl); }
	::Udm::ParentAttr< ::PICML::Path> DisplayNode::parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void DisplayNode::Accept(Visitor &v) { v.Visit_DisplayNode(*this); }

	::Uml::Class DisplayNode::meta;

	Edge::Edge() {}
	Edge::Edge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Edge::Edge(const Edge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Edge::Edge(Edge &&master) : MgaObject(master) {};

	Edge Edge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Edge& Edge::operator=(Edge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Edge Edge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Edge Edge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Edge Edge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Edge> Edge::Instances() { return ::Udm::InstantiatedAttr< Edge>(impl); }
	Edge Edge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Edge> Edge::Derived() { return ::Udm::DerivedAttr< Edge>(impl); }
	::Udm::ArchetypeAttr< Edge> Edge::Archetype() const { return ::Udm::ArchetypeAttr< Edge>(impl); }
	::Udm::AClassPointerAttr< SrcEdge, GraphVertex> Edge::dstSrcEdge() const { return ::Udm::AClassPointerAttr< SrcEdge, GraphVertex>(impl, meta_dstSrcEdge, meta_dstSrcEdge_rev); }
	::Udm::AClassPointerAttr< DstEdge, GraphVertex> Edge::srcDstEdge() const { return ::Udm::AClassPointerAttr< DstEdge, GraphVertex>(impl, meta_srcDstEdge, meta_srcDstEdge_rev); }
	::Udm::AClassAssocAttr< EdgeProperty, Property> Edge::srcPropertyConnector() const { return ::Udm::AClassAssocAttr< EdgeProperty, Property>(impl, meta_srcPropertyConnector, meta_srcPropertyConnector_rev); }
	::Udm::ParentAttr< ::PICML::Path> Edge::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::Path> Edge::parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void Edge::Accept(Visitor &v) { v.Visit_Edge(*this); }

	::Uml::Class Edge::meta;
	::Uml::AssociationRole Edge::meta_dstSrcEdge;
	::Uml::AssociationRole Edge::meta_dstSrcEdge_rev;
	::Uml::AssociationRole Edge::meta_srcDstEdge;
	::Uml::AssociationRole Edge::meta_srcDstEdge_rev;
	::Uml::AssociationRole Edge::meta_srcPropertyConnector;
	::Uml::AssociationRole Edge::meta_srcPropertyConnector_rev;
	::Uml::CompositionParentRole Edge::meta_Path_parent;

	EdgeProperty::EdgeProperty() {}
	EdgeProperty::EdgeProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EdgeProperty::EdgeProperty(const EdgeProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EdgeProperty::EdgeProperty(EdgeProperty &&master) : MgaObject(master) {};

	EdgeProperty EdgeProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EdgeProperty& EdgeProperty::operator=(EdgeProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EdgeProperty EdgeProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EdgeProperty EdgeProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EdgeProperty EdgeProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EdgeProperty> EdgeProperty::Instances() { return ::Udm::InstantiatedAttr< EdgeProperty>(impl); }
	EdgeProperty EdgeProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EdgeProperty> EdgeProperty::Derived() { return ::Udm::DerivedAttr< EdgeProperty>(impl); }
	::Udm::ArchetypeAttr< EdgeProperty> EdgeProperty::Archetype() const { return ::Udm::ArchetypeAttr< EdgeProperty>(impl); }
	::Udm::ParentAttr< ::PICML::Path> EdgeProperty::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::Path> EdgeProperty::parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Property> EdgeProperty::srcPropertyConnector_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_srcPropertyConnector_end_); }
	::Udm::AssocEndAttr< ::PICML::Edge> EdgeProperty::dstPropertyConnector_end() const { return ::Udm::AssocEndAttr< ::PICML::Edge>(impl, meta_dstPropertyConnector_end_); }
	void EdgeProperty::Accept(Visitor &v) { v.Visit_EdgeProperty(*this); }

	::Uml::Class EdgeProperty::meta;
	::Uml::CompositionParentRole EdgeProperty::meta_Path_parent;
	::Uml::AssociationRole EdgeProperty::meta_srcPropertyConnector_end_;
	::Uml::AssociationRole EdgeProperty::meta_dstPropertyConnector_end_;

	SrcEdge::SrcEdge() {}
	SrcEdge::SrcEdge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SrcEdge::SrcEdge(const SrcEdge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SrcEdge::SrcEdge(SrcEdge &&master) : MgaObject(master) {};

	SrcEdge SrcEdge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SrcEdge& SrcEdge::operator=(SrcEdge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SrcEdge SrcEdge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SrcEdge SrcEdge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SrcEdge SrcEdge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SrcEdge> SrcEdge::Instances() { return ::Udm::InstantiatedAttr< SrcEdge>(impl); }
	SrcEdge SrcEdge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SrcEdge> SrcEdge::Derived() { return ::Udm::DerivedAttr< SrcEdge>(impl); }
	::Udm::ArchetypeAttr< SrcEdge> SrcEdge::Archetype() const { return ::Udm::ArchetypeAttr< SrcEdge>(impl); }
	::Udm::ParentAttr< ::PICML::Path> SrcEdge::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::Path> SrcEdge::parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Edge> SrcEdge::srcSrcEdge_end() const { return ::Udm::AssocEndAttr< ::PICML::Edge>(impl, meta_srcSrcEdge_end_); }
	::Udm::AssocEndAttr< ::PICML::GraphVertex> SrcEdge::dstSrcEdge_end() const { return ::Udm::AssocEndAttr< ::PICML::GraphVertex>(impl, meta_dstSrcEdge_end_); }
	void SrcEdge::Accept(Visitor &v) { v.Visit_SrcEdge(*this); }

	::Uml::Class SrcEdge::meta;
	::Uml::CompositionParentRole SrcEdge::meta_Path_parent;
	::Uml::AssociationRole SrcEdge::meta_srcSrcEdge_end_;
	::Uml::AssociationRole SrcEdge::meta_dstSrcEdge_end_;

	GraphVertex::GraphVertex() {}
	GraphVertex::GraphVertex(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	GraphVertex::GraphVertex(const GraphVertex &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	GraphVertex::GraphVertex(GraphVertex &&master) : MgaObject(master) {};

	GraphVertex GraphVertex::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GraphVertex& GraphVertex::operator=(GraphVertex &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GraphVertex GraphVertex::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GraphVertex GraphVertex::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GraphVertex GraphVertex::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GraphVertex> GraphVertex::Instances() { return ::Udm::InstantiatedAttr< GraphVertex>(impl); }
	GraphVertex GraphVertex::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GraphVertex> GraphVertex::Derived() { return ::Udm::DerivedAttr< GraphVertex>(impl); }
	::Udm::ArchetypeAttr< GraphVertex> GraphVertex::Archetype() const { return ::Udm::ArchetypeAttr< GraphVertex>(impl); }
	::Udm::AClassPointerAttr< SrcEdge, Edge> GraphVertex::srcSrcEdge() const { return ::Udm::AClassPointerAttr< SrcEdge, Edge>(impl, meta_srcSrcEdge, meta_srcSrcEdge_rev); }
	::Udm::AClassPointerAttr< DstEdge, Edge> GraphVertex::dstDstEdge() const { return ::Udm::AClassPointerAttr< DstEdge, Edge>(impl, meta_dstDstEdge, meta_dstDstEdge_rev); }
	::Udm::ParentAttr< ::PICML::Path> GraphVertex::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> GraphVertex::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class GraphVertex::meta;
	::Uml::AssociationRole GraphVertex::meta_srcSrcEdge;
	::Uml::AssociationRole GraphVertex::meta_srcSrcEdge_rev;
	::Uml::AssociationRole GraphVertex::meta_dstDstEdge;
	::Uml::AssociationRole GraphVertex::meta_dstDstEdge_rev;
	::Uml::CompositionParentRole GraphVertex::meta_Path_parent;

	DstEdge::DstEdge() {}
	DstEdge::DstEdge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DstEdge::DstEdge(const DstEdge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DstEdge::DstEdge(DstEdge &&master) : MgaObject(master) {};

	DstEdge DstEdge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DstEdge& DstEdge::operator=(DstEdge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DstEdge DstEdge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DstEdge DstEdge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DstEdge DstEdge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DstEdge> DstEdge::Instances() { return ::Udm::InstantiatedAttr< DstEdge>(impl); }
	DstEdge DstEdge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DstEdge> DstEdge::Derived() { return ::Udm::DerivedAttr< DstEdge>(impl); }
	::Udm::ArchetypeAttr< DstEdge> DstEdge::Archetype() const { return ::Udm::ArchetypeAttr< DstEdge>(impl); }
	::Udm::ParentAttr< ::PICML::ConnectedComponent> DstEdge::ConnectedComponent_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectedComponent>(impl, meta_ConnectedComponent_parent); }
	::Udm::ParentAttr< ::PICML::Path> DstEdge::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> DstEdge::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::GraphVertex> DstEdge::srcDstEdge_end() const { return ::Udm::AssocEndAttr< ::PICML::GraphVertex>(impl, meta_srcDstEdge_end_); }
	::Udm::AssocEndAttr< ::PICML::Edge> DstEdge::dstDstEdge_end() const { return ::Udm::AssocEndAttr< ::PICML::Edge>(impl, meta_dstDstEdge_end_); }
	void DstEdge::Accept(Visitor &v) { v.Visit_DstEdge(*this); }

	::Uml::Class DstEdge::meta;
	::Uml::CompositionParentRole DstEdge::meta_ConnectedComponent_parent;
	::Uml::CompositionParentRole DstEdge::meta_Path_parent;
	::Uml::AssociationRole DstEdge::meta_srcDstEdge_end_;
	::Uml::AssociationRole DstEdge::meta_dstDstEdge_end_;

	PathDiagrams::PathDiagrams() {}
	PathDiagrams::PathDiagrams(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PathDiagrams::PathDiagrams(const PathDiagrams &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PathDiagrams::PathDiagrams(PathDiagrams &&master) : UDM_OBJECT(master) {};

	PathDiagrams PathDiagrams::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathDiagrams& PathDiagrams::operator=(PathDiagrams &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathDiagrams PathDiagrams::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathDiagrams PathDiagrams::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathDiagrams PathDiagrams::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathDiagrams> PathDiagrams::Instances() { return ::Udm::InstantiatedAttr< PathDiagrams>(impl); }
	PathDiagrams PathDiagrams::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathDiagrams> PathDiagrams::Derived() { return ::Udm::DerivedAttr< PathDiagrams>(impl); }
	::Udm::ArchetypeAttr< PathDiagrams> PathDiagrams::Archetype() const { return ::Udm::ArchetypeAttr< PathDiagrams>(impl); }
	::Udm::StringAttr PathDiagrams::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::Paths> PathDiagrams::Paths_children() const { return ::Udm::ChildrenAttr< ::PICML::Paths>(impl, meta_Paths_children); }
	::Udm::ChildrenAttr< ::PICML::Paths> PathDiagrams::Paths_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Paths>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PathDiagrams::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> PathDiagrams::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> PathDiagrams::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PathDiagrams::Accept(Visitor &v) { v.Visit_PathDiagrams(*this); }

	::Uml::Class PathDiagrams::meta;
	::Uml::Attribute PathDiagrams::meta_name;
	::Uml::CompositionChildRole PathDiagrams::meta_Paths_children;
	::Uml::CompositionParentRole PathDiagrams::meta_RootFolder_parent;

	ConnectedComponent::ConnectedComponent() {}
	ConnectedComponent::ConnectedComponent(::Udm::ObjectImpl *impl) : GraphVertex(impl), MgaObject(impl) {}
	ConnectedComponent::ConnectedComponent(const ConnectedComponent &master) : GraphVertex(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectedComponent::ConnectedComponent(ConnectedComponent &&master) : GraphVertex(master), MgaObject(master) {};

	ConnectedComponent ConnectedComponent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectedComponent& ConnectedComponent::operator=(ConnectedComponent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectedComponent ConnectedComponent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectedComponent ConnectedComponent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectedComponent ConnectedComponent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectedComponent> ConnectedComponent::Instances() { return ::Udm::InstantiatedAttr< ConnectedComponent>(impl); }
	ConnectedComponent ConnectedComponent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectedComponent> ConnectedComponent::Derived() { return ::Udm::DerivedAttr< ConnectedComponent>(impl); }
	::Udm::ArchetypeAttr< ConnectedComponent> ConnectedComponent::Archetype() const { return ::Udm::ArchetypeAttr< ConnectedComponent>(impl); }
	::Udm::ChildrenAttr< ::PICML::Port> ConnectedComponent::Port_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, meta_Port_children); }
	::Udm::ChildrenAttr< ::PICML::DstEdge> ConnectedComponent::DstEdge_children() const { return ::Udm::ChildrenAttr< ::PICML::DstEdge>(impl, meta_DstEdge_children); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> ConnectedComponent::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DstEdge> ConnectedComponent::DstEdge_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DstEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Taggable> ConnectedComponent::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Port> ConnectedComponent::Port_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPort> ConnectedComponent::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPort> ConnectedComponent::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort> ConnectedComponent::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPort> ConnectedComponent::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventPort> ConnectedComponent::EventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> ConnectedComponent::ObjectPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CommonPortAttrs> ConnectedComponent::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ConnectedComponent::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Path> ConnectedComponent::parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectedComponent::Accept(Visitor &v) { v.Visit_ConnectedComponent(*this); }

	::Uml::Class ConnectedComponent::meta;
	::Uml::CompositionChildRole ConnectedComponent::meta_Port_children;
	::Uml::CompositionChildRole ConnectedComponent::meta_DstEdge_children;

	Path::Path() {}
	Path::Path(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Path::Path(const Path &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Path::Path(Path &&master) : MgaObject(master) {};

	Path Path::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Path& Path::operator=(Path &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Path Path::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Path Path::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Path Path::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Path> Path::Instances() { return ::Udm::InstantiatedAttr< Path>(impl); }
	Path Path::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Path> Path::Derived() { return ::Udm::DerivedAttr< Path>(impl); }
	::Udm::ArchetypeAttr< Path> Path::Archetype() const { return ::Udm::ArchetypeAttr< Path>(impl); }
	::Udm::AssocAttr< PathReference> Path::referedbyPathReference() const { return ::Udm::AssocAttr< PathReference>(impl, meta_referedbyPathReference); }
	::Udm::AClassAssocAttr< PathProperty, Property> Path::dstPathProperty() const { return ::Udm::AClassAssocAttr< PathProperty, Property>(impl, meta_dstPathProperty, meta_dstPathProperty_rev); }
	::Udm::ChildrenAttr< ::PICML::Property> Path::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> Path::GraphVertex_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, meta_GraphVertex_children); }
	::Udm::ChildrenAttr< ::PICML::Edge> Path::Edge_children() const { return ::Udm::ChildrenAttr< ::PICML::Edge>(impl, meta_Edge_children); }
	::Udm::ChildrenAttr< ::PICML::EdgeProperty> Path::EdgeProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::EdgeProperty>(impl, meta_EdgeProperty_children); }
	::Udm::ChildrenAttr< ::PICML::SrcEdge> Path::SrcEdge_children() const { return ::Udm::ChildrenAttr< ::PICML::SrcEdge>(impl, meta_SrcEdge_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> Path::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::PICML::DstEdge> Path::DstEdge_children() const { return ::Udm::ChildrenAttr< ::PICML::DstEdge>(impl, meta_DstEdge_children); }
	::Udm::ChildrenAttr< ::PICML::DisplayNode> Path::DisplayNode_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DisplayNode>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Edge> Path::Edge_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Edge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EdgeProperty> Path::EdgeProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EdgeProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SrcEdge> Path::SrcEdge_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SrcEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> Path::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DstEdge> Path::DstEdge_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DstEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectedComponent> Path::ConnectedComponent_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectedComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> Path::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> Path::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> Path::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> Path::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Port> Path::Port_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPort> Path::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPort> Path::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort> Path::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPort> Path::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventPort> Path::EventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> Path::ObjectPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> Path::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Path::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Paths> Path::Paths_parent() const { return ::Udm::ParentAttr< ::PICML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::PICML::Paths> Path::parent() const { return ::Udm::ParentAttr< ::PICML::Paths>(impl, ::Udm::NULLPARENTROLE); }
	void Path::Accept(Visitor &v) { v.Visit_Path(*this); }

	::Uml::Class Path::meta;
	::Uml::AssociationRole Path::meta_referedbyPathReference;
	::Uml::AssociationRole Path::meta_dstPathProperty;
	::Uml::AssociationRole Path::meta_dstPathProperty_rev;
	::Uml::CompositionChildRole Path::meta_Property_children;
	::Uml::CompositionChildRole Path::meta_GraphVertex_children;
	::Uml::CompositionChildRole Path::meta_Edge_children;
	::Uml::CompositionChildRole Path::meta_EdgeProperty_children;
	::Uml::CompositionChildRole Path::meta_SrcEdge_children;
	::Uml::CompositionChildRole Path::meta_ComponentRef_children;
	::Uml::CompositionChildRole Path::meta_DstEdge_children;
	::Uml::CompositionParentRole Path::meta_Paths_parent;

	BenchmarkCharacteristics::BenchmarkCharacteristics() {}
	BenchmarkCharacteristics::BenchmarkCharacteristics(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkCharacteristics::BenchmarkCharacteristics(const BenchmarkCharacteristics &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkCharacteristics::BenchmarkCharacteristics(BenchmarkCharacteristics &&master) : MgaObject(master) {};

	BenchmarkCharacteristics BenchmarkCharacteristics::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkCharacteristics& BenchmarkCharacteristics::operator=(BenchmarkCharacteristics &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkCharacteristics BenchmarkCharacteristics::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkCharacteristics BenchmarkCharacteristics::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkCharacteristics BenchmarkCharacteristics::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Instances() { return ::Udm::InstantiatedAttr< BenchmarkCharacteristics>(impl); }
	BenchmarkCharacteristics BenchmarkCharacteristics::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Derived() { return ::Udm::DerivedAttr< BenchmarkCharacteristics>(impl); }
	::Udm::ArchetypeAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkCharacteristics>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> BenchmarkCharacteristics::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> BenchmarkCharacteristics::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::BenchmarkType> BenchmarkCharacteristics::srcBenchmarkCharacteristics_end() const { return ::Udm::AssocEndAttr< ::PICML::BenchmarkType>(impl, meta_srcBenchmarkCharacteristics_end_); }
	::Udm::AssocEndAttr< ::PICML::MetricsBase> BenchmarkCharacteristics::dstBenchmarkCharacteristics_end() const { return ::Udm::AssocEndAttr< ::PICML::MetricsBase>(impl, meta_dstBenchmarkCharacteristics_end_); }
	void BenchmarkCharacteristics::Accept(Visitor &v) { v.Visit_BenchmarkCharacteristics(*this); }

	::Uml::Class BenchmarkCharacteristics::meta;
	::Uml::CompositionParentRole BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_;
	::Uml::AssociationRole BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_;

	PeriodicBenchmarks::PeriodicBenchmarks() {}
	PeriodicBenchmarks::PeriodicBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	PeriodicBenchmarks::PeriodicBenchmarks(const PeriodicBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	PeriodicBenchmarks::PeriodicBenchmarks(PeriodicBenchmarks &&master) : BenchmarkType(master) {};

	PeriodicBenchmarks PeriodicBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PeriodicBenchmarks& PeriodicBenchmarks::operator=(PeriodicBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PeriodicBenchmarks PeriodicBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PeriodicBenchmarks PeriodicBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PeriodicBenchmarks PeriodicBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PeriodicBenchmarks> PeriodicBenchmarks::Instances() { return ::Udm::InstantiatedAttr< PeriodicBenchmarks>(impl); }
	PeriodicBenchmarks PeriodicBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PeriodicBenchmarks> PeriodicBenchmarks::Derived() { return ::Udm::DerivedAttr< PeriodicBenchmarks>(impl); }
	::Udm::ArchetypeAttr< PeriodicBenchmarks> PeriodicBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< PeriodicBenchmarks>(impl); }
	::Udm::IntegerAttr PeriodicBenchmarks::timeperiod() const { return ::Udm::IntegerAttr(impl, meta_timeperiod); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> PeriodicBenchmarks::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void PeriodicBenchmarks::Accept(Visitor &v) { v.Visit_PeriodicBenchmarks(*this); }

	::Uml::Class PeriodicBenchmarks::meta;
	::Uml::Attribute PeriodicBenchmarks::meta_timeperiod;

	TriggerBenchmarks::TriggerBenchmarks() {}
	TriggerBenchmarks::TriggerBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	TriggerBenchmarks::TriggerBenchmarks(const TriggerBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	TriggerBenchmarks::TriggerBenchmarks(TriggerBenchmarks &&master) : BenchmarkType(master) {};

	TriggerBenchmarks TriggerBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TriggerBenchmarks& TriggerBenchmarks::operator=(TriggerBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TriggerBenchmarks TriggerBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TriggerBenchmarks TriggerBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TriggerBenchmarks TriggerBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TriggerBenchmarks> TriggerBenchmarks::Instances() { return ::Udm::InstantiatedAttr< TriggerBenchmarks>(impl); }
	TriggerBenchmarks TriggerBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TriggerBenchmarks> TriggerBenchmarks::Derived() { return ::Udm::DerivedAttr< TriggerBenchmarks>(impl); }
	::Udm::ArchetypeAttr< TriggerBenchmarks> TriggerBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< TriggerBenchmarks>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TriggerBenchmarks::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TriggerBenchmarks::Accept(Visitor &v) { v.Visit_TriggerBenchmarks(*this); }

	::Uml::Class TriggerBenchmarks::meta;

	BenchmarkType::BenchmarkType() {}
	BenchmarkType::BenchmarkType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkType::BenchmarkType(const BenchmarkType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkType::BenchmarkType(BenchmarkType &&master) : MgaObject(master) {};

	BenchmarkType BenchmarkType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkType& BenchmarkType::operator=(BenchmarkType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkType BenchmarkType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkType BenchmarkType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkType BenchmarkType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkType> BenchmarkType::Instances() { return ::Udm::InstantiatedAttr< BenchmarkType>(impl); }
	BenchmarkType BenchmarkType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkType> BenchmarkType::Derived() { return ::Udm::DerivedAttr< BenchmarkType>(impl); }
	::Udm::ArchetypeAttr< BenchmarkType> BenchmarkType::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkType>(impl); }
	::Udm::AClassPointerAttr< BenchmarkCharacteristics, MetricsBase> BenchmarkType::dstBenchmarkCharacteristics() const { return ::Udm::AClassPointerAttr< BenchmarkCharacteristics, MetricsBase>(impl, meta_dstBenchmarkCharacteristics, meta_dstBenchmarkCharacteristics_rev); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> BenchmarkType::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> BenchmarkType::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BenchmarkType::meta;
	::Uml::AssociationRole BenchmarkType::meta_dstBenchmarkCharacteristics;
	::Uml::AssociationRole BenchmarkType::meta_dstBenchmarkCharacteristics_rev;
	::Uml::CompositionParentRole BenchmarkType::meta_BenchmarkAnalysis_parent;

	WorkLoadOperationConnection::WorkLoadOperationConnection() {}
	WorkLoadOperationConnection::WorkLoadOperationConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkLoadOperationConnection::WorkLoadOperationConnection(const WorkLoadOperationConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkLoadOperationConnection::WorkLoadOperationConnection(WorkLoadOperationConnection &&master) : MgaObject(master) {};

	WorkLoadOperationConnection WorkLoadOperationConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkLoadOperationConnection& WorkLoadOperationConnection::operator=(WorkLoadOperationConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkLoadOperationConnection WorkLoadOperationConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkLoadOperationConnection WorkLoadOperationConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkLoadOperationConnection WorkLoadOperationConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Instances() { return ::Udm::InstantiatedAttr< WorkLoadOperationConnection>(impl); }
	WorkLoadOperationConnection WorkLoadOperationConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Derived() { return ::Udm::DerivedAttr< WorkLoadOperationConnection>(impl); }
	::Udm::ArchetypeAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Archetype() const { return ::Udm::ArchetypeAttr< WorkLoadOperationConnection>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> WorkLoadOperationConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> WorkLoadOperationConnection::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OperationRef> WorkLoadOperationConnection::srcWorkLoadOperationConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::OperationRef>(impl, meta_srcWorkLoadOperationConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::Task> WorkLoadOperationConnection::dstWorkLoadOperationConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Task>(impl, meta_dstWorkLoadOperationConnection_end_); }
	void WorkLoadOperationConnection::Accept(Visitor &v) { v.Visit_WorkLoadOperationConnection(*this); }

	::Uml::Class WorkLoadOperationConnection::meta;
	::Uml::CompositionParentRole WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_;
	::Uml::AssociationRole WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_;

	FixedIterationBenchmarks::FixedIterationBenchmarks() {}
	FixedIterationBenchmarks::FixedIterationBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	FixedIterationBenchmarks::FixedIterationBenchmarks(const FixedIterationBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	FixedIterationBenchmarks::FixedIterationBenchmarks(FixedIterationBenchmarks &&master) : BenchmarkType(master) {};

	FixedIterationBenchmarks FixedIterationBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FixedIterationBenchmarks& FixedIterationBenchmarks::operator=(FixedIterationBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FixedIterationBenchmarks FixedIterationBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FixedIterationBenchmarks FixedIterationBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FixedIterationBenchmarks FixedIterationBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Instances() { return ::Udm::InstantiatedAttr< FixedIterationBenchmarks>(impl); }
	FixedIterationBenchmarks FixedIterationBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Derived() { return ::Udm::DerivedAttr< FixedIterationBenchmarks>(impl); }
	::Udm::ArchetypeAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< FixedIterationBenchmarks>(impl); }
	::Udm::IntegerAttr FixedIterationBenchmarks::benchmarkIterations() const { return ::Udm::IntegerAttr(impl, meta_benchmarkIterations); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> FixedIterationBenchmarks::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void FixedIterationBenchmarks::Accept(Visitor &v) { v.Visit_FixedIterationBenchmarks(*this); }

	::Uml::Class FixedIterationBenchmarks::meta;
	::Uml::Attribute FixedIterationBenchmarks::meta_benchmarkIterations;

	CompRef::CompRef() {}
	CompRef::CompRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CompRef::CompRef(const CompRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CompRef::CompRef(CompRef &&master) : MgaObject(master) {};

	CompRef CompRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CompRef& CompRef::operator=(CompRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CompRef CompRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CompRef CompRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CompRef CompRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CompRef> CompRef::Instances() { return ::Udm::InstantiatedAttr< CompRef>(impl); }
	CompRef CompRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CompRef> CompRef::Derived() { return ::Udm::DerivedAttr< CompRef>(impl); }
	::Udm::ArchetypeAttr< CompRef> CompRef::Archetype() const { return ::Udm::ArchetypeAttr< CompRef>(impl); }
	::Udm::PointerAttr< Component> CompRef::ref() const { return ::Udm::PointerAttr< Component>(impl, meta_ref); }
	::Udm::AClassPointerAttr< ComponentOperation, OperationRef> CompRef::srcComponentOperation() const { return ::Udm::AClassPointerAttr< ComponentOperation, OperationRef>(impl, meta_srcComponentOperation, meta_srcComponentOperation_rev); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> CompRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> CompRef::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void CompRef::Accept(Visitor &v) { v.Visit_CompRef(*this); }

	::Uml::Class CompRef::meta;
	::Uml::AssociationRole CompRef::meta_ref;
	::Uml::AssociationRole CompRef::meta_srcComponentOperation;
	::Uml::AssociationRole CompRef::meta_srcComponentOperation_rev;
	::Uml::CompositionParentRole CompRef::meta_BenchmarkAnalysis_parent;

	ComponentOperation::ComponentOperation() {}
	ComponentOperation::ComponentOperation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentOperation::ComponentOperation(const ComponentOperation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentOperation::ComponentOperation(ComponentOperation &&master) : MgaObject(master) {};

	ComponentOperation ComponentOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentOperation& ComponentOperation::operator=(ComponentOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentOperation ComponentOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentOperation ComponentOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentOperation ComponentOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentOperation> ComponentOperation::Instances() { return ::Udm::InstantiatedAttr< ComponentOperation>(impl); }
	ComponentOperation ComponentOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentOperation> ComponentOperation::Derived() { return ::Udm::DerivedAttr< ComponentOperation>(impl); }
	::Udm::ArchetypeAttr< ComponentOperation> ComponentOperation::Archetype() const { return ::Udm::ArchetypeAttr< ComponentOperation>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> ComponentOperation::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> ComponentOperation::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OperationRef> ComponentOperation::srcComponentOperation_end() const { return ::Udm::AssocEndAttr< ::PICML::OperationRef>(impl, meta_srcComponentOperation_end_); }
	::Udm::AssocEndAttr< ::PICML::CompRef> ComponentOperation::dstComponentOperation_end() const { return ::Udm::AssocEndAttr< ::PICML::CompRef>(impl, meta_dstComponentOperation_end_); }
	void ComponentOperation::Accept(Visitor &v) { v.Visit_ComponentOperation(*this); }

	::Uml::Class ComponentOperation::meta;
	::Uml::CompositionParentRole ComponentOperation::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole ComponentOperation::meta_srcComponentOperation_end_;
	::Uml::AssociationRole ComponentOperation::meta_dstComponentOperation_end_;

	WorkloadCharacteristics::WorkloadCharacteristics() {}
	WorkloadCharacteristics::WorkloadCharacteristics(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkloadCharacteristics::WorkloadCharacteristics(const WorkloadCharacteristics &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkloadCharacteristics::WorkloadCharacteristics(WorkloadCharacteristics &&master) : MgaObject(master) {};

	WorkloadCharacteristics WorkloadCharacteristics::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkloadCharacteristics& WorkloadCharacteristics::operator=(WorkloadCharacteristics &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkloadCharacteristics WorkloadCharacteristics::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkloadCharacteristics WorkloadCharacteristics::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkloadCharacteristics WorkloadCharacteristics::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkloadCharacteristics> WorkloadCharacteristics::Instances() { return ::Udm::InstantiatedAttr< WorkloadCharacteristics>(impl); }
	WorkloadCharacteristics WorkloadCharacteristics::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkloadCharacteristics> WorkloadCharacteristics::Derived() { return ::Udm::DerivedAttr< WorkloadCharacteristics>(impl); }
	::Udm::ArchetypeAttr< WorkloadCharacteristics> WorkloadCharacteristics::Archetype() const { return ::Udm::ArchetypeAttr< WorkloadCharacteristics>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> WorkloadCharacteristics::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> WorkloadCharacteristics::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MetricsBase> WorkloadCharacteristics::srcWorkloadCharacteristics_end() const { return ::Udm::AssocEndAttr< ::PICML::MetricsBase>(impl, meta_srcWorkloadCharacteristics_end_); }
	::Udm::AssocEndAttr< ::PICML::TaskSet> WorkloadCharacteristics::dstWorkloadCharacteristics_end() const { return ::Udm::AssocEndAttr< ::PICML::TaskSet>(impl, meta_dstWorkloadCharacteristics_end_); }
	void WorkloadCharacteristics::Accept(Visitor &v) { v.Visit_WorkloadCharacteristics(*this); }

	::Uml::Class WorkloadCharacteristics::meta;
	::Uml::CompositionParentRole WorkloadCharacteristics::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_;
	::Uml::AssociationRole WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_;

	Task::Task() {}
	Task::Task(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Task::Task(const Task &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Task::Task(Task &&master) : MgaObject(master) {};

	Task Task::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Task& Task::operator=(Task &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Task Task::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Task Task::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Task Task::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Task> Task::Instances() { return ::Udm::InstantiatedAttr< Task>(impl); }
	Task Task::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Task> Task::Derived() { return ::Udm::DerivedAttr< Task>(impl); }
	::Udm::ArchetypeAttr< Task> Task::Archetype() const { return ::Udm::ArchetypeAttr< Task>(impl); }
	::Udm::AssocAttr< TaskSet> Task::setTaskSet() const { return ::Udm::AssocAttr< TaskSet>(impl, meta_setTaskSet); }
	::Udm::AClassPointerAttr< WorkLoadOperationConnection, OperationRef> Task::srcWorkLoadOperationConnection() const { return ::Udm::AClassPointerAttr< WorkLoadOperationConnection, OperationRef>(impl, meta_srcWorkLoadOperationConnection, meta_srcWorkLoadOperationConnection_rev); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> Task::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> Task::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Task::Accept(Visitor &v) { v.Visit_Task(*this); }

	::Uml::Class Task::meta;
	::Uml::AssociationRole Task::meta_setTaskSet;
	::Uml::AssociationRole Task::meta_srcWorkLoadOperationConnection;
	::Uml::AssociationRole Task::meta_srcWorkLoadOperationConnection_rev;
	::Uml::CompositionParentRole Task::meta_BenchmarkAnalysis_parent;

	TaskSet::TaskSet() {}
	TaskSet::TaskSet(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TaskSet::TaskSet(const TaskSet &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TaskSet::TaskSet(TaskSet &&master) : MgaObject(master) {};

	TaskSet TaskSet::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TaskSet& TaskSet::operator=(TaskSet &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TaskSet TaskSet::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TaskSet TaskSet::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TaskSet TaskSet::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TaskSet> TaskSet::Instances() { return ::Udm::InstantiatedAttr< TaskSet>(impl); }
	TaskSet TaskSet::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TaskSet> TaskSet::Derived() { return ::Udm::DerivedAttr< TaskSet>(impl); }
	::Udm::ArchetypeAttr< TaskSet> TaskSet::Archetype() const { return ::Udm::ArchetypeAttr< TaskSet>(impl); }
	::Udm::IntegerAttr TaskSet::priority() const { return ::Udm::IntegerAttr(impl, meta_priority); }
	::Udm::IntegerAttr TaskSet::rate() const { return ::Udm::IntegerAttr(impl, meta_rate); }
	::Udm::AssocAttr< Task> TaskSet::members() const { return ::Udm::AssocAttr< Task>(impl, meta_members); }
	::Udm::AClassPointerAttr< WorkloadCharacteristics, MetricsBase> TaskSet::srcWorkloadCharacteristics() const { return ::Udm::AClassPointerAttr< WorkloadCharacteristics, MetricsBase>(impl, meta_srcWorkloadCharacteristics, meta_srcWorkloadCharacteristics_rev); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TaskSet::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TaskSet::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TaskSet::Accept(Visitor &v) { v.Visit_TaskSet(*this); }

	::Uml::Class TaskSet::meta;
	::Uml::Attribute TaskSet::meta_priority;
	::Uml::Attribute TaskSet::meta_rate;
	::Uml::AssociationRole TaskSet::meta_members;
	::Uml::AssociationRole TaskSet::meta_srcWorkloadCharacteristics;
	::Uml::AssociationRole TaskSet::meta_srcWorkloadCharacteristics_rev;
	::Uml::CompositionParentRole TaskSet::meta_BenchmarkAnalysis_parent;

	TimerEventSinkConn::TimerEventSinkConn() {}
	TimerEventSinkConn::TimerEventSinkConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimerEventSinkConn::TimerEventSinkConn(const TimerEventSinkConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimerEventSinkConn::TimerEventSinkConn(TimerEventSinkConn &&master) : MgaObject(master) {};

	TimerEventSinkConn TimerEventSinkConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimerEventSinkConn& TimerEventSinkConn::operator=(TimerEventSinkConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimerEventSinkConn TimerEventSinkConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimerEventSinkConn TimerEventSinkConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimerEventSinkConn TimerEventSinkConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimerEventSinkConn> TimerEventSinkConn::Instances() { return ::Udm::InstantiatedAttr< TimerEventSinkConn>(impl); }
	TimerEventSinkConn TimerEventSinkConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimerEventSinkConn> TimerEventSinkConn::Derived() { return ::Udm::DerivedAttr< TimerEventSinkConn>(impl); }
	::Udm::ArchetypeAttr< TimerEventSinkConn> TimerEventSinkConn::Archetype() const { return ::Udm::ArchetypeAttr< TimerEventSinkConn>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimerEventSinkConn::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimerEventSinkConn::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::EventRef> TimerEventSinkConn::srcTimerEventSinkConn_end() const { return ::Udm::AssocEndAttr< ::PICML::EventRef>(impl, meta_srcTimerEventSinkConn_end_); }
	::Udm::AssocEndAttr< ::PICML::TimeProbe> TimerEventSinkConn::dstTimerEventSinkConn_end() const { return ::Udm::AssocEndAttr< ::PICML::TimeProbe>(impl, meta_dstTimerEventSinkConn_end_); }
	void TimerEventSinkConn::Accept(Visitor &v) { v.Visit_TimerEventSinkConn(*this); }

	::Uml::Class TimerEventSinkConn::meta;
	::Uml::CompositionParentRole TimerEventSinkConn::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole TimerEventSinkConn::meta_srcTimerEventSinkConn_end_;
	::Uml::AssociationRole TimerEventSinkConn::meta_dstTimerEventSinkConn_end_;

	EventRef::EventRef() {}
	EventRef::EventRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventRef::EventRef(const EventRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventRef::EventRef(EventRef &&master) : MgaObject(master) {};

	EventRef EventRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventRef& EventRef::operator=(EventRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventRef EventRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventRef EventRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventRef EventRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventRef> EventRef::Instances() { return ::Udm::InstantiatedAttr< EventRef>(impl); }
	EventRef EventRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventRef> EventRef::Derived() { return ::Udm::DerivedAttr< EventRef>(impl); }
	::Udm::ArchetypeAttr< EventRef> EventRef::Archetype() const { return ::Udm::ArchetypeAttr< EventRef>(impl); }
	::Udm::AClassAssocAttr< TimerEventSinkConn, TimeProbe> EventRef::dstTimerEventSinkConn() const { return ::Udm::AClassAssocAttr< TimerEventSinkConn, TimeProbe>(impl, meta_dstTimerEventSinkConn, meta_dstTimerEventSinkConn_rev); }
	::Udm::PointerAttr< Event> EventRef::ref() const { return ::Udm::PointerAttr< Event>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> EventRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> EventRef::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void EventRef::Accept(Visitor &v) { v.Visit_EventRef(*this); }

	::Uml::Class EventRef::meta;
	::Uml::AssociationRole EventRef::meta_dstTimerEventSinkConn;
	::Uml::AssociationRole EventRef::meta_dstTimerEventSinkConn_rev;
	::Uml::AssociationRole EventRef::meta_ref;
	::Uml::CompositionParentRole EventRef::meta_BenchmarkAnalysis_parent;

	OperationRef::OperationRef() {}
	OperationRef::OperationRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OperationRef::OperationRef(const OperationRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationRef::OperationRef(OperationRef &&master) : MgaObject(master) {};

	OperationRef OperationRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationRef& OperationRef::operator=(OperationRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationRef OperationRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationRef OperationRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationRef OperationRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationRef> OperationRef::Instances() { return ::Udm::InstantiatedAttr< OperationRef>(impl); }
	OperationRef OperationRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationRef> OperationRef::Derived() { return ::Udm::DerivedAttr< OperationRef>(impl); }
	::Udm::ArchetypeAttr< OperationRef> OperationRef::Archetype() const { return ::Udm::ArchetypeAttr< OperationRef>(impl); }
	::Udm::AClassPointerAttr< WorkLoadOperationConnection, Task> OperationRef::dstWorkLoadOperationConnection() const { return ::Udm::AClassPointerAttr< WorkLoadOperationConnection, Task>(impl, meta_dstWorkLoadOperationConnection, meta_dstWorkLoadOperationConnection_rev); }
	::Udm::AClassPointerAttr< TimerConnection, TimeProbe> OperationRef::dstTimerConnection() const { return ::Udm::AClassPointerAttr< TimerConnection, TimeProbe>(impl, meta_dstTimerConnection, meta_dstTimerConnection_rev); }
	::Udm::AClassPointerAttr< MetricConnection, MetricsBase> OperationRef::dstMetricConnection() const { return ::Udm::AClassPointerAttr< MetricConnection, MetricsBase>(impl, meta_dstMetricConnection, meta_dstMetricConnection_rev); }
	::Udm::AClassPointerAttr< ComponentOperation, CompRef> OperationRef::dstComponentOperation() const { return ::Udm::AClassPointerAttr< ComponentOperation, CompRef>(impl, meta_dstComponentOperation, meta_dstComponentOperation_rev); }
	::Udm::PointerAttr< OperationBase> OperationRef::ref() const { return ::Udm::PointerAttr< OperationBase>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> OperationRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> OperationRef::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void OperationRef::Accept(Visitor &v) { v.Visit_OperationRef(*this); }

	::Uml::Class OperationRef::meta;
	::Uml::AssociationRole OperationRef::meta_dstWorkLoadOperationConnection;
	::Uml::AssociationRole OperationRef::meta_dstWorkLoadOperationConnection_rev;
	::Uml::AssociationRole OperationRef::meta_dstTimerConnection;
	::Uml::AssociationRole OperationRef::meta_dstTimerConnection_rev;
	::Uml::AssociationRole OperationRef::meta_dstMetricConnection;
	::Uml::AssociationRole OperationRef::meta_dstMetricConnection_rev;
	::Uml::AssociationRole OperationRef::meta_dstComponentOperation;
	::Uml::AssociationRole OperationRef::meta_dstComponentOperation_rev;
	::Uml::AssociationRole OperationRef::meta_ref;
	::Uml::CompositionParentRole OperationRef::meta_BenchmarkAnalysis_parent;

	MetricsBase::MetricsBase() {}
	MetricsBase::MetricsBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MetricsBase::MetricsBase(const MetricsBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MetricsBase::MetricsBase(MetricsBase &&master) : MgaObject(master) {};

	MetricsBase MetricsBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MetricsBase& MetricsBase::operator=(MetricsBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MetricsBase MetricsBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MetricsBase MetricsBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MetricsBase MetricsBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MetricsBase> MetricsBase::Instances() { return ::Udm::InstantiatedAttr< MetricsBase>(impl); }
	MetricsBase MetricsBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MetricsBase> MetricsBase::Derived() { return ::Udm::DerivedAttr< MetricsBase>(impl); }
	::Udm::ArchetypeAttr< MetricsBase> MetricsBase::Archetype() const { return ::Udm::ArchetypeAttr< MetricsBase>(impl); }
	::Udm::StringAttr MetricsBase::fileName() const { return ::Udm::StringAttr(impl, meta_fileName); }
	::Udm::IntegerAttr MetricsBase::warmup() const { return ::Udm::IntegerAttr(impl, meta_warmup); }
	::Udm::IntegerAttr MetricsBase::iterations() const { return ::Udm::IntegerAttr(impl, meta_iterations); }
	::Udm::IntegerAttr MetricsBase::priority() const { return ::Udm::IntegerAttr(impl, meta_priority); }
	::Udm::IntegerAttr MetricsBase::rate() const { return ::Udm::IntegerAttr(impl, meta_rate); }
	::Udm::StringAttr MetricsBase::resolution() const { return ::Udm::StringAttr(impl, meta_resolution); }
	::Udm::AClassPointerAttr< BenchmarkCharacteristics, BenchmarkType> MetricsBase::srcBenchmarkCharacteristics() const { return ::Udm::AClassPointerAttr< BenchmarkCharacteristics, BenchmarkType>(impl, meta_srcBenchmarkCharacteristics, meta_srcBenchmarkCharacteristics_rev); }
	::Udm::AClassPointerAttr< MetricConnection, OperationRef> MetricsBase::srcMetricConnection() const { return ::Udm::AClassPointerAttr< MetricConnection, OperationRef>(impl, meta_srcMetricConnection, meta_srcMetricConnection_rev); }
	::Udm::AClassPointerAttr< WorkloadCharacteristics, TaskSet> MetricsBase::dstWorkloadCharacteristics() const { return ::Udm::AClassPointerAttr< WorkloadCharacteristics, TaskSet>(impl, meta_dstWorkloadCharacteristics, meta_dstWorkloadCharacteristics_rev); }
	::Udm::ChildrenAttr< ::PICML::DataAnalysisBase> MetricsBase::DataAnalysisBase_children() const { return ::Udm::ChildrenAttr< ::PICML::DataAnalysisBase>(impl, meta_DataAnalysisBase_children); }
	::Udm::ChildrenAttr< ::PICML::Jitter> MetricsBase::Jitter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Jitter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Maximum> MetricsBase::Maximum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Maximum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Minimum> MetricsBase::Minimum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Minimum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Average> MetricsBase::Average_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Average>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataAnalysisBase> MetricsBase::DataAnalysisBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataAnalysisBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> MetricsBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> MetricsBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> MetricsBase::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MetricsBase::meta;
	::Uml::Attribute MetricsBase::meta_fileName;
	::Uml::Attribute MetricsBase::meta_warmup;
	::Uml::Attribute MetricsBase::meta_iterations;
	::Uml::Attribute MetricsBase::meta_priority;
	::Uml::Attribute MetricsBase::meta_rate;
	::Uml::Attribute MetricsBase::meta_resolution;
	::Uml::AssociationRole MetricsBase::meta_srcBenchmarkCharacteristics;
	::Uml::AssociationRole MetricsBase::meta_srcBenchmarkCharacteristics_rev;
	::Uml::AssociationRole MetricsBase::meta_srcMetricConnection;
	::Uml::AssociationRole MetricsBase::meta_srcMetricConnection_rev;
	::Uml::AssociationRole MetricsBase::meta_dstWorkloadCharacteristics;
	::Uml::AssociationRole MetricsBase::meta_dstWorkloadCharacteristics_rev;
	::Uml::CompositionChildRole MetricsBase::meta_DataAnalysisBase_children;
	::Uml::CompositionParentRole MetricsBase::meta_BenchmarkAnalysis_parent;

	ComponentAnalyses::ComponentAnalyses() {}
	ComponentAnalyses::ComponentAnalyses(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentAnalyses::ComponentAnalyses(const ComponentAnalyses &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentAnalyses::ComponentAnalyses(ComponentAnalyses &&master) : UDM_OBJECT(master) {};

	ComponentAnalyses ComponentAnalyses::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAnalyses& ComponentAnalyses::operator=(ComponentAnalyses &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAnalyses ComponentAnalyses::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAnalyses ComponentAnalyses::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAnalyses ComponentAnalyses::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAnalyses> ComponentAnalyses::Instances() { return ::Udm::InstantiatedAttr< ComponentAnalyses>(impl); }
	ComponentAnalyses ComponentAnalyses::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAnalyses> ComponentAnalyses::Derived() { return ::Udm::DerivedAttr< ComponentAnalyses>(impl); }
	::Udm::ArchetypeAttr< ComponentAnalyses> ComponentAnalyses::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAnalyses>(impl); }
	::Udm::StringAttr ComponentAnalyses::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkAnalysis> ComponentAnalyses::BenchmarkAnalysis_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_children); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkAnalysis> ComponentAnalyses::BenchmarkAnalysis_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentAnalyses::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentAnalyses::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentAnalyses::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAnalyses::Accept(Visitor &v) { v.Visit_ComponentAnalyses(*this); }

	::Uml::Class ComponentAnalyses::meta;
	::Uml::Attribute ComponentAnalyses::meta_name;
	::Uml::CompositionChildRole ComponentAnalyses::meta_BenchmarkAnalysis_children;
	::Uml::CompositionParentRole ComponentAnalyses::meta_RootFolder_parent;

	BenchmarkAnalysis::BenchmarkAnalysis() {}
	BenchmarkAnalysis::BenchmarkAnalysis(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkAnalysis::BenchmarkAnalysis(const BenchmarkAnalysis &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkAnalysis::BenchmarkAnalysis(BenchmarkAnalysis &&master) : MgaObject(master) {};

	BenchmarkAnalysis BenchmarkAnalysis::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkAnalysis& BenchmarkAnalysis::operator=(BenchmarkAnalysis &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkAnalysis BenchmarkAnalysis::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkAnalysis BenchmarkAnalysis::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkAnalysis BenchmarkAnalysis::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkAnalysis> BenchmarkAnalysis::Instances() { return ::Udm::InstantiatedAttr< BenchmarkAnalysis>(impl); }
	BenchmarkAnalysis BenchmarkAnalysis::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkAnalysis> BenchmarkAnalysis::Derived() { return ::Udm::DerivedAttr< BenchmarkAnalysis>(impl); }
	::Udm::ArchetypeAttr< BenchmarkAnalysis> BenchmarkAnalysis::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkAnalysis>(impl); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkCharacteristics> BenchmarkAnalysis::BenchmarkCharacteristics_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkCharacteristics>(impl, meta_BenchmarkCharacteristics_children); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkType> BenchmarkAnalysis::BenchmarkType_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkType>(impl, meta_BenchmarkType_children); }
	::Udm::ChildrenAttr< ::PICML::WorkLoadOperationConnection> BenchmarkAnalysis::WorkLoadOperationConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkLoadOperationConnection>(impl, meta_WorkLoadOperationConnection_children); }
	::Udm::ChildrenAttr< ::PICML::CompRef> BenchmarkAnalysis::CompRef_children() const { return ::Udm::ChildrenAttr< ::PICML::CompRef>(impl, meta_CompRef_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentOperation> BenchmarkAnalysis::ComponentOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentOperation>(impl, meta_ComponentOperation_children); }
	::Udm::ChildrenAttr< ::PICML::WorkloadCharacteristics> BenchmarkAnalysis::WorkloadCharacteristics_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkloadCharacteristics>(impl, meta_WorkloadCharacteristics_children); }
	::Udm::ChildrenAttr< ::PICML::Task> BenchmarkAnalysis::Task_children() const { return ::Udm::ChildrenAttr< ::PICML::Task>(impl, meta_Task_children); }
	::Udm::ChildrenAttr< ::PICML::TaskSet> BenchmarkAnalysis::TaskSet_children() const { return ::Udm::ChildrenAttr< ::PICML::TaskSet>(impl, meta_TaskSet_children); }
	::Udm::ChildrenAttr< ::PICML::TimerEventSinkConn> BenchmarkAnalysis::TimerEventSinkConn_children() const { return ::Udm::ChildrenAttr< ::PICML::TimerEventSinkConn>(impl, meta_TimerEventSinkConn_children); }
	::Udm::ChildrenAttr< ::PICML::Event> BenchmarkAnalysis::Event_children() const { return ::Udm::ChildrenAttr< ::PICML::Event>(impl, meta_Event_children); }
	::Udm::ChildrenAttr< ::PICML::EventRef> BenchmarkAnalysis::EventRef_children() const { return ::Udm::ChildrenAttr< ::PICML::EventRef>(impl, meta_EventRef_children); }
	::Udm::ChildrenAttr< ::PICML::OperationRef> BenchmarkAnalysis::OperationRef_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationRef>(impl, meta_OperationRef_children); }
	::Udm::ChildrenAttr< ::PICML::TimeProbe> BenchmarkAnalysis::TimeProbe_children() const { return ::Udm::ChildrenAttr< ::PICML::TimeProbe>(impl, meta_TimeProbe_children); }
	::Udm::ChildrenAttr< ::PICML::MetricsBase> BenchmarkAnalysis::MetricsBase_children() const { return ::Udm::ChildrenAttr< ::PICML::MetricsBase>(impl, meta_MetricsBase_children); }
	::Udm::ChildrenAttr< ::PICML::DataAnalysisBase> BenchmarkAnalysis::DataAnalysisBase_children() const { return ::Udm::ChildrenAttr< ::PICML::DataAnalysisBase>(impl, meta_DataAnalysisBase_children); }
	::Udm::ChildrenAttr< ::PICML::MetricConnection> BenchmarkAnalysis::MetricConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::MetricConnection>(impl, meta_MetricConnection_children); }
	::Udm::ChildrenAttr< ::PICML::TimerConnection> BenchmarkAnalysis::TimerConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::TimerConnection>(impl, meta_TimerConnection_children); }
	::Udm::ChildrenAttr< ::PICML::OperationBase> BenchmarkAnalysis::OperationBase_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationBase>(impl, meta_OperationBase_children); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkCharacteristics> BenchmarkAnalysis::BenchmarkCharacteristics_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkCharacteristics>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PeriodicBenchmarks> BenchmarkAnalysis::PeriodicBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PeriodicBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TriggerBenchmarks> BenchmarkAnalysis::TriggerBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TriggerBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::BenchmarkType> BenchmarkAnalysis::BenchmarkType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BenchmarkType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkLoadOperationConnection> BenchmarkAnalysis::WorkLoadOperationConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkLoadOperationConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FixedIterationBenchmarks> BenchmarkAnalysis::FixedIterationBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FixedIterationBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CompRef> BenchmarkAnalysis::CompRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CompRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentOperation> BenchmarkAnalysis::ComponentOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkloadCharacteristics> BenchmarkAnalysis::WorkloadCharacteristics_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkloadCharacteristics>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Task> BenchmarkAnalysis::Task_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Task>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TaskSet> BenchmarkAnalysis::TaskSet_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TaskSet>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TimerEventSinkConn> BenchmarkAnalysis::TimerEventSinkConn_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TimerEventSinkConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventRef> BenchmarkAnalysis::EventRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OperationRef> BenchmarkAnalysis::OperationRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MetricsBase> BenchmarkAnalysis::MetricsBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MetricsBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Throughput> BenchmarkAnalysis::Throughput_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Throughput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Latency> BenchmarkAnalysis::Latency_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Latency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TimerConnection> BenchmarkAnalysis::TimerConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TimerConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TimeProbe> BenchmarkAnalysis::TimeProbe_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TimeProbe>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Jitter> BenchmarkAnalysis::Jitter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Jitter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Maximum> BenchmarkAnalysis::Maximum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Maximum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Minimum> BenchmarkAnalysis::Minimum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Minimum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Average> BenchmarkAnalysis::Average_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Average>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataAnalysisBase> BenchmarkAnalysis::DataAnalysisBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataAnalysisBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MetricConnection> BenchmarkAnalysis::MetricConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MetricConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Taggable> BenchmarkAnalysis::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Prefixable> BenchmarkAnalysis::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasExceptions> BenchmarkAnalysis::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OnewayOperation> BenchmarkAnalysis::OnewayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OnewayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TwowayOperation> BenchmarkAnalysis::TwowayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TwowayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LookupOperation> BenchmarkAnalysis::LookupOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LookupOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FactoryOperation> BenchmarkAnalysis::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OperationBase> BenchmarkAnalysis::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectByValue> BenchmarkAnalysis::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SupportsInterfaces> BenchmarkAnalysis::SupportsInterfaces_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SupportsInterfaces>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasOperations> BenchmarkAnalysis::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Inheritable> BenchmarkAnalysis::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Event> BenchmarkAnalysis::Event_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NamedType> BenchmarkAnalysis::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> BenchmarkAnalysis::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> BenchmarkAnalysis::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventType> BenchmarkAnalysis::EventType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> BenchmarkAnalysis::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentAnalyses> BenchmarkAnalysis::ComponentAnalyses_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAnalyses>(impl, meta_ComponentAnalyses_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAnalyses> BenchmarkAnalysis::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAnalyses>(impl, ::Udm::NULLPARENTROLE); }
	void BenchmarkAnalysis::Accept(Visitor &v) { v.Visit_BenchmarkAnalysis(*this); }

	::Uml::Class BenchmarkAnalysis::meta;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_BenchmarkCharacteristics_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_BenchmarkType_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_WorkLoadOperationConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_CompRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_ComponentOperation_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_WorkloadCharacteristics_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_Task_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TaskSet_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimerEventSinkConn_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_Event_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_EventRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_OperationRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimeProbe_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_MetricsBase_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_DataAnalysisBase_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_MetricConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimerConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_OperationBase_children;
	::Uml::CompositionParentRole BenchmarkAnalysis::meta_ComponentAnalyses_parent;

	Throughput::Throughput() {}
	Throughput::Throughput(::Udm::ObjectImpl *impl) : MetricsBase(impl) {}
	Throughput::Throughput(const Throughput &master) : MetricsBase(master) {}

#ifdef UDM_RVALUE
	Throughput::Throughput(Throughput &&master) : MetricsBase(master) {};

	Throughput Throughput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Throughput& Throughput::operator=(Throughput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Throughput Throughput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Throughput Throughput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Throughput Throughput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Throughput> Throughput::Instances() { return ::Udm::InstantiatedAttr< Throughput>(impl); }
	Throughput Throughput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Throughput> Throughput::Derived() { return ::Udm::DerivedAttr< Throughput>(impl); }
	::Udm::ArchetypeAttr< Throughput> Throughput::Archetype() const { return ::Udm::ArchetypeAttr< Throughput>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> Throughput::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Throughput::Accept(Visitor &v) { v.Visit_Throughput(*this); }

	::Uml::Class Throughput::meta;

	Latency::Latency() {}
	Latency::Latency(::Udm::ObjectImpl *impl) : MetricsBase(impl) {}
	Latency::Latency(const Latency &master) : MetricsBase(master) {}

#ifdef UDM_RVALUE
	Latency::Latency(Latency &&master) : MetricsBase(master) {};

	Latency Latency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Latency& Latency::operator=(Latency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Latency Latency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Latency Latency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Latency Latency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Latency> Latency::Instances() { return ::Udm::InstantiatedAttr< Latency>(impl); }
	Latency Latency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Latency> Latency::Derived() { return ::Udm::DerivedAttr< Latency>(impl); }
	::Udm::ArchetypeAttr< Latency> Latency::Archetype() const { return ::Udm::ArchetypeAttr< Latency>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> Latency::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Latency::Accept(Visitor &v) { v.Visit_Latency(*this); }

	::Uml::Class Latency::meta;

	TimerConnection::TimerConnection() {}
	TimerConnection::TimerConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimerConnection::TimerConnection(const TimerConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimerConnection::TimerConnection(TimerConnection &&master) : MgaObject(master) {};

	TimerConnection TimerConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimerConnection& TimerConnection::operator=(TimerConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimerConnection TimerConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimerConnection TimerConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimerConnection TimerConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimerConnection> TimerConnection::Instances() { return ::Udm::InstantiatedAttr< TimerConnection>(impl); }
	TimerConnection TimerConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimerConnection> TimerConnection::Derived() { return ::Udm::DerivedAttr< TimerConnection>(impl); }
	::Udm::ArchetypeAttr< TimerConnection> TimerConnection::Archetype() const { return ::Udm::ArchetypeAttr< TimerConnection>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimerConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimerConnection::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OperationRef> TimerConnection::srcTimerConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::OperationRef>(impl, meta_srcTimerConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::TimeProbe> TimerConnection::dstTimerConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::TimeProbe>(impl, meta_dstTimerConnection_end_); }
	void TimerConnection::Accept(Visitor &v) { v.Visit_TimerConnection(*this); }

	::Uml::Class TimerConnection::meta;
	::Uml::CompositionParentRole TimerConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole TimerConnection::meta_srcTimerConnection_end_;
	::Uml::AssociationRole TimerConnection::meta_dstTimerConnection_end_;

	TimeProbe::TimeProbe() {}
	TimeProbe::TimeProbe(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimeProbe::TimeProbe(const TimeProbe &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimeProbe::TimeProbe(TimeProbe &&master) : MgaObject(master) {};

	TimeProbe TimeProbe::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimeProbe& TimeProbe::operator=(TimeProbe &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimeProbe TimeProbe::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimeProbe TimeProbe::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimeProbe TimeProbe::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimeProbe> TimeProbe::Instances() { return ::Udm::InstantiatedAttr< TimeProbe>(impl); }
	TimeProbe TimeProbe::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimeProbe> TimeProbe::Derived() { return ::Udm::DerivedAttr< TimeProbe>(impl); }
	::Udm::ArchetypeAttr< TimeProbe> TimeProbe::Archetype() const { return ::Udm::ArchetypeAttr< TimeProbe>(impl); }
	::Udm::AClassPointerAttr< TimerEventSinkConn, EventRef> TimeProbe::srcTimerEventSinkConn() const { return ::Udm::AClassPointerAttr< TimerEventSinkConn, EventRef>(impl, meta_srcTimerEventSinkConn, meta_srcTimerEventSinkConn_rev); }
	::Udm::AClassPointerAttr< TimerConnection, OperationRef> TimeProbe::srcTimerConnection() const { return ::Udm::AClassPointerAttr< TimerConnection, OperationRef>(impl, meta_srcTimerConnection, meta_srcTimerConnection_rev); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimeProbe::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> TimeProbe::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TimeProbe::Accept(Visitor &v) { v.Visit_TimeProbe(*this); }

	::Uml::Class TimeProbe::meta;
	::Uml::AssociationRole TimeProbe::meta_srcTimerEventSinkConn;
	::Uml::AssociationRole TimeProbe::meta_srcTimerEventSinkConn_rev;
	::Uml::AssociationRole TimeProbe::meta_srcTimerConnection;
	::Uml::AssociationRole TimeProbe::meta_srcTimerConnection_rev;
	::Uml::CompositionParentRole TimeProbe::meta_BenchmarkAnalysis_parent;

	Jitter::Jitter() {}
	Jitter::Jitter(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Jitter::Jitter(const Jitter &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Jitter::Jitter(Jitter &&master) : DataAnalysisBase(master) {};

	Jitter Jitter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Jitter& Jitter::operator=(Jitter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Jitter Jitter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Jitter Jitter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Jitter Jitter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Jitter> Jitter::Instances() { return ::Udm::InstantiatedAttr< Jitter>(impl); }
	Jitter Jitter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Jitter> Jitter::Derived() { return ::Udm::DerivedAttr< Jitter>(impl); }
	::Udm::ArchetypeAttr< Jitter> Jitter::Archetype() const { return ::Udm::ArchetypeAttr< Jitter>(impl); }
	::Udm::ParentAttr< ::PICML::MgaObject> Jitter::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Jitter::Accept(Visitor &v) { v.Visit_Jitter(*this); }

	::Uml::Class Jitter::meta;

	Maximum::Maximum() {}
	Maximum::Maximum(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Maximum::Maximum(const Maximum &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Maximum::Maximum(Maximum &&master) : DataAnalysisBase(master) {};

	Maximum Maximum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Maximum& Maximum::operator=(Maximum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Maximum Maximum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Maximum Maximum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Maximum Maximum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Maximum> Maximum::Instances() { return ::Udm::InstantiatedAttr< Maximum>(impl); }
	Maximum Maximum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Maximum> Maximum::Derived() { return ::Udm::DerivedAttr< Maximum>(impl); }
	::Udm::ArchetypeAttr< Maximum> Maximum::Archetype() const { return ::Udm::ArchetypeAttr< Maximum>(impl); }
	::Udm::ParentAttr< ::PICML::MgaObject> Maximum::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Maximum::Accept(Visitor &v) { v.Visit_Maximum(*this); }

	::Uml::Class Maximum::meta;

	Minimum::Minimum() {}
	Minimum::Minimum(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Minimum::Minimum(const Minimum &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Minimum::Minimum(Minimum &&master) : DataAnalysisBase(master) {};

	Minimum Minimum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Minimum& Minimum::operator=(Minimum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Minimum Minimum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Minimum Minimum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Minimum Minimum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Minimum> Minimum::Instances() { return ::Udm::InstantiatedAttr< Minimum>(impl); }
	Minimum Minimum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Minimum> Minimum::Derived() { return ::Udm::DerivedAttr< Minimum>(impl); }
	::Udm::ArchetypeAttr< Minimum> Minimum::Archetype() const { return ::Udm::ArchetypeAttr< Minimum>(impl); }
	::Udm::ParentAttr< ::PICML::MgaObject> Minimum::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Minimum::Accept(Visitor &v) { v.Visit_Minimum(*this); }

	::Uml::Class Minimum::meta;

	Average::Average() {}
	Average::Average(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Average::Average(const Average &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Average::Average(Average &&master) : DataAnalysisBase(master) {};

	Average Average::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Average& Average::operator=(Average &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Average Average::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Average Average::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Average Average::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Average> Average::Instances() { return ::Udm::InstantiatedAttr< Average>(impl); }
	Average Average::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Average> Average::Derived() { return ::Udm::DerivedAttr< Average>(impl); }
	::Udm::ArchetypeAttr< Average> Average::Archetype() const { return ::Udm::ArchetypeAttr< Average>(impl); }
	::Udm::ParentAttr< ::PICML::MgaObject> Average::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Average::Accept(Visitor &v) { v.Visit_Average(*this); }

	::Uml::Class Average::meta;

	DataAnalysisBase::DataAnalysisBase() {}
	DataAnalysisBase::DataAnalysisBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DataAnalysisBase::DataAnalysisBase(const DataAnalysisBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DataAnalysisBase::DataAnalysisBase(DataAnalysisBase &&master) : MgaObject(master) {};

	DataAnalysisBase DataAnalysisBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataAnalysisBase& DataAnalysisBase::operator=(DataAnalysisBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataAnalysisBase DataAnalysisBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataAnalysisBase DataAnalysisBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataAnalysisBase DataAnalysisBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataAnalysisBase> DataAnalysisBase::Instances() { return ::Udm::InstantiatedAttr< DataAnalysisBase>(impl); }
	DataAnalysisBase DataAnalysisBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataAnalysisBase> DataAnalysisBase::Derived() { return ::Udm::DerivedAttr< DataAnalysisBase>(impl); }
	::Udm::ArchetypeAttr< DataAnalysisBase> DataAnalysisBase::Archetype() const { return ::Udm::ArchetypeAttr< DataAnalysisBase>(impl); }
	::Udm::ParentAttr< ::PICML::MetricsBase> DataAnalysisBase::MetricsBase_parent() const { return ::Udm::ParentAttr< ::PICML::MetricsBase>(impl, meta_MetricsBase_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> DataAnalysisBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> DataAnalysisBase::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class DataAnalysisBase::meta;
	::Uml::CompositionParentRole DataAnalysisBase::meta_MetricsBase_parent;
	::Uml::CompositionParentRole DataAnalysisBase::meta_BenchmarkAnalysis_parent;

	MetricConnection::MetricConnection() {}
	MetricConnection::MetricConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MetricConnection::MetricConnection(const MetricConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MetricConnection::MetricConnection(MetricConnection &&master) : MgaObject(master) {};

	MetricConnection MetricConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MetricConnection& MetricConnection::operator=(MetricConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MetricConnection MetricConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MetricConnection MetricConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MetricConnection MetricConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MetricConnection> MetricConnection::Instances() { return ::Udm::InstantiatedAttr< MetricConnection>(impl); }
	MetricConnection MetricConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MetricConnection> MetricConnection::Derived() { return ::Udm::DerivedAttr< MetricConnection>(impl); }
	::Udm::ArchetypeAttr< MetricConnection> MetricConnection::Archetype() const { return ::Udm::ArchetypeAttr< MetricConnection>(impl); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> MetricConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> MetricConnection::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OperationRef> MetricConnection::srcMetricConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::OperationRef>(impl, meta_srcMetricConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::MetricsBase> MetricConnection::dstMetricConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::MetricsBase>(impl, meta_dstMetricConnection_end_); }
	void MetricConnection::Accept(Visitor &v) { v.Visit_MetricConnection(*this); }

	::Uml::Class MetricConnection::meta;
	::Uml::CompositionParentRole MetricConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole MetricConnection::meta_srcMetricConnection_end_;
	::Uml::AssociationRole MetricConnection::meta_dstMetricConnection_end_;

	Resource::Resource() {}
	Resource::Resource(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	Resource::Resource(const Resource &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	Resource::Resource(Resource &&master) : RequirementSatisfier(master) {};

	Resource Resource::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Resource& Resource::operator=(Resource &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Resource Resource::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Resource Resource::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Resource Resource::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Resource> Resource::Instances() { return ::Udm::InstantiatedAttr< Resource>(impl); }
	Resource Resource::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Resource> Resource::Derived() { return ::Udm::DerivedAttr< Resource>(impl); }
	::Udm::ArchetypeAttr< Resource> Resource::Archetype() const { return ::Udm::ArchetypeAttr< Resource>(impl); }
	::Udm::ParentAttr< ::PICML::Node> Resource::Node_parent() const { return ::Udm::ParentAttr< ::PICML::Node>(impl, meta_Node_parent); }
	::Udm::ParentAttr< ::PICML::Interconnect> Resource::Interconnect_parent() const { return ::Udm::ParentAttr< ::PICML::Interconnect>(impl, meta_Interconnect_parent); }
	::Udm::ParentAttr< ::PICML::Bridge> Resource::Bridge_parent() const { return ::Udm::ParentAttr< ::PICML::Bridge>(impl, meta_Bridge_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Resource::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Resource::Accept(Visitor &v) { v.Visit_Resource(*this); }

	::Uml::Class Resource::meta;
	::Uml::CompositionParentRole Resource::meta_Node_parent;
	::Uml::CompositionParentRole Resource::meta_Interconnect_parent;
	::Uml::CompositionParentRole Resource::meta_Bridge_parent;

	SharedResource::SharedResource() {}
	SharedResource::SharedResource(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	SharedResource::SharedResource(const SharedResource &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	SharedResource::SharedResource(SharedResource &&master) : RequirementSatisfier(master) {};

	SharedResource SharedResource::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SharedResource& SharedResource::operator=(SharedResource &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SharedResource SharedResource::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SharedResource SharedResource::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SharedResource SharedResource::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SharedResource> SharedResource::Instances() { return ::Udm::InstantiatedAttr< SharedResource>(impl); }
	SharedResource SharedResource::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SharedResource> SharedResource::Derived() { return ::Udm::DerivedAttr< SharedResource>(impl); }
	::Udm::ArchetypeAttr< SharedResource> SharedResource::Archetype() const { return ::Udm::ArchetypeAttr< SharedResource>(impl); }
	::Udm::AClassAssocAttr< Shares, Node> SharedResource::srcShares() const { return ::Udm::AClassAssocAttr< Shares, Node>(impl, meta_srcShares, meta_srcShares_rev); }
	::Udm::ParentAttr< ::PICML::Domain> SharedResource::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> SharedResource::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void SharedResource::Accept(Visitor &v) { v.Visit_SharedResource(*this); }

	::Uml::Class SharedResource::meta;
	::Uml::AssociationRole SharedResource::meta_srcShares;
	::Uml::AssociationRole SharedResource::meta_srcShares_rev;
	::Uml::CompositionParentRole SharedResource::meta_Domain_parent;

	NodeReference::NodeReference() {}
	NodeReference::NodeReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	NodeReference::NodeReference(const NodeReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	NodeReference::NodeReference(NodeReference &&master) : MgaObject(master) {};

	NodeReference NodeReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NodeReference& NodeReference::operator=(NodeReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NodeReference NodeReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NodeReference NodeReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NodeReference NodeReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NodeReference> NodeReference::Instances() { return ::Udm::InstantiatedAttr< NodeReference>(impl); }
	NodeReference NodeReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NodeReference> NodeReference::Derived() { return ::Udm::DerivedAttr< NodeReference>(impl); }
	::Udm::ArchetypeAttr< NodeReference> NodeReference::Archetype() const { return ::Udm::ArchetypeAttr< NodeReference>(impl); }
	::Udm::PointerAttr< Node> NodeReference::ref() const { return ::Udm::PointerAttr< Node>(impl, meta_ref); }
	::Udm::AClassAssocAttr< PropertyMapping, Property> NodeReference::dstPropertyMapping() const { return ::Udm::AClassAssocAttr< PropertyMapping, Property>(impl, meta_dstPropertyMapping, meta_dstPropertyMapping_rev); }
	::Udm::AClassAssocAttr< InstanceMapping, CollocationGroup> NodeReference::srcInstanceMapping() const { return ::Udm::AClassAssocAttr< InstanceMapping, CollocationGroup>(impl, meta_srcInstanceMapping, meta_srcInstanceMapping_rev); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> NodeReference::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> NodeReference::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void NodeReference::Accept(Visitor &v) { v.Visit_NodeReference(*this); }

	::Uml::Class NodeReference::meta;
	::Uml::AssociationRole NodeReference::meta_ref;
	::Uml::AssociationRole NodeReference::meta_dstPropertyMapping;
	::Uml::AssociationRole NodeReference::meta_dstPropertyMapping_rev;
	::Uml::AssociationRole NodeReference::meta_srcInstanceMapping;
	::Uml::AssociationRole NodeReference::meta_srcInstanceMapping_rev;
	::Uml::CompositionParentRole NodeReference::meta_DeploymentPlan_parent;

	Node::Node() {}
	Node::Node(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Node::Node(const Node &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Node::Node(Node &&master) : MgaObject(master) {};

	Node Node::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Node& Node::operator=(Node &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Node Node::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Node Node::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Node Node::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Node> Node::Instances() { return ::Udm::InstantiatedAttr< Node>(impl); }
	Node Node::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Node> Node::Derived() { return ::Udm::DerivedAttr< Node>(impl); }
	::Udm::ArchetypeAttr< Node> Node::Archetype() const { return ::Udm::ArchetypeAttr< Node>(impl); }
	::Udm::StringAttr Node::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr Node::operatingSystem() const { return ::Udm::StringAttr(impl, meta_operatingSystem); }
	::Udm::StringAttr Node::architecture() const { return ::Udm::StringAttr(impl, meta_architecture); }
	::Udm::AssocAttr< NodeReference> Node::referedbyNodeReference() const { return ::Udm::AssocAttr< NodeReference>(impl, meta_referedbyNodeReference); }
	::Udm::AClassAssocAttr< InterconnectConnection, Interconnect> Node::dstInterconnectConnection() const { return ::Udm::AClassAssocAttr< InterconnectConnection, Interconnect>(impl, meta_dstInterconnectConnection, meta_dstInterconnectConnection_rev); }
	::Udm::AClassAssocAttr< Shares, SharedResource> Node::dstShares() const { return ::Udm::AClassAssocAttr< Shares, SharedResource>(impl, meta_dstShares, meta_dstShares_rev); }
	::Udm::ChildrenAttr< ::PICML::Resource> Node::Resource_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::PICML::Resource> Node::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementSatisfier> Node::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Node::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Domain> Node::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> Node::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Node::Accept(Visitor &v) { v.Visit_Node(*this); }

	::Uml::Class Node::meta;
	::Uml::Attribute Node::meta_label;
	::Uml::Attribute Node::meta_operatingSystem;
	::Uml::Attribute Node::meta_architecture;
	::Uml::AssociationRole Node::meta_referedbyNodeReference;
	::Uml::AssociationRole Node::meta_dstInterconnectConnection;
	::Uml::AssociationRole Node::meta_dstInterconnectConnection_rev;
	::Uml::AssociationRole Node::meta_dstShares;
	::Uml::AssociationRole Node::meta_dstShares_rev;
	::Uml::CompositionChildRole Node::meta_Resource_children;
	::Uml::CompositionParentRole Node::meta_Domain_parent;

	Interconnect::Interconnect() {}
	Interconnect::Interconnect(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Interconnect::Interconnect(const Interconnect &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Interconnect::Interconnect(Interconnect &&master) : MgaObject(master) {};

	Interconnect Interconnect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Interconnect& Interconnect::operator=(Interconnect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Interconnect Interconnect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Interconnect Interconnect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Interconnect Interconnect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Interconnect> Interconnect::Instances() { return ::Udm::InstantiatedAttr< Interconnect>(impl); }
	Interconnect Interconnect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Interconnect> Interconnect::Derived() { return ::Udm::DerivedAttr< Interconnect>(impl); }
	::Udm::ArchetypeAttr< Interconnect> Interconnect::Archetype() const { return ::Udm::ArchetypeAttr< Interconnect>(impl); }
	::Udm::StringAttr Interconnect::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AClassAssocAttr< InterconnectConnection, Node> Interconnect::srcInterconnectConnection() const { return ::Udm::AClassAssocAttr< InterconnectConnection, Node>(impl, meta_srcInterconnectConnection, meta_srcInterconnectConnection_rev); }
	::Udm::AClassAssocAttr< BridgeConnection, Bridge> Interconnect::dstBridgeConnection() const { return ::Udm::AClassAssocAttr< BridgeConnection, Bridge>(impl, meta_dstBridgeConnection, meta_dstBridgeConnection_rev); }
	::Udm::ChildrenAttr< ::PICML::Resource> Interconnect::Resource_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::PICML::Resource> Interconnect::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementSatisfier> Interconnect::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Interconnect::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Domain> Interconnect::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> Interconnect::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Interconnect::Accept(Visitor &v) { v.Visit_Interconnect(*this); }

	::Uml::Class Interconnect::meta;
	::Uml::Attribute Interconnect::meta_label;
	::Uml::AssociationRole Interconnect::meta_srcInterconnectConnection;
	::Uml::AssociationRole Interconnect::meta_srcInterconnectConnection_rev;
	::Uml::AssociationRole Interconnect::meta_dstBridgeConnection;
	::Uml::AssociationRole Interconnect::meta_dstBridgeConnection_rev;
	::Uml::CompositionChildRole Interconnect::meta_Resource_children;
	::Uml::CompositionParentRole Interconnect::meta_Domain_parent;

	Bridge::Bridge() {}
	Bridge::Bridge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Bridge::Bridge(const Bridge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Bridge::Bridge(Bridge &&master) : MgaObject(master) {};

	Bridge Bridge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Bridge& Bridge::operator=(Bridge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Bridge Bridge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Bridge Bridge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Bridge Bridge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Bridge> Bridge::Instances() { return ::Udm::InstantiatedAttr< Bridge>(impl); }
	Bridge Bridge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Bridge> Bridge::Derived() { return ::Udm::DerivedAttr< Bridge>(impl); }
	::Udm::ArchetypeAttr< Bridge> Bridge::Archetype() const { return ::Udm::ArchetypeAttr< Bridge>(impl); }
	::Udm::StringAttr Bridge::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AClassAssocAttr< BridgeConnection, Interconnect> Bridge::srcBridgeConnection() const { return ::Udm::AClassAssocAttr< BridgeConnection, Interconnect>(impl, meta_srcBridgeConnection, meta_srcBridgeConnection_rev); }
	::Udm::ChildrenAttr< ::PICML::Resource> Bridge::Resource_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::PICML::Resource> Bridge::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementSatisfier> Bridge::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Bridge::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Domain> Bridge::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> Bridge::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Bridge::Accept(Visitor &v) { v.Visit_Bridge(*this); }

	::Uml::Class Bridge::meta;
	::Uml::Attribute Bridge::meta_label;
	::Uml::AssociationRole Bridge::meta_srcBridgeConnection;
	::Uml::AssociationRole Bridge::meta_srcBridgeConnection_rev;
	::Uml::CompositionChildRole Bridge::meta_Resource_children;
	::Uml::CompositionParentRole Bridge::meta_Domain_parent;

	CollocationGroupProperty::CollocationGroupProperty() {}
	CollocationGroupProperty::CollocationGroupProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CollocationGroupProperty::CollocationGroupProperty(const CollocationGroupProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CollocationGroupProperty::CollocationGroupProperty(CollocationGroupProperty &&master) : MgaObject(master) {};

	CollocationGroupProperty CollocationGroupProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollocationGroupProperty& CollocationGroupProperty::operator=(CollocationGroupProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollocationGroupProperty CollocationGroupProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollocationGroupProperty CollocationGroupProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollocationGroupProperty CollocationGroupProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollocationGroupProperty> CollocationGroupProperty::Instances() { return ::Udm::InstantiatedAttr< CollocationGroupProperty>(impl); }
	CollocationGroupProperty CollocationGroupProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollocationGroupProperty> CollocationGroupProperty::Derived() { return ::Udm::DerivedAttr< CollocationGroupProperty>(impl); }
	::Udm::ArchetypeAttr< CollocationGroupProperty> CollocationGroupProperty::Archetype() const { return ::Udm::ArchetypeAttr< CollocationGroupProperty>(impl); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> CollocationGroupProperty::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> CollocationGroupProperty::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Property> CollocationGroupProperty::srcCollocationGroupProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_srcCollocationGroupProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::CollocationGroup> CollocationGroupProperty::dstCollocationGroupProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::CollocationGroup>(impl, meta_dstCollocationGroupProperty_end_); }
	void CollocationGroupProperty::Accept(Visitor &v) { v.Visit_CollocationGroupProperty(*this); }

	::Uml::Class CollocationGroupProperty::meta;
	::Uml::CompositionParentRole CollocationGroupProperty::meta_DeploymentPlan_parent;
	::Uml::AssociationRole CollocationGroupProperty::meta_srcCollocationGroupProperty_end_;
	::Uml::AssociationRole CollocationGroupProperty::meta_dstCollocationGroupProperty_end_;

	PropertyMapping::PropertyMapping() {}
	PropertyMapping::PropertyMapping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PropertyMapping::PropertyMapping(const PropertyMapping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PropertyMapping::PropertyMapping(PropertyMapping &&master) : MgaObject(master) {};

	PropertyMapping PropertyMapping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PropertyMapping& PropertyMapping::operator=(PropertyMapping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PropertyMapping PropertyMapping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PropertyMapping PropertyMapping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PropertyMapping PropertyMapping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PropertyMapping> PropertyMapping::Instances() { return ::Udm::InstantiatedAttr< PropertyMapping>(impl); }
	PropertyMapping PropertyMapping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PropertyMapping> PropertyMapping::Derived() { return ::Udm::DerivedAttr< PropertyMapping>(impl); }
	::Udm::ArchetypeAttr< PropertyMapping> PropertyMapping::Archetype() const { return ::Udm::ArchetypeAttr< PropertyMapping>(impl); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> PropertyMapping::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> PropertyMapping::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::NodeReference> PropertyMapping::srcPropertyMapping_end() const { return ::Udm::AssocEndAttr< ::PICML::NodeReference>(impl, meta_srcPropertyMapping_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> PropertyMapping::dstPropertyMapping_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstPropertyMapping_end_); }
	void PropertyMapping::Accept(Visitor &v) { v.Visit_PropertyMapping(*this); }

	::Uml::Class PropertyMapping::meta;
	::Uml::CompositionParentRole PropertyMapping::meta_DeploymentPlan_parent;
	::Uml::AssociationRole PropertyMapping::meta_srcPropertyMapping_end_;
	::Uml::AssociationRole PropertyMapping::meta_dstPropertyMapping_end_;

	ComponentInstanceRef::ComponentInstanceRef() {}
	ComponentInstanceRef::ComponentInstanceRef(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl) {}
	ComponentInstanceRef::ComponentInstanceRef(const ComponentInstanceRef &master) : CollocationGroupMember(master) {}

#ifdef UDM_RVALUE
	ComponentInstanceRef::ComponentInstanceRef(ComponentInstanceRef &&master) : CollocationGroupMember(master) {};

	ComponentInstanceRef ComponentInstanceRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInstanceRef& ComponentInstanceRef::operator=(ComponentInstanceRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInstanceRef ComponentInstanceRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInstanceRef ComponentInstanceRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInstanceRef ComponentInstanceRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInstanceRef> ComponentInstanceRef::Instances() { return ::Udm::InstantiatedAttr< ComponentInstanceRef>(impl); }
	ComponentInstanceRef ComponentInstanceRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInstanceRef> ComponentInstanceRef::Derived() { return ::Udm::DerivedAttr< ComponentInstanceRef>(impl); }
	::Udm::ArchetypeAttr< ComponentInstanceRef> ComponentInstanceRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInstanceRef>(impl); }
	::Udm::PointerAttr< ComponentInstance> ComponentInstanceRef::ref() const { return ::Udm::PointerAttr< ComponentInstance>(impl, meta_ref); }
	::Udm::AClassPointerAttr< Deploys, ComponentFactoryRef> ComponentInstanceRef::srcDeploys() const { return ::Udm::AClassPointerAttr< Deploys, ComponentFactoryRef>(impl, meta_srcDeploys, meta_srcDeploys_rev); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> ComponentInstanceRef::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentInstanceRef::Accept(Visitor &v) { v.Visit_ComponentInstanceRef(*this); }

	::Uml::Class ComponentInstanceRef::meta;
	::Uml::AssociationRole ComponentInstanceRef::meta_ref;
	::Uml::AssociationRole ComponentInstanceRef::meta_srcDeploys;
	::Uml::AssociationRole ComponentInstanceRef::meta_srcDeploys_rev;

	CollocationGroupMember::CollocationGroupMember() {}
	CollocationGroupMember::CollocationGroupMember(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CollocationGroupMember::CollocationGroupMember(const CollocationGroupMember &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CollocationGroupMember::CollocationGroupMember(CollocationGroupMember &&master) : MgaObject(master) {};

	CollocationGroupMember CollocationGroupMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollocationGroupMember& CollocationGroupMember::operator=(CollocationGroupMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollocationGroupMember CollocationGroupMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollocationGroupMember CollocationGroupMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollocationGroupMember CollocationGroupMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollocationGroupMember> CollocationGroupMember::Instances() { return ::Udm::InstantiatedAttr< CollocationGroupMember>(impl); }
	CollocationGroupMember CollocationGroupMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollocationGroupMember> CollocationGroupMember::Derived() { return ::Udm::DerivedAttr< CollocationGroupMember>(impl); }
	::Udm::ArchetypeAttr< CollocationGroupMember> CollocationGroupMember::Archetype() const { return ::Udm::ArchetypeAttr< CollocationGroupMember>(impl); }
	::Udm::AssocAttr< CollocationGroup> CollocationGroupMember::setCollocationGroup() const { return ::Udm::AssocAttr< CollocationGroup>(impl, meta_setCollocationGroup); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> CollocationGroupMember::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> CollocationGroupMember::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class CollocationGroupMember::meta;
	::Uml::AssociationRole CollocationGroupMember::meta_setCollocationGroup;
	::Uml::CompositionParentRole CollocationGroupMember::meta_DeploymentPlan_parent;

	Deploys::Deploys() {}
	Deploys::Deploys(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Deploys::Deploys(const Deploys &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Deploys::Deploys(Deploys &&master) : MgaObject(master) {};

	Deploys Deploys::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Deploys& Deploys::operator=(Deploys &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Deploys Deploys::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Deploys Deploys::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Deploys Deploys::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Deploys> Deploys::Instances() { return ::Udm::InstantiatedAttr< Deploys>(impl); }
	Deploys Deploys::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Deploys> Deploys::Derived() { return ::Udm::DerivedAttr< Deploys>(impl); }
	::Udm::ArchetypeAttr< Deploys> Deploys::Archetype() const { return ::Udm::ArchetypeAttr< Deploys>(impl); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> Deploys::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> Deploys::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentFactoryRef> Deploys::srcDeploys_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentFactoryRef>(impl, meta_srcDeploys_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentInstanceRef> Deploys::dstDeploys_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentInstanceRef>(impl, meta_dstDeploys_end_); }
	void Deploys::Accept(Visitor &v) { v.Visit_Deploys(*this); }

	::Uml::Class Deploys::meta;
	::Uml::CompositionParentRole Deploys::meta_DeploymentPlan_parent;
	::Uml::AssociationRole Deploys::meta_srcDeploys_end_;
	::Uml::AssociationRole Deploys::meta_dstDeploys_end_;

	ComponentFactoryRef::ComponentFactoryRef() {}
	ComponentFactoryRef::ComponentFactoryRef(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl) {}
	ComponentFactoryRef::ComponentFactoryRef(const ComponentFactoryRef &master) : CollocationGroupMember(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryRef::ComponentFactoryRef(ComponentFactoryRef &&master) : CollocationGroupMember(master) {};

	ComponentFactoryRef ComponentFactoryRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryRef& ComponentFactoryRef::operator=(ComponentFactoryRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryRef ComponentFactoryRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryRef ComponentFactoryRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryRef ComponentFactoryRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryRef> ComponentFactoryRef::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryRef>(impl); }
	ComponentFactoryRef ComponentFactoryRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryRef> ComponentFactoryRef::Derived() { return ::Udm::DerivedAttr< ComponentFactoryRef>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryRef> ComponentFactoryRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryRef>(impl); }
	::Udm::AClassAssocAttr< Deploys, ComponentInstanceRef> ComponentFactoryRef::dstDeploys() const { return ::Udm::AClassAssocAttr< Deploys, ComponentInstanceRef>(impl, meta_dstDeploys, meta_dstDeploys_rev); }
	::Udm::PointerAttr< ComponentFactoryInstance> ComponentFactoryRef::ref() const { return ::Udm::PointerAttr< ComponentFactoryInstance>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> ComponentFactoryRef::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryRef::Accept(Visitor &v) { v.Visit_ComponentFactoryRef(*this); }

	::Uml::Class ComponentFactoryRef::meta;
	::Uml::AssociationRole ComponentFactoryRef::meta_dstDeploys;
	::Uml::AssociationRole ComponentFactoryRef::meta_dstDeploys_rev;
	::Uml::AssociationRole ComponentFactoryRef::meta_ref;

	CollocationGroup::CollocationGroup() {}
	CollocationGroup::CollocationGroup(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CollocationGroup::CollocationGroup(const CollocationGroup &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CollocationGroup::CollocationGroup(CollocationGroup &&master) : MgaObject(master) {};

	CollocationGroup CollocationGroup::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollocationGroup& CollocationGroup::operator=(CollocationGroup &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollocationGroup CollocationGroup::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollocationGroup CollocationGroup::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollocationGroup CollocationGroup::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollocationGroup> CollocationGroup::Instances() { return ::Udm::InstantiatedAttr< CollocationGroup>(impl); }
	CollocationGroup CollocationGroup::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollocationGroup> CollocationGroup::Derived() { return ::Udm::DerivedAttr< CollocationGroup>(impl); }
	::Udm::ArchetypeAttr< CollocationGroup> CollocationGroup::Archetype() const { return ::Udm::ArchetypeAttr< CollocationGroup>(impl); }
	::Udm::AssocAttr< CollocationGroupMember> CollocationGroup::members() const { return ::Udm::AssocAttr< CollocationGroupMember>(impl, meta_members); }
	::Udm::AClassPointerAttr< InstanceMapping, NodeReference> CollocationGroup::dstInstanceMapping() const { return ::Udm::AClassPointerAttr< InstanceMapping, NodeReference>(impl, meta_dstInstanceMapping, meta_dstInstanceMapping_rev); }
	::Udm::AClassAssocAttr< CollocationGroupProperty, Property> CollocationGroup::srcCollocationGroupProperty() const { return ::Udm::AClassAssocAttr< CollocationGroupProperty, Property>(impl, meta_srcCollocationGroupProperty, meta_srcCollocationGroupProperty_rev); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> CollocationGroup::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> CollocationGroup::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void CollocationGroup::Accept(Visitor &v) { v.Visit_CollocationGroup(*this); }

	::Uml::Class CollocationGroup::meta;
	::Uml::AssociationRole CollocationGroup::meta_members;
	::Uml::AssociationRole CollocationGroup::meta_dstInstanceMapping;
	::Uml::AssociationRole CollocationGroup::meta_dstInstanceMapping_rev;
	::Uml::AssociationRole CollocationGroup::meta_srcCollocationGroupProperty;
	::Uml::AssociationRole CollocationGroup::meta_srcCollocationGroupProperty_rev;
	::Uml::CompositionParentRole CollocationGroup::meta_DeploymentPlan_parent;

	DeploymentPlans::DeploymentPlans() {}
	DeploymentPlans::DeploymentPlans(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	DeploymentPlans::DeploymentPlans(const DeploymentPlans &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	DeploymentPlans::DeploymentPlans(DeploymentPlans &&master) : UDM_OBJECT(master) {};

	DeploymentPlans DeploymentPlans::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlans& DeploymentPlans::operator=(DeploymentPlans &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlans DeploymentPlans::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlans DeploymentPlans::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlans DeploymentPlans::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlans> DeploymentPlans::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlans>(impl); }
	DeploymentPlans DeploymentPlans::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlans> DeploymentPlans::Derived() { return ::Udm::DerivedAttr< DeploymentPlans>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlans> DeploymentPlans::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlans>(impl); }
	::Udm::StringAttr DeploymentPlans::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::DeploymentPlan> DeploymentPlans::DeploymentPlan_children() const { return ::Udm::ChildrenAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_children); }
	::Udm::ChildrenAttr< ::PICML::DeploymentPlan> DeploymentPlans::DeploymentPlan_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> DeploymentPlans::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> DeploymentPlans::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> DeploymentPlans::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void DeploymentPlans::Accept(Visitor &v) { v.Visit_DeploymentPlans(*this); }

	::Uml::Class DeploymentPlans::meta;
	::Uml::Attribute DeploymentPlans::meta_name;
	::Uml::CompositionChildRole DeploymentPlans::meta_DeploymentPlan_children;
	::Uml::CompositionParentRole DeploymentPlans::meta_RootFolder_parent;

	InstanceMapping::InstanceMapping() {}
	InstanceMapping::InstanceMapping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InstanceMapping::InstanceMapping(const InstanceMapping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InstanceMapping::InstanceMapping(InstanceMapping &&master) : MgaObject(master) {};

	InstanceMapping InstanceMapping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InstanceMapping& InstanceMapping::operator=(InstanceMapping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InstanceMapping InstanceMapping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InstanceMapping InstanceMapping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InstanceMapping InstanceMapping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InstanceMapping> InstanceMapping::Instances() { return ::Udm::InstantiatedAttr< InstanceMapping>(impl); }
	InstanceMapping InstanceMapping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InstanceMapping> InstanceMapping::Derived() { return ::Udm::DerivedAttr< InstanceMapping>(impl); }
	::Udm::ArchetypeAttr< InstanceMapping> InstanceMapping::Archetype() const { return ::Udm::ArchetypeAttr< InstanceMapping>(impl); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> InstanceMapping::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> InstanceMapping::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::CollocationGroup> InstanceMapping::srcInstanceMapping_end() const { return ::Udm::AssocEndAttr< ::PICML::CollocationGroup>(impl, meta_srcInstanceMapping_end_); }
	::Udm::AssocEndAttr< ::PICML::NodeReference> InstanceMapping::dstInstanceMapping_end() const { return ::Udm::AssocEndAttr< ::PICML::NodeReference>(impl, meta_dstInstanceMapping_end_); }
	void InstanceMapping::Accept(Visitor &v) { v.Visit_InstanceMapping(*this); }

	::Uml::Class InstanceMapping::meta;
	::Uml::CompositionParentRole InstanceMapping::meta_DeploymentPlan_parent;
	::Uml::AssociationRole InstanceMapping::meta_srcInstanceMapping_end_;
	::Uml::AssociationRole InstanceMapping::meta_dstInstanceMapping_end_;

	DeploymentPlan::DeploymentPlan() {}
	DeploymentPlan::DeploymentPlan(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DeploymentPlan::DeploymentPlan(const DeploymentPlan &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DeploymentPlan::DeploymentPlan(DeploymentPlan &&master) : MgaObject(master) {};

	DeploymentPlan DeploymentPlan::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlan& DeploymentPlan::operator=(DeploymentPlan &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlan DeploymentPlan::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlan DeploymentPlan::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlan DeploymentPlan::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlan> DeploymentPlan::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlan>(impl); }
	DeploymentPlan DeploymentPlan::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlan> DeploymentPlan::Derived() { return ::Udm::DerivedAttr< DeploymentPlan>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlan> DeploymentPlan::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlan>(impl); }
	::Udm::StringAttr DeploymentPlan::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr DeploymentPlan::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroupProperty> DeploymentPlan::CollocationGroupProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroupProperty>(impl, meta_CollocationGroupProperty_children); }
	::Udm::ChildrenAttr< ::PICML::InstanceMapping> DeploymentPlan::InstanceMapping_children() const { return ::Udm::ChildrenAttr< ::PICML::InstanceMapping>(impl, meta_InstanceMapping_children); }
	::Udm::ChildrenAttr< ::PICML::NodeReference> DeploymentPlan::NodeReference_children() const { return ::Udm::ChildrenAttr< ::PICML::NodeReference>(impl, meta_NodeReference_children); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroup> DeploymentPlan::CollocationGroup_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroup>(impl, meta_CollocationGroup_children); }
	::Udm::ChildrenAttr< ::PICML::PropertyMapping> DeploymentPlan::PropertyMapping_children() const { return ::Udm::ChildrenAttr< ::PICML::PropertyMapping>(impl, meta_PropertyMapping_children); }
	::Udm::ChildrenAttr< ::PICML::Property> DeploymentPlan::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroupMember> DeploymentPlan::CollocationGroupMember_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroupMember>(impl, meta_CollocationGroupMember_children); }
	::Udm::ChildrenAttr< ::PICML::Deploys> DeploymentPlan::Deploys_children() const { return ::Udm::ChildrenAttr< ::PICML::Deploys>(impl, meta_Deploys_children); }
	::Udm::ChildrenAttr< ::PICML::NodeReference> DeploymentPlan::NodeReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NodeReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroupProperty> DeploymentPlan::CollocationGroupProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroupProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PropertyMapping> DeploymentPlan::PropertyMapping_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PropertyMapping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentInstanceRef> DeploymentPlan::ComponentInstanceRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInstanceRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroupMember> DeploymentPlan::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Deploys> DeploymentPlan::Deploys_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Deploys>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryRef> DeploymentPlan::ComponentFactoryRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroup> DeploymentPlan::CollocationGroup_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroup>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InstanceMapping> DeploymentPlan::InstanceMapping_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InstanceMapping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> DeploymentPlan::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> DeploymentPlan::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> DeploymentPlan::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference> DeploymentPlan::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> DeploymentPlan::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::DeploymentPlans> DeploymentPlan::DeploymentPlans_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlans>(impl, meta_DeploymentPlans_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlans> DeploymentPlan::parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlans>(impl, ::Udm::NULLPARENTROLE); }
	void DeploymentPlan::Accept(Visitor &v) { v.Visit_DeploymentPlan(*this); }

	::Uml::Class DeploymentPlan::meta;
	::Uml::Attribute DeploymentPlan::meta_label;
	::Uml::Attribute DeploymentPlan::meta_UUID;
	::Uml::CompositionChildRole DeploymentPlan::meta_CollocationGroupProperty_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_InstanceMapping_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_NodeReference_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_CollocationGroup_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_PropertyMapping_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_Property_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_CollocationGroupMember_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_Deploys_children;
	::Uml::CompositionParentRole DeploymentPlan::meta_DeploymentPlans_parent;

	PackageConfiguration::PackageConfiguration() {}
	PackageConfiguration::PackageConfiguration(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfiguration::PackageConfiguration(const PackageConfiguration &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfiguration::PackageConfiguration(PackageConfiguration &&master) : MgaObject(master) {};

	PackageConfiguration PackageConfiguration::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfiguration& PackageConfiguration::operator=(PackageConfiguration &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfiguration PackageConfiguration::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfiguration PackageConfiguration::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfiguration PackageConfiguration::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfiguration> PackageConfiguration::Instances() { return ::Udm::InstantiatedAttr< PackageConfiguration>(impl); }
	PackageConfiguration PackageConfiguration::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfiguration> PackageConfiguration::Derived() { return ::Udm::DerivedAttr< PackageConfiguration>(impl); }
	::Udm::ArchetypeAttr< PackageConfiguration> PackageConfiguration::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfiguration>(impl); }
	::Udm::StringAttr PackageConfiguration::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr PackageConfiguration::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassPointerAttr< PackageConfSpecializedConfig, PackageConfigurationReference> PackageConfiguration::dstPackageConfSpecializedConfig() const { return ::Udm::AClassPointerAttr< PackageConfSpecializedConfig, PackageConfigurationReference>(impl, meta_dstPackageConfSpecializedConfig, meta_dstPackageConfSpecializedConfig_rev); }
	::Udm::AClassAssocAttr< PackageConfConfigProperty, Property> PackageConfiguration::dstPackageConfConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfConfigProperty, Property>(impl, meta_dstPackageConfConfigProperty, meta_dstPackageConfConfigProperty_rev); }
	::Udm::AClassAssocAttr< PackageConfSelectRequirement, Requirement> PackageConfiguration::dstPackageConfSelectRequirement() const { return ::Udm::AClassAssocAttr< PackageConfSelectRequirement, Requirement>(impl, meta_dstPackageConfSelectRequirement, meta_dstPackageConfSelectRequirement_rev); }
	::Udm::AClassPointerAttr< PackageConfReference, ComponentPackageReference> PackageConfiguration::dstPackageConfReference() const { return ::Udm::AClassPointerAttr< PackageConfReference, ComponentPackageReference>(impl, meta_dstPackageConfReference, meta_dstPackageConfReference_rev); }
	::Udm::AClassPointerAttr< PackageConfBasePackage, ComponentPackage> PackageConfiguration::dstPackageConfBasePackage() const { return ::Udm::AClassPointerAttr< PackageConfBasePackage, ComponentPackage>(impl, meta_dstPackageConfBasePackage, meta_dstPackageConfBasePackage_rev); }
	::Udm::AssocAttr< PackageConfigurationReference> PackageConfiguration::referedbyPackageConfigurationReference() const { return ::Udm::AssocAttr< PackageConfigurationReference>(impl, meta_referedbyPackageConfigurationReference); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfiguration::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfiguration::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfiguration::Accept(Visitor &v) { v.Visit_PackageConfiguration(*this); }

	::Uml::Class PackageConfiguration::meta;
	::Uml::Attribute PackageConfiguration::meta_label;
	::Uml::Attribute PackageConfiguration::meta_UUID;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSpecializedConfig;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfConfigProperty;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfConfigProperty_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSelectRequirement;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSelectRequirement_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfReference;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfReference_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfBasePackage;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfBasePackage_rev;
	::Uml::AssociationRole PackageConfiguration::meta_referedbyPackageConfigurationReference;
	::Uml::CompositionParentRole PackageConfiguration::meta_PackageConfigurationContainer_parent;

	PackageConfSpecializedConfig::PackageConfSpecializedConfig() {}
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(const PackageConfSpecializedConfig &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(PackageConfSpecializedConfig &&master) : MgaObject(master) {};

	PackageConfSpecializedConfig PackageConfSpecializedConfig::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfSpecializedConfig& PackageConfSpecializedConfig::operator=(PackageConfSpecializedConfig &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfSpecializedConfig PackageConfSpecializedConfig::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Instances() { return ::Udm::InstantiatedAttr< PackageConfSpecializedConfig>(impl); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Derived() { return ::Udm::DerivedAttr< PackageConfSpecializedConfig>(impl); }
	::Udm::ArchetypeAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfSpecializedConfig>(impl); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfSpecializedConfig::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfSpecializedConfig::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::PackageConfiguration> PackageConfSpecializedConfig::srcPackageConfSpecializedConfig_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfiguration>(impl, meta_srcPackageConfSpecializedConfig_end_); }
	::Udm::AssocEndAttr< ::PICML::PackageConfigurationReference> PackageConfSpecializedConfig::dstPackageConfSpecializedConfig_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfigurationReference>(impl, meta_dstPackageConfSpecializedConfig_end_); }
	void PackageConfSpecializedConfig::Accept(Visitor &v) { v.Visit_PackageConfSpecializedConfig(*this); }

	::Uml::Class PackageConfSpecializedConfig::meta;
	::Uml::CompositionParentRole PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_;
	::Uml::AssociationRole PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_;

	PackageConfSelectRequirement::PackageConfSelectRequirement() {}
	PackageConfSelectRequirement::PackageConfSelectRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfSelectRequirement::PackageConfSelectRequirement(const PackageConfSelectRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfSelectRequirement::PackageConfSelectRequirement(PackageConfSelectRequirement &&master) : MgaObject(master) {};

	PackageConfSelectRequirement PackageConfSelectRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfSelectRequirement& PackageConfSelectRequirement::operator=(PackageConfSelectRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfSelectRequirement PackageConfSelectRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfSelectRequirement PackageConfSelectRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfSelectRequirement PackageConfSelectRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Instances() { return ::Udm::InstantiatedAttr< PackageConfSelectRequirement>(impl); }
	PackageConfSelectRequirement PackageConfSelectRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Derived() { return ::Udm::DerivedAttr< PackageConfSelectRequirement>(impl); }
	::Udm::ArchetypeAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfSelectRequirement>(impl); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfSelectRequirement::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfSelectRequirement::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::PackageConfiguration> PackageConfSelectRequirement::srcPackageConfSelectRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfiguration>(impl, meta_srcPackageConfSelectRequirement_end_); }
	::Udm::AssocEndAttr< ::PICML::Requirement> PackageConfSelectRequirement::dstPackageConfSelectRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::Requirement>(impl, meta_dstPackageConfSelectRequirement_end_); }
	void PackageConfSelectRequirement::Accept(Visitor &v) { v.Visit_PackageConfSelectRequirement(*this); }

	::Uml::Class PackageConfSelectRequirement::meta;
	::Uml::CompositionParentRole PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_;
	::Uml::AssociationRole PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_;

	PackageConfConfigProperty::PackageConfConfigProperty() {}
	PackageConfConfigProperty::PackageConfConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfConfigProperty::PackageConfConfigProperty(const PackageConfConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfConfigProperty::PackageConfConfigProperty(PackageConfConfigProperty &&master) : MgaObject(master) {};

	PackageConfConfigProperty PackageConfConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfConfigProperty& PackageConfConfigProperty::operator=(PackageConfConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfConfigProperty PackageConfConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfConfigProperty PackageConfConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfConfigProperty PackageConfConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfConfigProperty> PackageConfConfigProperty::Instances() { return ::Udm::InstantiatedAttr< PackageConfConfigProperty>(impl); }
	PackageConfConfigProperty PackageConfConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfConfigProperty> PackageConfConfigProperty::Derived() { return ::Udm::DerivedAttr< PackageConfConfigProperty>(impl); }
	::Udm::ArchetypeAttr< PackageConfConfigProperty> PackageConfConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfConfigProperty>(impl); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfConfigProperty::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfConfigProperty::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::PackageConfiguration> PackageConfConfigProperty::srcPackageConfConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfiguration>(impl, meta_srcPackageConfConfigProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> PackageConfConfigProperty::dstPackageConfConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstPackageConfConfigProperty_end_); }
	void PackageConfConfigProperty::Accept(Visitor &v) { v.Visit_PackageConfConfigProperty(*this); }

	::Uml::Class PackageConfConfigProperty::meta;
	::Uml::CompositionParentRole PackageConfConfigProperty::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_;
	::Uml::AssociationRole PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_;

	PackageConfigurations::PackageConfigurations() {}
	PackageConfigurations::PackageConfigurations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PackageConfigurations::PackageConfigurations(const PackageConfigurations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PackageConfigurations::PackageConfigurations(PackageConfigurations &&master) : UDM_OBJECT(master) {};

	PackageConfigurations PackageConfigurations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurations& PackageConfigurations::operator=(PackageConfigurations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurations PackageConfigurations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurations PackageConfigurations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurations PackageConfigurations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurations> PackageConfigurations::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurations>(impl); }
	PackageConfigurations PackageConfigurations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurations> PackageConfigurations::Derived() { return ::Udm::DerivedAttr< PackageConfigurations>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurations> PackageConfigurations::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurations>(impl); }
	::Udm::StringAttr PackageConfigurations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigurationContainer> PackageConfigurations::PackageConfigurationContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigurationContainer> PackageConfigurations::PackageConfigurationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PackageConfigurations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> PackageConfigurations::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> PackageConfigurations::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurations::Accept(Visitor &v) { v.Visit_PackageConfigurations(*this); }

	::Uml::Class PackageConfigurations::meta;
	::Uml::Attribute PackageConfigurations::meta_name;
	::Uml::CompositionChildRole PackageConfigurations::meta_PackageConfigurationContainer_children;
	::Uml::CompositionParentRole PackageConfigurations::meta_RootFolder_parent;

	PackageConfigurationContainer::PackageConfigurationContainer() {}
	PackageConfigurationContainer::PackageConfigurationContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigurationContainer::PackageConfigurationContainer(const PackageConfigurationContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigurationContainer::PackageConfigurationContainer(PackageConfigurationContainer &&master) : MgaObject(master) {};

	PackageConfigurationContainer PackageConfigurationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurationContainer& PackageConfigurationContainer::operator=(PackageConfigurationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurationContainer PackageConfigurationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurationContainer PackageConfigurationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurationContainer PackageConfigurationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurationContainer> PackageConfigurationContainer::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurationContainer>(impl); }
	PackageConfigurationContainer PackageConfigurationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurationContainer> PackageConfigurationContainer::Derived() { return ::Udm::DerivedAttr< PackageConfigurationContainer>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurationContainer> PackageConfigurationContainer::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurationContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> PackageConfigurationContainer::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfiguration> PackageConfigurationContainer::PackageConfiguration_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfiguration>(impl, meta_PackageConfiguration_children); }
	::Udm::ChildAttr< ::PICML::PackageConfSpecializedConfig> PackageConfigurationContainer::PackageConfSpecializedConfig_child() const { return ::Udm::ChildAttr< ::PICML::PackageConfSpecializedConfig>(impl, meta_PackageConfSpecializedConfig_child); }
	::Udm::ChildrenAttr< ::PICML::Requirement> PackageConfigurationContainer::Requirement_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfSelectRequirement> PackageConfigurationContainer::PackageConfSelectRequirement_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfSelectRequirement>(impl, meta_PackageConfSelectRequirement_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfConfigProperty> PackageConfigurationContainer::PackageConfConfigProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfConfigProperty>(impl, meta_PackageConfConfigProperty_children); }
	::Udm::ChildAttr< ::PICML::ComponentPackageReference> PackageConfigurationContainer::ComponentPackageReference_child() const { return ::Udm::ChildAttr< ::PICML::ComponentPackageReference>(impl, meta_ComponentPackageReference_child); }
	::Udm::ChildAttr< ::PICML::ComponentPackage> PackageConfigurationContainer::ComponentPackage_child() const { return ::Udm::ChildAttr< ::PICML::ComponentPackage>(impl, meta_ComponentPackage_child); }
	::Udm::ChildAttr< ::PICML::PackageConfReference> PackageConfigurationContainer::PackageConfReference_child() const { return ::Udm::ChildAttr< ::PICML::PackageConfReference>(impl, meta_PackageConfReference_child); }
	::Udm::ChildAttr< ::PICML::PackageConfBasePackage> PackageConfigurationContainer::PackageConfBasePackage_child() const { return ::Udm::ChildAttr< ::PICML::PackageConfBasePackage>(impl, meta_PackageConfBasePackage_child); }
	::Udm::ChildrenAttr< ::PICML::RTRequirements> PackageConfigurationContainer::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ECRequirements> PackageConfigurationContainer::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfiguration> PackageConfigurationContainer::PackageConfiguration_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfiguration>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfSpecializedConfig> PackageConfigurationContainer::PackageConfSpecializedConfig_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfSpecializedConfig>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfSelectRequirement> PackageConfigurationContainer::PackageConfSelectRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfSelectRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfConfigProperty> PackageConfigurationContainer::PackageConfConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfReference> PackageConfigurationContainer::PackageConfReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfBasePackage> PackageConfigurationContainer::PackageConfBasePackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfBasePackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackage> PackageConfigurationContainer::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackageReference> PackageConfigurationContainer::ComponentPackageReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackageReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> PackageConfigurationContainer::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> PackageConfigurationContainer::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> PackageConfigurationContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementBase> PackageConfigurationContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Requirement> PackageConfigurationContainer::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PackageConfigurationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::PackageConfigurations> PackageConfigurationContainer::PackageConfigurations_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurations>(impl, meta_PackageConfigurations_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurations> PackageConfigurationContainer::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurations>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurationContainer::Accept(Visitor &v) { v.Visit_PackageConfigurationContainer(*this); }

	::Uml::Class PackageConfigurationContainer::meta;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_Property_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfiguration_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_Requirement_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfSelectRequirement_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfConfigProperty_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_ComponentPackageReference_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_ComponentPackage_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfReference_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfBasePackage_child;
	::Uml::CompositionParentRole PackageConfigurationContainer::meta_PackageConfigurations_parent;

	PackageConfigurationReference::PackageConfigurationReference() {}
	PackageConfigurationReference::PackageConfigurationReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigurationReference::PackageConfigurationReference(const PackageConfigurationReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigurationReference::PackageConfigurationReference(PackageConfigurationReference &&master) : MgaObject(master) {};

	PackageConfigurationReference PackageConfigurationReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurationReference& PackageConfigurationReference::operator=(PackageConfigurationReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurationReference PackageConfigurationReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurationReference PackageConfigurationReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurationReference PackageConfigurationReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurationReference> PackageConfigurationReference::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurationReference>(impl); }
	PackageConfigurationReference PackageConfigurationReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurationReference> PackageConfigurationReference::Derived() { return ::Udm::DerivedAttr< PackageConfigurationReference>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurationReference> PackageConfigurationReference::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurationReference>(impl); }
	::Udm::AClassAssocAttr< PackageConfSpecializedConfig, PackageConfiguration> PackageConfigurationReference::srcPackageConfSpecializedConfig() const { return ::Udm::AClassAssocAttr< PackageConfSpecializedConfig, PackageConfiguration>(impl, meta_srcPackageConfSpecializedConfig, meta_srcPackageConfSpecializedConfig_rev); }
	::Udm::PointerAttr< PackageConfiguration> PackageConfigurationReference::ref() const { return ::Udm::PointerAttr< PackageConfiguration>(impl, meta_ref); }
	::Udm::AClassPointerAttr< package, TopLevelPackage> PackageConfigurationReference::srcpackage() const { return ::Udm::AClassPointerAttr< package, TopLevelPackage>(impl, meta_srcpackage, meta_srcpackage_rev); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> PackageConfigurationReference::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> PackageConfigurationReference::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurationReference::Accept(Visitor &v) { v.Visit_PackageConfigurationReference(*this); }

	::Uml::Class PackageConfigurationReference::meta;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev;
	::Uml::AssociationRole PackageConfigurationReference::meta_ref;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcpackage;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcpackage_rev;
	::Uml::CompositionParentRole PackageConfigurationReference::meta_TopLevelPackageContainer_parent;

	PackageConfReference::PackageConfReference() {}
	PackageConfReference::PackageConfReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfReference::PackageConfReference(const PackageConfReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfReference::PackageConfReference(PackageConfReference &&master) : MgaObject(master) {};

	PackageConfReference PackageConfReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfReference& PackageConfReference::operator=(PackageConfReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfReference PackageConfReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfReference PackageConfReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfReference PackageConfReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfReference> PackageConfReference::Instances() { return ::Udm::InstantiatedAttr< PackageConfReference>(impl); }
	PackageConfReference PackageConfReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfReference> PackageConfReference::Derived() { return ::Udm::DerivedAttr< PackageConfReference>(impl); }
	::Udm::ArchetypeAttr< PackageConfReference> PackageConfReference::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfReference>(impl); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfReference::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfReference::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::PackageConfiguration> PackageConfReference::srcPackageConfReference_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfiguration>(impl, meta_srcPackageConfReference_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackageReference> PackageConfReference::dstPackageConfReference_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackageReference>(impl, meta_dstPackageConfReference_end_); }
	void PackageConfReference::Accept(Visitor &v) { v.Visit_PackageConfReference(*this); }

	::Uml::Class PackageConfReference::meta;
	::Uml::CompositionParentRole PackageConfReference::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfReference::meta_srcPackageConfReference_end_;
	::Uml::AssociationRole PackageConfReference::meta_dstPackageConfReference_end_;

	PackageConfBasePackage::PackageConfBasePackage() {}
	PackageConfBasePackage::PackageConfBasePackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfBasePackage::PackageConfBasePackage(const PackageConfBasePackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfBasePackage::PackageConfBasePackage(PackageConfBasePackage &&master) : MgaObject(master) {};

	PackageConfBasePackage PackageConfBasePackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfBasePackage& PackageConfBasePackage::operator=(PackageConfBasePackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfBasePackage PackageConfBasePackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfBasePackage PackageConfBasePackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfBasePackage PackageConfBasePackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfBasePackage> PackageConfBasePackage::Instances() { return ::Udm::InstantiatedAttr< PackageConfBasePackage>(impl); }
	PackageConfBasePackage PackageConfBasePackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfBasePackage> PackageConfBasePackage::Derived() { return ::Udm::DerivedAttr< PackageConfBasePackage>(impl); }
	::Udm::ArchetypeAttr< PackageConfBasePackage> PackageConfBasePackage::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfBasePackage>(impl); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfBasePackage::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> PackageConfBasePackage::parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::PackageConfiguration> PackageConfBasePackage::srcPackageConfBasePackage_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfiguration>(impl, meta_srcPackageConfBasePackage_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackage> PackageConfBasePackage::dstPackageConfBasePackage_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackage>(impl, meta_dstPackageConfBasePackage_end_); }
	void PackageConfBasePackage::Accept(Visitor &v) { v.Visit_PackageConfBasePackage(*this); }

	::Uml::Class PackageConfBasePackage::meta;
	::Uml::CompositionParentRole PackageConfBasePackage::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfBasePackage::meta_srcPackageConfBasePackage_end_;
	::Uml::AssociationRole PackageConfBasePackage::meta_dstPackageConfBasePackage_end_;

	ArtifactDependency::ArtifactDependency() {}
	ArtifactDependency::ArtifactDependency(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDependency::ArtifactDependency(const ArtifactDependency &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDependency::ArtifactDependency(ArtifactDependency &&master) : MgaObject(master) {};

	ArtifactDependency ArtifactDependency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDependency& ArtifactDependency::operator=(ArtifactDependency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDependency ArtifactDependency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDependency ArtifactDependency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDependency ArtifactDependency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDependency> ArtifactDependency::Instances() { return ::Udm::InstantiatedAttr< ArtifactDependency>(impl); }
	ArtifactDependency ArtifactDependency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDependency> ArtifactDependency::Derived() { return ::Udm::DerivedAttr< ArtifactDependency>(impl); }
	::Udm::ArchetypeAttr< ArtifactDependency> ArtifactDependency::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDependency>(impl); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDependency::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDependency::parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactDependency::srcArtifactDependency_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_srcArtifactDependency_end_); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactDependency::dstArtifactDependency_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_dstArtifactDependency_end_); }
	void ArtifactDependency::Accept(Visitor &v) { v.Visit_ArtifactDependency(*this); }

	::Uml::Class ArtifactDependency::meta;
	::Uml::CompositionParentRole ArtifactDependency::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDependency::meta_srcArtifactDependency_end_;
	::Uml::AssociationRole ArtifactDependency::meta_dstArtifactDependency_end_;

	ImplementationArtifact::ImplementationArtifact() {}
	ImplementationArtifact::ImplementationArtifact(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationArtifact::ImplementationArtifact(const ImplementationArtifact &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifact::ImplementationArtifact(ImplementationArtifact &&master) : MgaObject(master) {};

	ImplementationArtifact ImplementationArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifact& ImplementationArtifact::operator=(ImplementationArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifact ImplementationArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifact ImplementationArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifact ImplementationArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifact> ImplementationArtifact::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifact>(impl); }
	ImplementationArtifact ImplementationArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifact> ImplementationArtifact::Derived() { return ::Udm::DerivedAttr< ImplementationArtifact>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifact> ImplementationArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifact>(impl); }
	::Udm::StringAttr ImplementationArtifact::operatingSystem() const { return ::Udm::StringAttr(impl, meta_operatingSystem); }
	::Udm::StringAttr ImplementationArtifact::configuration() const { return ::Udm::StringAttr(impl, meta_configuration); }
	::Udm::StringAttr ImplementationArtifact::artifactVersion() const { return ::Udm::StringAttr(impl, meta_artifactVersion); }
	::Udm::StringAttr ImplementationArtifact::architecture() const { return ::Udm::StringAttr(impl, meta_architecture); }
	::Udm::StringAttr ImplementationArtifact::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr ImplementationArtifact::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::StringAttr ImplementationArtifact::location() const { return ::Udm::StringAttr(impl, meta_location); }
	::Udm::AssocAttr< ComponentImplementationArtifact> ImplementationArtifact::referedbyComponentImplemenationArtifact() const { return ::Udm::AssocAttr< ComponentImplementationArtifact>(impl, meta_referedbyComponentImplemenationArtifact); }
	::Udm::AssocAttr< ComponentServantArtifact> ImplementationArtifact::referedbyComponentServantArtifact() const { return ::Udm::AssocAttr< ComponentServantArtifact>(impl, meta_referedbyComponentServantArtifact); }
	::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact> ImplementationArtifact::dstArtifactDependency() const { return ::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact>(impl, meta_dstArtifactDependency, meta_dstArtifactDependency_rev); }
	::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact> ImplementationArtifact::srcArtifactDependency() const { return ::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact>(impl, meta_srcArtifactDependency, meta_srcArtifactDependency_rev); }
	::Udm::AClassAssocAttr< ArtifactInfoProperty, Property> ImplementationArtifact::dstArtifactInfoProperty() const { return ::Udm::AClassAssocAttr< ArtifactInfoProperty, Property>(impl, meta_dstArtifactInfoProperty, meta_dstArtifactInfoProperty_rev); }
	::Udm::AClassAssocAttr< ArtifactExecParameter, Property> ImplementationArtifact::dstArtifactExecParameter() const { return ::Udm::AClassAssocAttr< ArtifactExecParameter, Property>(impl, meta_dstArtifactExecParameter, meta_dstArtifactExecParameter_rev); }
	::Udm::AClassAssocAttr< ArtifactDeployRequirement, Requirement> ImplementationArtifact::dstArtifactDeployRequirement() const { return ::Udm::AClassAssocAttr< ArtifactDeployRequirement, Requirement>(impl, meta_dstArtifactDeployRequirement, meta_dstArtifactDeployRequirement_rev); }
	::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifactReference> ImplementationArtifact::dstArtifactDependsOn() const { return ::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifactReference>(impl, meta_dstArtifactDependsOn, meta_dstArtifactDependsOn_rev); }
	::Udm::AssocAttr< ImplementationArtifactReference> ImplementationArtifact::referedbyImplementationArtifactReference() const { return ::Udm::AssocAttr< ImplementationArtifactReference>(impl, meta_referedbyImplementationArtifactReference); }
	::Udm::AssocAttr< ExternalResources> ImplementationArtifact::referedbyExternalResources() const { return ::Udm::AssocAttr< ExternalResources>(impl, meta_referedbyExternalResources); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ImplementationArtifact::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::Project> ImplementationArtifact::Project_parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ImplementationArtifact::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifact::Accept(Visitor &v) { v.Visit_ImplementationArtifact(*this); }

	::Uml::Class ImplementationArtifact::meta;
	::Uml::Attribute ImplementationArtifact::meta_operatingSystem;
	::Uml::Attribute ImplementationArtifact::meta_configuration;
	::Uml::Attribute ImplementationArtifact::meta_artifactVersion;
	::Uml::Attribute ImplementationArtifact::meta_architecture;
	::Uml::Attribute ImplementationArtifact::meta_label;
	::Uml::Attribute ImplementationArtifact::meta_UUID;
	::Uml::Attribute ImplementationArtifact::meta_location;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyComponentImplemenationArtifact;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyComponentServantArtifact;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependency;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependency_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_srcArtifactDependency;
	::Uml::AssociationRole ImplementationArtifact::meta_srcArtifactDependency_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactInfoProperty;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactInfoProperty_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactExecParameter;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactExecParameter_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDeployRequirement;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDeployRequirement_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependsOn;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependsOn_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyImplementationArtifactReference;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyExternalResources;
	::Uml::CompositionParentRole ImplementationArtifact::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole ImplementationArtifact::meta_Project_parent;

	ArtifactInfoProperty::ArtifactInfoProperty() {}
	ArtifactInfoProperty::ArtifactInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactInfoProperty::ArtifactInfoProperty(const ArtifactInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactInfoProperty::ArtifactInfoProperty(ArtifactInfoProperty &&master) : MgaObject(master) {};

	ArtifactInfoProperty ArtifactInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactInfoProperty& ArtifactInfoProperty::operator=(ArtifactInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactInfoProperty ArtifactInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactInfoProperty ArtifactInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactInfoProperty ArtifactInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactInfoProperty> ArtifactInfoProperty::Instances() { return ::Udm::InstantiatedAttr< ArtifactInfoProperty>(impl); }
	ArtifactInfoProperty ArtifactInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactInfoProperty> ArtifactInfoProperty::Derived() { return ::Udm::DerivedAttr< ArtifactInfoProperty>(impl); }
	::Udm::ArchetypeAttr< ArtifactInfoProperty> ArtifactInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactInfoProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactInfoProperty::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactInfoProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactInfoProperty::srcArtifactInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_srcArtifactInfoProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> ArtifactInfoProperty::dstArtifactInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstArtifactInfoProperty_end_); }
	void ArtifactInfoProperty::Accept(Visitor &v) { v.Visit_ArtifactInfoProperty(*this); }

	::Uml::Class ArtifactInfoProperty::meta;
	::Uml::CompositionParentRole ArtifactInfoProperty::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_;
	::Uml::AssociationRole ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_;

	ArtifactContainer::ArtifactContainer() {}
	ArtifactContainer::ArtifactContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactContainer::ArtifactContainer(const ArtifactContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactContainer::ArtifactContainer(ArtifactContainer &&master) : MgaObject(master) {};

	ArtifactContainer ArtifactContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactContainer& ArtifactContainer::operator=(ArtifactContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactContainer ArtifactContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactContainer ArtifactContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactContainer ArtifactContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactContainer> ArtifactContainer::Instances() { return ::Udm::InstantiatedAttr< ArtifactContainer>(impl); }
	ArtifactContainer ArtifactContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactContainer> ArtifactContainer::Derived() { return ::Udm::DerivedAttr< ArtifactContainer>(impl); }
	::Udm::ArchetypeAttr< ArtifactContainer> ArtifactContainer::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> ArtifactContainer::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDependency> ArtifactContainer::ArtifactDependency_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDependency>(impl, meta_ArtifactDependency_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifact> ArtifactContainer::ImplementationArtifact_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifact>(impl, meta_ImplementationArtifact_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactInfoProperty> ArtifactContainer::ArtifactInfoProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactInfoProperty>(impl, meta_ArtifactInfoProperty_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactExecParameter> ArtifactContainer::ArtifactExecParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactExecParameter>(impl, meta_ArtifactExecParameter_children); }
	::Udm::ChildrenAttr< ::PICML::Requirement> ArtifactContainer::Requirement_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDeployRequirement> ArtifactContainer::ArtifactDeployRequirement_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDeployRequirement>(impl, meta_ArtifactDeployRequirement_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ArtifactContainer::ImplementationArtifactReference_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDependsOn> ArtifactContainer::ArtifactDependsOn_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDependsOn>(impl, meta_ArtifactDependsOn_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact> ArtifactContainer::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact> ArtifactContainer::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RTRequirements> ArtifactContainer::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ECRequirements> ArtifactContainer::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDependency> ArtifactContainer::ArtifactDependency_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDependency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifact> ArtifactContainer::ImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArtifactInfoProperty> ArtifactContainer::ArtifactInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArtifactExecParameter> ArtifactContainer::ArtifactExecParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactExecParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDeployRequirement> ArtifactContainer::ArtifactDeployRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDeployRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArtifactDependsOn> ArtifactContainer::ArtifactDependsOn_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactDependsOn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ArtifactContainer::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> ArtifactContainer::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> ArtifactContainer::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> ArtifactContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementBase> ArtifactContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Requirement> ArtifactContainer::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ArtifactContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ImplementationArtifacts> ArtifactContainer::ImplementationArtifacts_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationArtifacts>(impl, meta_ImplementationArtifacts_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationArtifacts> ArtifactContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationArtifacts>(impl, ::Udm::NULLPARENTROLE); }
	void ArtifactContainer::Accept(Visitor &v) { v.Visit_ArtifactContainer(*this); }

	::Uml::Class ArtifactContainer::meta;
	::Uml::CompositionChildRole ArtifactContainer::meta_Property_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDependency_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ImplementationArtifact_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactInfoProperty_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactExecParameter_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_Requirement_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDeployRequirement_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ImplementationArtifactReference_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDependsOn_children;
	::Uml::CompositionParentRole ArtifactContainer::meta_ImplementationArtifacts_parent;

	ArtifactExecParameter::ArtifactExecParameter() {}
	ArtifactExecParameter::ArtifactExecParameter(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactExecParameter::ArtifactExecParameter(const ArtifactExecParameter &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactExecParameter::ArtifactExecParameter(ArtifactExecParameter &&master) : MgaObject(master) {};

	ArtifactExecParameter ArtifactExecParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactExecParameter& ArtifactExecParameter::operator=(ArtifactExecParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactExecParameter ArtifactExecParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactExecParameter ArtifactExecParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactExecParameter ArtifactExecParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactExecParameter> ArtifactExecParameter::Instances() { return ::Udm::InstantiatedAttr< ArtifactExecParameter>(impl); }
	ArtifactExecParameter ArtifactExecParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactExecParameter> ArtifactExecParameter::Derived() { return ::Udm::DerivedAttr< ArtifactExecParameter>(impl); }
	::Udm::ArchetypeAttr< ArtifactExecParameter> ArtifactExecParameter::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactExecParameter>(impl); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactExecParameter::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactExecParameter::parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactExecParameter::srcArtifactExecParameter_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_srcArtifactExecParameter_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> ArtifactExecParameter::dstArtifactExecParameter_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstArtifactExecParameter_end_); }
	void ArtifactExecParameter::Accept(Visitor &v) { v.Visit_ArtifactExecParameter(*this); }

	::Uml::Class ArtifactExecParameter::meta;
	::Uml::CompositionParentRole ArtifactExecParameter::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactExecParameter::meta_srcArtifactExecParameter_end_;
	::Uml::AssociationRole ArtifactExecParameter::meta_dstArtifactExecParameter_end_;

	ArtifactDeployRequirement::ArtifactDeployRequirement() {}
	ArtifactDeployRequirement::ArtifactDeployRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDeployRequirement::ArtifactDeployRequirement(const ArtifactDeployRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDeployRequirement::ArtifactDeployRequirement(ArtifactDeployRequirement &&master) : MgaObject(master) {};

	ArtifactDeployRequirement ArtifactDeployRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDeployRequirement& ArtifactDeployRequirement::operator=(ArtifactDeployRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDeployRequirement ArtifactDeployRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDeployRequirement ArtifactDeployRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDeployRequirement ArtifactDeployRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Instances() { return ::Udm::InstantiatedAttr< ArtifactDeployRequirement>(impl); }
	ArtifactDeployRequirement ArtifactDeployRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Derived() { return ::Udm::DerivedAttr< ArtifactDeployRequirement>(impl); }
	::Udm::ArchetypeAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDeployRequirement>(impl); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDeployRequirement::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDeployRequirement::parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactDeployRequirement::srcArtifactDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_srcArtifactDeployRequirement_end_); }
	::Udm::AssocEndAttr< ::PICML::Requirement> ArtifactDeployRequirement::dstArtifactDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::Requirement>(impl, meta_dstArtifactDeployRequirement_end_); }
	void ArtifactDeployRequirement::Accept(Visitor &v) { v.Visit_ArtifactDeployRequirement(*this); }

	::Uml::Class ArtifactDeployRequirement::meta;
	::Uml::CompositionParentRole ArtifactDeployRequirement::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_;
	::Uml::AssociationRole ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_;

	ArtifactDependsOn::ArtifactDependsOn() {}
	ArtifactDependsOn::ArtifactDependsOn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDependsOn::ArtifactDependsOn(const ArtifactDependsOn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDependsOn::ArtifactDependsOn(ArtifactDependsOn &&master) : MgaObject(master) {};

	ArtifactDependsOn ArtifactDependsOn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDependsOn& ArtifactDependsOn::operator=(ArtifactDependsOn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDependsOn ArtifactDependsOn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDependsOn ArtifactDependsOn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDependsOn ArtifactDependsOn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDependsOn> ArtifactDependsOn::Instances() { return ::Udm::InstantiatedAttr< ArtifactDependsOn>(impl); }
	ArtifactDependsOn ArtifactDependsOn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDependsOn> ArtifactDependsOn::Derived() { return ::Udm::DerivedAttr< ArtifactDependsOn>(impl); }
	::Udm::ArchetypeAttr< ArtifactDependsOn> ArtifactDependsOn::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDependsOn>(impl); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDependsOn::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ArtifactDependsOn::parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifact> ArtifactDependsOn::srcArtifactDependsOn_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifact>(impl, meta_srcArtifactDependsOn_end_); }
	::Udm::AssocEndAttr< ::PICML::ImplementationArtifactReference> ArtifactDependsOn::dstArtifactDependsOn_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationArtifactReference>(impl, meta_dstArtifactDependsOn_end_); }
	void ArtifactDependsOn::Accept(Visitor &v) { v.Visit_ArtifactDependsOn(*this); }

	::Uml::Class ArtifactDependsOn::meta;
	::Uml::CompositionParentRole ArtifactDependsOn::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDependsOn::meta_srcArtifactDependsOn_end_;
	::Uml::AssociationRole ArtifactDependsOn::meta_dstArtifactDependsOn_end_;

	ImplementationArtifactReference::ImplementationArtifactReference() {}
	ImplementationArtifactReference::ImplementationArtifactReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationArtifactReference::ImplementationArtifactReference(const ImplementationArtifactReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifactReference::ImplementationArtifactReference(ImplementationArtifactReference &&master) : MgaObject(master) {};

	ImplementationArtifactReference ImplementationArtifactReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifactReference& ImplementationArtifactReference::operator=(ImplementationArtifactReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifactReference ImplementationArtifactReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifactReference ImplementationArtifactReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifactReference ImplementationArtifactReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifactReference> ImplementationArtifactReference::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifactReference>(impl); }
	ImplementationArtifactReference ImplementationArtifactReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifactReference> ImplementationArtifactReference::Derived() { return ::Udm::DerivedAttr< ImplementationArtifactReference>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifactReference> ImplementationArtifactReference::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifactReference>(impl); }
	::Udm::AClassAssocAttr< MonolithprimaryArtifact, MonolithicImplementationBase> ImplementationArtifactReference::srcMonolithprimaryArtifact() const { return ::Udm::AClassAssocAttr< MonolithprimaryArtifact, MonolithicImplementationBase>(impl, meta_srcMonolithprimaryArtifact, meta_srcMonolithprimaryArtifact_rev); }
	::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifact> ImplementationArtifactReference::srcArtifactDependsOn() const { return ::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifact>(impl, meta_srcArtifactDependsOn, meta_srcArtifactDependsOn_rev); }
	::Udm::PointerAttr< ImplementationArtifact> ImplementationArtifactReference::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> ImplementationArtifactReference::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> ImplementationArtifactReference::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ExecutorProject> ImplementationArtifactReference::ExecutorProject_parent() const { return ::Udm::ParentAttr< ::PICML::ExecutorProject>(impl, meta_ExecutorProject_parent); }
	::Udm::ParentAttr< ::PICML::ServantProject> ImplementationArtifactReference::ServantProject_parent() const { return ::Udm::ParentAttr< ::PICML::ServantProject>(impl, meta_ServantProject_parent); }
	::Udm::ParentAttr< ::PICML::StubProject> ImplementationArtifactReference::StubProject_parent() const { return ::Udm::ParentAttr< ::PICML::StubProject>(impl, meta_StubProject_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ImplementationArtifactReference::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifactReference::Accept(Visitor &v) { v.Visit_ImplementationArtifactReference(*this); }

	::Uml::Class ImplementationArtifactReference::meta;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcArtifactDependsOn;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcArtifactDependsOn_rev;
	::Uml::AssociationRole ImplementationArtifactReference::meta_ref;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ImplementationContainer_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ExecutorProject_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ServantProject_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_StubProject_parent;

	ImplementationArtifacts::ImplementationArtifacts() {}
	ImplementationArtifacts::ImplementationArtifacts(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ImplementationArtifacts::ImplementationArtifacts(const ImplementationArtifacts &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifacts::ImplementationArtifacts(ImplementationArtifacts &&master) : UDM_OBJECT(master) {};

	ImplementationArtifacts ImplementationArtifacts::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifacts& ImplementationArtifacts::operator=(ImplementationArtifacts &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifacts ImplementationArtifacts::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifacts ImplementationArtifacts::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifacts ImplementationArtifacts::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifacts> ImplementationArtifacts::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifacts>(impl); }
	ImplementationArtifacts ImplementationArtifacts::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifacts> ImplementationArtifacts::Derived() { return ::Udm::DerivedAttr< ImplementationArtifacts>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifacts> ImplementationArtifacts::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifacts>(impl); }
	::Udm::StringAttr ImplementationArtifacts::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ArtifactContainer> ImplementationArtifacts::ArtifactContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_children); }
	::Udm::ChildrenAttr< ::PICML::ArtifactContainer> ImplementationArtifacts::ArtifactContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArtifactContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ImplementationArtifacts::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ImplementationArtifacts::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ImplementationArtifacts::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifacts::Accept(Visitor &v) { v.Visit_ImplementationArtifacts(*this); }

	::Uml::Class ImplementationArtifacts::meta;
	::Uml::Attribute ImplementationArtifacts::meta_name;
	::Uml::CompositionChildRole ImplementationArtifacts::meta_ArtifactContainer_children;
	::Uml::CompositionParentRole ImplementationArtifacts::meta_RootFolder_parent;

	package::package() {}
	package::package(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	package::package(const package &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	package::package(package &&master) : MgaObject(master) {};

	package package::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	package& package::operator=(package &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	package package::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	package package::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	package package::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< package> package::Instances() { return ::Udm::InstantiatedAttr< package>(impl); }
	package package::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< package> package::Derived() { return ::Udm::DerivedAttr< package>(impl); }
	::Udm::ArchetypeAttr< package> package::Archetype() const { return ::Udm::ArchetypeAttr< package>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> package::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> package::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::TopLevelPackage> package::srcpackage_end() const { return ::Udm::AssocEndAttr< ::PICML::TopLevelPackage>(impl, meta_srcpackage_end_); }
	::Udm::AssocEndAttr< ::PICML::PackageConfigurationReference> package::dstpackage_end() const { return ::Udm::AssocEndAttr< ::PICML::PackageConfigurationReference>(impl, meta_dstpackage_end_); }
	void package::Accept(Visitor &v) { v.Visit_package(*this); }

	::Uml::Class package::meta;
	::Uml::CompositionParentRole package::meta_TopLevelPackageContainer_parent;
	::Uml::AssociationRole package::meta_srcpackage_end_;
	::Uml::AssociationRole package::meta_dstpackage_end_;

	TopLevelPackages::TopLevelPackages() {}
	TopLevelPackages::TopLevelPackages(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	TopLevelPackages::TopLevelPackages(const TopLevelPackages &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	TopLevelPackages::TopLevelPackages(TopLevelPackages &&master) : UDM_OBJECT(master) {};

	TopLevelPackages TopLevelPackages::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackages& TopLevelPackages::operator=(TopLevelPackages &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackages TopLevelPackages::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackages TopLevelPackages::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackages TopLevelPackages::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackages> TopLevelPackages::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackages>(impl); }
	TopLevelPackages TopLevelPackages::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackages> TopLevelPackages::Derived() { return ::Udm::DerivedAttr< TopLevelPackages>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackages> TopLevelPackages::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackages>(impl); }
	::Udm::StringAttr TopLevelPackages::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::TopLevelPackageContainer> TopLevelPackages::TopLevelPackageContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_children); }
	::Udm::ChildrenAttr< ::PICML::TopLevelPackageContainer> TopLevelPackages::TopLevelPackageContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TopLevelPackageContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TopLevelPackages::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> TopLevelPackages::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> TopLevelPackages::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackages::Accept(Visitor &v) { v.Visit_TopLevelPackages(*this); }

	::Uml::Class TopLevelPackages::meta;
	::Uml::Attribute TopLevelPackages::meta_name;
	::Uml::CompositionChildRole TopLevelPackages::meta_TopLevelPackageContainer_children;
	::Uml::CompositionParentRole TopLevelPackages::meta_RootFolder_parent;

	TopLevelPackage::TopLevelPackage() {}
	TopLevelPackage::TopLevelPackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TopLevelPackage::TopLevelPackage(const TopLevelPackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelPackage::TopLevelPackage(TopLevelPackage &&master) : MgaObject(master) {};

	TopLevelPackage TopLevelPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackage& TopLevelPackage::operator=(TopLevelPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackage TopLevelPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackage TopLevelPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackage TopLevelPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackage> TopLevelPackage::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackage>(impl); }
	TopLevelPackage TopLevelPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackage> TopLevelPackage::Derived() { return ::Udm::DerivedAttr< TopLevelPackage>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackage> TopLevelPackage::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackage>(impl); }
	::Udm::AClassPointerAttr< package, PackageConfigurationReference> TopLevelPackage::dstpackage() const { return ::Udm::AClassPointerAttr< package, PackageConfigurationReference>(impl, meta_dstpackage, meta_dstpackage_rev); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> TopLevelPackage::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelPackageContainer> TopLevelPackage::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackage::Accept(Visitor &v) { v.Visit_TopLevelPackage(*this); }

	::Uml::Class TopLevelPackage::meta;
	::Uml::AssociationRole TopLevelPackage::meta_dstpackage;
	::Uml::AssociationRole TopLevelPackage::meta_dstpackage_rev;
	::Uml::CompositionParentRole TopLevelPackage::meta_TopLevelPackageContainer_parent;

	TopLevelPackageContainer::TopLevelPackageContainer() {}
	TopLevelPackageContainer::TopLevelPackageContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TopLevelPackageContainer::TopLevelPackageContainer(const TopLevelPackageContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelPackageContainer::TopLevelPackageContainer(TopLevelPackageContainer &&master) : MgaObject(master) {};

	TopLevelPackageContainer TopLevelPackageContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackageContainer& TopLevelPackageContainer::operator=(TopLevelPackageContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackageContainer TopLevelPackageContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackageContainer TopLevelPackageContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackageContainer TopLevelPackageContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackageContainer> TopLevelPackageContainer::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackageContainer>(impl); }
	TopLevelPackageContainer TopLevelPackageContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackageContainer> TopLevelPackageContainer::Derived() { return ::Udm::DerivedAttr< TopLevelPackageContainer>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackageContainer> TopLevelPackageContainer::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackageContainer>(impl); }
	::Udm::ChildAttr< ::PICML::package> TopLevelPackageContainer::package_child() const { return ::Udm::ChildAttr< ::PICML::package>(impl, meta_package_child); }
	::Udm::ChildAttr< ::PICML::TopLevelPackage> TopLevelPackageContainer::TopLevelPackage_child() const { return ::Udm::ChildAttr< ::PICML::TopLevelPackage>(impl, meta_TopLevelPackage_child); }
	::Udm::ChildAttr< ::PICML::PackageConfigurationReference> TopLevelPackageContainer::PackageConfigurationReference_child() const { return ::Udm::ChildAttr< ::PICML::PackageConfigurationReference>(impl, meta_PackageConfigurationReference_child); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigurationReference> TopLevelPackageContainer::PackageConfigurationReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigurationReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::package> TopLevelPackageContainer::package_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TopLevelPackage> TopLevelPackageContainer::TopLevelPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TopLevelPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TopLevelPackageContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::TopLevelPackages> TopLevelPackageContainer::TopLevelPackages_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackages>(impl, meta_TopLevelPackages_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelPackages> TopLevelPackageContainer::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelPackages>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackageContainer::Accept(Visitor &v) { v.Visit_TopLevelPackageContainer(*this); }

	::Uml::Class TopLevelPackageContainer::meta;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_package_child;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_TopLevelPackage_child;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_PackageConfigurationReference_child;
	::Uml::CompositionParentRole TopLevelPackageContainer::meta_TopLevelPackages_parent;

	ComponentPackage::ComponentPackage() {}
	ComponentPackage::ComponentPackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPackage::ComponentPackage(const ComponentPackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPackage::ComponentPackage(ComponentPackage &&master) : MgaObject(master) {};

	ComponentPackage ComponentPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackage& ComponentPackage::operator=(ComponentPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackage ComponentPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackage ComponentPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackage ComponentPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackage> ComponentPackage::Instances() { return ::Udm::InstantiatedAttr< ComponentPackage>(impl); }
	ComponentPackage ComponentPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackage> ComponentPackage::Derived() { return ::Udm::DerivedAttr< ComponentPackage>(impl); }
	::Udm::ArchetypeAttr< ComponentPackage> ComponentPackage::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackage>(impl); }
	::Udm::StringAttr ComponentPackage::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr ComponentPackage::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassAssocAttr< PackageConfBasePackage, PackageConfiguration> ComponentPackage::srcPackageConfBasePackage() const { return ::Udm::AClassAssocAttr< PackageConfBasePackage, PackageConfiguration>(impl, meta_srcPackageConfBasePackage, meta_srcPackageConfBasePackage_rev); }
	::Udm::AClassAssocAttr< PackageInfoProperty, Property> ComponentPackage::dstPackageInfoProperty() const { return ::Udm::AClassAssocAttr< PackageInfoProperty, Property>(impl, meta_dstPackageInfoProperty, meta_dstPackageInfoProperty_rev); }
	::Udm::AClassAssocAttr< PackageConfigProperty, Property> ComponentPackage::dstPackageConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfigProperty, Property>(impl, meta_dstPackageConfigProperty, meta_dstPackageConfigProperty_rev); }
	::Udm::AClassAssocAttr< Implementation, ComponentImplementationReference> ComponentPackage::dstImplementation() const { return ::Udm::AClassAssocAttr< Implementation, ComponentImplementationReference>(impl, meta_dstImplementation, meta_dstImplementation_rev); }
	::Udm::AClassPointerAttr< PackageInterface, ComponentRef> ComponentPackage::dstPackageInterface() const { return ::Udm::AClassPointerAttr< PackageInterface, ComponentRef>(impl, meta_dstPackageInterface, meta_dstPackageInterface_rev); }
	::Udm::AssocAttr< ComponentPackageReference> ComponentPackage::referedbyComponentPackageReference() const { return ::Udm::AssocAttr< ComponentPackageReference>(impl, meta_referedbyComponentPackageReference); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> ComponentPackage::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> ComponentPackage::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentPackage::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentPackage::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackage::Accept(Visitor &v) { v.Visit_ComponentPackage(*this); }

	::Uml::Class ComponentPackage::meta;
	::Uml::Attribute ComponentPackage::meta_label;
	::Uml::Attribute ComponentPackage::meta_UUID;
	::Uml::AssociationRole ComponentPackage::meta_srcPackageConfBasePackage;
	::Uml::AssociationRole ComponentPackage::meta_srcPackageConfBasePackage_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInfoProperty;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInfoProperty_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageConfigProperty;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageConfigProperty_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstImplementation;
	::Uml::AssociationRole ComponentPackage::meta_dstImplementation_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInterface;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInterface_rev;
	::Uml::AssociationRole ComponentPackage::meta_referedbyComponentPackageReference;
	::Uml::CompositionParentRole ComponentPackage::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole ComponentPackage::meta_PackageContainer_parent;
	::Uml::CompositionParentRole ComponentPackage::meta_ComponentAssembly_parent;

	PackageInfoProperty::PackageInfoProperty() {}
	PackageInfoProperty::PackageInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageInfoProperty::PackageInfoProperty(const PackageInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageInfoProperty::PackageInfoProperty(PackageInfoProperty &&master) : MgaObject(master) {};

	PackageInfoProperty PackageInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageInfoProperty& PackageInfoProperty::operator=(PackageInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageInfoProperty PackageInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageInfoProperty PackageInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageInfoProperty PackageInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageInfoProperty> PackageInfoProperty::Instances() { return ::Udm::InstantiatedAttr< PackageInfoProperty>(impl); }
	PackageInfoProperty PackageInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageInfoProperty> PackageInfoProperty::Derived() { return ::Udm::DerivedAttr< PackageInfoProperty>(impl); }
	::Udm::ArchetypeAttr< PackageInfoProperty> PackageInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageInfoProperty>(impl); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageInfoProperty::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageInfoProperty::parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackage> PackageInfoProperty::srcPackageInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackage>(impl, meta_srcPackageInfoProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> PackageInfoProperty::dstPackageInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstPackageInfoProperty_end_); }
	void PackageInfoProperty::Accept(Visitor &v) { v.Visit_PackageInfoProperty(*this); }

	::Uml::Class PackageInfoProperty::meta;
	::Uml::CompositionParentRole PackageInfoProperty::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageInfoProperty::meta_srcPackageInfoProperty_end_;
	::Uml::AssociationRole PackageInfoProperty::meta_dstPackageInfoProperty_end_;

	ComponentPackageReference::ComponentPackageReference() {}
	ComponentPackageReference::ComponentPackageReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPackageReference::ComponentPackageReference(const ComponentPackageReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPackageReference::ComponentPackageReference(ComponentPackageReference &&master) : MgaObject(master) {};

	ComponentPackageReference ComponentPackageReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackageReference& ComponentPackageReference::operator=(ComponentPackageReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackageReference ComponentPackageReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackageReference ComponentPackageReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackageReference ComponentPackageReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackageReference> ComponentPackageReference::Instances() { return ::Udm::InstantiatedAttr< ComponentPackageReference>(impl); }
	ComponentPackageReference ComponentPackageReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackageReference> ComponentPackageReference::Derived() { return ::Udm::DerivedAttr< ComponentPackageReference>(impl); }
	::Udm::ArchetypeAttr< ComponentPackageReference> ComponentPackageReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackageReference>(impl); }
	::Udm::StringAttr ComponentPackageReference::requiredUUID() const { return ::Udm::StringAttr(impl, meta_requiredUUID); }
	::Udm::StringAttr ComponentPackageReference::requiredName() const { return ::Udm::StringAttr(impl, meta_requiredName); }
	::Udm::StringAttr ComponentPackageReference::requiredType() const { return ::Udm::StringAttr(impl, meta_requiredType); }
	::Udm::AClassAssocAttr< PackageConfReference, PackageConfiguration> ComponentPackageReference::srcPackageConfReference() const { return ::Udm::AClassAssocAttr< PackageConfReference, PackageConfiguration>(impl, meta_srcPackageConfReference, meta_srcPackageConfReference_rev); }
	::Udm::PointerAttr< ComponentPackage> ComponentPackageReference::ref() const { return ::Udm::PointerAttr< ComponentPackage>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> ComponentPackageReference::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentPackageReference::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentPackageReference::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackageReference::Accept(Visitor &v) { v.Visit_ComponentPackageReference(*this); }

	::Uml::Class ComponentPackageReference::meta;
	::Uml::Attribute ComponentPackageReference::meta_requiredUUID;
	::Uml::Attribute ComponentPackageReference::meta_requiredName;
	::Uml::Attribute ComponentPackageReference::meta_requiredType;
	::Uml::AssociationRole ComponentPackageReference::meta_srcPackageConfReference;
	::Uml::AssociationRole ComponentPackageReference::meta_srcPackageConfReference_rev;
	::Uml::AssociationRole ComponentPackageReference::meta_ref;
	::Uml::CompositionParentRole ComponentPackageReference::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole ComponentPackageReference::meta_ComponentAssembly_parent;

	PackageContainer::PackageContainer() {}
	PackageContainer::PackageContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageContainer::PackageContainer(const PackageContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageContainer::PackageContainer(PackageContainer &&master) : MgaObject(master) {};

	PackageContainer PackageContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageContainer& PackageContainer::operator=(PackageContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageContainer PackageContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageContainer PackageContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageContainer PackageContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageContainer> PackageContainer::Instances() { return ::Udm::InstantiatedAttr< PackageContainer>(impl); }
	PackageContainer PackageContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageContainer> PackageContainer::Derived() { return ::Udm::DerivedAttr< PackageContainer>(impl); }
	::Udm::ArchetypeAttr< PackageContainer> PackageContainer::Archetype() const { return ::Udm::ArchetypeAttr< PackageContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> PackageContainer::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildAttr< ::PICML::ComponentPackage> PackageContainer::ComponentPackage_child() const { return ::Udm::ChildAttr< ::PICML::ComponentPackage>(impl, meta_ComponentPackage_child); }
	::Udm::ChildrenAttr< ::PICML::PackageInfoProperty> PackageContainer::PackageInfoProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageInfoProperty>(impl, meta_PackageInfoProperty_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigProperty> PackageContainer::PackageConfigProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigProperty>(impl, meta_PackageConfigProperty_children); }
	::Udm::ChildAttr< ::PICML::ComponentRef> PackageContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationReference> PackageContainer::ComponentImplementationReference_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationReference>(impl, meta_ComponentImplementationReference_children); }
	::Udm::ChildrenAttr< ::PICML::Implementation> PackageContainer::Implementation_children() const { return ::Udm::ChildrenAttr< ::PICML::Implementation>(impl, meta_Implementation_children); }
	::Udm::ChildAttr< ::PICML::PackageInterface> PackageContainer::PackageInterface_child() const { return ::Udm::ChildAttr< ::PICML::PackageInterface>(impl, meta_PackageInterface_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackage> PackageContainer::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageInfoProperty> PackageContainer::PackageInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigProperty> PackageContainer::PackageConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Implementation> PackageContainer::Implementation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageInterface> PackageContainer::PackageInterface_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageInterface>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> PackageContainer::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> PackageContainer::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> PackageContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> PackageContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> PackageContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationReference> PackageContainer::ComponentImplementationReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PackageContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentPackages> PackageContainer::ComponentPackages_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentPackages>(impl, meta_ComponentPackages_parent); }
	::Udm::ParentAttr< ::PICML::ComponentPackages> PackageContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentPackages>(impl, ::Udm::NULLPARENTROLE); }
	void PackageContainer::Accept(Visitor &v) { v.Visit_PackageContainer(*this); }

	::Uml::Class PackageContainer::meta;
	::Uml::CompositionChildRole PackageContainer::meta_Property_children;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentPackage_child;
	::Uml::CompositionChildRole PackageContainer::meta_PackageInfoProperty_children;
	::Uml::CompositionChildRole PackageContainer::meta_PackageConfigProperty_children;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentRef_child;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentImplementationReference_children;
	::Uml::CompositionChildRole PackageContainer::meta_Implementation_children;
	::Uml::CompositionChildRole PackageContainer::meta_PackageInterface_child;
	::Uml::CompositionParentRole PackageContainer::meta_ComponentPackages_parent;

	PackageConfigProperty::PackageConfigProperty() {}
	PackageConfigProperty::PackageConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigProperty::PackageConfigProperty(const PackageConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigProperty::PackageConfigProperty(PackageConfigProperty &&master) : MgaObject(master) {};

	PackageConfigProperty PackageConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigProperty& PackageConfigProperty::operator=(PackageConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigProperty PackageConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigProperty PackageConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigProperty PackageConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigProperty> PackageConfigProperty::Instances() { return ::Udm::InstantiatedAttr< PackageConfigProperty>(impl); }
	PackageConfigProperty PackageConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigProperty> PackageConfigProperty::Derived() { return ::Udm::DerivedAttr< PackageConfigProperty>(impl); }
	::Udm::ArchetypeAttr< PackageConfigProperty> PackageConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigProperty>(impl); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageConfigProperty::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageConfigProperty::parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackage> PackageConfigProperty::srcPackageConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackage>(impl, meta_srcPackageConfigProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> PackageConfigProperty::dstPackageConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstPackageConfigProperty_end_); }
	void PackageConfigProperty::Accept(Visitor &v) { v.Visit_PackageConfigProperty(*this); }

	::Uml::Class PackageConfigProperty::meta;
	::Uml::CompositionParentRole PackageConfigProperty::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageConfigProperty::meta_srcPackageConfigProperty_end_;
	::Uml::AssociationRole PackageConfigProperty::meta_dstPackageConfigProperty_end_;

	Implementation::Implementation() {}
	Implementation::Implementation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implementation::Implementation(const Implementation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implementation::Implementation(Implementation &&master) : MgaObject(master) {};

	Implementation Implementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implementation& Implementation::operator=(Implementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implementation Implementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implementation Implementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implementation Implementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implementation> Implementation::Instances() { return ::Udm::InstantiatedAttr< Implementation>(impl); }
	Implementation Implementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implementation> Implementation::Derived() { return ::Udm::DerivedAttr< Implementation>(impl); }
	::Udm::ArchetypeAttr< Implementation> Implementation::Archetype() const { return ::Udm::ArchetypeAttr< Implementation>(impl); }
	::Udm::ParentAttr< ::PICML::PackageContainer> Implementation::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> Implementation::parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackage> Implementation::srcImplementation_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackage>(impl, meta_srcImplementation_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentImplementationReference> Implementation::dstImplementation_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentImplementationReference>(impl, meta_dstImplementation_end_); }
	void Implementation::Accept(Visitor &v) { v.Visit_Implementation(*this); }

	::Uml::Class Implementation::meta;
	::Uml::CompositionParentRole Implementation::meta_PackageContainer_parent;
	::Uml::AssociationRole Implementation::meta_srcImplementation_end_;
	::Uml::AssociationRole Implementation::meta_dstImplementation_end_;

	PackageInterface::PackageInterface() {}
	PackageInterface::PackageInterface(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageInterface::PackageInterface(const PackageInterface &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageInterface::PackageInterface(PackageInterface &&master) : MgaObject(master) {};

	PackageInterface PackageInterface::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageInterface& PackageInterface::operator=(PackageInterface &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageInterface PackageInterface::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageInterface PackageInterface::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageInterface PackageInterface::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageInterface> PackageInterface::Instances() { return ::Udm::InstantiatedAttr< PackageInterface>(impl); }
	PackageInterface PackageInterface::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageInterface> PackageInterface::Derived() { return ::Udm::DerivedAttr< PackageInterface>(impl); }
	::Udm::ArchetypeAttr< PackageInterface> PackageInterface::Archetype() const { return ::Udm::ArchetypeAttr< PackageInterface>(impl); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageInterface::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> PackageInterface::parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentPackage> PackageInterface::srcPackageInterface_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPackage>(impl, meta_srcPackageInterface_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentRef> PackageInterface::dstPackageInterface_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentRef>(impl, meta_dstPackageInterface_end_); }
	void PackageInterface::Accept(Visitor &v) { v.Visit_PackageInterface(*this); }

	::Uml::Class PackageInterface::meta;
	::Uml::CompositionParentRole PackageInterface::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageInterface::meta_srcPackageInterface_end_;
	::Uml::AssociationRole PackageInterface::meta_dstPackageInterface_end_;

	ComponentPackages::ComponentPackages() {}
	ComponentPackages::ComponentPackages(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentPackages::ComponentPackages(const ComponentPackages &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentPackages::ComponentPackages(ComponentPackages &&master) : UDM_OBJECT(master) {};

	ComponentPackages ComponentPackages::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackages& ComponentPackages::operator=(ComponentPackages &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackages ComponentPackages::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackages ComponentPackages::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackages ComponentPackages::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackages> ComponentPackages::Instances() { return ::Udm::InstantiatedAttr< ComponentPackages>(impl); }
	ComponentPackages ComponentPackages::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackages> ComponentPackages::Derived() { return ::Udm::DerivedAttr< ComponentPackages>(impl); }
	::Udm::ArchetypeAttr< ComponentPackages> ComponentPackages::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackages>(impl); }
	::Udm::StringAttr ComponentPackages::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::PackageContainer> ComponentPackages::PackageContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_children); }
	::Udm::ChildrenAttr< ::PICML::PackageContainer> ComponentPackages::PackageContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentPackages::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentPackages::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentPackages::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackages::Accept(Visitor &v) { v.Visit_ComponentPackages(*this); }

	::Uml::Class ComponentPackages::meta;
	::Uml::Attribute ComponentPackages::meta_name;
	::Uml::CompositionChildRole ComponentPackages::meta_PackageContainer_children;
	::Uml::CompositionParentRole ComponentPackages::meta_RootFolder_parent;

	ComplexProperty::ComplexProperty() {}
	ComplexProperty::ComplexProperty(::Udm::ObjectImpl *impl) : Property(impl) {}
	ComplexProperty::ComplexProperty(const ComplexProperty &master) : Property(master) {}

#ifdef UDM_RVALUE
	ComplexProperty::ComplexProperty(ComplexProperty &&master) : Property(master) {};

	ComplexProperty ComplexProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComplexProperty& ComplexProperty::operator=(ComplexProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComplexProperty ComplexProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComplexProperty ComplexProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComplexProperty ComplexProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComplexProperty> ComplexProperty::Instances() { return ::Udm::InstantiatedAttr< ComplexProperty>(impl); }
	ComplexProperty ComplexProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComplexProperty> ComplexProperty::Derived() { return ::Udm::DerivedAttr< ComplexProperty>(impl); }
	::Udm::ArchetypeAttr< ComplexProperty> ComplexProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComplexProperty>(impl); }
	::Udm::ChildrenAttr< ::PICML::DataValueBase> ComplexProperty::DataValueBase_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueBase>(impl, meta_DataValueBase_children); }
	::Udm::ChildAttr< ::PICML::ComplexTypeReference> ComplexProperty::ComplexTypeReference_child() const { return ::Udm::ChildAttr< ::PICML::ComplexTypeReference>(impl, meta_ComplexTypeReference_child); }
	::Udm::ChildrenAttr< ::PICML::DataValueBase> ComplexProperty::DataValueBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataValue> ComplexProperty::DataValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataValueContainer> ComplexProperty::DataValueContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexTypeReference> ComplexProperty::ComplexTypeReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexTypeReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComplexProperty::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComplexProperty::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComplexProperty::Accept(Visitor &v) { v.Visit_ComplexProperty(*this); }

	::Uml::Class ComplexProperty::meta;
	::Uml::CompositionChildRole ComplexProperty::meta_DataValueBase_children;
	::Uml::CompositionChildRole ComplexProperty::meta_ComplexTypeReference_child;

	SimpleProperty::SimpleProperty() {}
	SimpleProperty::SimpleProperty(::Udm::ObjectImpl *impl) : Property(impl) {}
	SimpleProperty::SimpleProperty(const SimpleProperty &master) : Property(master) {}

#ifdef UDM_RVALUE
	SimpleProperty::SimpleProperty(SimpleProperty &&master) : Property(master) {};

	SimpleProperty SimpleProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SimpleProperty& SimpleProperty::operator=(SimpleProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SimpleProperty SimpleProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SimpleProperty SimpleProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SimpleProperty SimpleProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SimpleProperty> SimpleProperty::Instances() { return ::Udm::InstantiatedAttr< SimpleProperty>(impl); }
	SimpleProperty SimpleProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SimpleProperty> SimpleProperty::Derived() { return ::Udm::DerivedAttr< SimpleProperty>(impl); }
	::Udm::ArchetypeAttr< SimpleProperty> SimpleProperty::Archetype() const { return ::Udm::ArchetypeAttr< SimpleProperty>(impl); }
	::Udm::StringAttr SimpleProperty::Value() const { return ::Udm::StringAttr(impl, meta_Value); }
	::Udm::PointerAttr< MemberType> SimpleProperty::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> SimpleProperty::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void SimpleProperty::Accept(Visitor &v) { v.Visit_SimpleProperty(*this); }

	::Uml::Class SimpleProperty::meta;
	::Uml::Attribute SimpleProperty::meta_Value;
	::Uml::AssociationRole SimpleProperty::meta_ref;

	Property::Property() {}
	Property::Property(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Property::Property(const Property &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Property::Property(Property &&master) : MgaObject(master) {};

	Property Property::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Property& Property::operator=(Property &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Property Property::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Property Property::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Property Property::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Property> Property::Instances() { return ::Udm::InstantiatedAttr< Property>(impl); }
	Property Property::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Property> Property::Derived() { return ::Udm::DerivedAttr< Property>(impl); }
	::Udm::ArchetypeAttr< Property> Property::Archetype() const { return ::Udm::ArchetypeAttr< Property>(impl); }
	::Udm::AClassAssocAttr< MonolithExecParameter, MonolithicImplementationBase> Property::srcMonolithExecParameter() const { return ::Udm::AClassAssocAttr< MonolithExecParameter, MonolithicImplementationBase>(impl, meta_srcMonolithExecParameter, meta_srcMonolithExecParameter_rev); }
	::Udm::AClassAssocAttr< InfoProperty, Implemenation> Property::srcInfoProperty() const { return ::Udm::AClassAssocAttr< InfoProperty, Implemenation>(impl, meta_srcInfoProperty, meta_srcInfoProperty_rev); }
	::Udm::AClassAssocAttr< ConfigProperty, Implemenation> Property::srcConfigProperty() const { return ::Udm::AClassAssocAttr< ConfigProperty, Implemenation>(impl, meta_srcConfigProperty, meta_srcConfigProperty_rev); }
	::Udm::AClassAssocAttr< PathProperty, Path> Property::srcPathProperty() const { return ::Udm::AClassAssocAttr< PathProperty, Path>(impl, meta_srcPathProperty, meta_srcPathProperty_rev); }
	::Udm::AClassAssocAttr< PropertyMapping, NodeReference> Property::srcPropertyMapping() const { return ::Udm::AClassAssocAttr< PropertyMapping, NodeReference>(impl, meta_srcPropertyMapping, meta_srcPropertyMapping_rev); }
	::Udm::AClassAssocAttr< PackageConfConfigProperty, PackageConfiguration> Property::srcPackageConfConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfConfigProperty, PackageConfiguration>(impl, meta_srcPackageConfConfigProperty, meta_srcPackageConfConfigProperty_rev); }
	::Udm::AClassAssocAttr< ArtifactInfoProperty, ImplementationArtifact> Property::srcArtifactInfoProperty() const { return ::Udm::AClassAssocAttr< ArtifactInfoProperty, ImplementationArtifact>(impl, meta_srcArtifactInfoProperty, meta_srcArtifactInfoProperty_rev); }
	::Udm::AClassAssocAttr< ArtifactExecParameter, ImplementationArtifact> Property::srcArtifactExecParameter() const { return ::Udm::AClassAssocAttr< ArtifactExecParameter, ImplementationArtifact>(impl, meta_srcArtifactExecParameter, meta_srcArtifactExecParameter_rev); }
	::Udm::AClassAssocAttr< PackageInfoProperty, ComponentPackage> Property::srcPackageInfoProperty() const { return ::Udm::AClassAssocAttr< PackageInfoProperty, ComponentPackage>(impl, meta_srcPackageInfoProperty, meta_srcPackageInfoProperty_rev); }
	::Udm::AClassAssocAttr< PackageConfigProperty, ComponentPackage> Property::srcPackageConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfigProperty, ComponentPackage>(impl, meta_srcPackageConfigProperty, meta_srcPackageConfigProperty_rev); }
	::Udm::AClassAssocAttr< EdgeProperty, Edge> Property::dstPropertyConnector() const { return ::Udm::AClassAssocAttr< EdgeProperty, Edge>(impl, meta_dstPropertyConnector, meta_dstPropertyConnector_rev); }
	::Udm::AClassAssocAttr< CollocationGroupProperty, CollocationGroup> Property::dstCollocationGroupProperty() const { return ::Udm::AClassAssocAttr< CollocationGroupProperty, CollocationGroup>(impl, meta_dstCollocationGroupProperty, meta_dstCollocationGroupProperty_rev); }
	::Udm::AClassAssocAttr< AssemblyConfigProperty, AssemblyConfigPropertyEnd> Property::srcAssemblyConfigProperty() const { return ::Udm::AClassAssocAttr< AssemblyConfigProperty, AssemblyConfigPropertyEnd>(impl, meta_srcAssemblyConfigProperty, meta_srcAssemblyConfigProperty_rev); }
	::Udm::AClassPointerAttr< AttributeMappingValue, AttributeMapping> Property::srcAttributeMappingValue() const { return ::Udm::AClassPointerAttr< AttributeMappingValue, AttributeMapping>(impl, meta_srcAttributeMappingValue, meta_srcAttributeMappingValue_rev); }
	::Udm::AClassAssocAttr< AttributeValue, AttributeInstance> Property::srcAttributeValue() const { return ::Udm::AClassAssocAttr< AttributeValue, AttributeInstance>(impl, meta_srcAttributeValue, meta_srcAttributeValue_rev); }
	::Udm::AClassAssocAttr< ComponentInfoProperty, ComponentRef> Property::srcComponentInfoProperty() const { return ::Udm::AClassAssocAttr< ComponentInfoProperty, ComponentRef>(impl, meta_srcComponentInfoProperty, meta_srcComponentInfoProperty_rev); }
	::Udm::AClassAssocAttr< ComponentConfigProperty, ComponentRef> Property::srcComponentConfigProperty() const { return ::Udm::AClassAssocAttr< ComponentConfigProperty, ComponentRef>(impl, meta_srcComponentConfigProperty, meta_srcComponentConfigProperty_rev); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> Property::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::Paths> Property::Paths_parent() const { return ::Udm::ParentAttr< ::PICML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::PICML::Path> Property::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::DeploymentPlan> Property::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::PICML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> Property::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> Property::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> Property::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::RequirementBase> Property::RequirementBase_parent() const { return ::Udm::ParentAttr< ::PICML::RequirementBase>(impl, meta_RequirementBase_parent); }
	::Udm::ParentAttr< ::PICML::Domain> Property::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Property::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> Property::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::QueryInputAction> Property::QueryInputAction_parent() const { return ::Udm::ParentAttr< ::PICML::QueryInputAction>(impl, meta_QueryInputAction_parent); }
	::Udm::ParentAttr< ::PICML::ActionBase> Property::ActionBase_parent() const { return ::Udm::ParentAttr< ::PICML::ActionBase>(impl, meta_ActionBase_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorInputAction> Property::BehaviorInputAction_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorInputAction>(impl, meta_BehaviorInputAction_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Property::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Property::meta;
	::Uml::AssociationRole Property::meta_srcMonolithExecParameter;
	::Uml::AssociationRole Property::meta_srcMonolithExecParameter_rev;
	::Uml::AssociationRole Property::meta_srcInfoProperty;
	::Uml::AssociationRole Property::meta_srcInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcConfigProperty;
	::Uml::AssociationRole Property::meta_srcConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcPathProperty;
	::Uml::AssociationRole Property::meta_srcPathProperty_rev;
	::Uml::AssociationRole Property::meta_srcPropertyMapping;
	::Uml::AssociationRole Property::meta_srcPropertyMapping_rev;
	::Uml::AssociationRole Property::meta_srcPackageConfConfigProperty;
	::Uml::AssociationRole Property::meta_srcPackageConfConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcArtifactInfoProperty;
	::Uml::AssociationRole Property::meta_srcArtifactInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcArtifactExecParameter;
	::Uml::AssociationRole Property::meta_srcArtifactExecParameter_rev;
	::Uml::AssociationRole Property::meta_srcPackageInfoProperty;
	::Uml::AssociationRole Property::meta_srcPackageInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcPackageConfigProperty;
	::Uml::AssociationRole Property::meta_srcPackageConfigProperty_rev;
	::Uml::AssociationRole Property::meta_dstPropertyConnector;
	::Uml::AssociationRole Property::meta_dstPropertyConnector_rev;
	::Uml::AssociationRole Property::meta_dstCollocationGroupProperty;
	::Uml::AssociationRole Property::meta_dstCollocationGroupProperty_rev;
	::Uml::AssociationRole Property::meta_srcAssemblyConfigProperty;
	::Uml::AssociationRole Property::meta_srcAssemblyConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcAttributeMappingValue;
	::Uml::AssociationRole Property::meta_srcAttributeMappingValue_rev;
	::Uml::AssociationRole Property::meta_srcAttributeValue;
	::Uml::AssociationRole Property::meta_srcAttributeValue_rev;
	::Uml::AssociationRole Property::meta_srcComponentInfoProperty;
	::Uml::AssociationRole Property::meta_srcComponentInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcComponentConfigProperty;
	::Uml::AssociationRole Property::meta_srcComponentConfigProperty_rev;
	::Uml::CompositionParentRole Property::meta_ImplementationContainer_parent;
	::Uml::CompositionParentRole Property::meta_Paths_parent;
	::Uml::CompositionParentRole Property::meta_Path_parent;
	::Uml::CompositionParentRole Property::meta_DeploymentPlan_parent;
	::Uml::CompositionParentRole Property::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole Property::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole Property::meta_PackageContainer_parent;
	::Uml::CompositionParentRole Property::meta_RequirementBase_parent;
	::Uml::CompositionParentRole Property::meta_Domain_parent;
	::Uml::CompositionParentRole Property::meta_ComponentAssembly_parent;
	::Uml::CompositionParentRole Property::meta_ComponentContainer_parent;
	::Uml::CompositionParentRole Property::meta_QueryInputAction_parent;
	::Uml::CompositionParentRole Property::meta_ActionBase_parent;
	::Uml::CompositionParentRole Property::meta_BehaviorInputAction_parent;

	DataValueBase::DataValueBase() {}
	DataValueBase::DataValueBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DataValueBase::DataValueBase(const DataValueBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DataValueBase::DataValueBase(DataValueBase &&master) : MgaObject(master) {};

	DataValueBase DataValueBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataValueBase& DataValueBase::operator=(DataValueBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataValueBase DataValueBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataValueBase DataValueBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataValueBase DataValueBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataValueBase> DataValueBase::Instances() { return ::Udm::InstantiatedAttr< DataValueBase>(impl); }
	DataValueBase DataValueBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataValueBase> DataValueBase::Derived() { return ::Udm::DerivedAttr< DataValueBase>(impl); }
	::Udm::ArchetypeAttr< DataValueBase> DataValueBase::Archetype() const { return ::Udm::ArchetypeAttr< DataValueBase>(impl); }
	::Udm::ParentAttr< ::PICML::ComplexProperty> DataValueBase::ComplexProperty_parent() const { return ::Udm::ParentAttr< ::PICML::ComplexProperty>(impl, meta_ComplexProperty_parent); }
	::Udm::ParentAttr< ::PICML::DataValueContainer> DataValueBase::DataValueContainer_parent() const { return ::Udm::ParentAttr< ::PICML::DataValueContainer>(impl, meta_DataValueContainer_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> DataValueBase::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class DataValueBase::meta;
	::Uml::CompositionParentRole DataValueBase::meta_ComplexProperty_parent;
	::Uml::CompositionParentRole DataValueBase::meta_DataValueContainer_parent;

	SimpleType::SimpleType() {}
	SimpleType::SimpleType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SimpleType::SimpleType(const SimpleType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SimpleType::SimpleType(SimpleType &&master) : MgaObject(master) {};

	SimpleType SimpleType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SimpleType& SimpleType::operator=(SimpleType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SimpleType SimpleType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SimpleType SimpleType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SimpleType SimpleType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SimpleType> SimpleType::Instances() { return ::Udm::InstantiatedAttr< SimpleType>(impl); }
	SimpleType SimpleType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SimpleType> SimpleType::Derived() { return ::Udm::DerivedAttr< SimpleType>(impl); }
	::Udm::ArchetypeAttr< SimpleType> SimpleType::Archetype() const { return ::Udm::ArchetypeAttr< SimpleType>(impl); }
	::Udm::AssocAttr< DataValue> SimpleType::referedbyDataValue() const { return ::Udm::AssocAttr< DataValue>(impl, meta_referedbyDataValue); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> SimpleType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SimpleType::meta;
	::Uml::AssociationRole SimpleType::meta_referedbyDataValue;

	ComplexType::ComplexType() {}
	ComplexType::ComplexType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComplexType::ComplexType(const ComplexType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComplexType::ComplexType(ComplexType &&master) : MgaObject(master) {};

	ComplexType ComplexType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComplexType& ComplexType::operator=(ComplexType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComplexType ComplexType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComplexType ComplexType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComplexType ComplexType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComplexType> ComplexType::Instances() { return ::Udm::InstantiatedAttr< ComplexType>(impl); }
	ComplexType ComplexType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComplexType> ComplexType::Derived() { return ::Udm::DerivedAttr< ComplexType>(impl); }
	::Udm::ArchetypeAttr< ComplexType> ComplexType::Archetype() const { return ::Udm::ArchetypeAttr< ComplexType>(impl); }
	::Udm::AssocAttr< ComplexTypeReference> ComplexType::referedbyComplexTypeReference() const { return ::Udm::AssocAttr< ComplexTypeReference>(impl, meta_referedbyComplexTypeReference); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ComplexType::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComplexType::meta;
	::Uml::AssociationRole ComplexType::meta_referedbyComplexTypeReference;

	DataValue::DataValue() {}
	DataValue::DataValue(::Udm::ObjectImpl *impl) : DataValueBase(impl) {}
	DataValue::DataValue(const DataValue &master) : DataValueBase(master) {}

#ifdef UDM_RVALUE
	DataValue::DataValue(DataValue &&master) : DataValueBase(master) {};

	DataValue DataValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataValue& DataValue::operator=(DataValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataValue DataValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataValue DataValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataValue DataValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataValue> DataValue::Instances() { return ::Udm::InstantiatedAttr< DataValue>(impl); }
	DataValue DataValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataValue> DataValue::Derived() { return ::Udm::DerivedAttr< DataValue>(impl); }
	::Udm::ArchetypeAttr< DataValue> DataValue::Archetype() const { return ::Udm::ArchetypeAttr< DataValue>(impl); }
	::Udm::StringAttr DataValue::Value() const { return ::Udm::StringAttr(impl, meta_Value); }
	::Udm::PointerAttr< SimpleType> DataValue::ref() const { return ::Udm::PointerAttr< SimpleType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> DataValue::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void DataValue::Accept(Visitor &v) { v.Visit_DataValue(*this); }

	::Uml::Class DataValue::meta;
	::Uml::Attribute DataValue::meta_Value;
	::Uml::AssociationRole DataValue::meta_ref;

	DataValueContainer::DataValueContainer() {}
	DataValueContainer::DataValueContainer(::Udm::ObjectImpl *impl) : DataValueBase(impl) {}
	DataValueContainer::DataValueContainer(const DataValueContainer &master) : DataValueBase(master) {}

#ifdef UDM_RVALUE
	DataValueContainer::DataValueContainer(DataValueContainer &&master) : DataValueBase(master) {};

	DataValueContainer DataValueContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataValueContainer& DataValueContainer::operator=(DataValueContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataValueContainer DataValueContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataValueContainer DataValueContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataValueContainer DataValueContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataValueContainer> DataValueContainer::Instances() { return ::Udm::InstantiatedAttr< DataValueContainer>(impl); }
	DataValueContainer DataValueContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataValueContainer> DataValueContainer::Derived() { return ::Udm::DerivedAttr< DataValueContainer>(impl); }
	::Udm::ArchetypeAttr< DataValueContainer> DataValueContainer::Archetype() const { return ::Udm::ArchetypeAttr< DataValueContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::DataValueBase> DataValueContainer::DataValueBase_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueBase>(impl, meta_DataValueBase_children); }
	::Udm::ChildAttr< ::PICML::ComplexTypeReference> DataValueContainer::ComplexTypeReference_child() const { return ::Udm::ChildAttr< ::PICML::ComplexTypeReference>(impl, meta_ComplexTypeReference_child); }
	::Udm::ChildrenAttr< ::PICML::DataValueBase> DataValueContainer::DataValueBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataValue> DataValueContainer::DataValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DataValueContainer> DataValueContainer::DataValueContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataValueContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexTypeReference> DataValueContainer::ComplexTypeReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexTypeReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> DataValueContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> DataValueContainer::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void DataValueContainer::Accept(Visitor &v) { v.Visit_DataValueContainer(*this); }

	::Uml::Class DataValueContainer::meta;
	::Uml::CompositionChildRole DataValueContainer::meta_DataValueBase_children;
	::Uml::CompositionChildRole DataValueContainer::meta_ComplexTypeReference_child;

	ComplexTypeReference::ComplexTypeReference() {}
	ComplexTypeReference::ComplexTypeReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComplexTypeReference::ComplexTypeReference(const ComplexTypeReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComplexTypeReference::ComplexTypeReference(ComplexTypeReference &&master) : MgaObject(master) {};

	ComplexTypeReference ComplexTypeReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComplexTypeReference& ComplexTypeReference::operator=(ComplexTypeReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComplexTypeReference ComplexTypeReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComplexTypeReference ComplexTypeReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComplexTypeReference ComplexTypeReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComplexTypeReference> ComplexTypeReference::Instances() { return ::Udm::InstantiatedAttr< ComplexTypeReference>(impl); }
	ComplexTypeReference ComplexTypeReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComplexTypeReference> ComplexTypeReference::Derived() { return ::Udm::DerivedAttr< ComplexTypeReference>(impl); }
	::Udm::ArchetypeAttr< ComplexTypeReference> ComplexTypeReference::Archetype() const { return ::Udm::ArchetypeAttr< ComplexTypeReference>(impl); }
	::Udm::PointerAttr< ComplexType> ComplexTypeReference::ref() const { return ::Udm::PointerAttr< ComplexType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComplexProperty> ComplexTypeReference::ComplexProperty_parent() const { return ::Udm::ParentAttr< ::PICML::ComplexProperty>(impl, meta_ComplexProperty_parent); }
	::Udm::ParentAttr< ::PICML::DataValueContainer> ComplexTypeReference::DataValueContainer_parent() const { return ::Udm::ParentAttr< ::PICML::DataValueContainer>(impl, meta_DataValueContainer_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComplexTypeReference::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComplexTypeReference::Accept(Visitor &v) { v.Visit_ComplexTypeReference(*this); }

	::Uml::Class ComplexTypeReference::meta;
	::Uml::AssociationRole ComplexTypeReference::meta_ref;
	::Uml::CompositionParentRole ComplexTypeReference::meta_ComplexProperty_parent;
	::Uml::CompositionParentRole ComplexTypeReference::meta_DataValueContainer_parent;

	DataType::DataType() {}
	DataType::DataType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DataType::DataType(const DataType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DataType::DataType(DataType &&master) : MgaObject(master) {};

	DataType DataType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataType& DataType::operator=(DataType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataType DataType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataType DataType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataType DataType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataType> DataType::Instances() { return ::Udm::InstantiatedAttr< DataType>(impl); }
	DataType DataType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataType> DataType::Derived() { return ::Udm::DerivedAttr< DataType>(impl); }
	::Udm::ArchetypeAttr< DataType> DataType::Archetype() const { return ::Udm::ArchetypeAttr< DataType>(impl); }
	::Udm::PointerAttr< MemberType> DataType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::SatisfierProperty> DataType::SatisfierProperty_parent() const { return ::Udm::ParentAttr< ::PICML::SatisfierProperty>(impl, meta_SatisfierProperty_parent); }
	::Udm::ParentAttr< ::PICML::ComponentPropertyDescription> DataType::ComponentPropertyDescription_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentPropertyDescription>(impl, meta_ComponentPropertyDescription_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> DataType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void DataType::Accept(Visitor &v) { v.Visit_DataType(*this); }

	::Uml::Class DataType::meta;
	::Uml::AssociationRole DataType::meta_ref;
	::Uml::CompositionParentRole DataType::meta_SatisfierProperty_parent;
	::Uml::CompositionParentRole DataType::meta_ComponentPropertyDescription_parent;

	ImplementationRequirement::ImplementationRequirement() {}
	ImplementationRequirement::ImplementationRequirement(::Udm::ObjectImpl *impl) : RequirementBase(impl) {}
	ImplementationRequirement::ImplementationRequirement(const ImplementationRequirement &master) : RequirementBase(master) {}

#ifdef UDM_RVALUE
	ImplementationRequirement::ImplementationRequirement(ImplementationRequirement &&master) : RequirementBase(master) {};

	ImplementationRequirement ImplementationRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationRequirement& ImplementationRequirement::operator=(ImplementationRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationRequirement ImplementationRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationRequirement ImplementationRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationRequirement ImplementationRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationRequirement> ImplementationRequirement::Instances() { return ::Udm::InstantiatedAttr< ImplementationRequirement>(impl); }
	ImplementationRequirement ImplementationRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationRequirement> ImplementationRequirement::Derived() { return ::Udm::DerivedAttr< ImplementationRequirement>(impl); }
	::Udm::ArchetypeAttr< ImplementationRequirement> ImplementationRequirement::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationRequirement>(impl); }
	::Udm::StringAttr ImplementationRequirement::componentPort() const { return ::Udm::StringAttr(impl, meta_componentPort); }
	::Udm::StringAttr ImplementationRequirement::ResourceUsageKind() const { return ::Udm::StringAttr(impl, meta_ResourceUsageKind); }
	::Udm::StringAttr ImplementationRequirement::resourcePort() const { return ::Udm::StringAttr(impl, meta_resourcePort); }
	::Udm::AClassAssocAttr< MonolithDeployRequirement, MonolithicImplementationBase> ImplementationRequirement::srcMonolithDeployRequirement() const { return ::Udm::AClassAssocAttr< MonolithDeployRequirement, MonolithicImplementationBase>(impl, meta_srcMonolithDeployRequirement, meta_srcMonolithDeployRequirement_rev); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> ImplementationRequirement::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ImplementationContainer> ImplementationRequirement::parent() const { return ::Udm::ParentAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationRequirement::Accept(Visitor &v) { v.Visit_ImplementationRequirement(*this); }

	::Uml::Class ImplementationRequirement::meta;
	::Uml::Attribute ImplementationRequirement::meta_componentPort;
	::Uml::Attribute ImplementationRequirement::meta_ResourceUsageKind;
	::Uml::Attribute ImplementationRequirement::meta_resourcePort;
	::Uml::AssociationRole ImplementationRequirement::meta_srcMonolithDeployRequirement;
	::Uml::AssociationRole ImplementationRequirement::meta_srcMonolithDeployRequirement_rev;
	::Uml::CompositionParentRole ImplementationRequirement::meta_ImplementationContainer_parent;

	RequirementBase::RequirementBase() {}
	RequirementBase::RequirementBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RequirementBase::RequirementBase(const RequirementBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RequirementBase::RequirementBase(RequirementBase &&master) : MgaObject(master) {};

	RequirementBase RequirementBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequirementBase& RequirementBase::operator=(RequirementBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequirementBase RequirementBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequirementBase RequirementBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequirementBase RequirementBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequirementBase> RequirementBase::Instances() { return ::Udm::InstantiatedAttr< RequirementBase>(impl); }
	RequirementBase RequirementBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequirementBase> RequirementBase::Derived() { return ::Udm::DerivedAttr< RequirementBase>(impl); }
	::Udm::ArchetypeAttr< RequirementBase> RequirementBase::Archetype() const { return ::Udm::ArchetypeAttr< RequirementBase>(impl); }
	::Udm::StringAttr RequirementBase::resourceType() const { return ::Udm::StringAttr(impl, meta_resourceType); }
	::Udm::ChildrenAttr< ::PICML::Property> RequirementBase::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> RequirementBase::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> RequirementBase::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> RequirementBase::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> RequirementBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> RequirementBase::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RequirementBase::meta;
	::Uml::Attribute RequirementBase::meta_resourceType;
	::Uml::CompositionChildRole RequirementBase::meta_Property_children;

	Capability::Capability() {}
	Capability::Capability(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	Capability::Capability(const Capability &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	Capability::Capability(Capability &&master) : RequirementSatisfier(master) {};

	Capability Capability::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Capability& Capability::operator=(Capability &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Capability Capability::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Capability Capability::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Capability Capability::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Capability> Capability::Instances() { return ::Udm::InstantiatedAttr< Capability>(impl); }
	Capability Capability::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Capability> Capability::Derived() { return ::Udm::DerivedAttr< Capability>(impl); }
	::Udm::ArchetypeAttr< Capability> Capability::Archetype() const { return ::Udm::ArchetypeAttr< Capability>(impl); }
	::Udm::AClassAssocAttr< ImplementationCapability, ComponentImplementation> Capability::srcImplementationCapability() const { return ::Udm::AClassAssocAttr< ImplementationCapability, ComponentImplementation>(impl, meta_srcImplementationCapability, meta_srcImplementationCapability_rev); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> Capability::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> Capability::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void Capability::Accept(Visitor &v) { v.Visit_Capability(*this); }

	::Uml::Class Capability::meta;
	::Uml::AssociationRole Capability::meta_srcImplementationCapability;
	::Uml::AssociationRole Capability::meta_srcImplementationCapability_rev;
	::Uml::CompositionParentRole Capability::meta_ComponentImplementationContainer_parent;

	RequirementSatisfier::RequirementSatisfier() {}
	RequirementSatisfier::RequirementSatisfier(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RequirementSatisfier::RequirementSatisfier(const RequirementSatisfier &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RequirementSatisfier::RequirementSatisfier(RequirementSatisfier &&master) : MgaObject(master) {};

	RequirementSatisfier RequirementSatisfier::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequirementSatisfier& RequirementSatisfier::operator=(RequirementSatisfier &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequirementSatisfier RequirementSatisfier::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequirementSatisfier RequirementSatisfier::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequirementSatisfier RequirementSatisfier::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequirementSatisfier> RequirementSatisfier::Instances() { return ::Udm::InstantiatedAttr< RequirementSatisfier>(impl); }
	RequirementSatisfier RequirementSatisfier::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequirementSatisfier> RequirementSatisfier::Derived() { return ::Udm::DerivedAttr< RequirementSatisfier>(impl); }
	::Udm::ArchetypeAttr< RequirementSatisfier> RequirementSatisfier::Archetype() const { return ::Udm::ArchetypeAttr< RequirementSatisfier>(impl); }
	::Udm::StringAttr RequirementSatisfier::resourceType() const { return ::Udm::StringAttr(impl, meta_resourceType); }
	::Udm::ChildrenAttr< ::PICML::SatisfierProperty> RequirementSatisfier::SatisfierProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::SatisfierProperty>(impl, meta_SatisfierProperty_children); }
	::Udm::ChildrenAttr< ::PICML::SatisfierProperty> RequirementSatisfier::SatisfierProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SatisfierProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> RequirementSatisfier::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> RequirementSatisfier::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RequirementSatisfier::meta;
	::Uml::Attribute RequirementSatisfier::meta_resourceType;
	::Uml::CompositionChildRole RequirementSatisfier::meta_SatisfierProperty_children;

	SatisfierProperty::SatisfierProperty() {}
	SatisfierProperty::SatisfierProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SatisfierProperty::SatisfierProperty(const SatisfierProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SatisfierProperty::SatisfierProperty(SatisfierProperty &&master) : MgaObject(master) {};

	SatisfierProperty SatisfierProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SatisfierProperty& SatisfierProperty::operator=(SatisfierProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SatisfierProperty SatisfierProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SatisfierProperty SatisfierProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SatisfierProperty SatisfierProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SatisfierProperty> SatisfierProperty::Instances() { return ::Udm::InstantiatedAttr< SatisfierProperty>(impl); }
	SatisfierProperty SatisfierProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SatisfierProperty> SatisfierProperty::Derived() { return ::Udm::DerivedAttr< SatisfierProperty>(impl); }
	::Udm::ArchetypeAttr< SatisfierProperty> SatisfierProperty::Archetype() const { return ::Udm::ArchetypeAttr< SatisfierProperty>(impl); }
	::Udm::StringAttr SatisfierProperty::SatisfierPropertyKind() const { return ::Udm::StringAttr(impl, meta_SatisfierPropertyKind); }
	::Udm::StringAttr SatisfierProperty::DataValue() const { return ::Udm::StringAttr(impl, meta_DataValue); }
	::Udm::BooleanAttr SatisfierProperty::dynamic() const { return ::Udm::BooleanAttr(impl, meta_dynamic); }
	::Udm::ChildAttr< ::PICML::DataType> SatisfierProperty::DataType_child() const { return ::Udm::ChildAttr< ::PICML::DataType>(impl, meta_DataType_child); }
	::Udm::ChildrenAttr< ::PICML::DataType> SatisfierProperty::DataType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> SatisfierProperty::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RequirementSatisfier> SatisfierProperty::RequirementSatisfier_parent() const { return ::Udm::ParentAttr< ::PICML::RequirementSatisfier>(impl, meta_RequirementSatisfier_parent); }
	::Udm::ParentAttr< ::PICML::RequirementSatisfier> SatisfierProperty::parent() const { return ::Udm::ParentAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLPARENTROLE); }
	void SatisfierProperty::Accept(Visitor &v) { v.Visit_SatisfierProperty(*this); }

	::Uml::Class SatisfierProperty::meta;
	::Uml::Attribute SatisfierProperty::meta_SatisfierPropertyKind;
	::Uml::Attribute SatisfierProperty::meta_DataValue;
	::Uml::Attribute SatisfierProperty::meta_dynamic;
	::Uml::CompositionChildRole SatisfierProperty::meta_DataType_child;
	::Uml::CompositionParentRole SatisfierProperty::meta_RequirementSatisfier_parent;

	ImplementationDependency::ImplementationDependency() {}
	ImplementationDependency::ImplementationDependency(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationDependency::ImplementationDependency(const ImplementationDependency &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationDependency::ImplementationDependency(ImplementationDependency &&master) : MgaObject(master) {};

	ImplementationDependency ImplementationDependency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationDependency& ImplementationDependency::operator=(ImplementationDependency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationDependency ImplementationDependency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationDependency ImplementationDependency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationDependency ImplementationDependency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationDependency> ImplementationDependency::Instances() { return ::Udm::InstantiatedAttr< ImplementationDependency>(impl); }
	ImplementationDependency ImplementationDependency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationDependency> ImplementationDependency::Derived() { return ::Udm::DerivedAttr< ImplementationDependency>(impl); }
	::Udm::ArchetypeAttr< ImplementationDependency> ImplementationDependency::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationDependency>(impl); }
	::Udm::StringAttr ImplementationDependency::requiredType() const { return ::Udm::StringAttr(impl, meta_requiredType); }
	::Udm::AClassAssocAttr< ImplementationDependsOn, ComponentImplementation> ImplementationDependency::srcImplementationDependsOn() const { return ::Udm::AClassAssocAttr< ImplementationDependsOn, ComponentImplementation>(impl, meta_srcImplementationDependsOn, meta_srcImplementationDependsOn_rev); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationDependency::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationDependency::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationDependency::Accept(Visitor &v) { v.Visit_ImplementationDependency(*this); }

	::Uml::Class ImplementationDependency::meta;
	::Uml::Attribute ImplementationDependency::meta_requiredType;
	::Uml::AssociationRole ImplementationDependency::meta_srcImplementationDependsOn;
	::Uml::AssociationRole ImplementationDependency::meta_srcImplementationDependsOn_rev;
	::Uml::CompositionParentRole ImplementationDependency::meta_ComponentImplementationContainer_parent;

	Requirement::Requirement() {}
	Requirement::Requirement(::Udm::ObjectImpl *impl) : RequirementBase(impl) {}
	Requirement::Requirement(const Requirement &master) : RequirementBase(master) {}

#ifdef UDM_RVALUE
	Requirement::Requirement(Requirement &&master) : RequirementBase(master) {};

	Requirement Requirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Requirement& Requirement::operator=(Requirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Requirement Requirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Requirement Requirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Requirement Requirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Requirement> Requirement::Instances() { return ::Udm::InstantiatedAttr< Requirement>(impl); }
	Requirement Requirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Requirement> Requirement::Derived() { return ::Udm::DerivedAttr< Requirement>(impl); }
	::Udm::ArchetypeAttr< Requirement> Requirement::Archetype() const { return ::Udm::ArchetypeAttr< Requirement>(impl); }
	::Udm::AClassAssocAttr< PackageConfSelectRequirement, PackageConfiguration> Requirement::srcPackageConfSelectRequirement() const { return ::Udm::AClassAssocAttr< PackageConfSelectRequirement, PackageConfiguration>(impl, meta_srcPackageConfSelectRequirement, meta_srcPackageConfSelectRequirement_rev); }
	::Udm::AClassAssocAttr< ArtifactDeployRequirement, ImplementationArtifact> Requirement::srcArtifactDeployRequirement() const { return ::Udm::AClassAssocAttr< ArtifactDeployRequirement, ImplementationArtifact>(impl, meta_srcArtifactDeployRequirement, meta_srcArtifactDeployRequirement_rev); }
	::Udm::AClassAssocAttr< AssemblyselectRequirement, AssemblyConfigPropertyEnd> Requirement::srcAssemblyselectRequirement() const { return ::Udm::AClassAssocAttr< AssemblyselectRequirement, AssemblyConfigPropertyEnd>(impl, meta_srcAssemblyselectRequirement, meta_srcAssemblyselectRequirement_rev); }
	::Udm::ParentAttr< ::PICML::PackageConfigurationContainer> Requirement::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ArtifactContainer> Requirement::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Requirement::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Requirement::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Requirement::Accept(Visitor &v) { v.Visit_Requirement(*this); }

	::Uml::Class Requirement::meta;
	::Uml::AssociationRole Requirement::meta_srcPackageConfSelectRequirement;
	::Uml::AssociationRole Requirement::meta_srcPackageConfSelectRequirement_rev;
	::Uml::AssociationRole Requirement::meta_srcArtifactDeployRequirement;
	::Uml::AssociationRole Requirement::meta_srcArtifactDeployRequirement_rev;
	::Uml::AssociationRole Requirement::meta_srcAssemblyselectRequirement;
	::Uml::AssociationRole Requirement::meta_srcAssemblyselectRequirement_rev;
	::Uml::CompositionParentRole Requirement::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole Requirement::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole Requirement::meta_ComponentAssembly_parent;

	Shares::Shares() {}
	Shares::Shares(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Shares::Shares(const Shares &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Shares::Shares(Shares &&master) : MgaObject(master) {};

	Shares Shares::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Shares& Shares::operator=(Shares &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Shares Shares::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Shares Shares::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Shares Shares::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Shares> Shares::Instances() { return ::Udm::InstantiatedAttr< Shares>(impl); }
	Shares Shares::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Shares> Shares::Derived() { return ::Udm::DerivedAttr< Shares>(impl); }
	::Udm::ArchetypeAttr< Shares> Shares::Archetype() const { return ::Udm::ArchetypeAttr< Shares>(impl); }
	::Udm::ParentAttr< ::PICML::Domain> Shares::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> Shares::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Node> Shares::srcShares_end() const { return ::Udm::AssocEndAttr< ::PICML::Node>(impl, meta_srcShares_end_); }
	::Udm::AssocEndAttr< ::PICML::SharedResource> Shares::dstShares_end() const { return ::Udm::AssocEndAttr< ::PICML::SharedResource>(impl, meta_dstShares_end_); }
	void Shares::Accept(Visitor &v) { v.Visit_Shares(*this); }

	::Uml::Class Shares::meta;
	::Uml::CompositionParentRole Shares::meta_Domain_parent;
	::Uml::AssociationRole Shares::meta_srcShares_end_;
	::Uml::AssociationRole Shares::meta_dstShares_end_;

	Targets::Targets() {}
	Targets::Targets(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	Targets::Targets(const Targets &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	Targets::Targets(Targets &&master) : UDM_OBJECT(master) {};

	Targets Targets::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Targets& Targets::operator=(Targets &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Targets Targets::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Targets Targets::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Targets Targets::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Targets> Targets::Instances() { return ::Udm::InstantiatedAttr< Targets>(impl); }
	Targets Targets::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Targets> Targets::Derived() { return ::Udm::DerivedAttr< Targets>(impl); }
	::Udm::ArchetypeAttr< Targets> Targets::Archetype() const { return ::Udm::ArchetypeAttr< Targets>(impl); }
	::Udm::StringAttr Targets::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::Domain> Targets::Domain_children() const { return ::Udm::ChildrenAttr< ::PICML::Domain>(impl, meta_Domain_children); }
	::Udm::ChildrenAttr< ::PICML::Domain> Targets::Domain_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Domain>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Targets::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> Targets::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> Targets::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void Targets::Accept(Visitor &v) { v.Visit_Targets(*this); }

	::Uml::Class Targets::meta;
	::Uml::Attribute Targets::meta_name;
	::Uml::CompositionChildRole Targets::meta_Domain_children;
	::Uml::CompositionParentRole Targets::meta_RootFolder_parent;

	Domain::Domain() {}
	Domain::Domain(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Domain::Domain(const Domain &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Domain::Domain(Domain &&master) : MgaObject(master) {};

	Domain Domain::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Domain& Domain::operator=(Domain &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Domain Domain::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Domain Domain::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Domain Domain::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Domain> Domain::Instances() { return ::Udm::InstantiatedAttr< Domain>(impl); }
	Domain Domain::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Domain> Domain::Derived() { return ::Udm::DerivedAttr< Domain>(impl); }
	::Udm::ArchetypeAttr< Domain> Domain::Archetype() const { return ::Udm::ArchetypeAttr< Domain>(impl); }
	::Udm::StringAttr Domain::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::StringAttr Domain::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::ChildrenAttr< ::PICML::Property> Domain::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::Shares> Domain::Shares_children() const { return ::Udm::ChildrenAttr< ::PICML::Shares>(impl, meta_Shares_children); }
	::Udm::ChildrenAttr< ::PICML::SharedResource> Domain::SharedResource_children() const { return ::Udm::ChildrenAttr< ::PICML::SharedResource>(impl, meta_SharedResource_children); }
	::Udm::ChildrenAttr< ::PICML::Bridge> Domain::Bridge_children() const { return ::Udm::ChildrenAttr< ::PICML::Bridge>(impl, meta_Bridge_children); }
	::Udm::ChildrenAttr< ::PICML::BridgeConnection> Domain::BridgeConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::BridgeConnection>(impl, meta_BridgeConnection_children); }
	::Udm::ChildrenAttr< ::PICML::Node> Domain::Node_children() const { return ::Udm::ChildrenAttr< ::PICML::Node>(impl, meta_Node_children); }
	::Udm::ChildrenAttr< ::PICML::Interconnect> Domain::Interconnect_children() const { return ::Udm::ChildrenAttr< ::PICML::Interconnect>(impl, meta_Interconnect_children); }
	::Udm::ChildrenAttr< ::PICML::InterconnectConnection> Domain::InterconnectConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::InterconnectConnection>(impl, meta_InterconnectConnection_children); }
	::Udm::ChildrenAttr< ::PICML::SharedResource> Domain::SharedResource_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SharedResource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Node> Domain::Node_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Node>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Interconnect> Domain::Interconnect_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Interconnect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Bridge> Domain::Bridge_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Bridge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> Domain::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> Domain::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> Domain::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementSatisfier> Domain::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Shares> Domain::Shares_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Shares>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::BridgeConnection> Domain::BridgeConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BridgeConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InterconnectConnection> Domain::InterconnectConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InterconnectConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Domain::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Targets> Domain::Targets_parent() const { return ::Udm::ParentAttr< ::PICML::Targets>(impl, meta_Targets_parent); }
	::Udm::ParentAttr< ::PICML::Targets> Domain::parent() const { return ::Udm::ParentAttr< ::PICML::Targets>(impl, ::Udm::NULLPARENTROLE); }
	void Domain::Accept(Visitor &v) { v.Visit_Domain(*this); }

	::Uml::Class Domain::meta;
	::Uml::Attribute Domain::meta_UUID;
	::Uml::Attribute Domain::meta_label;
	::Uml::CompositionChildRole Domain::meta_Property_children;
	::Uml::CompositionChildRole Domain::meta_Shares_children;
	::Uml::CompositionChildRole Domain::meta_SharedResource_children;
	::Uml::CompositionChildRole Domain::meta_Bridge_children;
	::Uml::CompositionChildRole Domain::meta_BridgeConnection_children;
	::Uml::CompositionChildRole Domain::meta_Node_children;
	::Uml::CompositionChildRole Domain::meta_Interconnect_children;
	::Uml::CompositionChildRole Domain::meta_InterconnectConnection_children;
	::Uml::CompositionParentRole Domain::meta_Targets_parent;

	BridgeConnection::BridgeConnection() {}
	BridgeConnection::BridgeConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BridgeConnection::BridgeConnection(const BridgeConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BridgeConnection::BridgeConnection(BridgeConnection &&master) : MgaObject(master) {};

	BridgeConnection BridgeConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BridgeConnection& BridgeConnection::operator=(BridgeConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BridgeConnection BridgeConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BridgeConnection BridgeConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BridgeConnection BridgeConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BridgeConnection> BridgeConnection::Instances() { return ::Udm::InstantiatedAttr< BridgeConnection>(impl); }
	BridgeConnection BridgeConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BridgeConnection> BridgeConnection::Derived() { return ::Udm::DerivedAttr< BridgeConnection>(impl); }
	::Udm::ArchetypeAttr< BridgeConnection> BridgeConnection::Archetype() const { return ::Udm::ArchetypeAttr< BridgeConnection>(impl); }
	::Udm::ParentAttr< ::PICML::Domain> BridgeConnection::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> BridgeConnection::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Interconnect> BridgeConnection::srcBridgeConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Interconnect>(impl, meta_srcBridgeConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::Bridge> BridgeConnection::dstBridgeConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Bridge>(impl, meta_dstBridgeConnection_end_); }
	void BridgeConnection::Accept(Visitor &v) { v.Visit_BridgeConnection(*this); }

	::Uml::Class BridgeConnection::meta;
	::Uml::CompositionParentRole BridgeConnection::meta_Domain_parent;
	::Uml::AssociationRole BridgeConnection::meta_srcBridgeConnection_end_;
	::Uml::AssociationRole BridgeConnection::meta_dstBridgeConnection_end_;

	InterconnectConnection::InterconnectConnection() {}
	InterconnectConnection::InterconnectConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InterconnectConnection::InterconnectConnection(const InterconnectConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InterconnectConnection::InterconnectConnection(InterconnectConnection &&master) : MgaObject(master) {};

	InterconnectConnection InterconnectConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InterconnectConnection& InterconnectConnection::operator=(InterconnectConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InterconnectConnection InterconnectConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InterconnectConnection InterconnectConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InterconnectConnection InterconnectConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InterconnectConnection> InterconnectConnection::Instances() { return ::Udm::InstantiatedAttr< InterconnectConnection>(impl); }
	InterconnectConnection InterconnectConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InterconnectConnection> InterconnectConnection::Derived() { return ::Udm::DerivedAttr< InterconnectConnection>(impl); }
	::Udm::ArchetypeAttr< InterconnectConnection> InterconnectConnection::Archetype() const { return ::Udm::ArchetypeAttr< InterconnectConnection>(impl); }
	::Udm::ParentAttr< ::PICML::Domain> InterconnectConnection::Domain_parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::PICML::Domain> InterconnectConnection::parent() const { return ::Udm::ParentAttr< ::PICML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Node> InterconnectConnection::srcInterconnectConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Node>(impl, meta_srcInterconnectConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::Interconnect> InterconnectConnection::dstInterconnectConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Interconnect>(impl, meta_dstInterconnectConnection_end_); }
	void InterconnectConnection::Accept(Visitor &v) { v.Visit_InterconnectConnection(*this); }

	::Uml::Class InterconnectConnection::meta;
	::Uml::CompositionParentRole InterconnectConnection::meta_Domain_parent;
	::Uml::AssociationRole InterconnectConnection::meta_srcInterconnectConnection_end_;
	::Uml::AssociationRole InterconnectConnection::meta_dstInterconnectConnection_end_;

	Taggable::Taggable() {}
	Taggable::Taggable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Taggable::Taggable(const Taggable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Taggable::Taggable(Taggable &&master) : MgaObject(master) {};

	Taggable Taggable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Taggable& Taggable::operator=(Taggable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Taggable Taggable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Taggable Taggable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Taggable Taggable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Taggable> Taggable::Instances() { return ::Udm::InstantiatedAttr< Taggable>(impl); }
	Taggable Taggable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Taggable> Taggable::Derived() { return ::Udm::DerivedAttr< Taggable>(impl); }
	::Udm::ArchetypeAttr< Taggable> Taggable::Archetype() const { return ::Udm::ArchetypeAttr< Taggable>(impl); }
	::Udm::StringAttr Taggable::VersionTag() const { return ::Udm::StringAttr(impl, meta_VersionTag); }
	::Udm::StringAttr Taggable::SpecifyIdTag() const { return ::Udm::StringAttr(impl, meta_SpecifyIdTag); }
	::Udm::ParentAttr< ::PICML::MgaObject> Taggable::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Taggable::meta;
	::Uml::Attribute Taggable::meta_VersionTag;
	::Uml::Attribute Taggable::meta_SpecifyIdTag;

	Prefixable::Prefixable() {}
	Prefixable::Prefixable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Prefixable::Prefixable(const Prefixable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Prefixable::Prefixable(Prefixable &&master) : MgaObject(master) {};

	Prefixable Prefixable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Prefixable& Prefixable::operator=(Prefixable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Prefixable Prefixable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Prefixable Prefixable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Prefixable Prefixable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Prefixable> Prefixable::Instances() { return ::Udm::InstantiatedAttr< Prefixable>(impl); }
	Prefixable Prefixable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Prefixable> Prefixable::Derived() { return ::Udm::DerivedAttr< Prefixable>(impl); }
	::Udm::ArchetypeAttr< Prefixable> Prefixable::Archetype() const { return ::Udm::ArchetypeAttr< Prefixable>(impl); }
	::Udm::StringAttr Prefixable::PrefixTag() const { return ::Udm::StringAttr(impl, meta_PrefixTag); }
	::Udm::ParentAttr< ::Udm::Object> Prefixable::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Prefixable::meta;
	::Uml::Attribute Prefixable::meta_PrefixTag;

	ParameterType::ParameterType() {}
	ParameterType::ParameterType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ParameterType::ParameterType(const ParameterType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ParameterType::ParameterType(ParameterType &&master) : MgaObject(master) {};

	ParameterType ParameterType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ParameterType& ParameterType::operator=(ParameterType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ParameterType ParameterType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ParameterType ParameterType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ParameterType ParameterType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ParameterType> ParameterType::Instances() { return ::Udm::InstantiatedAttr< ParameterType>(impl); }
	ParameterType ParameterType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ParameterType> ParameterType::Derived() { return ::Udm::DerivedAttr< ParameterType>(impl); }
	::Udm::ArchetypeAttr< ParameterType> ParameterType::Archetype() const { return ::Udm::ArchetypeAttr< ParameterType>(impl); }
	::Udm::PointerAttr< MemberType> ParameterType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Operation> ParameterType::Operation_parent() const { return ::Udm::ParentAttr< ::PICML::Operation>(impl, meta_Operation_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ParameterType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ParameterType::meta;
	::Uml::AssociationRole ParameterType::meta_ref;
	::Uml::CompositionParentRole ParameterType::meta_Operation_parent;

	ReturnType::ReturnType() {}
	ReturnType::ReturnType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ReturnType::ReturnType(const ReturnType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ReturnType::ReturnType(ReturnType &&master) : MgaObject(master) {};

	ReturnType ReturnType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReturnType& ReturnType::operator=(ReturnType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReturnType ReturnType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReturnType ReturnType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReturnType ReturnType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReturnType> ReturnType::Instances() { return ::Udm::InstantiatedAttr< ReturnType>(impl); }
	ReturnType ReturnType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReturnType> ReturnType::Derived() { return ::Udm::DerivedAttr< ReturnType>(impl); }
	::Udm::ArchetypeAttr< ReturnType> ReturnType::Archetype() const { return ::Udm::ArchetypeAttr< ReturnType>(impl); }
	::Udm::PointerAttr< MemberType> ReturnType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::TwowayOperation> ReturnType::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::PICML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::PICML::Operation> ReturnType::Operation_parent() const { return ::Udm::ParentAttr< ::PICML::Operation>(impl, meta_Operation_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ReturnType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ReturnType::Accept(Visitor &v) { v.Visit_ReturnType(*this); }

	::Uml::Class ReturnType::meta;
	::Uml::AssociationRole ReturnType::meta_ref;
	::Uml::CompositionParentRole ReturnType::meta_TwowayOperation_parent;
	::Uml::CompositionParentRole ReturnType::meta_Operation_parent;

	OutParameter::OutParameter() {}
	OutParameter::OutParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	OutParameter::OutParameter(const OutParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	OutParameter::OutParameter(OutParameter &&master) : ParameterType(master) {};

	OutParameter OutParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutParameter& OutParameter::operator=(OutParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutParameter OutParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutParameter OutParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutParameter OutParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutParameter> OutParameter::Instances() { return ::Udm::InstantiatedAttr< OutParameter>(impl); }
	OutParameter OutParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutParameter> OutParameter::Derived() { return ::Udm::DerivedAttr< OutParameter>(impl); }
	::Udm::ArchetypeAttr< OutParameter> OutParameter::Archetype() const { return ::Udm::ArchetypeAttr< OutParameter>(impl); }
	::Udm::ParentAttr< ::PICML::TwowayOperation> OutParameter::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::PICML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> OutParameter::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OutParameter::Accept(Visitor &v) { v.Visit_OutParameter(*this); }

	::Uml::Class OutParameter::meta;
	::Uml::CompositionParentRole OutParameter::meta_TwowayOperation_parent;

	InoutParameter::InoutParameter() {}
	InoutParameter::InoutParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	InoutParameter::InoutParameter(const InoutParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	InoutParameter::InoutParameter(InoutParameter &&master) : ParameterType(master) {};

	InoutParameter InoutParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InoutParameter& InoutParameter::operator=(InoutParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InoutParameter InoutParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InoutParameter InoutParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InoutParameter InoutParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InoutParameter> InoutParameter::Instances() { return ::Udm::InstantiatedAttr< InoutParameter>(impl); }
	InoutParameter InoutParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InoutParameter> InoutParameter::Derived() { return ::Udm::DerivedAttr< InoutParameter>(impl); }
	::Udm::ArchetypeAttr< InoutParameter> InoutParameter::Archetype() const { return ::Udm::ArchetypeAttr< InoutParameter>(impl); }
	::Udm::ParentAttr< ::PICML::TwowayOperation> InoutParameter::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::PICML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> InoutParameter::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void InoutParameter::Accept(Visitor &v) { v.Visit_InoutParameter(*this); }

	::Uml::Class InoutParameter::meta;
	::Uml::CompositionParentRole InoutParameter::meta_TwowayOperation_parent;

	InParameter::InParameter() {}
	InParameter::InParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	InParameter::InParameter(const InParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	InParameter::InParameter(InParameter &&master) : ParameterType(master) {};

	InParameter InParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InParameter& InParameter::operator=(InParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InParameter InParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InParameter InParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InParameter InParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InParameter> InParameter::Instances() { return ::Udm::InstantiatedAttr< InParameter>(impl); }
	InParameter InParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InParameter> InParameter::Derived() { return ::Udm::DerivedAttr< InParameter>(impl); }
	::Udm::ArchetypeAttr< InParameter> InParameter::Archetype() const { return ::Udm::ArchetypeAttr< InParameter>(impl); }
	::Udm::ParentAttr< ::PICML::OperationBase> InParameter::OperationBase_parent() const { return ::Udm::ParentAttr< ::PICML::OperationBase>(impl, meta_OperationBase_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> InParameter::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void InParameter::Accept(Visitor &v) { v.Visit_InParameter(*this); }

	::Uml::Class InParameter::meta;
	::Uml::CompositionParentRole InParameter::meta_OperationBase_parent;

	HasExceptions::HasExceptions() {}
	HasExceptions::HasExceptions(::Udm::ObjectImpl *impl) : OperationBase(impl), MgaObject(impl) {}
	HasExceptions::HasExceptions(const HasExceptions &master) : OperationBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	HasExceptions::HasExceptions(HasExceptions &&master) : OperationBase(master), MgaObject(master) {};

	HasExceptions HasExceptions::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	HasExceptions& HasExceptions::operator=(HasExceptions &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	HasExceptions HasExceptions::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	HasExceptions HasExceptions::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	HasExceptions HasExceptions::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< HasExceptions> HasExceptions::Instances() { return ::Udm::InstantiatedAttr< HasExceptions>(impl); }
	HasExceptions HasExceptions::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< HasExceptions> HasExceptions::Derived() { return ::Udm::DerivedAttr< HasExceptions>(impl); }
	::Udm::ArchetypeAttr< HasExceptions> HasExceptions::Archetype() const { return ::Udm::ArchetypeAttr< HasExceptions>(impl); }
	::Udm::ChildrenAttr< ::PICML::ExceptionRef> HasExceptions::ExceptionRef_children() const { return ::Udm::ChildrenAttr< ::PICML::ExceptionRef>(impl, meta_ExceptionRef_children); }
	::Udm::ChildrenAttr< ::PICML::ExceptionRef> HasExceptions::ExceptionRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExceptionRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> HasExceptions::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> HasExceptions::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class HasExceptions::meta;
	::Uml::CompositionChildRole HasExceptions::meta_ExceptionRef_children;

	OnewayOperation::OnewayOperation() {}
	OnewayOperation::OnewayOperation(::Udm::ObjectImpl *impl) : OperationBase(impl), MgaObject(impl) {}
	OnewayOperation::OnewayOperation(const OnewayOperation &master) : OperationBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OnewayOperation::OnewayOperation(OnewayOperation &&master) : OperationBase(master), MgaObject(master) {};

	OnewayOperation OnewayOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OnewayOperation& OnewayOperation::operator=(OnewayOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OnewayOperation OnewayOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OnewayOperation OnewayOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OnewayOperation OnewayOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OnewayOperation> OnewayOperation::Instances() { return ::Udm::InstantiatedAttr< OnewayOperation>(impl); }
	OnewayOperation OnewayOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OnewayOperation> OnewayOperation::Derived() { return ::Udm::DerivedAttr< OnewayOperation>(impl); }
	::Udm::ArchetypeAttr< OnewayOperation> OnewayOperation::Archetype() const { return ::Udm::ArchetypeAttr< OnewayOperation>(impl); }
	::Udm::ParentAttr< ::PICML::HasOperations> OnewayOperation::HasOperations_parent() const { return ::Udm::ParentAttr< ::PICML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> OnewayOperation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OnewayOperation::Accept(Visitor &v) { v.Visit_OnewayOperation(*this); }

	::Uml::Class OnewayOperation::meta;
	::Uml::CompositionParentRole OnewayOperation::meta_HasOperations_parent;

	TwowayOperation::TwowayOperation() {}
	TwowayOperation::TwowayOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	TwowayOperation::TwowayOperation(const TwowayOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TwowayOperation::TwowayOperation(TwowayOperation &&master) : HasExceptions(master), MgaObject(master) {};

	TwowayOperation TwowayOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TwowayOperation& TwowayOperation::operator=(TwowayOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TwowayOperation TwowayOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TwowayOperation TwowayOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TwowayOperation TwowayOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TwowayOperation> TwowayOperation::Instances() { return ::Udm::InstantiatedAttr< TwowayOperation>(impl); }
	TwowayOperation TwowayOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TwowayOperation> TwowayOperation::Derived() { return ::Udm::DerivedAttr< TwowayOperation>(impl); }
	::Udm::ArchetypeAttr< TwowayOperation> TwowayOperation::Archetype() const { return ::Udm::ArchetypeAttr< TwowayOperation>(impl); }
	::Udm::ChildAttr< ::PICML::ReturnType> TwowayOperation::ReturnType_child() const { return ::Udm::ChildAttr< ::PICML::ReturnType>(impl, meta_ReturnType_child); }
	::Udm::ChildrenAttr< ::PICML::OutParameter> TwowayOperation::OutParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::OutParameter>(impl, meta_OutParameter_children); }
	::Udm::ChildrenAttr< ::PICML::InoutParameter> TwowayOperation::InoutParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::InoutParameter>(impl, meta_InoutParameter_children); }
	::Udm::ChildrenAttr< ::PICML::ParameterType> TwowayOperation::ParameterType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ParameterType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReturnType> TwowayOperation::ReturnType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReturnType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutParameter> TwowayOperation::OutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InoutParameter> TwowayOperation::InoutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InoutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TwowayOperation::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::HasOperations> TwowayOperation::HasOperations_parent() const { return ::Udm::ParentAttr< ::PICML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> TwowayOperation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void TwowayOperation::Accept(Visitor &v) { v.Visit_TwowayOperation(*this); }

	::Uml::Class TwowayOperation::meta;
	::Uml::CompositionChildRole TwowayOperation::meta_ReturnType_child;
	::Uml::CompositionChildRole TwowayOperation::meta_OutParameter_children;
	::Uml::CompositionChildRole TwowayOperation::meta_InoutParameter_children;
	::Uml::CompositionParentRole TwowayOperation::meta_HasOperations_parent;

	LookupOperation::LookupOperation() {}
	LookupOperation::LookupOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	LookupOperation::LookupOperation(const LookupOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LookupOperation::LookupOperation(LookupOperation &&master) : HasExceptions(master), MgaObject(master) {};

	LookupOperation LookupOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LookupOperation& LookupOperation::operator=(LookupOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LookupOperation LookupOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LookupOperation LookupOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LookupOperation LookupOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LookupOperation> LookupOperation::Instances() { return ::Udm::InstantiatedAttr< LookupOperation>(impl); }
	LookupOperation LookupOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LookupOperation> LookupOperation::Derived() { return ::Udm::DerivedAttr< LookupOperation>(impl); }
	::Udm::ArchetypeAttr< LookupOperation> LookupOperation::Archetype() const { return ::Udm::ArchetypeAttr< LookupOperation>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentFactory> LookupOperation::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> LookupOperation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void LookupOperation::Accept(Visitor &v) { v.Visit_LookupOperation(*this); }

	::Uml::Class LookupOperation::meta;
	::Uml::CompositionParentRole LookupOperation::meta_ComponentFactory_parent;

	FactoryOperation::FactoryOperation() {}
	FactoryOperation::FactoryOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	FactoryOperation::FactoryOperation(const FactoryOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	FactoryOperation::FactoryOperation(FactoryOperation &&master) : HasExceptions(master), MgaObject(master) {};

	FactoryOperation FactoryOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FactoryOperation& FactoryOperation::operator=(FactoryOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FactoryOperation FactoryOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FactoryOperation FactoryOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FactoryOperation FactoryOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FactoryOperation> FactoryOperation::Instances() { return ::Udm::InstantiatedAttr< FactoryOperation>(impl); }
	FactoryOperation FactoryOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FactoryOperation> FactoryOperation::Derived() { return ::Udm::DerivedAttr< FactoryOperation>(impl); }
	::Udm::ArchetypeAttr< FactoryOperation> FactoryOperation::Archetype() const { return ::Udm::ArchetypeAttr< FactoryOperation>(impl); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> FactoryOperation::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::PICML::ComponentFactory> FactoryOperation::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> FactoryOperation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void FactoryOperation::Accept(Visitor &v) { v.Visit_FactoryOperation(*this); }

	::Uml::Class FactoryOperation::meta;
	::Uml::CompositionParentRole FactoryOperation::meta_ObjectByValue_parent;
	::Uml::CompositionParentRole FactoryOperation::meta_ComponentFactory_parent;

	OperationBase::OperationBase() {}
	OperationBase::OperationBase(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	OperationBase::OperationBase(const OperationBase &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationBase::OperationBase(OperationBase &&master) : Taggable(master), MgaObject(master) {};

	OperationBase OperationBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationBase& OperationBase::operator=(OperationBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationBase OperationBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationBase OperationBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationBase OperationBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationBase> OperationBase::Instances() { return ::Udm::InstantiatedAttr< OperationBase>(impl); }
	OperationBase OperationBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationBase> OperationBase::Derived() { return ::Udm::DerivedAttr< OperationBase>(impl); }
	::Udm::ArchetypeAttr< OperationBase> OperationBase::Archetype() const { return ::Udm::ArchetypeAttr< OperationBase>(impl); }
	::Udm::AssocAttr< OperationRef> OperationBase::referedbyOperationRef() const { return ::Udm::AssocAttr< OperationRef>(impl, meta_referedbyOperationRef); }
	::Udm::ChildrenAttr< ::PICML::InParameter> OperationBase::InParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::InParameter>(impl, meta_InParameter_children); }
	::Udm::ChildrenAttr< ::PICML::ParameterType> OperationBase::ParameterType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ParameterType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InParameter> OperationBase::InParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> OperationBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> OperationBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> OperationBase::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class OperationBase::meta;
	::Uml::AssociationRole OperationBase::meta_referedbyOperationRef;
	::Uml::CompositionChildRole OperationBase::meta_InParameter_children;
	::Uml::CompositionParentRole OperationBase::meta_BenchmarkAnalysis_parent;

	ExceptionRef::ExceptionRef() {}
	ExceptionRef::ExceptionRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExceptionRef::ExceptionRef(const ExceptionRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExceptionRef::ExceptionRef(ExceptionRef &&master) : MgaObject(master) {};

	ExceptionRef ExceptionRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExceptionRef& ExceptionRef::operator=(ExceptionRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExceptionRef ExceptionRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExceptionRef ExceptionRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExceptionRef ExceptionRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExceptionRef> ExceptionRef::Instances() { return ::Udm::InstantiatedAttr< ExceptionRef>(impl); }
	ExceptionRef ExceptionRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExceptionRef> ExceptionRef::Derived() { return ::Udm::DerivedAttr< ExceptionRef>(impl); }
	::Udm::ArchetypeAttr< ExceptionRef> ExceptionRef::Archetype() const { return ::Udm::ArchetypeAttr< ExceptionRef>(impl); }
	::Udm::PointerAttr< ExceptionType> ExceptionRef::ref() const { return ::Udm::PointerAttr< ExceptionType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::HasExceptions> ExceptionRef::HasExceptions_parent() const { return ::Udm::ParentAttr< ::PICML::HasExceptions>(impl, meta_HasExceptions_parent); }
	::Udm::ParentAttr< ::PICML::HasExceptions> ExceptionRef::parent() const { return ::Udm::ParentAttr< ::PICML::HasExceptions>(impl, ::Udm::NULLPARENTROLE); }
	void ExceptionRef::Accept(Visitor &v) { v.Visit_ExceptionRef(*this); }

	::Uml::Class ExceptionRef::meta;
	::Uml::AssociationRole ExceptionRef::meta_ref;
	::Uml::CompositionParentRole ExceptionRef::meta_HasExceptions_parent;

	AttributeMember::AttributeMember() {}
	AttributeMember::AttributeMember(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMember::AttributeMember(const AttributeMember &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMember::AttributeMember(AttributeMember &&master) : MgaObject(master) {};

	AttributeMember AttributeMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMember& AttributeMember::operator=(AttributeMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMember AttributeMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMember AttributeMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMember AttributeMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMember> AttributeMember::Instances() { return ::Udm::InstantiatedAttr< AttributeMember>(impl); }
	AttributeMember AttributeMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMember> AttributeMember::Derived() { return ::Udm::DerivedAttr< AttributeMember>(impl); }
	::Udm::ArchetypeAttr< AttributeMember> AttributeMember::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMember>(impl); }
	::Udm::PointerAttr< MemberType> AttributeMember::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ReadonlyAttribute> AttributeMember::ReadonlyAttribute_parent() const { return ::Udm::ParentAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_parent); }
	::Udm::ParentAttr< ::PICML::ReadonlyAttribute> AttributeMember::parent() const { return ::Udm::ParentAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeMember::Accept(Visitor &v) { v.Visit_AttributeMember(*this); }

	::Uml::Class AttributeMember::meta;
	::Uml::AssociationRole AttributeMember::meta_ref;
	::Uml::CompositionParentRole AttributeMember::meta_ReadonlyAttribute_parent;

	MakeMemberPrivate::MakeMemberPrivate() {}
	MakeMemberPrivate::MakeMemberPrivate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MakeMemberPrivate::MakeMemberPrivate(const MakeMemberPrivate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MakeMemberPrivate::MakeMemberPrivate(MakeMemberPrivate &&master) : MgaObject(master) {};

	MakeMemberPrivate MakeMemberPrivate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MakeMemberPrivate& MakeMemberPrivate::operator=(MakeMemberPrivate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MakeMemberPrivate MakeMemberPrivate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MakeMemberPrivate MakeMemberPrivate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MakeMemberPrivate MakeMemberPrivate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MakeMemberPrivate> MakeMemberPrivate::Instances() { return ::Udm::InstantiatedAttr< MakeMemberPrivate>(impl); }
	MakeMemberPrivate MakeMemberPrivate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MakeMemberPrivate> MakeMemberPrivate::Derived() { return ::Udm::DerivedAttr< MakeMemberPrivate>(impl); }
	::Udm::ArchetypeAttr< MakeMemberPrivate> MakeMemberPrivate::Archetype() const { return ::Udm::ArchetypeAttr< MakeMemberPrivate>(impl); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> MakeMemberPrivate::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> MakeMemberPrivate::parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Member> MakeMemberPrivate::srcMakeMemberPrivate_end() const { return ::Udm::AssocEndAttr< ::PICML::Member>(impl, meta_srcMakeMemberPrivate_end_); }
	::Udm::AssocEndAttr< ::PICML::PrivateFlag> MakeMemberPrivate::dstMakeMemberPrivate_end() const { return ::Udm::AssocEndAttr< ::PICML::PrivateFlag>(impl, meta_dstMakeMemberPrivate_end_); }
	void MakeMemberPrivate::Accept(Visitor &v) { v.Visit_MakeMemberPrivate(*this); }

	::Uml::Class MakeMemberPrivate::meta;
	::Uml::CompositionParentRole MakeMemberPrivate::meta_ObjectByValue_parent;
	::Uml::AssociationRole MakeMemberPrivate::meta_srcMakeMemberPrivate_end_;
	::Uml::AssociationRole MakeMemberPrivate::meta_dstMakeMemberPrivate_end_;

	PrivateFlag::PrivateFlag() {}
	PrivateFlag::PrivateFlag(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PrivateFlag::PrivateFlag(const PrivateFlag &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PrivateFlag::PrivateFlag(PrivateFlag &&master) : MgaObject(master) {};

	PrivateFlag PrivateFlag::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PrivateFlag& PrivateFlag::operator=(PrivateFlag &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PrivateFlag PrivateFlag::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PrivateFlag PrivateFlag::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PrivateFlag PrivateFlag::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PrivateFlag> PrivateFlag::Instances() { return ::Udm::InstantiatedAttr< PrivateFlag>(impl); }
	PrivateFlag PrivateFlag::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PrivateFlag> PrivateFlag::Derived() { return ::Udm::DerivedAttr< PrivateFlag>(impl); }
	::Udm::ArchetypeAttr< PrivateFlag> PrivateFlag::Archetype() const { return ::Udm::ArchetypeAttr< PrivateFlag>(impl); }
	::Udm::AClassPointerAttr< MakeMemberPrivate, Member> PrivateFlag::srcMakeMemberPrivate() const { return ::Udm::AClassPointerAttr< MakeMemberPrivate, Member>(impl, meta_srcMakeMemberPrivate, meta_srcMakeMemberPrivate_rev); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> PrivateFlag::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> PrivateFlag::parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, ::Udm::NULLPARENTROLE); }
	void PrivateFlag::Accept(Visitor &v) { v.Visit_PrivateFlag(*this); }

	::Uml::Class PrivateFlag::meta;
	::Uml::AssociationRole PrivateFlag::meta_srcMakeMemberPrivate;
	::Uml::AssociationRole PrivateFlag::meta_srcMakeMemberPrivate_rev;
	::Uml::CompositionParentRole PrivateFlag::meta_ObjectByValue_parent;

	GetException::GetException() {}
	GetException::GetException(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	GetException::GetException(const GetException &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	GetException::GetException(GetException &&master) : MgaObject(master) {};

	GetException GetException::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GetException& GetException::operator=(GetException &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GetException GetException::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GetException GetException::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GetException GetException::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GetException> GetException::Instances() { return ::Udm::InstantiatedAttr< GetException>(impl); }
	GetException GetException::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GetException> GetException::Derived() { return ::Udm::DerivedAttr< GetException>(impl); }
	::Udm::ArchetypeAttr< GetException> GetException::Archetype() const { return ::Udm::ArchetypeAttr< GetException>(impl); }
	::Udm::PointerAttr< ExceptionType> GetException::ref() const { return ::Udm::PointerAttr< ExceptionType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ReadonlyAttribute> GetException::ReadonlyAttribute_parent() const { return ::Udm::ParentAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_parent); }
	::Udm::ParentAttr< ::PICML::ReadonlyAttribute> GetException::parent() const { return ::Udm::ParentAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLPARENTROLE); }
	void GetException::Accept(Visitor &v) { v.Visit_GetException(*this); }

	::Uml::Class GetException::meta;
	::Uml::AssociationRole GetException::meta_ref;
	::Uml::CompositionParentRole GetException::meta_ReadonlyAttribute_parent;

	ObjectByValue::ObjectByValue() {}
	ObjectByValue::ObjectByValue(::Udm::ObjectImpl *impl) : Prefixable(impl),SupportsInterfaces(impl),HasOperations(impl), MgaObject(impl) {}
	ObjectByValue::ObjectByValue(const ObjectByValue &master) : Prefixable(master),SupportsInterfaces(master),HasOperations(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ObjectByValue::ObjectByValue(ObjectByValue &&master) : Prefixable(master),SupportsInterfaces(master),HasOperations(master), MgaObject(master) {};

	ObjectByValue ObjectByValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ObjectByValue& ObjectByValue::operator=(ObjectByValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ObjectByValue ObjectByValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ObjectByValue ObjectByValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ObjectByValue ObjectByValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ObjectByValue> ObjectByValue::Instances() { return ::Udm::InstantiatedAttr< ObjectByValue>(impl); }
	ObjectByValue ObjectByValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ObjectByValue> ObjectByValue::Derived() { return ::Udm::DerivedAttr< ObjectByValue>(impl); }
	::Udm::ArchetypeAttr< ObjectByValue> ObjectByValue::Archetype() const { return ::Udm::ArchetypeAttr< ObjectByValue>(impl); }
	::Udm::BooleanAttr ObjectByValue::abstract() const { return ::Udm::BooleanAttr(impl, meta_abstract); }
	::Udm::ChildrenAttr< ::PICML::Member> ObjectByValue::Member_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::PICML::MakeMemberPrivate> ObjectByValue::MakeMemberPrivate_children() const { return ::Udm::ChildrenAttr< ::PICML::MakeMemberPrivate>(impl, meta_MakeMemberPrivate_children); }
	::Udm::ChildrenAttr< ::PICML::PrivateFlag> ObjectByValue::PrivateFlag_children() const { return ::Udm::ChildrenAttr< ::PICML::PrivateFlag>(impl, meta_PrivateFlag_children); }
	::Udm::ChildrenAttr< ::PICML::FactoryOperation> ObjectByValue::FactoryOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::FactoryOperation>(impl, meta_FactoryOperation_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> ObjectByValue::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasExceptions> ObjectByValue::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FactoryOperation> ObjectByValue::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OperationBase> ObjectByValue::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MakeMemberPrivate> ObjectByValue::MakeMemberPrivate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MakeMemberPrivate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PrivateFlag> ObjectByValue::PrivateFlag_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PrivateFlag>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArrayMember> ObjectByValue::ArrayMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArrayMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Member> ObjectByValue::Member_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ObjectByValue::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> ObjectByValue::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ObjectByValue::meta;
	::Uml::Attribute ObjectByValue::meta_abstract;
	::Uml::CompositionChildRole ObjectByValue::meta_Member_children;
	::Uml::CompositionChildRole ObjectByValue::meta_MakeMemberPrivate_children;
	::Uml::CompositionChildRole ObjectByValue::meta_PrivateFlag_children;
	::Uml::CompositionChildRole ObjectByValue::meta_FactoryOperation_children;

	SetException::SetException() {}
	SetException::SetException(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SetException::SetException(const SetException &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SetException::SetException(SetException &&master) : MgaObject(master) {};

	SetException SetException::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SetException& SetException::operator=(SetException &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SetException SetException::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SetException SetException::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SetException SetException::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SetException> SetException::Instances() { return ::Udm::InstantiatedAttr< SetException>(impl); }
	SetException SetException::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SetException> SetException::Derived() { return ::Udm::DerivedAttr< SetException>(impl); }
	::Udm::ArchetypeAttr< SetException> SetException::Archetype() const { return ::Udm::ArchetypeAttr< SetException>(impl); }
	::Udm::PointerAttr< ExceptionType> SetException::ref() const { return ::Udm::PointerAttr< ExceptionType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Attribute> SetException::Attribute_parent() const { return ::Udm::ParentAttr< ::PICML::Attribute>(impl, meta_Attribute_parent); }
	::Udm::ParentAttr< ::PICML::Attribute> SetException::parent() const { return ::Udm::ParentAttr< ::PICML::Attribute>(impl, ::Udm::NULLPARENTROLE); }
	void SetException::Accept(Visitor &v) { v.Visit_SetException(*this); }

	::Uml::Class SetException::meta;
	::Uml::AssociationRole SetException::meta_ref;
	::Uml::CompositionParentRole SetException::meta_Attribute_parent;

	Attribute::Attribute() {}
	Attribute::Attribute(::Udm::ObjectImpl *impl) : ReadonlyAttribute(impl), MgaObject(impl) {}
	Attribute::Attribute(const Attribute &master) : ReadonlyAttribute(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Attribute::Attribute(Attribute &&master) : ReadonlyAttribute(master), MgaObject(master) {};

	Attribute Attribute::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Attribute& Attribute::operator=(Attribute &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Attribute Attribute::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Attribute Attribute::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Attribute Attribute::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Attribute> Attribute::Instances() { return ::Udm::InstantiatedAttr< Attribute>(impl); }
	Attribute Attribute::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Attribute> Attribute::Derived() { return ::Udm::DerivedAttr< Attribute>(impl); }
	::Udm::ArchetypeAttr< Attribute> Attribute::Archetype() const { return ::Udm::ArchetypeAttr< Attribute>(impl); }
	::Udm::ChildrenAttr< ::PICML::SetException> Attribute::SetException_children() const { return ::Udm::ChildrenAttr< ::PICML::SetException>(impl, meta_SetException_children); }
	::Udm::ChildrenAttr< ::PICML::SetException> Attribute::SetException_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SetException>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Attribute::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::NamedType> Attribute::parent() const { return ::Udm::ParentAttr< ::PICML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void Attribute::Accept(Visitor &v) { v.Visit_Attribute(*this); }

	::Uml::Class Attribute::meta;
	::Uml::CompositionChildRole Attribute::meta_SetException_children;

	ReadonlyAttribute::ReadonlyAttribute() {}
	ReadonlyAttribute::ReadonlyAttribute(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	ReadonlyAttribute::ReadonlyAttribute(const ReadonlyAttribute &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ReadonlyAttribute::ReadonlyAttribute(ReadonlyAttribute &&master) : Taggable(master), MgaObject(master) {};

	ReadonlyAttribute ReadonlyAttribute::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReadonlyAttribute& ReadonlyAttribute::operator=(ReadonlyAttribute &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReadonlyAttribute ReadonlyAttribute::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReadonlyAttribute ReadonlyAttribute::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReadonlyAttribute ReadonlyAttribute::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReadonlyAttribute> ReadonlyAttribute::Instances() { return ::Udm::InstantiatedAttr< ReadonlyAttribute>(impl); }
	ReadonlyAttribute ReadonlyAttribute::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReadonlyAttribute> ReadonlyAttribute::Derived() { return ::Udm::DerivedAttr< ReadonlyAttribute>(impl); }
	::Udm::ArchetypeAttr< ReadonlyAttribute> ReadonlyAttribute::Archetype() const { return ::Udm::ArchetypeAttr< ReadonlyAttribute>(impl); }
	::Udm::AssocAttr< AttributeInstance> ReadonlyAttribute::referedbyAttributeInstance() const { return ::Udm::AssocAttr< AttributeInstance>(impl, meta_referedbyAttributeInstance); }
	::Udm::ChildAttr< ::PICML::AttributeMember> ReadonlyAttribute::AttributeMember_child() const { return ::Udm::ChildAttr< ::PICML::AttributeMember>(impl, meta_AttributeMember_child); }
	::Udm::ChildrenAttr< ::PICML::GetException> ReadonlyAttribute::GetException_children() const { return ::Udm::ChildrenAttr< ::PICML::GetException>(impl, meta_GetException_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeMember> ReadonlyAttribute::AttributeMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::GetException> ReadonlyAttribute::GetException_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GetException>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ReadonlyAttribute::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Inheritable> ReadonlyAttribute::Inheritable_parent() const { return ::Udm::ParentAttr< ::PICML::Inheritable>(impl, meta_Inheritable_parent); }
	::Udm::ParentAttr< ::PICML::Component> ReadonlyAttribute::Component_parent() const { return ::Udm::ParentAttr< ::PICML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::PICML::PortType> ReadonlyAttribute::PortType_parent() const { return ::Udm::ParentAttr< ::PICML::PortType>(impl, meta_PortType_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ReadonlyAttribute::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::NamedType> ReadonlyAttribute::parent() const { return ::Udm::ParentAttr< ::PICML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void ReadonlyAttribute::Accept(Visitor &v) { v.Visit_ReadonlyAttribute(*this); }

	::Uml::Class ReadonlyAttribute::meta;
	::Uml::AssociationRole ReadonlyAttribute::meta_referedbyAttributeInstance;
	::Uml::CompositionChildRole ReadonlyAttribute::meta_AttributeMember_child;
	::Uml::CompositionChildRole ReadonlyAttribute::meta_GetException_children;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_Inheritable_parent;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_Component_parent;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_PortType_parent;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_ConnectorObject_parent;

	Supports::Supports() {}
	Supports::Supports(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Supports::Supports(const Supports &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Supports::Supports(Supports &&master) : MgaObject(master) {};

	Supports Supports::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Supports& Supports::operator=(Supports &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Supports Supports::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Supports Supports::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Supports Supports::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Supports> Supports::Instances() { return ::Udm::InstantiatedAttr< Supports>(impl); }
	Supports Supports::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Supports> Supports::Derived() { return ::Udm::DerivedAttr< Supports>(impl); }
	::Udm::ArchetypeAttr< Supports> Supports::Archetype() const { return ::Udm::ArchetypeAttr< Supports>(impl); }
	::Udm::PointerAttr< ::PICML::Object> Supports::ref() const { return ::Udm::PointerAttr< ::PICML::Object>(impl, meta_ref); }
	::Udm::AssocAttr< SupportsInstance> Supports::referedbySupportsInstance() const { return ::Udm::AssocAttr< SupportsInstance>(impl, meta_referedbySupportsInstance); }
	::Udm::ParentAttr< ::PICML::SupportsInterfaces> Supports::SupportsInterfaces_parent() const { return ::Udm::ParentAttr< ::PICML::SupportsInterfaces>(impl, meta_SupportsInterfaces_parent); }
	::Udm::ParentAttr< ::PICML::SupportsInterfaces> Supports::parent() const { return ::Udm::ParentAttr< ::PICML::SupportsInterfaces>(impl, ::Udm::NULLPARENTROLE); }
	void Supports::Accept(Visitor &v) { v.Visit_Supports(*this); }

	::Uml::Class Supports::meta;
	::Uml::AssociationRole Supports::meta_ref;
	::Uml::AssociationRole Supports::meta_referedbySupportsInstance;
	::Uml::CompositionParentRole Supports::meta_SupportsInterfaces_parent;

	SupportsInterfaces::SupportsInterfaces() {}
	SupportsInterfaces::SupportsInterfaces(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SupportsInterfaces::SupportsInterfaces(const SupportsInterfaces &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SupportsInterfaces::SupportsInterfaces(SupportsInterfaces &&master) : MgaObject(master) {};

	SupportsInterfaces SupportsInterfaces::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SupportsInterfaces& SupportsInterfaces::operator=(SupportsInterfaces &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SupportsInterfaces SupportsInterfaces::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SupportsInterfaces SupportsInterfaces::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SupportsInterfaces SupportsInterfaces::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SupportsInterfaces> SupportsInterfaces::Instances() { return ::Udm::InstantiatedAttr< SupportsInterfaces>(impl); }
	SupportsInterfaces SupportsInterfaces::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SupportsInterfaces> SupportsInterfaces::Derived() { return ::Udm::DerivedAttr< SupportsInterfaces>(impl); }
	::Udm::ArchetypeAttr< SupportsInterfaces> SupportsInterfaces::Archetype() const { return ::Udm::ArchetypeAttr< SupportsInterfaces>(impl); }
	::Udm::ChildrenAttr< ::PICML::Supports> SupportsInterfaces::Supports_children() const { return ::Udm::ChildrenAttr< ::PICML::Supports>(impl, meta_Supports_children); }
	::Udm::ChildrenAttr< ::PICML::Supports> SupportsInterfaces::Supports_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Supports>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> SupportsInterfaces::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> SupportsInterfaces::parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SupportsInterfaces::meta;
	::Uml::CompositionChildRole SupportsInterfaces::meta_Supports_children;

	HasOperations::HasOperations() {}
	HasOperations::HasOperations(::Udm::ObjectImpl *impl) : Inheritable(impl), MgaObject(impl) {}
	HasOperations::HasOperations(const HasOperations &master) : Inheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	HasOperations::HasOperations(HasOperations &&master) : Inheritable(master), MgaObject(master) {};

	HasOperations HasOperations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	HasOperations& HasOperations::operator=(HasOperations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	HasOperations HasOperations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	HasOperations HasOperations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	HasOperations HasOperations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< HasOperations> HasOperations::Instances() { return ::Udm::InstantiatedAttr< HasOperations>(impl); }
	HasOperations HasOperations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< HasOperations> HasOperations::Derived() { return ::Udm::DerivedAttr< HasOperations>(impl); }
	::Udm::ArchetypeAttr< HasOperations> HasOperations::Archetype() const { return ::Udm::ArchetypeAttr< HasOperations>(impl); }
	::Udm::ChildrenAttr< ::PICML::NoInheritable> HasOperations::NoInheritable_children() const { return ::Udm::ChildrenAttr< ::PICML::NoInheritable>(impl, meta_NoInheritable_children); }
	::Udm::ChildrenAttr< ::PICML::Constant> HasOperations::Constant_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::PICML::Exception> HasOperations::Exception_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::PICML::TwowayOperation> HasOperations::TwowayOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::TwowayOperation>(impl, meta_TwowayOperation_children); }
	::Udm::ChildrenAttr< ::PICML::OnewayOperation> HasOperations::OnewayOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::OnewayOperation>(impl, meta_OnewayOperation_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> HasOperations::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasExceptions> HasOperations::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OnewayOperation> HasOperations::OnewayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OnewayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TwowayOperation> HasOperations::TwowayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TwowayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OperationBase> HasOperations::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NoInheritable> HasOperations::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Alias> HasOperations::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Collection> HasOperations::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NamedType> HasOperations::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> HasOperations::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SwitchedAggregate> HasOperations::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Aggregate> HasOperations::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Enum> HasOperations::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> HasOperations::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExceptionType> HasOperations::ExceptionType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExceptionType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Constant> HasOperations::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Exception> HasOperations::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PortType> HasOperations::PortType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PortType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> HasOperations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> HasOperations::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class HasOperations::meta;
	::Uml::CompositionChildRole HasOperations::meta_NoInheritable_children;
	::Uml::CompositionChildRole HasOperations::meta_Constant_children;
	::Uml::CompositionChildRole HasOperations::meta_Exception_children;
	::Uml::CompositionChildRole HasOperations::meta_TwowayOperation_children;
	::Uml::CompositionChildRole HasOperations::meta_OnewayOperation_children;

	Inheritable::Inheritable() {}
	Inheritable::Inheritable(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	Inheritable::Inheritable(const Inheritable &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Inheritable::Inheritable(Inheritable &&master) : NamedType(master), MgaObject(master) {};

	Inheritable Inheritable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Inheritable& Inheritable::operator=(Inheritable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Inheritable Inheritable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Inheritable Inheritable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Inheritable Inheritable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Inheritable> Inheritable::Instances() { return ::Udm::InstantiatedAttr< Inheritable>(impl); }
	Inheritable Inheritable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Inheritable> Inheritable::Derived() { return ::Udm::DerivedAttr< Inheritable>(impl); }
	::Udm::ArchetypeAttr< Inheritable> Inheritable::Archetype() const { return ::Udm::ArchetypeAttr< Inheritable>(impl); }
	::Udm::AssocAttr< Inherits> Inheritable::referedbyInherits() const { return ::Udm::AssocAttr< Inherits>(impl, meta_referedbyInherits); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> Inheritable::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::PICML::Inherits> Inheritable::Inherits_children() const { return ::Udm::ChildrenAttr< ::PICML::Inherits>(impl, meta_Inherits_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> Inheritable::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Attribute> Inheritable::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> Inheritable::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Inherits> Inheritable::Inherits_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Inherits>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Inheritable::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> Inheritable::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Inheritable::meta;
	::Uml::AssociationRole Inheritable::meta_referedbyInherits;
	::Uml::CompositionChildRole Inheritable::meta_ReadonlyAttribute_children;
	::Uml::CompositionChildRole Inheritable::meta_Inherits_children;

	ValueObject::ValueObject() {}
	ValueObject::ValueObject(::Udm::ObjectImpl *impl) : ObjectByValue(impl),LookupKeyType(impl), MgaObject(impl) {}
	ValueObject::ValueObject(const ValueObject &master) : ObjectByValue(master),LookupKeyType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ValueObject::ValueObject(ValueObject &&master) : ObjectByValue(master),LookupKeyType(master), MgaObject(master) {};

	ValueObject ValueObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ValueObject& ValueObject::operator=(ValueObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ValueObject ValueObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ValueObject ValueObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ValueObject ValueObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ValueObject> ValueObject::Instances() { return ::Udm::InstantiatedAttr< ValueObject>(impl); }
	ValueObject ValueObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ValueObject> ValueObject::Derived() { return ::Udm::DerivedAttr< ValueObject>(impl); }
	::Udm::ArchetypeAttr< ValueObject> ValueObject::Archetype() const { return ::Udm::ArchetypeAttr< ValueObject>(impl); }
	::Udm::ParentAttr< ::PICML::Prefixable> ValueObject::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void ValueObject::Accept(Visitor &v) { v.Visit_ValueObject(*this); }

	::Uml::Class ValueObject::meta;

	Event::Event() {}
	Event::Event(::Udm::ObjectImpl *impl) : ObjectByValue(impl),EventType(impl), MgaObject(impl) {}
	Event::Event(const Event &master) : ObjectByValue(master),EventType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Event::Event(Event &&master) : ObjectByValue(master),EventType(master), MgaObject(master) {};

	Event Event::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Event& Event::operator=(Event &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Event Event::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Event Event::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Event Event::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Event> Event::Instances() { return ::Udm::InstantiatedAttr< Event>(impl); }
	Event Event::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Event> Event::Derived() { return ::Udm::DerivedAttr< Event>(impl); }
	::Udm::ArchetypeAttr< Event> Event::Archetype() const { return ::Udm::ArchetypeAttr< Event>(impl); }
	::Udm::AssocAttr< EventRef> Event::referedbyEventRef() const { return ::Udm::AssocAttr< EventRef>(impl, meta_referedbyEventRef); }
	::Udm::ParentAttr< ::PICML::BenchmarkAnalysis> Event::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::PICML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Event::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Event::Accept(Visitor &v) { v.Visit_Event(*this); }

	::Uml::Class Event::meta;
	::Uml::AssociationRole Event::meta_referedbyEventRef;
	::Uml::CompositionParentRole Event::meta_BenchmarkAnalysis_parent;

	Inherits::Inherits() {}
	Inherits::Inherits(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Inherits::Inherits(const Inherits &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Inherits::Inherits(Inherits &&master) : MgaObject(master) {};

	Inherits Inherits::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Inherits& Inherits::operator=(Inherits &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Inherits Inherits::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Inherits Inherits::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Inherits Inherits::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Inherits> Inherits::Instances() { return ::Udm::InstantiatedAttr< Inherits>(impl); }
	Inherits Inherits::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Inherits> Inherits::Derived() { return ::Udm::DerivedAttr< Inherits>(impl); }
	::Udm::ArchetypeAttr< Inherits> Inherits::Archetype() const { return ::Udm::ArchetypeAttr< Inherits>(impl); }
	::Udm::PointerAttr< Inheritable> Inherits::ref() const { return ::Udm::PointerAttr< Inheritable>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Inheritable> Inherits::Inheritable_parent() const { return ::Udm::ParentAttr< ::PICML::Inheritable>(impl, meta_Inheritable_parent); }
	::Udm::ParentAttr< ::PICML::Inheritable> Inherits::parent() const { return ::Udm::ParentAttr< ::PICML::Inheritable>(impl, ::Udm::NULLPARENTROLE); }
	void Inherits::Accept(Visitor &v) { v.Visit_Inherits(*this); }

	::Uml::Class Inherits::meta;
	::Uml::AssociationRole Inherits::meta_ref;
	::Uml::CompositionParentRole Inherits::meta_Inheritable_parent;

	Object::Object() {}
	Object::Object(::Udm::ObjectImpl *impl) : Prefixable(impl),HasOperations(impl),Provideable(impl), MgaObject(impl) {}
	Object::Object(const Object &master) : Prefixable(master),HasOperations(master),Provideable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Object::Object(Object &&master) : Prefixable(master),HasOperations(master),Provideable(master), MgaObject(master) {};

	Object Object::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Object& Object::operator=(Object &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Object Object::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Object Object::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Object Object::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Object> Object::Instances() { return ::Udm::InstantiatedAttr< Object>(impl); }
	Object Object::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Object> Object::Derived() { return ::Udm::DerivedAttr< Object>(impl); }
	::Udm::ArchetypeAttr< Object> Object::Archetype() const { return ::Udm::ArchetypeAttr< Object>(impl); }
	::Udm::StringAttr Object::InterfaceSemantics() const { return ::Udm::StringAttr(impl, meta_InterfaceSemantics); }
	::Udm::BooleanAttr Object::SupportsAsync() const { return ::Udm::BooleanAttr(impl, meta_SupportsAsync); }
	::Udm::AssocAttr< Supports> Object::referedbySupports() const { return ::Udm::AssocAttr< Supports>(impl, meta_referedbySupports); }
	::Udm::ParentAttr< ::PICML::Prefixable> Object::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Object::Accept(Visitor &v) { v.Visit_Object(*this); }

	::Uml::Class Object::meta;
	::Uml::Attribute Object::meta_InterfaceSemantics;
	::Uml::Attribute Object::meta_SupportsAsync;
	::Uml::AssociationRole Object::meta_referedbySupports;

	Key::Key() {}
	Key::Key(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Key::Key(const Key &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Key::Key(Key &&master) : MgaObject(master) {};

	Key Key::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Key& Key::operator=(Key &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Key Key::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Key Key::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Key Key::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Key> Key::Instances() { return ::Udm::InstantiatedAttr< Key>(impl); }
	Key Key::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Key> Key::Derived() { return ::Udm::DerivedAttr< Key>(impl); }
	::Udm::ArchetypeAttr< Key> Key::Archetype() const { return ::Udm::ArchetypeAttr< Key>(impl); }
	::Udm::AClassAssocAttr< KeyMember, Member> Key::dstKeyMember() const { return ::Udm::AClassAssocAttr< KeyMember, Member>(impl, meta_dstKeyMember, meta_dstKeyMember_rev); }
	::Udm::ParentAttr< ::PICML::Aggregate> Key::Aggregate_parent() const { return ::Udm::ParentAttr< ::PICML::Aggregate>(impl, meta_Aggregate_parent); }
	::Udm::ParentAttr< ::PICML::Aggregate> Key::parent() const { return ::Udm::ParentAttr< ::PICML::Aggregate>(impl, ::Udm::NULLPARENTROLE); }
	void Key::Accept(Visitor &v) { v.Visit_Key(*this); }

	::Uml::Class Key::meta;
	::Uml::AssociationRole Key::meta_dstKeyMember;
	::Uml::AssociationRole Key::meta_dstKeyMember_rev;
	::Uml::CompositionParentRole Key::meta_Aggregate_parent;

	KeyMember::KeyMember() {}
	KeyMember::KeyMember(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	KeyMember::KeyMember(const KeyMember &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	KeyMember::KeyMember(KeyMember &&master) : MgaObject(master) {};

	KeyMember KeyMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	KeyMember& KeyMember::operator=(KeyMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	KeyMember KeyMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	KeyMember KeyMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	KeyMember KeyMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< KeyMember> KeyMember::Instances() { return ::Udm::InstantiatedAttr< KeyMember>(impl); }
	KeyMember KeyMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< KeyMember> KeyMember::Derived() { return ::Udm::DerivedAttr< KeyMember>(impl); }
	::Udm::ArchetypeAttr< KeyMember> KeyMember::Archetype() const { return ::Udm::ArchetypeAttr< KeyMember>(impl); }
	::Udm::ParentAttr< ::PICML::Aggregate> KeyMember::Aggregate_parent() const { return ::Udm::ParentAttr< ::PICML::Aggregate>(impl, meta_Aggregate_parent); }
	::Udm::ParentAttr< ::PICML::Aggregate> KeyMember::parent() const { return ::Udm::ParentAttr< ::PICML::Aggregate>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Key> KeyMember::srcKeyMember_end() const { return ::Udm::AssocEndAttr< ::PICML::Key>(impl, meta_srcKeyMember_end_); }
	::Udm::AssocEndAttr< ::PICML::Member> KeyMember::dstKeyMember_end() const { return ::Udm::AssocEndAttr< ::PICML::Member>(impl, meta_dstKeyMember_end_); }
	void KeyMember::Accept(Visitor &v) { v.Visit_KeyMember(*this); }

	::Uml::Class KeyMember::meta;
	::Uml::CompositionParentRole KeyMember::meta_Aggregate_parent;
	::Uml::AssociationRole KeyMember::meta_srcKeyMember_end_;
	::Uml::AssociationRole KeyMember::meta_dstKeyMember_end_;

	ArrayMember::ArrayMember() {}
	ArrayMember::ArrayMember(::Udm::ObjectImpl *impl) : Member(impl) {}
	ArrayMember::ArrayMember(const ArrayMember &master) : Member(master) {}

#ifdef UDM_RVALUE
	ArrayMember::ArrayMember(ArrayMember &&master) : Member(master) {};

	ArrayMember ArrayMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArrayMember& ArrayMember::operator=(ArrayMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArrayMember ArrayMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArrayMember ArrayMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArrayMember ArrayMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArrayMember> ArrayMember::Instances() { return ::Udm::InstantiatedAttr< ArrayMember>(impl); }
	ArrayMember ArrayMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArrayMember> ArrayMember::Derived() { return ::Udm::DerivedAttr< ArrayMember>(impl); }
	::Udm::ArchetypeAttr< ArrayMember> ArrayMember::Archetype() const { return ::Udm::ArchetypeAttr< ArrayMember>(impl); }
	::Udm::IntegerAttr ArrayMember::Size() const { return ::Udm::IntegerAttr(impl, meta_Size); }
	::Udm::ParentAttr< ::Udm::Object> ArrayMember::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::ParentAttr< ::PICML::Taggable> ArrayMember::Taggable_parent() const { return ::Udm::ParentAttr< ::PICML::Taggable>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::ParentAttr< ::PICML::TemplateParameterValueType> ArrayMember::TemplateParameterValueType_parent() const { return ::Udm::ParentAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLPARENTROLE); }
	void ArrayMember::Accept(Visitor &v) { v.Visit_ArrayMember(*this); }

	::Uml::Class ArrayMember::meta;
	::Uml::Attribute ArrayMember::meta_Size;

	NoInheritable::NoInheritable() {}
	NoInheritable::NoInheritable(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	NoInheritable::NoInheritable(const NoInheritable &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	NoInheritable::NoInheritable(NoInheritable &&master) : NamedType(master), MgaObject(master) {};

	NoInheritable NoInheritable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NoInheritable& NoInheritable::operator=(NoInheritable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NoInheritable NoInheritable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NoInheritable NoInheritable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NoInheritable NoInheritable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NoInheritable> NoInheritable::Instances() { return ::Udm::InstantiatedAttr< NoInheritable>(impl); }
	NoInheritable NoInheritable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NoInheritable> NoInheritable::Derived() { return ::Udm::DerivedAttr< NoInheritable>(impl); }
	::Udm::ArchetypeAttr< NoInheritable> NoInheritable::Archetype() const { return ::Udm::ArchetypeAttr< NoInheritable>(impl); }
	::Udm::ParentAttr< ::PICML::HasOperations> NoInheritable::HasOperations_parent() const { return ::Udm::ParentAttr< ::PICML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> NoInheritable::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class NoInheritable::meta;
	::Uml::CompositionParentRole NoInheritable::meta_HasOperations_parent;

	Member::Member() {}
	Member::Member(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Member::Member(const Member &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Member::Member(Member &&master) : MgaObject(master) {};

	Member Member::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Member& Member::operator=(Member &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Member Member::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Member Member::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Member Member::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Member> Member::Instances() { return ::Udm::InstantiatedAttr< Member>(impl); }
	Member Member::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Member> Member::Derived() { return ::Udm::DerivedAttr< Member>(impl); }
	::Udm::ArchetypeAttr< Member> Member::Archetype() const { return ::Udm::ArchetypeAttr< Member>(impl); }
	::Udm::AClassPointerAttr< KeyMember, Key> Member::srcKeyMember() const { return ::Udm::AClassPointerAttr< KeyMember, Key>(impl, meta_srcKeyMember, meta_srcKeyMember_rev); }
	::Udm::AClassAssocAttr< LabelConnection, Label> Member::dstLabelConnection() const { return ::Udm::AClassAssocAttr< LabelConnection, Label>(impl, meta_dstLabelConnection, meta_dstLabelConnection_rev); }
	::Udm::PointerAttr< MemberType> Member::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::AClassPointerAttr< MakeMemberPrivate, PrivateFlag> Member::dstMakeMemberPrivate() const { return ::Udm::AClassPointerAttr< MakeMemberPrivate, PrivateFlag>(impl, meta_dstMakeMemberPrivate, meta_dstMakeMemberPrivate_rev); }
	::Udm::ParentAttr< ::PICML::ObjectByValue> Member::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::PICML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> Member::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::PICML::Aggregate> Member::Aggregate_parent() const { return ::Udm::ParentAttr< ::PICML::Aggregate>(impl, meta_Aggregate_parent); }
	::Udm::ParentAttr< ::PICML::Exception> Member::Exception_parent() const { return ::Udm::ParentAttr< ::PICML::Exception>(impl, meta_Exception_parent); }
	::Udm::ParentAttr< ::Udm::Object> Member::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::ParentAttr< ::PICML::Taggable> Member::Taggable_parent() const { return ::Udm::ParentAttr< ::PICML::Taggable>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::ParentAttr< ::PICML::TemplateParameterValueType> Member::TemplateParameterValueType_parent() const { return ::Udm::ParentAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLPARENTROLE); }
	void Member::Accept(Visitor &v) { v.Visit_Member(*this); }

	::Uml::Class Member::meta;
	::Uml::AssociationRole Member::meta_srcKeyMember;
	::Uml::AssociationRole Member::meta_srcKeyMember_rev;
	::Uml::AssociationRole Member::meta_dstLabelConnection;
	::Uml::AssociationRole Member::meta_dstLabelConnection_rev;
	::Uml::AssociationRole Member::meta_ref;
	::Uml::AssociationRole Member::meta_dstMakeMemberPrivate;
	::Uml::AssociationRole Member::meta_dstMakeMemberPrivate_rev;
	::Uml::CompositionParentRole Member::meta_ObjectByValue_parent;
	::Uml::CompositionParentRole Member::meta_SwitchedAggregate_parent;
	::Uml::CompositionParentRole Member::meta_Aggregate_parent;
	::Uml::CompositionParentRole Member::meta_Exception_parent;

	Boxed::Boxed() {}
	Boxed::Boxed(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	Boxed::Boxed(const Boxed &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Boxed::Boxed(Boxed &&master) : NamedType(master), MgaObject(master) {};

	Boxed Boxed::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Boxed& Boxed::operator=(Boxed &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Boxed Boxed::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Boxed Boxed::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Boxed Boxed::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Boxed> Boxed::Instances() { return ::Udm::InstantiatedAttr< Boxed>(impl); }
	Boxed Boxed::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Boxed> Boxed::Derived() { return ::Udm::DerivedAttr< Boxed>(impl); }
	::Udm::ArchetypeAttr< Boxed> Boxed::Archetype() const { return ::Udm::ArchetypeAttr< Boxed>(impl); }
	::Udm::PointerAttr< MemberType> Boxed::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Prefixable> Boxed::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Boxed::Accept(Visitor &v) { v.Visit_Boxed(*this); }

	::Uml::Class Boxed::meta;
	::Uml::AssociationRole Boxed::meta_ref;

	Alias::Alias() {}
	Alias::Alias(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	Alias::Alias(const Alias &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Alias::Alias(Alias &&master) : NoInheritable(master), MgaObject(master) {};

	Alias Alias::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Alias& Alias::operator=(Alias &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Alias Alias::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Alias Alias::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Alias Alias::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Alias> Alias::Instances() { return ::Udm::InstantiatedAttr< Alias>(impl); }
	Alias Alias::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Alias> Alias::Derived() { return ::Udm::DerivedAttr< Alias>(impl); }
	::Udm::ArchetypeAttr< Alias> Alias::Archetype() const { return ::Udm::ArchetypeAttr< Alias>(impl); }
	::Udm::PointerAttr< MemberType> Alias::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> Alias::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Alias::Accept(Visitor &v) { v.Visit_Alias(*this); }

	::Uml::Class Alias::meta;
	::Uml::AssociationRole Alias::meta_ref;

	Collection::Collection() {}
	Collection::Collection(::Udm::ObjectImpl *impl) : ComplexType(impl),NoInheritable(impl), MgaObject(impl) {}
	Collection::Collection(const Collection &master) : ComplexType(master),NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Collection::Collection(Collection &&master) : ComplexType(master),NoInheritable(master), MgaObject(master) {};

	Collection Collection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Collection& Collection::operator=(Collection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Collection Collection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Collection Collection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Collection Collection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Collection> Collection::Instances() { return ::Udm::InstantiatedAttr< Collection>(impl); }
	Collection Collection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Collection> Collection::Derived() { return ::Udm::DerivedAttr< Collection>(impl); }
	::Udm::ArchetypeAttr< Collection> Collection::Archetype() const { return ::Udm::ArchetypeAttr< Collection>(impl); }
	::Udm::StringAttr Collection::bound() const { return ::Udm::StringAttr(impl, meta_bound); }
	::Udm::PointerAttr< MemberType> Collection::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> Collection::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Collection::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Collection::Accept(Visitor &v) { v.Visit_Collection(*this); }

	::Uml::Class Collection::meta;
	::Uml::Attribute Collection::meta_bound;
	::Uml::AssociationRole Collection::meta_ref;
	::Uml::CompositionParentRole Collection::meta_ConnectorObject_parent;

	NamedType::NamedType() {}
	NamedType::NamedType(::Udm::ObjectImpl *impl) : Taggable(impl),MemberType(impl), MgaObject(impl) {}
	NamedType::NamedType(const NamedType &master) : Taggable(master),MemberType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	NamedType::NamedType(NamedType &&master) : Taggable(master),MemberType(master), MgaObject(master) {};

	NamedType NamedType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NamedType& NamedType::operator=(NamedType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NamedType NamedType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NamedType NamedType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NamedType NamedType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NamedType> NamedType::Instances() { return ::Udm::InstantiatedAttr< NamedType>(impl); }
	NamedType NamedType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NamedType> NamedType::Derived() { return ::Udm::DerivedAttr< NamedType>(impl); }
	::Udm::ArchetypeAttr< NamedType> NamedType::Archetype() const { return ::Udm::ArchetypeAttr< NamedType>(impl); }
	::Udm::ParentAttr< ::PICML::File> NamedType::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> NamedType::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> NamedType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class NamedType::meta;
	::Uml::CompositionParentRole NamedType::meta_File_parent;
	::Uml::CompositionParentRole NamedType::meta_Package_parent;

	Discriminator::Discriminator() {}
	Discriminator::Discriminator(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Discriminator::Discriminator(const Discriminator &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Discriminator::Discriminator(Discriminator &&master) : MgaObject(master) {};

	Discriminator Discriminator::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Discriminator& Discriminator::operator=(Discriminator &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Discriminator Discriminator::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Discriminator Discriminator::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Discriminator Discriminator::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Discriminator> Discriminator::Instances() { return ::Udm::InstantiatedAttr< Discriminator>(impl); }
	Discriminator Discriminator::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Discriminator> Discriminator::Derived() { return ::Udm::DerivedAttr< Discriminator>(impl); }
	::Udm::ArchetypeAttr< Discriminator> Discriminator::Archetype() const { return ::Udm::ArchetypeAttr< Discriminator>(impl); }
	::Udm::PointerAttr< ConstantType> Discriminator::ref() const { return ::Udm::PointerAttr< ConstantType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> Discriminator::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> Discriminator::parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	void Discriminator::Accept(Visitor &v) { v.Visit_Discriminator(*this); }

	::Uml::Class Discriminator::meta;
	::Uml::AssociationRole Discriminator::meta_ref;
	::Uml::CompositionParentRole Discriminator::meta_SwitchedAggregate_parent;

	MemberType::MemberType() {}
	MemberType::MemberType(::Udm::ObjectImpl *impl) : TemplateParameterValueType(impl), MgaObject(impl) {}
	MemberType::MemberType(const MemberType &master) : TemplateParameterValueType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	MemberType::MemberType(MemberType &&master) : TemplateParameterValueType(master), MgaObject(master) {};

	MemberType MemberType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MemberType& MemberType::operator=(MemberType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MemberType MemberType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MemberType MemberType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MemberType MemberType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MemberType> MemberType::Instances() { return ::Udm::InstantiatedAttr< MemberType>(impl); }
	MemberType MemberType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MemberType> MemberType::Derived() { return ::Udm::DerivedAttr< MemberType>(impl); }
	::Udm::ArchetypeAttr< MemberType> MemberType::Archetype() const { return ::Udm::ArchetypeAttr< MemberType>(impl); }
	::Udm::AssocAttr< SimpleProperty> MemberType::referedbySimpleProperty() const { return ::Udm::AssocAttr< SimpleProperty>(impl, meta_referedbySimpleProperty); }
	::Udm::AssocAttr< DataType> MemberType::referedbyDataType() const { return ::Udm::AssocAttr< DataType>(impl, meta_referedbyDataType); }
	::Udm::AssocAttr< ParameterType> MemberType::referedbyParameterType() const { return ::Udm::AssocAttr< ParameterType>(impl, meta_referedbyParameterType); }
	::Udm::AssocAttr< ReturnType> MemberType::referedbyReturnType() const { return ::Udm::AssocAttr< ReturnType>(impl, meta_referedbyReturnType); }
	::Udm::AssocAttr< AttributeMember> MemberType::referedbyAttributeMember() const { return ::Udm::AssocAttr< AttributeMember>(impl, meta_referedbyAttributeMember); }
	::Udm::AssocAttr< Member> MemberType::referedbyMember() const { return ::Udm::AssocAttr< Member>(impl, meta_referedbyMember); }
	::Udm::AssocAttr< Boxed> MemberType::referedbyBoxed() const { return ::Udm::AssocAttr< Boxed>(impl, meta_referedbyBoxed); }
	::Udm::AssocAttr< Alias> MemberType::referedbyAlias() const { return ::Udm::AssocAttr< Alias>(impl, meta_referedbyAlias); }
	::Udm::AssocAttr< Collection> MemberType::referedbyCollection() const { return ::Udm::AssocAttr< Collection>(impl, meta_referedbyCollection); }
	::Udm::ParentAttr< ::Udm::Object> MemberType::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MemberType::meta;
	::Uml::AssociationRole MemberType::meta_referedbySimpleProperty;
	::Uml::AssociationRole MemberType::meta_referedbyDataType;
	::Uml::AssociationRole MemberType::meta_referedbyParameterType;
	::Uml::AssociationRole MemberType::meta_referedbyReturnType;
	::Uml::AssociationRole MemberType::meta_referedbyAttributeMember;
	::Uml::AssociationRole MemberType::meta_referedbyMember;
	::Uml::AssociationRole MemberType::meta_referedbyBoxed;
	::Uml::AssociationRole MemberType::meta_referedbyAlias;
	::Uml::AssociationRole MemberType::meta_referedbyCollection;

	LabelConnection::LabelConnection() {}
	LabelConnection::LabelConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LabelConnection::LabelConnection(const LabelConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LabelConnection::LabelConnection(LabelConnection &&master) : MgaObject(master) {};

	LabelConnection LabelConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LabelConnection& LabelConnection::operator=(LabelConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LabelConnection LabelConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LabelConnection LabelConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LabelConnection LabelConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LabelConnection> LabelConnection::Instances() { return ::Udm::InstantiatedAttr< LabelConnection>(impl); }
	LabelConnection LabelConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LabelConnection> LabelConnection::Derived() { return ::Udm::DerivedAttr< LabelConnection>(impl); }
	::Udm::ArchetypeAttr< LabelConnection> LabelConnection::Archetype() const { return ::Udm::ArchetypeAttr< LabelConnection>(impl); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> LabelConnection::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> LabelConnection::parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Member> LabelConnection::srcLabelConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Member>(impl, meta_srcLabelConnection_end_); }
	::Udm::AssocEndAttr< ::PICML::Label> LabelConnection::dstLabelConnection_end() const { return ::Udm::AssocEndAttr< ::PICML::Label>(impl, meta_dstLabelConnection_end_); }
	void LabelConnection::Accept(Visitor &v) { v.Visit_LabelConnection(*this); }

	::Uml::Class LabelConnection::meta;
	::Uml::CompositionParentRole LabelConnection::meta_SwitchedAggregate_parent;
	::Uml::AssociationRole LabelConnection::meta_srcLabelConnection_end_;
	::Uml::AssociationRole LabelConnection::meta_dstLabelConnection_end_;

	SwitchedAggregate::SwitchedAggregate() {}
	SwitchedAggregate::SwitchedAggregate(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	SwitchedAggregate::SwitchedAggregate(const SwitchedAggregate &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	SwitchedAggregate::SwitchedAggregate(SwitchedAggregate &&master) : NoInheritable(master), MgaObject(master) {};

	SwitchedAggregate SwitchedAggregate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SwitchedAggregate& SwitchedAggregate::operator=(SwitchedAggregate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SwitchedAggregate SwitchedAggregate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SwitchedAggregate SwitchedAggregate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SwitchedAggregate SwitchedAggregate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SwitchedAggregate> SwitchedAggregate::Instances() { return ::Udm::InstantiatedAttr< SwitchedAggregate>(impl); }
	SwitchedAggregate SwitchedAggregate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SwitchedAggregate> SwitchedAggregate::Derived() { return ::Udm::DerivedAttr< SwitchedAggregate>(impl); }
	::Udm::ArchetypeAttr< SwitchedAggregate> SwitchedAggregate::Archetype() const { return ::Udm::ArchetypeAttr< SwitchedAggregate>(impl); }
	::Udm::ChildrenAttr< ::PICML::LabelConnection> SwitchedAggregate::LabelConnection_children() const { return ::Udm::ChildrenAttr< ::PICML::LabelConnection>(impl, meta_LabelConnection_children); }
	::Udm::ChildAttr< ::PICML::Discriminator> SwitchedAggregate::Discriminator_child() const { return ::Udm::ChildAttr< ::PICML::Discriminator>(impl, meta_Discriminator_child); }
	::Udm::ChildrenAttr< ::PICML::Member> SwitchedAggregate::Member_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::PICML::Label> SwitchedAggregate::Label_children() const { return ::Udm::ChildrenAttr< ::PICML::Label>(impl, meta_Label_children); }
	::Udm::ChildrenAttr< ::PICML::ArrayMember> SwitchedAggregate::ArrayMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArrayMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Member> SwitchedAggregate::Member_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Discriminator> SwitchedAggregate::Discriminator_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Discriminator>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LabelConnection> SwitchedAggregate::LabelConnection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LabelConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Label> SwitchedAggregate::Label_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Label>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> SwitchedAggregate::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> SwitchedAggregate::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void SwitchedAggregate::Accept(Visitor &v) { v.Visit_SwitchedAggregate(*this); }

	::Uml::Class SwitchedAggregate::meta;
	::Uml::CompositionChildRole SwitchedAggregate::meta_LabelConnection_children;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Discriminator_child;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Member_children;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Label_children;

	Label::Label() {}
	Label::Label(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Label::Label(const Label &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Label::Label(Label &&master) : MgaObject(master) {};

	Label Label::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Label& Label::operator=(Label &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Label Label::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Label Label::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Label Label::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Label> Label::Instances() { return ::Udm::InstantiatedAttr< Label>(impl); }
	Label Label::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Label> Label::Derived() { return ::Udm::DerivedAttr< Label>(impl); }
	::Udm::ArchetypeAttr< Label> Label::Archetype() const { return ::Udm::ArchetypeAttr< Label>(impl); }
	::Udm::AClassPointerAttr< LabelConnection, Member> Label::srcLabelConnection() const { return ::Udm::AClassPointerAttr< LabelConnection, Member>(impl, meta_srcLabelConnection, meta_srcLabelConnection_rev); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> Label::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::PICML::SwitchedAggregate> Label::parent() const { return ::Udm::ParentAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	void Label::Accept(Visitor &v) { v.Visit_Label(*this); }

	::Uml::Class Label::meta;
	::Uml::AssociationRole Label::meta_srcLabelConnection;
	::Uml::AssociationRole Label::meta_srcLabelConnection_rev;
	::Uml::CompositionParentRole Label::meta_SwitchedAggregate_parent;

	Aggregate::Aggregate() {}
	Aggregate::Aggregate(::Udm::ObjectImpl *impl) : ComplexType(impl),NoInheritable(impl), MgaObject(impl) {}
	Aggregate::Aggregate(const Aggregate &master) : ComplexType(master),NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Aggregate::Aggregate(Aggregate &&master) : ComplexType(master),NoInheritable(master), MgaObject(master) {};

	Aggregate Aggregate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Aggregate& Aggregate::operator=(Aggregate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Aggregate Aggregate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Aggregate Aggregate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Aggregate Aggregate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Aggregate> Aggregate::Instances() { return ::Udm::InstantiatedAttr< Aggregate>(impl); }
	Aggregate Aggregate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Aggregate> Aggregate::Derived() { return ::Udm::DerivedAttr< Aggregate>(impl); }
	::Udm::ArchetypeAttr< Aggregate> Aggregate::Archetype() const { return ::Udm::ArchetypeAttr< Aggregate>(impl); }
	::Udm::ChildAttr< ::PICML::Key> Aggregate::Key_child() const { return ::Udm::ChildAttr< ::PICML::Key>(impl, meta_Key_child); }
	::Udm::ChildrenAttr< ::PICML::KeyMember> Aggregate::KeyMember_children() const { return ::Udm::ChildrenAttr< ::PICML::KeyMember>(impl, meta_KeyMember_children); }
	::Udm::ChildrenAttr< ::PICML::Member> Aggregate::Member_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::PICML::Key> Aggregate::Key_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Key>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::KeyMember> Aggregate::KeyMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::KeyMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ArrayMember> Aggregate::ArrayMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArrayMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Member> Aggregate::Member_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Aggregate::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> Aggregate::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Aggregate::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Aggregate::Accept(Visitor &v) { v.Visit_Aggregate(*this); }

	::Uml::Class Aggregate::meta;
	::Uml::CompositionChildRole Aggregate::meta_Key_child;
	::Uml::CompositionChildRole Aggregate::meta_KeyMember_children;
	::Uml::CompositionChildRole Aggregate::meta_Member_children;
	::Uml::CompositionParentRole Aggregate::meta_ConnectorObject_parent;

	EnumValue::EnumValue() {}
	EnumValue::EnumValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EnumValue::EnumValue(const EnumValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EnumValue::EnumValue(EnumValue &&master) : MgaObject(master) {};

	EnumValue EnumValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EnumValue& EnumValue::operator=(EnumValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EnumValue EnumValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EnumValue EnumValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EnumValue EnumValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EnumValue> EnumValue::Instances() { return ::Udm::InstantiatedAttr< EnumValue>(impl); }
	EnumValue EnumValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EnumValue> EnumValue::Derived() { return ::Udm::DerivedAttr< EnumValue>(impl); }
	::Udm::ArchetypeAttr< EnumValue> EnumValue::Archetype() const { return ::Udm::ArchetypeAttr< EnumValue>(impl); }
	::Udm::ParentAttr< ::PICML::Enum> EnumValue::Enum_parent() const { return ::Udm::ParentAttr< ::PICML::Enum>(impl, meta_Enum_parent); }
	::Udm::ParentAttr< ::PICML::Enum> EnumValue::parent() const { return ::Udm::ParentAttr< ::PICML::Enum>(impl, ::Udm::NULLPARENTROLE); }
	void EnumValue::Accept(Visitor &v) { v.Visit_EnumValue(*this); }

	::Uml::Class EnumValue::meta;
	::Uml::CompositionParentRole EnumValue::meta_Enum_parent;

	Enum::Enum() {}
	Enum::Enum(::Udm::ObjectImpl *impl) : SimpleType(impl),NoInheritable(impl),ConstantType(impl), MgaObject(impl) {}
	Enum::Enum(const Enum &master) : SimpleType(master),NoInheritable(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Enum::Enum(Enum &&master) : SimpleType(master),NoInheritable(master),ConstantType(master), MgaObject(master) {};

	Enum Enum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Enum& Enum::operator=(Enum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Enum Enum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Enum Enum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Enum Enum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Enum> Enum::Instances() { return ::Udm::InstantiatedAttr< Enum>(impl); }
	Enum Enum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Enum> Enum::Derived() { return ::Udm::DerivedAttr< Enum>(impl); }
	::Udm::ArchetypeAttr< Enum> Enum::Archetype() const { return ::Udm::ArchetypeAttr< Enum>(impl); }
	::Udm::ChildrenAttr< ::PICML::EnumValue> Enum::EnumValue_children() const { return ::Udm::ChildrenAttr< ::PICML::EnumValue>(impl, meta_EnumValue_children); }
	::Udm::ChildrenAttr< ::PICML::EnumValue> Enum::EnumValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EnumValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Enum::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> Enum::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Enum::Accept(Visitor &v) { v.Visit_Enum(*this); }

	::Uml::Class Enum::meta;
	::Uml::CompositionChildRole Enum::meta_EnumValue_children;

	Char::Char() {}
	Char::Char(::Udm::ObjectImpl *impl) : CharType(impl), MgaObject(impl) {}
	Char::Char(const Char &master) : CharType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Char::Char(Char &&master) : CharType(master), MgaObject(master) {};

	Char Char::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Char& Char::operator=(Char &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Char Char::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Char Char::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Char Char::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Char> Char::Instances() { return ::Udm::InstantiatedAttr< Char>(impl); }
	Char Char::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Char> Char::Derived() { return ::Udm::DerivedAttr< Char>(impl); }
	::Udm::ArchetypeAttr< Char> Char::Archetype() const { return ::Udm::ArchetypeAttr< Char>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> Char::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void Char::Accept(Visitor &v) { v.Visit_Char(*this); }

	::Uml::Class Char::meta;

	StringType::StringType() {}
	StringType::StringType(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	StringType::StringType(const StringType &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	StringType::StringType(StringType &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	StringType StringType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	StringType& StringType::operator=(StringType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	StringType StringType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	StringType StringType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	StringType StringType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< StringType> StringType::Instances() { return ::Udm::InstantiatedAttr< StringType>(impl); }
	StringType StringType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< StringType> StringType::Derived() { return ::Udm::DerivedAttr< StringType>(impl); }
	::Udm::ArchetypeAttr< StringType> StringType::Archetype() const { return ::Udm::ArchetypeAttr< StringType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> StringType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class StringType::meta;

	WideString::WideString() {}
	WideString::WideString(::Udm::ObjectImpl *impl) : StringType(impl), MgaObject(impl) {}
	WideString::WideString(const WideString &master) : StringType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	WideString::WideString(WideString &&master) : StringType(master), MgaObject(master) {};

	WideString WideString::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WideString& WideString::operator=(WideString &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WideString WideString::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WideString WideString::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WideString WideString::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WideString> WideString::Instances() { return ::Udm::InstantiatedAttr< WideString>(impl); }
	WideString WideString::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WideString> WideString::Derived() { return ::Udm::DerivedAttr< WideString>(impl); }
	::Udm::ArchetypeAttr< WideString> WideString::Archetype() const { return ::Udm::ArchetypeAttr< WideString>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> WideString::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void WideString::Accept(Visitor &v) { v.Visit_WideString(*this); }

	::Uml::Class WideString::meta;

	WideChar::WideChar() {}
	WideChar::WideChar(::Udm::ObjectImpl *impl) : CharType(impl), MgaObject(impl) {}
	WideChar::WideChar(const WideChar &master) : CharType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	WideChar::WideChar(WideChar &&master) : CharType(master), MgaObject(master) {};

	WideChar WideChar::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WideChar& WideChar::operator=(WideChar &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WideChar WideChar::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WideChar WideChar::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WideChar WideChar::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WideChar> WideChar::Instances() { return ::Udm::InstantiatedAttr< WideChar>(impl); }
	WideChar WideChar::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WideChar> WideChar::Derived() { return ::Udm::DerivedAttr< WideChar>(impl); }
	::Udm::ArchetypeAttr< WideChar> WideChar::Archetype() const { return ::Udm::ArchetypeAttr< WideChar>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> WideChar::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void WideChar::Accept(Visitor &v) { v.Visit_WideChar(*this); }

	::Uml::Class WideChar::meta;

	CharType::CharType() {}
	CharType::CharType(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	CharType::CharType(const CharType &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	CharType::CharType(CharType &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	CharType CharType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CharType& CharType::operator=(CharType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CharType CharType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CharType CharType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CharType CharType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CharType> CharType::Instances() { return ::Udm::InstantiatedAttr< CharType>(impl); }
	CharType CharType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CharType> CharType::Derived() { return ::Udm::DerivedAttr< CharType>(impl); }
	::Udm::ArchetypeAttr< CharType> CharType::Archetype() const { return ::Udm::ArchetypeAttr< CharType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> CharType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class CharType::meta;

	UnsignedLongInteger::UnsignedLongInteger() {}
	UnsignedLongInteger::UnsignedLongInteger(::Udm::ObjectImpl *impl) : UnsignedIntegerType(impl), MgaObject(impl) {}
	UnsignedLongInteger::UnsignedLongInteger(const UnsignedLongInteger &master) : UnsignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	UnsignedLongInteger::UnsignedLongInteger(UnsignedLongInteger &&master) : UnsignedIntegerType(master), MgaObject(master) {};

	UnsignedLongInteger UnsignedLongInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	UnsignedLongInteger& UnsignedLongInteger::operator=(UnsignedLongInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	UnsignedLongInteger UnsignedLongInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	UnsignedLongInteger UnsignedLongInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	UnsignedLongInteger UnsignedLongInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< UnsignedLongInteger> UnsignedLongInteger::Instances() { return ::Udm::InstantiatedAttr< UnsignedLongInteger>(impl); }
	UnsignedLongInteger UnsignedLongInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< UnsignedLongInteger> UnsignedLongInteger::Derived() { return ::Udm::DerivedAttr< UnsignedLongInteger>(impl); }
	::Udm::ArchetypeAttr< UnsignedLongInteger> UnsignedLongInteger::Archetype() const { return ::Udm::ArchetypeAttr< UnsignedLongInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> UnsignedLongInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void UnsignedLongInteger::Accept(Visitor &v) { v.Visit_UnsignedLongInteger(*this); }

	::Uml::Class UnsignedLongInteger::meta;

	UnsignedLongLongInteger::UnsignedLongLongInteger() {}
	UnsignedLongLongInteger::UnsignedLongLongInteger(::Udm::ObjectImpl *impl) : UnsignedIntegerType(impl), MgaObject(impl) {}
	UnsignedLongLongInteger::UnsignedLongLongInteger(const UnsignedLongLongInteger &master) : UnsignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	UnsignedLongLongInteger::UnsignedLongLongInteger(UnsignedLongLongInteger &&master) : UnsignedIntegerType(master), MgaObject(master) {};

	UnsignedLongLongInteger UnsignedLongLongInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	UnsignedLongLongInteger& UnsignedLongLongInteger::operator=(UnsignedLongLongInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	UnsignedLongLongInteger UnsignedLongLongInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	UnsignedLongLongInteger UnsignedLongLongInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	UnsignedLongLongInteger UnsignedLongLongInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< UnsignedLongLongInteger> UnsignedLongLongInteger::Instances() { return ::Udm::InstantiatedAttr< UnsignedLongLongInteger>(impl); }
	UnsignedLongLongInteger UnsignedLongLongInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< UnsignedLongLongInteger> UnsignedLongLongInteger::Derived() { return ::Udm::DerivedAttr< UnsignedLongLongInteger>(impl); }
	::Udm::ArchetypeAttr< UnsignedLongLongInteger> UnsignedLongLongInteger::Archetype() const { return ::Udm::ArchetypeAttr< UnsignedLongLongInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> UnsignedLongLongInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void UnsignedLongLongInteger::Accept(Visitor &v) { v.Visit_UnsignedLongLongInteger(*this); }

	::Uml::Class UnsignedLongLongInteger::meta;

	UnsignedShortInteger::UnsignedShortInteger() {}
	UnsignedShortInteger::UnsignedShortInteger(::Udm::ObjectImpl *impl) : UnsignedIntegerType(impl), MgaObject(impl) {}
	UnsignedShortInteger::UnsignedShortInteger(const UnsignedShortInteger &master) : UnsignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	UnsignedShortInteger::UnsignedShortInteger(UnsignedShortInteger &&master) : UnsignedIntegerType(master), MgaObject(master) {};

	UnsignedShortInteger UnsignedShortInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	UnsignedShortInteger& UnsignedShortInteger::operator=(UnsignedShortInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	UnsignedShortInteger UnsignedShortInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	UnsignedShortInteger UnsignedShortInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	UnsignedShortInteger UnsignedShortInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< UnsignedShortInteger> UnsignedShortInteger::Instances() { return ::Udm::InstantiatedAttr< UnsignedShortInteger>(impl); }
	UnsignedShortInteger UnsignedShortInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< UnsignedShortInteger> UnsignedShortInteger::Derived() { return ::Udm::DerivedAttr< UnsignedShortInteger>(impl); }
	::Udm::ArchetypeAttr< UnsignedShortInteger> UnsignedShortInteger::Archetype() const { return ::Udm::ArchetypeAttr< UnsignedShortInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> UnsignedShortInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void UnsignedShortInteger::Accept(Visitor &v) { v.Visit_UnsignedShortInteger(*this); }

	::Uml::Class UnsignedShortInteger::meta;

	LongLongInteger::LongLongInteger() {}
	LongLongInteger::LongLongInteger(::Udm::ObjectImpl *impl) : SignedIntegerType(impl), MgaObject(impl) {}
	LongLongInteger::LongLongInteger(const LongLongInteger &master) : SignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LongLongInteger::LongLongInteger(LongLongInteger &&master) : SignedIntegerType(master), MgaObject(master) {};

	LongLongInteger LongLongInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LongLongInteger& LongLongInteger::operator=(LongLongInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LongLongInteger LongLongInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LongLongInteger LongLongInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LongLongInteger LongLongInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LongLongInteger> LongLongInteger::Instances() { return ::Udm::InstantiatedAttr< LongLongInteger>(impl); }
	LongLongInteger LongLongInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LongLongInteger> LongLongInteger::Derived() { return ::Udm::DerivedAttr< LongLongInteger>(impl); }
	::Udm::ArchetypeAttr< LongLongInteger> LongLongInteger::Archetype() const { return ::Udm::ArchetypeAttr< LongLongInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> LongLongInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void LongLongInteger::Accept(Visitor &v) { v.Visit_LongLongInteger(*this); }

	::Uml::Class LongLongInteger::meta;

	UnsignedIntegerType::UnsignedIntegerType() {}
	UnsignedIntegerType::UnsignedIntegerType(::Udm::ObjectImpl *impl) : IntegerType(impl), MgaObject(impl) {}
	UnsignedIntegerType::UnsignedIntegerType(const UnsignedIntegerType &master) : IntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	UnsignedIntegerType::UnsignedIntegerType(UnsignedIntegerType &&master) : IntegerType(master), MgaObject(master) {};

	UnsignedIntegerType UnsignedIntegerType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	UnsignedIntegerType& UnsignedIntegerType::operator=(UnsignedIntegerType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	UnsignedIntegerType UnsignedIntegerType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	UnsignedIntegerType UnsignedIntegerType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	UnsignedIntegerType UnsignedIntegerType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< UnsignedIntegerType> UnsignedIntegerType::Instances() { return ::Udm::InstantiatedAttr< UnsignedIntegerType>(impl); }
	UnsignedIntegerType UnsignedIntegerType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< UnsignedIntegerType> UnsignedIntegerType::Derived() { return ::Udm::DerivedAttr< UnsignedIntegerType>(impl); }
	::Udm::ArchetypeAttr< UnsignedIntegerType> UnsignedIntegerType::Archetype() const { return ::Udm::ArchetypeAttr< UnsignedIntegerType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> UnsignedIntegerType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class UnsignedIntegerType::meta;

	SignedIntegerType::SignedIntegerType() {}
	SignedIntegerType::SignedIntegerType(::Udm::ObjectImpl *impl) : IntegerType(impl), MgaObject(impl) {}
	SignedIntegerType::SignedIntegerType(const SignedIntegerType &master) : IntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	SignedIntegerType::SignedIntegerType(SignedIntegerType &&master) : IntegerType(master), MgaObject(master) {};

	SignedIntegerType SignedIntegerType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SignedIntegerType& SignedIntegerType::operator=(SignedIntegerType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SignedIntegerType SignedIntegerType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SignedIntegerType SignedIntegerType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SignedIntegerType SignedIntegerType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SignedIntegerType> SignedIntegerType::Instances() { return ::Udm::InstantiatedAttr< SignedIntegerType>(impl); }
	SignedIntegerType SignedIntegerType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SignedIntegerType> SignedIntegerType::Derived() { return ::Udm::DerivedAttr< SignedIntegerType>(impl); }
	::Udm::ArchetypeAttr< SignedIntegerType> SignedIntegerType::Archetype() const { return ::Udm::ArchetypeAttr< SignedIntegerType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> SignedIntegerType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SignedIntegerType::meta;

	LongDoubleNumber::LongDoubleNumber() {}
	LongDoubleNumber::LongDoubleNumber(::Udm::ObjectImpl *impl) : FloatingPointType(impl), MgaObject(impl) {}
	LongDoubleNumber::LongDoubleNumber(const LongDoubleNumber &master) : FloatingPointType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LongDoubleNumber::LongDoubleNumber(LongDoubleNumber &&master) : FloatingPointType(master), MgaObject(master) {};

	LongDoubleNumber LongDoubleNumber::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LongDoubleNumber& LongDoubleNumber::operator=(LongDoubleNumber &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LongDoubleNumber LongDoubleNumber::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LongDoubleNumber LongDoubleNumber::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LongDoubleNumber LongDoubleNumber::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LongDoubleNumber> LongDoubleNumber::Instances() { return ::Udm::InstantiatedAttr< LongDoubleNumber>(impl); }
	LongDoubleNumber LongDoubleNumber::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LongDoubleNumber> LongDoubleNumber::Derived() { return ::Udm::DerivedAttr< LongDoubleNumber>(impl); }
	::Udm::ArchetypeAttr< LongDoubleNumber> LongDoubleNumber::Archetype() const { return ::Udm::ArchetypeAttr< LongDoubleNumber>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> LongDoubleNumber::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void LongDoubleNumber::Accept(Visitor &v) { v.Visit_LongDoubleNumber(*this); }

	::Uml::Class LongDoubleNumber::meta;

	IntegerType::IntegerType() {}
	IntegerType::IntegerType(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	IntegerType::IntegerType(const IntegerType &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	IntegerType::IntegerType(IntegerType &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	IntegerType IntegerType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	IntegerType& IntegerType::operator=(IntegerType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	IntegerType IntegerType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	IntegerType IntegerType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	IntegerType IntegerType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< IntegerType> IntegerType::Instances() { return ::Udm::InstantiatedAttr< IntegerType>(impl); }
	IntegerType IntegerType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< IntegerType> IntegerType::Derived() { return ::Udm::DerivedAttr< IntegerType>(impl); }
	::Udm::ArchetypeAttr< IntegerType> IntegerType::Archetype() const { return ::Udm::ArchetypeAttr< IntegerType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> IntegerType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class IntegerType::meta;

	FloatingPointType::FloatingPointType() {}
	FloatingPointType::FloatingPointType(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	FloatingPointType::FloatingPointType(const FloatingPointType &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	FloatingPointType::FloatingPointType(FloatingPointType &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	FloatingPointType FloatingPointType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FloatingPointType& FloatingPointType::operator=(FloatingPointType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FloatingPointType FloatingPointType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FloatingPointType FloatingPointType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FloatingPointType FloatingPointType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FloatingPointType> FloatingPointType::Instances() { return ::Udm::InstantiatedAttr< FloatingPointType>(impl); }
	FloatingPointType FloatingPointType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FloatingPointType> FloatingPointType::Derived() { return ::Udm::DerivedAttr< FloatingPointType>(impl); }
	::Udm::ArchetypeAttr< FloatingPointType> FloatingPointType::Archetype() const { return ::Udm::ArchetypeAttr< FloatingPointType>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> FloatingPointType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class FloatingPointType::meta;

	DoubleNumber::DoubleNumber() {}
	DoubleNumber::DoubleNumber(::Udm::ObjectImpl *impl) : FloatingPointType(impl), MgaObject(impl) {}
	DoubleNumber::DoubleNumber(const DoubleNumber &master) : FloatingPointType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	DoubleNumber::DoubleNumber(DoubleNumber &&master) : FloatingPointType(master), MgaObject(master) {};

	DoubleNumber DoubleNumber::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DoubleNumber& DoubleNumber::operator=(DoubleNumber &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DoubleNumber DoubleNumber::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DoubleNumber DoubleNumber::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DoubleNumber DoubleNumber::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DoubleNumber> DoubleNumber::Instances() { return ::Udm::InstantiatedAttr< DoubleNumber>(impl); }
	DoubleNumber DoubleNumber::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DoubleNumber> DoubleNumber::Derived() { return ::Udm::DerivedAttr< DoubleNumber>(impl); }
	::Udm::ArchetypeAttr< DoubleNumber> DoubleNumber::Archetype() const { return ::Udm::ArchetypeAttr< DoubleNumber>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> DoubleNumber::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void DoubleNumber::Accept(Visitor &v) { v.Visit_DoubleNumber(*this); }

	::Uml::Class DoubleNumber::meta;

	TypeKind::TypeKind() {}
	TypeKind::TypeKind(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	TypeKind::TypeKind(const TypeKind &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TypeKind::TypeKind(TypeKind &&master) : PredefinedType(master), MgaObject(master) {};

	TypeKind TypeKind::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TypeKind& TypeKind::operator=(TypeKind &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TypeKind TypeKind::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TypeKind TypeKind::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TypeKind TypeKind::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TypeKind> TypeKind::Instances() { return ::Udm::InstantiatedAttr< TypeKind>(impl); }
	TypeKind TypeKind::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TypeKind> TypeKind::Derived() { return ::Udm::DerivedAttr< TypeKind>(impl); }
	::Udm::ArchetypeAttr< TypeKind> TypeKind::Archetype() const { return ::Udm::ArchetypeAttr< TypeKind>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> TypeKind::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void TypeKind::Accept(Visitor &v) { v.Visit_TypeKind(*this); }

	::Uml::Class TypeKind::meta;

	TypeEncoding::TypeEncoding() {}
	TypeEncoding::TypeEncoding(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	TypeEncoding::TypeEncoding(const TypeEncoding &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TypeEncoding::TypeEncoding(TypeEncoding &&master) : PredefinedType(master), MgaObject(master) {};

	TypeEncoding TypeEncoding::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TypeEncoding& TypeEncoding::operator=(TypeEncoding &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TypeEncoding TypeEncoding::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TypeEncoding TypeEncoding::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TypeEncoding TypeEncoding::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TypeEncoding> TypeEncoding::Instances() { return ::Udm::InstantiatedAttr< TypeEncoding>(impl); }
	TypeEncoding TypeEncoding::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TypeEncoding> TypeEncoding::Derived() { return ::Udm::DerivedAttr< TypeEncoding>(impl); }
	::Udm::ArchetypeAttr< TypeEncoding> TypeEncoding::Archetype() const { return ::Udm::ArchetypeAttr< TypeEncoding>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> TypeEncoding::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void TypeEncoding::Accept(Visitor &v) { v.Visit_TypeEncoding(*this); }

	::Uml::Class TypeEncoding::meta;

	GenericValue::GenericValue() {}
	GenericValue::GenericValue(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	GenericValue::GenericValue(const GenericValue &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericValue::GenericValue(GenericValue &&master) : PredefinedType(master), MgaObject(master) {};

	GenericValue GenericValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericValue& GenericValue::operator=(GenericValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericValue GenericValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericValue GenericValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericValue GenericValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericValue> GenericValue::Instances() { return ::Udm::InstantiatedAttr< GenericValue>(impl); }
	GenericValue GenericValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericValue> GenericValue::Derived() { return ::Udm::DerivedAttr< GenericValue>(impl); }
	::Udm::ArchetypeAttr< GenericValue> GenericValue::Archetype() const { return ::Udm::ArchetypeAttr< GenericValue>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> GenericValue::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericValue::Accept(Visitor &v) { v.Visit_GenericValue(*this); }

	::Uml::Class GenericValue::meta;

	GenericValueObject::GenericValueObject() {}
	GenericValueObject::GenericValueObject(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	GenericValueObject::GenericValueObject(const GenericValueObject &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericValueObject::GenericValueObject(GenericValueObject &&master) : PredefinedType(master), MgaObject(master) {};

	GenericValueObject GenericValueObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericValueObject& GenericValueObject::operator=(GenericValueObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericValueObject GenericValueObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericValueObject GenericValueObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericValueObject GenericValueObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericValueObject> GenericValueObject::Instances() { return ::Udm::InstantiatedAttr< GenericValueObject>(impl); }
	GenericValueObject GenericValueObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericValueObject> GenericValueObject::Derived() { return ::Udm::DerivedAttr< GenericValueObject>(impl); }
	::Udm::ArchetypeAttr< GenericValueObject> GenericValueObject::Archetype() const { return ::Udm::ArchetypeAttr< GenericValueObject>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> GenericValueObject::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericValueObject::Accept(Visitor &v) { v.Visit_GenericValueObject(*this); }

	::Uml::Class GenericValueObject::meta;

	GenericObject::GenericObject() {}
	GenericObject::GenericObject(::Udm::ObjectImpl *impl) : PredefinedType(impl),Provideable(impl), MgaObject(impl) {}
	GenericObject::GenericObject(const GenericObject &master) : PredefinedType(master),Provideable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericObject::GenericObject(GenericObject &&master) : PredefinedType(master),Provideable(master), MgaObject(master) {};

	GenericObject GenericObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericObject& GenericObject::operator=(GenericObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericObject GenericObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericObject GenericObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericObject GenericObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericObject> GenericObject::Instances() { return ::Udm::InstantiatedAttr< GenericObject>(impl); }
	GenericObject GenericObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericObject> GenericObject::Derived() { return ::Udm::DerivedAttr< GenericObject>(impl); }
	::Udm::ArchetypeAttr< GenericObject> GenericObject::Archetype() const { return ::Udm::ArchetypeAttr< GenericObject>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> GenericObject::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericObject::Accept(Visitor &v) { v.Visit_GenericObject(*this); }

	::Uml::Class GenericObject::meta;

	FloatNumber::FloatNumber() {}
	FloatNumber::FloatNumber(::Udm::ObjectImpl *impl) : FloatingPointType(impl), MgaObject(impl) {}
	FloatNumber::FloatNumber(const FloatNumber &master) : FloatingPointType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	FloatNumber::FloatNumber(FloatNumber &&master) : FloatingPointType(master), MgaObject(master) {};

	FloatNumber FloatNumber::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FloatNumber& FloatNumber::operator=(FloatNumber &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FloatNumber FloatNumber::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FloatNumber FloatNumber::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FloatNumber FloatNumber::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FloatNumber> FloatNumber::Instances() { return ::Udm::InstantiatedAttr< FloatNumber>(impl); }
	FloatNumber FloatNumber::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FloatNumber> FloatNumber::Derived() { return ::Udm::DerivedAttr< FloatNumber>(impl); }
	::Udm::ArchetypeAttr< FloatNumber> FloatNumber::Archetype() const { return ::Udm::ArchetypeAttr< FloatNumber>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> FloatNumber::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void FloatNumber::Accept(Visitor &v) { v.Visit_FloatNumber(*this); }

	::Uml::Class FloatNumber::meta;

	LongInteger::LongInteger() {}
	LongInteger::LongInteger(::Udm::ObjectImpl *impl) : SignedIntegerType(impl), MgaObject(impl) {}
	LongInteger::LongInteger(const LongInteger &master) : SignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LongInteger::LongInteger(LongInteger &&master) : SignedIntegerType(master), MgaObject(master) {};

	LongInteger LongInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LongInteger& LongInteger::operator=(LongInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LongInteger LongInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LongInteger LongInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LongInteger LongInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LongInteger> LongInteger::Instances() { return ::Udm::InstantiatedAttr< LongInteger>(impl); }
	LongInteger LongInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LongInteger> LongInteger::Derived() { return ::Udm::DerivedAttr< LongInteger>(impl); }
	::Udm::ArchetypeAttr< LongInteger> LongInteger::Archetype() const { return ::Udm::ArchetypeAttr< LongInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> LongInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void LongInteger::Accept(Visitor &v) { v.Visit_LongInteger(*this); }

	::Uml::Class LongInteger::meta;

	ShortInteger::ShortInteger() {}
	ShortInteger::ShortInteger(::Udm::ObjectImpl *impl) : SignedIntegerType(impl), MgaObject(impl) {}
	ShortInteger::ShortInteger(const ShortInteger &master) : SignedIntegerType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ShortInteger::ShortInteger(ShortInteger &&master) : SignedIntegerType(master), MgaObject(master) {};

	ShortInteger ShortInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ShortInteger& ShortInteger::operator=(ShortInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ShortInteger ShortInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ShortInteger ShortInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ShortInteger ShortInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ShortInteger> ShortInteger::Instances() { return ::Udm::InstantiatedAttr< ShortInteger>(impl); }
	ShortInteger ShortInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ShortInteger> ShortInteger::Derived() { return ::Udm::DerivedAttr< ShortInteger>(impl); }
	::Udm::ArchetypeAttr< ShortInteger> ShortInteger::Archetype() const { return ::Udm::ArchetypeAttr< ShortInteger>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> ShortInteger::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void ShortInteger::Accept(Visitor &v) { v.Visit_ShortInteger(*this); }

	::Uml::Class ShortInteger::meta;

	Boolean::Boolean() {}
	Boolean::Boolean(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	Boolean::Boolean(const Boolean &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Boolean::Boolean(Boolean &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	Boolean Boolean::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Boolean& Boolean::operator=(Boolean &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Boolean Boolean::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Boolean Boolean::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Boolean Boolean::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Boolean> Boolean::Instances() { return ::Udm::InstantiatedAttr< Boolean>(impl); }
	Boolean Boolean::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Boolean> Boolean::Derived() { return ::Udm::DerivedAttr< Boolean>(impl); }
	::Udm::ArchetypeAttr< Boolean> Boolean::Archetype() const { return ::Udm::ArchetypeAttr< Boolean>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> Boolean::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void Boolean::Accept(Visitor &v) { v.Visit_Boolean(*this); }

	::Uml::Class Boolean::meta;

	Byte::Byte() {}
	Byte::Byte(::Udm::ObjectImpl *impl) : PredefinedType(impl),ConstantType(impl), MgaObject(impl) {}
	Byte::Byte(const Byte &master) : PredefinedType(master),ConstantType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Byte::Byte(Byte &&master) : PredefinedType(master),ConstantType(master), MgaObject(master) {};

	Byte Byte::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Byte& Byte::operator=(Byte &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Byte Byte::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Byte Byte::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Byte Byte::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Byte> Byte::Instances() { return ::Udm::InstantiatedAttr< Byte>(impl); }
	Byte Byte::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Byte> Byte::Derived() { return ::Udm::DerivedAttr< Byte>(impl); }
	::Udm::ArchetypeAttr< Byte> Byte::Archetype() const { return ::Udm::ArchetypeAttr< Byte>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> Byte::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void Byte::Accept(Visitor &v) { v.Visit_Byte(*this); }

	::Uml::Class Byte::meta;

	PredefinedType::PredefinedType() {}
	PredefinedType::PredefinedType(::Udm::ObjectImpl *impl) : SimpleType(impl),MemberType(impl), MgaObject(impl) {}
	PredefinedType::PredefinedType(const PredefinedType &master) : SimpleType(master),MemberType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PredefinedType::PredefinedType(PredefinedType &&master) : SimpleType(master),MemberType(master), MgaObject(master) {};

	PredefinedType PredefinedType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PredefinedType& PredefinedType::operator=(PredefinedType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PredefinedType PredefinedType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PredefinedType PredefinedType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PredefinedType PredefinedType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PredefinedType> PredefinedType::Instances() { return ::Udm::InstantiatedAttr< PredefinedType>(impl); }
	PredefinedType PredefinedType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PredefinedType> PredefinedType::Derived() { return ::Udm::DerivedAttr< PredefinedType>(impl); }
	::Udm::ArchetypeAttr< PredefinedType> PredefinedType::Archetype() const { return ::Udm::ArchetypeAttr< PredefinedType>(impl); }
	::Udm::AssocAttr< Variable> PredefinedType::referedbyVariable() const { return ::Udm::AssocAttr< Variable>(impl, meta_referedbyVariable); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> PredefinedType::PredefinedTypes_parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, meta_PredefinedTypes_parent); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> PredefinedType::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class PredefinedType::meta;
	::Uml::AssociationRole PredefinedType::meta_referedbyVariable;
	::Uml::CompositionParentRole PredefinedType::meta_PredefinedTypes_parent;

	PredefinedTypes::PredefinedTypes() {}
	PredefinedTypes::PredefinedTypes(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PredefinedTypes::PredefinedTypes(const PredefinedTypes &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PredefinedTypes::PredefinedTypes(PredefinedTypes &&master) : UDM_OBJECT(master) {};

	PredefinedTypes PredefinedTypes::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PredefinedTypes& PredefinedTypes::operator=(PredefinedTypes &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PredefinedTypes PredefinedTypes::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PredefinedTypes PredefinedTypes::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PredefinedTypes PredefinedTypes::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PredefinedTypes> PredefinedTypes::Instances() { return ::Udm::InstantiatedAttr< PredefinedTypes>(impl); }
	PredefinedTypes PredefinedTypes::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PredefinedTypes> PredefinedTypes::Derived() { return ::Udm::DerivedAttr< PredefinedTypes>(impl); }
	::Udm::ArchetypeAttr< PredefinedTypes> PredefinedTypes::Archetype() const { return ::Udm::ArchetypeAttr< PredefinedTypes>(impl); }
	::Udm::StringAttr PredefinedTypes::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::PredefinedType> PredefinedTypes::PredefinedType_children() const { return ::Udm::ChildrenAttr< ::PICML::PredefinedType>(impl, meta_PredefinedType_children); }
	::Udm::ChildrenAttr< ::PICML::SimpleType> PredefinedTypes::SimpleType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> PredefinedTypes::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Char> PredefinedTypes::Char_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Char>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::StringType> PredefinedTypes::StringType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::StringType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WideString> PredefinedTypes::WideString_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WideString>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WideChar> PredefinedTypes::WideChar_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WideChar>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CharType> PredefinedTypes::CharType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CharType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::UnsignedLongInteger> PredefinedTypes::UnsignedLongInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::UnsignedLongInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::UnsignedLongLongInteger> PredefinedTypes::UnsignedLongLongInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::UnsignedLongLongInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::UnsignedShortInteger> PredefinedTypes::UnsignedShortInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::UnsignedShortInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LongLongInteger> PredefinedTypes::LongLongInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LongLongInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::UnsignedIntegerType> PredefinedTypes::UnsignedIntegerType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::UnsignedIntegerType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SignedIntegerType> PredefinedTypes::SignedIntegerType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SignedIntegerType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LongDoubleNumber> PredefinedTypes::LongDoubleNumber_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LongDoubleNumber>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::IntegerType> PredefinedTypes::IntegerType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::IntegerType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FloatingPointType> PredefinedTypes::FloatingPointType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FloatingPointType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DoubleNumber> PredefinedTypes::DoubleNumber_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DoubleNumber>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TypeKind> PredefinedTypes::TypeKind_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TypeKind>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TypeEncoding> PredefinedTypes::TypeEncoding_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TypeEncoding>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::GenericValue> PredefinedTypes::GenericValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GenericValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::GenericValueObject> PredefinedTypes::GenericValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GenericValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::GenericObject> PredefinedTypes::GenericObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GenericObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FloatNumber> PredefinedTypes::FloatNumber_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FloatNumber>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LongInteger> PredefinedTypes::LongInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LongInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ShortInteger> PredefinedTypes::ShortInteger_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ShortInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Boolean> PredefinedTypes::Boolean_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Boolean>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Byte> PredefinedTypes::Byte_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Byte>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PredefinedType> PredefinedTypes::PredefinedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PredefinedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::String> PredefinedTypes::String_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::String>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> PredefinedTypes::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PredefinedTypes::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> PredefinedTypes::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> PredefinedTypes::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PredefinedTypes::Accept(Visitor &v) { v.Visit_PredefinedTypes(*this); }

	::Uml::Class PredefinedTypes::meta;
	::Uml::Attribute PredefinedTypes::meta_name;
	::Uml::CompositionChildRole PredefinedTypes::meta_PredefinedType_children;
	::Uml::CompositionParentRole PredefinedTypes::meta_RootFolder_parent;

	String::String() {}
	String::String(::Udm::ObjectImpl *impl) : StringType(impl), MgaObject(impl) {}
	String::String(const String &master) : StringType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	String::String(String &&master) : StringType(master), MgaObject(master) {};

	String String::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	String& String::operator=(String &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	String String::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	String String::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	String String::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< String> String::Instances() { return ::Udm::InstantiatedAttr< String>(impl); }
	String String::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< String> String::Derived() { return ::Udm::DerivedAttr< String>(impl); }
	::Udm::ArchetypeAttr< String> String::Archetype() const { return ::Udm::ArchetypeAttr< String>(impl); }
	::Udm::ParentAttr< ::PICML::PredefinedTypes> String::parent() const { return ::Udm::ParentAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void String::Accept(Visitor &v) { v.Visit_String(*this); }

	::Uml::Class String::meta;

	TemplatePackageAlias::TemplatePackageAlias() {}
	TemplatePackageAlias::TemplatePackageAlias(::Udm::ObjectImpl *impl) : Package(impl), MgaObject(impl) {}
	TemplatePackageAlias::TemplatePackageAlias(const TemplatePackageAlias &master) : Package(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplatePackageAlias::TemplatePackageAlias(TemplatePackageAlias &&master) : Package(master), MgaObject(master) {};

	TemplatePackageAlias TemplatePackageAlias::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplatePackageAlias& TemplatePackageAlias::operator=(TemplatePackageAlias &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplatePackageAlias TemplatePackageAlias::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplatePackageAlias TemplatePackageAlias::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplatePackageAlias TemplatePackageAlias::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplatePackageAlias> TemplatePackageAlias::Instances() { return ::Udm::InstantiatedAttr< TemplatePackageAlias>(impl); }
	TemplatePackageAlias TemplatePackageAlias::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplatePackageAlias> TemplatePackageAlias::Derived() { return ::Udm::DerivedAttr< TemplatePackageAlias>(impl); }
	::Udm::ArchetypeAttr< TemplatePackageAlias> TemplatePackageAlias::Archetype() const { return ::Udm::ArchetypeAttr< TemplatePackageAlias>(impl); }
	::Udm::ChildAttr< ::PICML::PackageType> TemplatePackageAlias::PackageType_child() const { return ::Udm::ChildAttr< ::PICML::PackageType>(impl, meta_PackageType_child); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterReference> TemplatePackageAlias::TemplateParameterReference_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterReference>(impl, meta_TemplateParameterReference_children); }
	::Udm::ChildrenAttr< ::PICML::MemberType> TemplatePackageAlias::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> TemplatePackageAlias::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterReference> TemplatePackageAlias::TemplateParameterReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageType> TemplatePackageAlias::PackageType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TemplatePackageAlias::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Prefixable> TemplatePackageAlias::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void TemplatePackageAlias::Accept(Visitor &v) { v.Visit_TemplatePackageAlias(*this); }

	::Uml::Class TemplatePackageAlias::meta;
	::Uml::CompositionChildRole TemplatePackageAlias::meta_PackageType_child;
	::Uml::CompositionChildRole TemplatePackageAlias::meta_TemplateParameterReference_children;

	TemplateParameterValueType::TemplateParameterValueType() {}
	TemplateParameterValueType::TemplateParameterValueType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TemplateParameterValueType::TemplateParameterValueType(const TemplateParameterValueType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplateParameterValueType::TemplateParameterValueType(TemplateParameterValueType &&master) : MgaObject(master) {};

	TemplateParameterValueType TemplateParameterValueType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplateParameterValueType& TemplateParameterValueType::operator=(TemplateParameterValueType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplateParameterValueType TemplateParameterValueType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplateParameterValueType TemplateParameterValueType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplateParameterValueType TemplateParameterValueType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplateParameterValueType> TemplateParameterValueType::Instances() { return ::Udm::InstantiatedAttr< TemplateParameterValueType>(impl); }
	TemplateParameterValueType TemplateParameterValueType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplateParameterValueType> TemplateParameterValueType::Derived() { return ::Udm::DerivedAttr< TemplateParameterValueType>(impl); }
	::Udm::ArchetypeAttr< TemplateParameterValueType> TemplateParameterValueType::Archetype() const { return ::Udm::ArchetypeAttr< TemplateParameterValueType>(impl); }
	::Udm::AssocAttr< TemplateParameterValue> TemplateParameterValueType::referedbyTemplateParameterValue() const { return ::Udm::AssocAttr< TemplateParameterValue>(impl, meta_referedbyTemplateParameterValue); }
	::Udm::ParentAttr< ::Udm::Object> TemplateParameterValueType::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class TemplateParameterValueType::meta;
	::Uml::AssociationRole TemplateParameterValueType::meta_referedbyTemplateParameterValue;

	ExceptionType::ExceptionType() {}
	ExceptionType::ExceptionType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExceptionType::ExceptionType(const ExceptionType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExceptionType::ExceptionType(ExceptionType &&master) : MgaObject(master) {};

	ExceptionType ExceptionType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExceptionType& ExceptionType::operator=(ExceptionType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExceptionType ExceptionType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExceptionType ExceptionType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExceptionType ExceptionType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExceptionType> ExceptionType::Instances() { return ::Udm::InstantiatedAttr< ExceptionType>(impl); }
	ExceptionType ExceptionType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExceptionType> ExceptionType::Derived() { return ::Udm::DerivedAttr< ExceptionType>(impl); }
	::Udm::ArchetypeAttr< ExceptionType> ExceptionType::Archetype() const { return ::Udm::ArchetypeAttr< ExceptionType>(impl); }
	::Udm::AssocAttr< ExceptionRef> ExceptionType::referedbyExceptionRef() const { return ::Udm::AssocAttr< ExceptionRef>(impl, meta_referedbyExceptionRef); }
	::Udm::AssocAttr< GetException> ExceptionType::referedbyGetException() const { return ::Udm::AssocAttr< GetException>(impl, meta_referedbyGetException); }
	::Udm::AssocAttr< SetException> ExceptionType::referedbySetException() const { return ::Udm::AssocAttr< SetException>(impl, meta_referedbySetException); }
	::Udm::ParentAttr< ::PICML::MgaObject> ExceptionType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExceptionType::meta;
	::Uml::AssociationRole ExceptionType::meta_referedbyExceptionRef;
	::Uml::AssociationRole ExceptionType::meta_referedbyGetException;
	::Uml::AssociationRole ExceptionType::meta_referedbySetException;

	TemplateParameterReference::TemplateParameterReference() {}
	TemplateParameterReference::TemplateParameterReference(::Udm::ObjectImpl *impl) : MemberType(impl), MgaObject(impl) {}
	TemplateParameterReference::TemplateParameterReference(const TemplateParameterReference &master) : MemberType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplateParameterReference::TemplateParameterReference(TemplateParameterReference &&master) : MemberType(master), MgaObject(master) {};

	TemplateParameterReference TemplateParameterReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplateParameterReference& TemplateParameterReference::operator=(TemplateParameterReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplateParameterReference TemplateParameterReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplateParameterReference TemplateParameterReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplateParameterReference TemplateParameterReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplateParameterReference> TemplateParameterReference::Instances() { return ::Udm::InstantiatedAttr< TemplateParameterReference>(impl); }
	TemplateParameterReference TemplateParameterReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplateParameterReference> TemplateParameterReference::Derived() { return ::Udm::DerivedAttr< TemplateParameterReference>(impl); }
	::Udm::ArchetypeAttr< TemplateParameterReference> TemplateParameterReference::Archetype() const { return ::Udm::ArchetypeAttr< TemplateParameterReference>(impl); }
	::Udm::PointerAttr< TemplateParameter> TemplateParameterReference::ref() const { return ::Udm::PointerAttr< TemplateParameter>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::TemplatePackageAlias> TemplateParameterReference::TemplatePackageAlias_parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageAlias>(impl, meta_TemplatePackageAlias_parent); }
	::Udm::ParentAttr< ::PICML::TemplatePackageAlias> TemplateParameterReference::parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageAlias>(impl, ::Udm::NULLPARENTROLE); }
	void TemplateParameterReference::Accept(Visitor &v) { v.Visit_TemplateParameterReference(*this); }

	::Uml::Class TemplateParameterReference::meta;
	::Uml::AssociationRole TemplateParameterReference::meta_ref;
	::Uml::CompositionParentRole TemplateParameterReference::meta_TemplatePackageAlias_parent;

	NativeValue::NativeValue() {}
	NativeValue::NativeValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	NativeValue::NativeValue(const NativeValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	NativeValue::NativeValue(NativeValue &&master) : MgaObject(master) {};

	NativeValue NativeValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NativeValue& NativeValue::operator=(NativeValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NativeValue NativeValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NativeValue NativeValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NativeValue NativeValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NativeValue> NativeValue::Instances() { return ::Udm::InstantiatedAttr< NativeValue>(impl); }
	NativeValue NativeValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NativeValue> NativeValue::Derived() { return ::Udm::DerivedAttr< NativeValue>(impl); }
	::Udm::ArchetypeAttr< NativeValue> NativeValue::Archetype() const { return ::Udm::ArchetypeAttr< NativeValue>(impl); }
	::Udm::ParentAttr< ::PICML::File> NativeValue::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> NativeValue::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::Prefixable> NativeValue::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void NativeValue::Accept(Visitor &v) { v.Visit_NativeValue(*this); }

	::Uml::Class NativeValue::meta;
	::Uml::CompositionParentRole NativeValue::meta_File_parent;
	::Uml::CompositionParentRole NativeValue::meta_Package_parent;

	TypeParameter::TypeParameter() {}
	TypeParameter::TypeParameter(::Udm::ObjectImpl *impl) : ExceptionType(impl),TemplateParameter(impl),LookupKeyType(impl), MgaObject(impl) {}
	TypeParameter::TypeParameter(const TypeParameter &master) : ExceptionType(master),TemplateParameter(master),LookupKeyType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TypeParameter::TypeParameter(TypeParameter &&master) : ExceptionType(master),TemplateParameter(master),LookupKeyType(master), MgaObject(master) {};

	TypeParameter TypeParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TypeParameter& TypeParameter::operator=(TypeParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TypeParameter TypeParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TypeParameter TypeParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TypeParameter TypeParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TypeParameter> TypeParameter::Instances() { return ::Udm::InstantiatedAttr< TypeParameter>(impl); }
	TypeParameter TypeParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TypeParameter> TypeParameter::Derived() { return ::Udm::DerivedAttr< TypeParameter>(impl); }
	::Udm::ArchetypeAttr< TypeParameter> TypeParameter::Archetype() const { return ::Udm::ArchetypeAttr< TypeParameter>(impl); }
	::Udm::StringAttr TypeParameter::Type() const { return ::Udm::StringAttr(impl, meta_Type); }
	::Udm::ParentAttr< ::PICML::Package> TypeParameter::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }
	void TypeParameter::Accept(Visitor &v) { v.Visit_TypeParameter(*this); }

	::Uml::Class TypeParameter::meta;
	::Uml::Attribute TypeParameter::meta_Type;

	TemplateParameter::TemplateParameter() {}
	TemplateParameter::TemplateParameter(::Udm::ObjectImpl *impl) : MemberType(impl),EventType(impl),Provideable(impl), MgaObject(impl) {}
	TemplateParameter::TemplateParameter(const TemplateParameter &master) : MemberType(master),EventType(master),Provideable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplateParameter::TemplateParameter(TemplateParameter &&master) : MemberType(master),EventType(master),Provideable(master), MgaObject(master) {};

	TemplateParameter TemplateParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplateParameter& TemplateParameter::operator=(TemplateParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplateParameter TemplateParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplateParameter TemplateParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplateParameter TemplateParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplateParameter> TemplateParameter::Instances() { return ::Udm::InstantiatedAttr< TemplateParameter>(impl); }
	TemplateParameter TemplateParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplateParameter> TemplateParameter::Derived() { return ::Udm::DerivedAttr< TemplateParameter>(impl); }
	::Udm::ArchetypeAttr< TemplateParameter> TemplateParameter::Archetype() const { return ::Udm::ArchetypeAttr< TemplateParameter>(impl); }
	::Udm::AssocAttr< TemplateParameterReference> TemplateParameter::referedbyTemplateParameterReference() const { return ::Udm::AssocAttr< TemplateParameterReference>(impl, meta_referedbyTemplateParameterReference); }
	::Udm::ParentAttr< ::PICML::Package> TemplateParameter::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::Package> TemplateParameter::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class TemplateParameter::meta;
	::Uml::AssociationRole TemplateParameter::meta_referedbyTemplateParameterReference;
	::Uml::CompositionParentRole TemplateParameter::meta_Package_parent;

	TemplateParameterValue::TemplateParameterValue() {}
	TemplateParameterValue::TemplateParameterValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TemplateParameterValue::TemplateParameterValue(const TemplateParameterValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplateParameterValue::TemplateParameterValue(TemplateParameterValue &&master) : MgaObject(master) {};

	TemplateParameterValue TemplateParameterValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplateParameterValue& TemplateParameterValue::operator=(TemplateParameterValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplateParameterValue TemplateParameterValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplateParameterValue TemplateParameterValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplateParameterValue TemplateParameterValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplateParameterValue> TemplateParameterValue::Instances() { return ::Udm::InstantiatedAttr< TemplateParameterValue>(impl); }
	TemplateParameterValue TemplateParameterValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplateParameterValue> TemplateParameterValue::Derived() { return ::Udm::DerivedAttr< TemplateParameterValue>(impl); }
	::Udm::ArchetypeAttr< TemplateParameterValue> TemplateParameterValue::Archetype() const { return ::Udm::ArchetypeAttr< TemplateParameterValue>(impl); }
	::Udm::PointerAttr< TemplateParameterValueType> TemplateParameterValue::ref() const { return ::Udm::PointerAttr< TemplateParameterValueType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::TemplatePackageInstance> TemplateParameterValue::TemplatePackageInstance_parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageInstance>(impl, meta_TemplatePackageInstance_parent); }
	::Udm::ParentAttr< ::PICML::TemplatePackageInstance> TemplateParameterValue::parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageInstance>(impl, ::Udm::NULLPARENTROLE); }
	void TemplateParameterValue::Accept(Visitor &v) { v.Visit_TemplateParameterValue(*this); }

	::Uml::Class TemplateParameterValue::meta;
	::Uml::AssociationRole TemplateParameterValue::meta_ref;
	::Uml::CompositionParentRole TemplateParameterValue::meta_TemplatePackageInstance_parent;

	TemplatePackageInstance::TemplatePackageInstance() {}
	TemplatePackageInstance::TemplatePackageInstance(::Udm::ObjectImpl *impl) : Package(impl), MgaObject(impl) {}
	TemplatePackageInstance::TemplatePackageInstance(const TemplatePackageInstance &master) : Package(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TemplatePackageInstance::TemplatePackageInstance(TemplatePackageInstance &&master) : Package(master), MgaObject(master) {};

	TemplatePackageInstance TemplatePackageInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TemplatePackageInstance& TemplatePackageInstance::operator=(TemplatePackageInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TemplatePackageInstance TemplatePackageInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TemplatePackageInstance TemplatePackageInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TemplatePackageInstance TemplatePackageInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TemplatePackageInstance> TemplatePackageInstance::Instances() { return ::Udm::InstantiatedAttr< TemplatePackageInstance>(impl); }
	TemplatePackageInstance TemplatePackageInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TemplatePackageInstance> TemplatePackageInstance::Derived() { return ::Udm::DerivedAttr< TemplatePackageInstance>(impl); }
	::Udm::ArchetypeAttr< TemplatePackageInstance> TemplatePackageInstance::Archetype() const { return ::Udm::ArchetypeAttr< TemplatePackageInstance>(impl); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValue> TemplatePackageInstance::TemplateParameterValue_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValue>(impl, meta_TemplateParameterValue_children); }
	::Udm::ChildAttr< ::PICML::PackageType> TemplatePackageInstance::PackageType_child() const { return ::Udm::ChildAttr< ::PICML::PackageType>(impl, meta_PackageType_child); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValue> TemplatePackageInstance::TemplateParameterValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageType> TemplatePackageInstance::PackageType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TemplatePackageInstance::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Prefixable> TemplatePackageInstance::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void TemplatePackageInstance::Accept(Visitor &v) { v.Visit_TemplatePackageInstance(*this); }

	::Uml::Class TemplatePackageInstance::meta;
	::Uml::CompositionChildRole TemplatePackageInstance::meta_TemplateParameterValue_children;
	::Uml::CompositionChildRole TemplatePackageInstance::meta_PackageType_child;

	PackageType::PackageType() {}
	PackageType::PackageType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageType::PackageType(const PackageType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageType::PackageType(PackageType &&master) : MgaObject(master) {};

	PackageType PackageType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageType& PackageType::operator=(PackageType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageType PackageType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageType PackageType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageType PackageType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageType> PackageType::Instances() { return ::Udm::InstantiatedAttr< PackageType>(impl); }
	PackageType PackageType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageType> PackageType::Derived() { return ::Udm::DerivedAttr< PackageType>(impl); }
	::Udm::ArchetypeAttr< PackageType> PackageType::Archetype() const { return ::Udm::ArchetypeAttr< PackageType>(impl); }
	::Udm::PointerAttr< Package> PackageType::ref() const { return ::Udm::PointerAttr< Package>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::TemplatePackageAlias> PackageType::TemplatePackageAlias_parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageAlias>(impl, meta_TemplatePackageAlias_parent); }
	::Udm::ParentAttr< ::PICML::TemplatePackageInstance> PackageType::TemplatePackageInstance_parent() const { return ::Udm::ParentAttr< ::PICML::TemplatePackageInstance>(impl, meta_TemplatePackageInstance_parent); }
	::Udm::ParentAttr< ::PICML::Package> PackageType::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }
	void PackageType::Accept(Visitor &v) { v.Visit_PackageType(*this); }

	::Uml::Class PackageType::meta;
	::Uml::AssociationRole PackageType::meta_ref;
	::Uml::CompositionParentRole PackageType::meta_TemplatePackageAlias_parent;
	::Uml::CompositionParentRole PackageType::meta_TemplatePackageInstance_parent;

	CollectionParameter::CollectionParameter() {}
	CollectionParameter::CollectionParameter(::Udm::ObjectImpl *impl) : TemplateParameter(impl), MgaObject(impl) {}
	CollectionParameter::CollectionParameter(const CollectionParameter &master) : TemplateParameter(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	CollectionParameter::CollectionParameter(CollectionParameter &&master) : TemplateParameter(master), MgaObject(master) {};

	CollectionParameter CollectionParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollectionParameter& CollectionParameter::operator=(CollectionParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollectionParameter CollectionParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollectionParameter CollectionParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollectionParameter CollectionParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollectionParameter> CollectionParameter::Instances() { return ::Udm::InstantiatedAttr< CollectionParameter>(impl); }
	CollectionParameter CollectionParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollectionParameter> CollectionParameter::Derived() { return ::Udm::DerivedAttr< CollectionParameter>(impl); }
	::Udm::ArchetypeAttr< CollectionParameter> CollectionParameter::Archetype() const { return ::Udm::ArchetypeAttr< CollectionParameter>(impl); }
	::Udm::PointerAttr< NameParameter> CollectionParameter::ref() const { return ::Udm::PointerAttr< NameParameter>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Package> CollectionParameter::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }
	void CollectionParameter::Accept(Visitor &v) { v.Visit_CollectionParameter(*this); }

	::Uml::Class CollectionParameter::meta;
	::Uml::AssociationRole CollectionParameter::meta_ref;

	NameParameter::NameParameter() {}
	NameParameter::NameParameter(::Udm::ObjectImpl *impl) : TemplateParameter(impl), MgaObject(impl) {}
	NameParameter::NameParameter(const NameParameter &master) : TemplateParameter(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	NameParameter::NameParameter(NameParameter &&master) : TemplateParameter(master), MgaObject(master) {};

	NameParameter NameParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NameParameter& NameParameter::operator=(NameParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NameParameter NameParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NameParameter NameParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NameParameter NameParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NameParameter> NameParameter::Instances() { return ::Udm::InstantiatedAttr< NameParameter>(impl); }
	NameParameter NameParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NameParameter> NameParameter::Derived() { return ::Udm::DerivedAttr< NameParameter>(impl); }
	::Udm::ArchetypeAttr< NameParameter> NameParameter::Archetype() const { return ::Udm::ArchetypeAttr< NameParameter>(impl); }
	::Udm::AssocAttr< CollectionParameter> NameParameter::referedbyCollectionParameter() const { return ::Udm::AssocAttr< CollectionParameter>(impl, meta_referedbyCollectionParameter); }
	::Udm::ParentAttr< ::PICML::Package> NameParameter::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }
	void NameParameter::Accept(Visitor &v) { v.Visit_NameParameter(*this); }

	::Uml::Class NameParameter::meta;
	::Uml::AssociationRole NameParameter::meta_referedbyCollectionParameter;

	Constant::Constant() {}
	Constant::Constant(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	Constant::Constant(const Constant &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Constant::Constant(Constant &&master) : Taggable(master), MgaObject(master) {};

	Constant Constant::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Constant& Constant::operator=(Constant &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Constant Constant::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Constant Constant::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Constant Constant::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Constant> Constant::Instances() { return ::Udm::InstantiatedAttr< Constant>(impl); }
	Constant Constant::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Constant> Constant::Derived() { return ::Udm::DerivedAttr< Constant>(impl); }
	::Udm::ArchetypeAttr< Constant> Constant::Archetype() const { return ::Udm::ArchetypeAttr< Constant>(impl); }
	::Udm::StringAttr Constant::value() const { return ::Udm::StringAttr(impl, meta_value); }
	::Udm::PointerAttr< ConstantType> Constant::ref() const { return ::Udm::PointerAttr< ConstantType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::HasOperations> Constant::HasOperations_parent() const { return ::Udm::ParentAttr< ::PICML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::PICML::File> Constant::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> Constant::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Constant::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Constant::Accept(Visitor &v) { v.Visit_Constant(*this); }

	::Uml::Class Constant::meta;
	::Uml::Attribute Constant::meta_value;
	::Uml::AssociationRole Constant::meta_ref;
	::Uml::CompositionParentRole Constant::meta_HasOperations_parent;
	::Uml::CompositionParentRole Constant::meta_File_parent;
	::Uml::CompositionParentRole Constant::meta_Package_parent;

	ConstantType::ConstantType() {}
	ConstantType::ConstantType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConstantType::ConstantType(const ConstantType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConstantType::ConstantType(ConstantType &&master) : MgaObject(master) {};

	ConstantType ConstantType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConstantType& ConstantType::operator=(ConstantType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConstantType ConstantType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConstantType ConstantType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConstantType ConstantType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConstantType> ConstantType::Instances() { return ::Udm::InstantiatedAttr< ConstantType>(impl); }
	ConstantType ConstantType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConstantType> ConstantType::Derived() { return ::Udm::DerivedAttr< ConstantType>(impl); }
	::Udm::ArchetypeAttr< ConstantType> ConstantType::Archetype() const { return ::Udm::ArchetypeAttr< ConstantType>(impl); }
	::Udm::AssocAttr< Discriminator> ConstantType::referedbyDiscriminator() const { return ::Udm::AssocAttr< Discriminator>(impl, meta_referedbyDiscriminator); }
	::Udm::AssocAttr< Constant> ConstantType::referedbyConstant() const { return ::Udm::AssocAttr< Constant>(impl, meta_referedbyConstant); }
	::Udm::ParentAttr< ::Udm::Object> ConstantType::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ConstantType::meta;
	::Uml::AssociationRole ConstantType::meta_referedbyDiscriminator;
	::Uml::AssociationRole ConstantType::meta_referedbyConstant;

	InterfaceDefinitions::InterfaceDefinitions() {}
	InterfaceDefinitions::InterfaceDefinitions(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	InterfaceDefinitions::InterfaceDefinitions(const InterfaceDefinitions &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	InterfaceDefinitions::InterfaceDefinitions(InterfaceDefinitions &&master) : UDM_OBJECT(master) {};

	InterfaceDefinitions InterfaceDefinitions::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InterfaceDefinitions& InterfaceDefinitions::operator=(InterfaceDefinitions &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InterfaceDefinitions InterfaceDefinitions::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InterfaceDefinitions InterfaceDefinitions::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InterfaceDefinitions InterfaceDefinitions::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InterfaceDefinitions> InterfaceDefinitions::Instances() { return ::Udm::InstantiatedAttr< InterfaceDefinitions>(impl); }
	InterfaceDefinitions InterfaceDefinitions::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InterfaceDefinitions> InterfaceDefinitions::Derived() { return ::Udm::DerivedAttr< InterfaceDefinitions>(impl); }
	::Udm::ArchetypeAttr< InterfaceDefinitions> InterfaceDefinitions::Archetype() const { return ::Udm::ArchetypeAttr< InterfaceDefinitions>(impl); }
	::Udm::StringAttr InterfaceDefinitions::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::File> InterfaceDefinitions::File_children() const { return ::Udm::ChildrenAttr< ::PICML::File>(impl, meta_File_children); }
	::Udm::ChildrenAttr< ::PICML::Prefixable> InterfaceDefinitions::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::File> InterfaceDefinitions::File_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::File>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> InterfaceDefinitions::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> InterfaceDefinitions::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> InterfaceDefinitions::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void InterfaceDefinitions::Accept(Visitor &v) { v.Visit_InterfaceDefinitions(*this); }

	::Uml::Class InterfaceDefinitions::meta;
	::Uml::Attribute InterfaceDefinitions::meta_name;
	::Uml::CompositionChildRole InterfaceDefinitions::meta_File_children;
	::Uml::CompositionParentRole InterfaceDefinitions::meta_RootFolder_parent;

	FileRef::FileRef() {}
	FileRef::FileRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FileRef::FileRef(const FileRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FileRef::FileRef(FileRef &&master) : MgaObject(master) {};

	FileRef FileRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FileRef& FileRef::operator=(FileRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FileRef FileRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FileRef FileRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FileRef FileRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FileRef> FileRef::Instances() { return ::Udm::InstantiatedAttr< FileRef>(impl); }
	FileRef FileRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FileRef> FileRef::Derived() { return ::Udm::DerivedAttr< FileRef>(impl); }
	::Udm::ArchetypeAttr< FileRef> FileRef::Archetype() const { return ::Udm::ArchetypeAttr< FileRef>(impl); }
	::Udm::PointerAttr< File> FileRef::ref() const { return ::Udm::PointerAttr< File>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::File> FileRef::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::ServantProject> FileRef::ServantProject_parent() const { return ::Udm::ParentAttr< ::PICML::ServantProject>(impl, meta_ServantProject_parent); }
	::Udm::ParentAttr< ::PICML::StubProject> FileRef::StubProject_parent() const { return ::Udm::ParentAttr< ::PICML::StubProject>(impl, meta_StubProject_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> FileRef::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void FileRef::Accept(Visitor &v) { v.Visit_FileRef(*this); }

	::Uml::Class FileRef::meta;
	::Uml::AssociationRole FileRef::meta_ref;
	::Uml::CompositionParentRole FileRef::meta_File_parent;
	::Uml::CompositionParentRole FileRef::meta_ServantProject_parent;
	::Uml::CompositionParentRole FileRef::meta_StubProject_parent;

	Exception::Exception() {}
	Exception::Exception(::Udm::ObjectImpl *impl) : Taggable(impl),TemplateParameterValueType(impl),ExceptionType(impl), MgaObject(impl) {}
	Exception::Exception(const Exception &master) : Taggable(master),TemplateParameterValueType(master),ExceptionType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Exception::Exception(Exception &&master) : Taggable(master),TemplateParameterValueType(master),ExceptionType(master), MgaObject(master) {};

	Exception Exception::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Exception& Exception::operator=(Exception &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Exception Exception::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Exception Exception::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Exception Exception::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Exception> Exception::Instances() { return ::Udm::InstantiatedAttr< Exception>(impl); }
	Exception Exception::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Exception> Exception::Derived() { return ::Udm::DerivedAttr< Exception>(impl); }
	::Udm::ArchetypeAttr< Exception> Exception::Archetype() const { return ::Udm::ArchetypeAttr< Exception>(impl); }
	::Udm::ChildrenAttr< ::PICML::Member> Exception::Member_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::PICML::ArrayMember> Exception::ArrayMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ArrayMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Member> Exception::Member_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Exception::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::HasOperations> Exception::HasOperations_parent() const { return ::Udm::ParentAttr< ::PICML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::PICML::File> Exception::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> Exception::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Exception::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Exception::Accept(Visitor &v) { v.Visit_Exception(*this); }

	::Uml::Class Exception::meta;
	::Uml::CompositionChildRole Exception::meta_Member_children;
	::Uml::CompositionParentRole Exception::meta_HasOperations_parent;
	::Uml::CompositionParentRole Exception::meta_File_parent;
	::Uml::CompositionParentRole Exception::meta_Package_parent;

	File::File() {}
	File::File(::Udm::ObjectImpl *impl) : Prefixable(impl), MgaObject(impl) {}
	File::File(const File &master) : Prefixable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	File::File(File &&master) : Prefixable(master), MgaObject(master) {};

	File File::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	File& File::operator=(File &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	File File::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	File File::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	File File::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< File> File::Instances() { return ::Udm::InstantiatedAttr< File>(impl); }
	File File::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< File> File::Derived() { return ::Udm::DerivedAttr< File>(impl); }
	::Udm::ArchetypeAttr< File> File::Archetype() const { return ::Udm::ArchetypeAttr< File>(impl); }
	::Udm::StringAttr File::Path() const { return ::Udm::StringAttr(impl, meta_Path); }
	::Udm::AssocAttr< FileRef> File::referedbyFileRef() const { return ::Udm::AssocAttr< FileRef>(impl, meta_referedbyFileRef); }
	::Udm::ChildrenAttr< ::PICML::NativeValue> File::NativeValue_children() const { return ::Udm::ChildrenAttr< ::PICML::NativeValue>(impl, meta_NativeValue_children); }
	::Udm::ChildrenAttr< ::PICML::ManagesComponent> File::ManagesComponent_children() const { return ::Udm::ChildrenAttr< ::PICML::ManagesComponent>(impl, meta_ManagesComponent_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> File::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::PICML::NamedType> File::NamedType_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, meta_NamedType_children); }
	::Udm::ChildrenAttr< ::PICML::Constant> File::Constant_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::PICML::FileRef> File::FileRef_children() const { return ::Udm::ChildrenAttr< ::PICML::FileRef>(impl, meta_FileRef_children); }
	::Udm::ChildrenAttr< ::PICML::Exception> File::Exception_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::PICML::Package> File::Package_children() const { return ::Udm::ChildrenAttr< ::PICML::Package>(impl, meta_Package_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> File::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Prefixable> File::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectByValue> File::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasOperations> File::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Inheritable> File::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ValueObject> File::ValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Event> File::Event_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Object> File::Object_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Object>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NoInheritable> File::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Boxed> File::Boxed_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Boxed>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Alias> File::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Collection> File::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NamedType> File::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> File::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SwitchedAggregate> File::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Aggregate> File::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Enum> File::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplatePackageAlias> File::TemplatePackageAlias_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplatePackageAlias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> File::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExceptionType> File::ExceptionType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExceptionType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NativeValue> File::NativeValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NativeValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplatePackageInstance> File::TemplatePackageInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplatePackageInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Constant> File::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FileRef> File::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Exception> File::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Package> File::Package_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> File::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Component> File::Component_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Component>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PortType> File::PortType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PortType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactory> File::ComponentFactory_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactory>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> File::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ManagesComponent> File::ManagesComponent_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ManagesComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorObject> File::ConnectorObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> File::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::InterfaceDefinitions> File::InterfaceDefinitions_parent() const { return ::Udm::ParentAttr< ::PICML::InterfaceDefinitions>(impl, meta_InterfaceDefinitions_parent); }
	::Udm::ParentAttr< ::PICML::InterfaceDefinitions> File::parent() const { return ::Udm::ParentAttr< ::PICML::InterfaceDefinitions>(impl, ::Udm::NULLPARENTROLE); }
	void File::Accept(Visitor &v) { v.Visit_File(*this); }

	::Uml::Class File::meta;
	::Uml::Attribute File::meta_Path;
	::Uml::AssociationRole File::meta_referedbyFileRef;
	::Uml::CompositionChildRole File::meta_NativeValue_children;
	::Uml::CompositionChildRole File::meta_ManagesComponent_children;
	::Uml::CompositionChildRole File::meta_ComponentRef_children;
	::Uml::CompositionChildRole File::meta_NamedType_children;
	::Uml::CompositionChildRole File::meta_Constant_children;
	::Uml::CompositionChildRole File::meta_FileRef_children;
	::Uml::CompositionChildRole File::meta_Exception_children;
	::Uml::CompositionChildRole File::meta_Package_children;
	::Uml::CompositionParentRole File::meta_InterfaceDefinitions_parent;

	Package::Package() {}
	Package::Package(::Udm::ObjectImpl *impl) : Taggable(impl),Prefixable(impl), MgaObject(impl) {}
	Package::Package(const Package &master) : Taggable(master),Prefixable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Package::Package(Package &&master) : Taggable(master),Prefixable(master), MgaObject(master) {};

	Package Package::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Package& Package::operator=(Package &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Package Package::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Package Package::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Package Package::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Package> Package::Instances() { return ::Udm::InstantiatedAttr< Package>(impl); }
	Package Package::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Package> Package::Derived() { return ::Udm::DerivedAttr< Package>(impl); }
	::Udm::ArchetypeAttr< Package> Package::Archetype() const { return ::Udm::ArchetypeAttr< Package>(impl); }
	::Udm::AssocAttr< PackageType> Package::referedbyPackageType() const { return ::Udm::AssocAttr< PackageType>(impl, meta_referedbyPackageType); }
	::Udm::ChildrenAttr< ::PICML::NativeValue> Package::NativeValue_children() const { return ::Udm::ChildrenAttr< ::PICML::NativeValue>(impl, meta_NativeValue_children); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameter> Package::TemplateParameter_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameter>(impl, meta_TemplateParameter_children); }
	::Udm::ChildrenAttr< ::PICML::ManagesComponent> Package::ManagesComponent_children() const { return ::Udm::ChildrenAttr< ::PICML::ManagesComponent>(impl, meta_ManagesComponent_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> Package::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::PICML::NamedType> Package::NamedType_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, meta_NamedType_children); }
	::Udm::ChildrenAttr< ::PICML::Constant> Package::Constant_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::PICML::Exception> Package::Exception_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::PICML::Package> Package::Package_children() const { return ::Udm::ChildrenAttr< ::PICML::Package>(impl, meta_Package_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> Package::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Prefixable> Package::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectByValue> Package::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasOperations> Package::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Inheritable> Package::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ValueObject> Package::ValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Event> Package::Event_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Object> Package::Object_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Object>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NoInheritable> Package::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Boxed> Package::Boxed_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Boxed>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Alias> Package::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Collection> Package::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NamedType> Package::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> Package::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SwitchedAggregate> Package::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Aggregate> Package::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Enum> Package::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplatePackageAlias> Package::TemplatePackageAlias_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplatePackageAlias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> Package::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExceptionType> Package::ExceptionType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExceptionType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NativeValue> Package::NativeValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NativeValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TypeParameter> Package::TypeParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TypeParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameter> Package::TemplateParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplatePackageInstance> Package::TemplatePackageInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplatePackageInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CollectionParameter> Package::CollectionParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CollectionParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NameParameter> Package::NameParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NameParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Constant> Package::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Exception> Package::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Package> Package::Package_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> Package::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Component> Package::Component_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Component>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventType> Package::EventType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PortType> Package::PortType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PortType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Provideable> Package::Provideable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Provideable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactory> Package::ComponentFactory_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactory>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> Package::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ManagesComponent> Package::ManagesComponent_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ManagesComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorObject> Package::ConnectorObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Package::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::File> Package::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> Package::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::Prefixable> Package::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Package::Accept(Visitor &v) { v.Visit_Package(*this); }

	::Uml::Class Package::meta;
	::Uml::AssociationRole Package::meta_referedbyPackageType;
	::Uml::CompositionChildRole Package::meta_NativeValue_children;
	::Uml::CompositionChildRole Package::meta_TemplateParameter_children;
	::Uml::CompositionChildRole Package::meta_ManagesComponent_children;
	::Uml::CompositionChildRole Package::meta_ComponentRef_children;
	::Uml::CompositionChildRole Package::meta_NamedType_children;
	::Uml::CompositionChildRole Package::meta_Constant_children;
	::Uml::CompositionChildRole Package::meta_Exception_children;
	::Uml::CompositionChildRole Package::meta_Package_children;
	::Uml::CompositionParentRole Package::meta_File_parent;
	::Uml::CompositionParentRole Package::meta_Package_parent;

	Workspaces::Workspaces() {}
	Workspaces::Workspaces(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Workspaces::Workspaces(const Workspaces &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Workspaces::Workspaces(Workspaces &&master) : MgaObject(master) {};

	Workspaces Workspaces::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Workspaces& Workspaces::operator=(Workspaces &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Workspaces Workspaces::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Workspaces Workspaces::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Workspaces Workspaces::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Workspaces> Workspaces::Instances() { return ::Udm::InstantiatedAttr< Workspaces>(impl); }
	Workspaces Workspaces::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Workspaces> Workspaces::Derived() { return ::Udm::DerivedAttr< Workspaces>(impl); }
	::Udm::ArchetypeAttr< Workspaces> Workspaces::Archetype() const { return ::Udm::ArchetypeAttr< Workspaces>(impl); }
	::Udm::AssocAttr< Project> Workspaces::members() const { return ::Udm::AssocAttr< Project>(impl, meta_members); }
	::Udm::ParentAttr< ::PICML::MPC> Workspaces::MPC_parent() const { return ::Udm::ParentAttr< ::PICML::MPC>(impl, meta_MPC_parent); }
	::Udm::ParentAttr< ::PICML::MPC> Workspaces::parent() const { return ::Udm::ParentAttr< ::PICML::MPC>(impl, ::Udm::NULLPARENTROLE); }
	void Workspaces::Accept(Visitor &v) { v.Visit_Workspaces(*this); }

	::Uml::Class Workspaces::meta;
	::Uml::AssociationRole Workspaces::meta_members;
	::Uml::CompositionParentRole Workspaces::meta_MPC_parent;

	ExecutorProject::ExecutorProject() {}
	ExecutorProject::ExecutorProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	ExecutorProject::ExecutorProject(const ExecutorProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	ExecutorProject::ExecutorProject(ExecutorProject &&master) : ComponentLib(master) {};

	ExecutorProject ExecutorProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExecutorProject& ExecutorProject::operator=(ExecutorProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExecutorProject ExecutorProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExecutorProject ExecutorProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExecutorProject ExecutorProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExecutorProject> ExecutorProject::Instances() { return ::Udm::InstantiatedAttr< ExecutorProject>(impl); }
	ExecutorProject ExecutorProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExecutorProject> ExecutorProject::Derived() { return ::Udm::DerivedAttr< ExecutorProject>(impl); }
	::Udm::ArchetypeAttr< ExecutorProject> ExecutorProject::Archetype() const { return ::Udm::ArchetypeAttr< ExecutorProject>(impl); }
	::Udm::ChildAttr< ::PICML::ImplementationArtifactReference> ExecutorProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::PICML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact> ExecutorProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact> ExecutorProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ExecutorProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ExecutorProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Project> ExecutorProject::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ExecutorProject::Accept(Visitor &v) { v.Visit_ExecutorProject(*this); }

	::Uml::Class ExecutorProject::meta;
	::Uml::CompositionChildRole ExecutorProject::meta_ImplementationArtifactReference_child;

	ServantProject::ServantProject() {}
	ServantProject::ServantProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	ServantProject::ServantProject(const ServantProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	ServantProject::ServantProject(ServantProject &&master) : ComponentLib(master) {};

	ServantProject ServantProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServantProject& ServantProject::operator=(ServantProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServantProject ServantProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServantProject ServantProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServantProject ServantProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServantProject> ServantProject::Instances() { return ::Udm::InstantiatedAttr< ServantProject>(impl); }
	ServantProject ServantProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServantProject> ServantProject::Derived() { return ::Udm::DerivedAttr< ServantProject>(impl); }
	::Udm::ArchetypeAttr< ServantProject> ServantProject::Archetype() const { return ::Udm::ArchetypeAttr< ServantProject>(impl); }
	::Udm::ChildAttr< ::PICML::FileRef> ServantProject::FileRef_child() const { return ::Udm::ChildAttr< ::PICML::FileRef>(impl, meta_FileRef_child); }
	::Udm::ChildAttr< ::PICML::ImplementationArtifactReference> ServantProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::PICML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact> ServantProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact> ServantProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> ServantProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FileRef> ServantProject::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ServantProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Project> ServantProject::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ServantProject::Accept(Visitor &v) { v.Visit_ServantProject(*this); }

	::Uml::Class ServantProject::meta;
	::Uml::CompositionChildRole ServantProject::meta_FileRef_child;
	::Uml::CompositionChildRole ServantProject::meta_ImplementationArtifactReference_child;

	StubProject::StubProject() {}
	StubProject::StubProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	StubProject::StubProject(const StubProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	StubProject::StubProject(StubProject &&master) : ComponentLib(master) {};

	StubProject StubProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	StubProject& StubProject::operator=(StubProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	StubProject StubProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	StubProject StubProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	StubProject StubProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< StubProject> StubProject::Instances() { return ::Udm::InstantiatedAttr< StubProject>(impl); }
	StubProject StubProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< StubProject> StubProject::Derived() { return ::Udm::DerivedAttr< StubProject>(impl); }
	::Udm::ArchetypeAttr< StubProject> StubProject::Archetype() const { return ::Udm::ArchetypeAttr< StubProject>(impl); }
	::Udm::ChildAttr< ::PICML::FileRef> StubProject::FileRef_child() const { return ::Udm::ChildAttr< ::PICML::FileRef>(impl, meta_FileRef_child); }
	::Udm::ChildAttr< ::PICML::ImplementationArtifactReference> StubProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::PICML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact> StubProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact> StubProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference> StubProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FileRef> StubProject::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> StubProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Project> StubProject::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void StubProject::Accept(Visitor &v) { v.Visit_StubProject(*this); }

	::Uml::Class StubProject::meta;
	::Uml::CompositionChildRole StubProject::meta_FileRef_child;
	::Uml::CompositionChildRole StubProject::meta_ImplementationArtifactReference_child;

	MPC::MPC() {}
	MPC::MPC(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MPC::MPC(const MPC &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MPC::MPC(MPC &&master) : MgaObject(master) {};

	MPC MPC::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MPC& MPC::operator=(MPC &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MPC MPC::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MPC MPC::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MPC MPC::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MPC> MPC::Instances() { return ::Udm::InstantiatedAttr< MPC>(impl); }
	MPC MPC::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MPC> MPC::Derived() { return ::Udm::DerivedAttr< MPC>(impl); }
	::Udm::ArchetypeAttr< MPC> MPC::Archetype() const { return ::Udm::ArchetypeAttr< MPC>(impl); }
	::Udm::ChildrenAttr< ::PICML::Project> MPC::Project_children() const { return ::Udm::ChildrenAttr< ::PICML::Project>(impl, meta_Project_children); }
	::Udm::ChildrenAttr< ::PICML::Workspaces> MPC::Workspaces_children() const { return ::Udm::ChildrenAttr< ::PICML::Workspaces>(impl, meta_Workspaces_children); }
	::Udm::ChildrenAttr< ::PICML::Workspaces> MPC::Workspaces_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Workspaces>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Project> MPC::Project_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Project>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> MPC::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentBuild> MPC::ComponentBuild_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentBuild>(impl, meta_ComponentBuild_parent); }
	::Udm::ParentAttr< ::PICML::ComponentBuild> MPC::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentBuild>(impl, ::Udm::NULLPARENTROLE); }
	void MPC::Accept(Visitor &v) { v.Visit_MPC(*this); }

	::Uml::Class MPC::meta;
	::Uml::CompositionChildRole MPC::meta_Project_children;
	::Uml::CompositionChildRole MPC::meta_Workspaces_children;
	::Uml::CompositionParentRole MPC::meta_ComponentBuild_parent;

	ComponentLib::ComponentLib() {}
	ComponentLib::ComponentLib(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentLib::ComponentLib(const ComponentLib &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentLib::ComponentLib(ComponentLib &&master) : MgaObject(master) {};

	ComponentLib ComponentLib::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentLib& ComponentLib::operator=(ComponentLib &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentLib ComponentLib::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentLib ComponentLib::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentLib ComponentLib::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentLib> ComponentLib::Instances() { return ::Udm::InstantiatedAttr< ComponentLib>(impl); }
	ComponentLib ComponentLib::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentLib> ComponentLib::Derived() { return ::Udm::DerivedAttr< ComponentLib>(impl); }
	::Udm::ArchetypeAttr< ComponentLib> ComponentLib::Archetype() const { return ::Udm::ArchetypeAttr< ComponentLib>(impl); }
	::Udm::StringAttr ComponentLib::libraryexport() const { return ::Udm::StringAttr(impl, meta_libraryexport); }
	::Udm::StringAttr ComponentLib::sharedname() const { return ::Udm::StringAttr(impl, meta_sharedname); }
	::Udm::StringAttr ComponentLib::ORBServices() const { return ::Udm::StringAttr(impl, meta_ORBServices); }
	::Udm::AClassAssocAttr< ExtResourceConn, ExternalResources> ComponentLib::dstExtResourceConn() const { return ::Udm::AClassAssocAttr< ExtResourceConn, ExternalResources>(impl, meta_dstExtResourceConn, meta_dstExtResourceConn_rev); }
	::Udm::ParentAttr< ::PICML::Project> ComponentLib::Project_parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::PICML::Project> ComponentLib::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentLib::meta;
	::Uml::Attribute ComponentLib::meta_libraryexport;
	::Uml::Attribute ComponentLib::meta_sharedname;
	::Uml::Attribute ComponentLib::meta_ORBServices;
	::Uml::AssociationRole ComponentLib::meta_dstExtResourceConn;
	::Uml::AssociationRole ComponentLib::meta_dstExtResourceConn_rev;
	::Uml::CompositionParentRole ComponentLib::meta_Project_parent;

	ExtResourceConn::ExtResourceConn() {}
	ExtResourceConn::ExtResourceConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExtResourceConn::ExtResourceConn(const ExtResourceConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtResourceConn::ExtResourceConn(ExtResourceConn &&master) : MgaObject(master) {};

	ExtResourceConn ExtResourceConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtResourceConn& ExtResourceConn::operator=(ExtResourceConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtResourceConn ExtResourceConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtResourceConn ExtResourceConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtResourceConn ExtResourceConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtResourceConn> ExtResourceConn::Instances() { return ::Udm::InstantiatedAttr< ExtResourceConn>(impl); }
	ExtResourceConn ExtResourceConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtResourceConn> ExtResourceConn::Derived() { return ::Udm::DerivedAttr< ExtResourceConn>(impl); }
	::Udm::ArchetypeAttr< ExtResourceConn> ExtResourceConn::Archetype() const { return ::Udm::ArchetypeAttr< ExtResourceConn>(impl); }
	::Udm::ParentAttr< ::PICML::Project> ExtResourceConn::Project_parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::PICML::Project> ExtResourceConn::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentLib> ExtResourceConn::srcExtResourceConn_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentLib>(impl, meta_srcExtResourceConn_end_); }
	::Udm::AssocEndAttr< ::PICML::ExternalResources> ExtResourceConn::dstExtResourceConn_end() const { return ::Udm::AssocEndAttr< ::PICML::ExternalResources>(impl, meta_dstExtResourceConn_end_); }
	void ExtResourceConn::Accept(Visitor &v) { v.Visit_ExtResourceConn(*this); }

	::Uml::Class ExtResourceConn::meta;
	::Uml::CompositionParentRole ExtResourceConn::meta_Project_parent;
	::Uml::AssociationRole ExtResourceConn::meta_srcExtResourceConn_end_;
	::Uml::AssociationRole ExtResourceConn::meta_dstExtResourceConn_end_;

	ExternalResources::ExternalResources() {}
	ExternalResources::ExternalResources(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalResources::ExternalResources(const ExternalResources &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalResources::ExternalResources(ExternalResources &&master) : MgaObject(master) {};

	ExternalResources ExternalResources::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalResources& ExternalResources::operator=(ExternalResources &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalResources ExternalResources::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalResources ExternalResources::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalResources ExternalResources::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalResources> ExternalResources::Instances() { return ::Udm::InstantiatedAttr< ExternalResources>(impl); }
	ExternalResources ExternalResources::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalResources> ExternalResources::Derived() { return ::Udm::DerivedAttr< ExternalResources>(impl); }
	::Udm::ArchetypeAttr< ExternalResources> ExternalResources::Archetype() const { return ::Udm::ArchetypeAttr< ExternalResources>(impl); }
	::Udm::AClassAssocAttr< ExtResourceConn, ComponentLib> ExternalResources::srcExtResourceConn() const { return ::Udm::AClassAssocAttr< ExtResourceConn, ComponentLib>(impl, meta_srcExtResourceConn, meta_srcExtResourceConn_rev); }
	::Udm::PointerAttr< ImplementationArtifact> ExternalResources::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Project> ExternalResources::Project_parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::PICML::Project> ExternalResources::parent() const { return ::Udm::ParentAttr< ::PICML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ExternalResources::Accept(Visitor &v) { v.Visit_ExternalResources(*this); }

	::Uml::Class ExternalResources::meta;
	::Uml::AssociationRole ExternalResources::meta_srcExtResourceConn;
	::Uml::AssociationRole ExternalResources::meta_srcExtResourceConn_rev;
	::Uml::AssociationRole ExternalResources::meta_ref;
	::Uml::CompositionParentRole ExternalResources::meta_Project_parent;

	Project::Project() {}
	Project::Project(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Project::Project(const Project &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Project::Project(Project &&master) : MgaObject(master) {};

	Project Project::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Project& Project::operator=(Project &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Project Project::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Project Project::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Project Project::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Project> Project::Instances() { return ::Udm::InstantiatedAttr< Project>(impl); }
	Project Project::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Project> Project::Derived() { return ::Udm::DerivedAttr< Project>(impl); }
	::Udm::ArchetypeAttr< Project> Project::Archetype() const { return ::Udm::ArchetypeAttr< Project>(impl); }
	::Udm::AssocAttr< Workspaces> Project::setWorkspace() const { return ::Udm::AssocAttr< Workspaces>(impl, meta_setWorkspace); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifact> Project::ImplementationArtifact_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifact>(impl, meta_ImplementationArtifact_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentLib> Project::ComponentLib_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentLib>(impl, meta_ComponentLib_children); }
	::Udm::ChildrenAttr< ::PICML::ExtResourceConn> Project::ExtResourceConn_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtResourceConn>(impl, meta_ExtResourceConn_children); }
	::Udm::ChildrenAttr< ::PICML::ExternalResources> Project::ExternalResources_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalResources>(impl, meta_ExternalResources_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifact> Project::ImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExecutorProject> Project::ExecutorProject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExecutorProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ServantProject> Project::ServantProject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ServantProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::StubProject> Project::StubProject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::StubProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentLib> Project::ComponentLib_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentLib>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtResourceConn> Project::ExtResourceConn_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtResourceConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExternalResources> Project::ExternalResources_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalResources>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Project::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MPC> Project::MPC_parent() const { return ::Udm::ParentAttr< ::PICML::MPC>(impl, meta_MPC_parent); }
	::Udm::ParentAttr< ::PICML::MPC> Project::parent() const { return ::Udm::ParentAttr< ::PICML::MPC>(impl, ::Udm::NULLPARENTROLE); }
	void Project::Accept(Visitor &v) { v.Visit_Project(*this); }

	::Uml::Class Project::meta;
	::Uml::AssociationRole Project::meta_setWorkspace;
	::Uml::CompositionChildRole Project::meta_ImplementationArtifact_children;
	::Uml::CompositionChildRole Project::meta_ComponentLib_children;
	::Uml::CompositionChildRole Project::meta_ExtResourceConn_children;
	::Uml::CompositionChildRole Project::meta_ExternalResources_children;
	::Uml::CompositionParentRole Project::meta_MPC_parent;

	ComponentBuild::ComponentBuild() {}
	ComponentBuild::ComponentBuild(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentBuild::ComponentBuild(const ComponentBuild &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentBuild::ComponentBuild(ComponentBuild &&master) : UDM_OBJECT(master) {};

	ComponentBuild ComponentBuild::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentBuild& ComponentBuild::operator=(ComponentBuild &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentBuild ComponentBuild::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentBuild ComponentBuild::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentBuild ComponentBuild::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentBuild> ComponentBuild::Instances() { return ::Udm::InstantiatedAttr< ComponentBuild>(impl); }
	ComponentBuild ComponentBuild::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentBuild> ComponentBuild::Derived() { return ::Udm::DerivedAttr< ComponentBuild>(impl); }
	::Udm::ArchetypeAttr< ComponentBuild> ComponentBuild::Archetype() const { return ::Udm::ArchetypeAttr< ComponentBuild>(impl); }
	::Udm::StringAttr ComponentBuild::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::MPC> ComponentBuild::MPC_children() const { return ::Udm::ChildrenAttr< ::PICML::MPC>(impl, meta_MPC_children); }
	::Udm::ChildrenAttr< ::PICML::MPC> ComponentBuild::MPC_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MPC>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentBuild::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentBuild::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentBuild::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentBuild::Accept(Visitor &v) { v.Visit_ComponentBuild(*this); }

	::Uml::Class ComponentBuild::meta;
	::Uml::Attribute ComponentBuild::meta_name;
	::Uml::CompositionChildRole ComponentBuild::meta_MPC_children;
	::Uml::CompositionParentRole ComponentBuild::meta_RootFolder_parent;

	ExternalPort::ExternalPort() {}
	ExternalPort::ExternalPort(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalPort::ExternalPort(const ExternalPort &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalPort::ExternalPort(ExternalPort &&master) : MgaObject(master) {};

	ExternalPort ExternalPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalPort& ExternalPort::operator=(ExternalPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalPort ExternalPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalPort ExternalPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalPort ExternalPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalPort> ExternalPort::Instances() { return ::Udm::InstantiatedAttr< ExternalPort>(impl); }
	ExternalPort ExternalPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalPort> ExternalPort::Derived() { return ::Udm::DerivedAttr< ExternalPort>(impl); }
	::Udm::ArchetypeAttr< ExternalPort> ExternalPort::Archetype() const { return ::Udm::ArchetypeAttr< ExternalPort>(impl); }
	::Udm::StringAttr ExternalPort::location() const { return ::Udm::StringAttr(impl, meta_location); }
	::Udm::AClassAssocAttr< ExternalDelegate, ExternalPortEnd> ExternalPort::dstExternalDelegate() const { return ::Udm::AClassAssocAttr< ExternalDelegate, ExternalPortEnd>(impl, meta_dstExternalDelegate, meta_dstExternalDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExternalPort::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExternalPort::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ExternalPort::Accept(Visitor &v) { v.Visit_ExternalPort(*this); }

	::Uml::Class ExternalPort::meta;
	::Uml::Attribute ExternalPort::meta_location;
	::Uml::AssociationRole ExternalPort::meta_dstExternalDelegate;
	::Uml::AssociationRole ExternalPort::meta_dstExternalDelegate_rev;
	::Uml::CompositionParentRole ExternalPort::meta_ComponentAssembly_parent;

	ComponentAssemblyReference::ComponentAssemblyReference() {}
	ComponentAssemblyReference::ComponentAssemblyReference(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl) {}
	ComponentAssemblyReference::ComponentAssemblyReference(const ComponentAssemblyReference &master) : CollocationGroupMember(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblyReference::ComponentAssemblyReference(ComponentAssemblyReference &&master) : CollocationGroupMember(master) {};

	ComponentAssemblyReference ComponentAssemblyReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblyReference& ComponentAssemblyReference::operator=(ComponentAssemblyReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblyReference ComponentAssemblyReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblyReference ComponentAssemblyReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblyReference ComponentAssemblyReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblyReference> ComponentAssemblyReference::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblyReference>(impl); }
	ComponentAssemblyReference ComponentAssemblyReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblyReference> ComponentAssemblyReference::Derived() { return ::Udm::DerivedAttr< ComponentAssemblyReference>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblyReference> ComponentAssemblyReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblyReference>(impl); }
	::Udm::PointerAttr< ComponentAssembly> ComponentAssemblyReference::ref() const { return ::Udm::PointerAttr< ComponentAssembly>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentAssemblyReference::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentAssemblyReference::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAssemblyReference::Accept(Visitor &v) { v.Visit_ComponentAssemblyReference(*this); }

	::Uml::Class ComponentAssemblyReference::meta;
	::Uml::AssociationRole ComponentAssemblyReference::meta_ref;
	::Uml::CompositionParentRole ComponentAssemblyReference::meta_ComponentAssembly_parent;

	ComponentAssembly::ComponentAssembly() {}
	ComponentAssembly::ComponentAssembly(::Udm::ObjectImpl *impl) : ComponentImplementation(impl), Implemenation(impl) {}
	ComponentAssembly::ComponentAssembly(const ComponentAssembly &master) : ComponentImplementation(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	ComponentAssembly::ComponentAssembly(ComponentAssembly &&master) : ComponentImplementation(master), Implemenation(master) {};

	ComponentAssembly ComponentAssembly::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssembly& ComponentAssembly::operator=(ComponentAssembly &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssembly ComponentAssembly::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssembly ComponentAssembly::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssembly ComponentAssembly::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssembly> ComponentAssembly::Instances() { return ::Udm::InstantiatedAttr< ComponentAssembly>(impl); }
	ComponentAssembly ComponentAssembly::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssembly> ComponentAssembly::Derived() { return ::Udm::DerivedAttr< ComponentAssembly>(impl); }
	::Udm::ArchetypeAttr< ComponentAssembly> ComponentAssembly::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssembly>(impl); }
	::Udm::AssocAttr< ComponentAssemblyReference> ComponentAssembly::referedbyComponentAssemblyReference() const { return ::Udm::AssocAttr< ComponentAssemblyReference>(impl, meta_referedbyComponentAssemblyReference); }
	::Udm::AClassPointerAttr< CriticalPath, PathReference> ComponentAssembly::dstCriticalPath() const { return ::Udm::AClassPointerAttr< CriticalPath, PathReference>(impl, meta_dstCriticalPath, meta_dstCriticalPath_rev); }
	::Udm::ChildrenAttr< ::PICML::Property> ComponentAssembly::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::MirrorDelegate> ComponentAssembly::MirrorDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorDelegate>(impl, meta_MirrorDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::MirrorPortDelegate> ComponentAssembly::MirrorPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPortDelegate>(impl, meta_MirrorPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortDelegate> ComponentAssembly::ExtendedPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortDelegate>(impl, meta_ExtendedPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::ExtendedDelegate> ComponentAssembly::ExtendedDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedDelegate>(impl, meta_ExtendedDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorToFacet> ComponentAssembly::ConnectorToFacet_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorToFacet>(impl, meta_ConnectorToFacet_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorToReceptacle> ComponentAssembly::ConnectorToReceptacle_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorToReceptacle>(impl, meta_ConnectorToReceptacle_children); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortDelegate> ComponentAssembly::ProvidedRequestPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortDelegate>(impl, meta_ProvidedRequestPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPortDelegate> ComponentAssembly::RequiredRequestPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPortDelegate>(impl, meta_RequiredRequestPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::OutEventPortDelegate> ComponentAssembly::OutEventPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPortDelegate>(impl, meta_OutEventPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::InEventPortDelegate> ComponentAssembly::InEventPortDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPortDelegate>(impl, meta_InEventPortDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::Consume> ComponentAssembly::Consume_children() const { return ::Udm::ChildrenAttr< ::PICML::Consume>(impl, meta_Consume_children); }
	::Udm::ChildrenAttr< ::PICML::Publish> ComponentAssembly::Publish_children() const { return ::Udm::ChildrenAttr< ::PICML::Publish>(impl, meta_Publish_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorInstance> ComponentAssembly::ConnectorInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorInstance>(impl, meta_ConnectorInstance_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentInstance> ComponentAssembly::ComponentInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInstance>(impl, meta_ComponentInstance_children); }
	::Udm::ChildrenAttr< ::PICML::ExternalPort> ComponentAssembly::ExternalPort_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalPort>(impl, meta_ExternalPort_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeMapping> ComponentAssembly::AttributeMapping_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMapping>(impl, meta_AttributeMapping_children); }
	::Udm::ChildrenAttr< ::PICML::ExternalDelegate> ComponentAssembly::ExternalDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalDelegate>(impl, meta_ExternalDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeMappingDelegate> ComponentAssembly::AttributeMappingDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMappingDelegate>(impl, meta_AttributeMappingDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::ReceptacleDelegate> ComponentAssembly::ReceptacleDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::ReceptacleDelegate>(impl, meta_ReceptacleDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::Invoke> ComponentAssembly::Invoke_children() const { return ::Udm::ChildrenAttr< ::PICML::Invoke>(impl, meta_Invoke_children); }
	::Udm::ChildrenAttr< ::PICML::FacetDelegate> ComponentAssembly::FacetDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::FacetDelegate>(impl, meta_FacetDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::AssemblyConfigProperty> ComponentAssembly::AssemblyConfigProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::AssemblyConfigProperty>(impl, meta_AssemblyConfigProperty_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeMappingValue> ComponentAssembly::AttributeMappingValue_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMappingValue>(impl, meta_AttributeMappingValue_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeDelegate> ComponentAssembly::AttributeDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeDelegate>(impl, meta_AttributeDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::AttributeValue> ComponentAssembly::AttributeValue_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeValue>(impl, meta_AttributeValue_children); }
	::Udm::ChildrenAttr< ::PICML::AssemblyselectRequirement> ComponentAssembly::AssemblyselectRequirement_children() const { return ::Udm::ChildrenAttr< ::PICML::AssemblyselectRequirement>(impl, meta_AssemblyselectRequirement_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference> ComponentAssembly::ComponentAssemblyReference_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference>(impl, meta_ComponentAssemblyReference_children); }
	::Udm::ChildrenAttr< ::PICML::EventSinkDelegate> ComponentAssembly::EventSinkDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::EventSinkDelegate>(impl, meta_EventSinkDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::EventSourceDelegate> ComponentAssembly::EventSourceDelegate_children() const { return ::Udm::ChildrenAttr< ::PICML::EventSourceDelegate>(impl, meta_EventSourceDelegate_children); }
	::Udm::ChildrenAttr< ::PICML::SendsTo> ComponentAssembly::SendsTo_children() const { return ::Udm::ChildrenAttr< ::PICML::SendsTo>(impl, meta_SendsTo_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssembly> ComponentAssembly::ComponentAssembly_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_children); }
	::Udm::ChildrenAttr< ::PICML::Requirement> ComponentAssembly::Requirement_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackageReference> ComponentAssembly::ComponentPackageReference_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackageReference>(impl, meta_ComponentPackageReference_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackage> ComponentAssembly::ComponentPackage_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackage>(impl, meta_ComponentPackage_children); }
	::Udm::ChildrenAttr< ::PICML::Implemenation> ComponentAssembly::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RTRequirements> ComponentAssembly::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ECRequirements> ComponentAssembly::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CollocationGroupMember> ComponentAssembly::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackage> ComponentAssembly::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackageReference> ComponentAssembly::ComponentPackageReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackageReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> ComponentAssembly::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> ComponentAssembly::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> ComponentAssembly::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementBase> ComponentAssembly::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Requirement> ComponentAssembly::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExternalPort> ComponentAssembly::ExternalPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference> ComponentAssembly::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssembly> ComponentAssembly::ComponentAssembly_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedDelegate> ComponentAssembly::ExtendedDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortDelegate> ComponentAssembly::ExtendedPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortInstanceBase> ComponentAssembly::ExtendedPortInstanceBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortInstanceBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorPortInstanceBase> ComponentAssembly::MirrorPortInstanceBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPortInstanceBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorDelegate> ComponentAssembly::MirrorDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorPortDelegate> ComponentAssembly::MirrorPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AssemblyConfigPropertyEnd> ComponentAssembly::AssemblyConfigPropertyEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AssemblyConfigPropertyEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorToFacet> ComponentAssembly::ConnectorToFacet_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorToFacet>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorToReceptacle> ComponentAssembly::ConnectorToReceptacle_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorToReceptacle>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExternalPortEnd> ComponentAssembly::ExternalPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortEnd> ComponentAssembly::ProvidedRequestPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortDelegate> ComponentAssembly::ProvidedRequestPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPortDelegate> ComponentAssembly::RequiredRequestPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPortDelegate> ComponentAssembly::OutEventPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPortDelegate> ComponentAssembly::InEventPortDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPortDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPortEnd> ComponentAssembly::RequiredRequestPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendPortEnd> ComponentAssembly::ExtendPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPortEnd> ComponentAssembly::OutEventPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPortEnd> ComponentAssembly::InEventPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Consume> ComponentAssembly::Consume_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Consume>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Publish> ComponentAssembly::Publish_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Publish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeMappingDelegate> ComponentAssembly::AttributeMappingDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMappingDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeMappingValue> ComponentAssembly::AttributeMappingValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMappingValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeMapping> ComponentAssembly::AttributeMapping_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeMapping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeDelegate> ComponentAssembly::AttributeDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeValue> ComponentAssembly::AttributeValue_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExternalDelegate> ComponentAssembly::ExternalDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventSinkDelegate> ComponentAssembly::EventSinkDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventSinkDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventSourceDelegate> ComponentAssembly::EventSourceDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventSourceDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FacetDelegate> ComponentAssembly::FacetDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FacetDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReceptacleDelegate> ComponentAssembly::ReceptacleDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReceptacleDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SendsTo> ComponentAssembly::SendsTo_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SendsTo>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AssemblyConfigProperty> ComponentAssembly::AssemblyConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AssemblyConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AssemblyselectRequirement> ComponentAssembly::AssemblyselectRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AssemblyselectRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Invoke> ComponentAssembly::Invoke_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Invoke>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentInstance> ComponentAssembly::ComponentInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementation> ComponentAssembly::ComponentImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorInstance> ComponentAssembly::ConnectorInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentAssembly::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentAssembly::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentAssembly::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAssembly::Accept(Visitor &v) { v.Visit_ComponentAssembly(*this); }

	::Uml::Class ComponentAssembly::meta;
	::Uml::AssociationRole ComponentAssembly::meta_referedbyComponentAssemblyReference;
	::Uml::AssociationRole ComponentAssembly::meta_dstCriticalPath;
	::Uml::AssociationRole ComponentAssembly::meta_dstCriticalPath_rev;
	::Uml::CompositionChildRole ComponentAssembly::meta_Property_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_MirrorDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_MirrorPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExtendedPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExtendedDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ConnectorToFacet_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ConnectorToReceptacle_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ProvidedRequestPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_RequiredRequestPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_OutEventPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_InEventPortDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Consume_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Publish_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ConnectorInstance_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentInstance_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExternalPort_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMapping_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExternalDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMappingDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ReceptacleDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Invoke_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_FacetDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AssemblyConfigProperty_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMappingValue_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeValue_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AssemblyselectRequirement_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentAssemblyReference_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSinkDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSourceDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_SendsTo_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentAssembly_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Requirement_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentPackageReference_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentPackage_children;
	::Uml::CompositionParentRole ComponentAssembly::meta_ComponentAssembly_parent;

	ExtendedDelegate::ExtendedDelegate() {}
	ExtendedDelegate::ExtendedDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExtendedDelegate::ExtendedDelegate(const ExtendedDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendedDelegate::ExtendedDelegate(ExtendedDelegate &&master) : MgaObject(master) {};

	ExtendedDelegate ExtendedDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedDelegate& ExtendedDelegate::operator=(ExtendedDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedDelegate ExtendedDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedDelegate ExtendedDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedDelegate ExtendedDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedDelegate> ExtendedDelegate::Instances() { return ::Udm::InstantiatedAttr< ExtendedDelegate>(impl); }
	ExtendedDelegate ExtendedDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedDelegate> ExtendedDelegate::Derived() { return ::Udm::DerivedAttr< ExtendedDelegate>(impl); }
	::Udm::ArchetypeAttr< ExtendedDelegate> ExtendedDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendedDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendedDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ExtendedPortInstanceBase> ExtendedDelegate::srcExtendedDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ExtendedPortInstanceBase>(impl, meta_srcExtendedDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::ExtendedPortDelegate> ExtendedDelegate::dstExtendedDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ExtendedPortDelegate>(impl, meta_dstExtendedDelegate_end_); }
	void ExtendedDelegate::Accept(Visitor &v) { v.Visit_ExtendedDelegate(*this); }

	::Uml::Class ExtendedDelegate::meta;
	::Uml::CompositionParentRole ExtendedDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ExtendedDelegate::meta_srcExtendedDelegate_end_;
	::Uml::AssociationRole ExtendedDelegate::meta_dstExtendedDelegate_end_;

	ExtendedPortDelegate::ExtendedPortDelegate() {}
	ExtendedPortDelegate::ExtendedPortDelegate(::Udm::ObjectImpl *impl) : ExtendedPortInstanceBase(impl), MgaObject(impl) {}
	ExtendedPortDelegate::ExtendedPortDelegate(const ExtendedPortDelegate &master) : ExtendedPortInstanceBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendedPortDelegate::ExtendedPortDelegate(ExtendedPortDelegate &&master) : ExtendedPortInstanceBase(master), MgaObject(master) {};

	ExtendedPortDelegate ExtendedPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedPortDelegate& ExtendedPortDelegate::operator=(ExtendedPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedPortDelegate ExtendedPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedPortDelegate ExtendedPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedPortDelegate ExtendedPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedPortDelegate> ExtendedPortDelegate::Instances() { return ::Udm::InstantiatedAttr< ExtendedPortDelegate>(impl); }
	ExtendedPortDelegate ExtendedPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedPortDelegate> ExtendedPortDelegate::Derived() { return ::Udm::DerivedAttr< ExtendedPortDelegate>(impl); }
	::Udm::ArchetypeAttr< ExtendedPortDelegate> ExtendedPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedPortDelegate>(impl); }
	::Udm::AClassAssocAttr< ExtendedDelegate, ExtendedPortInstanceBase> ExtendedPortDelegate::srcExtendedDelegate() const { return ::Udm::AClassAssocAttr< ExtendedDelegate, ExtendedPortInstanceBase>(impl, meta_srcExtendedDelegate, meta_srcExtendedDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendedPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendedPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ExtendedPortDelegate::Accept(Visitor &v) { v.Visit_ExtendedPortDelegate(*this); }

	::Uml::Class ExtendedPortDelegate::meta;
	::Uml::AssociationRole ExtendedPortDelegate::meta_srcExtendedDelegate;
	::Uml::AssociationRole ExtendedPortDelegate::meta_srcExtendedDelegate_rev;
	::Uml::CompositionParentRole ExtendedPortDelegate::meta_ComponentAssembly_parent;

	ExtendedPortInstanceBase::ExtendedPortInstanceBase() {}
	ExtendedPortInstanceBase::ExtendedPortInstanceBase(::Udm::ObjectImpl *impl) : ExtendPortEnd(impl), MgaObject(impl) {}
	ExtendedPortInstanceBase::ExtendedPortInstanceBase(const ExtendedPortInstanceBase &master) : ExtendPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendedPortInstanceBase::ExtendedPortInstanceBase(ExtendedPortInstanceBase &&master) : ExtendPortEnd(master), MgaObject(master) {};

	ExtendedPortInstanceBase ExtendedPortInstanceBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedPortInstanceBase& ExtendedPortInstanceBase::operator=(ExtendedPortInstanceBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedPortInstanceBase ExtendedPortInstanceBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedPortInstanceBase ExtendedPortInstanceBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedPortInstanceBase ExtendedPortInstanceBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedPortInstanceBase> ExtendedPortInstanceBase::Instances() { return ::Udm::InstantiatedAttr< ExtendedPortInstanceBase>(impl); }
	ExtendedPortInstanceBase ExtendedPortInstanceBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedPortInstanceBase> ExtendedPortInstanceBase::Derived() { return ::Udm::DerivedAttr< ExtendedPortInstanceBase>(impl); }
	::Udm::ArchetypeAttr< ExtendedPortInstanceBase> ExtendedPortInstanceBase::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedPortInstanceBase>(impl); }
	::Udm::AClassPointerAttr< ExtendedDelegate, ExtendedPortDelegate> ExtendedPortInstanceBase::dstExtendedDelegate() const { return ::Udm::AClassPointerAttr< ExtendedDelegate, ExtendedPortDelegate>(impl, meta_dstExtendedDelegate, meta_dstExtendedDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendedPortInstanceBase::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExtendedPortInstanceBase::meta;
	::Uml::AssociationRole ExtendedPortInstanceBase::meta_dstExtendedDelegate;
	::Uml::AssociationRole ExtendedPortInstanceBase::meta_dstExtendedDelegate_rev;

	MirrorPortInstanceBase::MirrorPortInstanceBase() {}
	MirrorPortInstanceBase::MirrorPortInstanceBase(::Udm::ObjectImpl *impl) : ExtendPortEnd(impl), MgaObject(impl) {}
	MirrorPortInstanceBase::MirrorPortInstanceBase(const MirrorPortInstanceBase &master) : ExtendPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	MirrorPortInstanceBase::MirrorPortInstanceBase(MirrorPortInstanceBase &&master) : ExtendPortEnd(master), MgaObject(master) {};

	MirrorPortInstanceBase MirrorPortInstanceBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MirrorPortInstanceBase& MirrorPortInstanceBase::operator=(MirrorPortInstanceBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MirrorPortInstanceBase MirrorPortInstanceBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MirrorPortInstanceBase MirrorPortInstanceBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MirrorPortInstanceBase MirrorPortInstanceBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MirrorPortInstanceBase> MirrorPortInstanceBase::Instances() { return ::Udm::InstantiatedAttr< MirrorPortInstanceBase>(impl); }
	MirrorPortInstanceBase MirrorPortInstanceBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MirrorPortInstanceBase> MirrorPortInstanceBase::Derived() { return ::Udm::DerivedAttr< MirrorPortInstanceBase>(impl); }
	::Udm::ArchetypeAttr< MirrorPortInstanceBase> MirrorPortInstanceBase::Archetype() const { return ::Udm::ArchetypeAttr< MirrorPortInstanceBase>(impl); }
	::Udm::AClassPointerAttr< MirrorDelegate, MirrorPortDelegate> MirrorPortInstanceBase::dstMirrorDelegate() const { return ::Udm::AClassPointerAttr< MirrorDelegate, MirrorPortDelegate>(impl, meta_dstMirrorDelegate, meta_dstMirrorDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> MirrorPortInstanceBase::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MirrorPortInstanceBase::meta;
	::Uml::AssociationRole MirrorPortInstanceBase::meta_dstMirrorDelegate;
	::Uml::AssociationRole MirrorPortInstanceBase::meta_dstMirrorDelegate_rev;

	MirrorDelegate::MirrorDelegate() {}
	MirrorDelegate::MirrorDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MirrorDelegate::MirrorDelegate(const MirrorDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MirrorDelegate::MirrorDelegate(MirrorDelegate &&master) : MgaObject(master) {};

	MirrorDelegate MirrorDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MirrorDelegate& MirrorDelegate::operator=(MirrorDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MirrorDelegate MirrorDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MirrorDelegate MirrorDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MirrorDelegate MirrorDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MirrorDelegate> MirrorDelegate::Instances() { return ::Udm::InstantiatedAttr< MirrorDelegate>(impl); }
	MirrorDelegate MirrorDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MirrorDelegate> MirrorDelegate::Derived() { return ::Udm::DerivedAttr< MirrorDelegate>(impl); }
	::Udm::ArchetypeAttr< MirrorDelegate> MirrorDelegate::Archetype() const { return ::Udm::ArchetypeAttr< MirrorDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> MirrorDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> MirrorDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MirrorPortInstanceBase> MirrorDelegate::srcMirrorDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::MirrorPortInstanceBase>(impl, meta_srcMirrorDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::MirrorPortDelegate> MirrorDelegate::dstMirrorDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::MirrorPortDelegate>(impl, meta_dstMirrorDelegate_end_); }
	void MirrorDelegate::Accept(Visitor &v) { v.Visit_MirrorDelegate(*this); }

	::Uml::Class MirrorDelegate::meta;
	::Uml::CompositionParentRole MirrorDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole MirrorDelegate::meta_srcMirrorDelegate_end_;
	::Uml::AssociationRole MirrorDelegate::meta_dstMirrorDelegate_end_;

	MirrorPortDelegate::MirrorPortDelegate() {}
	MirrorPortDelegate::MirrorPortDelegate(::Udm::ObjectImpl *impl) : MirrorPortInstanceBase(impl), MgaObject(impl) {}
	MirrorPortDelegate::MirrorPortDelegate(const MirrorPortDelegate &master) : MirrorPortInstanceBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	MirrorPortDelegate::MirrorPortDelegate(MirrorPortDelegate &&master) : MirrorPortInstanceBase(master), MgaObject(master) {};

	MirrorPortDelegate MirrorPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MirrorPortDelegate& MirrorPortDelegate::operator=(MirrorPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MirrorPortDelegate MirrorPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MirrorPortDelegate MirrorPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MirrorPortDelegate MirrorPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MirrorPortDelegate> MirrorPortDelegate::Instances() { return ::Udm::InstantiatedAttr< MirrorPortDelegate>(impl); }
	MirrorPortDelegate MirrorPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MirrorPortDelegate> MirrorPortDelegate::Derived() { return ::Udm::DerivedAttr< MirrorPortDelegate>(impl); }
	::Udm::ArchetypeAttr< MirrorPortDelegate> MirrorPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< MirrorPortDelegate>(impl); }
	::Udm::AClassAssocAttr< MirrorDelegate, MirrorPortInstanceBase> MirrorPortDelegate::srcMirrorDelegate() const { return ::Udm::AClassAssocAttr< MirrorDelegate, MirrorPortInstanceBase>(impl, meta_srcMirrorDelegate, meta_srcMirrorDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> MirrorPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> MirrorPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void MirrorPortDelegate::Accept(Visitor &v) { v.Visit_MirrorPortDelegate(*this); }

	::Uml::Class MirrorPortDelegate::meta;
	::Uml::AssociationRole MirrorPortDelegate::meta_srcMirrorDelegate;
	::Uml::AssociationRole MirrorPortDelegate::meta_srcMirrorDelegate_rev;
	::Uml::CompositionParentRole MirrorPortDelegate::meta_ComponentAssembly_parent;

	AssemblyConfigPropertyEnd::AssemblyConfigPropertyEnd() {}
	AssemblyConfigPropertyEnd::AssemblyConfigPropertyEnd(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyConfigPropertyEnd::AssemblyConfigPropertyEnd(const AssemblyConfigPropertyEnd &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyConfigPropertyEnd::AssemblyConfigPropertyEnd(AssemblyConfigPropertyEnd &&master) : MgaObject(master) {};

	AssemblyConfigPropertyEnd AssemblyConfigPropertyEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyConfigPropertyEnd& AssemblyConfigPropertyEnd::operator=(AssemblyConfigPropertyEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyConfigPropertyEnd AssemblyConfigPropertyEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyConfigPropertyEnd AssemblyConfigPropertyEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyConfigPropertyEnd AssemblyConfigPropertyEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyConfigPropertyEnd> AssemblyConfigPropertyEnd::Instances() { return ::Udm::InstantiatedAttr< AssemblyConfigPropertyEnd>(impl); }
	AssemblyConfigPropertyEnd AssemblyConfigPropertyEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyConfigPropertyEnd> AssemblyConfigPropertyEnd::Derived() { return ::Udm::DerivedAttr< AssemblyConfigPropertyEnd>(impl); }
	::Udm::ArchetypeAttr< AssemblyConfigPropertyEnd> AssemblyConfigPropertyEnd::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyConfigPropertyEnd>(impl); }
	::Udm::AClassAssocAttr< AssemblyConfigProperty, Property> AssemblyConfigPropertyEnd::dstAssemblyConfigProperty() const { return ::Udm::AClassAssocAttr< AssemblyConfigProperty, Property>(impl, meta_dstAssemblyConfigProperty, meta_dstAssemblyConfigProperty_rev); }
	::Udm::AClassAssocAttr< AssemblyselectRequirement, Requirement> AssemblyConfigPropertyEnd::dstAssemblyselectRequirement() const { return ::Udm::AClassAssocAttr< AssemblyselectRequirement, Requirement>(impl, meta_dstAssemblyselectRequirement, meta_dstAssemblyselectRequirement_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AssemblyConfigPropertyEnd::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class AssemblyConfigPropertyEnd::meta;
	::Uml::AssociationRole AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty;
	::Uml::AssociationRole AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty_rev;
	::Uml::AssociationRole AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement;
	::Uml::AssociationRole AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement_rev;

	ConnectorToFacet::ConnectorToFacet() {}
	ConnectorToFacet::ConnectorToFacet(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorToFacet::ConnectorToFacet(const ConnectorToFacet &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorToFacet::ConnectorToFacet(ConnectorToFacet &&master) : MgaObject(master) {};

	ConnectorToFacet ConnectorToFacet::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorToFacet& ConnectorToFacet::operator=(ConnectorToFacet &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorToFacet ConnectorToFacet::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorToFacet ConnectorToFacet::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorToFacet ConnectorToFacet::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorToFacet> ConnectorToFacet::Instances() { return ::Udm::InstantiatedAttr< ConnectorToFacet>(impl); }
	ConnectorToFacet ConnectorToFacet::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorToFacet> ConnectorToFacet::Derived() { return ::Udm::DerivedAttr< ConnectorToFacet>(impl); }
	::Udm::ArchetypeAttr< ConnectorToFacet> ConnectorToFacet::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorToFacet>(impl); }
	::Udm::StringAttr ConnectorToFacet::InnerName() const { return ::Udm::StringAttr(impl, meta_InnerName); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorToFacet::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorToFacet::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ConnectorInstance> ConnectorToFacet::srcConnectorToFacet_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorInstance>(impl, meta_srcConnectorToFacet_end_); }
	::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd> ConnectorToFacet::dstConnectorToFacet_end() const { return ::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd>(impl, meta_dstConnectorToFacet_end_); }
	void ConnectorToFacet::Accept(Visitor &v) { v.Visit_ConnectorToFacet(*this); }

	::Uml::Class ConnectorToFacet::meta;
	::Uml::Attribute ConnectorToFacet::meta_InnerName;
	::Uml::CompositionParentRole ConnectorToFacet::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ConnectorToFacet::meta_srcConnectorToFacet_end_;
	::Uml::AssociationRole ConnectorToFacet::meta_dstConnectorToFacet_end_;

	ConnectorToReceptacle::ConnectorToReceptacle() {}
	ConnectorToReceptacle::ConnectorToReceptacle(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorToReceptacle::ConnectorToReceptacle(const ConnectorToReceptacle &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorToReceptacle::ConnectorToReceptacle(ConnectorToReceptacle &&master) : MgaObject(master) {};

	ConnectorToReceptacle ConnectorToReceptacle::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorToReceptacle& ConnectorToReceptacle::operator=(ConnectorToReceptacle &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorToReceptacle ConnectorToReceptacle::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorToReceptacle ConnectorToReceptacle::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorToReceptacle ConnectorToReceptacle::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorToReceptacle> ConnectorToReceptacle::Instances() { return ::Udm::InstantiatedAttr< ConnectorToReceptacle>(impl); }
	ConnectorToReceptacle ConnectorToReceptacle::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorToReceptacle> ConnectorToReceptacle::Derived() { return ::Udm::DerivedAttr< ConnectorToReceptacle>(impl); }
	::Udm::ArchetypeAttr< ConnectorToReceptacle> ConnectorToReceptacle::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorToReceptacle>(impl); }
	::Udm::StringAttr ConnectorToReceptacle::InnerName() const { return ::Udm::StringAttr(impl, meta_InnerName); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorToReceptacle::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorToReceptacle::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd> ConnectorToReceptacle::srcConnectorToReceptacle_end() const { return ::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd>(impl, meta_srcConnectorToReceptacle_end_); }
	::Udm::AssocEndAttr< ::PICML::ConnectorInstance> ConnectorToReceptacle::dstConnectorToReceptacle_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorInstance>(impl, meta_dstConnectorToReceptacle_end_); }
	void ConnectorToReceptacle::Accept(Visitor &v) { v.Visit_ConnectorToReceptacle(*this); }

	::Uml::Class ConnectorToReceptacle::meta;
	::Uml::Attribute ConnectorToReceptacle::meta_InnerName;
	::Uml::CompositionParentRole ConnectorToReceptacle::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ConnectorToReceptacle::meta_srcConnectorToReceptacle_end_;
	::Uml::AssociationRole ConnectorToReceptacle::meta_dstConnectorToReceptacle_end_;

	ExternalPortEnd::ExternalPortEnd() {}
	ExternalPortEnd::ExternalPortEnd(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalPortEnd::ExternalPortEnd(const ExternalPortEnd &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalPortEnd::ExternalPortEnd(ExternalPortEnd &&master) : MgaObject(master) {};

	ExternalPortEnd ExternalPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalPortEnd& ExternalPortEnd::operator=(ExternalPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalPortEnd ExternalPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalPortEnd ExternalPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalPortEnd ExternalPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalPortEnd> ExternalPortEnd::Instances() { return ::Udm::InstantiatedAttr< ExternalPortEnd>(impl); }
	ExternalPortEnd ExternalPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalPortEnd> ExternalPortEnd::Derived() { return ::Udm::DerivedAttr< ExternalPortEnd>(impl); }
	::Udm::ArchetypeAttr< ExternalPortEnd> ExternalPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< ExternalPortEnd>(impl); }
	::Udm::AClassAssocAttr< ExternalDelegate, ExternalPort> ExternalPortEnd::srcExternalDelegate() const { return ::Udm::AClassAssocAttr< ExternalDelegate, ExternalPort>(impl, meta_srcExternalDelegate, meta_srcExternalDelegate_rev); }
	::Udm::ParentAttr< ::PICML::MgaObject> ExternalPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExternalPortEnd::meta;
	::Uml::AssociationRole ExternalPortEnd::meta_srcExternalDelegate;
	::Uml::AssociationRole ExternalPortEnd::meta_srcExternalDelegate_rev;

	ProvidedRequestPortEnd::ProvidedRequestPortEnd() {}
	ProvidedRequestPortEnd::ProvidedRequestPortEnd(::Udm::ObjectImpl *impl) : ExternalPortEnd(impl), MgaObject(impl) {}
	ProvidedRequestPortEnd::ProvidedRequestPortEnd(const ProvidedRequestPortEnd &master) : ExternalPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ProvidedRequestPortEnd::ProvidedRequestPortEnd(ProvidedRequestPortEnd &&master) : ExternalPortEnd(master), MgaObject(master) {};

	ProvidedRequestPortEnd ProvidedRequestPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ProvidedRequestPortEnd& ProvidedRequestPortEnd::operator=(ProvidedRequestPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ProvidedRequestPortEnd ProvidedRequestPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ProvidedRequestPortEnd ProvidedRequestPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ProvidedRequestPortEnd ProvidedRequestPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ProvidedRequestPortEnd> ProvidedRequestPortEnd::Instances() { return ::Udm::InstantiatedAttr< ProvidedRequestPortEnd>(impl); }
	ProvidedRequestPortEnd ProvidedRequestPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ProvidedRequestPortEnd> ProvidedRequestPortEnd::Derived() { return ::Udm::DerivedAttr< ProvidedRequestPortEnd>(impl); }
	::Udm::ArchetypeAttr< ProvidedRequestPortEnd> ProvidedRequestPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< ProvidedRequestPortEnd>(impl); }
	::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPortDelegate> ProvidedRequestPortEnd::srcFacetDelegate() const { return ::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPortDelegate>(impl, meta_srcFacetDelegate, meta_srcFacetDelegate_rev); }
	::Udm::AClassAssocAttr< Invoke, RequiredRequestPortEnd> ProvidedRequestPortEnd::srcinvoke() const { return ::Udm::AClassAssocAttr< Invoke, RequiredRequestPortEnd>(impl, meta_srcinvoke, meta_srcinvoke_rev); }
	::Udm::AClassAssocAttr< ConnectorToFacet, ConnectorInstance> ProvidedRequestPortEnd::srcConnectorToFacet() const { return ::Udm::AClassAssocAttr< ConnectorToFacet, ConnectorInstance>(impl, meta_srcConnectorToFacet, meta_srcConnectorToFacet_rev); }
	::Udm::ParentAttr< ::PICML::MgaObject> ProvidedRequestPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ProvidedRequestPortEnd::meta;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcFacetDelegate;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcFacetDelegate_rev;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcinvoke;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcinvoke_rev;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcConnectorToFacet;
	::Uml::AssociationRole ProvidedRequestPortEnd::meta_srcConnectorToFacet_rev;

	ProvidedRequestPortDelegate::ProvidedRequestPortDelegate() {}
	ProvidedRequestPortDelegate::ProvidedRequestPortDelegate(::Udm::ObjectImpl *impl) : ProvidedRequestPortEnd(impl), MgaObject(impl) {}
	ProvidedRequestPortDelegate::ProvidedRequestPortDelegate(const ProvidedRequestPortDelegate &master) : ProvidedRequestPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ProvidedRequestPortDelegate::ProvidedRequestPortDelegate(ProvidedRequestPortDelegate &&master) : ProvidedRequestPortEnd(master), MgaObject(master) {};

	ProvidedRequestPortDelegate ProvidedRequestPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ProvidedRequestPortDelegate& ProvidedRequestPortDelegate::operator=(ProvidedRequestPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ProvidedRequestPortDelegate ProvidedRequestPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ProvidedRequestPortDelegate ProvidedRequestPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ProvidedRequestPortDelegate ProvidedRequestPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ProvidedRequestPortDelegate> ProvidedRequestPortDelegate::Instances() { return ::Udm::InstantiatedAttr< ProvidedRequestPortDelegate>(impl); }
	ProvidedRequestPortDelegate ProvidedRequestPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ProvidedRequestPortDelegate> ProvidedRequestPortDelegate::Derived() { return ::Udm::DerivedAttr< ProvidedRequestPortDelegate>(impl); }
	::Udm::ArchetypeAttr< ProvidedRequestPortDelegate> ProvidedRequestPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ProvidedRequestPortDelegate>(impl); }
	::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPortEnd> ProvidedRequestPortDelegate::dstFacetDelegate() const { return ::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPortEnd>(impl, meta_dstFacetDelegate, meta_dstFacetDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ProvidedRequestPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ProvidedRequestPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ProvidedRequestPortDelegate::Accept(Visitor &v) { v.Visit_ProvidedRequestPortDelegate(*this); }

	::Uml::Class ProvidedRequestPortDelegate::meta;
	::Uml::AssociationRole ProvidedRequestPortDelegate::meta_dstFacetDelegate;
	::Uml::AssociationRole ProvidedRequestPortDelegate::meta_dstFacetDelegate_rev;
	::Uml::CompositionParentRole ProvidedRequestPortDelegate::meta_ComponentAssembly_parent;

	RequiredRequestPortDelegate::RequiredRequestPortDelegate() {}
	RequiredRequestPortDelegate::RequiredRequestPortDelegate(::Udm::ObjectImpl *impl) : RequiredRequestPortEnd(impl), MgaObject(impl) {}
	RequiredRequestPortDelegate::RequiredRequestPortDelegate(const RequiredRequestPortDelegate &master) : RequiredRequestPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRequestPortDelegate::RequiredRequestPortDelegate(RequiredRequestPortDelegate &&master) : RequiredRequestPortEnd(master), MgaObject(master) {};

	RequiredRequestPortDelegate RequiredRequestPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRequestPortDelegate& RequiredRequestPortDelegate::operator=(RequiredRequestPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRequestPortDelegate RequiredRequestPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRequestPortDelegate RequiredRequestPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRequestPortDelegate RequiredRequestPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRequestPortDelegate> RequiredRequestPortDelegate::Instances() { return ::Udm::InstantiatedAttr< RequiredRequestPortDelegate>(impl); }
	RequiredRequestPortDelegate RequiredRequestPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRequestPortDelegate> RequiredRequestPortDelegate::Derived() { return ::Udm::DerivedAttr< RequiredRequestPortDelegate>(impl); }
	::Udm::ArchetypeAttr< RequiredRequestPortDelegate> RequiredRequestPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRequestPortDelegate>(impl); }
	::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPortEnd> RequiredRequestPortDelegate::dstReceptacleDelegate() const { return ::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPortEnd>(impl, meta_dstReceptacleDelegate, meta_dstReceptacleDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> RequiredRequestPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> RequiredRequestPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void RequiredRequestPortDelegate::Accept(Visitor &v) { v.Visit_RequiredRequestPortDelegate(*this); }

	::Uml::Class RequiredRequestPortDelegate::meta;
	::Uml::AssociationRole RequiredRequestPortDelegate::meta_dstReceptacleDelegate;
	::Uml::AssociationRole RequiredRequestPortDelegate::meta_dstReceptacleDelegate_rev;
	::Uml::CompositionParentRole RequiredRequestPortDelegate::meta_ComponentAssembly_parent;

	OutEventPortDelegate::OutEventPortDelegate() {}
	OutEventPortDelegate::OutEventPortDelegate(::Udm::ObjectImpl *impl) : OutEventPortEnd(impl), MgaObject(impl) {}
	OutEventPortDelegate::OutEventPortDelegate(const OutEventPortDelegate &master) : OutEventPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OutEventPortDelegate::OutEventPortDelegate(OutEventPortDelegate &&master) : OutEventPortEnd(master), MgaObject(master) {};

	OutEventPortDelegate OutEventPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutEventPortDelegate& OutEventPortDelegate::operator=(OutEventPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutEventPortDelegate OutEventPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutEventPortDelegate OutEventPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutEventPortDelegate OutEventPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutEventPortDelegate> OutEventPortDelegate::Instances() { return ::Udm::InstantiatedAttr< OutEventPortDelegate>(impl); }
	OutEventPortDelegate OutEventPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutEventPortDelegate> OutEventPortDelegate::Derived() { return ::Udm::DerivedAttr< OutEventPortDelegate>(impl); }
	::Udm::ArchetypeAttr< OutEventPortDelegate> OutEventPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< OutEventPortDelegate>(impl); }
	::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPortEnd> OutEventPortDelegate::srcEventSourceDelegate() const { return ::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPortEnd>(impl, meta_srcEventSourceDelegate, meta_srcEventSourceDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> OutEventPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> OutEventPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void OutEventPortDelegate::Accept(Visitor &v) { v.Visit_OutEventPortDelegate(*this); }

	::Uml::Class OutEventPortDelegate::meta;
	::Uml::AssociationRole OutEventPortDelegate::meta_srcEventSourceDelegate;
	::Uml::AssociationRole OutEventPortDelegate::meta_srcEventSourceDelegate_rev;
	::Uml::CompositionParentRole OutEventPortDelegate::meta_ComponentAssembly_parent;

	InEventPortDelegate::InEventPortDelegate() {}
	InEventPortDelegate::InEventPortDelegate(::Udm::ObjectImpl *impl) : InEventPortEnd(impl), MgaObject(impl) {}
	InEventPortDelegate::InEventPortDelegate(const InEventPortDelegate &master) : InEventPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	InEventPortDelegate::InEventPortDelegate(InEventPortDelegate &&master) : InEventPortEnd(master), MgaObject(master) {};

	InEventPortDelegate InEventPortDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InEventPortDelegate& InEventPortDelegate::operator=(InEventPortDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InEventPortDelegate InEventPortDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InEventPortDelegate InEventPortDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InEventPortDelegate InEventPortDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InEventPortDelegate> InEventPortDelegate::Instances() { return ::Udm::InstantiatedAttr< InEventPortDelegate>(impl); }
	InEventPortDelegate InEventPortDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InEventPortDelegate> InEventPortDelegate::Derived() { return ::Udm::DerivedAttr< InEventPortDelegate>(impl); }
	::Udm::ArchetypeAttr< InEventPortDelegate> InEventPortDelegate::Archetype() const { return ::Udm::ArchetypeAttr< InEventPortDelegate>(impl); }
	::Udm::AClassAssocAttr< EventSinkDelegate, InEventPortEnd> InEventPortDelegate::dstEventSinkDelegate() const { return ::Udm::AClassAssocAttr< EventSinkDelegate, InEventPortEnd>(impl, meta_dstEventSinkDelegate, meta_dstEventSinkDelegate_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> InEventPortDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> InEventPortDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void InEventPortDelegate::Accept(Visitor &v) { v.Visit_InEventPortDelegate(*this); }

	::Uml::Class InEventPortDelegate::meta;
	::Uml::AssociationRole InEventPortDelegate::meta_dstEventSinkDelegate;
	::Uml::AssociationRole InEventPortDelegate::meta_dstEventSinkDelegate_rev;
	::Uml::CompositionParentRole InEventPortDelegate::meta_ComponentAssembly_parent;

	RequiredRequestPortEnd::RequiredRequestPortEnd() {}
	RequiredRequestPortEnd::RequiredRequestPortEnd(::Udm::ObjectImpl *impl) : ExternalPortEnd(impl), MgaObject(impl) {}
	RequiredRequestPortEnd::RequiredRequestPortEnd(const RequiredRequestPortEnd &master) : ExternalPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRequestPortEnd::RequiredRequestPortEnd(RequiredRequestPortEnd &&master) : ExternalPortEnd(master), MgaObject(master) {};

	RequiredRequestPortEnd RequiredRequestPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRequestPortEnd& RequiredRequestPortEnd::operator=(RequiredRequestPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRequestPortEnd RequiredRequestPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRequestPortEnd RequiredRequestPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRequestPortEnd RequiredRequestPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRequestPortEnd> RequiredRequestPortEnd::Instances() { return ::Udm::InstantiatedAttr< RequiredRequestPortEnd>(impl); }
	RequiredRequestPortEnd RequiredRequestPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRequestPortEnd> RequiredRequestPortEnd::Derived() { return ::Udm::DerivedAttr< RequiredRequestPortEnd>(impl); }
	::Udm::ArchetypeAttr< RequiredRequestPortEnd> RequiredRequestPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRequestPortEnd>(impl); }
	::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPortDelegate> RequiredRequestPortEnd::srcReceptacleDelegate() const { return ::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPortDelegate>(impl, meta_srcReceptacleDelegate, meta_srcReceptacleDelegate_rev); }
	::Udm::AClassAssocAttr< ConnectorToReceptacle, ConnectorInstance> RequiredRequestPortEnd::dstConnectorToReceptacle() const { return ::Udm::AClassAssocAttr< ConnectorToReceptacle, ConnectorInstance>(impl, meta_dstConnectorToReceptacle, meta_dstConnectorToReceptacle_rev); }
	::Udm::AClassAssocAttr< Invoke, ProvidedRequestPortEnd> RequiredRequestPortEnd::dstinvoke() const { return ::Udm::AClassAssocAttr< Invoke, ProvidedRequestPortEnd>(impl, meta_dstinvoke, meta_dstinvoke_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> RequiredRequestPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RequiredRequestPortEnd::meta;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_srcReceptacleDelegate;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_srcReceptacleDelegate_rev;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_dstConnectorToReceptacle;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_dstConnectorToReceptacle_rev;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_dstinvoke;
	::Uml::AssociationRole RequiredRequestPortEnd::meta_dstinvoke_rev;

	ExtendPortEnd::ExtendPortEnd() {}
	ExtendPortEnd::ExtendPortEnd(::Udm::ObjectImpl *impl) : ExternalPortEnd(impl), MgaObject(impl) {}
	ExtendPortEnd::ExtendPortEnd(const ExtendPortEnd &master) : ExternalPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendPortEnd::ExtendPortEnd(ExtendPortEnd &&master) : ExternalPortEnd(master), MgaObject(master) {};

	ExtendPortEnd ExtendPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendPortEnd& ExtendPortEnd::operator=(ExtendPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendPortEnd ExtendPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendPortEnd ExtendPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendPortEnd ExtendPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendPortEnd> ExtendPortEnd::Instances() { return ::Udm::InstantiatedAttr< ExtendPortEnd>(impl); }
	ExtendPortEnd ExtendPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendPortEnd> ExtendPortEnd::Derived() { return ::Udm::DerivedAttr< ExtendPortEnd>(impl); }
	::Udm::ArchetypeAttr< ExtendPortEnd> ExtendPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< ExtendPortEnd>(impl); }
	::Udm::AClassPointerAttr< Publish, ConnectorInstance> ExtendPortEnd::dstPublish() const { return ::Udm::AClassPointerAttr< Publish, ConnectorInstance>(impl, meta_dstPublish, meta_dstPublish_rev); }
	::Udm::AClassPointerAttr< Consume, ConnectorInstance> ExtendPortEnd::srcConsume() const { return ::Udm::AClassPointerAttr< Consume, ConnectorInstance>(impl, meta_srcConsume, meta_srcConsume_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExtendPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExtendPortEnd::meta;
	::Uml::AssociationRole ExtendPortEnd::meta_dstPublish;
	::Uml::AssociationRole ExtendPortEnd::meta_dstPublish_rev;
	::Uml::AssociationRole ExtendPortEnd::meta_srcConsume;
	::Uml::AssociationRole ExtendPortEnd::meta_srcConsume_rev;

	OutEventPortEnd::OutEventPortEnd() {}
	OutEventPortEnd::OutEventPortEnd(::Udm::ObjectImpl *impl) : ExternalPortEnd(impl), MgaObject(impl) {}
	OutEventPortEnd::OutEventPortEnd(const OutEventPortEnd &master) : ExternalPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OutEventPortEnd::OutEventPortEnd(OutEventPortEnd &&master) : ExternalPortEnd(master), MgaObject(master) {};

	OutEventPortEnd OutEventPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutEventPortEnd& OutEventPortEnd::operator=(OutEventPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutEventPortEnd OutEventPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutEventPortEnd OutEventPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutEventPortEnd OutEventPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutEventPortEnd> OutEventPortEnd::Instances() { return ::Udm::InstantiatedAttr< OutEventPortEnd>(impl); }
	OutEventPortEnd OutEventPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutEventPortEnd> OutEventPortEnd::Derived() { return ::Udm::DerivedAttr< OutEventPortEnd>(impl); }
	::Udm::ArchetypeAttr< OutEventPortEnd> OutEventPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< OutEventPortEnd>(impl); }
	::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPortDelegate> OutEventPortEnd::dstEventSourceDelegate() const { return ::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPortDelegate>(impl, meta_dstEventSourceDelegate, meta_dstEventSourceDelegate_rev); }
	::Udm::AClassAssocAttr< SendsTo, InEventPortEnd> OutEventPortEnd::dstSendsTo() const { return ::Udm::AClassAssocAttr< SendsTo, InEventPortEnd>(impl, meta_dstSendsTo, meta_dstSendsTo_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> OutEventPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class OutEventPortEnd::meta;
	::Uml::AssociationRole OutEventPortEnd::meta_dstEventSourceDelegate;
	::Uml::AssociationRole OutEventPortEnd::meta_dstEventSourceDelegate_rev;
	::Uml::AssociationRole OutEventPortEnd::meta_dstSendsTo;
	::Uml::AssociationRole OutEventPortEnd::meta_dstSendsTo_rev;

	InEventPortEnd::InEventPortEnd() {}
	InEventPortEnd::InEventPortEnd(::Udm::ObjectImpl *impl) : ExternalPortEnd(impl), MgaObject(impl) {}
	InEventPortEnd::InEventPortEnd(const InEventPortEnd &master) : ExternalPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	InEventPortEnd::InEventPortEnd(InEventPortEnd &&master) : ExternalPortEnd(master), MgaObject(master) {};

	InEventPortEnd InEventPortEnd::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InEventPortEnd& InEventPortEnd::operator=(InEventPortEnd &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InEventPortEnd InEventPortEnd::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InEventPortEnd InEventPortEnd::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InEventPortEnd InEventPortEnd::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InEventPortEnd> InEventPortEnd::Instances() { return ::Udm::InstantiatedAttr< InEventPortEnd>(impl); }
	InEventPortEnd InEventPortEnd::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InEventPortEnd> InEventPortEnd::Derived() { return ::Udm::DerivedAttr< InEventPortEnd>(impl); }
	::Udm::ArchetypeAttr< InEventPortEnd> InEventPortEnd::Archetype() const { return ::Udm::ArchetypeAttr< InEventPortEnd>(impl); }
	::Udm::AClassAssocAttr< EventSinkDelegate, InEventPortDelegate> InEventPortEnd::srcEventSinkDelegate() const { return ::Udm::AClassAssocAttr< EventSinkDelegate, InEventPortDelegate>(impl, meta_srcEventSinkDelegate, meta_srcEventSinkDelegate_rev); }
	::Udm::AClassAssocAttr< SendsTo, OutEventPortEnd> InEventPortEnd::srcSendsTo() const { return ::Udm::AClassAssocAttr< SendsTo, OutEventPortEnd>(impl, meta_srcSendsTo, meta_srcSendsTo_rev); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> InEventPortEnd::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class InEventPortEnd::meta;
	::Uml::AssociationRole InEventPortEnd::meta_srcEventSinkDelegate;
	::Uml::AssociationRole InEventPortEnd::meta_srcEventSinkDelegate_rev;
	::Uml::AssociationRole InEventPortEnd::meta_srcSendsTo;
	::Uml::AssociationRole InEventPortEnd::meta_srcSendsTo_rev;

	Consume::Consume() {}
	Consume::Consume(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Consume::Consume(const Consume &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Consume::Consume(Consume &&master) : MgaObject(master) {};

	Consume Consume::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Consume& Consume::operator=(Consume &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Consume Consume::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Consume Consume::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Consume Consume::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Consume> Consume::Instances() { return ::Udm::InstantiatedAttr< Consume>(impl); }
	Consume Consume::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Consume> Consume::Derived() { return ::Udm::DerivedAttr< Consume>(impl); }
	::Udm::ArchetypeAttr< Consume> Consume::Archetype() const { return ::Udm::ArchetypeAttr< Consume>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Consume::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Consume::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ConnectorInstance> Consume::srcConsume_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorInstance>(impl, meta_srcConsume_end_); }
	::Udm::AssocEndAttr< ::PICML::ExtendPortEnd> Consume::dstConsume_end() const { return ::Udm::AssocEndAttr< ::PICML::ExtendPortEnd>(impl, meta_dstConsume_end_); }
	void Consume::Accept(Visitor &v) { v.Visit_Consume(*this); }

	::Uml::Class Consume::meta;
	::Uml::CompositionParentRole Consume::meta_ComponentAssembly_parent;
	::Uml::AssociationRole Consume::meta_srcConsume_end_;
	::Uml::AssociationRole Consume::meta_dstConsume_end_;

	Publish::Publish() {}
	Publish::Publish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Publish::Publish(const Publish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Publish::Publish(Publish &&master) : MgaObject(master) {};

	Publish Publish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Publish& Publish::operator=(Publish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Publish Publish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Publish Publish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Publish Publish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Publish> Publish::Instances() { return ::Udm::InstantiatedAttr< Publish>(impl); }
	Publish Publish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Publish> Publish::Derived() { return ::Udm::DerivedAttr< Publish>(impl); }
	::Udm::ArchetypeAttr< Publish> Publish::Archetype() const { return ::Udm::ArchetypeAttr< Publish>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Publish::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Publish::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ExtendPortEnd> Publish::srcPublish_end() const { return ::Udm::AssocEndAttr< ::PICML::ExtendPortEnd>(impl, meta_srcPublish_end_); }
	::Udm::AssocEndAttr< ::PICML::ConnectorInstance> Publish::dstPublish_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorInstance>(impl, meta_dstPublish_end_); }
	void Publish::Accept(Visitor &v) { v.Visit_Publish(*this); }

	::Uml::Class Publish::meta;
	::Uml::CompositionParentRole Publish::meta_ComponentAssembly_parent;
	::Uml::AssociationRole Publish::meta_srcPublish_end_;
	::Uml::AssociationRole Publish::meta_dstPublish_end_;

	AttributeMappingDelegate::AttributeMappingDelegate() {}
	AttributeMappingDelegate::AttributeMappingDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMappingDelegate::AttributeMappingDelegate(const AttributeMappingDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMappingDelegate::AttributeMappingDelegate(AttributeMappingDelegate &&master) : MgaObject(master) {};

	AttributeMappingDelegate AttributeMappingDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMappingDelegate& AttributeMappingDelegate::operator=(AttributeMappingDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMappingDelegate AttributeMappingDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMappingDelegate AttributeMappingDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMappingDelegate AttributeMappingDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMappingDelegate> AttributeMappingDelegate::Instances() { return ::Udm::InstantiatedAttr< AttributeMappingDelegate>(impl); }
	AttributeMappingDelegate AttributeMappingDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMappingDelegate> AttributeMappingDelegate::Derived() { return ::Udm::DerivedAttr< AttributeMappingDelegate>(impl); }
	::Udm::ArchetypeAttr< AttributeMappingDelegate> AttributeMappingDelegate::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMappingDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMappingDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMappingDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AttributeMapping> AttributeMappingDelegate::srcAttributeMappingDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeMapping>(impl, meta_srcAttributeMappingDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::AttributeMapping> AttributeMappingDelegate::dstAttributeMappingDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeMapping>(impl, meta_dstAttributeMappingDelegate_end_); }
	void AttributeMappingDelegate::Accept(Visitor &v) { v.Visit_AttributeMappingDelegate(*this); }

	::Uml::Class AttributeMappingDelegate::meta;
	::Uml::CompositionParentRole AttributeMappingDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_;
	::Uml::AssociationRole AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_;

	AttributeMappingValue::AttributeMappingValue() {}
	AttributeMappingValue::AttributeMappingValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMappingValue::AttributeMappingValue(const AttributeMappingValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMappingValue::AttributeMappingValue(AttributeMappingValue &&master) : MgaObject(master) {};

	AttributeMappingValue AttributeMappingValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMappingValue& AttributeMappingValue::operator=(AttributeMappingValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMappingValue AttributeMappingValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMappingValue AttributeMappingValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMappingValue AttributeMappingValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMappingValue> AttributeMappingValue::Instances() { return ::Udm::InstantiatedAttr< AttributeMappingValue>(impl); }
	AttributeMappingValue AttributeMappingValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMappingValue> AttributeMappingValue::Derived() { return ::Udm::DerivedAttr< AttributeMappingValue>(impl); }
	::Udm::ArchetypeAttr< AttributeMappingValue> AttributeMappingValue::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMappingValue>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMappingValue::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMappingValue::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AttributeMapping> AttributeMappingValue::srcAttributeMappingValue_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeMapping>(impl, meta_srcAttributeMappingValue_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> AttributeMappingValue::dstAttributeMappingValue_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstAttributeMappingValue_end_); }
	void AttributeMappingValue::Accept(Visitor &v) { v.Visit_AttributeMappingValue(*this); }

	::Uml::Class AttributeMappingValue::meta;
	::Uml::CompositionParentRole AttributeMappingValue::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeMappingValue::meta_srcAttributeMappingValue_end_;
	::Uml::AssociationRole AttributeMappingValue::meta_dstAttributeMappingValue_end_;

	AttributeMapping::AttributeMapping() {}
	AttributeMapping::AttributeMapping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMapping::AttributeMapping(const AttributeMapping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMapping::AttributeMapping(AttributeMapping &&master) : MgaObject(master) {};

	AttributeMapping AttributeMapping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMapping& AttributeMapping::operator=(AttributeMapping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMapping AttributeMapping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMapping AttributeMapping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMapping AttributeMapping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMapping> AttributeMapping::Instances() { return ::Udm::InstantiatedAttr< AttributeMapping>(impl); }
	AttributeMapping AttributeMapping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMapping> AttributeMapping::Derived() { return ::Udm::DerivedAttr< AttributeMapping>(impl); }
	::Udm::ArchetypeAttr< AttributeMapping> AttributeMapping::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMapping>(impl); }
	::Udm::AClassAssocAttr< AttributeMappingDelegate, AttributeMapping> AttributeMapping::dstAttributeMappingDelegate() const { return ::Udm::AClassAssocAttr< AttributeMappingDelegate, AttributeMapping>(impl, meta_dstAttributeMappingDelegate, meta_dstAttributeMappingDelegate_rev); }
	::Udm::AClassPointerAttr< AttributeMappingDelegate, AttributeMapping> AttributeMapping::srcAttributeMappingDelegate() const { return ::Udm::AClassPointerAttr< AttributeMappingDelegate, AttributeMapping>(impl, meta_srcAttributeMappingDelegate, meta_srcAttributeMappingDelegate_rev); }
	::Udm::AClassPointerAttr< AttributeMappingValue, Property> AttributeMapping::dstAttributeMappingValue() const { return ::Udm::AClassPointerAttr< AttributeMappingValue, Property>(impl, meta_dstAttributeMappingValue, meta_dstAttributeMappingValue_rev); }
	::Udm::AClassAssocAttr< AttributeDelegate, AttributeInstance> AttributeMapping::dstAttributeDelegate() const { return ::Udm::AClassAssocAttr< AttributeDelegate, AttributeInstance>(impl, meta_dstAttributeDelegate, meta_dstAttributeDelegate_rev); }
	::Udm::PointerAttr< AttributeInstance> AttributeMapping::ref() const { return ::Udm::PointerAttr< AttributeInstance>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMapping::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeMapping::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeMapping::Accept(Visitor &v) { v.Visit_AttributeMapping(*this); }

	::Uml::Class AttributeMapping::meta;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingDelegate;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_srcAttributeMappingDelegate;
	::Uml::AssociationRole AttributeMapping::meta_srcAttributeMappingDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingValue;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingValue_rev;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeDelegate;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_ref;
	::Uml::CompositionParentRole AttributeMapping::meta_ComponentAssembly_parent;

	AttributeDelegate::AttributeDelegate() {}
	AttributeDelegate::AttributeDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeDelegate::AttributeDelegate(const AttributeDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeDelegate::AttributeDelegate(AttributeDelegate &&master) : MgaObject(master) {};

	AttributeDelegate AttributeDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeDelegate& AttributeDelegate::operator=(AttributeDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeDelegate AttributeDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeDelegate AttributeDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeDelegate AttributeDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeDelegate> AttributeDelegate::Instances() { return ::Udm::InstantiatedAttr< AttributeDelegate>(impl); }
	AttributeDelegate AttributeDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeDelegate> AttributeDelegate::Derived() { return ::Udm::DerivedAttr< AttributeDelegate>(impl); }
	::Udm::ArchetypeAttr< AttributeDelegate> AttributeDelegate::Archetype() const { return ::Udm::ArchetypeAttr< AttributeDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AttributeMapping> AttributeDelegate::srcAttributeDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeMapping>(impl, meta_srcAttributeDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::AttributeInstance> AttributeDelegate::dstAttributeDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeInstance>(impl, meta_dstAttributeDelegate_end_); }
	void AttributeDelegate::Accept(Visitor &v) { v.Visit_AttributeDelegate(*this); }

	::Uml::Class AttributeDelegate::meta;
	::Uml::CompositionParentRole AttributeDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeDelegate::meta_srcAttributeDelegate_end_;
	::Uml::AssociationRole AttributeDelegate::meta_dstAttributeDelegate_end_;

	AttributeValue::AttributeValue() {}
	AttributeValue::AttributeValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeValue::AttributeValue(const AttributeValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeValue::AttributeValue(AttributeValue &&master) : MgaObject(master) {};

	AttributeValue AttributeValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeValue& AttributeValue::operator=(AttributeValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeValue AttributeValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeValue AttributeValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeValue AttributeValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeValue> AttributeValue::Instances() { return ::Udm::InstantiatedAttr< AttributeValue>(impl); }
	AttributeValue AttributeValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeValue> AttributeValue::Derived() { return ::Udm::DerivedAttr< AttributeValue>(impl); }
	::Udm::ArchetypeAttr< AttributeValue> AttributeValue::Archetype() const { return ::Udm::ArchetypeAttr< AttributeValue>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeValue::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AttributeValue::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AttributeInstance> AttributeValue::srcAttributeValue_end() const { return ::Udm::AssocEndAttr< ::PICML::AttributeInstance>(impl, meta_srcAttributeValue_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> AttributeValue::dstAttributeValue_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstAttributeValue_end_); }
	void AttributeValue::Accept(Visitor &v) { v.Visit_AttributeValue(*this); }

	::Uml::Class AttributeValue::meta;
	::Uml::CompositionParentRole AttributeValue::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeValue::meta_srcAttributeValue_end_;
	::Uml::AssociationRole AttributeValue::meta_dstAttributeValue_end_;

	ExternalDelegate::ExternalDelegate() {}
	ExternalDelegate::ExternalDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalDelegate::ExternalDelegate(const ExternalDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalDelegate::ExternalDelegate(ExternalDelegate &&master) : MgaObject(master) {};

	ExternalDelegate ExternalDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalDelegate& ExternalDelegate::operator=(ExternalDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalDelegate ExternalDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalDelegate ExternalDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalDelegate ExternalDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalDelegate> ExternalDelegate::Instances() { return ::Udm::InstantiatedAttr< ExternalDelegate>(impl); }
	ExternalDelegate ExternalDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalDelegate> ExternalDelegate::Derived() { return ::Udm::DerivedAttr< ExternalDelegate>(impl); }
	::Udm::ArchetypeAttr< ExternalDelegate> ExternalDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ExternalDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExternalDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ExternalDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ExternalPort> ExternalDelegate::srcExternalDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ExternalPort>(impl, meta_srcExternalDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::ExternalPortEnd> ExternalDelegate::dstExternalDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ExternalPortEnd>(impl, meta_dstExternalDelegate_end_); }
	void ExternalDelegate::Accept(Visitor &v) { v.Visit_ExternalDelegate(*this); }

	::Uml::Class ExternalDelegate::meta;
	::Uml::CompositionParentRole ExternalDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ExternalDelegate::meta_srcExternalDelegate_end_;
	::Uml::AssociationRole ExternalDelegate::meta_dstExternalDelegate_end_;

	EventSinkDelegate::EventSinkDelegate() {}
	EventSinkDelegate::EventSinkDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSinkDelegate::EventSinkDelegate(const EventSinkDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSinkDelegate::EventSinkDelegate(EventSinkDelegate &&master) : MgaObject(master) {};

	EventSinkDelegate EventSinkDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSinkDelegate& EventSinkDelegate::operator=(EventSinkDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSinkDelegate EventSinkDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSinkDelegate EventSinkDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSinkDelegate EventSinkDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSinkDelegate> EventSinkDelegate::Instances() { return ::Udm::InstantiatedAttr< EventSinkDelegate>(impl); }
	EventSinkDelegate EventSinkDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSinkDelegate> EventSinkDelegate::Derived() { return ::Udm::DerivedAttr< EventSinkDelegate>(impl); }
	::Udm::ArchetypeAttr< EventSinkDelegate> EventSinkDelegate::Archetype() const { return ::Udm::ArchetypeAttr< EventSinkDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> EventSinkDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> EventSinkDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::InEventPortDelegate> EventSinkDelegate::srcEventSinkDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::InEventPortDelegate>(impl, meta_srcEventSinkDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::InEventPortEnd> EventSinkDelegate::dstEventSinkDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::InEventPortEnd>(impl, meta_dstEventSinkDelegate_end_); }
	void EventSinkDelegate::Accept(Visitor &v) { v.Visit_EventSinkDelegate(*this); }

	::Uml::Class EventSinkDelegate::meta;
	::Uml::CompositionParentRole EventSinkDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSinkDelegate::meta_srcEventSinkDelegate_end_;
	::Uml::AssociationRole EventSinkDelegate::meta_dstEventSinkDelegate_end_;

	EventSourceDelegate::EventSourceDelegate() {}
	EventSourceDelegate::EventSourceDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSourceDelegate::EventSourceDelegate(const EventSourceDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSourceDelegate::EventSourceDelegate(EventSourceDelegate &&master) : MgaObject(master) {};

	EventSourceDelegate EventSourceDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSourceDelegate& EventSourceDelegate::operator=(EventSourceDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSourceDelegate EventSourceDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSourceDelegate EventSourceDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSourceDelegate EventSourceDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSourceDelegate> EventSourceDelegate::Instances() { return ::Udm::InstantiatedAttr< EventSourceDelegate>(impl); }
	EventSourceDelegate EventSourceDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSourceDelegate> EventSourceDelegate::Derived() { return ::Udm::DerivedAttr< EventSourceDelegate>(impl); }
	::Udm::ArchetypeAttr< EventSourceDelegate> EventSourceDelegate::Archetype() const { return ::Udm::ArchetypeAttr< EventSourceDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> EventSourceDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> EventSourceDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OutEventPortEnd> EventSourceDelegate::srcEventSourceDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::OutEventPortEnd>(impl, meta_srcEventSourceDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::OutEventPortDelegate> EventSourceDelegate::dstEventSourceDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::OutEventPortDelegate>(impl, meta_dstEventSourceDelegate_end_); }
	void EventSourceDelegate::Accept(Visitor &v) { v.Visit_EventSourceDelegate(*this); }

	::Uml::Class EventSourceDelegate::meta;
	::Uml::CompositionParentRole EventSourceDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSourceDelegate::meta_srcEventSourceDelegate_end_;
	::Uml::AssociationRole EventSourceDelegate::meta_dstEventSourceDelegate_end_;

	FacetDelegate::FacetDelegate() {}
	FacetDelegate::FacetDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FacetDelegate::FacetDelegate(const FacetDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FacetDelegate::FacetDelegate(FacetDelegate &&master) : MgaObject(master) {};

	FacetDelegate FacetDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FacetDelegate& FacetDelegate::operator=(FacetDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FacetDelegate FacetDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FacetDelegate FacetDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FacetDelegate FacetDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FacetDelegate> FacetDelegate::Instances() { return ::Udm::InstantiatedAttr< FacetDelegate>(impl); }
	FacetDelegate FacetDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FacetDelegate> FacetDelegate::Derived() { return ::Udm::DerivedAttr< FacetDelegate>(impl); }
	::Udm::ArchetypeAttr< FacetDelegate> FacetDelegate::Archetype() const { return ::Udm::ArchetypeAttr< FacetDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> FacetDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> FacetDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortDelegate> FacetDelegate::srcFacetDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortDelegate>(impl, meta_srcFacetDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd> FacetDelegate::dstFacetDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd>(impl, meta_dstFacetDelegate_end_); }
	void FacetDelegate::Accept(Visitor &v) { v.Visit_FacetDelegate(*this); }

	::Uml::Class FacetDelegate::meta;
	::Uml::CompositionParentRole FacetDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole FacetDelegate::meta_srcFacetDelegate_end_;
	::Uml::AssociationRole FacetDelegate::meta_dstFacetDelegate_end_;

	ReceptacleDelegate::ReceptacleDelegate() {}
	ReceptacleDelegate::ReceptacleDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ReceptacleDelegate::ReceptacleDelegate(const ReceptacleDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ReceptacleDelegate::ReceptacleDelegate(ReceptacleDelegate &&master) : MgaObject(master) {};

	ReceptacleDelegate ReceptacleDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReceptacleDelegate& ReceptacleDelegate::operator=(ReceptacleDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReceptacleDelegate ReceptacleDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReceptacleDelegate ReceptacleDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReceptacleDelegate ReceptacleDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReceptacleDelegate> ReceptacleDelegate::Instances() { return ::Udm::InstantiatedAttr< ReceptacleDelegate>(impl); }
	ReceptacleDelegate ReceptacleDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReceptacleDelegate> ReceptacleDelegate::Derived() { return ::Udm::DerivedAttr< ReceptacleDelegate>(impl); }
	::Udm::ArchetypeAttr< ReceptacleDelegate> ReceptacleDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ReceptacleDelegate>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ReceptacleDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ReceptacleDelegate::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::RequiredRequestPortDelegate> ReceptacleDelegate::srcReceptacleDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::RequiredRequestPortDelegate>(impl, meta_srcReceptacleDelegate_end_); }
	::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd> ReceptacleDelegate::dstReceptacleDelegate_end() const { return ::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd>(impl, meta_dstReceptacleDelegate_end_); }
	void ReceptacleDelegate::Accept(Visitor &v) { v.Visit_ReceptacleDelegate(*this); }

	::Uml::Class ReceptacleDelegate::meta;
	::Uml::CompositionParentRole ReceptacleDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ReceptacleDelegate::meta_srcReceptacleDelegate_end_;
	::Uml::AssociationRole ReceptacleDelegate::meta_dstReceptacleDelegate_end_;

	SendsTo::SendsTo() {}
	SendsTo::SendsTo(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SendsTo::SendsTo(const SendsTo &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SendsTo::SendsTo(SendsTo &&master) : MgaObject(master) {};

	SendsTo SendsTo::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SendsTo& SendsTo::operator=(SendsTo &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SendsTo SendsTo::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SendsTo SendsTo::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SendsTo SendsTo::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SendsTo> SendsTo::Instances() { return ::Udm::InstantiatedAttr< SendsTo>(impl); }
	SendsTo SendsTo::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SendsTo> SendsTo::Derived() { return ::Udm::DerivedAttr< SendsTo>(impl); }
	::Udm::ArchetypeAttr< SendsTo> SendsTo::Archetype() const { return ::Udm::ArchetypeAttr< SendsTo>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> SendsTo::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> SendsTo::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::OutEventPortEnd> SendsTo::srcSendsTo_end() const { return ::Udm::AssocEndAttr< ::PICML::OutEventPortEnd>(impl, meta_srcSendsTo_end_); }
	::Udm::AssocEndAttr< ::PICML::InEventPortEnd> SendsTo::dstSendsTo_end() const { return ::Udm::AssocEndAttr< ::PICML::InEventPortEnd>(impl, meta_dstSendsTo_end_); }
	void SendsTo::Accept(Visitor &v) { v.Visit_SendsTo(*this); }

	::Uml::Class SendsTo::meta;
	::Uml::CompositionParentRole SendsTo::meta_ComponentAssembly_parent;
	::Uml::AssociationRole SendsTo::meta_srcSendsTo_end_;
	::Uml::AssociationRole SendsTo::meta_dstSendsTo_end_;

	AssemblyConfigProperty::AssemblyConfigProperty() {}
	AssemblyConfigProperty::AssemblyConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyConfigProperty::AssemblyConfigProperty(const AssemblyConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyConfigProperty::AssemblyConfigProperty(AssemblyConfigProperty &&master) : MgaObject(master) {};

	AssemblyConfigProperty AssemblyConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyConfigProperty& AssemblyConfigProperty::operator=(AssemblyConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyConfigProperty AssemblyConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyConfigProperty AssemblyConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyConfigProperty AssemblyConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyConfigProperty> AssemblyConfigProperty::Instances() { return ::Udm::InstantiatedAttr< AssemblyConfigProperty>(impl); }
	AssemblyConfigProperty AssemblyConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyConfigProperty> AssemblyConfigProperty::Derived() { return ::Udm::DerivedAttr< AssemblyConfigProperty>(impl); }
	::Udm::ArchetypeAttr< AssemblyConfigProperty> AssemblyConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyConfigProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AssemblyConfigProperty::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AssemblyConfigProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AssemblyConfigPropertyEnd> AssemblyConfigProperty::srcAssemblyConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::AssemblyConfigPropertyEnd>(impl, meta_srcAssemblyConfigProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> AssemblyConfigProperty::dstAssemblyConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstAssemblyConfigProperty_end_); }
	void AssemblyConfigProperty::Accept(Visitor &v) { v.Visit_AssemblyConfigProperty(*this); }

	::Uml::Class AssemblyConfigProperty::meta;
	::Uml::CompositionParentRole AssemblyConfigProperty::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_;
	::Uml::AssociationRole AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_;

	AssemblyselectRequirement::AssemblyselectRequirement() {}
	AssemblyselectRequirement::AssemblyselectRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyselectRequirement::AssemblyselectRequirement(const AssemblyselectRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyselectRequirement::AssemblyselectRequirement(AssemblyselectRequirement &&master) : MgaObject(master) {};

	AssemblyselectRequirement AssemblyselectRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyselectRequirement& AssemblyselectRequirement::operator=(AssemblyselectRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyselectRequirement AssemblyselectRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyselectRequirement AssemblyselectRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyselectRequirement AssemblyselectRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyselectRequirement> AssemblyselectRequirement::Instances() { return ::Udm::InstantiatedAttr< AssemblyselectRequirement>(impl); }
	AssemblyselectRequirement AssemblyselectRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyselectRequirement> AssemblyselectRequirement::Derived() { return ::Udm::DerivedAttr< AssemblyselectRequirement>(impl); }
	::Udm::ArchetypeAttr< AssemblyselectRequirement> AssemblyselectRequirement::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyselectRequirement>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AssemblyselectRequirement::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> AssemblyselectRequirement::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::AssemblyConfigPropertyEnd> AssemblyselectRequirement::srcAssemblyselectRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::AssemblyConfigPropertyEnd>(impl, meta_srcAssemblyselectRequirement_end_); }
	::Udm::AssocEndAttr< ::PICML::Requirement> AssemblyselectRequirement::dstAssemblyselectRequirement_end() const { return ::Udm::AssocEndAttr< ::PICML::Requirement>(impl, meta_dstAssemblyselectRequirement_end_); }
	void AssemblyselectRequirement::Accept(Visitor &v) { v.Visit_AssemblyselectRequirement(*this); }

	::Uml::Class AssemblyselectRequirement::meta;
	::Uml::CompositionParentRole AssemblyselectRequirement::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_;
	::Uml::AssociationRole AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_;

	Invoke::Invoke() {}
	Invoke::Invoke(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Invoke::Invoke(const Invoke &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Invoke::Invoke(Invoke &&master) : MgaObject(master) {};

	Invoke Invoke::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Invoke& Invoke::operator=(Invoke &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Invoke Invoke::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Invoke Invoke::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Invoke Invoke::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Invoke> Invoke::Instances() { return ::Udm::InstantiatedAttr< Invoke>(impl); }
	Invoke Invoke::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Invoke> Invoke::Derived() { return ::Udm::DerivedAttr< Invoke>(impl); }
	::Udm::ArchetypeAttr< Invoke> Invoke::Archetype() const { return ::Udm::ArchetypeAttr< Invoke>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Invoke::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> Invoke::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd> Invoke::srcinvoke_end() const { return ::Udm::AssocEndAttr< ::PICML::RequiredRequestPortEnd>(impl, meta_srcinvoke_end_); }
	::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd> Invoke::dstinvoke_end() const { return ::Udm::AssocEndAttr< ::PICML::ProvidedRequestPortEnd>(impl, meta_dstinvoke_end_); }
	void Invoke::Accept(Visitor &v) { v.Visit_Invoke(*this); }

	::Uml::Class Invoke::meta;
	::Uml::CompositionParentRole Invoke::meta_ComponentAssembly_parent;
	::Uml::AssociationRole Invoke::meta_srcinvoke_end_;
	::Uml::AssociationRole Invoke::meta_dstinvoke_end_;

	Operation::Operation() {}
	Operation::Operation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Operation::Operation(const Operation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Operation::Operation(Operation &&master) : MgaObject(master) {};

	Operation Operation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Operation& Operation::operator=(Operation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Operation Operation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Operation Operation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Operation Operation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Operation> Operation::Instances() { return ::Udm::InstantiatedAttr< Operation>(impl); }
	Operation Operation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Operation> Operation::Derived() { return ::Udm::DerivedAttr< Operation>(impl); }
	::Udm::ArchetypeAttr< Operation> Operation::Archetype() const { return ::Udm::ArchetypeAttr< Operation>(impl); }
	::Udm::AssocAttr< ActionType> Operation::referedbyActionType() const { return ::Udm::AssocAttr< ActionType>(impl, meta_referedbyActionType); }
	::Udm::ChildAttr< ::PICML::ReturnType> Operation::ReturnType_child() const { return ::Udm::ChildAttr< ::PICML::ReturnType>(impl, meta_ReturnType_child); }
	::Udm::ChildrenAttr< ::PICML::ParameterType> Operation::ParameterType_children() const { return ::Udm::ChildrenAttr< ::PICML::ParameterType>(impl, meta_ParameterType_children); }
	::Udm::ChildrenAttr< ::PICML::ParameterType> Operation::ParameterType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ParameterType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReturnType> Operation::ReturnType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReturnType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutParameter> Operation::OutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InoutParameter> Operation::InoutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InoutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InParameter> Operation::InParameter_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Operation::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Worker> Operation::Worker_parent() const { return ::Udm::ParentAttr< ::PICML::Worker>(impl, meta_Worker_parent); }
	::Udm::ParentAttr< ::PICML::Worker> Operation::parent() const { return ::Udm::ParentAttr< ::PICML::Worker>(impl, ::Udm::NULLPARENTROLE); }
	void Operation::Accept(Visitor &v) { v.Visit_Operation(*this); }

	::Uml::Class Operation::meta;
	::Uml::AssociationRole Operation::meta_referedbyActionType;
	::Uml::CompositionChildRole Operation::meta_ReturnType_child;
	::Uml::CompositionChildRole Operation::meta_ParameterType_children;
	::Uml::CompositionParentRole Operation::meta_Worker_parent;

	WorkerPackageBase::WorkerPackageBase() {}
	WorkerPackageBase::WorkerPackageBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerPackageBase::WorkerPackageBase(const WorkerPackageBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerPackageBase::WorkerPackageBase(WorkerPackageBase &&master) : MgaObject(master) {};

	WorkerPackageBase WorkerPackageBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerPackageBase& WorkerPackageBase::operator=(WorkerPackageBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerPackageBase WorkerPackageBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerPackageBase WorkerPackageBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerPackageBase WorkerPackageBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerPackageBase> WorkerPackageBase::Instances() { return ::Udm::InstantiatedAttr< WorkerPackageBase>(impl); }
	WorkerPackageBase WorkerPackageBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerPackageBase> WorkerPackageBase::Derived() { return ::Udm::DerivedAttr< WorkerPackageBase>(impl); }
	::Udm::ArchetypeAttr< WorkerPackageBase> WorkerPackageBase::Archetype() const { return ::Udm::ArchetypeAttr< WorkerPackageBase>(impl); }
	::Udm::ChildrenAttr< ::PICML::Worker> WorkerPackageBase::Worker_children() const { return ::Udm::ChildrenAttr< ::PICML::Worker>(impl, meta_Worker_children); }
	::Udm::ChildrenAttr< ::PICML::Worker> WorkerPackageBase::Worker_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Worker>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> WorkerPackageBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> WorkerPackageBase::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class WorkerPackageBase::meta;
	::Uml::CompositionChildRole WorkerPackageBase::meta_Worker_children;

	WorkerPackage::WorkerPackage() {}
	WorkerPackage::WorkerPackage(::Udm::ObjectImpl *impl) : WorkerPackageBase(impl) {}
	WorkerPackage::WorkerPackage(const WorkerPackage &master) : WorkerPackageBase(master) {}

#ifdef UDM_RVALUE
	WorkerPackage::WorkerPackage(WorkerPackage &&master) : WorkerPackageBase(master) {};

	WorkerPackage WorkerPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerPackage& WorkerPackage::operator=(WorkerPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerPackage WorkerPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerPackage WorkerPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerPackage WorkerPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerPackage> WorkerPackage::Instances() { return ::Udm::InstantiatedAttr< WorkerPackage>(impl); }
	WorkerPackage WorkerPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerPackage> WorkerPackage::Derived() { return ::Udm::DerivedAttr< WorkerPackage>(impl); }
	::Udm::ArchetypeAttr< WorkerPackage> WorkerPackage::Archetype() const { return ::Udm::ArchetypeAttr< WorkerPackage>(impl); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackage> WorkerPackage::WorkerPackage_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackage>(impl, meta_WorkerPackage_children); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackageBase> WorkerPackage::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackage> WorkerPackage::WorkerPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> WorkerPackage::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::WorkerPackage> WorkerPackage::WorkerPackage_parent() const { return ::Udm::ParentAttr< ::PICML::WorkerPackage>(impl, meta_WorkerPackage_parent); }
	::Udm::ParentAttr< ::PICML::WorkerFile> WorkerPackage::WorkerFile_parent() const { return ::Udm::ParentAttr< ::PICML::WorkerFile>(impl, meta_WorkerFile_parent); }
	::Udm::ParentAttr< ::PICML::WorkerPackageBase> WorkerPackage::parent() const { return ::Udm::ParentAttr< ::PICML::WorkerPackageBase>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerPackage::Accept(Visitor &v) { v.Visit_WorkerPackage(*this); }

	::Uml::Class WorkerPackage::meta;
	::Uml::CompositionChildRole WorkerPackage::meta_WorkerPackage_children;
	::Uml::CompositionParentRole WorkerPackage::meta_WorkerPackage_parent;
	::Uml::CompositionParentRole WorkerPackage::meta_WorkerFile_parent;

	WorkerFile::WorkerFile() {}
	WorkerFile::WorkerFile(::Udm::ObjectImpl *impl) : WorkerPackageBase(impl) {}
	WorkerFile::WorkerFile(const WorkerFile &master) : WorkerPackageBase(master) {}

#ifdef UDM_RVALUE
	WorkerFile::WorkerFile(WorkerFile &&master) : WorkerPackageBase(master) {};

	WorkerFile WorkerFile::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerFile& WorkerFile::operator=(WorkerFile &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerFile WorkerFile::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerFile WorkerFile::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerFile WorkerFile::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerFile> WorkerFile::Instances() { return ::Udm::InstantiatedAttr< WorkerFile>(impl); }
	WorkerFile WorkerFile::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerFile> WorkerFile::Derived() { return ::Udm::DerivedAttr< WorkerFile>(impl); }
	::Udm::ArchetypeAttr< WorkerFile> WorkerFile::Archetype() const { return ::Udm::ArchetypeAttr< WorkerFile>(impl); }
	::Udm::StringAttr WorkerFile::Location() const { return ::Udm::StringAttr(impl, meta_Location); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackage> WorkerFile::WorkerPackage_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackage>(impl, meta_WorkerPackage_children); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackageBase> WorkerFile::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackage> WorkerFile::WorkerPackage_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> WorkerFile::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::WorkerLibrary> WorkerFile::WorkerLibrary_parent() const { return ::Udm::ParentAttr< ::PICML::WorkerLibrary>(impl, meta_WorkerLibrary_parent); }
	::Udm::ParentAttr< ::PICML::WorkerLibrary> WorkerFile::parent() const { return ::Udm::ParentAttr< ::PICML::WorkerLibrary>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerFile::Accept(Visitor &v) { v.Visit_WorkerFile(*this); }

	::Uml::Class WorkerFile::meta;
	::Uml::Attribute WorkerFile::meta_Location;
	::Uml::CompositionChildRole WorkerFile::meta_WorkerPackage_children;
	::Uml::CompositionParentRole WorkerFile::meta_WorkerLibrary_parent;

	WorkerLibraries::WorkerLibraries() {}
	WorkerLibraries::WorkerLibraries(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	WorkerLibraries::WorkerLibraries(const WorkerLibraries &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	WorkerLibraries::WorkerLibraries(WorkerLibraries &&master) : UDM_OBJECT(master) {};

	WorkerLibraries WorkerLibraries::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerLibraries& WorkerLibraries::operator=(WorkerLibraries &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerLibraries WorkerLibraries::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerLibraries WorkerLibraries::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerLibraries WorkerLibraries::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerLibraries> WorkerLibraries::Instances() { return ::Udm::InstantiatedAttr< WorkerLibraries>(impl); }
	WorkerLibraries WorkerLibraries::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerLibraries> WorkerLibraries::Derived() { return ::Udm::DerivedAttr< WorkerLibraries>(impl); }
	::Udm::ArchetypeAttr< WorkerLibraries> WorkerLibraries::Archetype() const { return ::Udm::ArchetypeAttr< WorkerLibraries>(impl); }
	::Udm::StringAttr WorkerLibraries::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::WorkerLibrary> WorkerLibraries::WorkerLibrary_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerLibrary>(impl, meta_WorkerLibrary_children); }
	::Udm::ChildrenAttr< ::PICML::WorkerLibrary> WorkerLibraries::WorkerLibrary_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerLibrary>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> WorkerLibraries::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> WorkerLibraries::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> WorkerLibraries::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerLibraries::Accept(Visitor &v) { v.Visit_WorkerLibraries(*this); }

	::Uml::Class WorkerLibraries::meta;
	::Uml::Attribute WorkerLibraries::meta_name;
	::Uml::CompositionChildRole WorkerLibraries::meta_WorkerLibrary_children;
	::Uml::CompositionParentRole WorkerLibraries::meta_RootFolder_parent;

	Worker::Worker() {}
	Worker::Worker(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Worker::Worker(const Worker &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Worker::Worker(Worker &&master) : MgaObject(master) {};

	Worker Worker::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Worker& Worker::operator=(Worker &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Worker Worker::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Worker Worker::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Worker Worker::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Worker> Worker::Instances() { return ::Udm::InstantiatedAttr< Worker>(impl); }
	Worker Worker::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Worker> Worker::Derived() { return ::Udm::DerivedAttr< Worker>(impl); }
	::Udm::ArchetypeAttr< Worker> Worker::Archetype() const { return ::Udm::ArchetypeAttr< Worker>(impl); }
	::Udm::BooleanAttr Worker::Abstract() const { return ::Udm::BooleanAttr(impl, meta_Abstract); }
	::Udm::AssocAttr< WorkerType> Worker::referedbyWorkerType() const { return ::Udm::AssocAttr< WorkerType>(impl, meta_referedbyWorkerType); }
	::Udm::ChildrenAttr< ::PICML::Operation> Worker::Operation_children() const { return ::Udm::ChildrenAttr< ::PICML::Operation>(impl, meta_Operation_children); }
	::Udm::ChildrenAttr< ::PICML::Operation> Worker::Operation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Operation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Worker::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::WorkerPackageBase> Worker::WorkerPackageBase_parent() const { return ::Udm::ParentAttr< ::PICML::WorkerPackageBase>(impl, meta_WorkerPackageBase_parent); }
	::Udm::ParentAttr< ::PICML::WorkerPackageBase> Worker::parent() const { return ::Udm::ParentAttr< ::PICML::WorkerPackageBase>(impl, ::Udm::NULLPARENTROLE); }
	void Worker::Accept(Visitor &v) { v.Visit_Worker(*this); }

	::Uml::Class Worker::meta;
	::Uml::Attribute Worker::meta_Abstract;
	::Uml::AssociationRole Worker::meta_referedbyWorkerType;
	::Uml::CompositionChildRole Worker::meta_Operation_children;
	::Uml::CompositionParentRole Worker::meta_WorkerPackageBase_parent;

	WorkerLibrary::WorkerLibrary() {}
	WorkerLibrary::WorkerLibrary(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerLibrary::WorkerLibrary(const WorkerLibrary &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerLibrary::WorkerLibrary(WorkerLibrary &&master) : MgaObject(master) {};

	WorkerLibrary WorkerLibrary::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerLibrary& WorkerLibrary::operator=(WorkerLibrary &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerLibrary WorkerLibrary::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerLibrary WorkerLibrary::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerLibrary WorkerLibrary::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerLibrary> WorkerLibrary::Instances() { return ::Udm::InstantiatedAttr< WorkerLibrary>(impl); }
	WorkerLibrary WorkerLibrary::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerLibrary> WorkerLibrary::Derived() { return ::Udm::DerivedAttr< WorkerLibrary>(impl); }
	::Udm::ArchetypeAttr< WorkerLibrary> WorkerLibrary::Archetype() const { return ::Udm::ArchetypeAttr< WorkerLibrary>(impl); }
	::Udm::StringAttr WorkerLibrary::Location() const { return ::Udm::StringAttr(impl, meta_Location); }
	::Udm::ChildrenAttr< ::PICML::WorkerFile> WorkerLibrary::WorkerFile_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerFile>(impl, meta_WorkerFile_children); }
	::Udm::ChildrenAttr< ::PICML::WorkerPackageBase> WorkerLibrary::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkerFile> WorkerLibrary::WorkerFile_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerFile>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> WorkerLibrary::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::WorkerLibraries> WorkerLibrary::WorkerLibraries_parent() const { return ::Udm::ParentAttr< ::PICML::WorkerLibraries>(impl, meta_WorkerLibraries_parent); }
	::Udm::ParentAttr< ::PICML::WorkerLibraries> WorkerLibrary::parent() const { return ::Udm::ParentAttr< ::PICML::WorkerLibraries>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerLibrary::Accept(Visitor &v) { v.Visit_WorkerLibrary(*this); }

	::Uml::Class WorkerLibrary::meta;
	::Uml::Attribute WorkerLibrary::meta_Location;
	::Uml::CompositionChildRole WorkerLibrary::meta_WorkerFile_children;
	::Uml::CompositionParentRole WorkerLibrary::meta_WorkerLibraries_parent;

	PortInstance::PortInstance() {}
	PortInstance::PortInstance(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PortInstance::PortInstance(const PortInstance &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PortInstance::PortInstance(PortInstance &&master) : MgaObject(master) {};

	PortInstance PortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortInstance& PortInstance::operator=(PortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortInstance PortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortInstance PortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortInstance PortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortInstance> PortInstance::Instances() { return ::Udm::InstantiatedAttr< PortInstance>(impl); }
	PortInstance PortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortInstance> PortInstance::Derived() { return ::Udm::DerivedAttr< PortInstance>(impl); }
	::Udm::ArchetypeAttr< PortInstance> PortInstance::Archetype() const { return ::Udm::ArchetypeAttr< PortInstance>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> PortInstance::ComponentInstance_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, meta_ComponentInstance_parent); }
	::Udm::ParentAttr< ::PICML::AssemblyConfigPropertyEnd> PortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::AssemblyConfigPropertyEnd>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class PortInstance::meta;
	::Uml::CompositionParentRole PortInstance::meta_ComponentInstance_parent;

	SupportsInstance::SupportsInstance() {}
	SupportsInstance::SupportsInstance(::Udm::ObjectImpl *impl) : ProvidedRequestPortEnd(impl), MgaObject(impl) {}
	SupportsInstance::SupportsInstance(const SupportsInstance &master) : ProvidedRequestPortEnd(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	SupportsInstance::SupportsInstance(SupportsInstance &&master) : ProvidedRequestPortEnd(master), MgaObject(master) {};

	SupportsInstance SupportsInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SupportsInstance& SupportsInstance::operator=(SupportsInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SupportsInstance SupportsInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SupportsInstance SupportsInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SupportsInstance SupportsInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SupportsInstance> SupportsInstance::Instances() { return ::Udm::InstantiatedAttr< SupportsInstance>(impl); }
	SupportsInstance SupportsInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SupportsInstance> SupportsInstance::Derived() { return ::Udm::DerivedAttr< SupportsInstance>(impl); }
	::Udm::ArchetypeAttr< SupportsInstance> SupportsInstance::Archetype() const { return ::Udm::ArchetypeAttr< SupportsInstance>(impl); }
	::Udm::PointerAttr< Supports> SupportsInstance::ref() const { return ::Udm::PointerAttr< Supports>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> SupportsInstance::ComponentInstance_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, meta_ComponentInstance_parent); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> SupportsInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void SupportsInstance::Accept(Visitor &v) { v.Visit_SupportsInstance(*this); }

	::Uml::Class SupportsInstance::meta;
	::Uml::AssociationRole SupportsInstance::meta_ref;
	::Uml::CompositionParentRole SupportsInstance::meta_ComponentInstance_parent;

	RequiredRequestPortInstance::RequiredRequestPortInstance() {}
	RequiredRequestPortInstance::RequiredRequestPortInstance(::Udm::ObjectImpl *impl) : RequiredRequestPortEnd(impl),PortInstance(impl), MgaObject(impl) {}
	RequiredRequestPortInstance::RequiredRequestPortInstance(const RequiredRequestPortInstance &master) : RequiredRequestPortEnd(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRequestPortInstance::RequiredRequestPortInstance(RequiredRequestPortInstance &&master) : RequiredRequestPortEnd(master),PortInstance(master), MgaObject(master) {};

	RequiredRequestPortInstance RequiredRequestPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRequestPortInstance& RequiredRequestPortInstance::operator=(RequiredRequestPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRequestPortInstance RequiredRequestPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRequestPortInstance RequiredRequestPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRequestPortInstance RequiredRequestPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRequestPortInstance> RequiredRequestPortInstance::Instances() { return ::Udm::InstantiatedAttr< RequiredRequestPortInstance>(impl); }
	RequiredRequestPortInstance RequiredRequestPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRequestPortInstance> RequiredRequestPortInstance::Derived() { return ::Udm::DerivedAttr< RequiredRequestPortInstance>(impl); }
	::Udm::ArchetypeAttr< RequiredRequestPortInstance> RequiredRequestPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRequestPortInstance>(impl); }
	::Udm::PointerAttr< RequiredRequestPort> RequiredRequestPortInstance::ref() const { return ::Udm::PointerAttr< RequiredRequestPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> RequiredRequestPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void RequiredRequestPortInstance::Accept(Visitor &v) { v.Visit_RequiredRequestPortInstance(*this); }

	::Uml::Class RequiredRequestPortInstance::meta;
	::Uml::AssociationRole RequiredRequestPortInstance::meta_ref;

	InEventPortInstance::InEventPortInstance() {}
	InEventPortInstance::InEventPortInstance(::Udm::ObjectImpl *impl) : InEventPortEnd(impl),PortInstance(impl), MgaObject(impl) {}
	InEventPortInstance::InEventPortInstance(const InEventPortInstance &master) : InEventPortEnd(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	InEventPortInstance::InEventPortInstance(InEventPortInstance &&master) : InEventPortEnd(master),PortInstance(master), MgaObject(master) {};

	InEventPortInstance InEventPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InEventPortInstance& InEventPortInstance::operator=(InEventPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InEventPortInstance InEventPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InEventPortInstance InEventPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InEventPortInstance InEventPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InEventPortInstance> InEventPortInstance::Instances() { return ::Udm::InstantiatedAttr< InEventPortInstance>(impl); }
	InEventPortInstance InEventPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InEventPortInstance> InEventPortInstance::Derived() { return ::Udm::DerivedAttr< InEventPortInstance>(impl); }
	::Udm::ArchetypeAttr< InEventPortInstance> InEventPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< InEventPortInstance>(impl); }
	::Udm::PointerAttr< InEventPort> InEventPortInstance::ref() const { return ::Udm::PointerAttr< InEventPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> InEventPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void InEventPortInstance::Accept(Visitor &v) { v.Visit_InEventPortInstance(*this); }

	::Uml::Class InEventPortInstance::meta;
	::Uml::AssociationRole InEventPortInstance::meta_ref;

	ProvidedRequestPortInstance::ProvidedRequestPortInstance() {}
	ProvidedRequestPortInstance::ProvidedRequestPortInstance(::Udm::ObjectImpl *impl) : ProvidedRequestPortEnd(impl),PortInstance(impl), MgaObject(impl) {}
	ProvidedRequestPortInstance::ProvidedRequestPortInstance(const ProvidedRequestPortInstance &master) : ProvidedRequestPortEnd(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ProvidedRequestPortInstance::ProvidedRequestPortInstance(ProvidedRequestPortInstance &&master) : ProvidedRequestPortEnd(master),PortInstance(master), MgaObject(master) {};

	ProvidedRequestPortInstance ProvidedRequestPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ProvidedRequestPortInstance& ProvidedRequestPortInstance::operator=(ProvidedRequestPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ProvidedRequestPortInstance ProvidedRequestPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ProvidedRequestPortInstance ProvidedRequestPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ProvidedRequestPortInstance ProvidedRequestPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ProvidedRequestPortInstance> ProvidedRequestPortInstance::Instances() { return ::Udm::InstantiatedAttr< ProvidedRequestPortInstance>(impl); }
	ProvidedRequestPortInstance ProvidedRequestPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ProvidedRequestPortInstance> ProvidedRequestPortInstance::Derived() { return ::Udm::DerivedAttr< ProvidedRequestPortInstance>(impl); }
	::Udm::ArchetypeAttr< ProvidedRequestPortInstance> ProvidedRequestPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< ProvidedRequestPortInstance>(impl); }
	::Udm::PointerAttr< ProvidedRequestPort> ProvidedRequestPortInstance::ref() const { return ::Udm::PointerAttr< ProvidedRequestPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> ProvidedRequestPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void ProvidedRequestPortInstance::Accept(Visitor &v) { v.Visit_ProvidedRequestPortInstance(*this); }

	::Uml::Class ProvidedRequestPortInstance::meta;
	::Uml::AssociationRole ProvidedRequestPortInstance::meta_ref;

	OutEventPortInstance::OutEventPortInstance() {}
	OutEventPortInstance::OutEventPortInstance(::Udm::ObjectImpl *impl) : OutEventPortEnd(impl),PortInstance(impl), MgaObject(impl) {}
	OutEventPortInstance::OutEventPortInstance(const OutEventPortInstance &master) : OutEventPortEnd(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OutEventPortInstance::OutEventPortInstance(OutEventPortInstance &&master) : OutEventPortEnd(master),PortInstance(master), MgaObject(master) {};

	OutEventPortInstance OutEventPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutEventPortInstance& OutEventPortInstance::operator=(OutEventPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutEventPortInstance OutEventPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutEventPortInstance OutEventPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutEventPortInstance OutEventPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutEventPortInstance> OutEventPortInstance::Instances() { return ::Udm::InstantiatedAttr< OutEventPortInstance>(impl); }
	OutEventPortInstance OutEventPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutEventPortInstance> OutEventPortInstance::Derived() { return ::Udm::DerivedAttr< OutEventPortInstance>(impl); }
	::Udm::ArchetypeAttr< OutEventPortInstance> OutEventPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< OutEventPortInstance>(impl); }
	::Udm::PointerAttr< OutEventPort> OutEventPortInstance::ref() const { return ::Udm::PointerAttr< OutEventPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> OutEventPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void OutEventPortInstance::Accept(Visitor &v) { v.Visit_OutEventPortInstance(*this); }

	::Uml::Class OutEventPortInstance::meta;
	::Uml::AssociationRole OutEventPortInstance::meta_ref;

	MirrorPortInstance::MirrorPortInstance() {}
	MirrorPortInstance::MirrorPortInstance(::Udm::ObjectImpl *impl) : MirrorPortInstanceBase(impl),PortInstance(impl), MgaObject(impl) {}
	MirrorPortInstance::MirrorPortInstance(const MirrorPortInstance &master) : MirrorPortInstanceBase(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	MirrorPortInstance::MirrorPortInstance(MirrorPortInstance &&master) : MirrorPortInstanceBase(master),PortInstance(master), MgaObject(master) {};

	MirrorPortInstance MirrorPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MirrorPortInstance& MirrorPortInstance::operator=(MirrorPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MirrorPortInstance MirrorPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MirrorPortInstance MirrorPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MirrorPortInstance MirrorPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MirrorPortInstance> MirrorPortInstance::Instances() { return ::Udm::InstantiatedAttr< MirrorPortInstance>(impl); }
	MirrorPortInstance MirrorPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MirrorPortInstance> MirrorPortInstance::Derived() { return ::Udm::DerivedAttr< MirrorPortInstance>(impl); }
	::Udm::ArchetypeAttr< MirrorPortInstance> MirrorPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< MirrorPortInstance>(impl); }
	::Udm::PointerAttr< MirrorPort> MirrorPortInstance::ref() const { return ::Udm::PointerAttr< MirrorPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> MirrorPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void MirrorPortInstance::Accept(Visitor &v) { v.Visit_MirrorPortInstance(*this); }

	::Uml::Class MirrorPortInstance::meta;
	::Uml::AssociationRole MirrorPortInstance::meta_ref;

	ExtendedPortInstance::ExtendedPortInstance() {}
	ExtendedPortInstance::ExtendedPortInstance(::Udm::ObjectImpl *impl) : ExtendedPortInstanceBase(impl),PortInstance(impl), MgaObject(impl) {}
	ExtendedPortInstance::ExtendedPortInstance(const ExtendedPortInstance &master) : ExtendedPortInstanceBase(master),PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendedPortInstance::ExtendedPortInstance(ExtendedPortInstance &&master) : ExtendedPortInstanceBase(master),PortInstance(master), MgaObject(master) {};

	ExtendedPortInstance ExtendedPortInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedPortInstance& ExtendedPortInstance::operator=(ExtendedPortInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedPortInstance ExtendedPortInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedPortInstance ExtendedPortInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedPortInstance ExtendedPortInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedPortInstance> ExtendedPortInstance::Instances() { return ::Udm::InstantiatedAttr< ExtendedPortInstance>(impl); }
	ExtendedPortInstance ExtendedPortInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedPortInstance> ExtendedPortInstance::Derived() { return ::Udm::DerivedAttr< ExtendedPortInstance>(impl); }
	::Udm::ArchetypeAttr< ExtendedPortInstance> ExtendedPortInstance::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedPortInstance>(impl); }
	::Udm::PointerAttr< ExtendedPort> ExtendedPortInstance::ref() const { return ::Udm::PointerAttr< ExtendedPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> ExtendedPortInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void ExtendedPortInstance::Accept(Visitor &v) { v.Visit_ExtendedPortInstance(*this); }

	::Uml::Class ExtendedPortInstance::meta;
	::Uml::AssociationRole ExtendedPortInstance::meta_ref;

	AttributeInstance::AttributeInstance() {}
	AttributeInstance::AttributeInstance(::Udm::ObjectImpl *impl) : PortInstance(impl), MgaObject(impl) {}
	AttributeInstance::AttributeInstance(const AttributeInstance &master) : PortInstance(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeInstance::AttributeInstance(AttributeInstance &&master) : PortInstance(master), MgaObject(master) {};

	AttributeInstance AttributeInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeInstance& AttributeInstance::operator=(AttributeInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeInstance AttributeInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeInstance AttributeInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeInstance AttributeInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeInstance> AttributeInstance::Instances() { return ::Udm::InstantiatedAttr< AttributeInstance>(impl); }
	AttributeInstance AttributeInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeInstance> AttributeInstance::Derived() { return ::Udm::DerivedAttr< AttributeInstance>(impl); }
	::Udm::ArchetypeAttr< AttributeInstance> AttributeInstance::Archetype() const { return ::Udm::ArchetypeAttr< AttributeInstance>(impl); }
	::Udm::AClassPointerAttr< AttributeDelegate, AttributeMapping> AttributeInstance::srcAttributeDelegate() const { return ::Udm::AClassPointerAttr< AttributeDelegate, AttributeMapping>(impl, meta_srcAttributeDelegate, meta_srcAttributeDelegate_rev); }
	::Udm::AssocAttr< AttributeMapping> AttributeInstance::referedbyAttributeMapping() const { return ::Udm::AssocAttr< AttributeMapping>(impl, meta_referedbyAttributeMapping); }
	::Udm::PointerAttr< ReadonlyAttribute> AttributeInstance::ref() const { return ::Udm::PointerAttr< ReadonlyAttribute>(impl, meta_ref); }
	::Udm::AClassPointerAttr< AttributeValue, Property> AttributeInstance::dstAttributeValue() const { return ::Udm::AClassPointerAttr< AttributeValue, Property>(impl, meta_dstAttributeValue, meta_dstAttributeValue_rev); }
	::Udm::ParentAttr< ::PICML::ConnectorInstance> AttributeInstance::ConnectorInstance_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorInstance>(impl, meta_ConnectorInstance_parent); }
	::Udm::ParentAttr< ::PICML::AssemblyConfigPropertyEnd> AttributeInstance::parent() const { return ::Udm::ParentAttr< ::PICML::AssemblyConfigPropertyEnd>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeInstance::Accept(Visitor &v) { v.Visit_AttributeInstance(*this); }

	::Uml::Class AttributeInstance::meta;
	::Uml::AssociationRole AttributeInstance::meta_srcAttributeDelegate;
	::Uml::AssociationRole AttributeInstance::meta_srcAttributeDelegate_rev;
	::Uml::AssociationRole AttributeInstance::meta_referedbyAttributeMapping;
	::Uml::AssociationRole AttributeInstance::meta_ref;
	::Uml::AssociationRole AttributeInstance::meta_dstAttributeValue;
	::Uml::AssociationRole AttributeInstance::meta_dstAttributeValue_rev;
	::Uml::CompositionParentRole AttributeInstance::meta_ConnectorInstance_parent;

	ComponentInstanceType::ComponentInstanceType() {}
	ComponentInstanceType::ComponentInstanceType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentInstanceType::ComponentInstanceType(const ComponentInstanceType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentInstanceType::ComponentInstanceType(ComponentInstanceType &&master) : MgaObject(master) {};

	ComponentInstanceType ComponentInstanceType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInstanceType& ComponentInstanceType::operator=(ComponentInstanceType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInstanceType ComponentInstanceType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInstanceType ComponentInstanceType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInstanceType ComponentInstanceType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInstanceType> ComponentInstanceType::Instances() { return ::Udm::InstantiatedAttr< ComponentInstanceType>(impl); }
	ComponentInstanceType ComponentInstanceType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInstanceType> ComponentInstanceType::Derived() { return ::Udm::DerivedAttr< ComponentInstanceType>(impl); }
	::Udm::ArchetypeAttr< ComponentInstanceType> ComponentInstanceType::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInstanceType>(impl); }
	::Udm::PointerAttr< MonolithicImplementation> ComponentInstanceType::ref() const { return ::Udm::PointerAttr< MonolithicImplementation>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> ComponentInstanceType::ComponentInstance_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, meta_ComponentInstance_parent); }
	::Udm::ParentAttr< ::PICML::ComponentInstance> ComponentInstanceType::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentInstance>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentInstanceType::Accept(Visitor &v) { v.Visit_ComponentInstanceType(*this); }

	::Uml::Class ComponentInstanceType::meta;
	::Uml::AssociationRole ComponentInstanceType::meta_ref;
	::Uml::CompositionParentRole ComponentInstanceType::meta_ComponentInstance_parent;

	ComponentInstance::ComponentInstance() {}
	ComponentInstance::ComponentInstance(::Udm::ObjectImpl *impl) : AssemblyConfigPropertyEnd(impl) {}
	ComponentInstance::ComponentInstance(const ComponentInstance &master) : AssemblyConfigPropertyEnd(master) {}

#ifdef UDM_RVALUE
	ComponentInstance::ComponentInstance(ComponentInstance &&master) : AssemblyConfigPropertyEnd(master) {};

	ComponentInstance ComponentInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInstance& ComponentInstance::operator=(ComponentInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInstance ComponentInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInstance ComponentInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInstance ComponentInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInstance> ComponentInstance::Instances() { return ::Udm::InstantiatedAttr< ComponentInstance>(impl); }
	ComponentInstance ComponentInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInstance> ComponentInstance::Derived() { return ::Udm::DerivedAttr< ComponentInstance>(impl); }
	::Udm::ArchetypeAttr< ComponentInstance> ComponentInstance::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInstance>(impl); }
	::Udm::StringAttr ComponentInstance::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AssocAttr< ComponentInstanceRef> ComponentInstance::referedbyComponentInstanceRef() const { return ::Udm::AssocAttr< ComponentInstanceRef>(impl, meta_referedbyComponentInstanceRef); }
	::Udm::ChildrenAttr< ::PICML::PortInstance> ComponentInstance::PortInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::PortInstance>(impl, meta_PortInstance_children); }
	::Udm::ChildrenAttr< ::PICML::SupportsInstance> ComponentInstance::SupportsInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::SupportsInstance>(impl, meta_SupportsInstance_children); }
	::Udm::ChildAttr< ::PICML::ComponentInstanceType> ComponentInstance::ComponentInstanceType_child() const { return ::Udm::ChildAttr< ::PICML::ComponentInstanceType>(impl, meta_ComponentInstanceType_child); }
	::Udm::ChildrenAttr< ::PICML::ExternalPortEnd> ComponentInstance::ExternalPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExternalPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortEnd> ComponentInstance::ProvidedRequestPortEnd_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortEnd>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PortInstance> ComponentInstance::PortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SupportsInstance> ComponentInstance::SupportsInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SupportsInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPortInstance> ComponentInstance::RequiredRequestPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPortInstance> ComponentInstance::InEventPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortInstance> ComponentInstance::ProvidedRequestPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPortInstance> ComponentInstance::OutEventPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorPortInstance> ComponentInstance::MirrorPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortInstance> ComponentInstance::ExtendedPortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeInstance> ComponentInstance::AttributeInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentInstanceType> ComponentInstance::ComponentInstanceType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInstanceType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentInstance::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentInstance::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ComponentInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentInstance::Accept(Visitor &v) { v.Visit_ComponentInstance(*this); }

	::Uml::Class ComponentInstance::meta;
	::Uml::Attribute ComponentInstance::meta_UUID;
	::Uml::AssociationRole ComponentInstance::meta_referedbyComponentInstanceRef;
	::Uml::CompositionChildRole ComponentInstance::meta_PortInstance_children;
	::Uml::CompositionChildRole ComponentInstance::meta_SupportsInstance_children;
	::Uml::CompositionChildRole ComponentInstance::meta_ComponentInstanceType_child;
	::Uml::CompositionParentRole ComponentInstance::meta_ComponentAssembly_parent;

	ComponentRef::ComponentRef() {}
	ComponentRef::ComponentRef(::Udm::ObjectImpl *impl) : Manageable(impl), MgaObject(impl) {}
	ComponentRef::ComponentRef(const ComponentRef &master) : Manageable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentRef::ComponentRef(ComponentRef &&master) : Manageable(master), MgaObject(master) {};

	ComponentRef ComponentRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentRef& ComponentRef::operator=(ComponentRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentRef ComponentRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentRef ComponentRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentRef ComponentRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentRef> ComponentRef::Instances() { return ::Udm::InstantiatedAttr< ComponentRef>(impl); }
	ComponentRef ComponentRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentRef> ComponentRef::Derived() { return ::Udm::DerivedAttr< ComponentRef>(impl); }
	::Udm::ArchetypeAttr< ComponentRef> ComponentRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentRef>(impl); }
	::Udm::AClassPointerAttr< PackageInterface, ComponentPackage> ComponentRef::srcPackageInterface() const { return ::Udm::AClassPointerAttr< PackageInterface, ComponentPackage>(impl, meta_srcPackageInterface, meta_srcPackageInterface_rev); }
	::Udm::PointerAttr< Component> ComponentRef::ref() const { return ::Udm::PointerAttr< Component>(impl, meta_ref); }
	::Udm::AClassAssocAttr< ComponentInfoProperty, Property> ComponentRef::dstComponentInfoProperty() const { return ::Udm::AClassAssocAttr< ComponentInfoProperty, Property>(impl, meta_dstComponentInfoProperty, meta_dstComponentInfoProperty_rev); }
	::Udm::AClassAssocAttr< ComponentConfigProperty, Property> ComponentRef::dstComponentConfigProperty() const { return ::Udm::AClassAssocAttr< ComponentConfigProperty, Property>(impl, meta_dstComponentConfigProperty, meta_dstComponentConfigProperty_rev); }
	::Udm::AClassAssocAttr< ComponentProperty, ComponentPropertyDescription> ComponentRef::dstComponentProperty() const { return ::Udm::AClassAssocAttr< ComponentProperty, ComponentPropertyDescription>(impl, meta_dstComponentProperty, meta_dstComponentProperty_rev); }
	::Udm::AClassPointerAttr< Implements, ComponentImplementation> ComponentRef::srcImplements() const { return ::Udm::AClassPointerAttr< Implements, ComponentImplementation>(impl, meta_srcImplements, meta_srcImplements_rev); }
	::Udm::ParentAttr< ::PICML::Path> ComponentRef::Path_parent() const { return ::Udm::ParentAttr< ::PICML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> ComponentRef::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::File> ComponentRef::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> ComponentRef::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ComponentRef::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentRef::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentRef::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentRef::Accept(Visitor &v) { v.Visit_ComponentRef(*this); }

	::Uml::Class ComponentRef::meta;
	::Uml::AssociationRole ComponentRef::meta_srcPackageInterface;
	::Uml::AssociationRole ComponentRef::meta_srcPackageInterface_rev;
	::Uml::AssociationRole ComponentRef::meta_ref;
	::Uml::AssociationRole ComponentRef::meta_dstComponentInfoProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentInfoProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_dstComponentConfigProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentConfigProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_dstComponentProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_srcImplements;
	::Uml::AssociationRole ComponentRef::meta_srcImplements_rev;
	::Uml::CompositionParentRole ComponentRef::meta_Path_parent;
	::Uml::CompositionParentRole ComponentRef::meta_PackageContainer_parent;
	::Uml::CompositionParentRole ComponentRef::meta_File_parent;
	::Uml::CompositionParentRole ComponentRef::meta_Package_parent;
	::Uml::CompositionParentRole ComponentRef::meta_ComponentImplementationContainer_parent;
	::Uml::CompositionParentRole ComponentRef::meta_ComponentContainer_parent;

	Port::Port() {}
	Port::Port(::Udm::ObjectImpl *impl) : GraphVertex(impl),Taggable(impl),CommonPortAttrs(impl), MgaObject(impl) {}
	Port::Port(const Port &master) : GraphVertex(master),Taggable(master),CommonPortAttrs(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Port::Port(Port &&master) : GraphVertex(master),Taggable(master),CommonPortAttrs(master), MgaObject(master) {};

	Port Port::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Port& Port::operator=(Port &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Port Port::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Port Port::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Port Port::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Port> Port::Instances() { return ::Udm::InstantiatedAttr< Port>(impl); }
	Port Port::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Port> Port::Derived() { return ::Udm::DerivedAttr< Port>(impl); }
	::Udm::ArchetypeAttr< Port> Port::Archetype() const { return ::Udm::ArchetypeAttr< Port>(impl); }
	::Udm::ParentAttr< ::PICML::ConnectedComponent> Port::ConnectedComponent_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectedComponent>(impl, meta_ConnectedComponent_parent); }
	::Udm::ParentAttr< ::PICML::Component> Port::Component_parent() const { return ::Udm::ParentAttr< ::PICML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> Port::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Port::meta;
	::Uml::CompositionParentRole Port::meta_ConnectedComponent_parent;
	::Uml::CompositionParentRole Port::meta_Component_parent;

	InEventPort::InEventPort() {}
	InEventPort::InEventPort(::Udm::ObjectImpl *impl) : EventPort(impl),QueryInputBase(impl),SingleInputBase(impl), MgaObject(impl) {}
	InEventPort::InEventPort(const InEventPort &master) : EventPort(master),QueryInputBase(master),SingleInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	InEventPort::InEventPort(InEventPort &&master) : EventPort(master),QueryInputBase(master),SingleInputBase(master), MgaObject(master) {};

	InEventPort InEventPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InEventPort& InEventPort::operator=(InEventPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InEventPort InEventPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InEventPort InEventPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InEventPort InEventPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InEventPort> InEventPort::Instances() { return ::Udm::InstantiatedAttr< InEventPort>(impl); }
	InEventPort InEventPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InEventPort> InEventPort::Derived() { return ::Udm::DerivedAttr< InEventPort>(impl); }
	::Udm::ArchetypeAttr< InEventPort> InEventPort::Archetype() const { return ::Udm::ArchetypeAttr< InEventPort>(impl); }
	::Udm::AssocAttr< InEventPortInstance> InEventPort::referedbyInEventPortInstance() const { return ::Udm::AssocAttr< InEventPortInstance>(impl, meta_referedbyInEventPortInstance); }
	::Udm::PointerAttr< EventType> InEventPort::ref() const { return ::Udm::PointerAttr< EventType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> InEventPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void InEventPort::Accept(Visitor &v) { v.Visit_InEventPort(*this); }

	::Uml::Class InEventPort::meta;
	::Uml::AssociationRole InEventPort::meta_referedbyInEventPortInstance;
	::Uml::AssociationRole InEventPort::meta_ref;

	RequiredRequestPort::RequiredRequestPort() {}
	RequiredRequestPort::RequiredRequestPort(::Udm::ObjectImpl *impl) : ObjectPort(impl),MultiOutputBase(impl), MgaObject(impl) {}
	RequiredRequestPort::RequiredRequestPort(const RequiredRequestPort &master) : ObjectPort(master),MultiOutputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRequestPort::RequiredRequestPort(RequiredRequestPort &&master) : ObjectPort(master),MultiOutputBase(master), MgaObject(master) {};

	RequiredRequestPort RequiredRequestPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRequestPort& RequiredRequestPort::operator=(RequiredRequestPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRequestPort RequiredRequestPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRequestPort RequiredRequestPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRequestPort RequiredRequestPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRequestPort> RequiredRequestPort::Instances() { return ::Udm::InstantiatedAttr< RequiredRequestPort>(impl); }
	RequiredRequestPort RequiredRequestPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRequestPort> RequiredRequestPort::Derived() { return ::Udm::DerivedAttr< RequiredRequestPort>(impl); }
	::Udm::ArchetypeAttr< RequiredRequestPort> RequiredRequestPort::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRequestPort>(impl); }
	::Udm::BooleanAttr RequiredRequestPort::multiple_connections() const { return ::Udm::BooleanAttr(impl, meta_multiple_connections); }
	::Udm::BooleanAttr RequiredRequestPort::AsyncCommunication() const { return ::Udm::BooleanAttr(impl, meta_AsyncCommunication); }
	::Udm::AssocAttr< RequiredRequestPortInstance> RequiredRequestPort::referedbyRequiredRequestPortInstance() const { return ::Udm::AssocAttr< RequiredRequestPortInstance>(impl, meta_referedbyRequiredRequestPortInstance); }
	::Udm::PointerAttr< Provideable> RequiredRequestPort::ref() const { return ::Udm::PointerAttr< Provideable>(impl, meta_ref); }
	::Udm::AssocAttr< TargetRequiredRequestPort> RequiredRequestPort::referedbyTargetRequiredRequestPort() const { return ::Udm::AssocAttr< TargetRequiredRequestPort>(impl, meta_referedbyTargetRequiredRequestPort); }
	::Udm::ParentAttr< ::PICML::MgaObject> RequiredRequestPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void RequiredRequestPort::Accept(Visitor &v) { v.Visit_RequiredRequestPort(*this); }

	::Uml::Class RequiredRequestPort::meta;
	::Uml::Attribute RequiredRequestPort::meta_multiple_connections;
	::Uml::Attribute RequiredRequestPort::meta_AsyncCommunication;
	::Uml::AssociationRole RequiredRequestPort::meta_referedbyRequiredRequestPortInstance;
	::Uml::AssociationRole RequiredRequestPort::meta_ref;
	::Uml::AssociationRole RequiredRequestPort::meta_referedbyTargetRequiredRequestPort;

	ProvidedRequestPort::ProvidedRequestPort() {}
	ProvidedRequestPort::ProvidedRequestPort(::Udm::ObjectImpl *impl) : ObjectPort(impl),MultiInputBase(impl), MgaObject(impl) {}
	ProvidedRequestPort::ProvidedRequestPort(const ProvidedRequestPort &master) : ObjectPort(master),MultiInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ProvidedRequestPort::ProvidedRequestPort(ProvidedRequestPort &&master) : ObjectPort(master),MultiInputBase(master), MgaObject(master) {};

	ProvidedRequestPort ProvidedRequestPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ProvidedRequestPort& ProvidedRequestPort::operator=(ProvidedRequestPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ProvidedRequestPort ProvidedRequestPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ProvidedRequestPort ProvidedRequestPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ProvidedRequestPort ProvidedRequestPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ProvidedRequestPort> ProvidedRequestPort::Instances() { return ::Udm::InstantiatedAttr< ProvidedRequestPort>(impl); }
	ProvidedRequestPort ProvidedRequestPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ProvidedRequestPort> ProvidedRequestPort::Derived() { return ::Udm::DerivedAttr< ProvidedRequestPort>(impl); }
	::Udm::ArchetypeAttr< ProvidedRequestPort> ProvidedRequestPort::Archetype() const { return ::Udm::ArchetypeAttr< ProvidedRequestPort>(impl); }
	::Udm::AssocAttr< ProvidedRequestPortInstance> ProvidedRequestPort::referedbyProvidedRequestPortInstance() const { return ::Udm::AssocAttr< ProvidedRequestPortInstance>(impl, meta_referedbyProvidedRequestPortInstance); }
	::Udm::PointerAttr< Provideable> ProvidedRequestPort::ref() const { return ::Udm::PointerAttr< Provideable>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> ProvidedRequestPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ProvidedRequestPort::Accept(Visitor &v) { v.Visit_ProvidedRequestPort(*this); }

	::Uml::Class ProvidedRequestPort::meta;
	::Uml::AssociationRole ProvidedRequestPort::meta_referedbyProvidedRequestPortInstance;
	::Uml::AssociationRole ProvidedRequestPort::meta_ref;

	OutEventPort::OutEventPort() {}
	OutEventPort::OutEventPort(::Udm::ObjectImpl *impl) : EventPort(impl),SingleOutputBase(impl), MgaObject(impl) {}
	OutEventPort::OutEventPort(const OutEventPort &master) : EventPort(master),SingleOutputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OutEventPort::OutEventPort(OutEventPort &&master) : EventPort(master),SingleOutputBase(master), MgaObject(master) {};

	OutEventPort OutEventPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutEventPort& OutEventPort::operator=(OutEventPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutEventPort OutEventPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutEventPort OutEventPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutEventPort OutEventPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutEventPort> OutEventPort::Instances() { return ::Udm::InstantiatedAttr< OutEventPort>(impl); }
	OutEventPort OutEventPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutEventPort> OutEventPort::Derived() { return ::Udm::DerivedAttr< OutEventPort>(impl); }
	::Udm::ArchetypeAttr< OutEventPort> OutEventPort::Archetype() const { return ::Udm::ArchetypeAttr< OutEventPort>(impl); }
	::Udm::BooleanAttr OutEventPort::single_destination() const { return ::Udm::BooleanAttr(impl, meta_single_destination); }
	::Udm::StringAttr OutEventPort::out_event_port_type() const { return ::Udm::StringAttr(impl, meta_out_event_port_type); }
	::Udm::AssocAttr< OutEventPortInstance> OutEventPort::referedbyOutEventPortInstance() const { return ::Udm::AssocAttr< OutEventPortInstance>(impl, meta_referedbyOutEventPortInstance); }
	::Udm::PointerAttr< EventType> OutEventPort::ref() const { return ::Udm::PointerAttr< EventType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::MgaObject> OutEventPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OutEventPort::Accept(Visitor &v) { v.Visit_OutEventPort(*this); }

	::Uml::Class OutEventPort::meta;
	::Uml::Attribute OutEventPort::meta_single_destination;
	::Uml::Attribute OutEventPort::meta_out_event_port_type;
	::Uml::AssociationRole OutEventPort::meta_referedbyOutEventPortInstance;
	::Uml::AssociationRole OutEventPort::meta_ref;

	Component::Component() {}
	Component::Component(::Udm::ObjectImpl *impl) : SupportsInterfaces(impl),NamedType(impl),Manageable(impl),TopLevelBehavior(impl), MgaObject(impl) {}
	Component::Component(const Component &master) : SupportsInterfaces(master),NamedType(master),Manageable(master),TopLevelBehavior(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Component::Component(Component &&master) : SupportsInterfaces(master),NamedType(master),Manageable(master),TopLevelBehavior(master), MgaObject(master) {};

	Component Component::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Component& Component::operator=(Component &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Component Component::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Component Component::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Component Component::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Component> Component::Instances() { return ::Udm::InstantiatedAttr< Component>(impl); }
	Component Component::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Component> Component::Derived() { return ::Udm::DerivedAttr< Component>(impl); }
	::Udm::ArchetypeAttr< Component> Component::Archetype() const { return ::Udm::ArchetypeAttr< Component>(impl); }
	::Udm::StringAttr Component::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr Component::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AssocAttr< CompRef> Component::referedbyCompRef() const { return ::Udm::AssocAttr< CompRef>(impl, meta_referedbyCompRef); }
	::Udm::AssocAttr< ComponentRef> Component::referedbyComponentRef() const { return ::Udm::AssocAttr< ComponentRef>(impl, meta_referedbyComponentRef); }
	::Udm::AssocAttr< ComponentInherits> Component::referedbyComponentInherits() const { return ::Udm::AssocAttr< ComponentInherits>(impl, meta_referedbyComponentInherits); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortBase> Component::ExtendedPortBase_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortBase>(impl, meta_ExtendedPortBase_children); }
	::Udm::ChildAttr< ::PICML::ComponentInherits> Component::ComponentInherits_child() const { return ::Udm::ChildAttr< ::PICML::ComponentInherits>(impl, meta_ComponentInherits_child); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> Component::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::PICML::Port> Component::Port_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, meta_Port_children); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> Component::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Taggable> Component::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Attribute> Component::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> Component::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Port> Component::Port_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InEventPort> Component::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPort> Component::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort> Component::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutEventPort> Component::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortBase> Component::ExtendedPortBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorPort> Component::MirrorPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentInherits> Component::ComponentInherits_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInherits>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPort> Component::ExtendedPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::EventPort> Component::EventPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> Component::ObjectPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CommonPortAttrs> Component::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Component::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Prefixable> Component::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Component::Accept(Visitor &v) { v.Visit_Component(*this); }

	::Uml::Class Component::meta;
	::Uml::Attribute Component::meta_label;
	::Uml::Attribute Component::meta_UUID;
	::Uml::AssociationRole Component::meta_referedbyCompRef;
	::Uml::AssociationRole Component::meta_referedbyComponentRef;
	::Uml::AssociationRole Component::meta_referedbyComponentInherits;
	::Uml::CompositionChildRole Component::meta_ExtendedPortBase_children;
	::Uml::CompositionChildRole Component::meta_ComponentInherits_child;
	::Uml::CompositionChildRole Component::meta_ReadonlyAttribute_children;
	::Uml::CompositionChildRole Component::meta_Port_children;

	LookupKeyType::LookupKeyType() {}
	LookupKeyType::LookupKeyType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LookupKeyType::LookupKeyType(const LookupKeyType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LookupKeyType::LookupKeyType(LookupKeyType &&master) : MgaObject(master) {};

	LookupKeyType LookupKeyType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LookupKeyType& LookupKeyType::operator=(LookupKeyType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LookupKeyType LookupKeyType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LookupKeyType LookupKeyType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LookupKeyType LookupKeyType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LookupKeyType> LookupKeyType::Instances() { return ::Udm::InstantiatedAttr< LookupKeyType>(impl); }
	LookupKeyType LookupKeyType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LookupKeyType> LookupKeyType::Derived() { return ::Udm::DerivedAttr< LookupKeyType>(impl); }
	::Udm::ArchetypeAttr< LookupKeyType> LookupKeyType::Archetype() const { return ::Udm::ArchetypeAttr< LookupKeyType>(impl); }
	::Udm::AssocAttr< LookupKey> LookupKeyType::referedbyLookupKey() const { return ::Udm::AssocAttr< LookupKey>(impl, meta_referedbyLookupKey); }
	::Udm::ParentAttr< ::Udm::Object> LookupKeyType::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class LookupKeyType::meta;
	::Uml::AssociationRole LookupKeyType::meta_referedbyLookupKey;

	LookupKey::LookupKey() {}
	LookupKey::LookupKey(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LookupKey::LookupKey(const LookupKey &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LookupKey::LookupKey(LookupKey &&master) : MgaObject(master) {};

	LookupKey LookupKey::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LookupKey& LookupKey::operator=(LookupKey &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LookupKey LookupKey::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LookupKey LookupKey::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LookupKey LookupKey::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LookupKey> LookupKey::Instances() { return ::Udm::InstantiatedAttr< LookupKey>(impl); }
	LookupKey LookupKey::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LookupKey> LookupKey::Derived() { return ::Udm::DerivedAttr< LookupKey>(impl); }
	::Udm::ArchetypeAttr< LookupKey> LookupKey::Archetype() const { return ::Udm::ArchetypeAttr< LookupKey>(impl); }
	::Udm::PointerAttr< LookupKeyType> LookupKey::ref() const { return ::Udm::PointerAttr< LookupKeyType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ComponentFactory> LookupKey::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::PICML::ComponentFactory> LookupKey::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentFactory>(impl, ::Udm::NULLPARENTROLE); }
	void LookupKey::Accept(Visitor &v) { v.Visit_LookupKey(*this); }

	::Uml::Class LookupKey::meta;
	::Uml::AssociationRole LookupKey::meta_ref;
	::Uml::CompositionParentRole LookupKey::meta_ComponentFactory_parent;

	ExtendedPortBase::ExtendedPortBase() {}
	ExtendedPortBase::ExtendedPortBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExtendedPortBase::ExtendedPortBase(const ExtendedPortBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtendedPortBase::ExtendedPortBase(ExtendedPortBase &&master) : MgaObject(master) {};

	ExtendedPortBase ExtendedPortBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedPortBase& ExtendedPortBase::operator=(ExtendedPortBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedPortBase ExtendedPortBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedPortBase ExtendedPortBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedPortBase ExtendedPortBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedPortBase> ExtendedPortBase::Instances() { return ::Udm::InstantiatedAttr< ExtendedPortBase>(impl); }
	ExtendedPortBase ExtendedPortBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedPortBase> ExtendedPortBase::Derived() { return ::Udm::DerivedAttr< ExtendedPortBase>(impl); }
	::Udm::ArchetypeAttr< ExtendedPortBase> ExtendedPortBase::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedPortBase>(impl); }
	::Udm::PointerAttr< PortType> ExtendedPortBase::ref() const { return ::Udm::PointerAttr< PortType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Component> ExtendedPortBase::Component_parent() const { return ::Udm::ParentAttr< ::PICML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ExtendedPortBase::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::NamedType> ExtendedPortBase::parent() const { return ::Udm::ParentAttr< ::PICML::NamedType>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExtendedPortBase::meta;
	::Uml::AssociationRole ExtendedPortBase::meta_ref;
	::Uml::CompositionParentRole ExtendedPortBase::meta_Component_parent;
	::Uml::CompositionParentRole ExtendedPortBase::meta_ConnectorObject_parent;

	MirrorPort::MirrorPort() {}
	MirrorPort::MirrorPort(::Udm::ObjectImpl *impl) : ExtendedPortBase(impl) {}
	MirrorPort::MirrorPort(const MirrorPort &master) : ExtendedPortBase(master) {}

#ifdef UDM_RVALUE
	MirrorPort::MirrorPort(MirrorPort &&master) : ExtendedPortBase(master) {};

	MirrorPort MirrorPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MirrorPort& MirrorPort::operator=(MirrorPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MirrorPort MirrorPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MirrorPort MirrorPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MirrorPort MirrorPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MirrorPort> MirrorPort::Instances() { return ::Udm::InstantiatedAttr< MirrorPort>(impl); }
	MirrorPort MirrorPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MirrorPort> MirrorPort::Derived() { return ::Udm::DerivedAttr< MirrorPort>(impl); }
	::Udm::ArchetypeAttr< MirrorPort> MirrorPort::Archetype() const { return ::Udm::ArchetypeAttr< MirrorPort>(impl); }
	::Udm::AssocAttr< MirrorPortInstance> MirrorPort::referedbyMirrorPortInstance() const { return ::Udm::AssocAttr< MirrorPortInstance>(impl, meta_referedbyMirrorPortInstance); }
	::Udm::ParentAttr< ::PICML::NamedType> MirrorPort::parent() const { return ::Udm::ParentAttr< ::PICML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void MirrorPort::Accept(Visitor &v) { v.Visit_MirrorPort(*this); }

	::Uml::Class MirrorPort::meta;
	::Uml::AssociationRole MirrorPort::meta_referedbyMirrorPortInstance;

	ComponentInherits::ComponentInherits() {}
	ComponentInherits::ComponentInherits(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentInherits::ComponentInherits(const ComponentInherits &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentInherits::ComponentInherits(ComponentInherits &&master) : MgaObject(master) {};

	ComponentInherits ComponentInherits::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInherits& ComponentInherits::operator=(ComponentInherits &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInherits ComponentInherits::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInherits ComponentInherits::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInherits ComponentInherits::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInherits> ComponentInherits::Instances() { return ::Udm::InstantiatedAttr< ComponentInherits>(impl); }
	ComponentInherits ComponentInherits::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInherits> ComponentInherits::Derived() { return ::Udm::DerivedAttr< ComponentInherits>(impl); }
	::Udm::ArchetypeAttr< ComponentInherits> ComponentInherits::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInherits>(impl); }
	::Udm::PointerAttr< Component> ComponentInherits::ref() const { return ::Udm::PointerAttr< Component>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Component> ComponentInherits::Component_parent() const { return ::Udm::ParentAttr< ::PICML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::PICML::Component> ComponentInherits::parent() const { return ::Udm::ParentAttr< ::PICML::Component>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentInherits::Accept(Visitor &v) { v.Visit_ComponentInherits(*this); }

	::Uml::Class ComponentInherits::meta;
	::Uml::AssociationRole ComponentInherits::meta_ref;
	::Uml::CompositionParentRole ComponentInherits::meta_Component_parent;

	EventType::EventType() {}
	EventType::EventType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventType::EventType(const EventType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventType::EventType(EventType &&master) : MgaObject(master) {};

	EventType EventType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventType& EventType::operator=(EventType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventType EventType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventType EventType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventType EventType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventType> EventType::Instances() { return ::Udm::InstantiatedAttr< EventType>(impl); }
	EventType EventType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventType> EventType::Derived() { return ::Udm::DerivedAttr< EventType>(impl); }
	::Udm::ArchetypeAttr< EventType> EventType::Archetype() const { return ::Udm::ArchetypeAttr< EventType>(impl); }
	::Udm::AssocAttr< InEventPort> EventType::referedbyInEventPort() const { return ::Udm::AssocAttr< InEventPort>(impl, meta_referedbyInEventPort); }
	::Udm::AssocAttr< OutEventPort> EventType::referedbyOutEventPort() const { return ::Udm::AssocAttr< OutEventPort>(impl, meta_referedbyOutEventPort); }
	::Udm::ParentAttr< ::PICML::MgaObject> EventType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class EventType::meta;
	::Uml::AssociationRole EventType::meta_referedbyInEventPort;
	::Uml::AssociationRole EventType::meta_referedbyOutEventPort;

	PortType::PortType() {}
	PortType::PortType(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	PortType::PortType(const PortType &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PortType::PortType(PortType &&master) : NoInheritable(master), MgaObject(master) {};

	PortType PortType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortType& PortType::operator=(PortType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortType PortType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortType PortType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortType PortType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortType> PortType::Instances() { return ::Udm::InstantiatedAttr< PortType>(impl); }
	PortType PortType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortType> PortType::Derived() { return ::Udm::DerivedAttr< PortType>(impl); }
	::Udm::ArchetypeAttr< PortType> PortType::Archetype() const { return ::Udm::ArchetypeAttr< PortType>(impl); }
	::Udm::AssocAttr< ExtendedPortBase> PortType::referedbyExtendedPortBase() const { return ::Udm::AssocAttr< ExtendedPortBase>(impl, meta_referedbyExtendedPortBase); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> PortType::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> PortType::ObjectPort_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, meta_ObjectPort_children); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> PortType::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Taggable> PortType::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Attribute> PortType::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> PortType::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Port> PortType::Port_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPort> PortType::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort> PortType::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> PortType::ObjectPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CommonPortAttrs> PortType::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> PortType::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::MgaObject> PortType::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void PortType::Accept(Visitor &v) { v.Visit_PortType(*this); }

	::Uml::Class PortType::meta;
	::Uml::AssociationRole PortType::meta_referedbyExtendedPortBase;
	::Uml::CompositionChildRole PortType::meta_ReadonlyAttribute_children;
	::Uml::CompositionChildRole PortType::meta_ObjectPort_children;

	ExtendedPort::ExtendedPort() {}
	ExtendedPort::ExtendedPort(::Udm::ObjectImpl *impl) : ExtendedPortBase(impl) {}
	ExtendedPort::ExtendedPort(const ExtendedPort &master) : ExtendedPortBase(master) {}

#ifdef UDM_RVALUE
	ExtendedPort::ExtendedPort(ExtendedPort &&master) : ExtendedPortBase(master) {};

	ExtendedPort ExtendedPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtendedPort& ExtendedPort::operator=(ExtendedPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtendedPort ExtendedPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtendedPort ExtendedPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtendedPort ExtendedPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtendedPort> ExtendedPort::Instances() { return ::Udm::InstantiatedAttr< ExtendedPort>(impl); }
	ExtendedPort ExtendedPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtendedPort> ExtendedPort::Derived() { return ::Udm::DerivedAttr< ExtendedPort>(impl); }
	::Udm::ArchetypeAttr< ExtendedPort> ExtendedPort::Archetype() const { return ::Udm::ArchetypeAttr< ExtendedPort>(impl); }
	::Udm::AssocAttr< ExtendedPortInstance> ExtendedPort::referedbyExtendedPortInstance() const { return ::Udm::AssocAttr< ExtendedPortInstance>(impl, meta_referedbyExtendedPortInstance); }
	::Udm::ParentAttr< ::PICML::NamedType> ExtendedPort::parent() const { return ::Udm::ParentAttr< ::PICML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void ExtendedPort::Accept(Visitor &v) { v.Visit_ExtendedPort(*this); }

	::Uml::Class ExtendedPort::meta;
	::Uml::AssociationRole ExtendedPort::meta_referedbyExtendedPortInstance;

	EventPort::EventPort() {}
	EventPort::EventPort(::Udm::ObjectImpl *impl) : Port(impl), MgaObject(impl) {}
	EventPort::EventPort(const EventPort &master) : Port(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	EventPort::EventPort(EventPort &&master) : Port(master), MgaObject(master) {};

	EventPort EventPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventPort& EventPort::operator=(EventPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventPort EventPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventPort EventPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventPort EventPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventPort> EventPort::Instances() { return ::Udm::InstantiatedAttr< EventPort>(impl); }
	EventPort EventPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventPort> EventPort::Derived() { return ::Udm::DerivedAttr< EventPort>(impl); }
	::Udm::ArchetypeAttr< EventPort> EventPort::Archetype() const { return ::Udm::ArchetypeAttr< EventPort>(impl); }
	::Udm::ParentAttr< ::PICML::MgaObject> EventPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class EventPort::meta;

	ObjectPort::ObjectPort() {}
	ObjectPort::ObjectPort(::Udm::ObjectImpl *impl) : Port(impl), MgaObject(impl) {}
	ObjectPort::ObjectPort(const ObjectPort &master) : Port(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ObjectPort::ObjectPort(ObjectPort &&master) : Port(master), MgaObject(master) {};

	ObjectPort ObjectPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ObjectPort& ObjectPort::operator=(ObjectPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ObjectPort ObjectPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ObjectPort ObjectPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ObjectPort ObjectPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ObjectPort> ObjectPort::Instances() { return ::Udm::InstantiatedAttr< ObjectPort>(impl); }
	ObjectPort ObjectPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ObjectPort> ObjectPort::Derived() { return ::Udm::DerivedAttr< ObjectPort>(impl); }
	::Udm::ArchetypeAttr< ObjectPort> ObjectPort::Archetype() const { return ::Udm::ArchetypeAttr< ObjectPort>(impl); }
	::Udm::ParentAttr< ::PICML::PortType> ObjectPort::PortType_parent() const { return ::Udm::ParentAttr< ::PICML::PortType>(impl, meta_PortType_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ObjectPort::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ObjectPort::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ObjectPort::meta;
	::Uml::CompositionParentRole ObjectPort::meta_PortType_parent;
	::Uml::CompositionParentRole ObjectPort::meta_ConnectorObject_parent;

	Provideable::Provideable() {}
	Provideable::Provideable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Provideable::Provideable(const Provideable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Provideable::Provideable(Provideable &&master) : MgaObject(master) {};

	Provideable Provideable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Provideable& Provideable::operator=(Provideable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Provideable Provideable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Provideable Provideable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Provideable Provideable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Provideable> Provideable::Instances() { return ::Udm::InstantiatedAttr< Provideable>(impl); }
	Provideable Provideable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Provideable> Provideable::Derived() { return ::Udm::DerivedAttr< Provideable>(impl); }
	::Udm::ArchetypeAttr< Provideable> Provideable::Archetype() const { return ::Udm::ArchetypeAttr< Provideable>(impl); }
	::Udm::AssocAttr< RequiredRequestPort> Provideable::referedbyRequiredRequestPort() const { return ::Udm::AssocAttr< RequiredRequestPort>(impl, meta_referedbyRequiredRequestPort); }
	::Udm::AssocAttr< ProvidedRequestPort> Provideable::referedbyProvidedRequestPort() const { return ::Udm::AssocAttr< ProvidedRequestPort>(impl, meta_referedbyProvidedRequestPort); }
	::Udm::ParentAttr< ::PICML::Package> Provideable::parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Provideable::meta;
	::Uml::AssociationRole Provideable::meta_referedbyRequiredRequestPort;
	::Uml::AssociationRole Provideable::meta_referedbyProvidedRequestPort;

	ComponentFactory::ComponentFactory() {}
	ComponentFactory::ComponentFactory(::Udm::ObjectImpl *impl) : SupportsInterfaces(impl),HasOperations(impl), MgaObject(impl) {}
	ComponentFactory::ComponentFactory(const ComponentFactory &master) : SupportsInterfaces(master),HasOperations(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentFactory::ComponentFactory(ComponentFactory &&master) : SupportsInterfaces(master),HasOperations(master), MgaObject(master) {};

	ComponentFactory ComponentFactory::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactory& ComponentFactory::operator=(ComponentFactory &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactory ComponentFactory::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactory ComponentFactory::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactory ComponentFactory::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactory> ComponentFactory::Instances() { return ::Udm::InstantiatedAttr< ComponentFactory>(impl); }
	ComponentFactory ComponentFactory::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactory> ComponentFactory::Derived() { return ::Udm::DerivedAttr< ComponentFactory>(impl); }
	::Udm::ArchetypeAttr< ComponentFactory> ComponentFactory::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactory>(impl); }
	::Udm::AssocAttr< ComponentFactoryInstance> ComponentFactory::referedbyComponentFactoryInstance() const { return ::Udm::AssocAttr< ComponentFactoryInstance>(impl, meta_referedbyComponentFactoryInstance); }
	::Udm::AClassPointerAttr< ManagesComponent, Manageable> ComponentFactory::dstManagesComponent() const { return ::Udm::AClassPointerAttr< ManagesComponent, Manageable>(impl, meta_dstManagesComponent, meta_dstManagesComponent_rev); }
	::Udm::ChildAttr< ::PICML::LookupKey> ComponentFactory::LookupKey_child() const { return ::Udm::ChildAttr< ::PICML::LookupKey>(impl, meta_LookupKey_child); }
	::Udm::ChildrenAttr< ::PICML::LookupOperation> ComponentFactory::LookupOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::LookupOperation>(impl, meta_LookupOperation_children); }
	::Udm::ChildrenAttr< ::PICML::FactoryOperation> ComponentFactory::FactoryOperation_children() const { return ::Udm::ChildrenAttr< ::PICML::FactoryOperation>(impl, meta_FactoryOperation_children); }
	::Udm::ChildrenAttr< ::PICML::Taggable> ComponentFactory::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::HasExceptions> ComponentFactory::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LookupOperation> ComponentFactory::LookupOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LookupOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::FactoryOperation> ComponentFactory::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OperationBase> ComponentFactory::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LookupKey> ComponentFactory::LookupKey_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LookupKey>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentFactory::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Prefixable> ComponentFactory::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactory::Accept(Visitor &v) { v.Visit_ComponentFactory(*this); }

	::Uml::Class ComponentFactory::meta;
	::Uml::AssociationRole ComponentFactory::meta_referedbyComponentFactoryInstance;
	::Uml::AssociationRole ComponentFactory::meta_dstManagesComponent;
	::Uml::AssociationRole ComponentFactory::meta_dstManagesComponent_rev;
	::Uml::CompositionChildRole ComponentFactory::meta_LookupKey_child;
	::Uml::CompositionChildRole ComponentFactory::meta_LookupOperation_children;
	::Uml::CompositionChildRole ComponentFactory::meta_FactoryOperation_children;

	Manageable::Manageable() {}
	Manageable::Manageable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Manageable::Manageable(const Manageable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Manageable::Manageable(Manageable &&master) : MgaObject(master) {};

	Manageable Manageable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Manageable& Manageable::operator=(Manageable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Manageable Manageable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Manageable Manageable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Manageable Manageable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Manageable> Manageable::Instances() { return ::Udm::InstantiatedAttr< Manageable>(impl); }
	Manageable Manageable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Manageable> Manageable::Derived() { return ::Udm::DerivedAttr< Manageable>(impl); }
	::Udm::ArchetypeAttr< Manageable> Manageable::Archetype() const { return ::Udm::ArchetypeAttr< Manageable>(impl); }
	::Udm::AClassAssocAttr< ManagesComponent, ComponentFactory> Manageable::srcManagesComponent() const { return ::Udm::AClassAssocAttr< ManagesComponent, ComponentFactory>(impl, meta_srcManagesComponent, meta_srcManagesComponent_rev); }
	::Udm::ParentAttr< ::PICML::MgaObject> Manageable::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Manageable::meta;
	::Uml::AssociationRole Manageable::meta_srcManagesComponent;
	::Uml::AssociationRole Manageable::meta_srcManagesComponent_rev;

	ManagesComponent::ManagesComponent() {}
	ManagesComponent::ManagesComponent(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ManagesComponent::ManagesComponent(const ManagesComponent &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ManagesComponent::ManagesComponent(ManagesComponent &&master) : MgaObject(master) {};

	ManagesComponent ManagesComponent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ManagesComponent& ManagesComponent::operator=(ManagesComponent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ManagesComponent ManagesComponent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ManagesComponent ManagesComponent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ManagesComponent ManagesComponent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ManagesComponent> ManagesComponent::Instances() { return ::Udm::InstantiatedAttr< ManagesComponent>(impl); }
	ManagesComponent ManagesComponent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ManagesComponent> ManagesComponent::Derived() { return ::Udm::DerivedAttr< ManagesComponent>(impl); }
	::Udm::ArchetypeAttr< ManagesComponent> ManagesComponent::Archetype() const { return ::Udm::ArchetypeAttr< ManagesComponent>(impl); }
	::Udm::ParentAttr< ::PICML::File> ManagesComponent::File_parent() const { return ::Udm::ParentAttr< ::PICML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::PICML::Package> ManagesComponent::Package_parent() const { return ::Udm::ParentAttr< ::PICML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::PICML::Prefixable> ManagesComponent::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentFactory> ManagesComponent::srcManagesComponent_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentFactory>(impl, meta_srcManagesComponent_end_); }
	::Udm::AssocEndAttr< ::PICML::Manageable> ManagesComponent::dstManagesComponent_end() const { return ::Udm::AssocEndAttr< ::PICML::Manageable>(impl, meta_dstManagesComponent_end_); }
	void ManagesComponent::Accept(Visitor &v) { v.Visit_ManagesComponent(*this); }

	::Uml::Class ManagesComponent::meta;
	::Uml::CompositionParentRole ManagesComponent::meta_File_parent;
	::Uml::CompositionParentRole ManagesComponent::meta_Package_parent;
	::Uml::AssociationRole ManagesComponent::meta_srcManagesComponent_end_;
	::Uml::AssociationRole ManagesComponent::meta_dstManagesComponent_end_;

	CriticalPath::CriticalPath() {}
	CriticalPath::CriticalPath(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CriticalPath::CriticalPath(const CriticalPath &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CriticalPath::CriticalPath(CriticalPath &&master) : MgaObject(master) {};

	CriticalPath CriticalPath::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CriticalPath& CriticalPath::operator=(CriticalPath &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CriticalPath CriticalPath::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CriticalPath CriticalPath::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CriticalPath CriticalPath::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CriticalPath> CriticalPath::Instances() { return ::Udm::InstantiatedAttr< CriticalPath>(impl); }
	CriticalPath CriticalPath::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CriticalPath> CriticalPath::Derived() { return ::Udm::DerivedAttr< CriticalPath>(impl); }
	::Udm::ArchetypeAttr< CriticalPath> CriticalPath::Archetype() const { return ::Udm::ArchetypeAttr< CriticalPath>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> CriticalPath::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> CriticalPath::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentAssembly> CriticalPath::srcCriticalPath_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentAssembly>(impl, meta_srcCriticalPath_end_); }
	::Udm::AssocEndAttr< ::PICML::PathReference> CriticalPath::dstCriticalPath_end() const { return ::Udm::AssocEndAttr< ::PICML::PathReference>(impl, meta_dstCriticalPath_end_); }
	void CriticalPath::Accept(Visitor &v) { v.Visit_CriticalPath(*this); }

	::Uml::Class CriticalPath::meta;
	::Uml::CompositionParentRole CriticalPath::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole CriticalPath::meta_srcCriticalPath_end_;
	::Uml::AssociationRole CriticalPath::meta_dstCriticalPath_end_;

	MonolithicImplementation::MonolithicImplementation() {}
	MonolithicImplementation::MonolithicImplementation(::Udm::ObjectImpl *impl) : MonolithicImplementationBase(impl),ComponentImplementation(impl), Implemenation(impl) {}
	MonolithicImplementation::MonolithicImplementation(const MonolithicImplementation &master) : MonolithicImplementationBase(master),ComponentImplementation(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	MonolithicImplementation::MonolithicImplementation(MonolithicImplementation &&master) : MonolithicImplementationBase(master),ComponentImplementation(master), Implemenation(master) {};

	MonolithicImplementation MonolithicImplementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithicImplementation& MonolithicImplementation::operator=(MonolithicImplementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithicImplementation MonolithicImplementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithicImplementation MonolithicImplementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithicImplementation MonolithicImplementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithicImplementation> MonolithicImplementation::Instances() { return ::Udm::InstantiatedAttr< MonolithicImplementation>(impl); }
	MonolithicImplementation MonolithicImplementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithicImplementation> MonolithicImplementation::Derived() { return ::Udm::DerivedAttr< MonolithicImplementation>(impl); }
	::Udm::ArchetypeAttr< MonolithicImplementation> MonolithicImplementation::Archetype() const { return ::Udm::ArchetypeAttr< MonolithicImplementation>(impl); }
	::Udm::StringAttr MonolithicImplementation::defaultVersion() const { return ::Udm::StringAttr(impl, meta_defaultVersion); }
	::Udm::AssocAttr< ComponentInstanceType> MonolithicImplementation::referedbyComponentInstanceType() const { return ::Udm::AssocAttr< ComponentInstanceType>(impl, meta_referedbyComponentInstanceType); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> MonolithicImplementation::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void MonolithicImplementation::Accept(Visitor &v) { v.Visit_MonolithicImplementation(*this); }

	::Uml::Class MonolithicImplementation::meta;
	::Uml::Attribute MonolithicImplementation::meta_defaultVersion;
	::Uml::AssociationRole MonolithicImplementation::meta_referedbyComponentInstanceType;

	ComponentImplementationContainer::ComponentImplementationContainer() {}
	ComponentImplementationContainer::ComponentImplementationContainer(::Udm::ObjectImpl *impl) : ImplementationContainer(impl) {}
	ComponentImplementationContainer::ComponentImplementationContainer(const ComponentImplementationContainer &master) : ImplementationContainer(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationContainer::ComponentImplementationContainer(ComponentImplementationContainer &&master) : ImplementationContainer(master) {};

	ComponentImplementationContainer ComponentImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationContainer& ComponentImplementationContainer::operator=(ComponentImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationContainer ComponentImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationContainer ComponentImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationContainer ComponentImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationContainer> ComponentImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationContainer>(impl); }
	ComponentImplementationContainer ComponentImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationContainer> ComponentImplementationContainer::Derived() { return ::Udm::DerivedAttr< ComponentImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationContainer> ComponentImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementation> ComponentImplementationContainer::ComponentImplementation_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementation>(impl, meta_ComponentImplementation_children); }
	::Udm::ChildAttr< ::PICML::PathReference> ComponentImplementationContainer::PathReference_child() const { return ::Udm::ChildAttr< ::PICML::PathReference>(impl, meta_PathReference_child); }
	::Udm::ChildrenAttr< ::PICML::CriticalPath> ComponentImplementationContainer::CriticalPath_children() const { return ::Udm::ChildrenAttr< ::PICML::CriticalPath>(impl, meta_CriticalPath_children); }
	::Udm::ChildrenAttr< ::PICML::Capability> ComponentImplementationContainer::Capability_children() const { return ::Udm::ChildrenAttr< ::PICML::Capability>(impl, meta_Capability_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationCapability> ComponentImplementationContainer::ImplementationCapability_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationCapability>(impl, meta_ImplementationCapability_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationDependency> ComponentImplementationContainer::ImplementationDependency_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationDependency>(impl, meta_ImplementationDependency_children); }
	::Udm::ChildAttr< ::PICML::ComponentRef> ComponentImplementationContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildAttr< ::PICML::Implements> ComponentImplementationContainer::Implements_child() const { return ::Udm::ChildAttr< ::PICML::Implements>(impl, meta_Implements_child); }
	::Udm::ChildrenAttr< ::PICML::ImplementationDependsOn> ComponentImplementationContainer::ImplementationDependsOn_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationDependsOn>(impl, meta_ImplementationDependsOn_children); }
	::Udm::ChildrenAttr< ::PICML::Implemenation> ComponentImplementationContainer::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PathReference> ComponentImplementationContainer::PathReference_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PathReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Capability> ComponentImplementationContainer::Capability_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Capability>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequirementSatisfier> ComponentImplementationContainer::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationDependency> ComponentImplementationContainer::ImplementationDependency_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationDependency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentAssembly> ComponentImplementationContainer::ComponentAssembly_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> ComponentImplementationContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> ComponentImplementationContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CriticalPath> ComponentImplementationContainer::CriticalPath_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CriticalPath>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MonolithicImplementation> ComponentImplementationContainer::MonolithicImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithicImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementation> ComponentImplementationContainer::ComponentImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Implements> ComponentImplementationContainer::Implements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationDependsOn> ComponentImplementationContainer::ImplementationDependsOn_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationDependsOn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationCapability> ComponentImplementationContainer::ImplementationCapability_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationCapability>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentImplementations> ComponentImplementationContainer::ComponentImplementations_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementations>(impl, meta_ComponentImplementations_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementations> ComponentImplementationContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementations>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationContainer::Accept(Visitor &v) { v.Visit_ComponentImplementationContainer(*this); }

	::Uml::Class ComponentImplementationContainer::meta;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ComponentImplementation_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_PathReference_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_CriticalPath_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_Capability_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationCapability_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationDependency_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ComponentRef_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_Implements_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationDependsOn_children;
	::Uml::CompositionParentRole ComponentImplementationContainer::meta_ComponentImplementations_parent;

	ComponentImplementation::ComponentImplementation() {}
	ComponentImplementation::ComponentImplementation(::Udm::ObjectImpl *impl) : Implemenation(impl) {}
	ComponentImplementation::ComponentImplementation(const ComponentImplementation &master) : Implemenation(master) {}

#ifdef UDM_RVALUE
	ComponentImplementation::ComponentImplementation(ComponentImplementation &&master) : Implemenation(master) {};

	ComponentImplementation ComponentImplementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementation& ComponentImplementation::operator=(ComponentImplementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementation ComponentImplementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementation ComponentImplementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementation ComponentImplementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementation> ComponentImplementation::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementation>(impl); }
	ComponentImplementation ComponentImplementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementation> ComponentImplementation::Derived() { return ::Udm::DerivedAttr< ComponentImplementation>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementation> ComponentImplementation::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementation>(impl); }
	::Udm::AClassPointerAttr< Implements, ComponentRef> ComponentImplementation::dstImplements() const { return ::Udm::AClassPointerAttr< Implements, ComponentRef>(impl, meta_dstImplements, meta_dstImplements_rev); }
	::Udm::AClassAssocAttr< ImplementationDependsOn, ImplementationDependency> ComponentImplementation::dstImplementationDependsOn() const { return ::Udm::AClassAssocAttr< ImplementationDependsOn, ImplementationDependency>(impl, meta_dstImplementationDependsOn, meta_dstImplementationDependsOn_rev); }
	::Udm::AClassAssocAttr< ImplementationCapability, Capability> ComponentImplementation::dstImplementationCapability() const { return ::Udm::AClassAssocAttr< ImplementationCapability, Capability>(impl, meta_dstImplementationCapability, meta_dstImplementationCapability_rev); }
	::Udm::AssocAttr< ComponentImplementationReference> ComponentImplementation::referedbyComponentImplementationReference() const { return ::Udm::AssocAttr< ComponentImplementationReference>(impl, meta_referedbyComponentImplementationReference); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ComponentImplementation::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::MgaObject> ComponentImplementation::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentImplementation::meta;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplements;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplements_rev;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationDependsOn;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationDependsOn_rev;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationCapability;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationCapability_rev;
	::Uml::AssociationRole ComponentImplementation::meta_referedbyComponentImplementationReference;
	::Uml::CompositionParentRole ComponentImplementation::meta_ComponentImplementationContainer_parent;

	ComponentImplementationReference::ComponentImplementationReference() {}
	ComponentImplementationReference::ComponentImplementationReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentImplementationReference::ComponentImplementationReference(const ComponentImplementationReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationReference::ComponentImplementationReference(ComponentImplementationReference &&master) : MgaObject(master) {};

	ComponentImplementationReference ComponentImplementationReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationReference& ComponentImplementationReference::operator=(ComponentImplementationReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationReference ComponentImplementationReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationReference ComponentImplementationReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationReference ComponentImplementationReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationReference> ComponentImplementationReference::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationReference>(impl); }
	ComponentImplementationReference ComponentImplementationReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationReference> ComponentImplementationReference::Derived() { return ::Udm::DerivedAttr< ComponentImplementationReference>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationReference> ComponentImplementationReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationReference>(impl); }
	::Udm::AClassAssocAttr< Implementation, ComponentPackage> ComponentImplementationReference::srcImplementation() const { return ::Udm::AClassAssocAttr< Implementation, ComponentPackage>(impl, meta_srcImplementation, meta_srcImplementation_rev); }
	::Udm::PointerAttr< ComponentImplementation> ComponentImplementationReference::ref() const { return ::Udm::PointerAttr< ComponentImplementation>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::PackageContainer> ComponentImplementationReference::PackageContainer_parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::PICML::PackageContainer> ComponentImplementationReference::parent() const { return ::Udm::ParentAttr< ::PICML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationReference::Accept(Visitor &v) { v.Visit_ComponentImplementationReference(*this); }

	::Uml::Class ComponentImplementationReference::meta;
	::Uml::AssociationRole ComponentImplementationReference::meta_srcImplementation;
	::Uml::AssociationRole ComponentImplementationReference::meta_srcImplementation_rev;
	::Uml::AssociationRole ComponentImplementationReference::meta_ref;
	::Uml::CompositionParentRole ComponentImplementationReference::meta_PackageContainer_parent;

	ComponentImplementations::ComponentImplementations() {}
	ComponentImplementations::ComponentImplementations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentImplementations::ComponentImplementations(const ComponentImplementations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentImplementations::ComponentImplementations(ComponentImplementations &&master) : UDM_OBJECT(master) {};

	ComponentImplementations ComponentImplementations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementations& ComponentImplementations::operator=(ComponentImplementations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementations ComponentImplementations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementations ComponentImplementations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementations ComponentImplementations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementations> ComponentImplementations::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementations>(impl); }
	ComponentImplementations ComponentImplementations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementations> ComponentImplementations::Derived() { return ::Udm::DerivedAttr< ComponentImplementations>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementations> ComponentImplementations::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementations>(impl); }
	::Udm::StringAttr ComponentImplementations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationContainer> ComponentImplementations::ComponentImplementationContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationContainer> ComponentImplementations::ImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementationContainer> ComponentImplementations::ComponentImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentImplementations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentImplementations::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentImplementations::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementations::Accept(Visitor &v) { v.Visit_ComponentImplementations(*this); }

	::Uml::Class ComponentImplementations::meta;
	::Uml::Attribute ComponentImplementations::meta_name;
	::Uml::CompositionChildRole ComponentImplementations::meta_ComponentImplementationContainer_children;
	::Uml::CompositionParentRole ComponentImplementations::meta_RootFolder_parent;

	Implements::Implements() {}
	Implements::Implements(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implements::Implements(const Implements &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implements::Implements(Implements &&master) : MgaObject(master) {};

	Implements Implements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implements& Implements::operator=(Implements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implements Implements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implements Implements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implements Implements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implements> Implements::Instances() { return ::Udm::InstantiatedAttr< Implements>(impl); }
	Implements Implements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implements> Implements::Derived() { return ::Udm::DerivedAttr< Implements>(impl); }
	::Udm::ArchetypeAttr< Implements> Implements::Archetype() const { return ::Udm::ArchetypeAttr< Implements>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> Implements::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> Implements::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentImplementation> Implements::srcImplements_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentImplementation>(impl, meta_srcImplements_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentRef> Implements::dstImplements_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentRef>(impl, meta_dstImplements_end_); }
	void Implements::Accept(Visitor &v) { v.Visit_Implements(*this); }

	::Uml::Class Implements::meta;
	::Uml::CompositionParentRole Implements::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole Implements::meta_srcImplements_end_;
	::Uml::AssociationRole Implements::meta_dstImplements_end_;

	ImplementationDependsOn::ImplementationDependsOn() {}
	ImplementationDependsOn::ImplementationDependsOn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationDependsOn::ImplementationDependsOn(const ImplementationDependsOn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationDependsOn::ImplementationDependsOn(ImplementationDependsOn &&master) : MgaObject(master) {};

	ImplementationDependsOn ImplementationDependsOn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationDependsOn& ImplementationDependsOn::operator=(ImplementationDependsOn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationDependsOn ImplementationDependsOn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationDependsOn ImplementationDependsOn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationDependsOn ImplementationDependsOn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationDependsOn> ImplementationDependsOn::Instances() { return ::Udm::InstantiatedAttr< ImplementationDependsOn>(impl); }
	ImplementationDependsOn ImplementationDependsOn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationDependsOn> ImplementationDependsOn::Derived() { return ::Udm::DerivedAttr< ImplementationDependsOn>(impl); }
	::Udm::ArchetypeAttr< ImplementationDependsOn> ImplementationDependsOn::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationDependsOn>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationDependsOn::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationDependsOn::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentImplementation> ImplementationDependsOn::srcImplementationDependsOn_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentImplementation>(impl, meta_srcImplementationDependsOn_end_); }
	::Udm::AssocEndAttr< ::PICML::ImplementationDependency> ImplementationDependsOn::dstImplementationDependsOn_end() const { return ::Udm::AssocEndAttr< ::PICML::ImplementationDependency>(impl, meta_dstImplementationDependsOn_end_); }
	void ImplementationDependsOn::Accept(Visitor &v) { v.Visit_ImplementationDependsOn(*this); }

	::Uml::Class ImplementationDependsOn::meta;
	::Uml::CompositionParentRole ImplementationDependsOn::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole ImplementationDependsOn::meta_srcImplementationDependsOn_end_;
	::Uml::AssociationRole ImplementationDependsOn::meta_dstImplementationDependsOn_end_;

	ImplementationCapability::ImplementationCapability() {}
	ImplementationCapability::ImplementationCapability(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationCapability::ImplementationCapability(const ImplementationCapability &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationCapability::ImplementationCapability(ImplementationCapability &&master) : MgaObject(master) {};

	ImplementationCapability ImplementationCapability::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationCapability& ImplementationCapability::operator=(ImplementationCapability &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationCapability ImplementationCapability::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationCapability ImplementationCapability::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationCapability ImplementationCapability::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationCapability> ImplementationCapability::Instances() { return ::Udm::InstantiatedAttr< ImplementationCapability>(impl); }
	ImplementationCapability ImplementationCapability::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationCapability> ImplementationCapability::Derived() { return ::Udm::DerivedAttr< ImplementationCapability>(impl); }
	::Udm::ArchetypeAttr< ImplementationCapability> ImplementationCapability::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationCapability>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationCapability::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentImplementationContainer> ImplementationCapability::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentImplementation> ImplementationCapability::srcImplementationCapability_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentImplementation>(impl, meta_srcImplementationCapability_end_); }
	::Udm::AssocEndAttr< ::PICML::Capability> ImplementationCapability::dstImplementationCapability_end() const { return ::Udm::AssocEndAttr< ::PICML::Capability>(impl, meta_dstImplementationCapability_end_); }
	void ImplementationCapability::Accept(Visitor &v) { v.Visit_ImplementationCapability(*this); }

	::Uml::Class ImplementationCapability::meta;
	::Uml::CompositionParentRole ImplementationCapability::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole ImplementationCapability::meta_srcImplementationCapability_end_;
	::Uml::AssociationRole ImplementationCapability::meta_dstImplementationCapability_end_;

	CommonPortAttrs::CommonPortAttrs() {}
	CommonPortAttrs::CommonPortAttrs(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CommonPortAttrs::CommonPortAttrs(const CommonPortAttrs &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CommonPortAttrs::CommonPortAttrs(CommonPortAttrs &&master) : MgaObject(master) {};

	CommonPortAttrs CommonPortAttrs::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CommonPortAttrs& CommonPortAttrs::operator=(CommonPortAttrs &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CommonPortAttrs CommonPortAttrs::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CommonPortAttrs CommonPortAttrs::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CommonPortAttrs CommonPortAttrs::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CommonPortAttrs> CommonPortAttrs::Instances() { return ::Udm::InstantiatedAttr< CommonPortAttrs>(impl); }
	CommonPortAttrs CommonPortAttrs::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CommonPortAttrs> CommonPortAttrs::Derived() { return ::Udm::DerivedAttr< CommonPortAttrs>(impl); }
	::Udm::ArchetypeAttr< CommonPortAttrs> CommonPortAttrs::Archetype() const { return ::Udm::ArchetypeAttr< CommonPortAttrs>(impl); }
	::Udm::BooleanAttr CommonPortAttrs::optional() const { return ::Udm::BooleanAttr(impl, meta_optional); }
	::Udm::BooleanAttr CommonPortAttrs::exclusiveUser() const { return ::Udm::BooleanAttr(impl, meta_exclusiveUser); }
	::Udm::BooleanAttr CommonPortAttrs::exclusiveProvider() const { return ::Udm::BooleanAttr(impl, meta_exclusiveProvider); }
	::Udm::ParentAttr< ::PICML::MgaObject> CommonPortAttrs::parent() const { return ::Udm::ParentAttr< ::PICML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class CommonPortAttrs::meta;
	::Uml::Attribute CommonPortAttrs::meta_optional;
	::Uml::Attribute CommonPortAttrs::meta_exclusiveUser;
	::Uml::Attribute CommonPortAttrs::meta_exclusiveProvider;

	ComponentInfoProperty::ComponentInfoProperty() {}
	ComponentInfoProperty::ComponentInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentInfoProperty::ComponentInfoProperty(const ComponentInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentInfoProperty::ComponentInfoProperty(ComponentInfoProperty &&master) : MgaObject(master) {};

	ComponentInfoProperty ComponentInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInfoProperty& ComponentInfoProperty::operator=(ComponentInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInfoProperty ComponentInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInfoProperty ComponentInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInfoProperty ComponentInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInfoProperty> ComponentInfoProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentInfoProperty>(impl); }
	ComponentInfoProperty ComponentInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInfoProperty> ComponentInfoProperty::Derived() { return ::Udm::DerivedAttr< ComponentInfoProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentInfoProperty> ComponentInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInfoProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentInfoProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentInfoProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentRef> ComponentInfoProperty::srcComponentInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentRef>(impl, meta_srcComponentInfoProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> ComponentInfoProperty::dstComponentInfoProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstComponentInfoProperty_end_); }
	void ComponentInfoProperty::Accept(Visitor &v) { v.Visit_ComponentInfoProperty(*this); }

	::Uml::Class ComponentInfoProperty::meta;
	::Uml::CompositionParentRole ComponentInfoProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentInfoProperty::meta_srcComponentInfoProperty_end_;
	::Uml::AssociationRole ComponentInfoProperty::meta_dstComponentInfoProperty_end_;

	ComponentConfigProperty::ComponentConfigProperty() {}
	ComponentConfigProperty::ComponentConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentConfigProperty::ComponentConfigProperty(const ComponentConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentConfigProperty::ComponentConfigProperty(ComponentConfigProperty &&master) : MgaObject(master) {};

	ComponentConfigProperty ComponentConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentConfigProperty& ComponentConfigProperty::operator=(ComponentConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentConfigProperty ComponentConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentConfigProperty ComponentConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentConfigProperty ComponentConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentConfigProperty> ComponentConfigProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentConfigProperty>(impl); }
	ComponentConfigProperty ComponentConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentConfigProperty> ComponentConfigProperty::Derived() { return ::Udm::DerivedAttr< ComponentConfigProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentConfigProperty> ComponentConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentConfigProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentConfigProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentConfigProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentRef> ComponentConfigProperty::srcComponentConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentRef>(impl, meta_srcComponentConfigProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::Property> ComponentConfigProperty::dstComponentConfigProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::Property>(impl, meta_dstComponentConfigProperty_end_); }
	void ComponentConfigProperty::Accept(Visitor &v) { v.Visit_ComponentConfigProperty(*this); }

	::Uml::Class ComponentConfigProperty::meta;
	::Uml::CompositionParentRole ComponentConfigProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentConfigProperty::meta_srcComponentConfigProperty_end_;
	::Uml::AssociationRole ComponentConfigProperty::meta_dstComponentConfigProperty_end_;

	ComponentContainer::ComponentContainer() {}
	ComponentContainer::ComponentContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentContainer::ComponentContainer(const ComponentContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentContainer::ComponentContainer(ComponentContainer &&master) : MgaObject(master) {};

	ComponentContainer ComponentContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentContainer& ComponentContainer::operator=(ComponentContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentContainer ComponentContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentContainer ComponentContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentContainer ComponentContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentContainer> ComponentContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentContainer>(impl); }
	ComponentContainer ComponentContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentContainer> ComponentContainer::Derived() { return ::Udm::DerivedAttr< ComponentContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentContainer> ComponentContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::Property> ComponentContainer::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildAttr< ::PICML::ComponentRef> ComponentContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::PICML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildrenAttr< ::PICML::ComponentPropertyDescription> ComponentContainer::ComponentPropertyDescription_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPropertyDescription>(impl, meta_ComponentPropertyDescription_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentProperty> ComponentContainer::ComponentProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentProperty>(impl, meta_ComponentProperty_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentInfoProperty> ComponentContainer::ComponentInfoProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInfoProperty>(impl, meta_ComponentInfoProperty_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentConfigProperty> ComponentContainer::ComponentConfigProperty_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentConfigProperty>(impl, meta_ComponentConfigProperty_children); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> ComponentContainer::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> ComponentContainer::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> ComponentContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentRef> ComponentContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Manageable> ComponentContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentInfoProperty> ComponentContainer::ComponentInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentConfigProperty> ComponentContainer::ComponentConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentProperty> ComponentContainer::ComponentProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPropertyDescription> ComponentContainer::ComponentPropertyDescription_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPropertyDescription>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentTypes> ComponentContainer::ComponentTypes_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentTypes>(impl, meta_ComponentTypes_parent); }
	::Udm::ParentAttr< ::PICML::ComponentTypes> ComponentContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentTypes>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentContainer::Accept(Visitor &v) { v.Visit_ComponentContainer(*this); }

	::Uml::Class ComponentContainer::meta;
	::Uml::CompositionChildRole ComponentContainer::meta_Property_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentRef_child;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentPropertyDescription_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentProperty_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentInfoProperty_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentConfigProperty_children;
	::Uml::CompositionParentRole ComponentContainer::meta_ComponentTypes_parent;

	ComponentProperty::ComponentProperty() {}
	ComponentProperty::ComponentProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentProperty::ComponentProperty(const ComponentProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentProperty::ComponentProperty(ComponentProperty &&master) : MgaObject(master) {};

	ComponentProperty ComponentProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentProperty& ComponentProperty::operator=(ComponentProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentProperty ComponentProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentProperty ComponentProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentProperty ComponentProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentProperty> ComponentProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentProperty>(impl); }
	ComponentProperty ComponentProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentProperty> ComponentProperty::Derived() { return ::Udm::DerivedAttr< ComponentProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentProperty> ComponentProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentProperty>(impl); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentProperty::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ComponentRef> ComponentProperty::srcComponentProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentRef>(impl, meta_srcComponentProperty_end_); }
	::Udm::AssocEndAttr< ::PICML::ComponentPropertyDescription> ComponentProperty::dstComponentProperty_end() const { return ::Udm::AssocEndAttr< ::PICML::ComponentPropertyDescription>(impl, meta_dstComponentProperty_end_); }
	void ComponentProperty::Accept(Visitor &v) { v.Visit_ComponentProperty(*this); }

	::Uml::Class ComponentProperty::meta;
	::Uml::CompositionParentRole ComponentProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentProperty::meta_srcComponentProperty_end_;
	::Uml::AssociationRole ComponentProperty::meta_dstComponentProperty_end_;

	ComponentPropertyDescription::ComponentPropertyDescription() {}
	ComponentPropertyDescription::ComponentPropertyDescription(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPropertyDescription::ComponentPropertyDescription(const ComponentPropertyDescription &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPropertyDescription::ComponentPropertyDescription(ComponentPropertyDescription &&master) : MgaObject(master) {};

	ComponentPropertyDescription ComponentPropertyDescription::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPropertyDescription& ComponentPropertyDescription::operator=(ComponentPropertyDescription &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPropertyDescription ComponentPropertyDescription::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPropertyDescription ComponentPropertyDescription::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPropertyDescription ComponentPropertyDescription::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPropertyDescription> ComponentPropertyDescription::Instances() { return ::Udm::InstantiatedAttr< ComponentPropertyDescription>(impl); }
	ComponentPropertyDescription ComponentPropertyDescription::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPropertyDescription> ComponentPropertyDescription::Derived() { return ::Udm::DerivedAttr< ComponentPropertyDescription>(impl); }
	::Udm::ArchetypeAttr< ComponentPropertyDescription> ComponentPropertyDescription::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPropertyDescription>(impl); }
	::Udm::AClassAssocAttr< ComponentProperty, ComponentRef> ComponentPropertyDescription::srcComponentProperty() const { return ::Udm::AClassAssocAttr< ComponentProperty, ComponentRef>(impl, meta_srcComponentProperty, meta_srcComponentProperty_rev); }
	::Udm::ChildAttr< ::PICML::DataType> ComponentPropertyDescription::DataType_child() const { return ::Udm::ChildAttr< ::PICML::DataType>(impl, meta_DataType_child); }
	::Udm::ChildrenAttr< ::PICML::DataType> ComponentPropertyDescription::DataType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DataType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentPropertyDescription::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentPropertyDescription::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::PICML::ComponentContainer> ComponentPropertyDescription::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPropertyDescription::Accept(Visitor &v) { v.Visit_ComponentPropertyDescription(*this); }

	::Uml::Class ComponentPropertyDescription::meta;
	::Uml::AssociationRole ComponentPropertyDescription::meta_srcComponentProperty;
	::Uml::AssociationRole ComponentPropertyDescription::meta_srcComponentProperty_rev;
	::Uml::CompositionChildRole ComponentPropertyDescription::meta_DataType_child;
	::Uml::CompositionParentRole ComponentPropertyDescription::meta_ComponentContainer_parent;

	ComponentTypes::ComponentTypes() {}
	ComponentTypes::ComponentTypes(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentTypes::ComponentTypes(const ComponentTypes &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentTypes::ComponentTypes(ComponentTypes &&master) : UDM_OBJECT(master) {};

	ComponentTypes ComponentTypes::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentTypes& ComponentTypes::operator=(ComponentTypes &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentTypes ComponentTypes::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentTypes ComponentTypes::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentTypes ComponentTypes::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentTypes> ComponentTypes::Instances() { return ::Udm::InstantiatedAttr< ComponentTypes>(impl); }
	ComponentTypes ComponentTypes::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentTypes> ComponentTypes::Derived() { return ::Udm::DerivedAttr< ComponentTypes>(impl); }
	::Udm::ArchetypeAttr< ComponentTypes> ComponentTypes::Archetype() const { return ::Udm::ArchetypeAttr< ComponentTypes>(impl); }
	::Udm::StringAttr ComponentTypes::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ComponentContainer> ComponentTypes::ComponentContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentContainer>(impl, meta_ComponentContainer_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentContainer> ComponentTypes::ComponentContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ComponentTypes::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentTypes::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ComponentTypes::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentTypes::Accept(Visitor &v) { v.Visit_ComponentTypes(*this); }

	::Uml::Class ComponentTypes::meta;
	::Uml::Attribute ComponentTypes::meta_name;
	::Uml::CompositionChildRole ComponentTypes::meta_ComponentContainer_children;
	::Uml::CompositionParentRole ComponentTypes::meta_RootFolder_parent;

	ConnectorType::ConnectorType() {}
	ConnectorType::ConnectorType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorType::ConnectorType(const ConnectorType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorType::ConnectorType(ConnectorType &&master) : MgaObject(master) {};

	ConnectorType ConnectorType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorType& ConnectorType::operator=(ConnectorType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorType ConnectorType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorType ConnectorType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorType ConnectorType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorType> ConnectorType::Instances() { return ::Udm::InstantiatedAttr< ConnectorType>(impl); }
	ConnectorType ConnectorType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorType> ConnectorType::Derived() { return ::Udm::DerivedAttr< ConnectorType>(impl); }
	::Udm::ArchetypeAttr< ConnectorType> ConnectorType::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorType>(impl); }
	::Udm::PointerAttr< ConnectorObject> ConnectorType::ref() const { return ::Udm::PointerAttr< ConnectorObject>(impl, meta_ref); }
	::Udm::AClassPointerAttr< ConnectorImplements, ConnectorImplementation> ConnectorType::srcConnectorImplements() const { return ::Udm::AClassPointerAttr< ConnectorImplements, ConnectorImplementation>(impl, meta_srcConnectorImplements, meta_srcConnectorImplements_rev); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorType::ConnectorImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, meta_ConnectorImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorType::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorType::Accept(Visitor &v) { v.Visit_ConnectorType(*this); }

	::Uml::Class ConnectorType::meta;
	::Uml::AssociationRole ConnectorType::meta_ref;
	::Uml::AssociationRole ConnectorType::meta_srcConnectorImplements;
	::Uml::AssociationRole ConnectorType::meta_srcConnectorImplements_rev;
	::Uml::CompositionParentRole ConnectorType::meta_ConnectorImplementationContainer_parent;

	ConnectorImplements::ConnectorImplements() {}
	ConnectorImplements::ConnectorImplements(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorImplements::ConnectorImplements(const ConnectorImplements &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorImplements::ConnectorImplements(ConnectorImplements &&master) : MgaObject(master) {};

	ConnectorImplements ConnectorImplements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorImplements& ConnectorImplements::operator=(ConnectorImplements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorImplements ConnectorImplements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorImplements ConnectorImplements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorImplements ConnectorImplements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorImplements> ConnectorImplements::Instances() { return ::Udm::InstantiatedAttr< ConnectorImplements>(impl); }
	ConnectorImplements ConnectorImplements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorImplements> ConnectorImplements::Derived() { return ::Udm::DerivedAttr< ConnectorImplements>(impl); }
	::Udm::ArchetypeAttr< ConnectorImplements> ConnectorImplements::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorImplements>(impl); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplements::ConnectorImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, meta_ConnectorImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplements::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ConnectorImplementation> ConnectorImplements::srcConnectorImplements_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorImplementation>(impl, meta_srcConnectorImplements_end_); }
	::Udm::AssocEndAttr< ::PICML::ConnectorType> ConnectorImplements::dstConnectorImplements_end() const { return ::Udm::AssocEndAttr< ::PICML::ConnectorType>(impl, meta_dstConnectorImplements_end_); }
	void ConnectorImplements::Accept(Visitor &v) { v.Visit_ConnectorImplements(*this); }

	::Uml::Class ConnectorImplements::meta;
	::Uml::CompositionParentRole ConnectorImplements::meta_ConnectorImplementationContainer_parent;
	::Uml::AssociationRole ConnectorImplements::meta_srcConnectorImplements_end_;
	::Uml::AssociationRole ConnectorImplements::meta_dstConnectorImplements_end_;

	ConnectorImplementation::ConnectorImplementation() {}
	ConnectorImplementation::ConnectorImplementation(::Udm::ObjectImpl *impl) : MonolithicImplementationBase(impl), Implemenation(impl) {}
	ConnectorImplementation::ConnectorImplementation(const ConnectorImplementation &master) : MonolithicImplementationBase(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	ConnectorImplementation::ConnectorImplementation(ConnectorImplementation &&master) : MonolithicImplementationBase(master), Implemenation(master) {};

	ConnectorImplementation ConnectorImplementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorImplementation& ConnectorImplementation::operator=(ConnectorImplementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorImplementation ConnectorImplementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorImplementation ConnectorImplementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorImplementation ConnectorImplementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorImplementation> ConnectorImplementation::Instances() { return ::Udm::InstantiatedAttr< ConnectorImplementation>(impl); }
	ConnectorImplementation ConnectorImplementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorImplementation> ConnectorImplementation::Derived() { return ::Udm::DerivedAttr< ConnectorImplementation>(impl); }
	::Udm::ArchetypeAttr< ConnectorImplementation> ConnectorImplementation::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorImplementation>(impl); }
	::Udm::AClassPointerAttr< ConnectorImplements, ConnectorType> ConnectorImplementation::dstConnectorImplements() const { return ::Udm::AClassPointerAttr< ConnectorImplements, ConnectorType>(impl, meta_dstConnectorImplements, meta_dstConnectorImplements_rev); }
	::Udm::AssocAttr< ConnectorImplementationType> ConnectorImplementation::referedbyConnectorImplementationType() const { return ::Udm::AssocAttr< ConnectorImplementationType>(impl, meta_referedbyConnectorImplementationType); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplementation::ConnectorImplementationContainer_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, meta_ConnectorImplementationContainer_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplementation::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorImplementation::Accept(Visitor &v) { v.Visit_ConnectorImplementation(*this); }

	::Uml::Class ConnectorImplementation::meta;
	::Uml::AssociationRole ConnectorImplementation::meta_dstConnectorImplements;
	::Uml::AssociationRole ConnectorImplementation::meta_dstConnectorImplements_rev;
	::Uml::AssociationRole ConnectorImplementation::meta_referedbyConnectorImplementationType;
	::Uml::CompositionParentRole ConnectorImplementation::meta_ConnectorImplementationContainer_parent;

	ConnectorImplementationContainer::ConnectorImplementationContainer() {}
	ConnectorImplementationContainer::ConnectorImplementationContainer(::Udm::ObjectImpl *impl) : ImplementationContainer(impl) {}
	ConnectorImplementationContainer::ConnectorImplementationContainer(const ConnectorImplementationContainer &master) : ImplementationContainer(master) {}

#ifdef UDM_RVALUE
	ConnectorImplementationContainer::ConnectorImplementationContainer(ConnectorImplementationContainer &&master) : ImplementationContainer(master) {};

	ConnectorImplementationContainer ConnectorImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorImplementationContainer& ConnectorImplementationContainer::operator=(ConnectorImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorImplementationContainer ConnectorImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorImplementationContainer ConnectorImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorImplementationContainer ConnectorImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorImplementationContainer> ConnectorImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ConnectorImplementationContainer>(impl); }
	ConnectorImplementationContainer ConnectorImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorImplementationContainer> ConnectorImplementationContainer::Derived() { return ::Udm::DerivedAttr< ConnectorImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ConnectorImplementationContainer> ConnectorImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplements> ConnectorImplementationContainer::ConnectorImplements_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplements>(impl, meta_ConnectorImplements_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorType> ConnectorImplementationContainer::ConnectorType_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorType>(impl, meta_ConnectorType_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementation> ConnectorImplementationContainer::ConnectorImplementation_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementation>(impl, meta_ConnectorImplementation_children); }
	::Udm::ChildrenAttr< ::PICML::MonolithicImplementationBase> ConnectorImplementationContainer::MonolithicImplementationBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MonolithicImplementationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Implemenation> ConnectorImplementationContainer::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorType> ConnectorImplementationContainer::ConnectorType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplements> ConnectorImplementationContainer::ConnectorImplements_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementation> ConnectorImplementationContainer::ConnectorImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ConnectorImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementations> ConnectorImplementationContainer::ConnectorImplementations_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementations>(impl, meta_ConnectorImplementations_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorImplementations> ConnectorImplementationContainer::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorImplementations>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorImplementationContainer::Accept(Visitor &v) { v.Visit_ConnectorImplementationContainer(*this); }

	::Uml::Class ConnectorImplementationContainer::meta;
	::Uml::CompositionChildRole ConnectorImplementationContainer::meta_ConnectorImplements_children;
	::Uml::CompositionChildRole ConnectorImplementationContainer::meta_ConnectorType_children;
	::Uml::CompositionChildRole ConnectorImplementationContainer::meta_ConnectorImplementation_children;
	::Uml::CompositionParentRole ConnectorImplementationContainer::meta_ConnectorImplementations_parent;

	ConnectorImplementations::ConnectorImplementations() {}
	ConnectorImplementations::ConnectorImplementations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ConnectorImplementations::ConnectorImplementations(const ConnectorImplementations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ConnectorImplementations::ConnectorImplementations(ConnectorImplementations &&master) : UDM_OBJECT(master) {};

	ConnectorImplementations ConnectorImplementations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorImplementations& ConnectorImplementations::operator=(ConnectorImplementations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorImplementations ConnectorImplementations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorImplementations ConnectorImplementations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorImplementations ConnectorImplementations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorImplementations> ConnectorImplementations::Instances() { return ::Udm::InstantiatedAttr< ConnectorImplementations>(impl); }
	ConnectorImplementations ConnectorImplementations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorImplementations> ConnectorImplementations::Derived() { return ::Udm::DerivedAttr< ConnectorImplementations>(impl); }
	::Udm::ArchetypeAttr< ConnectorImplementations> ConnectorImplementations::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorImplementations>(impl); }
	::Udm::StringAttr ConnectorImplementations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplementations::ConnectorImplementationContainer_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementationContainer>(impl, meta_ConnectorImplementationContainer_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationContainer> ConnectorImplementations::ImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementationContainer> ConnectorImplementations::ConnectorImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ConnectorImplementations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> ConnectorImplementations::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> ConnectorImplementations::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorImplementations::Accept(Visitor &v) { v.Visit_ConnectorImplementations(*this); }

	::Uml::Class ConnectorImplementations::meta;
	::Uml::Attribute ConnectorImplementations::meta_name;
	::Uml::CompositionChildRole ConnectorImplementations::meta_ConnectorImplementationContainer_children;
	::Uml::CompositionParentRole ConnectorImplementations::meta_RootFolder_parent;

	ConnectorImplementationType::ConnectorImplementationType() {}
	ConnectorImplementationType::ConnectorImplementationType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorImplementationType::ConnectorImplementationType(const ConnectorImplementationType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorImplementationType::ConnectorImplementationType(ConnectorImplementationType &&master) : MgaObject(master) {};

	ConnectorImplementationType ConnectorImplementationType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorImplementationType& ConnectorImplementationType::operator=(ConnectorImplementationType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorImplementationType ConnectorImplementationType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorImplementationType ConnectorImplementationType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorImplementationType ConnectorImplementationType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorImplementationType> ConnectorImplementationType::Instances() { return ::Udm::InstantiatedAttr< ConnectorImplementationType>(impl); }
	ConnectorImplementationType ConnectorImplementationType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorImplementationType> ConnectorImplementationType::Derived() { return ::Udm::DerivedAttr< ConnectorImplementationType>(impl); }
	::Udm::ArchetypeAttr< ConnectorImplementationType> ConnectorImplementationType::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorImplementationType>(impl); }
	::Udm::PointerAttr< ConnectorImplementation> ConnectorImplementationType::ref() const { return ::Udm::PointerAttr< ConnectorImplementation>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ConnectorInstance> ConnectorImplementationType::ConnectorInstance_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorInstance>(impl, meta_ConnectorInstance_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorInstance> ConnectorImplementationType::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorInstance>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorImplementationType::Accept(Visitor &v) { v.Visit_ConnectorImplementationType(*this); }

	::Uml::Class ConnectorImplementationType::meta;
	::Uml::AssociationRole ConnectorImplementationType::meta_ref;
	::Uml::CompositionParentRole ConnectorImplementationType::meta_ConnectorInstance_parent;

	ConnectorInstance::ConnectorInstance() {}
	ConnectorInstance::ConnectorInstance(::Udm::ObjectImpl *impl) : AssemblyConfigPropertyEnd(impl) {}
	ConnectorInstance::ConnectorInstance(const ConnectorInstance &master) : AssemblyConfigPropertyEnd(master) {}

#ifdef UDM_RVALUE
	ConnectorInstance::ConnectorInstance(ConnectorInstance &&master) : AssemblyConfigPropertyEnd(master) {};

	ConnectorInstance ConnectorInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorInstance& ConnectorInstance::operator=(ConnectorInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorInstance ConnectorInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorInstance ConnectorInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorInstance ConnectorInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorInstance> ConnectorInstance::Instances() { return ::Udm::InstantiatedAttr< ConnectorInstance>(impl); }
	ConnectorInstance ConnectorInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorInstance> ConnectorInstance::Derived() { return ::Udm::DerivedAttr< ConnectorInstance>(impl); }
	::Udm::ArchetypeAttr< ConnectorInstance> ConnectorInstance::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorInstance>(impl); }
	::Udm::StringAttr ConnectorInstance::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassAssocAttr< ConnectorToReceptacle, RequiredRequestPortEnd> ConnectorInstance::srcConnectorToReceptacle() const { return ::Udm::AClassAssocAttr< ConnectorToReceptacle, RequiredRequestPortEnd>(impl, meta_srcConnectorToReceptacle, meta_srcConnectorToReceptacle_rev); }
	::Udm::AClassAssocAttr< Publish, ExtendPortEnd> ConnectorInstance::srcPublish() const { return ::Udm::AClassAssocAttr< Publish, ExtendPortEnd>(impl, meta_srcPublish, meta_srcPublish_rev); }
	::Udm::AClassAssocAttr< Consume, ExtendPortEnd> ConnectorInstance::dstConsume() const { return ::Udm::AClassAssocAttr< Consume, ExtendPortEnd>(impl, meta_dstConsume, meta_dstConsume_rev); }
	::Udm::AClassAssocAttr< ConnectorToFacet, ProvidedRequestPortEnd> ConnectorInstance::dstConnectorToFacet() const { return ::Udm::AClassAssocAttr< ConnectorToFacet, ProvidedRequestPortEnd>(impl, meta_dstConnectorToFacet, meta_dstConnectorToFacet_rev); }
	::Udm::ChildrenAttr< ::PICML::AttributeInstance> ConnectorInstance::AttributeInstance_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeInstance>(impl, meta_AttributeInstance_children); }
	::Udm::ChildAttr< ::PICML::ConnectorImplementationType> ConnectorInstance::ConnectorImplementationType_child() const { return ::Udm::ChildAttr< ::PICML::ConnectorImplementationType>(impl, meta_ConnectorImplementationType_child); }
	::Udm::ChildrenAttr< ::PICML::PortInstance> ConnectorInstance::PortInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PortInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::AttributeInstance> ConnectorInstance::AttributeInstance_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::AttributeInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementationType> ConnectorInstance::ConnectorImplementationType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementationType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ConnectorInstance::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorInstance::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::PICML::ComponentAssembly> ConnectorInstance::parent() const { return ::Udm::ParentAttr< ::PICML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorInstance::Accept(Visitor &v) { v.Visit_ConnectorInstance(*this); }

	::Uml::Class ConnectorInstance::meta;
	::Uml::Attribute ConnectorInstance::meta_UUID;
	::Uml::AssociationRole ConnectorInstance::meta_srcConnectorToReceptacle;
	::Uml::AssociationRole ConnectorInstance::meta_srcConnectorToReceptacle_rev;
	::Uml::AssociationRole ConnectorInstance::meta_srcPublish;
	::Uml::AssociationRole ConnectorInstance::meta_srcPublish_rev;
	::Uml::AssociationRole ConnectorInstance::meta_dstConsume;
	::Uml::AssociationRole ConnectorInstance::meta_dstConsume_rev;
	::Uml::AssociationRole ConnectorInstance::meta_dstConnectorToFacet;
	::Uml::AssociationRole ConnectorInstance::meta_dstConnectorToFacet_rev;
	::Uml::CompositionChildRole ConnectorInstance::meta_AttributeInstance_children;
	::Uml::CompositionChildRole ConnectorInstance::meta_ConnectorImplementationType_child;
	::Uml::CompositionParentRole ConnectorInstance::meta_ComponentAssembly_parent;

	ConnectorInherits::ConnectorInherits() {}
	ConnectorInherits::ConnectorInherits(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConnectorInherits::ConnectorInherits(const ConnectorInherits &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorInherits::ConnectorInherits(ConnectorInherits &&master) : MgaObject(master) {};

	ConnectorInherits ConnectorInherits::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorInherits& ConnectorInherits::operator=(ConnectorInherits &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorInherits ConnectorInherits::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorInherits ConnectorInherits::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorInherits ConnectorInherits::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorInherits> ConnectorInherits::Instances() { return ::Udm::InstantiatedAttr< ConnectorInherits>(impl); }
	ConnectorInherits ConnectorInherits::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorInherits> ConnectorInherits::Derived() { return ::Udm::DerivedAttr< ConnectorInherits>(impl); }
	::Udm::ArchetypeAttr< ConnectorInherits> ConnectorInherits::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorInherits>(impl); }
	::Udm::PointerAttr< ConnectorObject> ConnectorInherits::ref() const { return ::Udm::PointerAttr< ConnectorObject>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ConnectorInherits::ConnectorObject_parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, meta_ConnectorObject_parent); }
	::Udm::ParentAttr< ::PICML::ConnectorObject> ConnectorInherits::parent() const { return ::Udm::ParentAttr< ::PICML::ConnectorObject>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorInherits::Accept(Visitor &v) { v.Visit_ConnectorInherits(*this); }

	::Uml::Class ConnectorInherits::meta;
	::Uml::AssociationRole ConnectorInherits::meta_ref;
	::Uml::CompositionParentRole ConnectorInherits::meta_ConnectorObject_parent;

	ConnectorObject::ConnectorObject() {}
	ConnectorObject::ConnectorObject(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	ConnectorObject::ConnectorObject(const ConnectorObject &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectorObject::ConnectorObject(ConnectorObject &&master) : NamedType(master), MgaObject(master) {};

	ConnectorObject ConnectorObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectorObject& ConnectorObject::operator=(ConnectorObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectorObject ConnectorObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectorObject ConnectorObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectorObject ConnectorObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectorObject> ConnectorObject::Instances() { return ::Udm::InstantiatedAttr< ConnectorObject>(impl); }
	ConnectorObject ConnectorObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectorObject> ConnectorObject::Derived() { return ::Udm::DerivedAttr< ConnectorObject>(impl); }
	::Udm::ArchetypeAttr< ConnectorObject> ConnectorObject::Archetype() const { return ::Udm::ArchetypeAttr< ConnectorObject>(impl); }
	::Udm::StringAttr ConnectorObject::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AssocAttr< ConnectorType> ConnectorObject::referedbyConnectorType() const { return ::Udm::AssocAttr< ConnectorType>(impl, meta_referedbyConnectorType); }
	::Udm::AssocAttr< ConnectorInherits> ConnectorObject::referedbyConnectorInherits() const { return ::Udm::AssocAttr< ConnectorInherits>(impl, meta_referedbyConnectorInherits); }
	::Udm::ChildrenAttr< ::PICML::Collection> ConnectorObject::Collection_children() const { return ::Udm::ChildrenAttr< ::PICML::Collection>(impl, meta_Collection_children); }
	::Udm::ChildrenAttr< ::PICML::Aggregate> ConnectorObject::Aggregate_children() const { return ::Udm::ChildrenAttr< ::PICML::Aggregate>(impl, meta_Aggregate_children); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortBase> ConnectorObject::ExtendedPortBase_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortBase>(impl, meta_ExtendedPortBase_children); }
	::Udm::ChildAttr< ::PICML::ConnectorInherits> ConnectorObject::ConnectorInherits_child() const { return ::Udm::ChildAttr< ::PICML::ConnectorInherits>(impl, meta_ConnectorInherits_child); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> ConnectorObject::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> ConnectorObject::ObjectPort_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, meta_ObjectPort_children); }
	::Udm::ChildrenAttr< ::PICML::GraphVertex> ConnectorObject::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComplexType> ConnectorObject::ComplexType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Taggable> ConnectorObject::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Attribute> ConnectorObject::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute> ConnectorObject::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NoInheritable> ConnectorObject::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Collection> ConnectorObject::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::NamedType> ConnectorObject::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MemberType> ConnectorObject::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Aggregate> ConnectorObject::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType> ConnectorObject::TemplateParameterValueType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TemplateParameterValueType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Port> ConnectorObject::Port_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequiredRequestPort> ConnectorObject::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort> ConnectorObject::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPortBase> ConnectorObject::ExtendedPortBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPortBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MirrorPort> ConnectorObject::MirrorPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MirrorPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ExtendedPort> ConnectorObject::ExtendedPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ExtendedPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ObjectPort> ConnectorObject::ObjectPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ObjectPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CommonPortAttrs> ConnectorObject::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorInherits> ConnectorObject::ConnectorInherits_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorInherits>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ConnectorObject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::Prefixable> ConnectorObject::parent() const { return ::Udm::ParentAttr< ::PICML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectorObject::Accept(Visitor &v) { v.Visit_ConnectorObject(*this); }

	::Uml::Class ConnectorObject::meta;
	::Uml::Attribute ConnectorObject::meta_UUID;
	::Uml::AssociationRole ConnectorObject::meta_referedbyConnectorType;
	::Uml::AssociationRole ConnectorObject::meta_referedbyConnectorInherits;
	::Uml::CompositionChildRole ConnectorObject::meta_Collection_children;
	::Uml::CompositionChildRole ConnectorObject::meta_Aggregate_children;
	::Uml::CompositionChildRole ConnectorObject::meta_ExtendedPortBase_children;
	::Uml::CompositionChildRole ConnectorObject::meta_ConnectorInherits_child;
	::Uml::CompositionChildRole ConnectorObject::meta_ReadonlyAttribute_children;
	::Uml::CompositionChildRole ConnectorObject::meta_ObjectPort_children;

	EffectBase::EffectBase() {}
	EffectBase::EffectBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EffectBase::EffectBase(const EffectBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EffectBase::EffectBase(EffectBase &&master) : MgaObject(master) {};

	EffectBase EffectBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EffectBase& EffectBase::operator=(EffectBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EffectBase EffectBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EffectBase EffectBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EffectBase EffectBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EffectBase> EffectBase::Instances() { return ::Udm::InstantiatedAttr< EffectBase>(impl); }
	EffectBase EffectBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EffectBase> EffectBase::Derived() { return ::Udm::DerivedAttr< EffectBase>(impl); }
	::Udm::ArchetypeAttr< EffectBase> EffectBase::Archetype() const { return ::Udm::ArchetypeAttr< EffectBase>(impl); }
	::Udm::StringAttr EffectBase::Postcondition() const { return ::Udm::StringAttr(impl, meta_Postcondition); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> EffectBase::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class EffectBase::meta;
	::Uml::Attribute EffectBase::meta_Postcondition;

	TerminalEffect::TerminalEffect() {}
	TerminalEffect::TerminalEffect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	TerminalEffect::TerminalEffect(const TerminalEffect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	TerminalEffect::TerminalEffect(TerminalEffect &&master) : EffectBase(master) {};

	TerminalEffect TerminalEffect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TerminalEffect& TerminalEffect::operator=(TerminalEffect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TerminalEffect TerminalEffect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TerminalEffect TerminalEffect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TerminalEffect TerminalEffect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TerminalEffect> TerminalEffect::Instances() { return ::Udm::InstantiatedAttr< TerminalEffect>(impl); }
	TerminalEffect TerminalEffect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TerminalEffect> TerminalEffect::Derived() { return ::Udm::DerivedAttr< TerminalEffect>(impl); }
	::Udm::ArchetypeAttr< TerminalEffect> TerminalEffect::Archetype() const { return ::Udm::ArchetypeAttr< TerminalEffect>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> TerminalEffect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> TerminalEffect::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::Terminal> TerminalEffect::srcTerminalEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::Terminal>(impl, meta_srcTerminalEffect_end_); }
	::Udm::AssocEndAttr< ::PICML::StateBase> TerminalEffect::dstTerminalEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::StateBase>(impl, meta_dstTerminalEffect_end_); }
	void TerminalEffect::Accept(Visitor &v) { v.Visit_TerminalEffect(*this); }

	::Uml::Class TerminalEffect::meta;
	::Uml::CompositionParentRole TerminalEffect::meta_BehaviorModel_parent;
	::Uml::AssociationRole TerminalEffect::meta_srcTerminalEffect_end_;
	::Uml::AssociationRole TerminalEffect::meta_dstTerminalEffect_end_;

	InputEffect::InputEffect() {}
	InputEffect::InputEffect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	InputEffect::InputEffect(const InputEffect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	InputEffect::InputEffect(InputEffect &&master) : EffectBase(master) {};

	InputEffect InputEffect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InputEffect& InputEffect::operator=(InputEffect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InputEffect InputEffect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InputEffect InputEffect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InputEffect InputEffect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InputEffect> InputEffect::Instances() { return ::Udm::InstantiatedAttr< InputEffect>(impl); }
	InputEffect InputEffect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InputEffect> InputEffect::Derived() { return ::Udm::DerivedAttr< InputEffect>(impl); }
	::Udm::ArchetypeAttr< InputEffect> InputEffect::Archetype() const { return ::Udm::ArchetypeAttr< InputEffect>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> InputEffect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> InputEffect::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::BehaviorInputAction> InputEffect::srcInputEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::BehaviorInputAction>(impl, meta_srcInputEffect_end_); }
	::Udm::AssocEndAttr< ::PICML::StateBase> InputEffect::dstInputEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::StateBase>(impl, meta_dstInputEffect_end_); }
	void InputEffect::Accept(Visitor &v) { v.Visit_InputEffect(*this); }

	::Uml::Class InputEffect::meta;
	::Uml::CompositionParentRole InputEffect::meta_BehaviorModel_parent;
	::Uml::AssociationRole InputEffect::meta_srcInputEffect_end_;
	::Uml::AssociationRole InputEffect::meta_dstInputEffect_end_;

	Effect::Effect() {}
	Effect::Effect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	Effect::Effect(const Effect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	Effect::Effect(Effect &&master) : EffectBase(master) {};

	Effect Effect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Effect& Effect::operator=(Effect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Effect Effect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Effect Effect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Effect Effect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Effect> Effect::Instances() { return ::Udm::InstantiatedAttr< Effect>(impl); }
	Effect Effect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Effect> Effect::Derived() { return ::Udm::DerivedAttr< Effect>(impl); }
	::Udm::ArchetypeAttr< Effect> Effect::Archetype() const { return ::Udm::ArchetypeAttr< Effect>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Effect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Effect::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::ActionBase> Effect::srcEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::ActionBase>(impl, meta_srcEffect_end_); }
	::Udm::AssocEndAttr< ::PICML::StateBase> Effect::dstEffect_end() const { return ::Udm::AssocEndAttr< ::PICML::StateBase>(impl, meta_dstEffect_end_); }
	void Effect::Accept(Visitor &v) { v.Visit_Effect(*this); }

	::Uml::Class Effect::meta;
	::Uml::CompositionParentRole Effect::meta_BehaviorModel_parent;
	::Uml::AssociationRole Effect::meta_srcEffect_end_;
	::Uml::AssociationRole Effect::meta_dstEffect_end_;

	TerminalTransition::TerminalTransition() {}
	TerminalTransition::TerminalTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TerminalTransition::TerminalTransition(const TerminalTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TerminalTransition::TerminalTransition(TerminalTransition &&master) : MgaObject(master) {};

	TerminalTransition TerminalTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TerminalTransition& TerminalTransition::operator=(TerminalTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TerminalTransition TerminalTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TerminalTransition TerminalTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TerminalTransition TerminalTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TerminalTransition> TerminalTransition::Instances() { return ::Udm::InstantiatedAttr< TerminalTransition>(impl); }
	TerminalTransition TerminalTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TerminalTransition> TerminalTransition::Derived() { return ::Udm::DerivedAttr< TerminalTransition>(impl); }
	::Udm::ArchetypeAttr< TerminalTransition> TerminalTransition::Archetype() const { return ::Udm::ArchetypeAttr< TerminalTransition>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> TerminalTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> TerminalTransition::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::State> TerminalTransition::srcTerminalTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::State>(impl, meta_srcTerminalTransition_end_); }
	::Udm::AssocEndAttr< ::PICML::Terminal> TerminalTransition::dstTerminalTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::Terminal>(impl, meta_dstTerminalTransition_end_); }
	void TerminalTransition::Accept(Visitor &v) { v.Visit_TerminalTransition(*this); }

	::Uml::Class TerminalTransition::meta;
	::Uml::CompositionParentRole TerminalTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole TerminalTransition::meta_srcTerminalTransition_end_;
	::Uml::AssociationRole TerminalTransition::meta_dstTerminalTransition_end_;

	Terminal::Terminal() {}
	Terminal::Terminal(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Terminal::Terminal(const Terminal &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Terminal::Terminal(Terminal &&master) : MgaObject(master) {};

	Terminal Terminal::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Terminal& Terminal::operator=(Terminal &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Terminal Terminal::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Terminal Terminal::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Terminal Terminal::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Terminal> Terminal::Instances() { return ::Udm::InstantiatedAttr< Terminal>(impl); }
	Terminal Terminal::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Terminal> Terminal::Derived() { return ::Udm::DerivedAttr< Terminal>(impl); }
	::Udm::ArchetypeAttr< Terminal> Terminal::Archetype() const { return ::Udm::ArchetypeAttr< Terminal>(impl); }
	::Udm::AClassPointerAttr< TerminalEffect, StateBase> Terminal::dstTerminalEffect() const { return ::Udm::AClassPointerAttr< TerminalEffect, StateBase>(impl, meta_dstTerminalEffect, meta_dstTerminalEffect_rev); }
	::Udm::AClassAssocAttr< TerminalTransition, State> Terminal::srcTerminalTransition() const { return ::Udm::AClassAssocAttr< TerminalTransition, State>(impl, meta_srcTerminalTransition, meta_srcTerminalTransition_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Terminal::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Terminal::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void Terminal::Accept(Visitor &v) { v.Visit_Terminal(*this); }

	::Uml::Class Terminal::meta;
	::Uml::AssociationRole Terminal::meta_dstTerminalEffect;
	::Uml::AssociationRole Terminal::meta_dstTerminalEffect_rev;
	::Uml::AssociationRole Terminal::meta_srcTerminalTransition;
	::Uml::AssociationRole Terminal::meta_srcTerminalTransition_rev;
	::Uml::CompositionParentRole Terminal::meta_BehaviorModel_parent;

	LoopTransition::LoopTransition() {}
	LoopTransition::LoopTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LoopTransition::LoopTransition(const LoopTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LoopTransition::LoopTransition(LoopTransition &&master) : MgaObject(master) {};

	LoopTransition LoopTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LoopTransition& LoopTransition::operator=(LoopTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LoopTransition LoopTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LoopTransition LoopTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LoopTransition LoopTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LoopTransition> LoopTransition::Instances() { return ::Udm::InstantiatedAttr< LoopTransition>(impl); }
	LoopTransition LoopTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LoopTransition> LoopTransition::Derived() { return ::Udm::DerivedAttr< LoopTransition>(impl); }
	::Udm::ArchetypeAttr< LoopTransition> LoopTransition::Archetype() const { return ::Udm::ArchetypeAttr< LoopTransition>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> LoopTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> LoopTransition::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::LoopState> LoopTransition::srcLoopTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::LoopState>(impl, meta_srcLoopTransition_end_); }
	::Udm::AssocEndAttr< ::PICML::ActionBase> LoopTransition::dstLoopTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::ActionBase>(impl, meta_dstLoopTransition_end_); }
	void LoopTransition::Accept(Visitor &v) { v.Visit_LoopTransition(*this); }

	::Uml::Class LoopTransition::meta;
	::Uml::CompositionParentRole LoopTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole LoopTransition::meta_srcLoopTransition_end_;
	::Uml::AssociationRole LoopTransition::meta_dstLoopTransition_end_;

	WhileState::WhileState() {}
	WhileState::WhileState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	WhileState::WhileState(const WhileState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	WhileState::WhileState(WhileState &&master) : LoopState(master) {};

	WhileState WhileState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WhileState& WhileState::operator=(WhileState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WhileState WhileState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WhileState WhileState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WhileState WhileState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WhileState> WhileState::Instances() { return ::Udm::InstantiatedAttr< WhileState>(impl); }
	WhileState WhileState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WhileState> WhileState::Derived() { return ::Udm::DerivedAttr< WhileState>(impl); }
	::Udm::ArchetypeAttr< WhileState> WhileState::Archetype() const { return ::Udm::ArchetypeAttr< WhileState>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> WhileState::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void WhileState::Accept(Visitor &v) { v.Visit_WhileState(*this); }

	::Uml::Class WhileState::meta;

	DoWhileState::DoWhileState() {}
	DoWhileState::DoWhileState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	DoWhileState::DoWhileState(const DoWhileState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	DoWhileState::DoWhileState(DoWhileState &&master) : LoopState(master) {};

	DoWhileState DoWhileState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DoWhileState& DoWhileState::operator=(DoWhileState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DoWhileState DoWhileState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DoWhileState DoWhileState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DoWhileState DoWhileState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DoWhileState> DoWhileState::Instances() { return ::Udm::InstantiatedAttr< DoWhileState>(impl); }
	DoWhileState DoWhileState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DoWhileState> DoWhileState::Derived() { return ::Udm::DerivedAttr< DoWhileState>(impl); }
	::Udm::ArchetypeAttr< DoWhileState> DoWhileState::Archetype() const { return ::Udm::ArchetypeAttr< DoWhileState>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> DoWhileState::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void DoWhileState::Accept(Visitor &v) { v.Visit_DoWhileState(*this); }

	::Uml::Class DoWhileState::meta;

	ForState::ForState() {}
	ForState::ForState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	ForState::ForState(const ForState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	ForState::ForState(ForState &&master) : LoopState(master) {};

	ForState ForState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ForState& ForState::operator=(ForState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ForState ForState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ForState ForState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ForState ForState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ForState> ForState::Instances() { return ::Udm::InstantiatedAttr< ForState>(impl); }
	ForState ForState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ForState> ForState::Derived() { return ::Udm::DerivedAttr< ForState>(impl); }
	::Udm::ArchetypeAttr< ForState> ForState::Archetype() const { return ::Udm::ArchetypeAttr< ForState>(impl); }
	::Udm::StringAttr ForState::InitialCondition() const { return ::Udm::StringAttr(impl, meta_InitialCondition); }
	::Udm::StringAttr ForState::IncrementExpr() const { return ::Udm::StringAttr(impl, meta_IncrementExpr); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> ForState::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void ForState::Accept(Visitor &v) { v.Visit_ForState(*this); }

	::Uml::Class ForState::meta;
	::Uml::Attribute ForState::meta_InitialCondition;
	::Uml::Attribute ForState::meta_IncrementExpr;

	LoopState::LoopState() {}
	LoopState::LoopState(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	LoopState::LoopState(const LoopState &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	LoopState::LoopState(LoopState &&master) : StateBase(master) {};

	LoopState LoopState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LoopState& LoopState::operator=(LoopState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LoopState LoopState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LoopState LoopState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LoopState LoopState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LoopState> LoopState::Instances() { return ::Udm::InstantiatedAttr< LoopState>(impl); }
	LoopState LoopState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LoopState> LoopState::Derived() { return ::Udm::DerivedAttr< LoopState>(impl); }
	::Udm::ArchetypeAttr< LoopState> LoopState::Archetype() const { return ::Udm::ArchetypeAttr< LoopState>(impl); }
	::Udm::StringAttr LoopState::LoopingCondition() const { return ::Udm::StringAttr(impl, meta_LoopingCondition); }
	::Udm::AClassPointerAttr< LoopTransition, ActionBase> LoopState::dstLoopTransition() const { return ::Udm::AClassPointerAttr< LoopTransition, ActionBase>(impl, meta_dstLoopTransition, meta_dstLoopTransition_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> LoopState::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class LoopState::meta;
	::Uml::Attribute LoopState::meta_LoopingCondition;
	::Uml::AssociationRole LoopState::meta_dstLoopTransition;
	::Uml::AssociationRole LoopState::meta_dstLoopTransition_rev;

	StateBase::StateBase() {}
	StateBase::StateBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	StateBase::StateBase(const StateBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	StateBase::StateBase(StateBase &&master) : MgaObject(master) {};

	StateBase StateBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	StateBase& StateBase::operator=(StateBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	StateBase StateBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	StateBase StateBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	StateBase StateBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< StateBase> StateBase::Instances() { return ::Udm::InstantiatedAttr< StateBase>(impl); }
	StateBase StateBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< StateBase> StateBase::Derived() { return ::Udm::DerivedAttr< StateBase>(impl); }
	::Udm::ArchetypeAttr< StateBase> StateBase::Archetype() const { return ::Udm::ArchetypeAttr< StateBase>(impl); }
	::Udm::AClassPointerAttr< TerminalEffect, Terminal> StateBase::srcTerminalEffect() const { return ::Udm::AClassPointerAttr< TerminalEffect, Terminal>(impl, meta_srcTerminalEffect, meta_srcTerminalEffect_rev); }
	::Udm::AClassAssocAttr< Finish, BehaviorInputAction> StateBase::dstFinish() const { return ::Udm::AClassAssocAttr< Finish, BehaviorInputAction>(impl, meta_dstFinish, meta_dstFinish_rev); }
	::Udm::AClassAssocAttr< Effect, ActionBase> StateBase::srcEffect() const { return ::Udm::AClassAssocAttr< Effect, ActionBase>(impl, meta_srcEffect, meta_srcEffect_rev); }
	::Udm::AClassAssocAttr< InputEffect, BehaviorInputAction> StateBase::srcInputEffect() const { return ::Udm::AClassAssocAttr< InputEffect, BehaviorInputAction>(impl, meta_srcInputEffect, meta_srcInputEffect_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> StateBase::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> StateBase::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class StateBase::meta;
	::Uml::AssociationRole StateBase::meta_srcTerminalEffect;
	::Uml::AssociationRole StateBase::meta_srcTerminalEffect_rev;
	::Uml::AssociationRole StateBase::meta_dstFinish;
	::Uml::AssociationRole StateBase::meta_dstFinish_rev;
	::Uml::AssociationRole StateBase::meta_srcEffect;
	::Uml::AssociationRole StateBase::meta_srcEffect_rev;
	::Uml::AssociationRole StateBase::meta_srcInputEffect;
	::Uml::AssociationRole StateBase::meta_srcInputEffect_rev;
	::Uml::CompositionParentRole StateBase::meta_BehaviorModel_parent;

	BranchTransition::BranchTransition() {}
	BranchTransition::BranchTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BranchTransition::BranchTransition(const BranchTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BranchTransition::BranchTransition(BranchTransition &&master) : MgaObject(master) {};

	BranchTransition BranchTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BranchTransition& BranchTransition::operator=(BranchTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BranchTransition BranchTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BranchTransition BranchTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BranchTransition BranchTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BranchTransition> BranchTransition::Instances() { return ::Udm::InstantiatedAttr< BranchTransition>(impl); }
	BranchTransition BranchTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BranchTransition> BranchTransition::Derived() { return ::Udm::DerivedAttr< BranchTransition>(impl); }
	::Udm::ArchetypeAttr< BranchTransition> BranchTransition::Archetype() const { return ::Udm::ArchetypeAttr< BranchTransition>(impl); }
	::Udm::StringAttr BranchTransition::Condition() const { return ::Udm::StringAttr(impl, meta_Condition); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> BranchTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> BranchTransition::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::BranchState> BranchTransition::srcBranchTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::BranchState>(impl, meta_srcBranchTransition_end_); }
	::Udm::AssocEndAttr< ::PICML::ActionBase> BranchTransition::dstBranchTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::ActionBase>(impl, meta_dstBranchTransition_end_); }
	void BranchTransition::Accept(Visitor &v) { v.Visit_BranchTransition(*this); }

	::Uml::Class BranchTransition::meta;
	::Uml::Attribute BranchTransition::meta_Condition;
	::Uml::CompositionParentRole BranchTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole BranchTransition::meta_srcBranchTransition_end_;
	::Uml::AssociationRole BranchTransition::meta_dstBranchTransition_end_;

	BranchState::BranchState() {}
	BranchState::BranchState(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	BranchState::BranchState(const BranchState &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	BranchState::BranchState(BranchState &&master) : StateBase(master) {};

	BranchState BranchState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BranchState& BranchState::operator=(BranchState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BranchState BranchState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BranchState BranchState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BranchState BranchState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BranchState> BranchState::Instances() { return ::Udm::InstantiatedAttr< BranchState>(impl); }
	BranchState BranchState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BranchState> BranchState::Derived() { return ::Udm::DerivedAttr< BranchState>(impl); }
	::Udm::ArchetypeAttr< BranchState> BranchState::Archetype() const { return ::Udm::ArchetypeAttr< BranchState>(impl); }
	::Udm::AClassAssocAttr< BranchTransition, ActionBase> BranchState::dstBranchTransition() const { return ::Udm::AClassAssocAttr< BranchTransition, ActionBase>(impl, meta_dstBranchTransition, meta_dstBranchTransition_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> BranchState::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void BranchState::Accept(Visitor &v) { v.Visit_BranchState(*this); }

	::Uml::Class BranchState::meta;
	::Uml::AssociationRole BranchState::meta_dstBranchTransition;
	::Uml::AssociationRole BranchState::meta_dstBranchTransition_rev;

	State::State() {}
	State::State(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	State::State(const State &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	State::State(State &&master) : StateBase(master) {};

	State State::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	State& State::operator=(State &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	State State::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	State State::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	State State::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< State> State::Instances() { return ::Udm::InstantiatedAttr< State>(impl); }
	State State::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< State> State::Derived() { return ::Udm::DerivedAttr< State>(impl); }
	::Udm::ArchetypeAttr< State> State::Archetype() const { return ::Udm::ArchetypeAttr< State>(impl); }
	::Udm::AClassPointerAttr< Transition, ActionBase> State::dstTransition() const { return ::Udm::AClassPointerAttr< Transition, ActionBase>(impl, meta_dstTransition, meta_dstTransition_rev); }
	::Udm::AClassPointerAttr< TerminalTransition, Terminal> State::dstTerminalTransition() const { return ::Udm::AClassPointerAttr< TerminalTransition, Terminal>(impl, meta_dstTerminalTransition, meta_dstTerminalTransition_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> State::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void State::Accept(Visitor &v) { v.Visit_State(*this); }

	::Uml::Class State::meta;
	::Uml::AssociationRole State::meta_dstTransition;
	::Uml::AssociationRole State::meta_dstTransition_rev;
	::Uml::AssociationRole State::meta_dstTerminalTransition;
	::Uml::AssociationRole State::meta_dstTerminalTransition_rev;

	Transition::Transition() {}
	Transition::Transition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Transition::Transition(const Transition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Transition::Transition(Transition &&master) : MgaObject(master) {};

	Transition Transition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Transition& Transition::operator=(Transition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Transition Transition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Transition Transition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Transition Transition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Transition> Transition::Instances() { return ::Udm::InstantiatedAttr< Transition>(impl); }
	Transition Transition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Transition> Transition::Derived() { return ::Udm::DerivedAttr< Transition>(impl); }
	::Udm::ArchetypeAttr< Transition> Transition::Archetype() const { return ::Udm::ArchetypeAttr< Transition>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Transition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Transition::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::State> Transition::srcTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::State>(impl, meta_srcTransition_end_); }
	::Udm::AssocEndAttr< ::PICML::ActionBase> Transition::dstTransition_end() const { return ::Udm::AssocEndAttr< ::PICML::ActionBase>(impl, meta_dstTransition_end_); }
	void Transition::Accept(Visitor &v) { v.Visit_Transition(*this); }

	::Uml::Class Transition::meta;
	::Uml::CompositionParentRole Transition::meta_BehaviorModel_parent;
	::Uml::AssociationRole Transition::meta_srcTransition_end_;
	::Uml::AssociationRole Transition::meta_dstTransition_end_;

	TargetRequiredRequestPort::TargetRequiredRequestPort() {}
	TargetRequiredRequestPort::TargetRequiredRequestPort(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TargetRequiredRequestPort::TargetRequiredRequestPort(const TargetRequiredRequestPort &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TargetRequiredRequestPort::TargetRequiredRequestPort(TargetRequiredRequestPort &&master) : MgaObject(master) {};

	TargetRequiredRequestPort TargetRequiredRequestPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TargetRequiredRequestPort& TargetRequiredRequestPort::operator=(TargetRequiredRequestPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TargetRequiredRequestPort TargetRequiredRequestPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TargetRequiredRequestPort TargetRequiredRequestPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TargetRequiredRequestPort TargetRequiredRequestPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TargetRequiredRequestPort> TargetRequiredRequestPort::Instances() { return ::Udm::InstantiatedAttr< TargetRequiredRequestPort>(impl); }
	TargetRequiredRequestPort TargetRequiredRequestPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TargetRequiredRequestPort> TargetRequiredRequestPort::Derived() { return ::Udm::DerivedAttr< TargetRequiredRequestPort>(impl); }
	::Udm::ArchetypeAttr< TargetRequiredRequestPort> TargetRequiredRequestPort::Archetype() const { return ::Udm::ArchetypeAttr< TargetRequiredRequestPort>(impl); }
	::Udm::PointerAttr< RequiredRequestPort> TargetRequiredRequestPort::ref() const { return ::Udm::PointerAttr< RequiredRequestPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::CallAction> TargetRequiredRequestPort::CallAction_parent() const { return ::Udm::ParentAttr< ::PICML::CallAction>(impl, meta_CallAction_parent); }
	::Udm::ParentAttr< ::PICML::CallAction> TargetRequiredRequestPort::parent() const { return ::Udm::ParentAttr< ::PICML::CallAction>(impl, ::Udm::NULLPARENTROLE); }
	void TargetRequiredRequestPort::Accept(Visitor &v) { v.Visit_TargetRequiredRequestPort(*this); }

	::Uml::Class TargetRequiredRequestPort::meta;
	::Uml::AssociationRole TargetRequiredRequestPort::meta_ref;
	::Uml::CompositionParentRole TargetRequiredRequestPort::meta_CallAction_parent;

	CallAction::CallAction() {}
	CallAction::CallAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	CallAction::CallAction(const CallAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	CallAction::CallAction(CallAction &&master) : ActionBase(master) {};

	CallAction CallAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CallAction& CallAction::operator=(CallAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CallAction CallAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CallAction CallAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CallAction CallAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CallAction> CallAction::Instances() { return ::Udm::InstantiatedAttr< CallAction>(impl); }
	CallAction CallAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CallAction> CallAction::Derived() { return ::Udm::DerivedAttr< CallAction>(impl); }
	::Udm::ArchetypeAttr< CallAction> CallAction::Archetype() const { return ::Udm::ArchetypeAttr< CallAction>(impl); }
	::Udm::ChildAttr< ::PICML::TargetRequiredRequestPort> CallAction::TargetRequiredRequestPort_child() const { return ::Udm::ChildAttr< ::PICML::TargetRequiredRequestPort>(impl, meta_TargetRequiredRequestPort_child); }
	::Udm::ChildrenAttr< ::PICML::TargetRequiredRequestPort> CallAction::TargetRequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TargetRequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> CallAction::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> CallAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void CallAction::Accept(Visitor &v) { v.Visit_CallAction(*this); }

	::Uml::Class CallAction::meta;
	::Uml::CompositionChildRole CallAction::meta_TargetRequiredRequestPort_child;

	ActionType::ActionType() {}
	ActionType::ActionType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ActionType::ActionType(const ActionType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ActionType::ActionType(ActionType &&master) : MgaObject(master) {};

	ActionType ActionType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ActionType& ActionType::operator=(ActionType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ActionType ActionType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ActionType ActionType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ActionType ActionType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ActionType> ActionType::Instances() { return ::Udm::InstantiatedAttr< ActionType>(impl); }
	ActionType ActionType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ActionType> ActionType::Derived() { return ::Udm::DerivedAttr< ActionType>(impl); }
	::Udm::ArchetypeAttr< ActionType> ActionType::Archetype() const { return ::Udm::ArchetypeAttr< ActionType>(impl); }
	::Udm::PointerAttr< Operation> ActionType::ref() const { return ::Udm::PointerAttr< Operation>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::Action> ActionType::Action_parent() const { return ::Udm::ParentAttr< ::PICML::Action>(impl, meta_Action_parent); }
	::Udm::ParentAttr< ::PICML::Action> ActionType::parent() const { return ::Udm::ParentAttr< ::PICML::Action>(impl, ::Udm::NULLPARENTROLE); }
	void ActionType::Accept(Visitor &v) { v.Visit_ActionType(*this); }

	::Uml::Class ActionType::meta;
	::Uml::AssociationRole ActionType::meta_ref;
	::Uml::CompositionParentRole ActionType::meta_Action_parent;

	RequestAction::RequestAction() {}
	RequestAction::RequestAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	RequestAction::RequestAction(const RequestAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	RequestAction::RequestAction(RequestAction &&master) : ActionBase(master) {};

	RequestAction RequestAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequestAction& RequestAction::operator=(RequestAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequestAction RequestAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequestAction RequestAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequestAction RequestAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequestAction> RequestAction::Instances() { return ::Udm::InstantiatedAttr< RequestAction>(impl); }
	RequestAction RequestAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequestAction> RequestAction::Derived() { return ::Udm::DerivedAttr< RequestAction>(impl); }
	::Udm::ArchetypeAttr< RequestAction> RequestAction::Archetype() const { return ::Udm::ArchetypeAttr< RequestAction>(impl); }
	::Udm::StringAttr RequestAction::MethodName() const { return ::Udm::StringAttr(impl, meta_MethodName); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> RequestAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void RequestAction::Accept(Visitor &v) { v.Visit_RequestAction(*this); }

	::Uml::Class RequestAction::meta;
	::Uml::Attribute RequestAction::meta_MethodName;

	InputAction::InputAction() {}
	InputAction::InputAction(::Udm::ObjectImpl *impl) : BehaviorInputAction(impl) {}
	InputAction::InputAction(const InputAction &master) : BehaviorInputAction(master) {}

#ifdef UDM_RVALUE
	InputAction::InputAction(InputAction &&master) : BehaviorInputAction(master) {};

	InputAction InputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InputAction& InputAction::operator=(InputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InputAction InputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InputAction InputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InputAction InputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InputAction> InputAction::Instances() { return ::Udm::InstantiatedAttr< InputAction>(impl); }
	InputAction InputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InputAction> InputAction::Derived() { return ::Udm::DerivedAttr< InputAction>(impl); }
	::Udm::ArchetypeAttr< InputAction> InputAction::Archetype() const { return ::Udm::ArchetypeAttr< InputAction>(impl); }
	::Udm::AClassPointerAttr< Input, SingleInputBase> InputAction::srcInput() const { return ::Udm::AClassPointerAttr< Input, SingleInputBase>(impl, meta_srcInput, meta_srcInput_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> InputAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void InputAction::Accept(Visitor &v) { v.Visit_InputAction(*this); }

	::Uml::Class InputAction::meta;
	::Uml::AssociationRole InputAction::meta_srcInput;
	::Uml::AssociationRole InputAction::meta_srcInput_rev;

	QueryInputAction::QueryInputAction() {}
	QueryInputAction::QueryInputAction(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInputAction::QueryInputAction(const QueryInputAction &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInputAction::QueryInputAction(QueryInputAction &&master) : MgaObject(master) {};

	QueryInputAction QueryInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInputAction& QueryInputAction::operator=(QueryInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInputAction QueryInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInputAction QueryInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInputAction QueryInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInputAction> QueryInputAction::Instances() { return ::Udm::InstantiatedAttr< QueryInputAction>(impl); }
	QueryInputAction QueryInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInputAction> QueryInputAction::Derived() { return ::Udm::DerivedAttr< QueryInputAction>(impl); }
	::Udm::ArchetypeAttr< QueryInputAction> QueryInputAction::Archetype() const { return ::Udm::ArchetypeAttr< QueryInputAction>(impl); }
	::Udm::AClassPointerAttr< QueryInput, QueryInputBase> QueryInputAction::srcQueryInput() const { return ::Udm::AClassPointerAttr< QueryInput, QueryInputBase>(impl, meta_srcQueryInput, meta_srcQueryInput_rev); }
	::Udm::ChildrenAttr< ::PICML::Property> QueryInputAction::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> QueryInputAction::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> QueryInputAction::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> QueryInputAction::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> QueryInputAction::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> QueryInputAction::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> QueryInputAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void QueryInputAction::Accept(Visitor &v) { v.Visit_QueryInputAction(*this); }

	::Uml::Class QueryInputAction::meta;
	::Uml::AssociationRole QueryInputAction::meta_srcQueryInput;
	::Uml::AssociationRole QueryInputAction::meta_srcQueryInput_rev;
	::Uml::CompositionChildRole QueryInputAction::meta_Property_children;
	::Uml::CompositionParentRole QueryInputAction::meta_BehaviorModel_parent;

	MultiInputAction::MultiInputAction() {}
	MultiInputAction::MultiInputAction(::Udm::ObjectImpl *impl) : BehaviorInputAction(impl) {}
	MultiInputAction::MultiInputAction(const MultiInputAction &master) : BehaviorInputAction(master) {}

#ifdef UDM_RVALUE
	MultiInputAction::MultiInputAction(MultiInputAction &&master) : BehaviorInputAction(master) {};

	MultiInputAction MultiInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInputAction& MultiInputAction::operator=(MultiInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInputAction MultiInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInputAction MultiInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInputAction MultiInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInputAction> MultiInputAction::Instances() { return ::Udm::InstantiatedAttr< MultiInputAction>(impl); }
	MultiInputAction MultiInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInputAction> MultiInputAction::Derived() { return ::Udm::DerivedAttr< MultiInputAction>(impl); }
	::Udm::ArchetypeAttr< MultiInputAction> MultiInputAction::Archetype() const { return ::Udm::ArchetypeAttr< MultiInputAction>(impl); }
	::Udm::AClassPointerAttr< MultiInput, MultiInputBase> MultiInputAction::srcMultiInput() const { return ::Udm::AClassPointerAttr< MultiInput, MultiInputBase>(impl, meta_srcMultiInput, meta_srcMultiInput_rev); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> MultiInputAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void MultiInputAction::Accept(Visitor &v) { v.Visit_MultiInputAction(*this); }

	::Uml::Class MultiInputAction::meta;
	::Uml::AssociationRole MultiInputAction::meta_srcMultiInput;
	::Uml::AssociationRole MultiInputAction::meta_srcMultiInput_rev;

	QueryAction::QueryAction() {}
	QueryAction::QueryAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	QueryAction::QueryAction(const QueryAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	QueryAction::QueryAction(QueryAction &&master) : ActionBase(master) {};

	QueryAction QueryAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryAction& QueryAction::operator=(QueryAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryAction QueryAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryAction QueryAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryAction QueryAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryAction> QueryAction::Instances() { return ::Udm::InstantiatedAttr< QueryAction>(impl); }
	QueryAction QueryAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryAction> QueryAction::Derived() { return ::Udm::DerivedAttr< QueryAction>(impl); }
	::Udm::ArchetypeAttr< QueryAction> QueryAction::Archetype() const { return ::Udm::ArchetypeAttr< QueryAction>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> QueryAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void QueryAction::Accept(Visitor &v) { v.Visit_QueryAction(*this); }

	::Uml::Class QueryAction::meta;

	ActionBase::ActionBase() {}
	ActionBase::ActionBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ActionBase::ActionBase(const ActionBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ActionBase::ActionBase(ActionBase &&master) : MgaObject(master) {};

	ActionBase ActionBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ActionBase& ActionBase::operator=(ActionBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ActionBase ActionBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ActionBase ActionBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ActionBase ActionBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ActionBase> ActionBase::Instances() { return ::Udm::InstantiatedAttr< ActionBase>(impl); }
	ActionBase ActionBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ActionBase> ActionBase::Derived() { return ::Udm::DerivedAttr< ActionBase>(impl); }
	::Udm::ArchetypeAttr< ActionBase> ActionBase::Archetype() const { return ::Udm::ArchetypeAttr< ActionBase>(impl); }
	::Udm::IntegerAttr ActionBase::Duration() const { return ::Udm::IntegerAttr(impl, meta_Duration); }
	::Udm::AClassPointerAttr< LoopTransition, LoopState> ActionBase::srcLoopTransition() const { return ::Udm::AClassPointerAttr< LoopTransition, LoopState>(impl, meta_srcLoopTransition, meta_srcLoopTransition_rev); }
	::Udm::AClassPointerAttr< BranchTransition, BranchState> ActionBase::srcBranchTransition() const { return ::Udm::AClassPointerAttr< BranchTransition, BranchState>(impl, meta_srcBranchTransition, meta_srcBranchTransition_rev); }
	::Udm::AClassPointerAttr< Transition, State> ActionBase::srcTransition() const { return ::Udm::AClassPointerAttr< Transition, State>(impl, meta_srcTransition, meta_srcTransition_rev); }
	::Udm::AClassPointerAttr< Effect, StateBase> ActionBase::dstEffect() const { return ::Udm::AClassPointerAttr< Effect, StateBase>(impl, meta_dstEffect, meta_dstEffect_rev); }
	::Udm::ChildrenAttr< ::PICML::Property> ActionBase::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> ActionBase::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> ActionBase::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> ActionBase::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> ActionBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> ActionBase::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> ActionBase::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ActionBase::meta;
	::Uml::Attribute ActionBase::meta_Duration;
	::Uml::AssociationRole ActionBase::meta_srcLoopTransition;
	::Uml::AssociationRole ActionBase::meta_srcLoopTransition_rev;
	::Uml::AssociationRole ActionBase::meta_srcBranchTransition;
	::Uml::AssociationRole ActionBase::meta_srcBranchTransition_rev;
	::Uml::AssociationRole ActionBase::meta_srcTransition;
	::Uml::AssociationRole ActionBase::meta_srcTransition_rev;
	::Uml::AssociationRole ActionBase::meta_dstEffect;
	::Uml::AssociationRole ActionBase::meta_dstEffect_rev;
	::Uml::CompositionChildRole ActionBase::meta_Property_children;
	::Uml::CompositionParentRole ActionBase::meta_BehaviorModel_parent;

	Finish::Finish() {}
	Finish::Finish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Finish::Finish(const Finish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Finish::Finish(Finish &&master) : MgaObject(master) {};

	Finish Finish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Finish& Finish::operator=(Finish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Finish Finish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Finish Finish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Finish Finish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Finish> Finish::Instances() { return ::Udm::InstantiatedAttr< Finish>(impl); }
	Finish Finish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Finish> Finish::Derived() { return ::Udm::DerivedAttr< Finish>(impl); }
	::Udm::ArchetypeAttr< Finish> Finish::Archetype() const { return ::Udm::ArchetypeAttr< Finish>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Finish::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Finish::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::StateBase> Finish::srcFinish_end() const { return ::Udm::AssocEndAttr< ::PICML::StateBase>(impl, meta_srcFinish_end_); }
	::Udm::AssocEndAttr< ::PICML::BehaviorInputAction> Finish::dstFinish_end() const { return ::Udm::AssocEndAttr< ::PICML::BehaviorInputAction>(impl, meta_dstFinish_end_); }
	void Finish::Accept(Visitor &v) { v.Visit_Finish(*this); }

	::Uml::Class Finish::meta;
	::Uml::CompositionParentRole Finish::meta_BehaviorModel_parent;
	::Uml::AssociationRole Finish::meta_srcFinish_end_;
	::Uml::AssociationRole Finish::meta_dstFinish_end_;

	OutputAction::OutputAction() {}
	OutputAction::OutputAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	OutputAction::OutputAction(const OutputAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	OutputAction::OutputAction(OutputAction &&master) : ActionBase(master) {};

	OutputAction OutputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutputAction& OutputAction::operator=(OutputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutputAction OutputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutputAction OutputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutputAction OutputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutputAction> OutputAction::Instances() { return ::Udm::InstantiatedAttr< OutputAction>(impl); }
	OutputAction OutputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutputAction> OutputAction::Derived() { return ::Udm::DerivedAttr< OutputAction>(impl); }
	::Udm::ArchetypeAttr< OutputAction> OutputAction::Archetype() const { return ::Udm::ArchetypeAttr< OutputAction>(impl); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> OutputAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void OutputAction::Accept(Visitor &v) { v.Visit_OutputAction(*this); }

	::Uml::Class OutputAction::meta;

	Action::Action() {}
	Action::Action(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	Action::Action(const Action &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	Action::Action(Action &&master) : ActionBase(master) {};

	Action Action::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Action& Action::operator=(Action &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Action Action::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Action Action::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Action Action::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Action> Action::Instances() { return ::Udm::InstantiatedAttr< Action>(impl); }
	Action Action::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Action> Action::Derived() { return ::Udm::DerivedAttr< Action>(impl); }
	::Udm::ArchetypeAttr< Action> Action::Archetype() const { return ::Udm::ArchetypeAttr< Action>(impl); }
	::Udm::ChildAttr< ::PICML::ActionType> Action::ActionType_child() const { return ::Udm::ChildAttr< ::PICML::ActionType>(impl, meta_ActionType_child); }
	::Udm::ChildrenAttr< ::PICML::ActionType> Action::ActionType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ActionType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> Action::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Action::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void Action::Accept(Visitor &v) { v.Visit_Action(*this); }

	::Uml::Class Action::meta;
	::Uml::CompositionChildRole Action::meta_ActionType_child;

	BehaviorInputAction::BehaviorInputAction() {}
	BehaviorInputAction::BehaviorInputAction(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BehaviorInputAction::BehaviorInputAction(const BehaviorInputAction &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BehaviorInputAction::BehaviorInputAction(BehaviorInputAction &&master) : MgaObject(master) {};

	BehaviorInputAction BehaviorInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BehaviorInputAction& BehaviorInputAction::operator=(BehaviorInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BehaviorInputAction BehaviorInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BehaviorInputAction BehaviorInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BehaviorInputAction BehaviorInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BehaviorInputAction> BehaviorInputAction::Instances() { return ::Udm::InstantiatedAttr< BehaviorInputAction>(impl); }
	BehaviorInputAction BehaviorInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BehaviorInputAction> BehaviorInputAction::Derived() { return ::Udm::DerivedAttr< BehaviorInputAction>(impl); }
	::Udm::ArchetypeAttr< BehaviorInputAction> BehaviorInputAction::Archetype() const { return ::Udm::ArchetypeAttr< BehaviorInputAction>(impl); }
	::Udm::AClassPointerAttr< Finish, StateBase> BehaviorInputAction::srcFinish() const { return ::Udm::AClassPointerAttr< Finish, StateBase>(impl, meta_srcFinish, meta_srcFinish_rev); }
	::Udm::AClassPointerAttr< InputEffect, StateBase> BehaviorInputAction::dstInputEffect() const { return ::Udm::AClassPointerAttr< InputEffect, StateBase>(impl, meta_dstInputEffect, meta_dstInputEffect_rev); }
	::Udm::ChildrenAttr< ::PICML::Property> BehaviorInputAction::Property_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::PICML::ComplexProperty> BehaviorInputAction::ComplexProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComplexProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SimpleProperty> BehaviorInputAction::SimpleProperty_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SimpleProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Property> BehaviorInputAction::Property_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> BehaviorInputAction::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> BehaviorInputAction::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> BehaviorInputAction::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BehaviorInputAction::meta;
	::Uml::AssociationRole BehaviorInputAction::meta_srcFinish;
	::Uml::AssociationRole BehaviorInputAction::meta_srcFinish_rev;
	::Uml::AssociationRole BehaviorInputAction::meta_dstInputEffect;
	::Uml::AssociationRole BehaviorInputAction::meta_dstInputEffect_rev;
	::Uml::CompositionChildRole BehaviorInputAction::meta_Property_children;
	::Uml::CompositionParentRole BehaviorInputAction::meta_BehaviorModel_parent;

	BehaviorModel::BehaviorModel() {}
	BehaviorModel::BehaviorModel(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BehaviorModel::BehaviorModel(const BehaviorModel &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BehaviorModel::BehaviorModel(BehaviorModel &&master) : MgaObject(master) {};

	BehaviorModel BehaviorModel::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BehaviorModel& BehaviorModel::operator=(BehaviorModel &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BehaviorModel BehaviorModel::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BehaviorModel BehaviorModel::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BehaviorModel BehaviorModel::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BehaviorModel> BehaviorModel::Instances() { return ::Udm::InstantiatedAttr< BehaviorModel>(impl); }
	BehaviorModel BehaviorModel::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BehaviorModel> BehaviorModel::Derived() { return ::Udm::DerivedAttr< BehaviorModel>(impl); }
	::Udm::ArchetypeAttr< BehaviorModel> BehaviorModel::Archetype() const { return ::Udm::ArchetypeAttr< BehaviorModel>(impl); }
	::Udm::ChildrenAttr< ::PICML::Variable> BehaviorModel::Variable_children() const { return ::Udm::ChildrenAttr< ::PICML::Variable>(impl, meta_Variable_children); }
	::Udm::ChildrenAttr< ::PICML::LoopTransition> BehaviorModel::LoopTransition_children() const { return ::Udm::ChildrenAttr< ::PICML::LoopTransition>(impl, meta_LoopTransition_children); }
	::Udm::ChildrenAttr< ::PICML::Transition> BehaviorModel::Transition_children() const { return ::Udm::ChildrenAttr< ::PICML::Transition>(impl, meta_Transition_children); }
	::Udm::ChildrenAttr< ::PICML::BranchTransition> BehaviorModel::BranchTransition_children() const { return ::Udm::ChildrenAttr< ::PICML::BranchTransition>(impl, meta_BranchTransition_children); }
	::Udm::ChildrenAttr< ::PICML::StateBase> BehaviorModel::StateBase_children() const { return ::Udm::ChildrenAttr< ::PICML::StateBase>(impl, meta_StateBase_children); }
	::Udm::ChildrenAttr< ::PICML::TerminalEffect> BehaviorModel::TerminalEffect_children() const { return ::Udm::ChildrenAttr< ::PICML::TerminalEffect>(impl, meta_TerminalEffect_children); }
	::Udm::ChildrenAttr< ::PICML::Terminal> BehaviorModel::Terminal_children() const { return ::Udm::ChildrenAttr< ::PICML::Terminal>(impl, meta_Terminal_children); }
	::Udm::ChildrenAttr< ::PICML::TerminalTransition> BehaviorModel::TerminalTransition_children() const { return ::Udm::ChildrenAttr< ::PICML::TerminalTransition>(impl, meta_TerminalTransition_children); }
	::Udm::ChildrenAttr< ::PICML::QueryInputAction> BehaviorModel::QueryInputAction_children() const { return ::Udm::ChildrenAttr< ::PICML::QueryInputAction>(impl, meta_QueryInputAction_children); }
	::Udm::ChildrenAttr< ::PICML::Effect> BehaviorModel::Effect_children() const { return ::Udm::ChildrenAttr< ::PICML::Effect>(impl, meta_Effect_children); }
	::Udm::ChildrenAttr< ::PICML::ActionBase> BehaviorModel::ActionBase_children() const { return ::Udm::ChildrenAttr< ::PICML::ActionBase>(impl, meta_ActionBase_children); }
	::Udm::ChildrenAttr< ::PICML::InputEffect> BehaviorModel::InputEffect_children() const { return ::Udm::ChildrenAttr< ::PICML::InputEffect>(impl, meta_InputEffect_children); }
	::Udm::ChildrenAttr< ::PICML::BehaviorInputAction> BehaviorModel::BehaviorInputAction_children() const { return ::Udm::ChildrenAttr< ::PICML::BehaviorInputAction>(impl, meta_BehaviorInputAction_children); }
	::Udm::ChildrenAttr< ::PICML::Finish> BehaviorModel::Finish_children() const { return ::Udm::ChildrenAttr< ::PICML::Finish>(impl, meta_Finish_children); }
	::Udm::ChildrenAttr< ::PICML::EffectBase> BehaviorModel::EffectBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::EffectBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TerminalEffect> BehaviorModel::TerminalEffect_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TerminalEffect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InputEffect> BehaviorModel::InputEffect_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InputEffect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Effect> BehaviorModel::Effect_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Effect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TerminalTransition> BehaviorModel::TerminalTransition_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TerminalTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Terminal> BehaviorModel::Terminal_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Terminal>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LoopTransition> BehaviorModel::LoopTransition_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LoopTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WhileState> BehaviorModel::WhileState_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WhileState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DoWhileState> BehaviorModel::DoWhileState_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DoWhileState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ForState> BehaviorModel::ForState_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ForState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::LoopState> BehaviorModel::LoopState_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::LoopState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::StateBase> BehaviorModel::StateBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::StateBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::BranchTransition> BehaviorModel::BranchTransition_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BranchTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::BranchState> BehaviorModel::BranchState_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BranchState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::State> BehaviorModel::State_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::State>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Transition> BehaviorModel::Transition_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Transition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::CallAction> BehaviorModel::CallAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::CallAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RequestAction> BehaviorModel::RequestAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RequestAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InputAction> BehaviorModel::InputAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::QueryInputAction> BehaviorModel::QueryInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::QueryInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MultiInputAction> BehaviorModel::MultiInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MultiInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::QueryAction> BehaviorModel::QueryAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::QueryAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ActionBase> BehaviorModel::ActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Finish> BehaviorModel::Finish_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Finish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::OutputAction> BehaviorModel::OutputAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::OutputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Action> BehaviorModel::Action_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Action>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::BehaviorInputAction> BehaviorModel::BehaviorInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::BehaviorInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Variable> BehaviorModel::Variable_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Variable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> BehaviorModel::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::Udm::Object> BehaviorModel::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BehaviorModel::meta;
	::Uml::CompositionChildRole BehaviorModel::meta_Variable_children;
	::Uml::CompositionChildRole BehaviorModel::meta_LoopTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Transition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_BranchTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_StateBase_children;
	::Uml::CompositionChildRole BehaviorModel::meta_TerminalEffect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Terminal_children;
	::Uml::CompositionChildRole BehaviorModel::meta_TerminalTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_QueryInputAction_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Effect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_ActionBase_children;
	::Uml::CompositionChildRole BehaviorModel::meta_InputEffect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_BehaviorInputAction_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Finish_children;

	Variable::Variable() {}
	Variable::Variable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Variable::Variable(const Variable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Variable::Variable(Variable &&master) : MgaObject(master) {};

	Variable Variable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Variable& Variable::operator=(Variable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Variable Variable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Variable Variable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Variable Variable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Variable> Variable::Instances() { return ::Udm::InstantiatedAttr< Variable>(impl); }
	Variable Variable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Variable> Variable::Derived() { return ::Udm::DerivedAttr< Variable>(impl); }
	::Udm::ArchetypeAttr< Variable> Variable::Archetype() const { return ::Udm::ArchetypeAttr< Variable>(impl); }
	::Udm::StringAttr Variable::InitialValue() const { return ::Udm::StringAttr(impl, meta_InitialValue); }
	::Udm::PointerAttr< PredefinedType> Variable::ref() const { return ::Udm::PointerAttr< PredefinedType>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Variable::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::PICML::BehaviorModel> Variable::parent() const { return ::Udm::ParentAttr< ::PICML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void Variable::Accept(Visitor &v) { v.Visit_Variable(*this); }

	::Uml::Class Variable::meta;
	::Uml::Attribute Variable::meta_InitialValue;
	::Uml::AssociationRole Variable::meta_ref;
	::Uml::CompositionParentRole Variable::meta_BehaviorModel_parent;

	QueryInputBase::QueryInputBase() {}
	QueryInputBase::QueryInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInputBase::QueryInputBase(const QueryInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInputBase::QueryInputBase(QueryInputBase &&master) : MgaObject(master) {};

	QueryInputBase QueryInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInputBase& QueryInputBase::operator=(QueryInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInputBase QueryInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInputBase QueryInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInputBase QueryInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInputBase> QueryInputBase::Instances() { return ::Udm::InstantiatedAttr< QueryInputBase>(impl); }
	QueryInputBase QueryInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInputBase> QueryInputBase::Derived() { return ::Udm::DerivedAttr< QueryInputBase>(impl); }
	::Udm::ArchetypeAttr< QueryInputBase> QueryInputBase::Archetype() const { return ::Udm::ArchetypeAttr< QueryInputBase>(impl); }
	::Udm::AClassPointerAttr< QueryInput, QueryInputAction> QueryInputBase::dstQueryInput() const { return ::Udm::AClassPointerAttr< QueryInput, QueryInputAction>(impl, meta_dstQueryInput, meta_dstQueryInput_rev); }
	::Udm::ParentAttr< ::Udm::Object> QueryInputBase::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class QueryInputBase::meta;
	::Uml::AssociationRole QueryInputBase::meta_dstQueryInput;
	::Uml::AssociationRole QueryInputBase::meta_dstQueryInput_rev;

	QueryInput::QueryInput() {}
	QueryInput::QueryInput(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInput::QueryInput(const QueryInput &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInput::QueryInput(QueryInput &&master) : MgaObject(master) {};

	QueryInput QueryInput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInput& QueryInput::operator=(QueryInput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInput QueryInput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInput QueryInput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInput QueryInput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInput> QueryInput::Instances() { return ::Udm::InstantiatedAttr< QueryInput>(impl); }
	QueryInput QueryInput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInput> QueryInput::Derived() { return ::Udm::DerivedAttr< QueryInput>(impl); }
	::Udm::ArchetypeAttr< QueryInput> QueryInput::Archetype() const { return ::Udm::ArchetypeAttr< QueryInput>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> QueryInput::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> QueryInput::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::QueryInputBase> QueryInput::srcQueryInput_end() const { return ::Udm::AssocEndAttr< ::PICML::QueryInputBase>(impl, meta_srcQueryInput_end_); }
	::Udm::AssocEndAttr< ::PICML::QueryInputAction> QueryInput::dstQueryInput_end() const { return ::Udm::AssocEndAttr< ::PICML::QueryInputAction>(impl, meta_dstQueryInput_end_); }
	void QueryInput::Accept(Visitor &v) { v.Visit_QueryInput(*this); }

	::Uml::Class QueryInput::meta;
	::Uml::CompositionParentRole QueryInput::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole QueryInput::meta_srcQueryInput_end_;
	::Uml::AssociationRole QueryInput::meta_dstQueryInput_end_;

	TopLevelBehavior::TopLevelBehavior() {}
	TopLevelBehavior::TopLevelBehavior(::Udm::ObjectImpl *impl) : BehaviorModel(impl), MgaObject(impl) {}
	TopLevelBehavior::TopLevelBehavior(const TopLevelBehavior &master) : BehaviorModel(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelBehavior::TopLevelBehavior(TopLevelBehavior &&master) : BehaviorModel(master), MgaObject(master) {};

	TopLevelBehavior TopLevelBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelBehavior& TopLevelBehavior::operator=(TopLevelBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelBehavior TopLevelBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelBehavior TopLevelBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelBehavior TopLevelBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelBehavior> TopLevelBehavior::Instances() { return ::Udm::InstantiatedAttr< TopLevelBehavior>(impl); }
	TopLevelBehavior TopLevelBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelBehavior> TopLevelBehavior::Derived() { return ::Udm::DerivedAttr< TopLevelBehavior>(impl); }
	::Udm::ArchetypeAttr< TopLevelBehavior> TopLevelBehavior::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelBehavior>(impl); }
	::Udm::ChildrenAttr< ::PICML::WorkerType> TopLevelBehavior::WorkerType_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerType>(impl, meta_WorkerType_children); }
	::Udm::ChildrenAttr< ::PICML::QueryInput> TopLevelBehavior::QueryInput_children() const { return ::Udm::ChildrenAttr< ::PICML::QueryInput>(impl, meta_QueryInput_children); }
	::Udm::ChildrenAttr< ::PICML::Input> TopLevelBehavior::Input_children() const { return ::Udm::ChildrenAttr< ::PICML::Input>(impl, meta_Input_children); }
	::Udm::ChildrenAttr< ::PICML::MultiInput> TopLevelBehavior::MultiInput_children() const { return ::Udm::ChildrenAttr< ::PICML::MultiInput>(impl, meta_MultiInput_children); }
	::Udm::ChildAttr< ::PICML::Environment> TopLevelBehavior::Environment_child() const { return ::Udm::ChildAttr< ::PICML::Environment>(impl, meta_Environment_child); }
	::Udm::ChildrenAttr< ::PICML::ApplicationTask> TopLevelBehavior::ApplicationTask_children() const { return ::Udm::ChildrenAttr< ::PICML::ApplicationTask>(impl, meta_ApplicationTask_children); }
	::Udm::ChildrenAttr< ::PICML::PeriodicEvent> TopLevelBehavior::PeriodicEvent_children() const { return ::Udm::ChildrenAttr< ::PICML::PeriodicEvent>(impl, meta_PeriodicEvent_children); }
	::Udm::ChildrenAttr< ::PICML::QueryInput> TopLevelBehavior::QueryInput_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::QueryInput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MultiInput> TopLevelBehavior::MultiInput_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MultiInput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MultiInputBase> TopLevelBehavior::MultiInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MultiInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::SingleInputBase> TopLevelBehavior::SingleInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::SingleInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Input> TopLevelBehavior::Input_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Input>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkerType> TopLevelBehavior::WorkerType_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ApplicationTask> TopLevelBehavior::ApplicationTask_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ApplicationTask>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PeriodicEvent> TopLevelBehavior::PeriodicEvent_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PeriodicEvent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Environment> TopLevelBehavior::Environment_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Environment>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::MgaObject> TopLevelBehavior::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::Udm::Object> TopLevelBehavior::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class TopLevelBehavior::meta;
	::Uml::CompositionChildRole TopLevelBehavior::meta_WorkerType_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_QueryInput_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_Input_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_MultiInput_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_Environment_child;
	::Uml::CompositionChildRole TopLevelBehavior::meta_ApplicationTask_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_PeriodicEvent_children;

	MultiInput::MultiInput() {}
	MultiInput::MultiInput(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiInput::MultiInput(const MultiInput &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiInput::MultiInput(MultiInput &&master) : MgaObject(master) {};

	MultiInput MultiInput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInput& MultiInput::operator=(MultiInput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInput MultiInput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInput MultiInput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInput MultiInput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInput> MultiInput::Instances() { return ::Udm::InstantiatedAttr< MultiInput>(impl); }
	MultiInput MultiInput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInput> MultiInput::Derived() { return ::Udm::DerivedAttr< MultiInput>(impl); }
	::Udm::ArchetypeAttr< MultiInput> MultiInput::Archetype() const { return ::Udm::ArchetypeAttr< MultiInput>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> MultiInput::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> MultiInput::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::MultiInputBase> MultiInput::srcMultiInput_end() const { return ::Udm::AssocEndAttr< ::PICML::MultiInputBase>(impl, meta_srcMultiInput_end_); }
	::Udm::AssocEndAttr< ::PICML::MultiInputAction> MultiInput::dstMultiInput_end() const { return ::Udm::AssocEndAttr< ::PICML::MultiInputAction>(impl, meta_dstMultiInput_end_); }
	void MultiInput::Accept(Visitor &v) { v.Visit_MultiInput(*this); }

	::Uml::Class MultiInput::meta;
	::Uml::CompositionParentRole MultiInput::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole MultiInput::meta_srcMultiInput_end_;
	::Uml::AssociationRole MultiInput::meta_dstMultiInput_end_;

	SingleOutputBase::SingleOutputBase() {}
	SingleOutputBase::SingleOutputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SingleOutputBase::SingleOutputBase(const SingleOutputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SingleOutputBase::SingleOutputBase(SingleOutputBase &&master) : MgaObject(master) {};

	SingleOutputBase SingleOutputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SingleOutputBase& SingleOutputBase::operator=(SingleOutputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SingleOutputBase SingleOutputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SingleOutputBase SingleOutputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SingleOutputBase SingleOutputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SingleOutputBase> SingleOutputBase::Instances() { return ::Udm::InstantiatedAttr< SingleOutputBase>(impl); }
	SingleOutputBase SingleOutputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SingleOutputBase> SingleOutputBase::Derived() { return ::Udm::DerivedAttr< SingleOutputBase>(impl); }
	::Udm::ArchetypeAttr< SingleOutputBase> SingleOutputBase::Archetype() const { return ::Udm::ArchetypeAttr< SingleOutputBase>(impl); }
	::Udm::ParentAttr< ::Udm::Object> SingleOutputBase::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SingleOutputBase::meta;

	MultiOutputBase::MultiOutputBase() {}
	MultiOutputBase::MultiOutputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiOutputBase::MultiOutputBase(const MultiOutputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiOutputBase::MultiOutputBase(MultiOutputBase &&master) : MgaObject(master) {};

	MultiOutputBase MultiOutputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiOutputBase& MultiOutputBase::operator=(MultiOutputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiOutputBase MultiOutputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiOutputBase MultiOutputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiOutputBase MultiOutputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiOutputBase> MultiOutputBase::Instances() { return ::Udm::InstantiatedAttr< MultiOutputBase>(impl); }
	MultiOutputBase MultiOutputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiOutputBase> MultiOutputBase::Derived() { return ::Udm::DerivedAttr< MultiOutputBase>(impl); }
	::Udm::ArchetypeAttr< MultiOutputBase> MultiOutputBase::Archetype() const { return ::Udm::ArchetypeAttr< MultiOutputBase>(impl); }
	::Udm::ParentAttr< ::Udm::Object> MultiOutputBase::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MultiOutputBase::meta;

	MultiInputBase::MultiInputBase() {}
	MultiInputBase::MultiInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiInputBase::MultiInputBase(const MultiInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiInputBase::MultiInputBase(MultiInputBase &&master) : MgaObject(master) {};

	MultiInputBase MultiInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInputBase& MultiInputBase::operator=(MultiInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInputBase MultiInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInputBase MultiInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInputBase MultiInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInputBase> MultiInputBase::Instances() { return ::Udm::InstantiatedAttr< MultiInputBase>(impl); }
	MultiInputBase MultiInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInputBase> MultiInputBase::Derived() { return ::Udm::DerivedAttr< MultiInputBase>(impl); }
	::Udm::ArchetypeAttr< MultiInputBase> MultiInputBase::Archetype() const { return ::Udm::ArchetypeAttr< MultiInputBase>(impl); }
	::Udm::AClassAssocAttr< MultiInput, MultiInputAction> MultiInputBase::dstMultiInput() const { return ::Udm::AClassAssocAttr< MultiInput, MultiInputAction>(impl, meta_dstMultiInput, meta_dstMultiInput_rev); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> MultiInputBase::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MultiInputBase::meta;
	::Uml::AssociationRole MultiInputBase::meta_dstMultiInput;
	::Uml::AssociationRole MultiInputBase::meta_dstMultiInput_rev;

	SingleInputBase::SingleInputBase() {}
	SingleInputBase::SingleInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SingleInputBase::SingleInputBase(const SingleInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SingleInputBase::SingleInputBase(SingleInputBase &&master) : MgaObject(master) {};

	SingleInputBase SingleInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SingleInputBase& SingleInputBase::operator=(SingleInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SingleInputBase SingleInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SingleInputBase SingleInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SingleInputBase SingleInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SingleInputBase> SingleInputBase::Instances() { return ::Udm::InstantiatedAttr< SingleInputBase>(impl); }
	SingleInputBase SingleInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SingleInputBase> SingleInputBase::Derived() { return ::Udm::DerivedAttr< SingleInputBase>(impl); }
	::Udm::ArchetypeAttr< SingleInputBase> SingleInputBase::Archetype() const { return ::Udm::ArchetypeAttr< SingleInputBase>(impl); }
	::Udm::AClassPointerAttr< Input, InputAction> SingleInputBase::dstInput() const { return ::Udm::AClassPointerAttr< Input, InputAction>(impl, meta_dstInput, meta_dstInput_rev); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> SingleInputBase::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SingleInputBase::meta;
	::Uml::AssociationRole SingleInputBase::meta_dstInput;
	::Uml::AssociationRole SingleInputBase::meta_dstInput_rev;

	Input::Input() {}
	Input::Input(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Input::Input(const Input &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Input::Input(Input &&master) : MgaObject(master) {};

	Input Input::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Input& Input::operator=(Input &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Input Input::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Input Input::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Input Input::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Input> Input::Instances() { return ::Udm::InstantiatedAttr< Input>(impl); }
	Input Input::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Input> Input::Derived() { return ::Udm::DerivedAttr< Input>(impl); }
	::Udm::ArchetypeAttr< Input> Input::Archetype() const { return ::Udm::ArchetypeAttr< Input>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> Input::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> Input::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::PICML::SingleInputBase> Input::srcInput_end() const { return ::Udm::AssocEndAttr< ::PICML::SingleInputBase>(impl, meta_srcInput_end_); }
	::Udm::AssocEndAttr< ::PICML::InputAction> Input::dstInput_end() const { return ::Udm::AssocEndAttr< ::PICML::InputAction>(impl, meta_dstInput_end_); }
	void Input::Accept(Visitor &v) { v.Visit_Input(*this); }

	::Uml::Class Input::meta;
	::Uml::CompositionParentRole Input::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole Input::meta_srcInput_end_;
	::Uml::AssociationRole Input::meta_dstInput_end_;

	WorkerType::WorkerType() {}
	WorkerType::WorkerType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerType::WorkerType(const WorkerType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerType::WorkerType(WorkerType &&master) : MgaObject(master) {};

	WorkerType WorkerType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerType& WorkerType::operator=(WorkerType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerType WorkerType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerType WorkerType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerType WorkerType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerType> WorkerType::Instances() { return ::Udm::InstantiatedAttr< WorkerType>(impl); }
	WorkerType WorkerType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerType> WorkerType::Derived() { return ::Udm::DerivedAttr< WorkerType>(impl); }
	::Udm::ArchetypeAttr< WorkerType> WorkerType::Archetype() const { return ::Udm::ArchetypeAttr< WorkerType>(impl); }
	::Udm::PointerAttr< Worker> WorkerType::ref() const { return ::Udm::PointerAttr< Worker>(impl, meta_ref); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> WorkerType::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> WorkerType::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerType::Accept(Visitor &v) { v.Visit_WorkerType(*this); }

	::Uml::Class WorkerType::meta;
	::Uml::AssociationRole WorkerType::meta_ref;
	::Uml::CompositionParentRole WorkerType::meta_TopLevelBehavior_parent;

	ApplicationTask::ApplicationTask() {}
	ApplicationTask::ApplicationTask(::Udm::ObjectImpl *impl) : SingleInputBase(impl), MgaObject(impl) {}
	ApplicationTask::ApplicationTask(const ApplicationTask &master) : SingleInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ApplicationTask::ApplicationTask(ApplicationTask &&master) : SingleInputBase(master), MgaObject(master) {};

	ApplicationTask ApplicationTask::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ApplicationTask& ApplicationTask::operator=(ApplicationTask &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ApplicationTask ApplicationTask::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ApplicationTask ApplicationTask::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ApplicationTask ApplicationTask::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ApplicationTask> ApplicationTask::Instances() { return ::Udm::InstantiatedAttr< ApplicationTask>(impl); }
	ApplicationTask ApplicationTask::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ApplicationTask> ApplicationTask::Derived() { return ::Udm::DerivedAttr< ApplicationTask>(impl); }
	::Udm::ArchetypeAttr< ApplicationTask> ApplicationTask::Archetype() const { return ::Udm::ArchetypeAttr< ApplicationTask>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> ApplicationTask::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> ApplicationTask::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void ApplicationTask::Accept(Visitor &v) { v.Visit_ApplicationTask(*this); }

	::Uml::Class ApplicationTask::meta;
	::Uml::CompositionParentRole ApplicationTask::meta_TopLevelBehavior_parent;

	PeriodicEvent::PeriodicEvent() {}
	PeriodicEvent::PeriodicEvent(::Udm::ObjectImpl *impl) : SingleInputBase(impl), MgaObject(impl) {}
	PeriodicEvent::PeriodicEvent(const PeriodicEvent &master) : SingleInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PeriodicEvent::PeriodicEvent(PeriodicEvent &&master) : SingleInputBase(master), MgaObject(master) {};

	PeriodicEvent PeriodicEvent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PeriodicEvent& PeriodicEvent::operator=(PeriodicEvent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PeriodicEvent PeriodicEvent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PeriodicEvent PeriodicEvent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PeriodicEvent PeriodicEvent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PeriodicEvent> PeriodicEvent::Instances() { return ::Udm::InstantiatedAttr< PeriodicEvent>(impl); }
	PeriodicEvent PeriodicEvent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PeriodicEvent> PeriodicEvent::Derived() { return ::Udm::DerivedAttr< PeriodicEvent>(impl); }
	::Udm::ArchetypeAttr< PeriodicEvent> PeriodicEvent::Archetype() const { return ::Udm::ArchetypeAttr< PeriodicEvent>(impl); }
	::Udm::StringAttr PeriodicEvent::Hertz() const { return ::Udm::StringAttr(impl, meta_Hertz); }
	::Udm::StringAttr PeriodicEvent::Distribution() const { return ::Udm::StringAttr(impl, meta_Distribution); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> PeriodicEvent::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> PeriodicEvent::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void PeriodicEvent::Accept(Visitor &v) { v.Visit_PeriodicEvent(*this); }

	::Uml::Class PeriodicEvent::meta;
	::Uml::Attribute PeriodicEvent::meta_Hertz;
	::Uml::Attribute PeriodicEvent::meta_Distribution;
	::Uml::CompositionParentRole PeriodicEvent::meta_TopLevelBehavior_parent;

	Environment::Environment() {}
	Environment::Environment(::Udm::ObjectImpl *impl) : MultiInputBase(impl), MgaObject(impl) {}
	Environment::Environment(const Environment &master) : MultiInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Environment::Environment(Environment &&master) : MultiInputBase(master), MgaObject(master) {};

	Environment Environment::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Environment& Environment::operator=(Environment &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Environment Environment::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Environment Environment::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Environment Environment::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Environment> Environment::Instances() { return ::Udm::InstantiatedAttr< Environment>(impl); }
	Environment Environment::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Environment> Environment::Derived() { return ::Udm::DerivedAttr< Environment>(impl); }
	::Udm::ArchetypeAttr< Environment> Environment::Archetype() const { return ::Udm::ArchetypeAttr< Environment>(impl); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> Environment::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::PICML::TopLevelBehavior> Environment::parent() const { return ::Udm::ParentAttr< ::PICML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void Environment::Accept(Visitor &v) { v.Visit_Environment(*this); }

	::Uml::Class Environment::meta;
	::Uml::CompositionParentRole Environment::meta_TopLevelBehavior_parent;

	RootFolder::RootFolder() {}
	RootFolder::RootFolder(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	RootFolder::RootFolder(const RootFolder &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	RootFolder::RootFolder(RootFolder &&master) : UDM_OBJECT(master) {};

	RootFolder RootFolder::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RootFolder& RootFolder::operator=(RootFolder &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RootFolder RootFolder::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RootFolder RootFolder::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RootFolder RootFolder::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RootFolder> RootFolder::Instances() { return ::Udm::InstantiatedAttr< RootFolder>(impl); }
	RootFolder RootFolder::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RootFolder> RootFolder::Derived() { return ::Udm::DerivedAttr< RootFolder>(impl); }
	::Udm::ArchetypeAttr< RootFolder> RootFolder::Archetype() const { return ::Udm::ArchetypeAttr< RootFolder>(impl); }
	::Udm::StringAttr RootFolder::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementations> RootFolder::ComponentFactoryImplementations_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementations>(impl, meta_ComponentFactoryImplementations_children); }
	::Udm::ChildrenAttr< ::PICML::PathDiagrams> RootFolder::PathDiagrams_children() const { return ::Udm::ChildrenAttr< ::PICML::PathDiagrams>(impl, meta_PathDiagrams_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentAnalyses> RootFolder::ComponentAnalyses_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAnalyses>(impl, meta_ComponentAnalyses_children); }
	::Udm::ChildrenAttr< ::PICML::DeploymentPlans> RootFolder::DeploymentPlans_children() const { return ::Udm::ChildrenAttr< ::PICML::DeploymentPlans>(impl, meta_DeploymentPlans_children); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigurations> RootFolder::PackageConfigurations_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigurations>(impl, meta_PackageConfigurations_children); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifacts> RootFolder::ImplementationArtifacts_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifacts>(impl, meta_ImplementationArtifacts_children); }
	::Udm::ChildrenAttr< ::PICML::TopLevelPackages> RootFolder::TopLevelPackages_children() const { return ::Udm::ChildrenAttr< ::PICML::TopLevelPackages>(impl, meta_TopLevelPackages_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackages> RootFolder::ComponentPackages_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackages>(impl, meta_ComponentPackages_children); }
	::Udm::ChildrenAttr< ::PICML::Targets> RootFolder::Targets_children() const { return ::Udm::ChildrenAttr< ::PICML::Targets>(impl, meta_Targets_children); }
	::Udm::ChildrenAttr< ::PICML::PredefinedTypes> RootFolder::PredefinedTypes_children() const { return ::Udm::ChildrenAttr< ::PICML::PredefinedTypes>(impl, meta_PredefinedTypes_children); }
	::Udm::ChildrenAttr< ::PICML::InterfaceDefinitions> RootFolder::InterfaceDefinitions_children() const { return ::Udm::ChildrenAttr< ::PICML::InterfaceDefinitions>(impl, meta_InterfaceDefinitions_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentBuild> RootFolder::ComponentBuild_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentBuild>(impl, meta_ComponentBuild_children); }
	::Udm::ChildrenAttr< ::PICML::WorkerLibraries> RootFolder::WorkerLibraries_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerLibraries>(impl, meta_WorkerLibraries_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementations> RootFolder::ComponentImplementations_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementations>(impl, meta_ComponentImplementations_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentTypes> RootFolder::ComponentTypes_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentTypes>(impl, meta_ComponentTypes_children); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementations> RootFolder::ConnectorImplementations_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementations>(impl, meta_ConnectorImplementations_children); }
	::Udm::ChildrenAttr< ::PICML::RootFolder> RootFolder::RootFolder_children() const { return ::Udm::ChildrenAttr< ::PICML::RootFolder>(impl, meta_RootFolder_children); }
	::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementations> RootFolder::ComponentFactoryImplementations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentFactoryImplementations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PathDiagrams> RootFolder::PathDiagrams_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PathDiagrams>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentAnalyses> RootFolder::ComponentAnalyses_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentAnalyses>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::DeploymentPlans> RootFolder::DeploymentPlans_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::DeploymentPlans>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PackageConfigurations> RootFolder::PackageConfigurations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PackageConfigurations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ImplementationArtifacts> RootFolder::ImplementationArtifacts_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ImplementationArtifacts>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::TopLevelPackages> RootFolder::TopLevelPackages_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::TopLevelPackages>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentPackages> RootFolder::ComponentPackages_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentPackages>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::Targets> RootFolder::Targets_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::Targets>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::PredefinedTypes> RootFolder::PredefinedTypes_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::PredefinedTypes>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::InterfaceDefinitions> RootFolder::InterfaceDefinitions_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::InterfaceDefinitions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentBuild> RootFolder::ComponentBuild_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentBuild>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::WorkerLibraries> RootFolder::WorkerLibraries_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::WorkerLibraries>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentImplementations> RootFolder::ComponentImplementations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentImplementations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ComponentTypes> RootFolder::ComponentTypes_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ComponentTypes>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::ConnectorImplementations> RootFolder::ConnectorImplementations_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::ConnectorImplementations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::PICML::RootFolder> RootFolder::RootFolder_kind_children() const { return ::Udm::ChildrenAttr< ::PICML::RootFolder>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::PICML::RootFolder> RootFolder::RootFolder_parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::PICML::RootFolder> RootFolder::parent() const { return ::Udm::ParentAttr< ::PICML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void RootFolder::Accept(Visitor &v) { v.Visit_RootFolder(*this); }

	::Uml::Class RootFolder::meta;
	::Uml::Attribute RootFolder::meta_name;
	::Uml::CompositionChildRole RootFolder::meta_ComponentFactoryImplementations_children;
	::Uml::CompositionChildRole RootFolder::meta_PathDiagrams_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentAnalyses_children;
	::Uml::CompositionChildRole RootFolder::meta_DeploymentPlans_children;
	::Uml::CompositionChildRole RootFolder::meta_PackageConfigurations_children;
	::Uml::CompositionChildRole RootFolder::meta_ImplementationArtifacts_children;
	::Uml::CompositionChildRole RootFolder::meta_TopLevelPackages_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentPackages_children;
	::Uml::CompositionChildRole RootFolder::meta_Targets_children;
	::Uml::CompositionChildRole RootFolder::meta_PredefinedTypes_children;
	::Uml::CompositionChildRole RootFolder::meta_InterfaceDefinitions_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentBuild_children;
	::Uml::CompositionChildRole RootFolder::meta_WorkerLibraries_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentImplementations_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentTypes_children;
	::Uml::CompositionChildRole RootFolder::meta_ConnectorImplementations_children;
	::Uml::CompositionChildRole RootFolder::meta_RootFolder_children;
	::Uml::CompositionParentRole RootFolder::meta_RootFolder_parent;

	MgaObject::MgaObject() {}
	MgaObject::MgaObject(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	MgaObject::MgaObject(const MgaObject &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	MgaObject::MgaObject(MgaObject &&master) : UDM_OBJECT(master) {};

	MgaObject MgaObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MgaObject& MgaObject::operator=(MgaObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MgaObject MgaObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MgaObject MgaObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MgaObject MgaObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MgaObject> MgaObject::Instances() { return ::Udm::InstantiatedAttr< MgaObject>(impl); }
	MgaObject MgaObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MgaObject> MgaObject::Derived() { return ::Udm::DerivedAttr< MgaObject>(impl); }
	::Udm::ArchetypeAttr< MgaObject> MgaObject::Archetype() const { return ::Udm::ArchetypeAttr< MgaObject>(impl); }
	::Udm::StringAttr MgaObject::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::StringAttr MgaObject::position() const { return ::Udm::StringAttr(impl, meta_position); }
	::Udm::ParentAttr< ::Udm::Object> MgaObject::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MgaObject::meta;
	::Uml::Attribute MgaObject::meta_name;
	::Uml::Attribute MgaObject::meta_position;

	::Uml::Diagram meta;

	void CreateMeta() {
		// classes, with attributes, constraints and constraint definitions
		Action::meta = ::Uml::Class::Create(meta);

		ActionBase::meta = ::Uml::Class::Create(meta);
		ActionBase::meta_Duration = ::Uml::Attribute::Create(ActionBase::meta);

		ActionType::meta = ::Uml::Class::Create(meta);

		Aggregate::meta = ::Uml::Class::Create(meta);

		Alias::meta = ::Uml::Class::Create(meta);

		ApplicationTask::meta = ::Uml::Class::Create(meta);

		ArrayMember::meta = ::Uml::Class::Create(meta);
		ArrayMember::meta_Size = ::Uml::Attribute::Create(ArrayMember::meta);

		ArtifactContainer::meta = ::Uml::Class::Create(meta);

		ArtifactDependency::meta = ::Uml::Class::Create(meta);

		ArtifactDependsOn::meta = ::Uml::Class::Create(meta);

		ArtifactDeployRequirement::meta = ::Uml::Class::Create(meta);

		ArtifactExecParameter::meta = ::Uml::Class::Create(meta);

		ArtifactInfoProperty::meta = ::Uml::Class::Create(meta);

		AssemblyConfigProperty::meta = ::Uml::Class::Create(meta);

		AssemblyConfigPropertyEnd::meta = ::Uml::Class::Create(meta);

		AssemblyselectRequirement::meta = ::Uml::Class::Create(meta);

		Attribute::meta = ::Uml::Class::Create(meta);

		AttributeDelegate::meta = ::Uml::Class::Create(meta);

		AttributeInstance::meta = ::Uml::Class::Create(meta);

		AttributeMapping::meta = ::Uml::Class::Create(meta);

		AttributeMappingDelegate::meta = ::Uml::Class::Create(meta);

		AttributeMappingValue::meta = ::Uml::Class::Create(meta);

		AttributeMember::meta = ::Uml::Class::Create(meta);

		AttributeValue::meta = ::Uml::Class::Create(meta);

		Average::meta = ::Uml::Class::Create(meta);

		BehaviorInputAction::meta = ::Uml::Class::Create(meta);

		BehaviorModel::meta = ::Uml::Class::Create(meta);

		BenchmarkAnalysis::meta = ::Uml::Class::Create(meta);

		BenchmarkCharacteristics::meta = ::Uml::Class::Create(meta);

		BenchmarkType::meta = ::Uml::Class::Create(meta);

		Boolean::meta = ::Uml::Class::Create(meta);

		Boxed::meta = ::Uml::Class::Create(meta);

		BranchState::meta = ::Uml::Class::Create(meta);

		BranchTransition::meta = ::Uml::Class::Create(meta);
		BranchTransition::meta_Condition = ::Uml::Attribute::Create(BranchTransition::meta);

		Bridge::meta = ::Uml::Class::Create(meta);
		Bridge::meta_label = ::Uml::Attribute::Create(Bridge::meta);

		BridgeConnection::meta = ::Uml::Class::Create(meta);

		Byte::meta = ::Uml::Class::Create(meta);

		CallAction::meta = ::Uml::Class::Create(meta);

		Capability::meta = ::Uml::Class::Create(meta);

		Char::meta = ::Uml::Class::Create(meta);

		CharType::meta = ::Uml::Class::Create(meta);

		Collection::meta = ::Uml::Class::Create(meta);
		Collection::meta_bound = ::Uml::Attribute::Create(Collection::meta);

		CollectionParameter::meta = ::Uml::Class::Create(meta);

		CollocationGroup::meta = ::Uml::Class::Create(meta);

		CollocationGroupMember::meta = ::Uml::Class::Create(meta);

		CollocationGroupProperty::meta = ::Uml::Class::Create(meta);

		CommonPortAttrs::meta = ::Uml::Class::Create(meta);
		CommonPortAttrs::meta_optional = ::Uml::Attribute::Create(CommonPortAttrs::meta);
		CommonPortAttrs::meta_exclusiveUser = ::Uml::Attribute::Create(CommonPortAttrs::meta);
		CommonPortAttrs::meta_exclusiveProvider = ::Uml::Attribute::Create(CommonPortAttrs::meta);

		CompRef::meta = ::Uml::Class::Create(meta);

		ComplexProperty::meta = ::Uml::Class::Create(meta);

		ComplexType::meta = ::Uml::Class::Create(meta);

		ComplexTypeReference::meta = ::Uml::Class::Create(meta);

		Component::meta = ::Uml::Class::Create(meta);
		Component::meta_label = ::Uml::Attribute::Create(Component::meta);
		Component::meta_UUID = ::Uml::Attribute::Create(Component::meta);

		ComponentAnalyses::meta = ::Uml::Class::Create(meta);
		ComponentAnalyses::meta_name = ::Uml::Attribute::Create(ComponentAnalyses::meta);

		ComponentAssembly::meta = ::Uml::Class::Create(meta);

		ComponentAssemblyReference::meta = ::Uml::Class::Create(meta);

		ComponentBuild::meta = ::Uml::Class::Create(meta);
		ComponentBuild::meta_name = ::Uml::Attribute::Create(ComponentBuild::meta);

		ComponentConfigProperty::meta = ::Uml::Class::Create(meta);

		ComponentContainer::meta = ::Uml::Class::Create(meta);

		ComponentFactory::meta = ::Uml::Class::Create(meta);

		ComponentFactoryImplementationContainer::meta = ::Uml::Class::Create(meta);

		ComponentFactoryImplementations::meta = ::Uml::Class::Create(meta);
		ComponentFactoryImplementations::meta_name = ::Uml::Attribute::Create(ComponentFactoryImplementations::meta);

		ComponentFactoryInstance::meta = ::Uml::Class::Create(meta);

		ComponentFactoryRef::meta = ::Uml::Class::Create(meta);

		ComponentImplementation::meta = ::Uml::Class::Create(meta);

		ComponentImplementationArtifact::meta = ::Uml::Class::Create(meta);
		ComponentImplementationArtifact::meta_EntryPoint = ::Uml::Attribute::Create(ComponentImplementationArtifact::meta);

		ComponentImplementationContainer::meta = ::Uml::Class::Create(meta);

		ComponentImplementationReference::meta = ::Uml::Class::Create(meta);

		ComponentImplementations::meta = ::Uml::Class::Create(meta);
		ComponentImplementations::meta_name = ::Uml::Attribute::Create(ComponentImplementations::meta);

		ComponentInfoProperty::meta = ::Uml::Class::Create(meta);

		ComponentInherits::meta = ::Uml::Class::Create(meta);

		ComponentInstance::meta = ::Uml::Class::Create(meta);
		ComponentInstance::meta_UUID = ::Uml::Attribute::Create(ComponentInstance::meta);

		ComponentInstanceRef::meta = ::Uml::Class::Create(meta);

		ComponentInstanceType::meta = ::Uml::Class::Create(meta);

		ComponentLib::meta = ::Uml::Class::Create(meta);
		ComponentLib::meta_libraryexport = ::Uml::Attribute::Create(ComponentLib::meta);
		ComponentLib::meta_sharedname = ::Uml::Attribute::Create(ComponentLib::meta);
		ComponentLib::meta_ORBServices = ::Uml::Attribute::Create(ComponentLib::meta);

		ComponentOperation::meta = ::Uml::Class::Create(meta);

		ComponentPackage::meta = ::Uml::Class::Create(meta);
		ComponentPackage::meta_label = ::Uml::Attribute::Create(ComponentPackage::meta);
		ComponentPackage::meta_UUID = ::Uml::Attribute::Create(ComponentPackage::meta);

		ComponentPackageReference::meta = ::Uml::Class::Create(meta);
		ComponentPackageReference::meta_requiredUUID = ::Uml::Attribute::Create(ComponentPackageReference::meta);
		ComponentPackageReference::meta_requiredName = ::Uml::Attribute::Create(ComponentPackageReference::meta);
		ComponentPackageReference::meta_requiredType = ::Uml::Attribute::Create(ComponentPackageReference::meta);

		ComponentPackages::meta = ::Uml::Class::Create(meta);
		ComponentPackages::meta_name = ::Uml::Attribute::Create(ComponentPackages::meta);

		ComponentProperty::meta = ::Uml::Class::Create(meta);

		ComponentPropertyDescription::meta = ::Uml::Class::Create(meta);

		ComponentRef::meta = ::Uml::Class::Create(meta);

		ComponentServantArtifact::meta = ::Uml::Class::Create(meta);
		ComponentServantArtifact::meta_EntryPoint = ::Uml::Attribute::Create(ComponentServantArtifact::meta);

		ComponentTypes::meta = ::Uml::Class::Create(meta);
		ComponentTypes::meta_name = ::Uml::Attribute::Create(ComponentTypes::meta);

		ConfigProperty::meta = ::Uml::Class::Create(meta);

		ConnectedComponent::meta = ::Uml::Class::Create(meta);

		ConnectorImplementation::meta = ::Uml::Class::Create(meta);

		ConnectorImplementationContainer::meta = ::Uml::Class::Create(meta);

		ConnectorImplementationType::meta = ::Uml::Class::Create(meta);

		ConnectorImplementations::meta = ::Uml::Class::Create(meta);
		ConnectorImplementations::meta_name = ::Uml::Attribute::Create(ConnectorImplementations::meta);

		ConnectorImplements::meta = ::Uml::Class::Create(meta);

		ConnectorInherits::meta = ::Uml::Class::Create(meta);

		ConnectorInstance::meta = ::Uml::Class::Create(meta);
		ConnectorInstance::meta_UUID = ::Uml::Attribute::Create(ConnectorInstance::meta);

		ConnectorObject::meta = ::Uml::Class::Create(meta);
		ConnectorObject::meta_UUID = ::Uml::Attribute::Create(ConnectorObject::meta);

		ConnectorToFacet::meta = ::Uml::Class::Create(meta);
		ConnectorToFacet::meta_InnerName = ::Uml::Attribute::Create(ConnectorToFacet::meta);

		ConnectorToReceptacle::meta = ::Uml::Class::Create(meta);
		ConnectorToReceptacle::meta_InnerName = ::Uml::Attribute::Create(ConnectorToReceptacle::meta);

		ConnectorType::meta = ::Uml::Class::Create(meta);

		Constant::meta = ::Uml::Class::Create(meta);
		Constant::meta_value = ::Uml::Attribute::Create(Constant::meta);

		ConstantType::meta = ::Uml::Class::Create(meta);

		Consume::meta = ::Uml::Class::Create(meta);

		CriticalPath::meta = ::Uml::Class::Create(meta);

		DataAnalysisBase::meta = ::Uml::Class::Create(meta);

		DataType::meta = ::Uml::Class::Create(meta);

		DataValue::meta = ::Uml::Class::Create(meta);
		DataValue::meta_Value = ::Uml::Attribute::Create(DataValue::meta);

		DataValueBase::meta = ::Uml::Class::Create(meta);

		DataValueContainer::meta = ::Uml::Class::Create(meta);

		DeploymentPlan::meta = ::Uml::Class::Create(meta);
		DeploymentPlan::meta_label = ::Uml::Attribute::Create(DeploymentPlan::meta);
		DeploymentPlan::meta_UUID = ::Uml::Attribute::Create(DeploymentPlan::meta);

		DeploymentPlans::meta = ::Uml::Class::Create(meta);
		DeploymentPlans::meta_name = ::Uml::Attribute::Create(DeploymentPlans::meta);

		Deploys::meta = ::Uml::Class::Create(meta);

		Discriminator::meta = ::Uml::Class::Create(meta);

		DisplayNode::meta = ::Uml::Class::Create(meta);

		DoWhileState::meta = ::Uml::Class::Create(meta);

		Domain::meta = ::Uml::Class::Create(meta);
		Domain::meta_UUID = ::Uml::Attribute::Create(Domain::meta);
		Domain::meta_label = ::Uml::Attribute::Create(Domain::meta);

		DoubleNumber::meta = ::Uml::Class::Create(meta);

		DstEdge::meta = ::Uml::Class::Create(meta);

		ECBehavior::meta = ::Uml::Class::Create(meta);
		ECBehavior::meta_SupplierBasedFiltering = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_ConsumerBasedFiltering = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_DisconnectDanglingConnections = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_MultithreadedConsumer = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_DispatchingMultithreadingLevel = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_MultithreadedSupplier = ::Uml::Attribute::Create(ECBehavior::meta);

		ECRequirements::meta = ::Uml::Class::Create(meta);
		ECRequirements::meta_ConfigureRTQoS = ::Uml::Attribute::Create(ECRequirements::meta);

		ECRole::meta = ::Uml::Class::Create(meta);
		ECRole::meta_ECFilterType = ::Uml::Attribute::Create(ECRole::meta);
		ECRole::meta_rolekind = ::Uml::Attribute::Create(ECRole::meta);

		Edge::meta = ::Uml::Class::Create(meta);

		EdgeProperty::meta = ::Uml::Class::Create(meta);

		Effect::meta = ::Uml::Class::Create(meta);

		EffectBase::meta = ::Uml::Class::Create(meta);
		EffectBase::meta_Postcondition = ::Uml::Attribute::Create(EffectBase::meta);

		Enum::meta = ::Uml::Class::Create(meta);

		EnumValue::meta = ::Uml::Class::Create(meta);

		Environment::meta = ::Uml::Class::Create(meta);

		Event::meta = ::Uml::Class::Create(meta);

		EventPort::meta = ::Uml::Class::Create(meta);

		EventRef::meta = ::Uml::Class::Create(meta);

		EventSinkDelegate::meta = ::Uml::Class::Create(meta);

		EventSourceDelegate::meta = ::Uml::Class::Create(meta);

		EventType::meta = ::Uml::Class::Create(meta);

		Exception::meta = ::Uml::Class::Create(meta);

		ExceptionRef::meta = ::Uml::Class::Create(meta);

		ExceptionType::meta = ::Uml::Class::Create(meta);

		ExecutorProject::meta = ::Uml::Class::Create(meta);

		ExtResourceConn::meta = ::Uml::Class::Create(meta);

		ExtendPortEnd::meta = ::Uml::Class::Create(meta);

		ExtendedDelegate::meta = ::Uml::Class::Create(meta);

		ExtendedPort::meta = ::Uml::Class::Create(meta);

		ExtendedPortBase::meta = ::Uml::Class::Create(meta);

		ExtendedPortDelegate::meta = ::Uml::Class::Create(meta);

		ExtendedPortInstance::meta = ::Uml::Class::Create(meta);

		ExtendedPortInstanceBase::meta = ::Uml::Class::Create(meta);

		ExternalDelegate::meta = ::Uml::Class::Create(meta);

		ExternalPort::meta = ::Uml::Class::Create(meta);
		ExternalPort::meta_location = ::Uml::Attribute::Create(ExternalPort::meta);

		ExternalPortEnd::meta = ::Uml::Class::Create(meta);

		ExternalResources::meta = ::Uml::Class::Create(meta);

		FacetDelegate::meta = ::Uml::Class::Create(meta);

		FactoryOperation::meta = ::Uml::Class::Create(meta);

		File::meta = ::Uml::Class::Create(meta);
		File::meta_Path = ::Uml::Attribute::Create(File::meta);

		FileRef::meta = ::Uml::Class::Create(meta);

		Finish::meta = ::Uml::Class::Create(meta);

		FixedIterationBenchmarks::meta = ::Uml::Class::Create(meta);
		FixedIterationBenchmarks::meta_benchmarkIterations = ::Uml::Attribute::Create(FixedIterationBenchmarks::meta);

		FloatNumber::meta = ::Uml::Class::Create(meta);

		FloatingPointType::meta = ::Uml::Class::Create(meta);

		ForState::meta = ::Uml::Class::Create(meta);
		ForState::meta_InitialCondition = ::Uml::Attribute::Create(ForState::meta);
		ForState::meta_IncrementExpr = ::Uml::Attribute::Create(ForState::meta);

		GenericObject::meta = ::Uml::Class::Create(meta);

		GenericValue::meta = ::Uml::Class::Create(meta);

		GenericValueObject::meta = ::Uml::Class::Create(meta);

		GetException::meta = ::Uml::Class::Create(meta);

		GraphVertex::meta = ::Uml::Class::Create(meta);

		HasExceptions::meta = ::Uml::Class::Create(meta);

		HasOperations::meta = ::Uml::Class::Create(meta);

		Implemenation::meta = ::Uml::Class::Create(meta);
		Implemenation::meta_label = ::Uml::Attribute::Create(Implemenation::meta);
		Implemenation::meta_UUID = ::Uml::Attribute::Create(Implemenation::meta);

		Implementation::meta = ::Uml::Class::Create(meta);

		ImplementationArtifact::meta = ::Uml::Class::Create(meta);
		ImplementationArtifact::meta_operatingSystem = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_configuration = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_artifactVersion = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_architecture = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_label = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_UUID = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_location = ::Uml::Attribute::Create(ImplementationArtifact::meta);

		ImplementationArtifactReference::meta = ::Uml::Class::Create(meta);

		ImplementationArtifacts::meta = ::Uml::Class::Create(meta);
		ImplementationArtifacts::meta_name = ::Uml::Attribute::Create(ImplementationArtifacts::meta);

		ImplementationCapability::meta = ::Uml::Class::Create(meta);

		ImplementationContainer::meta = ::Uml::Class::Create(meta);

		ImplementationDependency::meta = ::Uml::Class::Create(meta);
		ImplementationDependency::meta_requiredType = ::Uml::Attribute::Create(ImplementationDependency::meta);

		ImplementationDependsOn::meta = ::Uml::Class::Create(meta);

		ImplementationRequirement::meta = ::Uml::Class::Create(meta);
		ImplementationRequirement::meta_componentPort = ::Uml::Attribute::Create(ImplementationRequirement::meta);
		ImplementationRequirement::meta_ResourceUsageKind = ::Uml::Attribute::Create(ImplementationRequirement::meta);
		ImplementationRequirement::meta_resourcePort = ::Uml::Attribute::Create(ImplementationRequirement::meta);

		Implements::meta = ::Uml::Class::Create(meta);

		InEventPort::meta = ::Uml::Class::Create(meta);

		InEventPortDelegate::meta = ::Uml::Class::Create(meta);

		InEventPortEnd::meta = ::Uml::Class::Create(meta);

		InEventPortInstance::meta = ::Uml::Class::Create(meta);

		InParameter::meta = ::Uml::Class::Create(meta);

		InfoProperty::meta = ::Uml::Class::Create(meta);

		Inheritable::meta = ::Uml::Class::Create(meta);

		Inherits::meta = ::Uml::Class::Create(meta);

		InoutParameter::meta = ::Uml::Class::Create(meta);

		Input::meta = ::Uml::Class::Create(meta);

		InputAction::meta = ::Uml::Class::Create(meta);

		InputEffect::meta = ::Uml::Class::Create(meta);

		InstanceMapping::meta = ::Uml::Class::Create(meta);

		IntegerType::meta = ::Uml::Class::Create(meta);

		Interconnect::meta = ::Uml::Class::Create(meta);
		Interconnect::meta_label = ::Uml::Attribute::Create(Interconnect::meta);

		InterconnectConnection::meta = ::Uml::Class::Create(meta);

		InterfaceDefinitions::meta = ::Uml::Class::Create(meta);
		InterfaceDefinitions::meta_name = ::Uml::Attribute::Create(InterfaceDefinitions::meta);

		Invoke::meta = ::Uml::Class::Create(meta);

		Jitter::meta = ::Uml::Class::Create(meta);

		Key::meta = ::Uml::Class::Create(meta);

		KeyMember::meta = ::Uml::Class::Create(meta);

		Label::meta = ::Uml::Class::Create(meta);

		LabelConnection::meta = ::Uml::Class::Create(meta);

		Latency::meta = ::Uml::Class::Create(meta);

		LongDoubleNumber::meta = ::Uml::Class::Create(meta);

		LongInteger::meta = ::Uml::Class::Create(meta);

		LongLongInteger::meta = ::Uml::Class::Create(meta);

		LookupKey::meta = ::Uml::Class::Create(meta);

		LookupKeyType::meta = ::Uml::Class::Create(meta);

		LookupOperation::meta = ::Uml::Class::Create(meta);

		LoopState::meta = ::Uml::Class::Create(meta);
		LoopState::meta_LoopingCondition = ::Uml::Attribute::Create(LoopState::meta);

		LoopTransition::meta = ::Uml::Class::Create(meta);

		MPC::meta = ::Uml::Class::Create(meta);

		MakeMemberPrivate::meta = ::Uml::Class::Create(meta);

		Manageable::meta = ::Uml::Class::Create(meta);

		ManagesComponent::meta = ::Uml::Class::Create(meta);

		Maximum::meta = ::Uml::Class::Create(meta);

		Member::meta = ::Uml::Class::Create(meta);

		MemberType::meta = ::Uml::Class::Create(meta);

		MetricConnection::meta = ::Uml::Class::Create(meta);

		MetricsBase::meta = ::Uml::Class::Create(meta);
		MetricsBase::meta_fileName = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_warmup = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_iterations = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_priority = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_rate = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_resolution = ::Uml::Attribute::Create(MetricsBase::meta);

		MgaObject::meta = ::Uml::Class::Create(meta);
		MgaObject::meta_name = ::Uml::Attribute::Create(MgaObject::meta);
		MgaObject::meta_position = ::Uml::Attribute::Create(MgaObject::meta);

		Minimum::meta = ::Uml::Class::Create(meta);

		MirrorDelegate::meta = ::Uml::Class::Create(meta);

		MirrorPort::meta = ::Uml::Class::Create(meta);

		MirrorPortDelegate::meta = ::Uml::Class::Create(meta);

		MirrorPortInstance::meta = ::Uml::Class::Create(meta);

		MirrorPortInstanceBase::meta = ::Uml::Class::Create(meta);

		MonolithDeployRequirement::meta = ::Uml::Class::Create(meta);

		MonolithExecParameter::meta = ::Uml::Class::Create(meta);

		MonolithicImplementation::meta = ::Uml::Class::Create(meta);
		MonolithicImplementation::meta_defaultVersion = ::Uml::Attribute::Create(MonolithicImplementation::meta);

		MonolithicImplementationBase::meta = ::Uml::Class::Create(meta);

		MonolithprimaryArtifact::meta = ::Uml::Class::Create(meta);

		MultiInput::meta = ::Uml::Class::Create(meta);

		MultiInputAction::meta = ::Uml::Class::Create(meta);

		MultiInputBase::meta = ::Uml::Class::Create(meta);

		MultiOutputBase::meta = ::Uml::Class::Create(meta);

		MultipleServiceRequests::meta = ::Uml::Class::Create(meta);
		MultipleServiceRequests::meta_minimum_simultaneous_service_level = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_simultaneous_service_execution = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_buffer_service_requests = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_maximum_simultaneous_service_level = ::Uml::Attribute::Create(MultipleServiceRequests::meta);

		NameParameter::meta = ::Uml::Class::Create(meta);

		NamedType::meta = ::Uml::Class::Create(meta);

		NativeValue::meta = ::Uml::Class::Create(meta);

		NoInheritable::meta = ::Uml::Class::Create(meta);

		Node::meta = ::Uml::Class::Create(meta);
		Node::meta_label = ::Uml::Attribute::Create(Node::meta);
		Node::meta_operatingSystem = ::Uml::Attribute::Create(Node::meta);
		Node::meta_architecture = ::Uml::Attribute::Create(Node::meta);

		NodeReference::meta = ::Uml::Class::Create(meta);

		Object::meta = ::Uml::Class::Create(meta);
		Object::meta_InterfaceSemantics = ::Uml::Attribute::Create(Object::meta);
		Object::meta_SupportsAsync = ::Uml::Attribute::Create(Object::meta);

		ObjectByValue::meta = ::Uml::Class::Create(meta);
		ObjectByValue::meta_abstract = ::Uml::Attribute::Create(ObjectByValue::meta);

		ObjectPort::meta = ::Uml::Class::Create(meta);

		OnewayOperation::meta = ::Uml::Class::Create(meta);

		Operation::meta = ::Uml::Class::Create(meta);

		OperationBase::meta = ::Uml::Class::Create(meta);

		OperationRef::meta = ::Uml::Class::Create(meta);

		OutEventPort::meta = ::Uml::Class::Create(meta);
		OutEventPort::meta_single_destination = ::Uml::Attribute::Create(OutEventPort::meta);
		OutEventPort::meta_out_event_port_type = ::Uml::Attribute::Create(OutEventPort::meta);

		OutEventPortDelegate::meta = ::Uml::Class::Create(meta);

		OutEventPortEnd::meta = ::Uml::Class::Create(meta);

		OutEventPortInstance::meta = ::Uml::Class::Create(meta);

		OutParameter::meta = ::Uml::Class::Create(meta);

		OutputAction::meta = ::Uml::Class::Create(meta);

		Package::meta = ::Uml::Class::Create(meta);

		PackageConfBasePackage::meta = ::Uml::Class::Create(meta);

		PackageConfConfigProperty::meta = ::Uml::Class::Create(meta);

		PackageConfReference::meta = ::Uml::Class::Create(meta);

		PackageConfSelectRequirement::meta = ::Uml::Class::Create(meta);

		PackageConfSpecializedConfig::meta = ::Uml::Class::Create(meta);

		PackageConfigProperty::meta = ::Uml::Class::Create(meta);

		PackageConfiguration::meta = ::Uml::Class::Create(meta);
		PackageConfiguration::meta_label = ::Uml::Attribute::Create(PackageConfiguration::meta);
		PackageConfiguration::meta_UUID = ::Uml::Attribute::Create(PackageConfiguration::meta);

		PackageConfigurationContainer::meta = ::Uml::Class::Create(meta);

		PackageConfigurationReference::meta = ::Uml::Class::Create(meta);

		PackageConfigurations::meta = ::Uml::Class::Create(meta);
		PackageConfigurations::meta_name = ::Uml::Attribute::Create(PackageConfigurations::meta);

		PackageContainer::meta = ::Uml::Class::Create(meta);

		PackageInfoProperty::meta = ::Uml::Class::Create(meta);

		PackageInterface::meta = ::Uml::Class::Create(meta);

		PackageType::meta = ::Uml::Class::Create(meta);

		ParameterType::meta = ::Uml::Class::Create(meta);

		Path::meta = ::Uml::Class::Create(meta);

		PathDiagrams::meta = ::Uml::Class::Create(meta);
		PathDiagrams::meta_name = ::Uml::Attribute::Create(PathDiagrams::meta);

		PathProperty::meta = ::Uml::Class::Create(meta);

		PathReference::meta = ::Uml::Class::Create(meta);

		Paths::meta = ::Uml::Class::Create(meta);

		PeriodicBenchmarks::meta = ::Uml::Class::Create(meta);
		PeriodicBenchmarks::meta_timeperiod = ::Uml::Attribute::Create(PeriodicBenchmarks::meta);

		PeriodicEvent::meta = ::Uml::Class::Create(meta);
		PeriodicEvent::meta_Hertz = ::Uml::Attribute::Create(PeriodicEvent::meta);
		PeriodicEvent::meta_Distribution = ::Uml::Attribute::Create(PeriodicEvent::meta);

		Port::meta = ::Uml::Class::Create(meta);

		PortInstance::meta = ::Uml::Class::Create(meta);

		PortType::meta = ::Uml::Class::Create(meta);

		PredefinedType::meta = ::Uml::Class::Create(meta);

		PredefinedTypes::meta = ::Uml::Class::Create(meta);
		PredefinedTypes::meta_name = ::Uml::Attribute::Create(PredefinedTypes::meta);

		Prefixable::meta = ::Uml::Class::Create(meta);
		Prefixable::meta_PrefixTag = ::Uml::Attribute::Create(Prefixable::meta);

		PrivateFlag::meta = ::Uml::Class::Create(meta);

		Project::meta = ::Uml::Class::Create(meta);

		Property::meta = ::Uml::Class::Create(meta);

		PropertyMapping::meta = ::Uml::Class::Create(meta);

		Provideable::meta = ::Uml::Class::Create(meta);

		ProvidedRequestPort::meta = ::Uml::Class::Create(meta);

		ProvidedRequestPortDelegate::meta = ::Uml::Class::Create(meta);

		ProvidedRequestPortEnd::meta = ::Uml::Class::Create(meta);

		ProvidedRequestPortInstance::meta = ::Uml::Class::Create(meta);

		Publish::meta = ::Uml::Class::Create(meta);

		QueryAction::meta = ::Uml::Class::Create(meta);

		QueryInput::meta = ::Uml::Class::Create(meta);

		QueryInputAction::meta = ::Uml::Class::Create(meta);

		QueryInputBase::meta = ::Uml::Class::Create(meta);

		RTRequirements::meta = ::Uml::Class::Create(meta);

		ReadonlyAttribute::meta = ::Uml::Class::Create(meta);

		ReceptacleDelegate::meta = ::Uml::Class::Create(meta);

		RequestAction::meta = ::Uml::Class::Create(meta);
		RequestAction::meta_MethodName = ::Uml::Attribute::Create(RequestAction::meta);

		RequiredRequestPort::meta = ::Uml::Class::Create(meta);
		RequiredRequestPort::meta_multiple_connections = ::Uml::Attribute::Create(RequiredRequestPort::meta);
		RequiredRequestPort::meta_AsyncCommunication = ::Uml::Attribute::Create(RequiredRequestPort::meta);

		RequiredRequestPortDelegate::meta = ::Uml::Class::Create(meta);

		RequiredRequestPortEnd::meta = ::Uml::Class::Create(meta);

		RequiredRequestPortInstance::meta = ::Uml::Class::Create(meta);

		Requirement::meta = ::Uml::Class::Create(meta);

		RequirementBase::meta = ::Uml::Class::Create(meta);
		RequirementBase::meta_resourceType = ::Uml::Attribute::Create(RequirementBase::meta);

		RequirementSatisfier::meta = ::Uml::Class::Create(meta);
		RequirementSatisfier::meta_resourceType = ::Uml::Attribute::Create(RequirementSatisfier::meta);

		Resource::meta = ::Uml::Class::Create(meta);

		ReturnType::meta = ::Uml::Class::Create(meta);

		RootFolder::meta = ::Uml::Class::Create(meta);
		RootFolder::meta_name = ::Uml::Attribute::Create(RootFolder::meta);

		SatisfierProperty::meta = ::Uml::Class::Create(meta);
		SatisfierProperty::meta_SatisfierPropertyKind = ::Uml::Attribute::Create(SatisfierProperty::meta);
		SatisfierProperty::meta_DataValue = ::Uml::Attribute::Create(SatisfierProperty::meta);
		SatisfierProperty::meta_dynamic = ::Uml::Attribute::Create(SatisfierProperty::meta);

		SendsTo::meta = ::Uml::Class::Create(meta);

		ServantProject::meta = ::Uml::Class::Create(meta);

		ServiceConsumer::meta = ::Uml::Class::Create(meta);
		ServiceConsumer::meta_prioritize_service_invocations = ::Uml::Attribute::Create(ServiceConsumer::meta);

		ServiceLevels::meta = ::Uml::Class::Create(meta);
		ServiceLevels::meta_varying_service_levels = ::Uml::Attribute::Create(ServiceLevels::meta);

		ServiceProvider::meta = ::Uml::Class::Create(meta);
		ServiceProvider::meta_fixed_prioirty_service_execution = ::Uml::Attribute::Create(ServiceProvider::meta);

		SetException::meta = ::Uml::Class::Create(meta);

		SharedResource::meta = ::Uml::Class::Create(meta);

		Shares::meta = ::Uml::Class::Create(meta);

		ShortInteger::meta = ::Uml::Class::Create(meta);

		SignedIntegerType::meta = ::Uml::Class::Create(meta);

		SimpleProperty::meta = ::Uml::Class::Create(meta);
		SimpleProperty::meta_Value = ::Uml::Attribute::Create(SimpleProperty::meta);

		SimpleType::meta = ::Uml::Class::Create(meta);

		SingleInputBase::meta = ::Uml::Class::Create(meta);

		SingleOutputBase::meta = ::Uml::Class::Create(meta);

		SrcEdge::meta = ::Uml::Class::Create(meta);

		State::meta = ::Uml::Class::Create(meta);

		StateBase::meta = ::Uml::Class::Create(meta);

		String::meta = ::Uml::Class::Create(meta);

		StringType::meta = ::Uml::Class::Create(meta);

		StubProject::meta = ::Uml::Class::Create(meta);

		Supports::meta = ::Uml::Class::Create(meta);

		SupportsInstance::meta = ::Uml::Class::Create(meta);

		SupportsInterfaces::meta = ::Uml::Class::Create(meta);

		SwitchedAggregate::meta = ::Uml::Class::Create(meta);

		Taggable::meta = ::Uml::Class::Create(meta);
		Taggable::meta_VersionTag = ::Uml::Attribute::Create(Taggable::meta);
		Taggable::meta_SpecifyIdTag = ::Uml::Attribute::Create(Taggable::meta);

		TargetRequiredRequestPort::meta = ::Uml::Class::Create(meta);

		Targets::meta = ::Uml::Class::Create(meta);
		Targets::meta_name = ::Uml::Attribute::Create(Targets::meta);

		Task::meta = ::Uml::Class::Create(meta);

		TaskSet::meta = ::Uml::Class::Create(meta);
		TaskSet::meta_priority = ::Uml::Attribute::Create(TaskSet::meta);
		TaskSet::meta_rate = ::Uml::Attribute::Create(TaskSet::meta);

		TemplatePackageAlias::meta = ::Uml::Class::Create(meta);

		TemplatePackageInstance::meta = ::Uml::Class::Create(meta);

		TemplateParameter::meta = ::Uml::Class::Create(meta);

		TemplateParameterReference::meta = ::Uml::Class::Create(meta);

		TemplateParameterValue::meta = ::Uml::Class::Create(meta);

		TemplateParameterValueType::meta = ::Uml::Class::Create(meta);

		Terminal::meta = ::Uml::Class::Create(meta);

		TerminalEffect::meta = ::Uml::Class::Create(meta);

		TerminalTransition::meta = ::Uml::Class::Create(meta);

		Throughput::meta = ::Uml::Class::Create(meta);

		TimeProbe::meta = ::Uml::Class::Create(meta);

		TimerConnection::meta = ::Uml::Class::Create(meta);

		TimerEventSinkConn::meta = ::Uml::Class::Create(meta);

		TopLevelBehavior::meta = ::Uml::Class::Create(meta);

		TopLevelPackage::meta = ::Uml::Class::Create(meta);

		TopLevelPackageContainer::meta = ::Uml::Class::Create(meta);

		TopLevelPackages::meta = ::Uml::Class::Create(meta);
		TopLevelPackages::meta_name = ::Uml::Attribute::Create(TopLevelPackages::meta);

		Transition::meta = ::Uml::Class::Create(meta);

		TriggerBenchmarks::meta = ::Uml::Class::Create(meta);

		TwowayOperation::meta = ::Uml::Class::Create(meta);

		TypeEncoding::meta = ::Uml::Class::Create(meta);

		TypeKind::meta = ::Uml::Class::Create(meta);

		TypeParameter::meta = ::Uml::Class::Create(meta);
		TypeParameter::meta_Type = ::Uml::Attribute::Create(TypeParameter::meta);

		UnsignedIntegerType::meta = ::Uml::Class::Create(meta);

		UnsignedLongInteger::meta = ::Uml::Class::Create(meta);

		UnsignedLongLongInteger::meta = ::Uml::Class::Create(meta);

		UnsignedShortInteger::meta = ::Uml::Class::Create(meta);

		ValueObject::meta = ::Uml::Class::Create(meta);

		Variable::meta = ::Uml::Class::Create(meta);
		Variable::meta_InitialValue = ::Uml::Attribute::Create(Variable::meta);

		WhileState::meta = ::Uml::Class::Create(meta);

		WideChar::meta = ::Uml::Class::Create(meta);

		WideString::meta = ::Uml::Class::Create(meta);

		WorkLoadOperationConnection::meta = ::Uml::Class::Create(meta);

		Worker::meta = ::Uml::Class::Create(meta);
		Worker::meta_Abstract = ::Uml::Attribute::Create(Worker::meta);

		WorkerFile::meta = ::Uml::Class::Create(meta);
		WorkerFile::meta_Location = ::Uml::Attribute::Create(WorkerFile::meta);

		WorkerLibraries::meta = ::Uml::Class::Create(meta);
		WorkerLibraries::meta_name = ::Uml::Attribute::Create(WorkerLibraries::meta);

		WorkerLibrary::meta = ::Uml::Class::Create(meta);
		WorkerLibrary::meta_Location = ::Uml::Attribute::Create(WorkerLibrary::meta);

		WorkerPackage::meta = ::Uml::Class::Create(meta);

		WorkerPackageBase::meta = ::Uml::Class::Create(meta);

		WorkerType::meta = ::Uml::Class::Create(meta);

		WorkloadCharacteristics::meta = ::Uml::Class::Create(meta);

		Workspaces::meta = ::Uml::Class::Create(meta);

		package::meta = ::Uml::Class::Create(meta);

	}

	void InitMeta() {
		// classes, with attributes, constraints and constraint definitions
		::Uml::InitClassProps(Action::meta, "Action", false, "Model", NULL);

		::Uml::InitClassProps(ActionBase::meta, "ActionBase", true, "Model", NULL);
		::Uml::InitAttributeProps(ActionBase::meta_Duration, "Duration", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ActionType::meta, "ActionType", false, "Reference", NULL);

		::Uml::InitClassProps(Aggregate::meta, "Aggregate", false, "Model", NULL);

		::Uml::InitClassProps(Alias::meta, "Alias", false, "Reference", NULL);

		::Uml::InitClassProps(ApplicationTask::meta, "ApplicationTask", false, "Atom", NULL);

		::Uml::InitClassProps(ArrayMember::meta, "ArrayMember", false, "Reference", NULL);
		::Uml::InitAttributeProps(ArrayMember::meta_Size, "Size", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ArtifactContainer::meta, "ArtifactContainer", false, "Model", NULL);

		::Uml::InitClassProps(ArtifactDependency::meta, "ArtifactDependency", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactDependsOn::meta, "ArtifactDependsOn", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactDeployRequirement::meta, "ArtifactDeployRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactExecParameter::meta, "ArtifactExecParameter", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactInfoProperty::meta, "ArtifactInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyConfigProperty::meta, "AssemblyConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyConfigPropertyEnd::meta, "AssemblyConfigPropertyEnd", true, "FCO", NULL);

		::Uml::InitClassProps(AssemblyselectRequirement::meta, "AssemblyselectRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(Attribute::meta, "Attribute", false, "Model", NULL);

		::Uml::InitClassProps(AttributeDelegate::meta, "AttributeDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeInstance::meta, "AttributeInstance", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeMapping::meta, "AttributeMapping", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeMappingDelegate::meta, "AttributeMappingDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeMappingValue::meta, "AttributeMappingValue", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeMember::meta, "AttributeMember", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeValue::meta, "AttributeValue", false, "Connection", NULL);

		::Uml::InitClassProps(Average::meta, "Average", false, "Atom", NULL);

		::Uml::InitClassProps(BehaviorInputAction::meta, "BehaviorInputAction", true, "Model", NULL);

		::Uml::InitClassProps(BehaviorModel::meta, "BehaviorModel", true, "Model", NULL);

		::Uml::InitClassProps(BenchmarkAnalysis::meta, "BenchmarkAnalysis", false, "Model", NULL);

		::Uml::InitClassProps(BenchmarkCharacteristics::meta, "BenchmarkCharacteristics", false, "Connection", NULL);

		::Uml::InitClassProps(BenchmarkType::meta, "BenchmarkType", true, "FCO", NULL);

		::Uml::InitClassProps(Boolean::meta, "Boolean", false, "Atom", NULL);

		::Uml::InitClassProps(Boxed::meta, "Boxed", false, "Reference", NULL);

		::Uml::InitClassProps(BranchState::meta, "BranchState", false, "Atom", NULL);

		::Uml::InitClassProps(BranchTransition::meta, "BranchTransition", false, "Connection", NULL);
		::Uml::InitAttributeProps(BranchTransition::meta_Condition, "Condition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Bridge::meta, "Bridge", false, "Model", NULL);
		::Uml::InitAttributeProps(Bridge::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(BridgeConnection::meta, "BridgeConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Byte::meta, "Byte", false, "Atom", NULL);

		::Uml::InitClassProps(CallAction::meta, "CallAction", false, "Model", NULL);

		::Uml::InitClassProps(Capability::meta, "Capability", false, "Model", NULL);

		::Uml::InitClassProps(Char::meta, "Char", false, "Atom", NULL);

		::Uml::InitClassProps(CharType::meta, "CharType", true, "Atom", NULL);

		::Uml::InitClassProps(Collection::meta, "Collection", false, "Reference", NULL);
		::Uml::InitAttributeProps(Collection::meta_bound, "bound", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(CollectionParameter::meta, "CollectionParameter", false, "Reference", NULL);

		::Uml::InitClassProps(CollocationGroup::meta, "CollocationGroup", false, "Set", NULL);

		::Uml::InitClassProps(CollocationGroupMember::meta, "CollocationGroupMember", true, "FCO", NULL);

		::Uml::InitClassProps(CollocationGroupProperty::meta, "CollocationGroupProperty", false, "Connection", NULL);

		::Uml::InitClassProps(CommonPortAttrs::meta, "CommonPortAttrs", true, "FCO", NULL);
		vector<string> CommonPortAttrs_optional_dva;
		CommonPortAttrs_optional_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_optional, "optional", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_optional_dva);
		vector<string> CommonPortAttrs_exclusiveUser_dva;
		CommonPortAttrs_exclusiveUser_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_exclusiveUser, "exclusiveUser", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_exclusiveUser_dva);
		vector<string> CommonPortAttrs_exclusiveProvider_dva;
		CommonPortAttrs_exclusiveProvider_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_exclusiveProvider, "exclusiveProvider", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_exclusiveProvider_dva);

		::Uml::InitClassProps(CompRef::meta, "CompRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComplexProperty::meta, "ComplexProperty", false, "Model", NULL);

		::Uml::InitClassProps(ComplexType::meta, "ComplexType", true, "FCO", NULL);

		::Uml::InitClassProps(ComplexTypeReference::meta, "ComplexTypeReference", false, "Reference", NULL);

		::Uml::InitClassProps(Component::meta, "Component", false, "Model", NULL);
		::Uml::InitAttributeProps(Component::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Component::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentAnalyses::meta, "ComponentAnalyses", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentAnalyses::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentAssembly::meta, "ComponentAssembly", false, "Model", NULL);

		::Uml::InitClassProps(ComponentAssemblyReference::meta, "ComponentAssemblyReference", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentBuild::meta, "ComponentBuild", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentBuild::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentConfigProperty::meta, "ComponentConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentContainer::meta, "ComponentContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactory::meta, "ComponentFactory", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactoryImplementationContainer::meta, "ComponentFactoryImplementationContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactoryImplementations::meta, "ComponentFactoryImplementations", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentFactoryImplementations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentFactoryInstance::meta, "ComponentFactoryInstance", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentFactoryRef::meta, "ComponentFactoryRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentImplementation::meta, "ComponentImplementation", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentImplementationArtifact::meta, "ComponentImplementationArtifact", false, "Reference", NULL);
		::Uml::InitAttributeProps(ComponentImplementationArtifact::meta_EntryPoint, "EntryPoint", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentImplementationContainer::meta, "ComponentImplementationContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentImplementationReference::meta, "ComponentImplementationReference", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentImplementations::meta, "ComponentImplementations", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentImplementations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentInfoProperty::meta, "ComponentInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentInherits::meta, "ComponentInherits", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentInstance::meta, "ComponentInstance", false, "Model", NULL);
		::Uml::InitAttributeProps(ComponentInstance::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentInstanceRef::meta, "ComponentInstanceRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentInstanceType::meta, "ComponentInstanceType", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentLib::meta, "ComponentLib", true, "FCO", NULL);
		::Uml::InitAttributeProps(ComponentLib::meta_libraryexport, "libraryexport", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentLib::meta_sharedname, "sharedname", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentLib::meta_ORBServices, "ORBServices", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentOperation::meta, "ComponentOperation", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentPackage::meta, "ComponentPackage", false, "Atom", NULL);
		::Uml::InitAttributeProps(ComponentPackage::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackage::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentPackageReference::meta, "ComponentPackageReference", false, "Reference", NULL);
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredUUID, "requiredUUID", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredName, "requiredName", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredType, "requiredType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentPackages::meta, "ComponentPackages", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentPackages::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentProperty::meta, "ComponentProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentPropertyDescription::meta, "ComponentPropertyDescription", false, "Model", NULL);

		::Uml::InitClassProps(ComponentRef::meta, "ComponentRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentServantArtifact::meta, "ComponentServantArtifact", false, "Reference", NULL);
		::Uml::InitAttributeProps(ComponentServantArtifact::meta_EntryPoint, "EntryPoint", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentTypes::meta, "ComponentTypes", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentTypes::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConfigProperty::meta, "ConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ConnectedComponent::meta, "ConnectedComponent", false, "Model", NULL);

		::Uml::InitClassProps(ConnectorImplementation::meta, "ConnectorImplementation", false, "Atom", NULL);

		::Uml::InitClassProps(ConnectorImplementationContainer::meta, "ConnectorImplementationContainer", false, "Model", NULL);

		::Uml::InitClassProps(ConnectorImplementationType::meta, "ConnectorImplementationType", false, "Reference", NULL);

		::Uml::InitClassProps(ConnectorImplementations::meta, "ConnectorImplementations", false, "Folder", NULL);
		::Uml::InitAttributeProps(ConnectorImplementations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConnectorImplements::meta, "ConnectorImplements", false, "Connection", NULL);

		::Uml::InitClassProps(ConnectorInherits::meta, "ConnectorInherits", false, "Reference", NULL);

		::Uml::InitClassProps(ConnectorInstance::meta, "ConnectorInstance", false, "Model", NULL);
		::Uml::InitAttributeProps(ConnectorInstance::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConnectorObject::meta, "ConnectorObject", false, "Model", NULL);
		::Uml::InitAttributeProps(ConnectorObject::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConnectorToFacet::meta, "ConnectorToFacet", false, "Connection", NULL);
		::Uml::InitAttributeProps(ConnectorToFacet::meta_InnerName, "InnerName", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConnectorToReceptacle::meta, "ConnectorToReceptacle", false, "Connection", NULL);
		::Uml::InitAttributeProps(ConnectorToReceptacle::meta_InnerName, "InnerName", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConnectorType::meta, "ConnectorType", false, "Reference", NULL);

		::Uml::InitClassProps(Constant::meta, "Constant", false, "Reference", NULL);
		::Uml::InitAttributeProps(Constant::meta_value, "value", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConstantType::meta, "ConstantType", true, "FCO", NULL);

		::Uml::InitClassProps(Consume::meta, "Consume", false, "Connection", NULL);

		::Uml::InitClassProps(CriticalPath::meta, "CriticalPath", false, "Connection", NULL);

		::Uml::InitClassProps(DataAnalysisBase::meta, "DataAnalysisBase", true, "FCO", NULL);

		::Uml::InitClassProps(DataType::meta, "DataType", false, "Reference", NULL);

		::Uml::InitClassProps(DataValue::meta, "DataValue", false, "Reference", NULL);
		::Uml::InitAttributeProps(DataValue::meta_Value, "Value", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(DataValueBase::meta, "DataValueBase", true, "FCO", NULL);

		::Uml::InitClassProps(DataValueContainer::meta, "DataValueContainer", false, "Model", NULL);

		::Uml::InitClassProps(DeploymentPlan::meta, "DeploymentPlan", false, "Model", NULL);
		::Uml::InitAttributeProps(DeploymentPlan::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(DeploymentPlan::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(DeploymentPlans::meta, "DeploymentPlans", false, "Folder", NULL);
		::Uml::InitAttributeProps(DeploymentPlans::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Deploys::meta, "Deploys", false, "Connection", NULL);

		::Uml::InitClassProps(Discriminator::meta, "Discriminator", false, "Reference", NULL);

		::Uml::InitClassProps(DisplayNode::meta, "DisplayNode", false, "Atom", NULL);

		::Uml::InitClassProps(DoWhileState::meta, "DoWhileState", false, "Atom", NULL);

		::Uml::InitClassProps(Domain::meta, "Domain", false, "Model", NULL);
		::Uml::InitAttributeProps(Domain::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Domain::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(DoubleNumber::meta, "DoubleNumber", false, "Atom", NULL);

		::Uml::InitClassProps(DstEdge::meta, "DstEdge", false, "Connection", NULL);

		::Uml::InitClassProps(ECBehavior::meta, "ECBehavior", false, "Atom", NULL);
		vector<string> ECBehavior_SupplierBasedFiltering_dva;
		ECBehavior_SupplierBasedFiltering_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_SupplierBasedFiltering, "SupplierBasedFiltering", "Boolean", false, false, 1, 1, false, "public", ECBehavior_SupplierBasedFiltering_dva);
		vector<string> ECBehavior_ConsumerBasedFiltering_dva;
		ECBehavior_ConsumerBasedFiltering_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_ConsumerBasedFiltering, "ConsumerBasedFiltering", "Boolean", false, false, 1, 1, false, "public", ECBehavior_ConsumerBasedFiltering_dva);
		vector<string> ECBehavior_DisconnectDanglingConnections_dva;
		ECBehavior_DisconnectDanglingConnections_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_DisconnectDanglingConnections, "DisconnectDanglingConnections", "Boolean", false, false, 1, 1, false, "public", ECBehavior_DisconnectDanglingConnections_dva);
		vector<string> ECBehavior_MultithreadedConsumer_dva;
		ECBehavior_MultithreadedConsumer_dva.push_back("false");
		::Uml::InitAttributeProps(ECBehavior::meta_MultithreadedConsumer, "MultithreadedConsumer", "Boolean", false, false, 1, 1, false, "public", ECBehavior_MultithreadedConsumer_dva);
		::Uml::InitAttributeProps(ECBehavior::meta_DispatchingMultithreadingLevel, "DispatchingMultithreadingLevel", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> ECBehavior_MultithreadedSupplier_dva;
		ECBehavior_MultithreadedSupplier_dva.push_back("false");
		::Uml::InitAttributeProps(ECBehavior::meta_MultithreadedSupplier, "MultithreadedSupplier", "Boolean", false, false, 1, 1, false, "public", ECBehavior_MultithreadedSupplier_dva);

		::Uml::InitClassProps(ECRequirements::meta, "ECRequirements", false, "Model", NULL);
		vector<string> ECRequirements_ConfigureRTQoS_dva;
		ECRequirements_ConfigureRTQoS_dva.push_back("true");
		::Uml::InitAttributeProps(ECRequirements::meta_ConfigureRTQoS, "ConfigureRTQoS", "Boolean", false, false, 1, 1, false, "public", ECRequirements_ConfigureRTQoS_dva);

		::Uml::InitClassProps(ECRole::meta, "ECRole", false, "Atom", NULL);
		vector<string> ECRole_ECFilterType_dva;
		ECRole_ECFilterType_dva.push_back("DISJUNCTION");
		::Uml::InitAttributeProps(ECRole::meta_ECFilterType, "ECFilterType", "String", false, false, 1, 1, false, "public", ECRole_ECFilterType_dva);
		vector<string> ECRole_rolekind_dva;
		ECRole_rolekind_dva.push_back("CONSUMER");
		::Uml::InitAttributeProps(ECRole::meta_rolekind, "rolekind", "String", false, false, 1, 1, false, "public", ECRole_rolekind_dva);

		::Uml::InitClassProps(Edge::meta, "Edge", false, "Atom", NULL);

		::Uml::InitClassProps(EdgeProperty::meta, "EdgeProperty", false, "Connection", NULL);

		::Uml::InitClassProps(Effect::meta, "Effect", false, "Connection", NULL);

		::Uml::InitClassProps(EffectBase::meta, "EffectBase", true, "Connection", NULL);
		::Uml::InitAttributeProps(EffectBase::meta_Postcondition, "Postcondition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Enum::meta, "Enum", false, "Model", NULL);

		::Uml::InitClassProps(EnumValue::meta, "EnumValue", false, "Atom", NULL);

		::Uml::InitClassProps(Environment::meta, "Environment", false, "Atom", NULL);

		::Uml::InitClassProps(Event::meta, "Event", false, "Model", NULL);

		::Uml::InitClassProps(EventPort::meta, "EventPort", true, "FCO", NULL);

		::Uml::InitClassProps(EventRef::meta, "EventRef", false, "Reference", NULL);

		::Uml::InitClassProps(EventSinkDelegate::meta, "EventSinkDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(EventSourceDelegate::meta, "EventSourceDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(EventType::meta, "EventType", true, "FCO", NULL);

		::Uml::InitClassProps(Exception::meta, "Exception", false, "Model", NULL);

		::Uml::InitClassProps(ExceptionRef::meta, "ExceptionRef", false, "Reference", NULL);

		::Uml::InitClassProps(ExceptionType::meta, "ExceptionType", true, "FCO", NULL);

		::Uml::InitClassProps(ExecutorProject::meta, "ExecutorProject", false, "Model", NULL);

		::Uml::InitClassProps(ExtResourceConn::meta, "ExtResourceConn", false, "Connection", NULL);

		::Uml::InitClassProps(ExtendPortEnd::meta, "ExtendPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(ExtendedDelegate::meta, "ExtendedDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(ExtendedPort::meta, "ExtendedPort", false, "Reference", NULL);

		::Uml::InitClassProps(ExtendedPortBase::meta, "ExtendedPortBase", true, "Reference", NULL);

		::Uml::InitClassProps(ExtendedPortDelegate::meta, "ExtendedPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(ExtendedPortInstance::meta, "ExtendedPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(ExtendedPortInstanceBase::meta, "ExtendedPortInstanceBase", true, "FCO", NULL);

		::Uml::InitClassProps(ExternalDelegate::meta, "ExternalDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(ExternalPort::meta, "ExternalPort", false, "Atom", NULL);
		::Uml::InitAttributeProps(ExternalPort::meta_location, "location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ExternalPortEnd::meta, "ExternalPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(ExternalResources::meta, "ExternalResources", false, "Reference", NULL);

		::Uml::InitClassProps(FacetDelegate::meta, "FacetDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(FactoryOperation::meta, "FactoryOperation", false, "Model", NULL);

		::Uml::InitClassProps(File::meta, "File", false, "Model", NULL);
		::Uml::InitAttributeProps(File::meta_Path, "Path", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(FileRef::meta, "FileRef", false, "Reference", NULL);

		::Uml::InitClassProps(Finish::meta, "Finish", false, "Connection", NULL);

		::Uml::InitClassProps(FixedIterationBenchmarks::meta, "FixedIterationBenchmarks", false, "Atom", NULL);
		::Uml::InitAttributeProps(FixedIterationBenchmarks::meta_benchmarkIterations, "benchmarkIterations", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(FloatNumber::meta, "FloatNumber", false, "Atom", NULL);

		::Uml::InitClassProps(FloatingPointType::meta, "FloatingPointType", true, "Atom", NULL);

		::Uml::InitClassProps(ForState::meta, "ForState", false, "Atom", NULL);
		::Uml::InitAttributeProps(ForState::meta_InitialCondition, "InitialCondition", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ForState::meta_IncrementExpr, "IncrementExpr", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(GenericObject::meta, "GenericObject", false, "Atom", NULL);

		::Uml::InitClassProps(GenericValue::meta, "GenericValue", false, "Atom", NULL);

		::Uml::InitClassProps(GenericValueObject::meta, "GenericValueObject", false, "Atom", NULL);

		::Uml::InitClassProps(GetException::meta, "GetException", false, "Reference", NULL);

		::Uml::InitClassProps(GraphVertex::meta, "GraphVertex", true, "FCO", NULL);

		::Uml::InitClassProps(HasExceptions::meta, "HasExceptions", true, "Model", NULL);

		::Uml::InitClassProps(HasOperations::meta, "HasOperations", true, "Model", NULL);

		::Uml::InitClassProps(Implemenation::meta, "Implemenation", true, "FCO", NULL);
		::Uml::InitAttributeProps(Implemenation::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Implemenation::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Implementation::meta, "Implementation", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationArtifact::meta, "ImplementationArtifact", false, "Atom", NULL);
		::Uml::InitAttributeProps(ImplementationArtifact::meta_operatingSystem, "operatingSystem", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_configuration, "configuration", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> ImplementationArtifact_artifactVersion_dva;
		ImplementationArtifact_artifactVersion_dva.push_back("0.0.0.0");
		::Uml::InitAttributeProps(ImplementationArtifact::meta_artifactVersion, "artifactVersion", "String", false, false, 1, 1, false, "public", ImplementationArtifact_artifactVersion_dva);
		::Uml::InitAttributeProps(ImplementationArtifact::meta_architecture, "architecture", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_location, "location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationArtifactReference::meta, "ImplementationArtifactReference", false, "Reference", NULL);

		::Uml::InitClassProps(ImplementationArtifacts::meta, "ImplementationArtifacts", false, "Folder", NULL);
		::Uml::InitAttributeProps(ImplementationArtifacts::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationCapability::meta, "ImplementationCapability", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationContainer::meta, "ImplementationContainer", true, "Model", NULL);

		::Uml::InitClassProps(ImplementationDependency::meta, "ImplementationDependency", false, "Atom", NULL);
		::Uml::InitAttributeProps(ImplementationDependency::meta_requiredType, "requiredType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationDependsOn::meta, "ImplementationDependsOn", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationRequirement::meta, "ImplementationRequirement", false, "Model", NULL);
		::Uml::InitAttributeProps(ImplementationRequirement::meta_componentPort, "componentPort", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> ImplementationRequirement_ResourceUsageKind_dva;
		ImplementationRequirement_ResourceUsageKind_dva.push_back("None");
		::Uml::InitAttributeProps(ImplementationRequirement::meta_ResourceUsageKind, "ResourceUsageKind", "String", false, false, 1, 1, false, "public", ImplementationRequirement_ResourceUsageKind_dva);
		::Uml::InitAttributeProps(ImplementationRequirement::meta_resourcePort, "resourcePort", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Implements::meta, "Implements", false, "Connection", NULL);

		::Uml::InitClassProps(InEventPort::meta, "InEventPort", false, "Reference", NULL);

		::Uml::InitClassProps(InEventPortDelegate::meta, "InEventPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(InEventPortEnd::meta, "InEventPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(InEventPortInstance::meta, "InEventPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(InParameter::meta, "InParameter", false, "Reference", NULL);

		::Uml::InitClassProps(InfoProperty::meta, "InfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(Inheritable::meta, "Inheritable", true, "Model", NULL);

		::Uml::InitClassProps(Inherits::meta, "Inherits", false, "Reference", NULL);

		::Uml::InitClassProps(InoutParameter::meta, "InoutParameter", false, "Reference", NULL);

		::Uml::InitClassProps(Input::meta, "Input", false, "Connection", NULL);

		::Uml::InitClassProps(InputAction::meta, "InputAction", false, "Model", NULL);

		::Uml::InitClassProps(InputEffect::meta, "InputEffect", false, "Connection", NULL);

		::Uml::InitClassProps(InstanceMapping::meta, "InstanceMapping", false, "Connection", NULL);

		::Uml::InitClassProps(IntegerType::meta, "IntegerType", true, "Atom", NULL);

		::Uml::InitClassProps(Interconnect::meta, "Interconnect", false, "Model", NULL);
		::Uml::InitAttributeProps(Interconnect::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(InterconnectConnection::meta, "InterconnectConnection", false, "Connection", NULL);

		::Uml::InitClassProps(InterfaceDefinitions::meta, "InterfaceDefinitions", false, "Folder", NULL);
		::Uml::InitAttributeProps(InterfaceDefinitions::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Invoke::meta, "Invoke", false, "Connection", NULL);

		::Uml::InitClassProps(Jitter::meta, "Jitter", false, "Atom", NULL);

		::Uml::InitClassProps(Key::meta, "Key", false, "Atom", NULL);

		::Uml::InitClassProps(KeyMember::meta, "KeyMember", false, "Connection", NULL);

		::Uml::InitClassProps(Label::meta, "Label", false, "Atom", NULL);

		::Uml::InitClassProps(LabelConnection::meta, "LabelConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Latency::meta, "Latency", false, "Model", NULL);

		::Uml::InitClassProps(LongDoubleNumber::meta, "LongDoubleNumber", false, "Atom", NULL);

		::Uml::InitClassProps(LongInteger::meta, "LongInteger", false, "Atom", NULL);

		::Uml::InitClassProps(LongLongInteger::meta, "LongLongInteger", false, "Atom", NULL);

		::Uml::InitClassProps(LookupKey::meta, "LookupKey", false, "Reference", NULL);

		::Uml::InitClassProps(LookupKeyType::meta, "LookupKeyType", true, "FCO", NULL);

		::Uml::InitClassProps(LookupOperation::meta, "LookupOperation", false, "Model", NULL);

		::Uml::InitClassProps(LoopState::meta, "LoopState", true, "Atom", NULL);
		::Uml::InitAttributeProps(LoopState::meta_LoopingCondition, "LoopingCondition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(LoopTransition::meta, "LoopTransition", false, "Connection", NULL);

		::Uml::InitClassProps(MPC::meta, "MPC", false, "Model", NULL);

		::Uml::InitClassProps(MakeMemberPrivate::meta, "MakeMemberPrivate", false, "Connection", NULL);

		::Uml::InitClassProps(Manageable::meta, "Manageable", true, "FCO", NULL);

		::Uml::InitClassProps(ManagesComponent::meta, "ManagesComponent", false, "Connection", NULL);

		::Uml::InitClassProps(Maximum::meta, "Maximum", false, "Atom", NULL);

		::Uml::InitClassProps(Member::meta, "Member", false, "Reference", NULL);

		::Uml::InitClassProps(MemberType::meta, "MemberType", true, "FCO", NULL);

		::Uml::InitClassProps(MetricConnection::meta, "MetricConnection", false, "Connection", NULL);

		::Uml::InitClassProps(MetricsBase::meta, "MetricsBase", true, "Model", NULL);
		::Uml::InitAttributeProps(MetricsBase::meta_fileName, "fileName", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MetricsBase::meta_warmup, "warmup", "Integer", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MetricsBase::meta_iterations, "iterations", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> MetricsBase_priority_dva;
		MetricsBase_priority_dva.push_back("-1");
		::Uml::InitAttributeProps(MetricsBase::meta_priority, "priority", "Integer", false, false, 1, 1, false, "public", MetricsBase_priority_dva);
		vector<string> MetricsBase_rate_dva;
		MetricsBase_rate_dva.push_back("-1");
		::Uml::InitAttributeProps(MetricsBase::meta_rate, "rate", "Integer", false, false, 1, 1, false, "public", MetricsBase_rate_dva);
		vector<string> MetricsBase_resolution_dva;
		MetricsBase_resolution_dva.push_back("microseconds");
		::Uml::InitAttributeProps(MetricsBase::meta_resolution, "resolution", "String", false, false, 1, 1, false, "public", MetricsBase_resolution_dva);

		::Uml::InitClassProps(MgaObject::meta, "MgaObject", true, NULL, NULL);
		::Uml::InitAttributeProps(MgaObject::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MgaObject::meta_position, "position", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Minimum::meta, "Minimum", false, "Atom", NULL);

		::Uml::InitClassProps(MirrorDelegate::meta, "MirrorDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(MirrorPort::meta, "MirrorPort", false, "Reference", NULL);

		::Uml::InitClassProps(MirrorPortDelegate::meta, "MirrorPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(MirrorPortInstance::meta, "MirrorPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(MirrorPortInstanceBase::meta, "MirrorPortInstanceBase", true, "FCO", NULL);

		::Uml::InitClassProps(MonolithDeployRequirement::meta, "MonolithDeployRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(MonolithExecParameter::meta, "MonolithExecParameter", false, "Connection", NULL);

		::Uml::InitClassProps(MonolithicImplementation::meta, "MonolithicImplementation", false, "Atom", NULL);
		vector<string> MonolithicImplementation_defaultVersion_dva;
		MonolithicImplementation_defaultVersion_dva.push_back("0.0.0.0");
		::Uml::InitAttributeProps(MonolithicImplementation::meta_defaultVersion, "defaultVersion", "String", false, false, 1, 1, false, "public", MonolithicImplementation_defaultVersion_dva);

		::Uml::InitClassProps(MonolithicImplementationBase::meta, "MonolithicImplementationBase", true, "FCO", NULL);

		::Uml::InitClassProps(MonolithprimaryArtifact::meta, "MonolithprimaryArtifact", false, "Connection", NULL);

		::Uml::InitClassProps(MultiInput::meta, "MultiInput", false, "Connection", NULL);

		::Uml::InitClassProps(MultiInputAction::meta, "MultiInputAction", false, "Model", NULL);

		::Uml::InitClassProps(MultiInputBase::meta, "MultiInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(MultiOutputBase::meta, "MultiOutputBase", true, "FCO", NULL);

		::Uml::InitClassProps(MultipleServiceRequests::meta, "MultipleServiceRequests", false, "Atom", NULL);
		vector<string> MultipleServiceRequests_minimum_simultaneous_service_level_dva;
		MultipleServiceRequests_minimum_simultaneous_service_level_dva.push_back("2");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_minimum_simultaneous_service_level, "minimum_simultaneous_service_level", "Integer", false, false, 1, 1, false, "public", MultipleServiceRequests_minimum_simultaneous_service_level_dva);
		vector<string> MultipleServiceRequests_simultaneous_service_execution_dva;
		MultipleServiceRequests_simultaneous_service_execution_dva.push_back("true");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_simultaneous_service_execution, "simultaneous_service_execution", "Boolean", false, false, 1, 1, false, "public", MultipleServiceRequests_simultaneous_service_execution_dva);
		vector<string> MultipleServiceRequests_buffer_service_requests_dva;
		MultipleServiceRequests_buffer_service_requests_dva.push_back("true");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_buffer_service_requests, "buffer_service_requests", "Boolean", false, false, 1, 1, false, "public", MultipleServiceRequests_buffer_service_requests_dva);
		vector<string> MultipleServiceRequests_maximum_simultaneous_service_level_dva;
		MultipleServiceRequests_maximum_simultaneous_service_level_dva.push_back("127");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_maximum_simultaneous_service_level, "maximum_simultaneous_service_level", "Integer", false, false, 1, 1, false, "public", MultipleServiceRequests_maximum_simultaneous_service_level_dva);

		::Uml::InitClassProps(NameParameter::meta, "NameParameter", false, "Atom", NULL);

		::Uml::InitClassProps(NamedType::meta, "NamedType", true, "FCO", NULL);

		::Uml::InitClassProps(NativeValue::meta, "NativeValue", false, "Atom", NULL);

		::Uml::InitClassProps(NoInheritable::meta, "NoInheritable", true, "FCO", NULL);

		::Uml::InitClassProps(Node::meta, "Node", false, "Model", NULL);
		::Uml::InitAttributeProps(Node::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Node::meta_operatingSystem, "operatingSystem", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Node::meta_architecture, "architecture", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(NodeReference::meta, "NodeReference", false, "Reference", NULL);

		::Uml::InitClassProps(Object::meta, "Object", false, "Model", NULL);
		vector<string> Object_InterfaceSemantics_dva;
		Object_InterfaceSemantics_dva.push_back("standard");
		::Uml::InitAttributeProps(Object::meta_InterfaceSemantics, "InterfaceSemantics", "String", false, false, 1, 1, false, "public", Object_InterfaceSemantics_dva);
		vector<string> Object_SupportsAsync_dva;
		Object_SupportsAsync_dva.push_back("false");
		::Uml::InitAttributeProps(Object::meta_SupportsAsync, "SupportsAsync", "Boolean", false, false, 1, 1, false, "public", Object_SupportsAsync_dva);

		::Uml::InitClassProps(ObjectByValue::meta, "ObjectByValue", true, "Model", NULL);
		vector<string> ObjectByValue_abstract_dva;
		ObjectByValue_abstract_dva.push_back("false");
		::Uml::InitAttributeProps(ObjectByValue::meta_abstract, "abstract", "Boolean", false, false, 1, 1, false, "public", ObjectByValue_abstract_dva);

		::Uml::InitClassProps(ObjectPort::meta, "ObjectPort", true, "FCO", NULL);

		::Uml::InitClassProps(OnewayOperation::meta, "OnewayOperation", false, "Model", NULL);

		::Uml::InitClassProps(Operation::meta, "Operation", false, "Model", NULL);

		::Uml::InitClassProps(OperationBase::meta, "OperationBase", true, "Model", NULL);

		::Uml::InitClassProps(OperationRef::meta, "OperationRef", false, "Reference", NULL);

		::Uml::InitClassProps(OutEventPort::meta, "OutEventPort", false, "Reference", NULL);
		vector<string> OutEventPort_single_destination_dva;
		OutEventPort_single_destination_dva.push_back("false");
		::Uml::InitAttributeProps(OutEventPort::meta_single_destination, "single_destination", "Boolean", false, false, 1, 1, false, "public", OutEventPort_single_destination_dva);
		vector<string> OutEventPort_out_event_port_type_dva;
		OutEventPort_out_event_port_type_dva.push_back("DirectConnect");
		::Uml::InitAttributeProps(OutEventPort::meta_out_event_port_type, "out_event_port_type", "String", false, false, 1, 1, false, "public", OutEventPort_out_event_port_type_dva);

		::Uml::InitClassProps(OutEventPortDelegate::meta, "OutEventPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(OutEventPortEnd::meta, "OutEventPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(OutEventPortInstance::meta, "OutEventPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(OutParameter::meta, "OutParameter", false, "Reference", NULL);

		::Uml::InitClassProps(OutputAction::meta, "OutputAction", false, "Model", NULL);

		::Uml::InitClassProps(Package::meta, "Package", false, "Model", NULL);

		::Uml::InitClassProps(PackageConfBasePackage::meta, "PackageConfBasePackage", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfConfigProperty::meta, "PackageConfConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfReference::meta, "PackageConfReference", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfSelectRequirement::meta, "PackageConfSelectRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfSpecializedConfig::meta, "PackageConfSpecializedConfig", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfigProperty::meta, "PackageConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfiguration::meta, "PackageConfiguration", false, "Atom", NULL);
		::Uml::InitAttributeProps(PackageConfiguration::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(PackageConfiguration::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PackageConfigurationContainer::meta, "PackageConfigurationContainer", false, "Model", NULL);

		::Uml::InitClassProps(PackageConfigurationReference::meta, "PackageConfigurationReference", false, "Reference", NULL);

		::Uml::InitClassProps(PackageConfigurations::meta, "PackageConfigurations", false, "Folder", NULL);
		::Uml::InitAttributeProps(PackageConfigurations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PackageContainer::meta, "PackageContainer", false, "Model", NULL);

		::Uml::InitClassProps(PackageInfoProperty::meta, "PackageInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageInterface::meta, "PackageInterface", false, "Connection", NULL);

		::Uml::InitClassProps(PackageType::meta, "PackageType", false, "Reference", NULL);

		::Uml::InitClassProps(ParameterType::meta, "ParameterType", true, "Reference", NULL);

		::Uml::InitClassProps(Path::meta, "Path", false, "Model", NULL);

		::Uml::InitClassProps(PathDiagrams::meta, "PathDiagrams", false, "Folder", NULL);
		::Uml::InitAttributeProps(PathDiagrams::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PathProperty::meta, "PathProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PathReference::meta, "PathReference", false, "Reference", NULL);

		::Uml::InitClassProps(Paths::meta, "Paths", false, "Model", NULL);

		::Uml::InitClassProps(PeriodicBenchmarks::meta, "PeriodicBenchmarks", false, "Atom", NULL);
		::Uml::InitAttributeProps(PeriodicBenchmarks::meta_timeperiod, "timeperiod", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PeriodicEvent::meta, "PeriodicEvent", false, "Atom", NULL);
		vector<string> PeriodicEvent_Hertz_dva;
		PeriodicEvent_Hertz_dva.push_back("10");
		::Uml::InitAttributeProps(PeriodicEvent::meta_Hertz, "Hertz", "String", false, false, 1, 1, false, "public", PeriodicEvent_Hertz_dva);
		vector<string> PeriodicEvent_Distribution_dva;
		PeriodicEvent_Distribution_dva.push_back("Constant");
		::Uml::InitAttributeProps(PeriodicEvent::meta_Distribution, "Distribution", "String", false, false, 1, 1, false, "public", PeriodicEvent_Distribution_dva);

		::Uml::InitClassProps(Port::meta, "Port", true, "FCO", NULL);

		::Uml::InitClassProps(PortInstance::meta, "PortInstance", true, "FCO", NULL);

		::Uml::InitClassProps(PortType::meta, "PortType", false, "Model", NULL);

		::Uml::InitClassProps(PredefinedType::meta, "PredefinedType", true, "FCO", NULL);

		::Uml::InitClassProps(PredefinedTypes::meta, "PredefinedTypes", false, "Folder", NULL);
		::Uml::InitAttributeProps(PredefinedTypes::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Prefixable::meta, "Prefixable", true, "Model", NULL);
		::Uml::InitAttributeProps(Prefixable::meta_PrefixTag, "PrefixTag", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PrivateFlag::meta, "PrivateFlag", false, "Atom", NULL);

		::Uml::InitClassProps(Project::meta, "Project", false, "Model", NULL);

		::Uml::InitClassProps(Property::meta, "Property", true, "FCO", NULL);

		::Uml::InitClassProps(PropertyMapping::meta, "PropertyMapping", false, "Connection", NULL);

		::Uml::InitClassProps(Provideable::meta, "Provideable", true, "FCO", NULL);

		::Uml::InitClassProps(ProvidedRequestPort::meta, "ProvidedRequestPort", false, "Reference", NULL);

		::Uml::InitClassProps(ProvidedRequestPortDelegate::meta, "ProvidedRequestPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(ProvidedRequestPortEnd::meta, "ProvidedRequestPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(ProvidedRequestPortInstance::meta, "ProvidedRequestPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(Publish::meta, "Publish", false, "Connection", NULL);

		::Uml::InitClassProps(QueryAction::meta, "QueryAction", false, "Model", NULL);

		::Uml::InitClassProps(QueryInput::meta, "QueryInput", false, "Connection", NULL);

		::Uml::InitClassProps(QueryInputAction::meta, "QueryInputAction", false, "Model", NULL);

		::Uml::InitClassProps(QueryInputBase::meta, "QueryInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(RTRequirements::meta, "RTRequirements", false, "Model", NULL);

		::Uml::InitClassProps(ReadonlyAttribute::meta, "ReadonlyAttribute", false, "Model", NULL);

		::Uml::InitClassProps(ReceptacleDelegate::meta, "ReceptacleDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(RequestAction::meta, "RequestAction", false, "Model", NULL);
		::Uml::InitAttributeProps(RequestAction::meta_MethodName, "MethodName", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(RequiredRequestPort::meta, "RequiredRequestPort", false, "Reference", NULL);
		vector<string> RequiredRequestPort_multiple_connections_dva;
		RequiredRequestPort_multiple_connections_dva.push_back("false");
		::Uml::InitAttributeProps(RequiredRequestPort::meta_multiple_connections, "multiple_connections", "Boolean", false, false, 1, 1, false, "public", RequiredRequestPort_multiple_connections_dva);
		vector<string> RequiredRequestPort_AsyncCommunication_dva;
		RequiredRequestPort_AsyncCommunication_dva.push_back("false");
		::Uml::InitAttributeProps(RequiredRequestPort::meta_AsyncCommunication, "AsyncCommunication", "Boolean", false, false, 1, 1, false, "public", RequiredRequestPort_AsyncCommunication_dva);

		::Uml::InitClassProps(RequiredRequestPortDelegate::meta, "RequiredRequestPortDelegate", false, "Atom", NULL);

		::Uml::InitClassProps(RequiredRequestPortEnd::meta, "RequiredRequestPortEnd", true, "FCO", NULL);

		::Uml::InitClassProps(RequiredRequestPortInstance::meta, "RequiredRequestPortInstance", false, "Reference", NULL);

		::Uml::InitClassProps(Requirement::meta, "Requirement", false, "Model", NULL);

		::Uml::InitClassProps(RequirementBase::meta, "RequirementBase", true, "Model", NULL);
		::Uml::InitAttributeProps(RequirementBase::meta_resourceType, "resourceType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(RequirementSatisfier::meta, "RequirementSatisfier", true, "Model", NULL);
		::Uml::InitAttributeProps(RequirementSatisfier::meta_resourceType, "resourceType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Resource::meta, "Resource", false, "Model", NULL);

		::Uml::InitClassProps(ReturnType::meta, "ReturnType", false, "Reference", NULL);

		::Uml::InitClassProps(RootFolder::meta, "RootFolder", false, "Folder", NULL);
		::Uml::InitAttributeProps(RootFolder::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(SatisfierProperty::meta, "SatisfierProperty", false, "Model", NULL);
		vector<string> SatisfierProperty_SatisfierPropertyKind_dva;
		SatisfierProperty_SatisfierPropertyKind_dva.push_back("Quantity");
		::Uml::InitAttributeProps(SatisfierProperty::meta_SatisfierPropertyKind, "SatisfierPropertyKind", "String", false, false, 1, 1, false, "public", SatisfierProperty_SatisfierPropertyKind_dva);
		::Uml::InitAttributeProps(SatisfierProperty::meta_DataValue, "DataValue", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> SatisfierProperty_dynamic_dva;
		SatisfierProperty_dynamic_dva.push_back("false");
		::Uml::InitAttributeProps(SatisfierProperty::meta_dynamic, "dynamic", "Boolean", false, false, 1, 1, false, "public", SatisfierProperty_dynamic_dva);

		::Uml::InitClassProps(SendsTo::meta, "SendsTo", false, "Connection", NULL);

		::Uml::InitClassProps(ServantProject::meta, "ServantProject", false, "Model", NULL);

		::Uml::InitClassProps(ServiceConsumer::meta, "ServiceConsumer", false, "Atom", NULL);
		vector<string> ServiceConsumer_prioritize_service_invocations_dva;
		ServiceConsumer_prioritize_service_invocations_dva.push_back("true");
		::Uml::InitAttributeProps(ServiceConsumer::meta_prioritize_service_invocations, "prioritize_service_invocations", "Boolean", false, false, 1, 1, false, "public", ServiceConsumer_prioritize_service_invocations_dva);

		::Uml::InitClassProps(ServiceLevels::meta, "ServiceLevels", false, "Atom", NULL);
		vector<string> ServiceLevels_varying_service_levels_dva;
		ServiceLevels_varying_service_levels_dva.push_back("true");
		::Uml::InitAttributeProps(ServiceLevels::meta_varying_service_levels, "varying_service_levels", "Boolean", false, false, 1, 1, false, "public", ServiceLevels_varying_service_levels_dva);

		::Uml::InitClassProps(ServiceProvider::meta, "ServiceProvider", false, "Model", NULL);
		vector<string> ServiceProvider_fixed_prioirty_service_execution_dva;
		ServiceProvider_fixed_prioirty_service_execution_dva.push_back("false");
		::Uml::InitAttributeProps(ServiceProvider::meta_fixed_prioirty_service_execution, "fixed_prioirty_service_execution", "Boolean", false, false, 1, 1, false, "public", ServiceProvider_fixed_prioirty_service_execution_dva);

		::Uml::InitClassProps(SetException::meta, "SetException", false, "Reference", NULL);

		::Uml::InitClassProps(SharedResource::meta, "SharedResource", false, "Model", NULL);

		::Uml::InitClassProps(Shares::meta, "Shares", false, "Connection", NULL);

		::Uml::InitClassProps(ShortInteger::meta, "ShortInteger", false, "Atom", NULL);

		::Uml::InitClassProps(SignedIntegerType::meta, "SignedIntegerType", true, "Atom", NULL);

		::Uml::InitClassProps(SimpleProperty::meta, "SimpleProperty", false, "Reference", NULL);
		::Uml::InitAttributeProps(SimpleProperty::meta_Value, "Value", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(SimpleType::meta, "SimpleType", true, "FCO", NULL);

		::Uml::InitClassProps(SingleInputBase::meta, "SingleInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(SingleOutputBase::meta, "SingleOutputBase", true, "FCO", NULL);

		::Uml::InitClassProps(SrcEdge::meta, "SrcEdge", false, "Connection", NULL);

		::Uml::InitClassProps(State::meta, "State", false, "Atom", NULL);

		::Uml::InitClassProps(StateBase::meta, "StateBase", true, "Atom", NULL);

		::Uml::InitClassProps(String::meta, "String", false, "Atom", NULL);

		::Uml::InitClassProps(StringType::meta, "StringType", true, "Atom", NULL);

		::Uml::InitClassProps(StubProject::meta, "StubProject", false, "Model", NULL);

		::Uml::InitClassProps(Supports::meta, "Supports", false, "Reference", NULL);

		::Uml::InitClassProps(SupportsInstance::meta, "SupportsInstance", false, "Reference", NULL);

		::Uml::InitClassProps(SupportsInterfaces::meta, "SupportsInterfaces", true, "Model", NULL);

		::Uml::InitClassProps(SwitchedAggregate::meta, "SwitchedAggregate", false, "Model", NULL);

		::Uml::InitClassProps(Taggable::meta, "Taggable", true, "FCO", NULL);
		::Uml::InitAttributeProps(Taggable::meta_VersionTag, "VersionTag", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Taggable::meta_SpecifyIdTag, "SpecifyIdTag", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(TargetRequiredRequestPort::meta, "TargetRequiredRequestPort", false, "Reference", NULL);

		::Uml::InitClassProps(Targets::meta, "Targets", false, "Folder", NULL);
		::Uml::InitAttributeProps(Targets::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Task::meta, "Task", false, "Atom", NULL);

		::Uml::InitClassProps(TaskSet::meta, "TaskSet", false, "Set", NULL);
		vector<string> TaskSet_priority_dva;
		TaskSet_priority_dva.push_back("-1");
		::Uml::InitAttributeProps(TaskSet::meta_priority, "priority", "Integer", false, false, 1, 1, false, "public", TaskSet_priority_dva);
		vector<string> TaskSet_rate_dva;
		TaskSet_rate_dva.push_back("-1");
		::Uml::InitAttributeProps(TaskSet::meta_rate, "rate", "Integer", false, false, 1, 1, false, "public", TaskSet_rate_dva);

		::Uml::InitClassProps(TemplatePackageAlias::meta, "TemplatePackageAlias", false, "Model", NULL);

		::Uml::InitClassProps(TemplatePackageInstance::meta, "TemplatePackageInstance", false, "Model", NULL);

		::Uml::InitClassProps(TemplateParameter::meta, "TemplateParameter", true, "FCO", NULL);

		::Uml::InitClassProps(TemplateParameterReference::meta, "TemplateParameterReference", false, "Reference", NULL);

		::Uml::InitClassProps(TemplateParameterValue::meta, "TemplateParameterValue", false, "Reference", NULL);

		::Uml::InitClassProps(TemplateParameterValueType::meta, "TemplateParameterValueType", true, "FCO", NULL);

		::Uml::InitClassProps(Terminal::meta, "Terminal", false, "Atom", NULL);

		::Uml::InitClassProps(TerminalEffect::meta, "TerminalEffect", false, "Connection", NULL);

		::Uml::InitClassProps(TerminalTransition::meta, "TerminalTransition", false, "Connection", NULL);

		::Uml::InitClassProps(Throughput::meta, "Throughput", false, "Model", NULL);

		::Uml::InitClassProps(TimeProbe::meta, "TimeProbe", false, "Atom", NULL);

		::Uml::InitClassProps(TimerConnection::meta, "TimerConnection", false, "Connection", NULL);

		::Uml::InitClassProps(TimerEventSinkConn::meta, "TimerEventSinkConn", false, "Connection", NULL);

		::Uml::InitClassProps(TopLevelBehavior::meta, "TopLevelBehavior", true, "Model", NULL);

		::Uml::InitClassProps(TopLevelPackage::meta, "TopLevelPackage", false, "Atom", NULL);

		::Uml::InitClassProps(TopLevelPackageContainer::meta, "TopLevelPackageContainer", false, "Model", NULL);

		::Uml::InitClassProps(TopLevelPackages::meta, "TopLevelPackages", false, "Folder", NULL);
		::Uml::InitAttributeProps(TopLevelPackages::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Transition::meta, "Transition", false, "Connection", NULL);

		::Uml::InitClassProps(TriggerBenchmarks::meta, "TriggerBenchmarks", false, "Atom", NULL);

		::Uml::InitClassProps(TwowayOperation::meta, "TwowayOperation", false, "Model", NULL);

		::Uml::InitClassProps(TypeEncoding::meta, "TypeEncoding", false, "Atom", NULL);

		::Uml::InitClassProps(TypeKind::meta, "TypeKind", false, "Atom", NULL);

		::Uml::InitClassProps(TypeParameter::meta, "TypeParameter", false, "Atom", NULL);
		vector<string> TypeParameter_Type_dva;
		TypeParameter_Type_dva.push_back("Object");
		::Uml::InitAttributeProps(TypeParameter::meta_Type, "Type", "String", false, false, 1, 1, false, "public", TypeParameter_Type_dva);

		::Uml::InitClassProps(UnsignedIntegerType::meta, "UnsignedIntegerType", true, "Atom", NULL);

		::Uml::InitClassProps(UnsignedLongInteger::meta, "UnsignedLongInteger", false, "Atom", NULL);

		::Uml::InitClassProps(UnsignedLongLongInteger::meta, "UnsignedLongLongInteger", false, "Atom", NULL);

		::Uml::InitClassProps(UnsignedShortInteger::meta, "UnsignedShortInteger", false, "Atom", NULL);

		::Uml::InitClassProps(ValueObject::meta, "ValueObject", false, "Model", NULL);

		::Uml::InitClassProps(Variable::meta, "Variable", false, "Reference", NULL);
		::Uml::InitAttributeProps(Variable::meta_InitialValue, "InitialValue", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WhileState::meta, "WhileState", false, "Atom", NULL);

		::Uml::InitClassProps(WideChar::meta, "WideChar", false, "Atom", NULL);

		::Uml::InitClassProps(WideString::meta, "WideString", false, "Atom", NULL);

		::Uml::InitClassProps(WorkLoadOperationConnection::meta, "WorkLoadOperationConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Worker::meta, "Worker", false, "Model", NULL);
		vector<string> Worker_Abstract_dva;
		Worker_Abstract_dva.push_back("false");
		::Uml::InitAttributeProps(Worker::meta_Abstract, "Abstract", "Boolean", false, false, 1, 1, false, "public", Worker_Abstract_dva);

		::Uml::InitClassProps(WorkerFile::meta, "WorkerFile", false, "Model", NULL);
		::Uml::InitAttributeProps(WorkerFile::meta_Location, "Location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerLibraries::meta, "WorkerLibraries", false, "Folder", NULL);
		::Uml::InitAttributeProps(WorkerLibraries::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerLibrary::meta, "WorkerLibrary", false, "Model", NULL);
		::Uml::InitAttributeProps(WorkerLibrary::meta_Location, "Location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerPackage::meta, "WorkerPackage", false, "Model", NULL);

		::Uml::InitClassProps(WorkerPackageBase::meta, "WorkerPackageBase", true, "Model", NULL);

		::Uml::InitClassProps(WorkerType::meta, "WorkerType", false, "Reference", NULL);

		::Uml::InitClassProps(WorkloadCharacteristics::meta, "WorkloadCharacteristics", false, "Connection", NULL);

		::Uml::InitClassProps(Workspaces::meta, "Workspaces", false, "Set", NULL);

		::Uml::InitClassProps(package::meta, "package", false, "Connection", NULL);

		// associations
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentImplementationArtifact::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationArtifact::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyComponentImplemenationArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyComponentImplemenationArtifact, "referedbyComponentImplemenationArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentServantArtifact::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentServantArtifact::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyComponentServantArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyComponentServantArtifact, "referedbyComponentServantArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithprimaryArtifact");
			MonolithicImplementationBase::meta_dstMonolithprimaryArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithprimaryArtifact, "dstMonolithprimaryArtifact", true, false, 0, -1);
			ImplementationArtifactReference::meta_srcMonolithprimaryArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_srcMonolithprimaryArtifact, "srcMonolithprimaryArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithExecParameter");
			MonolithicImplementationBase::meta_dstMonolithExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithExecParameter, "dstMonolithExecParameter", true, false, 0, -1);
			Property::meta_srcMonolithExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcMonolithExecParameter, "srcMonolithExecParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithDeployRequirement");
			MonolithicImplementationBase::meta_dstMonolithDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithDeployRequirement, "dstMonolithDeployRequirement", true, false, 0, -1);
			ImplementationRequirement::meta_srcMonolithDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationRequirement::meta_srcMonolithDeployRequirement, "srcMonolithDeployRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InfoProperty");
			Implemenation::meta_dstInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Implemenation::meta_dstInfoProperty, "dstInfoProperty", true, false, 0, -1);
			Property::meta_srcInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcInfoProperty, "srcInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ConfigProperty");
			Implemenation::meta_dstConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Implemenation::meta_dstConfigProperty, "dstConfigProperty", true, false, 0, -1);
			Property::meta_srcConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcConfigProperty, "srcConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentFactoryInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryInstance::meta_ref, "ref", true, false, 0, 1);
			ComponentFactory::meta_referedbyComponentFactoryInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactory::meta_referedbyComponentFactoryInstance, "referedbyComponentFactoryInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PathReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathReference::meta_ref, "ref", true, false, 0, 1);
			Path::meta_referedbyPathReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Path::meta_referedbyPathReference, "referedbyPathReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SrcEdge");
			Edge::meta_dstSrcEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_dstSrcEdge, "dstSrcEdge", true, false, 0, 1);
			GraphVertex::meta_srcSrcEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GraphVertex::meta_srcSrcEdge, "srcSrcEdge", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "DstEdge");
			GraphVertex::meta_dstDstEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GraphVertex::meta_dstDstEdge, "dstDstEdge", true, false, 0, 1);
			Edge::meta_srcDstEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_srcDstEdge, "srcDstEdge", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PathProperty");
			Path::meta_dstPathProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Path::meta_dstPathProperty, "dstPathProperty", true, false, 0, -1);
			Property::meta_srcPathProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPathProperty, "srcPathProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BenchmarkCharacteristics");
			BenchmarkType::meta_dstBenchmarkCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BenchmarkType::meta_dstBenchmarkCharacteristics, "dstBenchmarkCharacteristics", true, false, 0, 1);
			MetricsBase::meta_srcBenchmarkCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_srcBenchmarkCharacteristics, "srcBenchmarkCharacteristics", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			CompRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CompRef::meta_ref, "ref", true, false, 0, 1);
			Component::meta_referedbyCompRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_referedbyCompRef, "referedbyCompRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Task::meta_setTaskSet = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Task::meta_setTaskSet, "setTaskSet", true, false, 0, -1);
			TaskSet::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TaskSet::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TimerEventSinkConn");
			EventRef::meta_dstTimerEventSinkConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventRef::meta_dstTimerEventSinkConn, "dstTimerEventSinkConn", true, false, 0, -1);
			TimeProbe::meta_srcTimerEventSinkConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TimeProbe::meta_srcTimerEventSinkConn, "srcTimerEventSinkConn", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			EventRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventRef::meta_ref, "ref", true, false, 0, 1);
			Event::meta_referedbyEventRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Event::meta_referedbyEventRef, "referedbyEventRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "WorkLoadOperationConnection");
			OperationRef::meta_dstWorkLoadOperationConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstWorkLoadOperationConnection, "dstWorkLoadOperationConnection", true, false, 0, 1);
			Task::meta_srcWorkLoadOperationConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Task::meta_srcWorkLoadOperationConnection, "srcWorkLoadOperationConnection", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TimerConnection");
			OperationRef::meta_dstTimerConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstTimerConnection, "dstTimerConnection", true, false, 0, 1);
			TimeProbe::meta_srcTimerConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TimeProbe::meta_srcTimerConnection, "srcTimerConnection", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MetricConnection");
			OperationRef::meta_dstMetricConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstMetricConnection, "dstMetricConnection", true, false, 0, 1);
			MetricsBase::meta_srcMetricConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_srcMetricConnection, "srcMetricConnection", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentOperation");
			OperationRef::meta_dstComponentOperation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstComponentOperation, "dstComponentOperation", true, false, 0, 1);
			CompRef::meta_srcComponentOperation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CompRef::meta_srcComponentOperation, "srcComponentOperation", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OperationRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_ref, "ref", true, false, 0, 1);
			OperationBase::meta_referedbyOperationRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationBase::meta_referedbyOperationRef, "referedbyOperationRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "WorkloadCharacteristics");
			MetricsBase::meta_dstWorkloadCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_dstWorkloadCharacteristics, "dstWorkloadCharacteristics", true, false, 0, 1);
			TaskSet::meta_srcWorkloadCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TaskSet::meta_srcWorkloadCharacteristics, "srcWorkloadCharacteristics", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			NodeReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NodeReference::meta_ref, "ref", true, false, 0, 1);
			Node::meta_referedbyNodeReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_referedbyNodeReference, "referedbyNodeReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PropertyMapping");
			NodeReference::meta_dstPropertyMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NodeReference::meta_dstPropertyMapping, "dstPropertyMapping", true, false, 0, -1);
			Property::meta_srcPropertyMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPropertyMapping, "srcPropertyMapping", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InterconnectConnection");
			Node::meta_dstInterconnectConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_dstInterconnectConnection, "dstInterconnectConnection", true, false, 0, -1);
			Interconnect::meta_srcInterconnectConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Interconnect::meta_srcInterconnectConnection, "srcInterconnectConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Shares");
			Node::meta_dstShares = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_dstShares, "dstShares", true, false, 0, -1);
			SharedResource::meta_srcShares = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedResource::meta_srcShares, "srcShares", true, false, 1, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BridgeConnection");
			Interconnect::meta_dstBridgeConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Interconnect::meta_dstBridgeConnection, "dstBridgeConnection", true, false, 0, -1);
			Bridge::meta_srcBridgeConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Bridge::meta_srcBridgeConnection, "srcBridgeConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentInstanceRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentInstanceRef::meta_ref, "ref", true, false, 0, 1);
			ComponentInstance::meta_referedbyComponentInstanceRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentInstance::meta_referedbyComponentInstanceRef, "referedbyComponentInstanceRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			CollocationGroupMember::meta_setCollocationGroup = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroupMember::meta_setCollocationGroup, "setCollocationGroup", true, false, 0, -1);
			CollocationGroup::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroup::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Deploys");
			ComponentFactoryRef::meta_dstDeploys = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryRef::meta_dstDeploys, "dstDeploys", true, false, 0, -1);
			ComponentInstanceRef::meta_srcDeploys = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentInstanceRef::meta_srcDeploys, "srcDeploys", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentFactoryRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryRef::meta_ref, "ref", true, false, 0, 1);
			ComponentFactoryInstance::meta_referedbyComponentFactoryRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryInstance::meta_referedbyComponentFactoryRef, "referedbyComponentFactoryRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InstanceMapping");
			CollocationGroup::meta_dstInstanceMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroup::meta_dstInstanceMapping, "dstInstanceMapping", true, false, 0, 1);
			NodeReference::meta_srcInstanceMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NodeReference::meta_srcInstanceMapping, "srcInstanceMapping", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfSpecializedConfig");
			PackageConfiguration::meta_dstPackageConfSpecializedConfig = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfSpecializedConfig, "dstPackageConfSpecializedConfig", true, false, 0, 1);
			PackageConfigurationReference::meta_srcPackageConfSpecializedConfig = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_srcPackageConfSpecializedConfig, "srcPackageConfSpecializedConfig", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfConfigProperty");
			PackageConfiguration::meta_dstPackageConfConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfConfigProperty, "dstPackageConfConfigProperty", true, false, 0, -1);
			Property::meta_srcPackageConfConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageConfConfigProperty, "srcPackageConfConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfSelectRequirement");
			PackageConfiguration::meta_dstPackageConfSelectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfSelectRequirement, "dstPackageConfSelectRequirement", true, false, 0, -1);
			Requirement::meta_srcPackageConfSelectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcPackageConfSelectRequirement, "srcPackageConfSelectRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfReference");
			PackageConfiguration::meta_dstPackageConfReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfReference, "dstPackageConfReference", true, false, 0, 1);
			ComponentPackageReference::meta_srcPackageConfReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackageReference::meta_srcPackageConfReference, "srcPackageConfReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfBasePackage");
			PackageConfiguration::meta_dstPackageConfBasePackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfBasePackage, "dstPackageConfBasePackage", true, false, 0, 1);
			ComponentPackage::meta_srcPackageConfBasePackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_srcPackageConfBasePackage, "srcPackageConfBasePackage", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PackageConfigurationReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_ref, "ref", true, false, 0, 1);
			PackageConfiguration::meta_referedbyPackageConfigurationReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_referedbyPackageConfigurationReference, "referedbyPackageConfigurationReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDependency");
			ImplementationArtifact::meta_dstArtifactDependency = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDependency, "dstArtifactDependency", true, false, 0, -1);
			ImplementationArtifact::meta_srcArtifactDependency = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_srcArtifactDependency, "srcArtifactDependency", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactInfoProperty");
			ImplementationArtifact::meta_dstArtifactInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactInfoProperty, "dstArtifactInfoProperty", true, false, 0, -1);
			Property::meta_srcArtifactInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcArtifactInfoProperty, "srcArtifactInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactExecParameter");
			ImplementationArtifact::meta_dstArtifactExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactExecParameter, "dstArtifactExecParameter", true, false, 0, -1);
			Property::meta_srcArtifactExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcArtifactExecParameter, "srcArtifactExecParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDeployRequirement");
			ImplementationArtifact::meta_dstArtifactDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDeployRequirement, "dstArtifactDeployRequirement", true, false, 0, -1);
			Requirement::meta_srcArtifactDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcArtifactDeployRequirement, "srcArtifactDeployRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDependsOn");
			ImplementationArtifact::meta_dstArtifactDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDependsOn, "dstArtifactDependsOn", true, false, 0, -1);
			ImplementationArtifactReference::meta_srcArtifactDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_srcArtifactDependsOn, "srcArtifactDependsOn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ImplementationArtifactReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyImplementationArtifactReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyImplementationArtifactReference, "referedbyImplementationArtifactReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "package");
			TopLevelPackage::meta_dstpackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TopLevelPackage::meta_dstpackage, "dstpackage", true, false, 1, 1);
			PackageConfigurationReference::meta_srcpackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_srcpackage, "srcpackage", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageInfoProperty");
			ComponentPackage::meta_dstPackageInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageInfoProperty, "dstPackageInfoProperty", true, false, 0, -1);
			Property::meta_srcPackageInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageInfoProperty, "srcPackageInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfigProperty");
			ComponentPackage::meta_dstPackageConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageConfigProperty, "dstPackageConfigProperty", true, false, 0, -1);
			Property::meta_srcPackageConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageConfigProperty, "srcPackageConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Implementation");
			ComponentPackage::meta_dstImplementation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstImplementation, "dstImplementation", true, false, 1, -1);
			ComponentImplementationReference::meta_srcImplementation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationReference::meta_srcImplementation, "srcImplementation", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageInterface");
			ComponentPackage::meta_dstPackageInterface = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageInterface, "dstPackageInterface", true, false, 0, 1);
			ComponentRef::meta_srcPackageInterface = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcPackageInterface, "srcPackageInterface", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentPackageReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackageReference::meta_ref, "ref", true, false, 0, 1);
			ComponentPackage::meta_referedbyComponentPackageReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_referedbyComponentPackageReference, "referedbyComponentPackageReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SimpleProperty::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SimpleProperty::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbySimpleProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbySimpleProperty, "referedbySimpleProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EdgeProperty");
			Property::meta_dstPropertyConnector = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_dstPropertyConnector, "dstPropertyConnector", true, false, 0, -1);
			Edge::meta_srcPropertyConnector = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_srcPropertyConnector, "srcPropertyConnector", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "CollocationGroupProperty");
			Property::meta_dstCollocationGroupProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_dstCollocationGroupProperty, "dstCollocationGroupProperty", true, false, 0, -1);
			CollocationGroup::meta_srcCollocationGroupProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroup::meta_srcCollocationGroupProperty, "srcCollocationGroupProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			DataValue::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DataValue::meta_ref, "ref", true, false, 0, 1);
			SimpleType::meta_referedbyDataValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SimpleType::meta_referedbyDataValue, "referedbyDataValue", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComplexTypeReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComplexTypeReference::meta_ref, "ref", true, false, 0, 1);
			ComplexType::meta_referedbyComplexTypeReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComplexType::meta_referedbyComplexTypeReference, "referedbyComplexTypeReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			DataType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DataType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyDataType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyDataType, "referedbyDataType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ParameterType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ParameterType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyParameterType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyParameterType, "referedbyParameterType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ReturnType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReturnType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyReturnType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyReturnType, "referedbyReturnType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExceptionRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExceptionRef::meta_ref, "ref", true, false, 0, 1);
			ExceptionType::meta_referedbyExceptionRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExceptionType::meta_referedbyExceptionRef, "referedbyExceptionRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeMember::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMember::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyAttributeMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyAttributeMember, "referedbyAttributeMember", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			GetException::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GetException::meta_ref, "ref", true, false, 0, 1);
			ExceptionType::meta_referedbyGetException = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExceptionType::meta_referedbyGetException, "referedbyGetException", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SetException::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SetException::meta_ref, "ref", true, false, 0, 1);
			ExceptionType::meta_referedbySetException = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExceptionType::meta_referedbySetException, "referedbySetException", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Supports::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Supports::meta_ref, "ref", true, false, 0, 1);
			::PICML::Object::meta_referedbySupports = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(::PICML::Object::meta_referedbySupports, "referedbySupports", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Inherits::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Inherits::meta_ref, "ref", true, false, 0, 1);
			Inheritable::meta_referedbyInherits = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Inheritable::meta_referedbyInherits, "referedbyInherits", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "KeyMember");
			Key::meta_dstKeyMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Key::meta_dstKeyMember, "dstKeyMember", true, false, 0, -1);
			Member::meta_srcKeyMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_srcKeyMember, "srcKeyMember", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "LabelConnection");
			Member::meta_dstLabelConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_dstLabelConnection, "dstLabelConnection", true, false, 0, -1);
			Label::meta_srcLabelConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Label::meta_srcLabelConnection, "srcLabelConnection", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Member::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyMember, "referedbyMember", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MakeMemberPrivate");
			Member::meta_dstMakeMemberPrivate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_dstMakeMemberPrivate, "dstMakeMemberPrivate", true, false, 0, 1);
			PrivateFlag::meta_srcMakeMemberPrivate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PrivateFlag::meta_srcMakeMemberPrivate, "srcMakeMemberPrivate", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Boxed::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Boxed::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyBoxed = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyBoxed, "referedbyBoxed", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Alias::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Alias::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyAlias = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyAlias, "referedbyAlias", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Collection::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Collection::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyCollection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyCollection, "referedbyCollection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Discriminator::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Discriminator::meta_ref, "ref", true, false, 0, 1);
			ConstantType::meta_referedbyDiscriminator = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConstantType::meta_referedbyDiscriminator, "referedbyDiscriminator", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			TemplateParameterReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TemplateParameterReference::meta_ref, "ref", true, false, 0, 1);
			TemplateParameter::meta_referedbyTemplateParameterReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TemplateParameter::meta_referedbyTemplateParameterReference, "referedbyTemplateParameterReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			TemplateParameterValue::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TemplateParameterValue::meta_ref, "ref", true, false, 0, 1);
			TemplateParameterValueType::meta_referedbyTemplateParameterValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TemplateParameterValueType::meta_referedbyTemplateParameterValue, "referedbyTemplateParameterValue", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PackageType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageType::meta_ref, "ref", true, false, 0, 1);
			Package::meta_referedbyPackageType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Package::meta_referedbyPackageType, "referedbyPackageType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			CollectionParameter::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollectionParameter::meta_ref, "ref", true, false, 0, 1);
			NameParameter::meta_referedbyCollectionParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NameParameter::meta_referedbyCollectionParameter, "referedbyCollectionParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Constant::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Constant::meta_ref, "ref", true, false, 0, 1);
			ConstantType::meta_referedbyConstant = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConstantType::meta_referedbyConstant, "referedbyConstant", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			FileRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(FileRef::meta_ref, "ref", true, false, 0, 1);
			File::meta_referedbyFileRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(File::meta_referedbyFileRef, "referedbyFileRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ExtResourceConn");
			ComponentLib::meta_dstExtResourceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentLib::meta_dstExtResourceConn, "dstExtResourceConn", true, false, 0, -1);
			ExternalResources::meta_srcExtResourceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalResources::meta_srcExtResourceConn, "srcExtResourceConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExternalResources::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalResources::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyExternalResources = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyExternalResources, "referedbyExternalResources", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Project::meta_setWorkspace = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Project::meta_setWorkspace, "setWorkspace", true, false, 0, -1);
			Workspaces::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Workspaces::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ExternalDelegate");
			ExternalPort::meta_dstExternalDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalPort::meta_dstExternalDelegate, "dstExternalDelegate", true, false, 0, -1);
			ExternalPortEnd::meta_srcExternalDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalPortEnd::meta_srcExternalDelegate, "srcExternalDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentAssemblyReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssemblyReference::meta_ref, "ref", true, false, 0, 1);
			ComponentAssembly::meta_referedbyComponentAssemblyReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssembly::meta_referedbyComponentAssemblyReference, "referedbyComponentAssemblyReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "CriticalPath");
			ComponentAssembly::meta_dstCriticalPath = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssembly::meta_dstCriticalPath, "dstCriticalPath", true, false, 0, 1);
			PathReference::meta_srcCriticalPath = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathReference::meta_srcCriticalPath, "srcCriticalPath", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ExtendedDelegate");
			ExtendedPortInstanceBase::meta_dstExtendedDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendedPortInstanceBase::meta_dstExtendedDelegate, "dstExtendedDelegate", true, false, 0, 1);
			ExtendedPortDelegate::meta_srcExtendedDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendedPortDelegate::meta_srcExtendedDelegate, "srcExtendedDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MirrorDelegate");
			MirrorPortInstanceBase::meta_dstMirrorDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MirrorPortInstanceBase::meta_dstMirrorDelegate, "dstMirrorDelegate", true, false, 0, 1);
			MirrorPortDelegate::meta_srcMirrorDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MirrorPortDelegate::meta_srcMirrorDelegate, "srcMirrorDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyConfigProperty");
			AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty, "dstAssemblyConfigProperty", true, false, 0, -1);
			Property::meta_srcAssemblyConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAssemblyConfigProperty, "srcAssemblyConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyselectRequirement");
			AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement, "dstAssemblyselectRequirement", true, false, 0, -1);
			Requirement::meta_srcAssemblyselectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcAssemblyselectRequirement, "srcAssemblyselectRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "FacetDelegate");
			ProvidedRequestPortDelegate::meta_dstFacetDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPortDelegate::meta_dstFacetDelegate, "dstFacetDelegate", true, false, 0, -1);
			ProvidedRequestPortEnd::meta_srcFacetDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPortEnd::meta_srcFacetDelegate, "srcFacetDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ReceptacleDelegate");
			RequiredRequestPortDelegate::meta_dstReceptacleDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPortDelegate::meta_dstReceptacleDelegate, "dstReceptacleDelegate", true, false, 0, -1);
			RequiredRequestPortEnd::meta_srcReceptacleDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPortEnd::meta_srcReceptacleDelegate, "srcReceptacleDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSinkDelegate");
			InEventPortDelegate::meta_dstEventSinkDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPortDelegate::meta_dstEventSinkDelegate, "dstEventSinkDelegate", true, false, 0, -1);
			InEventPortEnd::meta_srcEventSinkDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPortEnd::meta_srcEventSinkDelegate, "srcEventSinkDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ConnectorToReceptacle");
			RequiredRequestPortEnd::meta_dstConnectorToReceptacle = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPortEnd::meta_dstConnectorToReceptacle, "dstConnectorToReceptacle", true, false, 0, -1);
			ConnectorInstance::meta_srcConnectorToReceptacle = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorInstance::meta_srcConnectorToReceptacle, "srcConnectorToReceptacle", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Invoke");
			RequiredRequestPortEnd::meta_dstinvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPortEnd::meta_dstinvoke, "dstinvoke", true, false, 0, -1);
			ProvidedRequestPortEnd::meta_srcinvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPortEnd::meta_srcinvoke, "srcinvoke", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Publish");
			ExtendPortEnd::meta_dstPublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendPortEnd::meta_dstPublish, "dstPublish", true, false, 0, 1);
			ConnectorInstance::meta_srcPublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorInstance::meta_srcPublish, "srcPublish", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSourceDelegate");
			OutEventPortEnd::meta_dstEventSourceDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPortEnd::meta_dstEventSourceDelegate, "dstEventSourceDelegate", true, false, 0, -1);
			OutEventPortDelegate::meta_srcEventSourceDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPortDelegate::meta_srcEventSourceDelegate, "srcEventSourceDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SendsTo");
			OutEventPortEnd::meta_dstSendsTo = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPortEnd::meta_dstSendsTo, "dstSendsTo", true, false, 0, -1);
			InEventPortEnd::meta_srcSendsTo = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPortEnd::meta_srcSendsTo, "srcSendsTo", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeMappingDelegate");
			AttributeMapping::meta_dstAttributeMappingDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeMappingDelegate, "dstAttributeMappingDelegate", true, false, 0, -1);
			AttributeMapping::meta_srcAttributeMappingDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_srcAttributeMappingDelegate, "srcAttributeMappingDelegate", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeMappingValue");
			AttributeMapping::meta_dstAttributeMappingValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeMappingValue, "dstAttributeMappingValue", true, false, 0, 1);
			Property::meta_srcAttributeMappingValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAttributeMappingValue, "srcAttributeMappingValue", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeDelegate");
			AttributeMapping::meta_dstAttributeDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeDelegate, "dstAttributeDelegate", true, false, 0, -1);
			AttributeInstance::meta_srcAttributeDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeInstance::meta_srcAttributeDelegate, "srcAttributeDelegate", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeMapping::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_ref, "ref", true, false, 0, 1);
			AttributeInstance::meta_referedbyAttributeMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeInstance::meta_referedbyAttributeMapping, "referedbyAttributeMapping", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SupportsInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SupportsInstance::meta_ref, "ref", true, false, 0, 1);
			Supports::meta_referedbySupportsInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Supports::meta_referedbySupportsInstance, "referedbySupportsInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			RequiredRequestPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPortInstance::meta_ref, "ref", true, false, 0, 1);
			RequiredRequestPort::meta_referedbyRequiredRequestPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_referedbyRequiredRequestPortInstance, "referedbyRequiredRequestPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InEventPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPortInstance::meta_ref, "ref", true, false, 0, 1);
			InEventPort::meta_referedbyInEventPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_referedbyInEventPortInstance, "referedbyInEventPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ProvidedRequestPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPortInstance::meta_ref, "ref", true, false, 0, 1);
			ProvidedRequestPort::meta_referedbyProvidedRequestPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_referedbyProvidedRequestPortInstance, "referedbyProvidedRequestPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OutEventPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPortInstance::meta_ref, "ref", true, false, 0, 1);
			OutEventPort::meta_referedbyOutEventPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_referedbyOutEventPortInstance, "referedbyOutEventPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			MirrorPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MirrorPortInstance::meta_ref, "ref", true, false, 0, 1);
			MirrorPort::meta_referedbyMirrorPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MirrorPort::meta_referedbyMirrorPortInstance, "referedbyMirrorPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExtendedPortInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendedPortInstance::meta_ref, "ref", true, false, 0, 1);
			ExtendedPort::meta_referedbyExtendedPortInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendedPort::meta_referedbyExtendedPortInstance, "referedbyExtendedPortInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeInstance::meta_ref, "ref", true, false, 0, 1);
			ReadonlyAttribute::meta_referedbyAttributeInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReadonlyAttribute::meta_referedbyAttributeInstance, "referedbyAttributeInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeValue");
			AttributeInstance::meta_dstAttributeValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeInstance::meta_dstAttributeValue, "dstAttributeValue", true, false, 0, 1);
			Property::meta_srcAttributeValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAttributeValue, "srcAttributeValue", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentInstanceType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentInstanceType::meta_ref, "ref", true, false, 0, 1);
			MonolithicImplementation::meta_referedbyComponentInstanceType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementation::meta_referedbyComponentInstanceType, "referedbyComponentInstanceType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_ref, "ref", true, false, 0, 1);
			Component::meta_referedbyComponentRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_referedbyComponentRef, "referedbyComponentRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentInfoProperty");
			ComponentRef::meta_dstComponentInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentInfoProperty, "dstComponentInfoProperty", true, false, 0, -1);
			Property::meta_srcComponentInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcComponentInfoProperty, "srcComponentInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentConfigProperty");
			ComponentRef::meta_dstComponentConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentConfigProperty, "dstComponentConfigProperty", true, false, 0, -1);
			Property::meta_srcComponentConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcComponentConfigProperty, "srcComponentConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentProperty");
			ComponentRef::meta_dstComponentProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentProperty, "dstComponentProperty", true, false, 0, -1);
			ComponentPropertyDescription::meta_srcComponentProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPropertyDescription::meta_srcComponentProperty, "srcComponentProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InEventPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_ref, "ref", true, false, 0, 1);
			EventType::meta_referedbyInEventPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventType::meta_referedbyInEventPort, "referedbyInEventPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			RequiredRequestPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_ref, "ref", true, false, 0, 1);
			Provideable::meta_referedbyRequiredRequestPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Provideable::meta_referedbyRequiredRequestPort, "referedbyRequiredRequestPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ProvidedRequestPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_ref, "ref", true, false, 0, 1);
			Provideable::meta_referedbyProvidedRequestPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Provideable::meta_referedbyProvidedRequestPort, "referedbyProvidedRequestPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OutEventPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_ref, "ref", true, false, 0, 1);
			EventType::meta_referedbyOutEventPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventType::meta_referedbyOutEventPort, "referedbyOutEventPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			LookupKey::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(LookupKey::meta_ref, "ref", true, false, 0, 1);
			LookupKeyType::meta_referedbyLookupKey = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(LookupKeyType::meta_referedbyLookupKey, "referedbyLookupKey", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExtendedPortBase::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendedPortBase::meta_ref, "ref", true, false, 0, 1);
			PortType::meta_referedbyExtendedPortBase = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortType::meta_referedbyExtendedPortBase, "referedbyExtendedPortBase", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentInherits::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentInherits::meta_ref, "ref", true, false, 0, 1);
			Component::meta_referedbyComponentInherits = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_referedbyComponentInherits, "referedbyComponentInherits", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ManagesComponent");
			ComponentFactory::meta_dstManagesComponent = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactory::meta_dstManagesComponent, "dstManagesComponent", true, false, 1, 1);
			Manageable::meta_srcManagesComponent = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Manageable::meta_srcManagesComponent, "srcManagesComponent", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Implements");
			ComponentImplementation::meta_dstImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplements, "dstImplements", true, false, 0, 1);
			ComponentRef::meta_srcImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcImplements, "srcImplements", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ImplementationDependsOn");
			ComponentImplementation::meta_dstImplementationDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplementationDependsOn, "dstImplementationDependsOn", true, false, 0, -1);
			ImplementationDependency::meta_srcImplementationDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationDependency::meta_srcImplementationDependsOn, "srcImplementationDependsOn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ImplementationCapability");
			ComponentImplementation::meta_dstImplementationCapability = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplementationCapability, "dstImplementationCapability", true, false, 0, -1);
			Capability::meta_srcImplementationCapability = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Capability::meta_srcImplementationCapability, "srcImplementationCapability", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentImplementationReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationReference::meta_ref, "ref", true, false, 0, 1);
			ComponentImplementation::meta_referedbyComponentImplementationReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_referedbyComponentImplementationReference, "referedbyComponentImplementationReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ConnectorType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorType::meta_ref, "ref", true, false, 0, 1);
			ConnectorObject::meta_referedbyConnectorType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorObject::meta_referedbyConnectorType, "referedbyConnectorType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ConnectorImplements");
			ConnectorImplementation::meta_dstConnectorImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorImplementation::meta_dstConnectorImplements, "dstConnectorImplements", true, false, 0, 1);
			ConnectorType::meta_srcConnectorImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorType::meta_srcConnectorImplements, "srcConnectorImplements", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ConnectorImplementationType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorImplementationType::meta_ref, "ref", true, false, 0, 1);
			ConnectorImplementation::meta_referedbyConnectorImplementationType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorImplementation::meta_referedbyConnectorImplementationType, "referedbyConnectorImplementationType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Consume");
			ConnectorInstance::meta_dstConsume = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorInstance::meta_dstConsume, "dstConsume", true, false, 0, -1);
			ExtendPortEnd::meta_srcConsume = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExtendPortEnd::meta_srcConsume, "srcConsume", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ConnectorToFacet");
			ConnectorInstance::meta_dstConnectorToFacet = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorInstance::meta_dstConnectorToFacet, "dstConnectorToFacet", true, false, 0, -1);
			ProvidedRequestPortEnd::meta_srcConnectorToFacet = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPortEnd::meta_srcConnectorToFacet, "srcConnectorToFacet", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ConnectorInherits::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorInherits::meta_ref, "ref", true, false, 0, 1);
			ConnectorObject::meta_referedbyConnectorInherits = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectorObject::meta_referedbyConnectorInherits, "referedbyConnectorInherits", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TerminalEffect");
			Terminal::meta_dstTerminalEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Terminal::meta_dstTerminalEffect, "dstTerminalEffect", true, false, 0, 1);
			StateBase::meta_srcTerminalEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcTerminalEffect, "srcTerminalEffect", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "LoopTransition");
			LoopState::meta_dstLoopTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(LoopState::meta_dstLoopTransition, "dstLoopTransition", true, false, 0, 1);
			ActionBase::meta_srcLoopTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcLoopTransition, "srcLoopTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Finish");
			StateBase::meta_dstFinish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_dstFinish, "dstFinish", true, false, 0, -1);
			BehaviorInputAction::meta_srcFinish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BehaviorInputAction::meta_srcFinish, "srcFinish", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BranchTransition");
			BranchState::meta_dstBranchTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BranchState::meta_dstBranchTransition, "dstBranchTransition", true, false, 0, -1);
			ActionBase::meta_srcBranchTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcBranchTransition, "srcBranchTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Transition");
			State::meta_dstTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(State::meta_dstTransition, "dstTransition", true, false, 0, 1);
			ActionBase::meta_srcTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcTransition, "srcTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TerminalTransition");
			State::meta_dstTerminalTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(State::meta_dstTerminalTransition, "dstTerminalTransition", true, false, 0, 1);
			Terminal::meta_srcTerminalTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Terminal::meta_srcTerminalTransition, "srcTerminalTransition", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			TargetRequiredRequestPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TargetRequiredRequestPort::meta_ref, "ref", true, false, 0, 1);
			RequiredRequestPort::meta_referedbyTargetRequiredRequestPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_referedbyTargetRequiredRequestPort, "referedbyTargetRequiredRequestPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ActionType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionType::meta_ref, "ref", true, false, 0, 1);
			Operation::meta_referedbyActionType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Operation::meta_referedbyActionType, "referedbyActionType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Effect");
			ActionBase::meta_dstEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_dstEffect, "dstEffect", true, false, 0, 1);
			StateBase::meta_srcEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcEffect, "srcEffect", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InputEffect");
			BehaviorInputAction::meta_dstInputEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BehaviorInputAction::meta_dstInputEffect, "dstInputEffect", true, false, 0, 1);
			StateBase::meta_srcInputEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcInputEffect, "srcInputEffect", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Variable::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Variable::meta_ref, "ref", true, false, 0, 1);
			PredefinedType::meta_referedbyVariable = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PredefinedType::meta_referedbyVariable, "referedbyVariable", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "QueryInput");
			QueryInputBase::meta_dstQueryInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QueryInputBase::meta_dstQueryInput, "dstQueryInput", true, false, 0, 1);
			QueryInputAction::meta_srcQueryInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QueryInputAction::meta_srcQueryInput, "srcQueryInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MultiInput");
			MultiInputBase::meta_dstMultiInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MultiInputBase::meta_dstMultiInput, "dstMultiInput", true, false, 0, -1);
			MultiInputAction::meta_srcMultiInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MultiInputAction::meta_srcMultiInput, "srcMultiInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Input");
			SingleInputBase::meta_dstInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SingleInputBase::meta_dstInput, "dstInput", true, false, 0, 1);
			InputAction::meta_srcInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InputAction::meta_srcInput, "srcInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			WorkerType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(WorkerType::meta_ref, "ref", true, false, 0, 1);
			Worker::meta_referedbyWorkerType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Worker::meta_referedbyWorkerType, "referedbyWorkerType", true, false, 0, -1);

		}

		// compositions
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationRequirement::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationRequirement::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ImplementationRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ImplementationRequirement_children, "ImplementationRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ImplementationArtifactReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ImplementationArtifactReference_children, "ImplementationArtifactReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithExecParameter::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithExecParameter::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithExecParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithExecParameter_children, "MonolithExecParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithDeployRequirement::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithDeployRequirement::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithDeployRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithDeployRequirement_children, "MonolithDeployRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithprimaryArtifact::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithprimaryArtifact::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithprimaryArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithprimaryArtifact_children, "MonolithprimaryArtifact", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConfigProperty::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConfigProperty::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ConfigProperty_children, "ConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InfoProperty::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InfoProperty::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_InfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_InfoProperty_children, "InfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent, "ComponentFactoryImplementationContainer_parent", true);
			ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children, "ComponentFactoryInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent, "ComponentFactoryImplementations_parent", true);
			ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children, "ComponentFactoryImplementationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceLevels::meta_ServiceProvider_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceLevels::meta_ServiceProvider_parent, "ServiceProvider_parent", true);
			ServiceProvider::meta_ServiceLevels_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServiceProvider::meta_ServiceLevels_child, "ServiceLevels", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MultipleServiceRequests::meta_ServiceProvider_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MultipleServiceRequests::meta_ServiceProvider_parent, "ServiceProvider_parent", true);
			ServiceProvider::meta_MultipleServiceRequests_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServiceProvider::meta_MultipleServiceRequests_child, "MultipleServiceRequests", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceConsumer::meta_RTRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceConsumer::meta_RTRequirements_parent, "RTRequirements_parent", true);
			RTRequirements::meta_ServiceConsumer_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RTRequirements::meta_ServiceConsumer_child, "ServiceConsumer", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceProvider::meta_RTRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceProvider::meta_RTRequirements_parent, "RTRequirements_parent", true);
			RTRequirements::meta_ServiceProvider_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RTRequirements::meta_ServiceProvider_child, "ServiceProvider", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ECRole::meta_ECRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ECRole::meta_ECRequirements_parent, "ECRequirements_parent", true);
			ECRequirements::meta_ECRole_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ECRequirements::meta_ECRole_children, "ECRole", true, 2, 2);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ECBehavior::meta_ECRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ECBehavior::meta_ECRequirements_parent, "ECRequirements_parent", true);
			ECRequirements::meta_ECBehavior_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ECRequirements::meta_ECBehavior_child, "ECBehavior", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathProperty::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathProperty::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_PathProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_PathProperty_children, "PathProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Path::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Path::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_Path_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_Path_children, "Path", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Paths::meta_PathDiagrams_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Paths::meta_PathDiagrams_parent, "PathDiagrams_parent", true);
			PathDiagrams::meta_Paths_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PathDiagrams::meta_Paths_children, "Paths", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Port::meta_ConnectedComponent_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Port::meta_ConnectedComponent_parent, "ConnectedComponent_parent", true);
			ConnectedComponent::meta_Port_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectedComponent::meta_Port_children, "Port", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DstEdge::meta_ConnectedComponent_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DstEdge::meta_ConnectedComponent_parent, "ConnectedComponent_parent", true);
			ConnectedComponent::meta_DstEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectedComponent::meta_DstEdge_children, "DstEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Path_parent, "Path_parent", true);
			Path::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			GraphVertex::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(GraphVertex::meta_Path_parent, "Path_parent", true);
			Path::meta_GraphVertex_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_GraphVertex_children, "GraphVertex", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Edge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Edge::meta_Path_parent, "Path_parent", true);
			Path::meta_Edge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_Edge_children, "Edge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EdgeProperty::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EdgeProperty::meta_Path_parent, "Path_parent", true);
			Path::meta_EdgeProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_EdgeProperty_children, "EdgeProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SrcEdge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SrcEdge::meta_Path_parent, "Path_parent", true);
			Path::meta_SrcEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_SrcEdge_children, "SrcEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_Path_parent, "Path_parent", true);
			Path::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DstEdge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DstEdge::meta_Path_parent, "Path_parent", true);
			Path::meta_DstEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_DstEdge_children, "DstEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataAnalysisBase::meta_MetricsBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataAnalysisBase::meta_MetricsBase_parent, "MetricsBase_parent", true);
			MetricsBase::meta_DataAnalysisBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MetricsBase::meta_DataAnalysisBase_children, "DataAnalysisBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkAnalysis::meta_ComponentAnalyses_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkAnalysis::meta_ComponentAnalyses_parent, "ComponentAnalyses_parent", true);
			ComponentAnalyses::meta_BenchmarkAnalysis_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAnalyses::meta_BenchmarkAnalysis_children, "BenchmarkAnalysis", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_BenchmarkCharacteristics_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_BenchmarkCharacteristics_children, "BenchmarkCharacteristics", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkType::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkType::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_BenchmarkType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_BenchmarkType_children, "BenchmarkType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_WorkLoadOperationConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_WorkLoadOperationConnection_children, "WorkLoadOperationConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CompRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CompRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_CompRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_CompRef_children, "CompRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentOperation::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentOperation::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_ComponentOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_ComponentOperation_children, "ComponentOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkloadCharacteristics::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkloadCharacteristics::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_WorkloadCharacteristics_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_WorkloadCharacteristics_children, "WorkloadCharacteristics", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Task::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Task::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_Task_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_Task_children, "Task", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TaskSet::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TaskSet::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TaskSet_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TaskSet_children, "TaskSet", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimerEventSinkConn::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimerEventSinkConn::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimerEventSinkConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimerEventSinkConn_children, "TimerEventSinkConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Event::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Event::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_Event_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_Event_children, "Event", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_EventRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_EventRef_children, "EventRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_OperationRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_OperationRef_children, "OperationRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimeProbe::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimeProbe::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimeProbe_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimeProbe_children, "TimeProbe", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MetricsBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MetricsBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_MetricsBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_MetricsBase_children, "MetricsBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataAnalysisBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataAnalysisBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_DataAnalysisBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_DataAnalysisBase_children, "DataAnalysisBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MetricConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MetricConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_MetricConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_MetricConnection_children, "MetricConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimerConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimerConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimerConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimerConnection_children, "TimerConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_OperationBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_OperationBase_children, "OperationBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Node_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Node_parent, "Node_parent", true);
			Node::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Node::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Interconnect_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Interconnect_parent, "Interconnect_parent", true);
			Interconnect::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Interconnect::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Bridge_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Bridge_parent, "Bridge_parent", true);
			Bridge::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Bridge::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlan::meta_DeploymentPlans_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlan::meta_DeploymentPlans_parent, "DeploymentPlans_parent", true);
			DeploymentPlans::meta_DeploymentPlan_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlans::meta_DeploymentPlan_children, "DeploymentPlan", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CollocationGroupProperty::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CollocationGroupProperty::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_CollocationGroupProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_CollocationGroupProperty_children, "CollocationGroupProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InstanceMapping::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InstanceMapping::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_InstanceMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_InstanceMapping_children, "InstanceMapping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NodeReference::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NodeReference::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_NodeReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_NodeReference_children, "NodeReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CollocationGroup::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CollocationGroup::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_CollocationGroup_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_CollocationGroup_children, "CollocationGroup", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PropertyMapping::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PropertyMapping::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_PropertyMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_PropertyMapping_children, "PropertyMapping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CollocationGroupMember::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CollocationGroupMember::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_CollocationGroupMember_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_CollocationGroupMember_children, "CollocationGroupMember", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Deploys::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Deploys::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_Deploys_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_Deploys_children, "Deploys", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurationContainer::meta_PackageConfigurations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurationContainer::meta_PackageConfigurations_parent, "PackageConfigurations_parent", true);
			PackageConfigurations::meta_PackageConfigurationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurations::meta_PackageConfigurationContainer_children, "PackageConfigurationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfiguration::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfiguration::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfiguration_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfiguration_children, "PackageConfiguration", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child, "PackageConfSpecializedConfig", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfSelectRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfSelectRequirement_children, "PackageConfSelectRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfConfigProperty::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfConfigProperty::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfConfigProperty_children, "PackageConfConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackageReference::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackageReference::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_ComponentPackageReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_ComponentPackageReference_child, "ComponentPackageReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_ComponentPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_ComponentPackage_child, "ComponentPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfReference::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfReference::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfReference_child, "PackageConfReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfBasePackage::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfBasePackage::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfBasePackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfBasePackage_child, "PackageConfBasePackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDependency::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDependency::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDependency_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDependency_children, "ArtifactDependency", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifact::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifact::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ImplementationArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ImplementationArtifact_children, "ImplementationArtifact", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactInfoProperty::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactInfoProperty::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactInfoProperty_children, "ArtifactInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactExecParameter::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactExecParameter::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactExecParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactExecParameter_children, "ArtifactExecParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDeployRequirement::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDeployRequirement::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDeployRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDeployRequirement_children, "ArtifactDeployRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ImplementationArtifactReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ImplementationArtifactReference_children, "ImplementationArtifactReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDependsOn::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDependsOn::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDependsOn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDependsOn_children, "ArtifactDependsOn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactContainer::meta_ImplementationArtifacts_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactContainer::meta_ImplementationArtifacts_parent, "ImplementationArtifacts_parent", true);
			ImplementationArtifacts::meta_ArtifactContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationArtifacts::meta_ArtifactContainer_children, "ArtifactContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackageContainer::meta_TopLevelPackages_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackageContainer::meta_TopLevelPackages_parent, "TopLevelPackages_parent", true);
			TopLevelPackages::meta_TopLevelPackageContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackages::meta_TopLevelPackageContainer_children, "TopLevelPackageContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			package::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(package::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_package_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_package_child, "package", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackage::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackage::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_TopLevelPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_TopLevelPackage_child, "TopLevelPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurationReference::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurationReference::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_PackageConfigurationReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_PackageConfigurationReference_child, "PackageConfigurationReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentPackage_child, "ComponentPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageInfoProperty::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageInfoProperty::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageInfoProperty_children, "PackageInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigProperty::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigProperty::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageConfigProperty_children, "PackageConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementationReference::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementationReference::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentImplementationReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentImplementationReference_children, "ComponentImplementationReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Implementation::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Implementation::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_Implementation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_Implementation_children, "Implementation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageInterface::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageInterface::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageInterface_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageInterface_child, "PackageInterface", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageContainer::meta_ComponentPackages_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageContainer::meta_ComponentPackages_parent, "ComponentPackages_parent", true);
			ComponentPackages::meta_PackageContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentPackages::meta_PackageContainer_children, "PackageContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataValueBase::meta_ComplexProperty_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataValueBase::meta_ComplexProperty_parent, "ComplexProperty_parent", true);
			ComplexProperty::meta_DataValueBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComplexProperty::meta_DataValueBase_children, "DataValueBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComplexTypeReference::meta_ComplexProperty_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComplexTypeReference::meta_ComplexProperty_parent, "ComplexProperty_parent", true);
			ComplexProperty::meta_ComplexTypeReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComplexProperty::meta_ComplexTypeReference_child, "ComplexTypeReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataValueBase::meta_DataValueContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataValueBase::meta_DataValueContainer_parent, "DataValueContainer_parent", true);
			DataValueContainer::meta_DataValueBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DataValueContainer::meta_DataValueBase_children, "DataValueBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComplexTypeReference::meta_DataValueContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComplexTypeReference::meta_DataValueContainer_parent, "DataValueContainer_parent", true);
			DataValueContainer::meta_ComplexTypeReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DataValueContainer::meta_ComplexTypeReference_child, "ComplexTypeReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_RequirementBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_RequirementBase_parent, "RequirementBase_parent", true);
			RequirementBase::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RequirementBase::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SatisfierProperty::meta_RequirementSatisfier_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SatisfierProperty::meta_RequirementSatisfier_parent, "RequirementSatisfier_parent", true);
			RequirementSatisfier::meta_SatisfierProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RequirementSatisfier::meta_SatisfierProperty_children, "SatisfierProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataType::meta_SatisfierProperty_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataType::meta_SatisfierProperty_parent, "SatisfierProperty_parent", true);
			SatisfierProperty::meta_DataType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SatisfierProperty::meta_DataType_child, "DataType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Domain::meta_Targets_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Domain::meta_Targets_parent, "Targets_parent", true);
			Targets::meta_Domain_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Targets::meta_Domain_children, "Domain", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Shares::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Shares::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Shares_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Shares_children, "Shares", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SharedResource::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SharedResource::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_SharedResource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_SharedResource_children, "SharedResource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Bridge::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Bridge::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Bridge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Bridge_children, "Bridge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BridgeConnection::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BridgeConnection::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_BridgeConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_BridgeConnection_children, "BridgeConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Node::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Node::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Node_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Node_children, "Node", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Interconnect::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Interconnect::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Interconnect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Interconnect_children, "Interconnect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InterconnectConnection::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InterconnectConnection::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_InterconnectConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_InterconnectConnection_children, "InterconnectConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExceptionRef::meta_HasExceptions_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExceptionRef::meta_HasExceptions_parent, "HasExceptions_parent", true);
			HasExceptions::meta_ExceptionRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasExceptions::meta_ExceptionRef_children, "ExceptionRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReturnType::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReturnType::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_ReturnType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_ReturnType_child, "ReturnType", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OutParameter::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OutParameter::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_OutParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_OutParameter_children, "OutParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InoutParameter::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InoutParameter::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_InoutParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_InoutParameter_children, "InoutParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InParameter::meta_OperationBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InParameter::meta_OperationBase_parent, "OperationBase_parent", true);
			OperationBase::meta_InParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(OperationBase::meta_InParameter_children, "InParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MakeMemberPrivate::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MakeMemberPrivate::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_MakeMemberPrivate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_MakeMemberPrivate_children, "MakeMemberPrivate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PrivateFlag::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PrivateFlag::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_PrivateFlag_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_PrivateFlag_children, "PrivateFlag", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FactoryOperation::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FactoryOperation::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_FactoryOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_FactoryOperation_children, "FactoryOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SetException::meta_Attribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SetException::meta_Attribute_parent, "Attribute_parent", true);
			Attribute::meta_SetException_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Attribute::meta_SetException_children, "SetException", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMember::meta_ReadonlyAttribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMember::meta_ReadonlyAttribute_parent, "ReadonlyAttribute_parent", true);
			ReadonlyAttribute::meta_AttributeMember_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ReadonlyAttribute::meta_AttributeMember_child, "AttributeMember", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			GetException::meta_ReadonlyAttribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(GetException::meta_ReadonlyAttribute_parent, "ReadonlyAttribute_parent", true);
			ReadonlyAttribute::meta_GetException_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ReadonlyAttribute::meta_GetException_children, "GetException", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Supports::meta_SupportsInterfaces_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Supports::meta_SupportsInterfaces_parent, "SupportsInterfaces_parent", true);
			SupportsInterfaces::meta_Supports_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SupportsInterfaces::meta_Supports_children, "Supports", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NoInheritable::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NoInheritable::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_NoInheritable_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_NoInheritable_children, "NoInheritable", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TwowayOperation::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TwowayOperation::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_TwowayOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_TwowayOperation_children, "TwowayOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OnewayOperation::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OnewayOperation::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_OnewayOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_OnewayOperation_children, "OnewayOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_Inheritable_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_Inheritable_parent, "Inheritable_parent", true);
			Inheritable::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Inheritable::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Inherits::meta_Inheritable_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Inherits::meta_Inheritable_parent, "Inheritable_parent", true);
			Inheritable::meta_Inherits_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Inheritable::meta_Inherits_children, "Inherits", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LabelConnection::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LabelConnection::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_LabelConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_LabelConnection_children, "LabelConnection", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Discriminator::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Discriminator::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Discriminator_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Discriminator_child, "Discriminator", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Label::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Label::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Label_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Label_children, "Label", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Key::meta_Aggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Key::meta_Aggregate_parent, "Aggregate_parent", true);
			Aggregate::meta_Key_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Aggregate::meta_Key_child, "Key", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			KeyMember::meta_Aggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(KeyMember::meta_Aggregate_parent, "Aggregate_parent", true);
			Aggregate::meta_KeyMember_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Aggregate::meta_KeyMember_children, "KeyMember", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_Aggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_Aggregate_parent, "Aggregate_parent", true);
			Aggregate::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Aggregate::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EnumValue::meta_Enum_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EnumValue::meta_Enum_parent, "Enum_parent", true);
			Enum::meta_EnumValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Enum::meta_EnumValue_children, "EnumValue", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PredefinedType::meta_PredefinedTypes_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PredefinedType::meta_PredefinedTypes_parent, "PredefinedTypes_parent", true);
			PredefinedTypes::meta_PredefinedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PredefinedTypes::meta_PredefinedType_children, "PredefinedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageType::meta_TemplatePackageAlias_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageType::meta_TemplatePackageAlias_parent, "TemplatePackageAlias_parent", true);
			TemplatePackageAlias::meta_PackageType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TemplatePackageAlias::meta_PackageType_child, "PackageType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TemplateParameterReference::meta_TemplatePackageAlias_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TemplateParameterReference::meta_TemplatePackageAlias_parent, "TemplatePackageAlias_parent", true);
			TemplatePackageAlias::meta_TemplateParameterReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TemplatePackageAlias::meta_TemplateParameterReference_children, "TemplateParameterReference", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TemplateParameterValue::meta_TemplatePackageInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TemplateParameterValue::meta_TemplatePackageInstance_parent, "TemplatePackageInstance_parent", true);
			TemplatePackageInstance::meta_TemplateParameterValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TemplatePackageInstance::meta_TemplateParameterValue_children, "TemplateParameterValue", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageType::meta_TemplatePackageInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageType::meta_TemplatePackageInstance_parent, "TemplatePackageInstance_parent", true);
			TemplatePackageInstance::meta_PackageType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TemplatePackageInstance::meta_PackageType_child, "PackageType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			File::meta_InterfaceDefinitions_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(File::meta_InterfaceDefinitions_parent, "InterfaceDefinitions_parent", true);
			InterfaceDefinitions::meta_File_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(InterfaceDefinitions::meta_File_children, "File", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_Exception_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_Exception_parent, "Exception_parent", true);
			Exception::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Exception::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NativeValue::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NativeValue::meta_File_parent, "File_parent", true);
			File::meta_NativeValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_NativeValue_children, "NativeValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ManagesComponent::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ManagesComponent::meta_File_parent, "File_parent", true);
			File::meta_ManagesComponent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_ManagesComponent_children, "ManagesComponent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_File_parent, "File_parent", true);
			File::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NamedType::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NamedType::meta_File_parent, "File_parent", true);
			File::meta_NamedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_NamedType_children, "NamedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_File_parent, "File_parent", true);
			File::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_File_parent, "File_parent", true);
			File::meta_FileRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_FileRef_children, "FileRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_File_parent, "File_parent", true);
			File::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Package::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Package::meta_File_parent, "File_parent", true);
			File::meta_Package_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Package_children, "Package", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NativeValue::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NativeValue::meta_Package_parent, "Package_parent", true);
			Package::meta_NativeValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_NativeValue_children, "NativeValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TemplateParameter::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TemplateParameter::meta_Package_parent, "Package_parent", true);
			Package::meta_TemplateParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_TemplateParameter_children, "TemplateParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ManagesComponent::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ManagesComponent::meta_Package_parent, "Package_parent", true);
			Package::meta_ManagesComponent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_ManagesComponent_children, "ManagesComponent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_Package_parent, "Package_parent", true);
			Package::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NamedType::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NamedType::meta_Package_parent, "Package_parent", true);
			Package::meta_NamedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_NamedType_children, "NamedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_Package_parent, "Package_parent", true);
			Package::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_Package_parent, "Package_parent", true);
			Package::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Package::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Package::meta_Package_parent, "Package_parent", true);
			Package::meta_Package_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Package_children, "Package", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ExecutorProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ExecutorProject_parent, "ExecutorProject_parent", true);
			ExecutorProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ExecutorProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_ServantProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_ServantProject_parent, "ServantProject_parent", true);
			ServantProject::meta_FileRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServantProject::meta_FileRef_child, "FileRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ServantProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ServantProject_parent, "ServantProject_parent", true);
			ServantProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServantProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_StubProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_StubProject_parent, "StubProject_parent", true);
			StubProject::meta_FileRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(StubProject::meta_FileRef_child, "FileRef", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_StubProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_StubProject_parent, "StubProject_parent", true);
			StubProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(StubProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Project::meta_MPC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Project::meta_MPC_parent, "MPC_parent", true);
			MPC::meta_Project_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MPC::meta_Project_children, "Project", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Workspaces::meta_MPC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Workspaces::meta_MPC_parent, "MPC_parent", true);
			MPC::meta_Workspaces_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MPC::meta_Workspaces_children, "Workspaces", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifact::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifact::meta_Project_parent, "Project_parent", true);
			Project::meta_ImplementationArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ImplementationArtifact_children, "ImplementationArtifact", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentLib::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentLib::meta_Project_parent, "Project_parent", true);
			Project::meta_ComponentLib_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ComponentLib_children, "ComponentLib", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtResourceConn::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtResourceConn::meta_Project_parent, "Project_parent", true);
			Project::meta_ExtResourceConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ExtResourceConn_children, "ExtResourceConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalResources::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalResources::meta_Project_parent, "Project_parent", true);
			Project::meta_ExternalResources_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ExternalResources_children, "ExternalResources", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MPC::meta_ComponentBuild_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MPC::meta_ComponentBuild_parent, "ComponentBuild_parent", true);
			ComponentBuild::meta_MPC_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentBuild::meta_MPC_children, "MPC", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MirrorDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MirrorDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_MirrorDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_MirrorDelegate_children, "MirrorDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MirrorPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MirrorPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_MirrorPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_MirrorPortDelegate_children, "MirrorPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtendedPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtendedPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExtendedPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExtendedPortDelegate_children, "ExtendedPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtendedDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtendedDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExtendedDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExtendedDelegate_children, "ExtendedDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorToFacet::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorToFacet::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ConnectorToFacet_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ConnectorToFacet_children, "ConnectorToFacet", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorToReceptacle::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorToReceptacle::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ConnectorToReceptacle_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ConnectorToReceptacle_children, "ConnectorToReceptacle", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ProvidedRequestPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ProvidedRequestPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ProvidedRequestPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ProvidedRequestPortDelegate_children, "ProvidedRequestPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RequiredRequestPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RequiredRequestPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_RequiredRequestPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_RequiredRequestPortDelegate_children, "RequiredRequestPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OutEventPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OutEventPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_OutEventPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_OutEventPortDelegate_children, "OutEventPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InEventPortDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InEventPortDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_InEventPortDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_InEventPortDelegate_children, "InEventPortDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Consume::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Consume::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Consume_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Consume_children, "Consume", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Publish::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Publish::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Publish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Publish_children, "Publish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorInstance::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorInstance::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ConnectorInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ConnectorInstance_children, "ConnectorInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentInstance::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentInstance::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentInstance_children, "ComponentInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalPort::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalPort::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExternalPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExternalPort_children, "ExternalPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMapping::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMapping::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMapping_children, "AttributeMapping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExternalDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExternalDelegate_children, "ExternalDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMappingDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMappingDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMappingDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMappingDelegate_children, "AttributeMappingDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReceptacleDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReceptacleDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ReceptacleDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ReceptacleDelegate_children, "ReceptacleDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Invoke::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Invoke::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Invoke_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Invoke_children, "Invoke", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FacetDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FacetDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_FacetDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_FacetDelegate_children, "FacetDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyConfigProperty::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyConfigProperty::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AssemblyConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AssemblyConfigProperty_children, "AssemblyConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMappingValue::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMappingValue::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMappingValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMappingValue_children, "AttributeMappingValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeDelegate_children, "AttributeDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeValue::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeValue::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeValue_children, "AttributeValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyselectRequirement::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyselectRequirement::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AssemblyselectRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AssemblyselectRequirement_children, "AssemblyselectRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyReference::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyReference::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentAssemblyReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentAssemblyReference_children, "ComponentAssemblyReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSinkDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSinkDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSinkDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSinkDelegate_children, "EventSinkDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSourceDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSourceDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSourceDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSourceDelegate_children, "EventSourceDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SendsTo::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SendsTo::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_SendsTo_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_SendsTo_children, "SendsTo", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssembly::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssembly::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentAssembly_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentAssembly_children, "ComponentAssembly", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackageReference::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackageReference::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentPackageReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentPackageReference_children, "ComponentPackageReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentPackage_children, "ComponentPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReturnType::meta_Operation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReturnType::meta_Operation_parent, "Operation_parent", true);
			Operation::meta_ReturnType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Operation::meta_ReturnType_child, "ReturnType", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ParameterType::meta_Operation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ParameterType::meta_Operation_parent, "Operation_parent", true);
			Operation::meta_ParameterType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Operation::meta_ParameterType_children, "ParameterType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Worker::meta_WorkerPackageBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Worker::meta_WorkerPackageBase_parent, "WorkerPackageBase_parent", true);
			WorkerPackageBase::meta_Worker_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerPackageBase::meta_Worker_children, "Worker", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerPackage::meta_WorkerPackage_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerPackage::meta_WorkerPackage_parent, "WorkerPackage_parent", true);
			WorkerPackage::meta_WorkerPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerPackage::meta_WorkerPackage_children, "WorkerPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerPackage::meta_WorkerFile_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerPackage::meta_WorkerFile_parent, "WorkerFile_parent", true);
			WorkerFile::meta_WorkerPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerFile::meta_WorkerPackage_children, "WorkerPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerLibrary::meta_WorkerLibraries_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerLibrary::meta_WorkerLibraries_parent, "WorkerLibraries_parent", true);
			WorkerLibraries::meta_WorkerLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerLibraries::meta_WorkerLibrary_children, "WorkerLibrary", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Operation::meta_Worker_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Operation::meta_Worker_parent, "Worker_parent", true);
			Worker::meta_Operation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Worker::meta_Operation_children, "Operation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerFile::meta_WorkerLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerFile::meta_WorkerLibrary_parent, "WorkerLibrary_parent", true);
			WorkerLibrary::meta_WorkerFile_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerLibrary::meta_WorkerFile_children, "WorkerFile", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PortInstance::meta_ComponentInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PortInstance::meta_ComponentInstance_parent, "ComponentInstance_parent", true);
			ComponentInstance::meta_PortInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentInstance::meta_PortInstance_children, "PortInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SupportsInstance::meta_ComponentInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SupportsInstance::meta_ComponentInstance_parent, "ComponentInstance_parent", true);
			ComponentInstance::meta_SupportsInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentInstance::meta_SupportsInstance_children, "SupportsInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentInstanceType::meta_ComponentInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentInstanceType::meta_ComponentInstance_parent, "ComponentInstance_parent", true);
			ComponentInstance::meta_ComponentInstanceType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentInstance::meta_ComponentInstanceType_child, "ComponentInstanceType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtendedPortBase::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtendedPortBase::meta_Component_parent, "Component_parent", true);
			Component::meta_ExtendedPortBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_ExtendedPortBase_children, "ExtendedPortBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentInherits::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentInherits::meta_Component_parent, "Component_parent", true);
			Component::meta_ComponentInherits_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_ComponentInherits_child, "ComponentInherits", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_Component_parent, "Component_parent", true);
			Component::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Port::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Port::meta_Component_parent, "Component_parent", true);
			Component::meta_Port_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_Port_children, "Port", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_PortType_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_PortType_parent, "PortType_parent", true);
			PortType::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PortType::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ObjectPort::meta_PortType_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ObjectPort::meta_PortType_parent, "PortType_parent", true);
			PortType::meta_ObjectPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PortType::meta_ObjectPort_children, "ObjectPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LookupKey::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LookupKey::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_LookupKey_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_LookupKey_child, "LookupKey", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LookupOperation::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LookupOperation::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_LookupOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_LookupOperation_children, "LookupOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FactoryOperation::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FactoryOperation::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_FactoryOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_FactoryOperation_children, "FactoryOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementation::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementation::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ComponentImplementation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ComponentImplementation_children, "ComponentImplementation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathReference::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathReference::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_PathReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_PathReference_child, "PathReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CriticalPath::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CriticalPath::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_CriticalPath_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_CriticalPath_children, "CriticalPath", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Capability::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Capability::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_Capability_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_Capability_children, "Capability", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationCapability::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationCapability::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationCapability_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationCapability_children, "ImplementationCapability", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationDependency::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationDependency::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationDependency_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationDependency_children, "ImplementationDependency", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Implements::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Implements::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_Implements_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_Implements_child, "Implements", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationDependsOn::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationDependsOn::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationDependsOn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationDependsOn_children, "ImplementationDependsOn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementationContainer::meta_ComponentImplementations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementationContainer::meta_ComponentImplementations_parent, "ComponentImplementations_parent", true);
			ComponentImplementations::meta_ComponentImplementationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementations::meta_ComponentImplementationContainer_children, "ComponentImplementationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPropertyDescription::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPropertyDescription::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentPropertyDescription_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentPropertyDescription_children, "ComponentPropertyDescription", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentProperty_children, "ComponentProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentInfoProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentInfoProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentInfoProperty_children, "ComponentInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentConfigProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentConfigProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentConfigProperty_children, "ComponentConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataType::meta_ComponentPropertyDescription_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataType::meta_ComponentPropertyDescription_parent, "ComponentPropertyDescription_parent", true);
			ComponentPropertyDescription::meta_DataType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentPropertyDescription::meta_DataType_child, "DataType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentContainer::meta_ComponentTypes_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentContainer::meta_ComponentTypes_parent, "ComponentTypes_parent", true);
			ComponentTypes::meta_ComponentContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentTypes::meta_ComponentContainer_children, "ComponentContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorImplements::meta_ConnectorImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorImplements::meta_ConnectorImplementationContainer_parent, "ConnectorImplementationContainer_parent", true);
			ConnectorImplementationContainer::meta_ConnectorImplements_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorImplementationContainer::meta_ConnectorImplements_children, "ConnectorImplements", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorType::meta_ConnectorImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorType::meta_ConnectorImplementationContainer_parent, "ConnectorImplementationContainer_parent", true);
			ConnectorImplementationContainer::meta_ConnectorType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorImplementationContainer::meta_ConnectorType_children, "ConnectorType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorImplementation::meta_ConnectorImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorImplementation::meta_ConnectorImplementationContainer_parent, "ConnectorImplementationContainer_parent", true);
			ConnectorImplementationContainer::meta_ConnectorImplementation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorImplementationContainer::meta_ConnectorImplementation_children, "ConnectorImplementation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorImplementationContainer::meta_ConnectorImplementations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorImplementationContainer::meta_ConnectorImplementations_parent, "ConnectorImplementations_parent", true);
			ConnectorImplementations::meta_ConnectorImplementationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorImplementations::meta_ConnectorImplementationContainer_children, "ConnectorImplementationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeInstance::meta_ConnectorInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeInstance::meta_ConnectorInstance_parent, "ConnectorInstance_parent", true);
			ConnectorInstance::meta_AttributeInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorInstance::meta_AttributeInstance_children, "AttributeInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorImplementationType::meta_ConnectorInstance_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorImplementationType::meta_ConnectorInstance_parent, "ConnectorInstance_parent", true);
			ConnectorInstance::meta_ConnectorImplementationType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorInstance::meta_ConnectorImplementationType_child, "ConnectorImplementationType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Collection::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Collection::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_Collection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_Collection_children, "Collection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Aggregate::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Aggregate::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_Aggregate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_Aggregate_children, "Aggregate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtendedPortBase::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtendedPortBase::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_ExtendedPortBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_ExtendedPortBase_children, "ExtendedPortBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorInherits::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorInherits::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_ConnectorInherits_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_ConnectorInherits_child, "ConnectorInherits", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ObjectPort::meta_ConnectorObject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ObjectPort::meta_ConnectorObject_parent, "ConnectorObject_parent", true);
			ConnectorObject::meta_ObjectPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectorObject::meta_ObjectPort_children, "ObjectPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TargetRequiredRequestPort::meta_CallAction_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TargetRequiredRequestPort::meta_CallAction_parent, "CallAction_parent", true);
			CallAction::meta_TargetRequiredRequestPort_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(CallAction::meta_TargetRequiredRequestPort_child, "TargetRequiredRequestPort", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_QueryInputAction_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_QueryInputAction_parent, "QueryInputAction_parent", true);
			QueryInputAction::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(QueryInputAction::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ActionBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ActionBase_parent, "ActionBase_parent", true);
			ActionBase::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ActionBase::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ActionType::meta_Action_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ActionType::meta_Action_parent, "Action_parent", true);
			Action::meta_ActionType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Action::meta_ActionType_child, "ActionType", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_BehaviorInputAction_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_BehaviorInputAction_parent, "BehaviorInputAction_parent", true);
			BehaviorInputAction::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorInputAction::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Variable::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Variable::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Variable_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Variable_children, "Variable", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LoopTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LoopTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_LoopTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_LoopTransition_children, "LoopTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Transition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Transition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Transition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Transition_children, "Transition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BranchTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BranchTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_BranchTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_BranchTransition_children, "BranchTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			StateBase::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(StateBase::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_StateBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_StateBase_children, "StateBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TerminalEffect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TerminalEffect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_TerminalEffect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_TerminalEffect_children, "TerminalEffect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Terminal::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Terminal::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Terminal_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Terminal_children, "Terminal", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TerminalTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TerminalTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_TerminalTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_TerminalTransition_children, "TerminalTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QueryInputAction::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QueryInputAction::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_QueryInputAction_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_QueryInputAction_children, "QueryInputAction", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Effect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Effect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Effect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Effect_children, "Effect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ActionBase::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ActionBase::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_ActionBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_ActionBase_children, "ActionBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InputEffect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InputEffect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_InputEffect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_InputEffect_children, "InputEffect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BehaviorInputAction::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BehaviorInputAction::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_BehaviorInputAction_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_BehaviorInputAction_children, "BehaviorInputAction", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Finish::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Finish::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Finish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Finish_children, "Finish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerType::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerType::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_WorkerType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_WorkerType_children, "WorkerType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QueryInput::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QueryInput::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_QueryInput_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_QueryInput_children, "QueryInput", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Input::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Input::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_Input_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_Input_children, "Input", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MultiInput::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MultiInput::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_MultiInput_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_MultiInput_children, "MultiInput", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Environment::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Environment::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_Environment_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_Environment_child, "Environment", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ApplicationTask::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ApplicationTask::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_ApplicationTask_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_ApplicationTask_children, "ApplicationTask", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PeriodicEvent::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PeriodicEvent::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_PeriodicEvent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_PeriodicEvent_children, "PeriodicEvent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryImplementations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryImplementations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentFactoryImplementations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentFactoryImplementations_children, "ComponentFactoryImplementations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathDiagrams::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathDiagrams::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PathDiagrams_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PathDiagrams_children, "PathDiagrams", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAnalyses::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAnalyses::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentAnalyses_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentAnalyses_children, "ComponentAnalyses", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlans::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlans::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_DeploymentPlans_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_DeploymentPlans_children, "DeploymentPlans", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PackageConfigurations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PackageConfigurations_children, "PackageConfigurations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifacts::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifacts::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ImplementationArtifacts_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ImplementationArtifacts_children, "ImplementationArtifacts", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackages::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackages::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_TopLevelPackages_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_TopLevelPackages_children, "TopLevelPackages", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackages::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackages::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentPackages_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentPackages_children, "ComponentPackages", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Targets::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Targets::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_Targets_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_Targets_children, "Targets", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PredefinedTypes::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PredefinedTypes::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PredefinedTypes_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PredefinedTypes_children, "PredefinedTypes", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InterfaceDefinitions::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InterfaceDefinitions::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_InterfaceDefinitions_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_InterfaceDefinitions_children, "InterfaceDefinitions", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentBuild::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentBuild::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentBuild_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentBuild_children, "ComponentBuild", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerLibraries::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerLibraries::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_WorkerLibraries_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_WorkerLibraries_children, "WorkerLibraries", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentImplementations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentImplementations_children, "ComponentImplementations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentTypes::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentTypes::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentTypes_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentTypes_children, "ComponentTypes", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConnectorImplementations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConnectorImplementations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ConnectorImplementations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ConnectorImplementations_children, "ConnectorImplementations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RootFolder::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RootFolder::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_RootFolder_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_RootFolder_children, "RootFolder", true, 0, -1);

		}

	}

	void InitMetaLinks() {
		ActionType::meta_Action_parent.target() = Action::meta;

		ActionBase::meta_srcLoopTransition.target() = LoopState::meta;
		ActionBase::meta_srcBranchTransition.target() = BranchState::meta;
		ActionBase::meta_srcTransition.target() = State::meta;
		ActionBase::meta_dstEffect.target() = StateBase::meta;
		Property::meta_ActionBase_parent.target() = ActionBase::meta;
		BehaviorModel::meta_ActionBase_children.target() = ActionBase::meta;
		ActionBase::meta.subTypes() += CallAction::meta;
		ActionBase::meta.subTypes() += RequestAction::meta;
		ActionBase::meta.subTypes() += QueryAction::meta;
		ActionBase::meta.subTypes() += OutputAction::meta;
		ActionBase::meta.subTypes() += Action::meta;

		ActionType::meta_ref.target() = Operation::meta;
		Action::meta_ActionType_child.target() = ActionType::meta;

		Key::meta_Aggregate_parent.target() = Aggregate::meta;
		KeyMember::meta_Aggregate_parent.target() = Aggregate::meta;
		Member::meta_Aggregate_parent.target() = Aggregate::meta;
		ConnectorObject::meta_Aggregate_children.target() = Aggregate::meta;

		Alias::meta_ref.target() = MemberType::meta;

		TopLevelBehavior::meta_ApplicationTask_children.target() = ApplicationTask::meta;

		Property::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactDependency::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifact::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactInfoProperty::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactExecParameter::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		Requirement::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactDeployRequirement::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifactReference::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactDependsOn::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifacts::meta_ArtifactContainer_children.target() = ArtifactContainer::meta;

		ArtifactContainer::meta_ArtifactDependency_children.target() = ArtifactDependency::meta;
		ArtifactDependency::meta.association() = ImplementationArtifact::meta_dstArtifactDependency.parent();
		ArtifactDependency::meta_dstArtifactDependency_end_ = ImplementationArtifact::meta_srcArtifactDependency_rev = ImplementationArtifact::meta_dstArtifactDependency;
		ArtifactDependency::meta_srcArtifactDependency_end_ = ImplementationArtifact::meta_dstArtifactDependency_rev = ImplementationArtifact::meta_srcArtifactDependency;

		ArtifactContainer::meta_ArtifactDependsOn_children.target() = ArtifactDependsOn::meta;
		ArtifactDependsOn::meta.association() = ImplementationArtifact::meta_dstArtifactDependsOn.parent();
		ArtifactDependsOn::meta_dstArtifactDependsOn_end_ = ImplementationArtifactReference::meta_srcArtifactDependsOn_rev = ImplementationArtifact::meta_dstArtifactDependsOn;
		ArtifactDependsOn::meta_srcArtifactDependsOn_end_ = ImplementationArtifact::meta_dstArtifactDependsOn_rev = ImplementationArtifactReference::meta_srcArtifactDependsOn;

		ArtifactContainer::meta_ArtifactDeployRequirement_children.target() = ArtifactDeployRequirement::meta;
		ArtifactDeployRequirement::meta.association() = ImplementationArtifact::meta_dstArtifactDeployRequirement.parent();
		ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_ = Requirement::meta_srcArtifactDeployRequirement_rev = ImplementationArtifact::meta_dstArtifactDeployRequirement;
		ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_ = ImplementationArtifact::meta_dstArtifactDeployRequirement_rev = Requirement::meta_srcArtifactDeployRequirement;

		ArtifactContainer::meta_ArtifactExecParameter_children.target() = ArtifactExecParameter::meta;
		ArtifactExecParameter::meta.association() = ImplementationArtifact::meta_dstArtifactExecParameter.parent();
		ArtifactExecParameter::meta_dstArtifactExecParameter_end_ = Property::meta_srcArtifactExecParameter_rev = ImplementationArtifact::meta_dstArtifactExecParameter;
		ArtifactExecParameter::meta_srcArtifactExecParameter_end_ = ImplementationArtifact::meta_dstArtifactExecParameter_rev = Property::meta_srcArtifactExecParameter;

		ArtifactContainer::meta_ArtifactInfoProperty_children.target() = ArtifactInfoProperty::meta;
		ArtifactInfoProperty::meta.association() = ImplementationArtifact::meta_dstArtifactInfoProperty.parent();
		ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_ = Property::meta_srcArtifactInfoProperty_rev = ImplementationArtifact::meta_dstArtifactInfoProperty;
		ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_ = ImplementationArtifact::meta_dstArtifactInfoProperty_rev = Property::meta_srcArtifactInfoProperty;

		ComponentAssembly::meta_AssemblyConfigProperty_children.target() = AssemblyConfigProperty::meta;
		AssemblyConfigProperty::meta.association() = AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty.parent();
		AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_ = Property::meta_srcAssemblyConfigProperty_rev = AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty;
		AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_ = AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty_rev = Property::meta_srcAssemblyConfigProperty;

		AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty.target() = Property::meta;
		AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement.target() = Requirement::meta;
		AssemblyConfigPropertyEnd::meta.subTypes() += ComponentInstance::meta;
		AssemblyConfigPropertyEnd::meta.subTypes() += ConnectorInstance::meta;

		ComponentAssembly::meta_AssemblyselectRequirement_children.target() = AssemblyselectRequirement::meta;
		AssemblyselectRequirement::meta.association() = AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement.parent();
		AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_ = Requirement::meta_srcAssemblyselectRequirement_rev = AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement;
		AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_ = AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement_rev = Requirement::meta_srcAssemblyselectRequirement;

		SetException::meta_Attribute_parent.target() = Attribute::meta;

		ComponentAssembly::meta_AttributeDelegate_children.target() = AttributeDelegate::meta;
		AttributeDelegate::meta.association() = AttributeMapping::meta_dstAttributeDelegate.parent();
		AttributeDelegate::meta_dstAttributeDelegate_end_ = AttributeInstance::meta_srcAttributeDelegate_rev = AttributeMapping::meta_dstAttributeDelegate;
		AttributeDelegate::meta_srcAttributeDelegate_end_ = AttributeMapping::meta_dstAttributeDelegate_rev = AttributeInstance::meta_srcAttributeDelegate;

		AttributeInstance::meta_srcAttributeDelegate.target() = AttributeMapping::meta;
		AttributeInstance::meta_referedbyAttributeMapping.target() = AttributeMapping::meta;
		AttributeInstance::meta_ref.target() = ReadonlyAttribute::meta;
		AttributeInstance::meta_dstAttributeValue.target() = Property::meta;
		ConnectorInstance::meta_AttributeInstance_children.target() = AttributeInstance::meta;

		AttributeMapping::meta_dstAttributeMappingDelegate.target() = AttributeMapping::meta;
		AttributeMapping::meta_srcAttributeMappingDelegate.target() = AttributeMapping::meta;
		AttributeMapping::meta_dstAttributeMappingValue.target() = Property::meta;
		AttributeMapping::meta_dstAttributeDelegate.target() = AttributeInstance::meta;
		AttributeMapping::meta_ref.target() = AttributeInstance::meta;
		ComponentAssembly::meta_AttributeMapping_children.target() = AttributeMapping::meta;

		ComponentAssembly::meta_AttributeMappingDelegate_children.target() = AttributeMappingDelegate::meta;
		AttributeMappingDelegate::meta.association() = AttributeMapping::meta_dstAttributeMappingDelegate.parent();
		AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_ = AttributeMapping::meta_srcAttributeMappingDelegate_rev = AttributeMapping::meta_dstAttributeMappingDelegate;
		AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_ = AttributeMapping::meta_dstAttributeMappingDelegate_rev = AttributeMapping::meta_srcAttributeMappingDelegate;

		ComponentAssembly::meta_AttributeMappingValue_children.target() = AttributeMappingValue::meta;
		AttributeMappingValue::meta.association() = AttributeMapping::meta_dstAttributeMappingValue.parent();
		AttributeMappingValue::meta_dstAttributeMappingValue_end_ = Property::meta_srcAttributeMappingValue_rev = AttributeMapping::meta_dstAttributeMappingValue;
		AttributeMappingValue::meta_srcAttributeMappingValue_end_ = AttributeMapping::meta_dstAttributeMappingValue_rev = Property::meta_srcAttributeMappingValue;

		AttributeMember::meta_ref.target() = MemberType::meta;
		ReadonlyAttribute::meta_AttributeMember_child.target() = AttributeMember::meta;

		ComponentAssembly::meta_AttributeValue_children.target() = AttributeValue::meta;
		AttributeValue::meta.association() = AttributeInstance::meta_dstAttributeValue.parent();
		AttributeValue::meta_dstAttributeValue_end_ = Property::meta_srcAttributeValue_rev = AttributeInstance::meta_dstAttributeValue;
		AttributeValue::meta_srcAttributeValue_end_ = AttributeInstance::meta_dstAttributeValue_rev = Property::meta_srcAttributeValue;

		BehaviorInputAction::meta_srcFinish.target() = StateBase::meta;
		BehaviorInputAction::meta_dstInputEffect.target() = StateBase::meta;
		Property::meta_BehaviorInputAction_parent.target() = BehaviorInputAction::meta;
		BehaviorModel::meta_BehaviorInputAction_children.target() = BehaviorInputAction::meta;
		BehaviorInputAction::meta.subTypes() += InputAction::meta;
		BehaviorInputAction::meta.subTypes() += MultiInputAction::meta;

		Variable::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		LoopTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Transition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BranchTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		StateBase::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		TerminalEffect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Terminal::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		TerminalTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		QueryInputAction::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Effect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		ActionBase::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		InputEffect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BehaviorInputAction::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Finish::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BehaviorModel::meta.subTypes() += TopLevelBehavior::meta;

		BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		BenchmarkType::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		CompRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		ComponentOperation::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		WorkloadCharacteristics::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		Task::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TaskSet::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimerEventSinkConn::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		Event::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		EventRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		OperationRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimeProbe::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		MetricsBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		DataAnalysisBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		MetricConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimerConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		OperationBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		ComponentAnalyses::meta_BenchmarkAnalysis_children.target() = BenchmarkAnalysis::meta;

		BenchmarkAnalysis::meta_BenchmarkCharacteristics_children.target() = BenchmarkCharacteristics::meta;
		BenchmarkCharacteristics::meta.association() = BenchmarkType::meta_dstBenchmarkCharacteristics.parent();
		BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_ = MetricsBase::meta_srcBenchmarkCharacteristics_rev = BenchmarkType::meta_dstBenchmarkCharacteristics;
		BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_ = BenchmarkType::meta_dstBenchmarkCharacteristics_rev = MetricsBase::meta_srcBenchmarkCharacteristics;

		BenchmarkType::meta_dstBenchmarkCharacteristics.target() = MetricsBase::meta;
		BenchmarkAnalysis::meta_BenchmarkType_children.target() = BenchmarkType::meta;
		BenchmarkType::meta.subTypes() += PeriodicBenchmarks::meta;
		BenchmarkType::meta.subTypes() += TriggerBenchmarks::meta;
		BenchmarkType::meta.subTypes() += FixedIterationBenchmarks::meta;

		Boxed::meta_ref.target() = MemberType::meta;

		BranchState::meta_dstBranchTransition.target() = ActionBase::meta;

		BehaviorModel::meta_BranchTransition_children.target() = BranchTransition::meta;
		BranchTransition::meta.association() = BranchState::meta_dstBranchTransition.parent();
		BranchTransition::meta_dstBranchTransition_end_ = ActionBase::meta_srcBranchTransition_rev = BranchState::meta_dstBranchTransition;
		BranchTransition::meta_srcBranchTransition_end_ = BranchState::meta_dstBranchTransition_rev = ActionBase::meta_srcBranchTransition;

		Bridge::meta_srcBridgeConnection.target() = Interconnect::meta;
		Resource::meta_Bridge_parent.target() = Bridge::meta;
		Domain::meta_Bridge_children.target() = Bridge::meta;

		Domain::meta_BridgeConnection_children.target() = BridgeConnection::meta;
		BridgeConnection::meta.association() = Interconnect::meta_dstBridgeConnection.parent();
		BridgeConnection::meta_dstBridgeConnection_end_ = Bridge::meta_srcBridgeConnection_rev = Interconnect::meta_dstBridgeConnection;
		BridgeConnection::meta_srcBridgeConnection_end_ = Interconnect::meta_dstBridgeConnection_rev = Bridge::meta_srcBridgeConnection;

		TargetRequiredRequestPort::meta_CallAction_parent.target() = CallAction::meta;

		Capability::meta_srcImplementationCapability.target() = ComponentImplementation::meta;
		ComponentImplementationContainer::meta_Capability_children.target() = Capability::meta;

		CharType::meta.subTypes() += Char::meta;
		CharType::meta.subTypes() += WideChar::meta;

		Collection::meta_ref.target() = MemberType::meta;
		ConnectorObject::meta_Collection_children.target() = Collection::meta;

		CollectionParameter::meta_ref.target() = NameParameter::meta;

		CollocationGroup::meta_members.target() = CollocationGroupMember::meta;
		CollocationGroup::meta_dstInstanceMapping.target() = NodeReference::meta;
		CollocationGroup::meta_srcCollocationGroupProperty.target() = Property::meta;
		DeploymentPlan::meta_CollocationGroup_children.target() = CollocationGroup::meta;

		CollocationGroupMember::meta_setCollocationGroup.target() = CollocationGroup::meta;
		DeploymentPlan::meta_CollocationGroupMember_children.target() = CollocationGroupMember::meta;
		CollocationGroupMember::meta.subTypes() += ComponentInstanceRef::meta;
		CollocationGroupMember::meta.subTypes() += ComponentFactoryRef::meta;
		CollocationGroupMember::meta.subTypes() += ComponentAssemblyReference::meta;

		DeploymentPlan::meta_CollocationGroupProperty_children.target() = CollocationGroupProperty::meta;
		CollocationGroupProperty::meta.association() = Property::meta_dstCollocationGroupProperty.parent();
		CollocationGroupProperty::meta_dstCollocationGroupProperty_end_ = CollocationGroup::meta_srcCollocationGroupProperty_rev = Property::meta_dstCollocationGroupProperty;
		CollocationGroupProperty::meta_srcCollocationGroupProperty_end_ = Property::meta_dstCollocationGroupProperty_rev = CollocationGroup::meta_srcCollocationGroupProperty;

		CommonPortAttrs::meta.subTypes() += Port::meta;

		CompRef::meta_ref.target() = Component::meta;
		CompRef::meta_srcComponentOperation.target() = OperationRef::meta;
		BenchmarkAnalysis::meta_CompRef_children.target() = CompRef::meta;

		DataValueBase::meta_ComplexProperty_parent.target() = ComplexProperty::meta;
		ComplexTypeReference::meta_ComplexProperty_parent.target() = ComplexProperty::meta;

		ComplexType::meta_referedbyComplexTypeReference.target() = ComplexTypeReference::meta;
		ComplexType::meta.subTypes() += Collection::meta;
		ComplexType::meta.subTypes() += Aggregate::meta;

		ComplexTypeReference::meta_ref.target() = ComplexType::meta;
		ComplexProperty::meta_ComplexTypeReference_child.target() = ComplexTypeReference::meta;
		DataValueContainer::meta_ComplexTypeReference_child.target() = ComplexTypeReference::meta;

		Component::meta_referedbyCompRef.target() = CompRef::meta;
		Component::meta_referedbyComponentRef.target() = ComponentRef::meta;
		Component::meta_referedbyComponentInherits.target() = ComponentInherits::meta;
		ExtendedPortBase::meta_Component_parent.target() = Component::meta;
		ComponentInherits::meta_Component_parent.target() = Component::meta;
		ReadonlyAttribute::meta_Component_parent.target() = Component::meta;
		Port::meta_Component_parent.target() = Component::meta;

		BenchmarkAnalysis::meta_ComponentAnalyses_parent.target() = ComponentAnalyses::meta;
		RootFolder::meta_ComponentAnalyses_children.target() = ComponentAnalyses::meta;

		ComponentAssembly::meta_referedbyComponentAssemblyReference.target() = ComponentAssemblyReference::meta;
		ComponentAssembly::meta_dstCriticalPath.target() = PathReference::meta;
		Property::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		MirrorDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		MirrorPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExtendedPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExtendedDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ConnectorToFacet::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ConnectorToReceptacle::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ProvidedRequestPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		RequiredRequestPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		OutEventPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		InEventPortDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Consume::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Publish::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ConnectorInstance::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentInstance::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExternalPort::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMapping::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExternalDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMappingDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ReceptacleDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Invoke::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		FacetDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AssemblyConfigProperty::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMappingValue::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeValue::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AssemblyselectRequirement::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssemblyReference::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSinkDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSourceDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		SendsTo::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssembly::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Requirement::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentPackageReference::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentPackage::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssembly::meta_ComponentAssembly_children.target() = ComponentAssembly::meta;

		ComponentAssemblyReference::meta_ref.target() = ComponentAssembly::meta;
		ComponentAssembly::meta_ComponentAssemblyReference_children.target() = ComponentAssemblyReference::meta;

		MPC::meta_ComponentBuild_parent.target() = ComponentBuild::meta;
		RootFolder::meta_ComponentBuild_children.target() = ComponentBuild::meta;

		ComponentContainer::meta_ComponentConfigProperty_children.target() = ComponentConfigProperty::meta;
		ComponentConfigProperty::meta.association() = ComponentRef::meta_dstComponentConfigProperty.parent();
		ComponentConfigProperty::meta_dstComponentConfigProperty_end_ = Property::meta_srcComponentConfigProperty_rev = ComponentRef::meta_dstComponentConfigProperty;
		ComponentConfigProperty::meta_srcComponentConfigProperty_end_ = ComponentRef::meta_dstComponentConfigProperty_rev = Property::meta_srcComponentConfigProperty;

		Property::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentRef::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentPropertyDescription::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentInfoProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentConfigProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentTypes::meta_ComponentContainer_children.target() = ComponentContainer::meta;

		ComponentFactory::meta_referedbyComponentFactoryInstance.target() = ComponentFactoryInstance::meta;
		ComponentFactory::meta_dstManagesComponent.target() = Manageable::meta;
		LookupKey::meta_ComponentFactory_parent.target() = ComponentFactory::meta;
		LookupOperation::meta_ComponentFactory_parent.target() = ComponentFactory::meta;
		FactoryOperation::meta_ComponentFactory_parent.target() = ComponentFactory::meta;

		ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent.target() = ComponentFactoryImplementationContainer::meta;
		ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children.target() = ComponentFactoryImplementationContainer::meta;

		ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent.target() = ComponentFactoryImplementations::meta;
		RootFolder::meta_ComponentFactoryImplementations_children.target() = ComponentFactoryImplementations::meta;

		ComponentFactoryInstance::meta_ref.target() = ComponentFactory::meta;
		ComponentFactoryInstance::meta_referedbyComponentFactoryRef.target() = ComponentFactoryRef::meta;
		ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children.target() = ComponentFactoryInstance::meta;

		ComponentFactoryRef::meta_dstDeploys.target() = ComponentInstanceRef::meta;
		ComponentFactoryRef::meta_ref.target() = ComponentFactoryInstance::meta;

		ComponentImplementation::meta_dstImplements.target() = ComponentRef::meta;
		ComponentImplementation::meta_dstImplementationDependsOn.target() = ImplementationDependency::meta;
		ComponentImplementation::meta_dstImplementationCapability.target() = Capability::meta;
		ComponentImplementation::meta_referedbyComponentImplementationReference.target() = ComponentImplementationReference::meta;
		ComponentImplementationContainer::meta_ComponentImplementation_children.target() = ComponentImplementation::meta;
		ComponentImplementation::meta.subTypes() += ComponentAssembly::meta;
		ComponentImplementation::meta.subTypes() += MonolithicImplementation::meta;

		ComponentImplementationArtifact::meta_ref.target() = ImplementationArtifact::meta;

		ComponentImplementation::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		PathReference::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		CriticalPath::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		Capability::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ImplementationCapability::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ImplementationDependency::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentRef::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		Implements::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ImplementationDependsOn::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentImplementations::meta_ComponentImplementationContainer_children.target() = ComponentImplementationContainer::meta;

		ComponentImplementationReference::meta_srcImplementation.target() = ComponentPackage::meta;
		ComponentImplementationReference::meta_ref.target() = ComponentImplementation::meta;
		PackageContainer::meta_ComponentImplementationReference_children.target() = ComponentImplementationReference::meta;

		ComponentImplementationContainer::meta_ComponentImplementations_parent.target() = ComponentImplementations::meta;
		RootFolder::meta_ComponentImplementations_children.target() = ComponentImplementations::meta;

		ComponentContainer::meta_ComponentInfoProperty_children.target() = ComponentInfoProperty::meta;
		ComponentInfoProperty::meta.association() = ComponentRef::meta_dstComponentInfoProperty.parent();
		ComponentInfoProperty::meta_dstComponentInfoProperty_end_ = Property::meta_srcComponentInfoProperty_rev = ComponentRef::meta_dstComponentInfoProperty;
		ComponentInfoProperty::meta_srcComponentInfoProperty_end_ = ComponentRef::meta_dstComponentInfoProperty_rev = Property::meta_srcComponentInfoProperty;

		ComponentInherits::meta_ref.target() = Component::meta;
		Component::meta_ComponentInherits_child.target() = ComponentInherits::meta;

		ComponentInstance::meta_referedbyComponentInstanceRef.target() = ComponentInstanceRef::meta;
		PortInstance::meta_ComponentInstance_parent.target() = ComponentInstance::meta;
		SupportsInstance::meta_ComponentInstance_parent.target() = ComponentInstance::meta;
		ComponentInstanceType::meta_ComponentInstance_parent.target() = ComponentInstance::meta;
		ComponentAssembly::meta_ComponentInstance_children.target() = ComponentInstance::meta;

		ComponentInstanceRef::meta_ref.target() = ComponentInstance::meta;
		ComponentInstanceRef::meta_srcDeploys.target() = ComponentFactoryRef::meta;

		ComponentInstanceType::meta_ref.target() = MonolithicImplementation::meta;
		ComponentInstance::meta_ComponentInstanceType_child.target() = ComponentInstanceType::meta;

		ComponentLib::meta_dstExtResourceConn.target() = ExternalResources::meta;
		Project::meta_ComponentLib_children.target() = ComponentLib::meta;
		ComponentLib::meta.subTypes() += ExecutorProject::meta;
		ComponentLib::meta.subTypes() += ServantProject::meta;
		ComponentLib::meta.subTypes() += StubProject::meta;

		BenchmarkAnalysis::meta_ComponentOperation_children.target() = ComponentOperation::meta;
		ComponentOperation::meta.association() = OperationRef::meta_dstComponentOperation.parent();
		ComponentOperation::meta_dstComponentOperation_end_ = CompRef::meta_srcComponentOperation_rev = OperationRef::meta_dstComponentOperation;
		ComponentOperation::meta_srcComponentOperation_end_ = OperationRef::meta_dstComponentOperation_rev = CompRef::meta_srcComponentOperation;

		ComponentPackage::meta_srcPackageConfBasePackage.target() = PackageConfiguration::meta;
		ComponentPackage::meta_dstPackageInfoProperty.target() = Property::meta;
		ComponentPackage::meta_dstPackageConfigProperty.target() = Property::meta;
		ComponentPackage::meta_dstImplementation.target() = ComponentImplementationReference::meta;
		ComponentPackage::meta_dstPackageInterface.target() = ComponentRef::meta;
		ComponentPackage::meta_referedbyComponentPackageReference.target() = ComponentPackageReference::meta;
		PackageConfigurationContainer::meta_ComponentPackage_child.target() = ComponentPackage::meta;
		PackageContainer::meta_ComponentPackage_child.target() = ComponentPackage::meta;
		ComponentAssembly::meta_ComponentPackage_children.target() = ComponentPackage::meta;

		ComponentPackageReference::meta_srcPackageConfReference.target() = PackageConfiguration::meta;
		ComponentPackageReference::meta_ref.target() = ComponentPackage::meta;
		PackageConfigurationContainer::meta_ComponentPackageReference_child.target() = ComponentPackageReference::meta;
		ComponentAssembly::meta_ComponentPackageReference_children.target() = ComponentPackageReference::meta;

		PackageContainer::meta_ComponentPackages_parent.target() = ComponentPackages::meta;
		RootFolder::meta_ComponentPackages_children.target() = ComponentPackages::meta;

		ComponentContainer::meta_ComponentProperty_children.target() = ComponentProperty::meta;
		ComponentProperty::meta.association() = ComponentRef::meta_dstComponentProperty.parent();
		ComponentProperty::meta_dstComponentProperty_end_ = ComponentPropertyDescription::meta_srcComponentProperty_rev = ComponentRef::meta_dstComponentProperty;
		ComponentProperty::meta_srcComponentProperty_end_ = ComponentRef::meta_dstComponentProperty_rev = ComponentPropertyDescription::meta_srcComponentProperty;

		ComponentPropertyDescription::meta_srcComponentProperty.target() = ComponentRef::meta;
		DataType::meta_ComponentPropertyDescription_parent.target() = ComponentPropertyDescription::meta;
		ComponentContainer::meta_ComponentPropertyDescription_children.target() = ComponentPropertyDescription::meta;

		ComponentRef::meta_srcPackageInterface.target() = ComponentPackage::meta;
		ComponentRef::meta_ref.target() = Component::meta;
		ComponentRef::meta_dstComponentInfoProperty.target() = Property::meta;
		ComponentRef::meta_dstComponentConfigProperty.target() = Property::meta;
		ComponentRef::meta_dstComponentProperty.target() = ComponentPropertyDescription::meta;
		ComponentRef::meta_srcImplements.target() = ComponentImplementation::meta;
		Path::meta_ComponentRef_children.target() = ComponentRef::meta;
		PackageContainer::meta_ComponentRef_child.target() = ComponentRef::meta;
		File::meta_ComponentRef_children.target() = ComponentRef::meta;
		Package::meta_ComponentRef_children.target() = ComponentRef::meta;
		ComponentImplementationContainer::meta_ComponentRef_child.target() = ComponentRef::meta;
		ComponentContainer::meta_ComponentRef_child.target() = ComponentRef::meta;

		ComponentServantArtifact::meta_ref.target() = ImplementationArtifact::meta;

		ComponentContainer::meta_ComponentTypes_parent.target() = ComponentTypes::meta;
		RootFolder::meta_ComponentTypes_children.target() = ComponentTypes::meta;

		ImplementationContainer::meta_ConfigProperty_children.target() = ConfigProperty::meta;
		ConfigProperty::meta.association() = Implemenation::meta_dstConfigProperty.parent();
		ConfigProperty::meta_dstConfigProperty_end_ = Property::meta_srcConfigProperty_rev = Implemenation::meta_dstConfigProperty;
		ConfigProperty::meta_srcConfigProperty_end_ = Implemenation::meta_dstConfigProperty_rev = Property::meta_srcConfigProperty;

		Port::meta_ConnectedComponent_parent.target() = ConnectedComponent::meta;
		DstEdge::meta_ConnectedComponent_parent.target() = ConnectedComponent::meta;

		ConnectorImplementation::meta_dstConnectorImplements.target() = ConnectorType::meta;
		ConnectorImplementation::meta_referedbyConnectorImplementationType.target() = ConnectorImplementationType::meta;
		ConnectorImplementationContainer::meta_ConnectorImplementation_children.target() = ConnectorImplementation::meta;

		ConnectorImplements::meta_ConnectorImplementationContainer_parent.target() = ConnectorImplementationContainer::meta;
		ConnectorType::meta_ConnectorImplementationContainer_parent.target() = ConnectorImplementationContainer::meta;
		ConnectorImplementation::meta_ConnectorImplementationContainer_parent.target() = ConnectorImplementationContainer::meta;
		ConnectorImplementations::meta_ConnectorImplementationContainer_children.target() = ConnectorImplementationContainer::meta;

		ConnectorImplementationType::meta_ref.target() = ConnectorImplementation::meta;
		ConnectorInstance::meta_ConnectorImplementationType_child.target() = ConnectorImplementationType::meta;

		ConnectorImplementationContainer::meta_ConnectorImplementations_parent.target() = ConnectorImplementations::meta;
		RootFolder::meta_ConnectorImplementations_children.target() = ConnectorImplementations::meta;

		ConnectorImplementationContainer::meta_ConnectorImplements_children.target() = ConnectorImplements::meta;
		ConnectorImplements::meta.association() = ConnectorImplementation::meta_dstConnectorImplements.parent();
		ConnectorImplements::meta_dstConnectorImplements_end_ = ConnectorType::meta_srcConnectorImplements_rev = ConnectorImplementation::meta_dstConnectorImplements;
		ConnectorImplements::meta_srcConnectorImplements_end_ = ConnectorImplementation::meta_dstConnectorImplements_rev = ConnectorType::meta_srcConnectorImplements;

		ConnectorInherits::meta_ref.target() = ConnectorObject::meta;
		ConnectorObject::meta_ConnectorInherits_child.target() = ConnectorInherits::meta;

		ConnectorInstance::meta_srcConnectorToReceptacle.target() = RequiredRequestPortEnd::meta;
		ConnectorInstance::meta_srcPublish.target() = ExtendPortEnd::meta;
		ConnectorInstance::meta_dstConsume.target() = ExtendPortEnd::meta;
		ConnectorInstance::meta_dstConnectorToFacet.target() = ProvidedRequestPortEnd::meta;
		AttributeInstance::meta_ConnectorInstance_parent.target() = ConnectorInstance::meta;
		ConnectorImplementationType::meta_ConnectorInstance_parent.target() = ConnectorInstance::meta;
		ComponentAssembly::meta_ConnectorInstance_children.target() = ConnectorInstance::meta;

		ConnectorObject::meta_referedbyConnectorType.target() = ConnectorType::meta;
		ConnectorObject::meta_referedbyConnectorInherits.target() = ConnectorInherits::meta;
		Collection::meta_ConnectorObject_parent.target() = ConnectorObject::meta;
		Aggregate::meta_ConnectorObject_parent.target() = ConnectorObject::meta;
		ExtendedPortBase::meta_ConnectorObject_parent.target() = ConnectorObject::meta;
		ConnectorInherits::meta_ConnectorObject_parent.target() = ConnectorObject::meta;
		ReadonlyAttribute::meta_ConnectorObject_parent.target() = ConnectorObject::meta;
		ObjectPort::meta_ConnectorObject_parent.target() = ConnectorObject::meta;

		ComponentAssembly::meta_ConnectorToFacet_children.target() = ConnectorToFacet::meta;
		ConnectorToFacet::meta.association() = ConnectorInstance::meta_dstConnectorToFacet.parent();
		ConnectorToFacet::meta_dstConnectorToFacet_end_ = ProvidedRequestPortEnd::meta_srcConnectorToFacet_rev = ConnectorInstance::meta_dstConnectorToFacet;
		ConnectorToFacet::meta_srcConnectorToFacet_end_ = ConnectorInstance::meta_dstConnectorToFacet_rev = ProvidedRequestPortEnd::meta_srcConnectorToFacet;

		ComponentAssembly::meta_ConnectorToReceptacle_children.target() = ConnectorToReceptacle::meta;
		ConnectorToReceptacle::meta.association() = RequiredRequestPortEnd::meta_dstConnectorToReceptacle.parent();
		ConnectorToReceptacle::meta_dstConnectorToReceptacle_end_ = ConnectorInstance::meta_srcConnectorToReceptacle_rev = RequiredRequestPortEnd::meta_dstConnectorToReceptacle;
		ConnectorToReceptacle::meta_srcConnectorToReceptacle_end_ = RequiredRequestPortEnd::meta_dstConnectorToReceptacle_rev = ConnectorInstance::meta_srcConnectorToReceptacle;

		ConnectorType::meta_ref.target() = ConnectorObject::meta;
		ConnectorType::meta_srcConnectorImplements.target() = ConnectorImplementation::meta;
		ConnectorImplementationContainer::meta_ConnectorType_children.target() = ConnectorType::meta;

		Constant::meta_ref.target() = ConstantType::meta;
		HasOperations::meta_Constant_children.target() = Constant::meta;
		File::meta_Constant_children.target() = Constant::meta;
		Package::meta_Constant_children.target() = Constant::meta;

		ConstantType::meta_referedbyDiscriminator.target() = Discriminator::meta;
		ConstantType::meta_referedbyConstant.target() = Constant::meta;
		ConstantType::meta.subTypes() += Enum::meta;
		ConstantType::meta.subTypes() += StringType::meta;
		ConstantType::meta.subTypes() += CharType::meta;
		ConstantType::meta.subTypes() += IntegerType::meta;
		ConstantType::meta.subTypes() += FloatingPointType::meta;
		ConstantType::meta.subTypes() += Boolean::meta;
		ConstantType::meta.subTypes() += Byte::meta;

		ComponentAssembly::meta_Consume_children.target() = Consume::meta;
		Consume::meta.association() = ConnectorInstance::meta_dstConsume.parent();
		Consume::meta_dstConsume_end_ = ExtendPortEnd::meta_srcConsume_rev = ConnectorInstance::meta_dstConsume;
		Consume::meta_srcConsume_end_ = ConnectorInstance::meta_dstConsume_rev = ExtendPortEnd::meta_srcConsume;

		ComponentImplementationContainer::meta_CriticalPath_children.target() = CriticalPath::meta;
		CriticalPath::meta.association() = ComponentAssembly::meta_dstCriticalPath.parent();
		CriticalPath::meta_dstCriticalPath_end_ = PathReference::meta_srcCriticalPath_rev = ComponentAssembly::meta_dstCriticalPath;
		CriticalPath::meta_srcCriticalPath_end_ = ComponentAssembly::meta_dstCriticalPath_rev = PathReference::meta_srcCriticalPath;

		MetricsBase::meta_DataAnalysisBase_children.target() = DataAnalysisBase::meta;
		BenchmarkAnalysis::meta_DataAnalysisBase_children.target() = DataAnalysisBase::meta;
		DataAnalysisBase::meta.subTypes() += Jitter::meta;
		DataAnalysisBase::meta.subTypes() += Maximum::meta;
		DataAnalysisBase::meta.subTypes() += Minimum::meta;
		DataAnalysisBase::meta.subTypes() += Average::meta;

		DataType::meta_ref.target() = MemberType::meta;
		SatisfierProperty::meta_DataType_child.target() = DataType::meta;
		ComponentPropertyDescription::meta_DataType_child.target() = DataType::meta;

		DataValue::meta_ref.target() = SimpleType::meta;

		ComplexProperty::meta_DataValueBase_children.target() = DataValueBase::meta;
		DataValueContainer::meta_DataValueBase_children.target() = DataValueBase::meta;
		DataValueBase::meta.subTypes() += DataValue::meta;
		DataValueBase::meta.subTypes() += DataValueContainer::meta;

		DataValueBase::meta_DataValueContainer_parent.target() = DataValueContainer::meta;
		ComplexTypeReference::meta_DataValueContainer_parent.target() = DataValueContainer::meta;

		CollocationGroupProperty::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		InstanceMapping::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		NodeReference::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		CollocationGroup::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		PropertyMapping::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		Property::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		CollocationGroupMember::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		Deploys::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		DeploymentPlans::meta_DeploymentPlan_children.target() = DeploymentPlan::meta;

		DeploymentPlan::meta_DeploymentPlans_parent.target() = DeploymentPlans::meta;
		RootFolder::meta_DeploymentPlans_children.target() = DeploymentPlans::meta;

		DeploymentPlan::meta_Deploys_children.target() = Deploys::meta;
		Deploys::meta.association() = ComponentFactoryRef::meta_dstDeploys.parent();
		Deploys::meta_dstDeploys_end_ = ComponentInstanceRef::meta_srcDeploys_rev = ComponentFactoryRef::meta_dstDeploys;
		Deploys::meta_srcDeploys_end_ = ComponentFactoryRef::meta_dstDeploys_rev = ComponentInstanceRef::meta_srcDeploys;

		Discriminator::meta_ref.target() = ConstantType::meta;
		SwitchedAggregate::meta_Discriminator_child.target() = Discriminator::meta;

		Property::meta_Domain_parent.target() = Domain::meta;
		Shares::meta_Domain_parent.target() = Domain::meta;
		SharedResource::meta_Domain_parent.target() = Domain::meta;
		Bridge::meta_Domain_parent.target() = Domain::meta;
		BridgeConnection::meta_Domain_parent.target() = Domain::meta;
		Node::meta_Domain_parent.target() = Domain::meta;
		Interconnect::meta_Domain_parent.target() = Domain::meta;
		InterconnectConnection::meta_Domain_parent.target() = Domain::meta;
		Targets::meta_Domain_children.target() = Domain::meta;

		ConnectedComponent::meta_DstEdge_children.target() = DstEdge::meta;
		Path::meta_DstEdge_children.target() = DstEdge::meta;
		DstEdge::meta.association() = GraphVertex::meta_dstDstEdge.parent();
		DstEdge::meta_dstDstEdge_end_ = Edge::meta_srcDstEdge_rev = GraphVertex::meta_dstDstEdge;
		DstEdge::meta_srcDstEdge_end_ = GraphVertex::meta_dstDstEdge_rev = Edge::meta_srcDstEdge;

		ECRequirements::meta_ECBehavior_child.target() = ECBehavior::meta;

		ECRole::meta_ECRequirements_parent.target() = ECRequirements::meta;
		ECBehavior::meta_ECRequirements_parent.target() = ECRequirements::meta;

		ECRequirements::meta_ECRole_children.target() = ECRole::meta;

		Edge::meta_dstSrcEdge.target() = GraphVertex::meta;
		Edge::meta_srcDstEdge.target() = GraphVertex::meta;
		Edge::meta_srcPropertyConnector.target() = Property::meta;
		Path::meta_Edge_children.target() = Edge::meta;

		Path::meta_EdgeProperty_children.target() = EdgeProperty::meta;
		EdgeProperty::meta.association() = Property::meta_dstPropertyConnector.parent();
		EdgeProperty::meta_dstPropertyConnector_end_ = Edge::meta_srcPropertyConnector_rev = Property::meta_dstPropertyConnector;
		EdgeProperty::meta_srcPropertyConnector_end_ = Property::meta_dstPropertyConnector_rev = Edge::meta_srcPropertyConnector;

		BehaviorModel::meta_Effect_children.target() = Effect::meta;
		Effect::meta.association() = ActionBase::meta_dstEffect.parent();
		Effect::meta_dstEffect_end_ = StateBase::meta_srcEffect_rev = ActionBase::meta_dstEffect;
		Effect::meta_srcEffect_end_ = ActionBase::meta_dstEffect_rev = StateBase::meta_srcEffect;

		EffectBase::meta.subTypes() += TerminalEffect::meta;
		EffectBase::meta.subTypes() += InputEffect::meta;
		EffectBase::meta.subTypes() += Effect::meta;

		EnumValue::meta_Enum_parent.target() = Enum::meta;

		Enum::meta_EnumValue_children.target() = EnumValue::meta;

		TopLevelBehavior::meta_Environment_child.target() = Environment::meta;

		Event::meta_referedbyEventRef.target() = EventRef::meta;
		BenchmarkAnalysis::meta_Event_children.target() = Event::meta;

		EventPort::meta.subTypes() += InEventPort::meta;
		EventPort::meta.subTypes() += OutEventPort::meta;

		EventRef::meta_dstTimerEventSinkConn.target() = TimeProbe::meta;
		EventRef::meta_ref.target() = Event::meta;
		BenchmarkAnalysis::meta_EventRef_children.target() = EventRef::meta;

		ComponentAssembly::meta_EventSinkDelegate_children.target() = EventSinkDelegate::meta;
		EventSinkDelegate::meta.association() = InEventPortDelegate::meta_dstEventSinkDelegate.parent();
		EventSinkDelegate::meta_dstEventSinkDelegate_end_ = InEventPortEnd::meta_srcEventSinkDelegate_rev = InEventPortDelegate::meta_dstEventSinkDelegate;
		EventSinkDelegate::meta_srcEventSinkDelegate_end_ = InEventPortDelegate::meta_dstEventSinkDelegate_rev = InEventPortEnd::meta_srcEventSinkDelegate;

		ComponentAssembly::meta_EventSourceDelegate_children.target() = EventSourceDelegate::meta;
		EventSourceDelegate::meta.association() = OutEventPortEnd::meta_dstEventSourceDelegate.parent();
		EventSourceDelegate::meta_dstEventSourceDelegate_end_ = OutEventPortDelegate::meta_srcEventSourceDelegate_rev = OutEventPortEnd::meta_dstEventSourceDelegate;
		EventSourceDelegate::meta_srcEventSourceDelegate_end_ = OutEventPortEnd::meta_dstEventSourceDelegate_rev = OutEventPortDelegate::meta_srcEventSourceDelegate;

		EventType::meta_referedbyInEventPort.target() = InEventPort::meta;
		EventType::meta_referedbyOutEventPort.target() = OutEventPort::meta;
		EventType::meta.subTypes() += Event::meta;
		EventType::meta.subTypes() += TemplateParameter::meta;

		Member::meta_Exception_parent.target() = Exception::meta;
		HasOperations::meta_Exception_children.target() = Exception::meta;
		File::meta_Exception_children.target() = Exception::meta;
		Package::meta_Exception_children.target() = Exception::meta;

		ExceptionRef::meta_ref.target() = ExceptionType::meta;
		HasExceptions::meta_ExceptionRef_children.target() = ExceptionRef::meta;

		ExceptionType::meta_referedbyExceptionRef.target() = ExceptionRef::meta;
		ExceptionType::meta_referedbyGetException.target() = GetException::meta;
		ExceptionType::meta_referedbySetException.target() = SetException::meta;
		ExceptionType::meta.subTypes() += TypeParameter::meta;
		ExceptionType::meta.subTypes() += Exception::meta;

		ImplementationArtifactReference::meta_ExecutorProject_parent.target() = ExecutorProject::meta;

		Project::meta_ExtResourceConn_children.target() = ExtResourceConn::meta;
		ExtResourceConn::meta.association() = ComponentLib::meta_dstExtResourceConn.parent();
		ExtResourceConn::meta_dstExtResourceConn_end_ = ExternalResources::meta_srcExtResourceConn_rev = ComponentLib::meta_dstExtResourceConn;
		ExtResourceConn::meta_srcExtResourceConn_end_ = ComponentLib::meta_dstExtResourceConn_rev = ExternalResources::meta_srcExtResourceConn;

		ExtendPortEnd::meta_dstPublish.target() = ConnectorInstance::meta;
		ExtendPortEnd::meta_srcConsume.target() = ConnectorInstance::meta;
		ExtendPortEnd::meta.subTypes() += ExtendedPortInstanceBase::meta;
		ExtendPortEnd::meta.subTypes() += MirrorPortInstanceBase::meta;

		ComponentAssembly::meta_ExtendedDelegate_children.target() = ExtendedDelegate::meta;
		ExtendedDelegate::meta.association() = ExtendedPortInstanceBase::meta_dstExtendedDelegate.parent();
		ExtendedDelegate::meta_dstExtendedDelegate_end_ = ExtendedPortDelegate::meta_srcExtendedDelegate_rev = ExtendedPortInstanceBase::meta_dstExtendedDelegate;
		ExtendedDelegate::meta_srcExtendedDelegate_end_ = ExtendedPortInstanceBase::meta_dstExtendedDelegate_rev = ExtendedPortDelegate::meta_srcExtendedDelegate;

		ExtendedPort::meta_referedbyExtendedPortInstance.target() = ExtendedPortInstance::meta;

		ExtendedPortBase::meta_ref.target() = PortType::meta;
		Component::meta_ExtendedPortBase_children.target() = ExtendedPortBase::meta;
		ConnectorObject::meta_ExtendedPortBase_children.target() = ExtendedPortBase::meta;
		ExtendedPortBase::meta.subTypes() += MirrorPort::meta;
		ExtendedPortBase::meta.subTypes() += ExtendedPort::meta;

		ExtendedPortDelegate::meta_srcExtendedDelegate.target() = ExtendedPortInstanceBase::meta;
		ComponentAssembly::meta_ExtendedPortDelegate_children.target() = ExtendedPortDelegate::meta;

		ExtendedPortInstance::meta_ref.target() = ExtendedPort::meta;

		ExtendedPortInstanceBase::meta_dstExtendedDelegate.target() = ExtendedPortDelegate::meta;
		ExtendedPortInstanceBase::meta.subTypes() += ExtendedPortDelegate::meta;
		ExtendedPortInstanceBase::meta.subTypes() += ExtendedPortInstance::meta;

		ComponentAssembly::meta_ExternalDelegate_children.target() = ExternalDelegate::meta;
		ExternalDelegate::meta.association() = ExternalPort::meta_dstExternalDelegate.parent();
		ExternalDelegate::meta_dstExternalDelegate_end_ = ExternalPortEnd::meta_srcExternalDelegate_rev = ExternalPort::meta_dstExternalDelegate;
		ExternalDelegate::meta_srcExternalDelegate_end_ = ExternalPort::meta_dstExternalDelegate_rev = ExternalPortEnd::meta_srcExternalDelegate;

		ExternalPort::meta_dstExternalDelegate.target() = ExternalPortEnd::meta;
		ComponentAssembly::meta_ExternalPort_children.target() = ExternalPort::meta;

		ExternalPortEnd::meta_srcExternalDelegate.target() = ExternalPort::meta;
		ExternalPortEnd::meta.subTypes() += ProvidedRequestPortEnd::meta;
		ExternalPortEnd::meta.subTypes() += RequiredRequestPortEnd::meta;
		ExternalPortEnd::meta.subTypes() += ExtendPortEnd::meta;
		ExternalPortEnd::meta.subTypes() += OutEventPortEnd::meta;
		ExternalPortEnd::meta.subTypes() += InEventPortEnd::meta;

		ExternalResources::meta_srcExtResourceConn.target() = ComponentLib::meta;
		ExternalResources::meta_ref.target() = ImplementationArtifact::meta;
		Project::meta_ExternalResources_children.target() = ExternalResources::meta;

		ComponentAssembly::meta_FacetDelegate_children.target() = FacetDelegate::meta;
		FacetDelegate::meta.association() = ProvidedRequestPortDelegate::meta_dstFacetDelegate.parent();
		FacetDelegate::meta_dstFacetDelegate_end_ = ProvidedRequestPortEnd::meta_srcFacetDelegate_rev = ProvidedRequestPortDelegate::meta_dstFacetDelegate;
		FacetDelegate::meta_srcFacetDelegate_end_ = ProvidedRequestPortDelegate::meta_dstFacetDelegate_rev = ProvidedRequestPortEnd::meta_srcFacetDelegate;

		ObjectByValue::meta_FactoryOperation_children.target() = FactoryOperation::meta;
		ComponentFactory::meta_FactoryOperation_children.target() = FactoryOperation::meta;

		File::meta_referedbyFileRef.target() = FileRef::meta;
		NativeValue::meta_File_parent.target() = File::meta;
		ManagesComponent::meta_File_parent.target() = File::meta;
		ComponentRef::meta_File_parent.target() = File::meta;
		NamedType::meta_File_parent.target() = File::meta;
		Constant::meta_File_parent.target() = File::meta;
		FileRef::meta_File_parent.target() = File::meta;
		Exception::meta_File_parent.target() = File::meta;
		Package::meta_File_parent.target() = File::meta;
		InterfaceDefinitions::meta_File_children.target() = File::meta;

		FileRef::meta_ref.target() = File::meta;
		File::meta_FileRef_children.target() = FileRef::meta;
		ServantProject::meta_FileRef_child.target() = FileRef::meta;
		StubProject::meta_FileRef_child.target() = FileRef::meta;

		BehaviorModel::meta_Finish_children.target() = Finish::meta;
		Finish::meta.association() = StateBase::meta_dstFinish.parent();
		Finish::meta_dstFinish_end_ = BehaviorInputAction::meta_srcFinish_rev = StateBase::meta_dstFinish;
		Finish::meta_srcFinish_end_ = StateBase::meta_dstFinish_rev = BehaviorInputAction::meta_srcFinish;

		FloatingPointType::meta.subTypes() += LongDoubleNumber::meta;
		FloatingPointType::meta.subTypes() += DoubleNumber::meta;
		FloatingPointType::meta.subTypes() += FloatNumber::meta;

		GetException::meta_ref.target() = ExceptionType::meta;
		ReadonlyAttribute::meta_GetException_children.target() = GetException::meta;

		GraphVertex::meta_srcSrcEdge.target() = Edge::meta;
		GraphVertex::meta_dstDstEdge.target() = Edge::meta;
		Path::meta_GraphVertex_children.target() = GraphVertex::meta;
		GraphVertex::meta.subTypes() += DisplayNode::meta;
		GraphVertex::meta.subTypes() += ConnectedComponent::meta;
		GraphVertex::meta.subTypes() += Port::meta;

		ExceptionRef::meta_HasExceptions_parent.target() = HasExceptions::meta;
		HasExceptions::meta.subTypes() += TwowayOperation::meta;
		HasExceptions::meta.subTypes() += LookupOperation::meta;
		HasExceptions::meta.subTypes() += FactoryOperation::meta;

		NoInheritable::meta_HasOperations_parent.target() = HasOperations::meta;
		Constant::meta_HasOperations_parent.target() = HasOperations::meta;
		Exception::meta_HasOperations_parent.target() = HasOperations::meta;
		TwowayOperation::meta_HasOperations_parent.target() = HasOperations::meta;
		OnewayOperation::meta_HasOperations_parent.target() = HasOperations::meta;
		HasOperations::meta.subTypes() += ObjectByValue::meta;
		HasOperations::meta.subTypes() += ::PICML::Object::meta;
		HasOperations::meta.subTypes() += ComponentFactory::meta;

		Implemenation::meta_dstInfoProperty.target() = Property::meta;
		Implemenation::meta_dstConfigProperty.target() = Property::meta;
		Implemenation::meta.subTypes() += MonolithicImplementationBase::meta;
		Implemenation::meta.subTypes() += ComponentImplementation::meta;

		PackageContainer::meta_Implementation_children.target() = Implementation::meta;
		Implementation::meta.association() = ComponentPackage::meta_dstImplementation.parent();
		Implementation::meta_dstImplementation_end_ = ComponentImplementationReference::meta_srcImplementation_rev = ComponentPackage::meta_dstImplementation;
		Implementation::meta_srcImplementation_end_ = ComponentPackage::meta_dstImplementation_rev = ComponentImplementationReference::meta_srcImplementation;

		ImplementationArtifact::meta_referedbyComponentImplemenationArtifact.target() = ComponentImplementationArtifact::meta;
		ImplementationArtifact::meta_referedbyComponentServantArtifact.target() = ComponentServantArtifact::meta;
		ImplementationArtifact::meta_dstArtifactDependency.target() = ImplementationArtifact::meta;
		ImplementationArtifact::meta_srcArtifactDependency.target() = ImplementationArtifact::meta;
		ImplementationArtifact::meta_dstArtifactInfoProperty.target() = Property::meta;
		ImplementationArtifact::meta_dstArtifactExecParameter.target() = Property::meta;
		ImplementationArtifact::meta_dstArtifactDeployRequirement.target() = Requirement::meta;
		ImplementationArtifact::meta_dstArtifactDependsOn.target() = ImplementationArtifactReference::meta;
		ImplementationArtifact::meta_referedbyImplementationArtifactReference.target() = ImplementationArtifactReference::meta;
		ImplementationArtifact::meta_referedbyExternalResources.target() = ExternalResources::meta;
		ArtifactContainer::meta_ImplementationArtifact_children.target() = ImplementationArtifact::meta;
		Project::meta_ImplementationArtifact_children.target() = ImplementationArtifact::meta;

		ImplementationArtifactReference::meta_srcMonolithprimaryArtifact.target() = MonolithicImplementationBase::meta;
		ImplementationArtifactReference::meta_srcArtifactDependsOn.target() = ImplementationArtifact::meta;
		ImplementationArtifactReference::meta_ref.target() = ImplementationArtifact::meta;
		ImplementationContainer::meta_ImplementationArtifactReference_children.target() = ImplementationArtifactReference::meta;
		ArtifactContainer::meta_ImplementationArtifactReference_children.target() = ImplementationArtifactReference::meta;
		ExecutorProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		ServantProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		StubProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		ImplementationArtifactReference::meta.subTypes() += ComponentImplementationArtifact::meta;
		ImplementationArtifactReference::meta.subTypes() += ComponentServantArtifact::meta;

		ArtifactContainer::meta_ImplementationArtifacts_parent.target() = ImplementationArtifacts::meta;
		RootFolder::meta_ImplementationArtifacts_children.target() = ImplementationArtifacts::meta;

		ComponentImplementationContainer::meta_ImplementationCapability_children.target() = ImplementationCapability::meta;
		ImplementationCapability::meta.association() = ComponentImplementation::meta_dstImplementationCapability.parent();
		ImplementationCapability::meta_dstImplementationCapability_end_ = Capability::meta_srcImplementationCapability_rev = ComponentImplementation::meta_dstImplementationCapability;
		ImplementationCapability::meta_srcImplementationCapability_end_ = ComponentImplementation::meta_dstImplementationCapability_rev = Capability::meta_srcImplementationCapability;

		Property::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationRequirement::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationArtifactReference::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithExecParameter::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithDeployRequirement::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithprimaryArtifact::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ConfigProperty::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		InfoProperty::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationContainer::meta.subTypes() += ComponentFactoryImplementationContainer::meta;
		ImplementationContainer::meta.subTypes() += ComponentImplementationContainer::meta;
		ImplementationContainer::meta.subTypes() += ConnectorImplementationContainer::meta;

		ImplementationDependency::meta_srcImplementationDependsOn.target() = ComponentImplementation::meta;
		ComponentImplementationContainer::meta_ImplementationDependency_children.target() = ImplementationDependency::meta;

		ComponentImplementationContainer::meta_ImplementationDependsOn_children.target() = ImplementationDependsOn::meta;
		ImplementationDependsOn::meta.association() = ComponentImplementation::meta_dstImplementationDependsOn.parent();
		ImplementationDependsOn::meta_dstImplementationDependsOn_end_ = ImplementationDependency::meta_srcImplementationDependsOn_rev = ComponentImplementation::meta_dstImplementationDependsOn;
		ImplementationDependsOn::meta_srcImplementationDependsOn_end_ = ComponentImplementation::meta_dstImplementationDependsOn_rev = ImplementationDependency::meta_srcImplementationDependsOn;

		ImplementationRequirement::meta_srcMonolithDeployRequirement.target() = MonolithicImplementationBase::meta;
		ImplementationContainer::meta_ImplementationRequirement_children.target() = ImplementationRequirement::meta;

		ComponentImplementationContainer::meta_Implements_child.target() = Implements::meta;
		Implements::meta.association() = ComponentImplementation::meta_dstImplements.parent();
		Implements::meta_dstImplements_end_ = ComponentRef::meta_srcImplements_rev = ComponentImplementation::meta_dstImplements;
		Implements::meta_srcImplements_end_ = ComponentImplementation::meta_dstImplements_rev = ComponentRef::meta_srcImplements;

		InEventPort::meta_referedbyInEventPortInstance.target() = InEventPortInstance::meta;
		InEventPort::meta_ref.target() = EventType::meta;

		InEventPortDelegate::meta_dstEventSinkDelegate.target() = InEventPortEnd::meta;
		ComponentAssembly::meta_InEventPortDelegate_children.target() = InEventPortDelegate::meta;

		InEventPortEnd::meta_srcEventSinkDelegate.target() = InEventPortDelegate::meta;
		InEventPortEnd::meta_srcSendsTo.target() = OutEventPortEnd::meta;
		InEventPortEnd::meta.subTypes() += InEventPortDelegate::meta;
		InEventPortEnd::meta.subTypes() += InEventPortInstance::meta;

		InEventPortInstance::meta_ref.target() = InEventPort::meta;

		OperationBase::meta_InParameter_children.target() = InParameter::meta;

		ImplementationContainer::meta_InfoProperty_children.target() = InfoProperty::meta;
		InfoProperty::meta.association() = Implemenation::meta_dstInfoProperty.parent();
		InfoProperty::meta_dstInfoProperty_end_ = Property::meta_srcInfoProperty_rev = Implemenation::meta_dstInfoProperty;
		InfoProperty::meta_srcInfoProperty_end_ = Implemenation::meta_dstInfoProperty_rev = Property::meta_srcInfoProperty;

		Inheritable::meta_referedbyInherits.target() = Inherits::meta;
		ReadonlyAttribute::meta_Inheritable_parent.target() = Inheritable::meta;
		Inherits::meta_Inheritable_parent.target() = Inheritable::meta;
		Inheritable::meta.subTypes() += HasOperations::meta;

		Inherits::meta_ref.target() = Inheritable::meta;
		Inheritable::meta_Inherits_children.target() = Inherits::meta;

		TwowayOperation::meta_InoutParameter_children.target() = InoutParameter::meta;

		TopLevelBehavior::meta_Input_children.target() = Input::meta;
		Input::meta.association() = SingleInputBase::meta_dstInput.parent();
		Input::meta_dstInput_end_ = InputAction::meta_srcInput_rev = SingleInputBase::meta_dstInput;
		Input::meta_srcInput_end_ = SingleInputBase::meta_dstInput_rev = InputAction::meta_srcInput;

		InputAction::meta_srcInput.target() = SingleInputBase::meta;

		BehaviorModel::meta_InputEffect_children.target() = InputEffect::meta;
		InputEffect::meta.association() = BehaviorInputAction::meta_dstInputEffect.parent();
		InputEffect::meta_dstInputEffect_end_ = StateBase::meta_srcInputEffect_rev = BehaviorInputAction::meta_dstInputEffect;
		InputEffect::meta_srcInputEffect_end_ = BehaviorInputAction::meta_dstInputEffect_rev = StateBase::meta_srcInputEffect;

		DeploymentPlan::meta_InstanceMapping_children.target() = InstanceMapping::meta;
		InstanceMapping::meta.association() = CollocationGroup::meta_dstInstanceMapping.parent();
		InstanceMapping::meta_dstInstanceMapping_end_ = NodeReference::meta_srcInstanceMapping_rev = CollocationGroup::meta_dstInstanceMapping;
		InstanceMapping::meta_srcInstanceMapping_end_ = CollocationGroup::meta_dstInstanceMapping_rev = NodeReference::meta_srcInstanceMapping;

		IntegerType::meta.subTypes() += UnsignedIntegerType::meta;
		IntegerType::meta.subTypes() += SignedIntegerType::meta;

		Interconnect::meta_srcInterconnectConnection.target() = Node::meta;
		Interconnect::meta_dstBridgeConnection.target() = Bridge::meta;
		Resource::meta_Interconnect_parent.target() = Interconnect::meta;
		Domain::meta_Interconnect_children.target() = Interconnect::meta;

		Domain::meta_InterconnectConnection_children.target() = InterconnectConnection::meta;
		InterconnectConnection::meta.association() = Node::meta_dstInterconnectConnection.parent();
		InterconnectConnection::meta_dstInterconnectConnection_end_ = Interconnect::meta_srcInterconnectConnection_rev = Node::meta_dstInterconnectConnection;
		InterconnectConnection::meta_srcInterconnectConnection_end_ = Node::meta_dstInterconnectConnection_rev = Interconnect::meta_srcInterconnectConnection;

		File::meta_InterfaceDefinitions_parent.target() = InterfaceDefinitions::meta;
		RootFolder::meta_InterfaceDefinitions_children.target() = InterfaceDefinitions::meta;

		ComponentAssembly::meta_Invoke_children.target() = Invoke::meta;
		Invoke::meta.association() = RequiredRequestPortEnd::meta_dstinvoke.parent();
		Invoke::meta_dstinvoke_end_ = ProvidedRequestPortEnd::meta_srcinvoke_rev = RequiredRequestPortEnd::meta_dstinvoke;
		Invoke::meta_srcinvoke_end_ = RequiredRequestPortEnd::meta_dstinvoke_rev = ProvidedRequestPortEnd::meta_srcinvoke;

		Key::meta_dstKeyMember.target() = Member::meta;
		Aggregate::meta_Key_child.target() = Key::meta;

		Aggregate::meta_KeyMember_children.target() = KeyMember::meta;
		KeyMember::meta.association() = Key::meta_dstKeyMember.parent();
		KeyMember::meta_dstKeyMember_end_ = Member::meta_srcKeyMember_rev = Key::meta_dstKeyMember;
		KeyMember::meta_srcKeyMember_end_ = Key::meta_dstKeyMember_rev = Member::meta_srcKeyMember;

		Label::meta_srcLabelConnection.target() = Member::meta;
		SwitchedAggregate::meta_Label_children.target() = Label::meta;

		SwitchedAggregate::meta_LabelConnection_children.target() = LabelConnection::meta;
		LabelConnection::meta.association() = Member::meta_dstLabelConnection.parent();
		LabelConnection::meta_dstLabelConnection_end_ = Label::meta_srcLabelConnection_rev = Member::meta_dstLabelConnection;
		LabelConnection::meta_srcLabelConnection_end_ = Member::meta_dstLabelConnection_rev = Label::meta_srcLabelConnection;

		LookupKey::meta_ref.target() = LookupKeyType::meta;
		ComponentFactory::meta_LookupKey_child.target() = LookupKey::meta;

		LookupKeyType::meta_referedbyLookupKey.target() = LookupKey::meta;
		LookupKeyType::meta.subTypes() += ValueObject::meta;
		LookupKeyType::meta.subTypes() += TypeParameter::meta;

		ComponentFactory::meta_LookupOperation_children.target() = LookupOperation::meta;

		LoopState::meta_dstLoopTransition.target() = ActionBase::meta;
		LoopState::meta.subTypes() += WhileState::meta;
		LoopState::meta.subTypes() += DoWhileState::meta;
		LoopState::meta.subTypes() += ForState::meta;

		BehaviorModel::meta_LoopTransition_children.target() = LoopTransition::meta;
		LoopTransition::meta.association() = LoopState::meta_dstLoopTransition.parent();
		LoopTransition::meta_dstLoopTransition_end_ = ActionBase::meta_srcLoopTransition_rev = LoopState::meta_dstLoopTransition;
		LoopTransition::meta_srcLoopTransition_end_ = LoopState::meta_dstLoopTransition_rev = ActionBase::meta_srcLoopTransition;

		Project::meta_MPC_parent.target() = MPC::meta;
		Workspaces::meta_MPC_parent.target() = MPC::meta;
		ComponentBuild::meta_MPC_children.target() = MPC::meta;

		ObjectByValue::meta_MakeMemberPrivate_children.target() = MakeMemberPrivate::meta;
		MakeMemberPrivate::meta.association() = Member::meta_dstMakeMemberPrivate.parent();
		MakeMemberPrivate::meta_dstMakeMemberPrivate_end_ = PrivateFlag::meta_srcMakeMemberPrivate_rev = Member::meta_dstMakeMemberPrivate;
		MakeMemberPrivate::meta_srcMakeMemberPrivate_end_ = Member::meta_dstMakeMemberPrivate_rev = PrivateFlag::meta_srcMakeMemberPrivate;

		Manageable::meta_srcManagesComponent.target() = ComponentFactory::meta;
		Manageable::meta.subTypes() += ComponentRef::meta;
		Manageable::meta.subTypes() += Component::meta;

		File::meta_ManagesComponent_children.target() = ManagesComponent::meta;
		Package::meta_ManagesComponent_children.target() = ManagesComponent::meta;
		ManagesComponent::meta.association() = ComponentFactory::meta_dstManagesComponent.parent();
		ManagesComponent::meta_dstManagesComponent_end_ = Manageable::meta_srcManagesComponent_rev = ComponentFactory::meta_dstManagesComponent;
		ManagesComponent::meta_srcManagesComponent_end_ = ComponentFactory::meta_dstManagesComponent_rev = Manageable::meta_srcManagesComponent;

		Member::meta_srcKeyMember.target() = Key::meta;
		Member::meta_dstLabelConnection.target() = Label::meta;
		Member::meta_ref.target() = MemberType::meta;
		Member::meta_dstMakeMemberPrivate.target() = PrivateFlag::meta;
		ObjectByValue::meta_Member_children.target() = Member::meta;
		SwitchedAggregate::meta_Member_children.target() = Member::meta;
		Aggregate::meta_Member_children.target() = Member::meta;
		Exception::meta_Member_children.target() = Member::meta;
		Member::meta.subTypes() += ArrayMember::meta;

		MemberType::meta_referedbySimpleProperty.target() = SimpleProperty::meta;
		MemberType::meta_referedbyDataType.target() = DataType::meta;
		MemberType::meta_referedbyParameterType.target() = ParameterType::meta;
		MemberType::meta_referedbyReturnType.target() = ReturnType::meta;
		MemberType::meta_referedbyAttributeMember.target() = AttributeMember::meta;
		MemberType::meta_referedbyMember.target() = Member::meta;
		MemberType::meta_referedbyBoxed.target() = Boxed::meta;
		MemberType::meta_referedbyAlias.target() = Alias::meta;
		MemberType::meta_referedbyCollection.target() = Collection::meta;
		MemberType::meta.subTypes() += NamedType::meta;
		MemberType::meta.subTypes() += PredefinedType::meta;
		MemberType::meta.subTypes() += TemplateParameterReference::meta;
		MemberType::meta.subTypes() += TemplateParameter::meta;

		BenchmarkAnalysis::meta_MetricConnection_children.target() = MetricConnection::meta;
		MetricConnection::meta.association() = OperationRef::meta_dstMetricConnection.parent();
		MetricConnection::meta_dstMetricConnection_end_ = MetricsBase::meta_srcMetricConnection_rev = OperationRef::meta_dstMetricConnection;
		MetricConnection::meta_srcMetricConnection_end_ = OperationRef::meta_dstMetricConnection_rev = MetricsBase::meta_srcMetricConnection;

		MetricsBase::meta_srcBenchmarkCharacteristics.target() = BenchmarkType::meta;
		MetricsBase::meta_srcMetricConnection.target() = OperationRef::meta;
		MetricsBase::meta_dstWorkloadCharacteristics.target() = TaskSet::meta;
		DataAnalysisBase::meta_MetricsBase_parent.target() = MetricsBase::meta;
		BenchmarkAnalysis::meta_MetricsBase_children.target() = MetricsBase::meta;
		MetricsBase::meta.subTypes() += Throughput::meta;
		MetricsBase::meta.subTypes() += Latency::meta;

		MgaObject::meta.subTypes() += ImplementationContainer::meta;
		MgaObject::meta.subTypes() += Implemenation::meta;
		MgaObject::meta.subTypes() += MonolithExecParameter::meta;
		MgaObject::meta.subTypes() += MonolithDeployRequirement::meta;
		MgaObject::meta.subTypes() += MonolithprimaryArtifact::meta;
		MgaObject::meta.subTypes() += InfoProperty::meta;
		MgaObject::meta.subTypes() += ConfigProperty::meta;
		MgaObject::meta.subTypes() += ServiceConsumer::meta;
		MgaObject::meta.subTypes() += MultipleServiceRequests::meta;
		MgaObject::meta.subTypes() += ServiceLevels::meta;
		MgaObject::meta.subTypes() += ServiceProvider::meta;
		MgaObject::meta.subTypes() += ECRole::meta;
		MgaObject::meta.subTypes() += ECBehavior::meta;
		MgaObject::meta.subTypes() += PathReference::meta;
		MgaObject::meta.subTypes() += PathProperty::meta;
		MgaObject::meta.subTypes() += Paths::meta;
		MgaObject::meta.subTypes() += Edge::meta;
		MgaObject::meta.subTypes() += EdgeProperty::meta;
		MgaObject::meta.subTypes() += SrcEdge::meta;
		MgaObject::meta.subTypes() += GraphVertex::meta;
		MgaObject::meta.subTypes() += DstEdge::meta;
		MgaObject::meta.subTypes() += Path::meta;
		MgaObject::meta.subTypes() += BenchmarkCharacteristics::meta;
		MgaObject::meta.subTypes() += BenchmarkType::meta;
		MgaObject::meta.subTypes() += WorkLoadOperationConnection::meta;
		MgaObject::meta.subTypes() += CompRef::meta;
		MgaObject::meta.subTypes() += ComponentOperation::meta;
		MgaObject::meta.subTypes() += WorkloadCharacteristics::meta;
		MgaObject::meta.subTypes() += Task::meta;
		MgaObject::meta.subTypes() += TaskSet::meta;
		MgaObject::meta.subTypes() += TimerEventSinkConn::meta;
		MgaObject::meta.subTypes() += EventRef::meta;
		MgaObject::meta.subTypes() += OperationRef::meta;
		MgaObject::meta.subTypes() += MetricsBase::meta;
		MgaObject::meta.subTypes() += BenchmarkAnalysis::meta;
		MgaObject::meta.subTypes() += TimerConnection::meta;
		MgaObject::meta.subTypes() += TimeProbe::meta;
		MgaObject::meta.subTypes() += DataAnalysisBase::meta;
		MgaObject::meta.subTypes() += MetricConnection::meta;
		MgaObject::meta.subTypes() += NodeReference::meta;
		MgaObject::meta.subTypes() += Node::meta;
		MgaObject::meta.subTypes() += Interconnect::meta;
		MgaObject::meta.subTypes() += Bridge::meta;
		MgaObject::meta.subTypes() += CollocationGroupProperty::meta;
		MgaObject::meta.subTypes() += PropertyMapping::meta;
		MgaObject::meta.subTypes() += CollocationGroupMember::meta;
		MgaObject::meta.subTypes() += Deploys::meta;
		MgaObject::meta.subTypes() += CollocationGroup::meta;
		MgaObject::meta.subTypes() += InstanceMapping::meta;
		MgaObject::meta.subTypes() += DeploymentPlan::meta;
		MgaObject::meta.subTypes() += PackageConfiguration::meta;
		MgaObject::meta.subTypes() += PackageConfSpecializedConfig::meta;
		MgaObject::meta.subTypes() += PackageConfSelectRequirement::meta;
		MgaObject::meta.subTypes() += PackageConfConfigProperty::meta;
		MgaObject::meta.subTypes() += PackageConfigurationContainer::meta;
		MgaObject::meta.subTypes() += PackageConfigurationReference::meta;
		MgaObject::meta.subTypes() += PackageConfReference::meta;
		MgaObject::meta.subTypes() += PackageConfBasePackage::meta;
		MgaObject::meta.subTypes() += ArtifactDependency::meta;
		MgaObject::meta.subTypes() += ImplementationArtifact::meta;
		MgaObject::meta.subTypes() += ArtifactInfoProperty::meta;
		MgaObject::meta.subTypes() += ArtifactContainer::meta;
		MgaObject::meta.subTypes() += ArtifactExecParameter::meta;
		MgaObject::meta.subTypes() += ArtifactDeployRequirement::meta;
		MgaObject::meta.subTypes() += ArtifactDependsOn::meta;
		MgaObject::meta.subTypes() += ImplementationArtifactReference::meta;
		MgaObject::meta.subTypes() += package::meta;
		MgaObject::meta.subTypes() += TopLevelPackage::meta;
		MgaObject::meta.subTypes() += TopLevelPackageContainer::meta;
		MgaObject::meta.subTypes() += ComponentPackage::meta;
		MgaObject::meta.subTypes() += PackageInfoProperty::meta;
		MgaObject::meta.subTypes() += ComponentPackageReference::meta;
		MgaObject::meta.subTypes() += PackageContainer::meta;
		MgaObject::meta.subTypes() += PackageConfigProperty::meta;
		MgaObject::meta.subTypes() += Implementation::meta;
		MgaObject::meta.subTypes() += PackageInterface::meta;
		MgaObject::meta.subTypes() += Property::meta;
		MgaObject::meta.subTypes() += DataValueBase::meta;
		MgaObject::meta.subTypes() += SimpleType::meta;
		MgaObject::meta.subTypes() += ComplexType::meta;
		MgaObject::meta.subTypes() += ComplexTypeReference::meta;
		MgaObject::meta.subTypes() += DataType::meta;
		MgaObject::meta.subTypes() += RequirementBase::meta;
		MgaObject::meta.subTypes() += RequirementSatisfier::meta;
		MgaObject::meta.subTypes() += SatisfierProperty::meta;
		MgaObject::meta.subTypes() += ImplementationDependency::meta;
		MgaObject::meta.subTypes() += Shares::meta;
		MgaObject::meta.subTypes() += Domain::meta;
		MgaObject::meta.subTypes() += BridgeConnection::meta;
		MgaObject::meta.subTypes() += InterconnectConnection::meta;
		MgaObject::meta.subTypes() += Taggable::meta;
		MgaObject::meta.subTypes() += Prefixable::meta;
		MgaObject::meta.subTypes() += ParameterType::meta;
		MgaObject::meta.subTypes() += ReturnType::meta;
		MgaObject::meta.subTypes() += ExceptionRef::meta;
		MgaObject::meta.subTypes() += AttributeMember::meta;
		MgaObject::meta.subTypes() += MakeMemberPrivate::meta;
		MgaObject::meta.subTypes() += PrivateFlag::meta;
		MgaObject::meta.subTypes() += GetException::meta;
		MgaObject::meta.subTypes() += SetException::meta;
		MgaObject::meta.subTypes() += Supports::meta;
		MgaObject::meta.subTypes() += SupportsInterfaces::meta;
		MgaObject::meta.subTypes() += Inherits::meta;
		MgaObject::meta.subTypes() += Key::meta;
		MgaObject::meta.subTypes() += KeyMember::meta;
		MgaObject::meta.subTypes() += Member::meta;
		MgaObject::meta.subTypes() += Discriminator::meta;
		MgaObject::meta.subTypes() += LabelConnection::meta;
		MgaObject::meta.subTypes() += Label::meta;
		MgaObject::meta.subTypes() += EnumValue::meta;
		MgaObject::meta.subTypes() += TemplateParameterValueType::meta;
		MgaObject::meta.subTypes() += ExceptionType::meta;
		MgaObject::meta.subTypes() += NativeValue::meta;
		MgaObject::meta.subTypes() += TemplateParameterValue::meta;
		MgaObject::meta.subTypes() += PackageType::meta;
		MgaObject::meta.subTypes() += ConstantType::meta;
		MgaObject::meta.subTypes() += FileRef::meta;
		MgaObject::meta.subTypes() += Workspaces::meta;
		MgaObject::meta.subTypes() += MPC::meta;
		MgaObject::meta.subTypes() += ComponentLib::meta;
		MgaObject::meta.subTypes() += ExtResourceConn::meta;
		MgaObject::meta.subTypes() += ExternalResources::meta;
		MgaObject::meta.subTypes() += Project::meta;
		MgaObject::meta.subTypes() += ExternalPort::meta;
		MgaObject::meta.subTypes() += ExtendedDelegate::meta;
		MgaObject::meta.subTypes() += MirrorDelegate::meta;
		MgaObject::meta.subTypes() += AssemblyConfigPropertyEnd::meta;
		MgaObject::meta.subTypes() += ConnectorToFacet::meta;
		MgaObject::meta.subTypes() += ConnectorToReceptacle::meta;
		MgaObject::meta.subTypes() += ExternalPortEnd::meta;
		MgaObject::meta.subTypes() += Consume::meta;
		MgaObject::meta.subTypes() += Publish::meta;
		MgaObject::meta.subTypes() += AttributeMappingDelegate::meta;
		MgaObject::meta.subTypes() += AttributeMappingValue::meta;
		MgaObject::meta.subTypes() += AttributeMapping::meta;
		MgaObject::meta.subTypes() += AttributeDelegate::meta;
		MgaObject::meta.subTypes() += AttributeValue::meta;
		MgaObject::meta.subTypes() += ExternalDelegate::meta;
		MgaObject::meta.subTypes() += EventSinkDelegate::meta;
		MgaObject::meta.subTypes() += EventSourceDelegate::meta;
		MgaObject::meta.subTypes() += FacetDelegate::meta;
		MgaObject::meta.subTypes() += ReceptacleDelegate::meta;
		MgaObject::meta.subTypes() += SendsTo::meta;
		MgaObject::meta.subTypes() += AssemblyConfigProperty::meta;
		MgaObject::meta.subTypes() += AssemblyselectRequirement::meta;
		MgaObject::meta.subTypes() += Invoke::meta;
		MgaObject::meta.subTypes() += Operation::meta;
		MgaObject::meta.subTypes() += WorkerPackageBase::meta;
		MgaObject::meta.subTypes() += Worker::meta;
		MgaObject::meta.subTypes() += WorkerLibrary::meta;
		MgaObject::meta.subTypes() += PortInstance::meta;
		MgaObject::meta.subTypes() += ComponentInstanceType::meta;
		MgaObject::meta.subTypes() += LookupKeyType::meta;
		MgaObject::meta.subTypes() += LookupKey::meta;
		MgaObject::meta.subTypes() += ExtendedPortBase::meta;
		MgaObject::meta.subTypes() += ComponentInherits::meta;
		MgaObject::meta.subTypes() += EventType::meta;
		MgaObject::meta.subTypes() += Provideable::meta;
		MgaObject::meta.subTypes() += Manageable::meta;
		MgaObject::meta.subTypes() += ManagesComponent::meta;
		MgaObject::meta.subTypes() += CriticalPath::meta;
		MgaObject::meta.subTypes() += ComponentImplementationReference::meta;
		MgaObject::meta.subTypes() += Implements::meta;
		MgaObject::meta.subTypes() += ImplementationDependsOn::meta;
		MgaObject::meta.subTypes() += ImplementationCapability::meta;
		MgaObject::meta.subTypes() += CommonPortAttrs::meta;
		MgaObject::meta.subTypes() += ComponentInfoProperty::meta;
		MgaObject::meta.subTypes() += ComponentConfigProperty::meta;
		MgaObject::meta.subTypes() += ComponentContainer::meta;
		MgaObject::meta.subTypes() += ComponentProperty::meta;
		MgaObject::meta.subTypes() += ComponentPropertyDescription::meta;
		MgaObject::meta.subTypes() += ConnectorType::meta;
		MgaObject::meta.subTypes() += ConnectorImplements::meta;
		MgaObject::meta.subTypes() += ConnectorImplementationType::meta;
		MgaObject::meta.subTypes() += ConnectorInherits::meta;
		MgaObject::meta.subTypes() += EffectBase::meta;
		MgaObject::meta.subTypes() += TerminalTransition::meta;
		MgaObject::meta.subTypes() += Terminal::meta;
		MgaObject::meta.subTypes() += LoopTransition::meta;
		MgaObject::meta.subTypes() += StateBase::meta;
		MgaObject::meta.subTypes() += BranchTransition::meta;
		MgaObject::meta.subTypes() += Transition::meta;
		MgaObject::meta.subTypes() += TargetRequiredRequestPort::meta;
		MgaObject::meta.subTypes() += ActionType::meta;
		MgaObject::meta.subTypes() += QueryInputAction::meta;
		MgaObject::meta.subTypes() += ActionBase::meta;
		MgaObject::meta.subTypes() += Finish::meta;
		MgaObject::meta.subTypes() += BehaviorInputAction::meta;
		MgaObject::meta.subTypes() += BehaviorModel::meta;
		MgaObject::meta.subTypes() += Variable::meta;
		MgaObject::meta.subTypes() += QueryInputBase::meta;
		MgaObject::meta.subTypes() += QueryInput::meta;
		MgaObject::meta.subTypes() += MultiInput::meta;
		MgaObject::meta.subTypes() += SingleOutputBase::meta;
		MgaObject::meta.subTypes() += MultiOutputBase::meta;
		MgaObject::meta.subTypes() += MultiInputBase::meta;
		MgaObject::meta.subTypes() += SingleInputBase::meta;
		MgaObject::meta.subTypes() += Input::meta;
		MgaObject::meta.subTypes() += WorkerType::meta;

		ComponentAssembly::meta_MirrorDelegate_children.target() = MirrorDelegate::meta;
		MirrorDelegate::meta.association() = MirrorPortInstanceBase::meta_dstMirrorDelegate.parent();
		MirrorDelegate::meta_dstMirrorDelegate_end_ = MirrorPortDelegate::meta_srcMirrorDelegate_rev = MirrorPortInstanceBase::meta_dstMirrorDelegate;
		MirrorDelegate::meta_srcMirrorDelegate_end_ = MirrorPortInstanceBase::meta_dstMirrorDelegate_rev = MirrorPortDelegate::meta_srcMirrorDelegate;

		MirrorPort::meta_referedbyMirrorPortInstance.target() = MirrorPortInstance::meta;

		MirrorPortDelegate::meta_srcMirrorDelegate.target() = MirrorPortInstanceBase::meta;
		ComponentAssembly::meta_MirrorPortDelegate_children.target() = MirrorPortDelegate::meta;

		MirrorPortInstance::meta_ref.target() = MirrorPort::meta;

		MirrorPortInstanceBase::meta_dstMirrorDelegate.target() = MirrorPortDelegate::meta;
		MirrorPortInstanceBase::meta.subTypes() += MirrorPortDelegate::meta;
		MirrorPortInstanceBase::meta.subTypes() += MirrorPortInstance::meta;

		ImplementationContainer::meta_MonolithDeployRequirement_children.target() = MonolithDeployRequirement::meta;
		MonolithDeployRequirement::meta.association() = MonolithicImplementationBase::meta_dstMonolithDeployRequirement.parent();
		MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_ = ImplementationRequirement::meta_srcMonolithDeployRequirement_rev = MonolithicImplementationBase::meta_dstMonolithDeployRequirement;
		MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_ = MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev = ImplementationRequirement::meta_srcMonolithDeployRequirement;

		ImplementationContainer::meta_MonolithExecParameter_children.target() = MonolithExecParameter::meta;
		MonolithExecParameter::meta.association() = MonolithicImplementationBase::meta_dstMonolithExecParameter.parent();
		MonolithExecParameter::meta_dstMonolithExecParameter_end_ = Property::meta_srcMonolithExecParameter_rev = MonolithicImplementationBase::meta_dstMonolithExecParameter;
		MonolithExecParameter::meta_srcMonolithExecParameter_end_ = MonolithicImplementationBase::meta_dstMonolithExecParameter_rev = Property::meta_srcMonolithExecParameter;

		MonolithicImplementation::meta_referedbyComponentInstanceType.target() = ComponentInstanceType::meta;

		MonolithicImplementationBase::meta_dstMonolithprimaryArtifact.target() = ImplementationArtifactReference::meta;
		MonolithicImplementationBase::meta_dstMonolithExecParameter.target() = Property::meta;
		MonolithicImplementationBase::meta_dstMonolithDeployRequirement.target() = ImplementationRequirement::meta;
		MonolithicImplementationBase::meta.subTypes() += ComponentFactoryInstance::meta;
		MonolithicImplementationBase::meta.subTypes() += MonolithicImplementation::meta;
		MonolithicImplementationBase::meta.subTypes() += ConnectorImplementation::meta;

		ImplementationContainer::meta_MonolithprimaryArtifact_children.target() = MonolithprimaryArtifact::meta;
		MonolithprimaryArtifact::meta.association() = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact.parent();
		MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_ = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;
		MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_ = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;

		TopLevelBehavior::meta_MultiInput_children.target() = MultiInput::meta;
		MultiInput::meta.association() = MultiInputBase::meta_dstMultiInput.parent();
		MultiInput::meta_dstMultiInput_end_ = MultiInputAction::meta_srcMultiInput_rev = MultiInputBase::meta_dstMultiInput;
		MultiInput::meta_srcMultiInput_end_ = MultiInputBase::meta_dstMultiInput_rev = MultiInputAction::meta_srcMultiInput;

		MultiInputAction::meta_srcMultiInput.target() = MultiInputBase::meta;

		MultiInputBase::meta_dstMultiInput.target() = MultiInputAction::meta;
		MultiInputBase::meta.subTypes() += ProvidedRequestPort::meta;
		MultiInputBase::meta.subTypes() += Environment::meta;

		MultiOutputBase::meta.subTypes() += RequiredRequestPort::meta;

		ServiceProvider::meta_MultipleServiceRequests_child.target() = MultipleServiceRequests::meta;

		NameParameter::meta_referedbyCollectionParameter.target() = CollectionParameter::meta;

		File::meta_NamedType_children.target() = NamedType::meta;
		Package::meta_NamedType_children.target() = NamedType::meta;
		NamedType::meta.subTypes() += Inheritable::meta;
		NamedType::meta.subTypes() += NoInheritable::meta;
		NamedType::meta.subTypes() += Boxed::meta;
		NamedType::meta.subTypes() += Component::meta;
		NamedType::meta.subTypes() += ConnectorObject::meta;

		File::meta_NativeValue_children.target() = NativeValue::meta;
		Package::meta_NativeValue_children.target() = NativeValue::meta;

		HasOperations::meta_NoInheritable_children.target() = NoInheritable::meta;
		NoInheritable::meta.subTypes() += Alias::meta;
		NoInheritable::meta.subTypes() += Collection::meta;
		NoInheritable::meta.subTypes() += SwitchedAggregate::meta;
		NoInheritable::meta.subTypes() += Aggregate::meta;
		NoInheritable::meta.subTypes() += Enum::meta;
		NoInheritable::meta.subTypes() += PortType::meta;

		Node::meta_referedbyNodeReference.target() = NodeReference::meta;
		Node::meta_dstInterconnectConnection.target() = Interconnect::meta;
		Node::meta_dstShares.target() = SharedResource::meta;
		Resource::meta_Node_parent.target() = Node::meta;
		Domain::meta_Node_children.target() = Node::meta;

		NodeReference::meta_ref.target() = Node::meta;
		NodeReference::meta_dstPropertyMapping.target() = Property::meta;
		NodeReference::meta_srcInstanceMapping.target() = CollocationGroup::meta;
		DeploymentPlan::meta_NodeReference_children.target() = NodeReference::meta;

		::PICML::Object::meta_referedbySupports.target() = Supports::meta;

		Member::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		MakeMemberPrivate::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		PrivateFlag::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		FactoryOperation::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		ObjectByValue::meta.subTypes() += ValueObject::meta;
		ObjectByValue::meta.subTypes() += Event::meta;

		PortType::meta_ObjectPort_children.target() = ObjectPort::meta;
		ConnectorObject::meta_ObjectPort_children.target() = ObjectPort::meta;
		ObjectPort::meta.subTypes() += RequiredRequestPort::meta;
		ObjectPort::meta.subTypes() += ProvidedRequestPort::meta;

		HasOperations::meta_OnewayOperation_children.target() = OnewayOperation::meta;

		Operation::meta_referedbyActionType.target() = ActionType::meta;
		ReturnType::meta_Operation_parent.target() = Operation::meta;
		ParameterType::meta_Operation_parent.target() = Operation::meta;
		Worker::meta_Operation_children.target() = Operation::meta;

		OperationBase::meta_referedbyOperationRef.target() = OperationRef::meta;
		InParameter::meta_OperationBase_parent.target() = OperationBase::meta;
		BenchmarkAnalysis::meta_OperationBase_children.target() = OperationBase::meta;
		OperationBase::meta.subTypes() += HasExceptions::meta;
		OperationBase::meta.subTypes() += OnewayOperation::meta;

		OperationRef::meta_dstWorkLoadOperationConnection.target() = Task::meta;
		OperationRef::meta_dstTimerConnection.target() = TimeProbe::meta;
		OperationRef::meta_dstMetricConnection.target() = MetricsBase::meta;
		OperationRef::meta_dstComponentOperation.target() = CompRef::meta;
		OperationRef::meta_ref.target() = OperationBase::meta;
		BenchmarkAnalysis::meta_OperationRef_children.target() = OperationRef::meta;

		OutEventPort::meta_referedbyOutEventPortInstance.target() = OutEventPortInstance::meta;
		OutEventPort::meta_ref.target() = EventType::meta;

		OutEventPortDelegate::meta_srcEventSourceDelegate.target() = OutEventPortEnd::meta;
		ComponentAssembly::meta_OutEventPortDelegate_children.target() = OutEventPortDelegate::meta;

		OutEventPortEnd::meta_dstEventSourceDelegate.target() = OutEventPortDelegate::meta;
		OutEventPortEnd::meta_dstSendsTo.target() = InEventPortEnd::meta;
		OutEventPortEnd::meta.subTypes() += OutEventPortDelegate::meta;
		OutEventPortEnd::meta.subTypes() += OutEventPortInstance::meta;

		OutEventPortInstance::meta_ref.target() = OutEventPort::meta;

		TwowayOperation::meta_OutParameter_children.target() = OutParameter::meta;

		Package::meta_referedbyPackageType.target() = PackageType::meta;
		NativeValue::meta_Package_parent.target() = Package::meta;
		TemplateParameter::meta_Package_parent.target() = Package::meta;
		ManagesComponent::meta_Package_parent.target() = Package::meta;
		ComponentRef::meta_Package_parent.target() = Package::meta;
		NamedType::meta_Package_parent.target() = Package::meta;
		Constant::meta_Package_parent.target() = Package::meta;
		Exception::meta_Package_parent.target() = Package::meta;
		Package::meta_Package_parent.target() = Package::meta;
		File::meta_Package_children.target() = Package::meta;
		Package::meta_Package_children.target() = Package::meta;
		Package::meta.subTypes() += TemplatePackageAlias::meta;
		Package::meta.subTypes() += TemplatePackageInstance::meta;

		PackageConfigurationContainer::meta_PackageConfBasePackage_child.target() = PackageConfBasePackage::meta;
		PackageConfBasePackage::meta.association() = PackageConfiguration::meta_dstPackageConfBasePackage.parent();
		PackageConfBasePackage::meta_dstPackageConfBasePackage_end_ = ComponentPackage::meta_srcPackageConfBasePackage_rev = PackageConfiguration::meta_dstPackageConfBasePackage;
		PackageConfBasePackage::meta_srcPackageConfBasePackage_end_ = PackageConfiguration::meta_dstPackageConfBasePackage_rev = ComponentPackage::meta_srcPackageConfBasePackage;

		PackageConfigurationContainer::meta_PackageConfConfigProperty_children.target() = PackageConfConfigProperty::meta;
		PackageConfConfigProperty::meta.association() = PackageConfiguration::meta_dstPackageConfConfigProperty.parent();
		PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_ = Property::meta_srcPackageConfConfigProperty_rev = PackageConfiguration::meta_dstPackageConfConfigProperty;
		PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_ = PackageConfiguration::meta_dstPackageConfConfigProperty_rev = Property::meta_srcPackageConfConfigProperty;

		PackageConfigurationContainer::meta_PackageConfReference_child.target() = PackageConfReference::meta;
		PackageConfReference::meta.association() = PackageConfiguration::meta_dstPackageConfReference.parent();
		PackageConfReference::meta_dstPackageConfReference_end_ = ComponentPackageReference::meta_srcPackageConfReference_rev = PackageConfiguration::meta_dstPackageConfReference;
		PackageConfReference::meta_srcPackageConfReference_end_ = PackageConfiguration::meta_dstPackageConfReference_rev = ComponentPackageReference::meta_srcPackageConfReference;

		PackageConfigurationContainer::meta_PackageConfSelectRequirement_children.target() = PackageConfSelectRequirement::meta;
		PackageConfSelectRequirement::meta.association() = PackageConfiguration::meta_dstPackageConfSelectRequirement.parent();
		PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_ = Requirement::meta_srcPackageConfSelectRequirement_rev = PackageConfiguration::meta_dstPackageConfSelectRequirement;
		PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_ = PackageConfiguration::meta_dstPackageConfSelectRequirement_rev = Requirement::meta_srcPackageConfSelectRequirement;

		PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child.target() = PackageConfSpecializedConfig::meta;
		PackageConfSpecializedConfig::meta.association() = PackageConfiguration::meta_dstPackageConfSpecializedConfig.parent();
		PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_ = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev = PackageConfiguration::meta_dstPackageConfSpecializedConfig;
		PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_ = PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;

		PackageContainer::meta_PackageConfigProperty_children.target() = PackageConfigProperty::meta;
		PackageConfigProperty::meta.association() = ComponentPackage::meta_dstPackageConfigProperty.parent();
		PackageConfigProperty::meta_dstPackageConfigProperty_end_ = Property::meta_srcPackageConfigProperty_rev = ComponentPackage::meta_dstPackageConfigProperty;
		PackageConfigProperty::meta_srcPackageConfigProperty_end_ = ComponentPackage::meta_dstPackageConfigProperty_rev = Property::meta_srcPackageConfigProperty;

		PackageConfiguration::meta_dstPackageConfSpecializedConfig.target() = PackageConfigurationReference::meta;
		PackageConfiguration::meta_dstPackageConfConfigProperty.target() = Property::meta;
		PackageConfiguration::meta_dstPackageConfSelectRequirement.target() = Requirement::meta;
		PackageConfiguration::meta_dstPackageConfReference.target() = ComponentPackageReference::meta;
		PackageConfiguration::meta_dstPackageConfBasePackage.target() = ComponentPackage::meta;
		PackageConfiguration::meta_referedbyPackageConfigurationReference.target() = PackageConfigurationReference::meta;
		PackageConfigurationContainer::meta_PackageConfiguration_children.target() = PackageConfiguration::meta;

		Property::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfiguration::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		Requirement::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfConfigProperty::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		ComponentPackageReference::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		ComponentPackage::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfReference::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfBasePackage::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfigurations::meta_PackageConfigurationContainer_children.target() = PackageConfigurationContainer::meta;

		PackageConfigurationReference::meta_srcPackageConfSpecializedConfig.target() = PackageConfiguration::meta;
		PackageConfigurationReference::meta_ref.target() = PackageConfiguration::meta;
		PackageConfigurationReference::meta_srcpackage.target() = TopLevelPackage::meta;
		TopLevelPackageContainer::meta_PackageConfigurationReference_child.target() = PackageConfigurationReference::meta;

		PackageConfigurationContainer::meta_PackageConfigurations_parent.target() = PackageConfigurations::meta;
		RootFolder::meta_PackageConfigurations_children.target() = PackageConfigurations::meta;

		Property::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentPackage::meta_PackageContainer_parent.target() = PackageContainer::meta;
		PackageInfoProperty::meta_PackageContainer_parent.target() = PackageContainer::meta;
		PackageConfigProperty::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentRef::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentImplementationReference::meta_PackageContainer_parent.target() = PackageContainer::meta;
		Implementation::meta_PackageContainer_parent.target() = PackageContainer::meta;
		PackageInterface::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentPackages::meta_PackageContainer_children.target() = PackageContainer::meta;

		PackageContainer::meta_PackageInfoProperty_children.target() = PackageInfoProperty::meta;
		PackageInfoProperty::meta.association() = ComponentPackage::meta_dstPackageInfoProperty.parent();
		PackageInfoProperty::meta_dstPackageInfoProperty_end_ = Property::meta_srcPackageInfoProperty_rev = ComponentPackage::meta_dstPackageInfoProperty;
		PackageInfoProperty::meta_srcPackageInfoProperty_end_ = ComponentPackage::meta_dstPackageInfoProperty_rev = Property::meta_srcPackageInfoProperty;

		PackageContainer::meta_PackageInterface_child.target() = PackageInterface::meta;
		PackageInterface::meta.association() = ComponentPackage::meta_dstPackageInterface.parent();
		PackageInterface::meta_dstPackageInterface_end_ = ComponentRef::meta_srcPackageInterface_rev = ComponentPackage::meta_dstPackageInterface;
		PackageInterface::meta_srcPackageInterface_end_ = ComponentPackage::meta_dstPackageInterface_rev = ComponentRef::meta_srcPackageInterface;

		PackageType::meta_ref.target() = Package::meta;
		TemplatePackageAlias::meta_PackageType_child.target() = PackageType::meta;
		TemplatePackageInstance::meta_PackageType_child.target() = PackageType::meta;

		ParameterType::meta_ref.target() = MemberType::meta;
		Operation::meta_ParameterType_children.target() = ParameterType::meta;
		ParameterType::meta.subTypes() += OutParameter::meta;
		ParameterType::meta.subTypes() += InoutParameter::meta;
		ParameterType::meta.subTypes() += InParameter::meta;

		Path::meta_referedbyPathReference.target() = PathReference::meta;
		Path::meta_dstPathProperty.target() = Property::meta;
		Property::meta_Path_parent.target() = Path::meta;
		GraphVertex::meta_Path_parent.target() = Path::meta;
		Edge::meta_Path_parent.target() = Path::meta;
		EdgeProperty::meta_Path_parent.target() = Path::meta;
		SrcEdge::meta_Path_parent.target() = Path::meta;
		ComponentRef::meta_Path_parent.target() = Path::meta;
		DstEdge::meta_Path_parent.target() = Path::meta;
		Paths::meta_Path_children.target() = Path::meta;

		Paths::meta_PathDiagrams_parent.target() = PathDiagrams::meta;
		RootFolder::meta_PathDiagrams_children.target() = PathDiagrams::meta;

		Paths::meta_PathProperty_children.target() = PathProperty::meta;
		PathProperty::meta.association() = Path::meta_dstPathProperty.parent();
		PathProperty::meta_dstPathProperty_end_ = Property::meta_srcPathProperty_rev = Path::meta_dstPathProperty;
		PathProperty::meta_srcPathProperty_end_ = Path::meta_dstPathProperty_rev = Property::meta_srcPathProperty;

		PathReference::meta_ref.target() = Path::meta;
		PathReference::meta_srcCriticalPath.target() = ComponentAssembly::meta;
		ComponentImplementationContainer::meta_PathReference_child.target() = PathReference::meta;

		Property::meta_Paths_parent.target() = Paths::meta;
		PathProperty::meta_Paths_parent.target() = Paths::meta;
		Path::meta_Paths_parent.target() = Paths::meta;
		PathDiagrams::meta_Paths_children.target() = Paths::meta;

		TopLevelBehavior::meta_PeriodicEvent_children.target() = PeriodicEvent::meta;

		ConnectedComponent::meta_Port_children.target() = Port::meta;
		Component::meta_Port_children.target() = Port::meta;
		Port::meta.subTypes() += EventPort::meta;
		Port::meta.subTypes() += ObjectPort::meta;

		ComponentInstance::meta_PortInstance_children.target() = PortInstance::meta;
		PortInstance::meta.subTypes() += RequiredRequestPortInstance::meta;
		PortInstance::meta.subTypes() += InEventPortInstance::meta;
		PortInstance::meta.subTypes() += ProvidedRequestPortInstance::meta;
		PortInstance::meta.subTypes() += OutEventPortInstance::meta;
		PortInstance::meta.subTypes() += MirrorPortInstance::meta;
		PortInstance::meta.subTypes() += ExtendedPortInstance::meta;
		PortInstance::meta.subTypes() += AttributeInstance::meta;

		PortType::meta_referedbyExtendedPortBase.target() = ExtendedPortBase::meta;
		ReadonlyAttribute::meta_PortType_parent.target() = PortType::meta;
		ObjectPort::meta_PortType_parent.target() = PortType::meta;

		PredefinedType::meta_referedbyVariable.target() = Variable::meta;
		PredefinedTypes::meta_PredefinedType_children.target() = PredefinedType::meta;
		PredefinedType::meta.subTypes() += StringType::meta;
		PredefinedType::meta.subTypes() += CharType::meta;
		PredefinedType::meta.subTypes() += IntegerType::meta;
		PredefinedType::meta.subTypes() += FloatingPointType::meta;
		PredefinedType::meta.subTypes() += TypeKind::meta;
		PredefinedType::meta.subTypes() += TypeEncoding::meta;
		PredefinedType::meta.subTypes() += GenericValue::meta;
		PredefinedType::meta.subTypes() += GenericValueObject::meta;
		PredefinedType::meta.subTypes() += GenericObject::meta;
		PredefinedType::meta.subTypes() += Boolean::meta;
		PredefinedType::meta.subTypes() += Byte::meta;

		PredefinedType::meta_PredefinedTypes_parent.target() = PredefinedTypes::meta;
		RootFolder::meta_PredefinedTypes_children.target() = PredefinedTypes::meta;

		Prefixable::meta.subTypes() += ObjectByValue::meta;
		Prefixable::meta.subTypes() += ::PICML::Object::meta;
		Prefixable::meta.subTypes() += File::meta;
		Prefixable::meta.subTypes() += Package::meta;

		PrivateFlag::meta_srcMakeMemberPrivate.target() = Member::meta;
		ObjectByValue::meta_PrivateFlag_children.target() = PrivateFlag::meta;

		Project::meta_setWorkspace.target() = Workspaces::meta;
		ImplementationArtifact::meta_Project_parent.target() = Project::meta;
		ComponentLib::meta_Project_parent.target() = Project::meta;
		ExtResourceConn::meta_Project_parent.target() = Project::meta;
		ExternalResources::meta_Project_parent.target() = Project::meta;
		MPC::meta_Project_children.target() = Project::meta;

		Property::meta_srcMonolithExecParameter.target() = MonolithicImplementationBase::meta;
		Property::meta_srcInfoProperty.target() = Implemenation::meta;
		Property::meta_srcConfigProperty.target() = Implemenation::meta;
		Property::meta_srcPathProperty.target() = Path::meta;
		Property::meta_srcPropertyMapping.target() = NodeReference::meta;
		Property::meta_srcPackageConfConfigProperty.target() = PackageConfiguration::meta;
		Property::meta_srcArtifactInfoProperty.target() = ImplementationArtifact::meta;
		Property::meta_srcArtifactExecParameter.target() = ImplementationArtifact::meta;
		Property::meta_srcPackageInfoProperty.target() = ComponentPackage::meta;
		Property::meta_srcPackageConfigProperty.target() = ComponentPackage::meta;
		Property::meta_dstPropertyConnector.target() = Edge::meta;
		Property::meta_dstCollocationGroupProperty.target() = CollocationGroup::meta;
		Property::meta_srcAssemblyConfigProperty.target() = AssemblyConfigPropertyEnd::meta;
		Property::meta_srcAttributeMappingValue.target() = AttributeMapping::meta;
		Property::meta_srcAttributeValue.target() = AttributeInstance::meta;
		Property::meta_srcComponentInfoProperty.target() = ComponentRef::meta;
		Property::meta_srcComponentConfigProperty.target() = ComponentRef::meta;
		ImplementationContainer::meta_Property_children.target() = Property::meta;
		Paths::meta_Property_children.target() = Property::meta;
		Path::meta_Property_children.target() = Property::meta;
		DeploymentPlan::meta_Property_children.target() = Property::meta;
		PackageConfigurationContainer::meta_Property_children.target() = Property::meta;
		ArtifactContainer::meta_Property_children.target() = Property::meta;
		PackageContainer::meta_Property_children.target() = Property::meta;
		RequirementBase::meta_Property_children.target() = Property::meta;
		Domain::meta_Property_children.target() = Property::meta;
		ComponentAssembly::meta_Property_children.target() = Property::meta;
		ComponentContainer::meta_Property_children.target() = Property::meta;
		QueryInputAction::meta_Property_children.target() = Property::meta;
		ActionBase::meta_Property_children.target() = Property::meta;
		BehaviorInputAction::meta_Property_children.target() = Property::meta;
		Property::meta.subTypes() += ComplexProperty::meta;
		Property::meta.subTypes() += SimpleProperty::meta;

		DeploymentPlan::meta_PropertyMapping_children.target() = PropertyMapping::meta;
		PropertyMapping::meta.association() = NodeReference::meta_dstPropertyMapping.parent();
		PropertyMapping::meta_dstPropertyMapping_end_ = Property::meta_srcPropertyMapping_rev = NodeReference::meta_dstPropertyMapping;
		PropertyMapping::meta_srcPropertyMapping_end_ = NodeReference::meta_dstPropertyMapping_rev = Property::meta_srcPropertyMapping;

		Provideable::meta_referedbyRequiredRequestPort.target() = RequiredRequestPort::meta;
		Provideable::meta_referedbyProvidedRequestPort.target() = ProvidedRequestPort::meta;
		Provideable::meta.subTypes() += ::PICML::Object::meta;
		Provideable::meta.subTypes() += GenericObject::meta;
		Provideable::meta.subTypes() += TemplateParameter::meta;

		ProvidedRequestPort::meta_referedbyProvidedRequestPortInstance.target() = ProvidedRequestPortInstance::meta;
		ProvidedRequestPort::meta_ref.target() = Provideable::meta;

		ProvidedRequestPortDelegate::meta_dstFacetDelegate.target() = ProvidedRequestPortEnd::meta;
		ComponentAssembly::meta_ProvidedRequestPortDelegate_children.target() = ProvidedRequestPortDelegate::meta;

		ProvidedRequestPortEnd::meta_srcFacetDelegate.target() = ProvidedRequestPortDelegate::meta;
		ProvidedRequestPortEnd::meta_srcinvoke.target() = RequiredRequestPortEnd::meta;
		ProvidedRequestPortEnd::meta_srcConnectorToFacet.target() = ConnectorInstance::meta;
		ProvidedRequestPortEnd::meta.subTypes() += ProvidedRequestPortDelegate::meta;
		ProvidedRequestPortEnd::meta.subTypes() += SupportsInstance::meta;
		ProvidedRequestPortEnd::meta.subTypes() += ProvidedRequestPortInstance::meta;

		ProvidedRequestPortInstance::meta_ref.target() = ProvidedRequestPort::meta;

		ComponentAssembly::meta_Publish_children.target() = Publish::meta;
		Publish::meta.association() = ExtendPortEnd::meta_dstPublish.parent();
		Publish::meta_dstPublish_end_ = ConnectorInstance::meta_srcPublish_rev = ExtendPortEnd::meta_dstPublish;
		Publish::meta_srcPublish_end_ = ExtendPortEnd::meta_dstPublish_rev = ConnectorInstance::meta_srcPublish;

		TopLevelBehavior::meta_QueryInput_children.target() = QueryInput::meta;
		QueryInput::meta.association() = QueryInputBase::meta_dstQueryInput.parent();
		QueryInput::meta_dstQueryInput_end_ = QueryInputAction::meta_srcQueryInput_rev = QueryInputBase::meta_dstQueryInput;
		QueryInput::meta_srcQueryInput_end_ = QueryInputBase::meta_dstQueryInput_rev = QueryInputAction::meta_srcQueryInput;

		QueryInputAction::meta_srcQueryInput.target() = QueryInputBase::meta;
		Property::meta_QueryInputAction_parent.target() = QueryInputAction::meta;
		BehaviorModel::meta_QueryInputAction_children.target() = QueryInputAction::meta;

		QueryInputBase::meta_dstQueryInput.target() = QueryInputAction::meta;
		QueryInputBase::meta.subTypes() += InEventPort::meta;

		ServiceConsumer::meta_RTRequirements_parent.target() = RTRequirements::meta;
		ServiceProvider::meta_RTRequirements_parent.target() = RTRequirements::meta;

		ReadonlyAttribute::meta_referedbyAttributeInstance.target() = AttributeInstance::meta;
		AttributeMember::meta_ReadonlyAttribute_parent.target() = ReadonlyAttribute::meta;
		GetException::meta_ReadonlyAttribute_parent.target() = ReadonlyAttribute::meta;
		Inheritable::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		Component::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		PortType::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		ConnectorObject::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		ReadonlyAttribute::meta.subTypes() += Attribute::meta;

		ComponentAssembly::meta_ReceptacleDelegate_children.target() = ReceptacleDelegate::meta;
		ReceptacleDelegate::meta.association() = RequiredRequestPortDelegate::meta_dstReceptacleDelegate.parent();
		ReceptacleDelegate::meta_dstReceptacleDelegate_end_ = RequiredRequestPortEnd::meta_srcReceptacleDelegate_rev = RequiredRequestPortDelegate::meta_dstReceptacleDelegate;
		ReceptacleDelegate::meta_srcReceptacleDelegate_end_ = RequiredRequestPortDelegate::meta_dstReceptacleDelegate_rev = RequiredRequestPortEnd::meta_srcReceptacleDelegate;

		RequiredRequestPort::meta_referedbyRequiredRequestPortInstance.target() = RequiredRequestPortInstance::meta;
		RequiredRequestPort::meta_ref.target() = Provideable::meta;
		RequiredRequestPort::meta_referedbyTargetRequiredRequestPort.target() = TargetRequiredRequestPort::meta;

		RequiredRequestPortDelegate::meta_dstReceptacleDelegate.target() = RequiredRequestPortEnd::meta;
		ComponentAssembly::meta_RequiredRequestPortDelegate_children.target() = RequiredRequestPortDelegate::meta;

		RequiredRequestPortEnd::meta_srcReceptacleDelegate.target() = RequiredRequestPortDelegate::meta;
		RequiredRequestPortEnd::meta_dstConnectorToReceptacle.target() = ConnectorInstance::meta;
		RequiredRequestPortEnd::meta_dstinvoke.target() = ProvidedRequestPortEnd::meta;
		RequiredRequestPortEnd::meta.subTypes() += RequiredRequestPortDelegate::meta;
		RequiredRequestPortEnd::meta.subTypes() += RequiredRequestPortInstance::meta;

		RequiredRequestPortInstance::meta_ref.target() = RequiredRequestPort::meta;

		Requirement::meta_srcPackageConfSelectRequirement.target() = PackageConfiguration::meta;
		Requirement::meta_srcArtifactDeployRequirement.target() = ImplementationArtifact::meta;
		Requirement::meta_srcAssemblyselectRequirement.target() = AssemblyConfigPropertyEnd::meta;
		PackageConfigurationContainer::meta_Requirement_children.target() = Requirement::meta;
		ArtifactContainer::meta_Requirement_children.target() = Requirement::meta;
		ComponentAssembly::meta_Requirement_children.target() = Requirement::meta;
		Requirement::meta.subTypes() += RTRequirements::meta;
		Requirement::meta.subTypes() += ECRequirements::meta;

		Property::meta_RequirementBase_parent.target() = RequirementBase::meta;
		RequirementBase::meta.subTypes() += ImplementationRequirement::meta;
		RequirementBase::meta.subTypes() += Requirement::meta;

		SatisfierProperty::meta_RequirementSatisfier_parent.target() = RequirementSatisfier::meta;
		RequirementSatisfier::meta.subTypes() += Resource::meta;
		RequirementSatisfier::meta.subTypes() += SharedResource::meta;
		RequirementSatisfier::meta.subTypes() += Capability::meta;

		Node::meta_Resource_children.target() = Resource::meta;
		Interconnect::meta_Resource_children.target() = Resource::meta;
		Bridge::meta_Resource_children.target() = Resource::meta;

		ReturnType::meta_ref.target() = MemberType::meta;
		TwowayOperation::meta_ReturnType_child.target() = ReturnType::meta;
		Operation::meta_ReturnType_child.target() = ReturnType::meta;

		ComponentFactoryImplementations::meta_RootFolder_parent.target() = RootFolder::meta;
		PathDiagrams::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentAnalyses::meta_RootFolder_parent.target() = RootFolder::meta;
		DeploymentPlans::meta_RootFolder_parent.target() = RootFolder::meta;
		PackageConfigurations::meta_RootFolder_parent.target() = RootFolder::meta;
		ImplementationArtifacts::meta_RootFolder_parent.target() = RootFolder::meta;
		TopLevelPackages::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentPackages::meta_RootFolder_parent.target() = RootFolder::meta;
		Targets::meta_RootFolder_parent.target() = RootFolder::meta;
		PredefinedTypes::meta_RootFolder_parent.target() = RootFolder::meta;
		InterfaceDefinitions::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentBuild::meta_RootFolder_parent.target() = RootFolder::meta;
		WorkerLibraries::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentImplementations::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentTypes::meta_RootFolder_parent.target() = RootFolder::meta;
		ConnectorImplementations::meta_RootFolder_parent.target() = RootFolder::meta;
		RootFolder::meta_RootFolder_parent.target() = RootFolder::meta;
		RootFolder::meta_RootFolder_children.target() = RootFolder::meta;

		DataType::meta_SatisfierProperty_parent.target() = SatisfierProperty::meta;
		RequirementSatisfier::meta_SatisfierProperty_children.target() = SatisfierProperty::meta;

		ComponentAssembly::meta_SendsTo_children.target() = SendsTo::meta;
		SendsTo::meta.association() = OutEventPortEnd::meta_dstSendsTo.parent();
		SendsTo::meta_dstSendsTo_end_ = InEventPortEnd::meta_srcSendsTo_rev = OutEventPortEnd::meta_dstSendsTo;
		SendsTo::meta_srcSendsTo_end_ = OutEventPortEnd::meta_dstSendsTo_rev = InEventPortEnd::meta_srcSendsTo;

		FileRef::meta_ServantProject_parent.target() = ServantProject::meta;
		ImplementationArtifactReference::meta_ServantProject_parent.target() = ServantProject::meta;

		RTRequirements::meta_ServiceConsumer_child.target() = ServiceConsumer::meta;

		ServiceProvider::meta_ServiceLevels_child.target() = ServiceLevels::meta;

		ServiceLevels::meta_ServiceProvider_parent.target() = ServiceProvider::meta;
		MultipleServiceRequests::meta_ServiceProvider_parent.target() = ServiceProvider::meta;
		RTRequirements::meta_ServiceProvider_child.target() = ServiceProvider::meta;

		SetException::meta_ref.target() = ExceptionType::meta;
		Attribute::meta_SetException_children.target() = SetException::meta;

		SharedResource::meta_srcShares.target() = Node::meta;
		Domain::meta_SharedResource_children.target() = SharedResource::meta;

		Domain::meta_Shares_children.target() = Shares::meta;
		Shares::meta.association() = Node::meta_dstShares.parent();
		Shares::meta_dstShares_end_ = SharedResource::meta_srcShares_rev = Node::meta_dstShares;
		Shares::meta_srcShares_end_ = Node::meta_dstShares_rev = SharedResource::meta_srcShares;

		SignedIntegerType::meta.subTypes() += LongLongInteger::meta;
		SignedIntegerType::meta.subTypes() += LongInteger::meta;
		SignedIntegerType::meta.subTypes() += ShortInteger::meta;

		SimpleProperty::meta_ref.target() = MemberType::meta;

		SimpleType::meta_referedbyDataValue.target() = DataValue::meta;
		SimpleType::meta.subTypes() += Enum::meta;
		SimpleType::meta.subTypes() += PredefinedType::meta;

		SingleInputBase::meta_dstInput.target() = InputAction::meta;
		SingleInputBase::meta.subTypes() += InEventPort::meta;
		SingleInputBase::meta.subTypes() += ApplicationTask::meta;
		SingleInputBase::meta.subTypes() += PeriodicEvent::meta;

		SingleOutputBase::meta.subTypes() += OutEventPort::meta;

		Path::meta_SrcEdge_children.target() = SrcEdge::meta;
		SrcEdge::meta.association() = Edge::meta_dstSrcEdge.parent();
		SrcEdge::meta_dstSrcEdge_end_ = GraphVertex::meta_srcSrcEdge_rev = Edge::meta_dstSrcEdge;
		SrcEdge::meta_srcSrcEdge_end_ = Edge::meta_dstSrcEdge_rev = GraphVertex::meta_srcSrcEdge;

		State::meta_dstTransition.target() = ActionBase::meta;
		State::meta_dstTerminalTransition.target() = Terminal::meta;

		StateBase::meta_srcTerminalEffect.target() = Terminal::meta;
		StateBase::meta_dstFinish.target() = BehaviorInputAction::meta;
		StateBase::meta_srcEffect.target() = ActionBase::meta;
		StateBase::meta_srcInputEffect.target() = BehaviorInputAction::meta;
		BehaviorModel::meta_StateBase_children.target() = StateBase::meta;
		StateBase::meta.subTypes() += LoopState::meta;
		StateBase::meta.subTypes() += BranchState::meta;
		StateBase::meta.subTypes() += State::meta;

		StringType::meta.subTypes() += WideString::meta;
		StringType::meta.subTypes() += String::meta;

		FileRef::meta_StubProject_parent.target() = StubProject::meta;
		ImplementationArtifactReference::meta_StubProject_parent.target() = StubProject::meta;

		Supports::meta_ref.target() = ::PICML::Object::meta;
		Supports::meta_referedbySupportsInstance.target() = SupportsInstance::meta;
		SupportsInterfaces::meta_Supports_children.target() = Supports::meta;

		SupportsInstance::meta_ref.target() = Supports::meta;
		ComponentInstance::meta_SupportsInstance_children.target() = SupportsInstance::meta;

		Supports::meta_SupportsInterfaces_parent.target() = SupportsInterfaces::meta;
		SupportsInterfaces::meta.subTypes() += ObjectByValue::meta;
		SupportsInterfaces::meta.subTypes() += Component::meta;
		SupportsInterfaces::meta.subTypes() += ComponentFactory::meta;

		LabelConnection::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Discriminator::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Member::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Label::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;

		Taggable::meta.subTypes() += OperationBase::meta;
		Taggable::meta.subTypes() += ReadonlyAttribute::meta;
		Taggable::meta.subTypes() += NamedType::meta;
		Taggable::meta.subTypes() += Constant::meta;
		Taggable::meta.subTypes() += Exception::meta;
		Taggable::meta.subTypes() += Package::meta;
		Taggable::meta.subTypes() += Port::meta;

		TargetRequiredRequestPort::meta_ref.target() = RequiredRequestPort::meta;
		CallAction::meta_TargetRequiredRequestPort_child.target() = TargetRequiredRequestPort::meta;

		Domain::meta_Targets_parent.target() = Targets::meta;
		RootFolder::meta_Targets_children.target() = Targets::meta;

		Task::meta_setTaskSet.target() = TaskSet::meta;
		Task::meta_srcWorkLoadOperationConnection.target() = OperationRef::meta;
		BenchmarkAnalysis::meta_Task_children.target() = Task::meta;

		TaskSet::meta_members.target() = Task::meta;
		TaskSet::meta_srcWorkloadCharacteristics.target() = MetricsBase::meta;
		BenchmarkAnalysis::meta_TaskSet_children.target() = TaskSet::meta;

		PackageType::meta_TemplatePackageAlias_parent.target() = TemplatePackageAlias::meta;
		TemplateParameterReference::meta_TemplatePackageAlias_parent.target() = TemplatePackageAlias::meta;

		TemplateParameterValue::meta_TemplatePackageInstance_parent.target() = TemplatePackageInstance::meta;
		PackageType::meta_TemplatePackageInstance_parent.target() = TemplatePackageInstance::meta;

		TemplateParameter::meta_referedbyTemplateParameterReference.target() = TemplateParameterReference::meta;
		Package::meta_TemplateParameter_children.target() = TemplateParameter::meta;
		TemplateParameter::meta.subTypes() += TypeParameter::meta;
		TemplateParameter::meta.subTypes() += CollectionParameter::meta;
		TemplateParameter::meta.subTypes() += NameParameter::meta;

		TemplateParameterReference::meta_ref.target() = TemplateParameter::meta;
		TemplatePackageAlias::meta_TemplateParameterReference_children.target() = TemplateParameterReference::meta;

		TemplateParameterValue::meta_ref.target() = TemplateParameterValueType::meta;
		TemplatePackageInstance::meta_TemplateParameterValue_children.target() = TemplateParameterValue::meta;

		TemplateParameterValueType::meta_referedbyTemplateParameterValue.target() = TemplateParameterValue::meta;
		TemplateParameterValueType::meta.subTypes() += MemberType::meta;
		TemplateParameterValueType::meta.subTypes() += Exception::meta;

		Terminal::meta_dstTerminalEffect.target() = StateBase::meta;
		Terminal::meta_srcTerminalTransition.target() = State::meta;
		BehaviorModel::meta_Terminal_children.target() = Terminal::meta;

		BehaviorModel::meta_TerminalEffect_children.target() = TerminalEffect::meta;
		TerminalEffect::meta.association() = Terminal::meta_dstTerminalEffect.parent();
		TerminalEffect::meta_dstTerminalEffect_end_ = StateBase::meta_srcTerminalEffect_rev = Terminal::meta_dstTerminalEffect;
		TerminalEffect::meta_srcTerminalEffect_end_ = Terminal::meta_dstTerminalEffect_rev = StateBase::meta_srcTerminalEffect;

		BehaviorModel::meta_TerminalTransition_children.target() = TerminalTransition::meta;
		TerminalTransition::meta.association() = State::meta_dstTerminalTransition.parent();
		TerminalTransition::meta_dstTerminalTransition_end_ = Terminal::meta_srcTerminalTransition_rev = State::meta_dstTerminalTransition;
		TerminalTransition::meta_srcTerminalTransition_end_ = State::meta_dstTerminalTransition_rev = Terminal::meta_srcTerminalTransition;

		TimeProbe::meta_srcTimerEventSinkConn.target() = EventRef::meta;
		TimeProbe::meta_srcTimerConnection.target() = OperationRef::meta;
		BenchmarkAnalysis::meta_TimeProbe_children.target() = TimeProbe::meta;

		BenchmarkAnalysis::meta_TimerConnection_children.target() = TimerConnection::meta;
		TimerConnection::meta.association() = OperationRef::meta_dstTimerConnection.parent();
		TimerConnection::meta_dstTimerConnection_end_ = TimeProbe::meta_srcTimerConnection_rev = OperationRef::meta_dstTimerConnection;
		TimerConnection::meta_srcTimerConnection_end_ = OperationRef::meta_dstTimerConnection_rev = TimeProbe::meta_srcTimerConnection;

		BenchmarkAnalysis::meta_TimerEventSinkConn_children.target() = TimerEventSinkConn::meta;
		TimerEventSinkConn::meta.association() = EventRef::meta_dstTimerEventSinkConn.parent();
		TimerEventSinkConn::meta_dstTimerEventSinkConn_end_ = TimeProbe::meta_srcTimerEventSinkConn_rev = EventRef::meta_dstTimerEventSinkConn;
		TimerEventSinkConn::meta_srcTimerEventSinkConn_end_ = EventRef::meta_dstTimerEventSinkConn_rev = TimeProbe::meta_srcTimerEventSinkConn;

		WorkerType::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		QueryInput::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		Input::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		MultiInput::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		Environment::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		ApplicationTask::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		PeriodicEvent::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		TopLevelBehavior::meta.subTypes() += Component::meta;

		TopLevelPackage::meta_dstpackage.target() = PackageConfigurationReference::meta;
		TopLevelPackageContainer::meta_TopLevelPackage_child.target() = TopLevelPackage::meta;

		package::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		TopLevelPackage::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		PackageConfigurationReference::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		TopLevelPackages::meta_TopLevelPackageContainer_children.target() = TopLevelPackageContainer::meta;

		TopLevelPackageContainer::meta_TopLevelPackages_parent.target() = TopLevelPackages::meta;
		RootFolder::meta_TopLevelPackages_children.target() = TopLevelPackages::meta;

		BehaviorModel::meta_Transition_children.target() = Transition::meta;
		Transition::meta.association() = State::meta_dstTransition.parent();
		Transition::meta_dstTransition_end_ = ActionBase::meta_srcTransition_rev = State::meta_dstTransition;
		Transition::meta_srcTransition_end_ = State::meta_dstTransition_rev = ActionBase::meta_srcTransition;

		ReturnType::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		OutParameter::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		InoutParameter::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		HasOperations::meta_TwowayOperation_children.target() = TwowayOperation::meta;

		UnsignedIntegerType::meta.subTypes() += UnsignedLongInteger::meta;
		UnsignedIntegerType::meta.subTypes() += UnsignedLongLongInteger::meta;
		UnsignedIntegerType::meta.subTypes() += UnsignedShortInteger::meta;

		Variable::meta_ref.target() = PredefinedType::meta;
		BehaviorModel::meta_Variable_children.target() = Variable::meta;

		BenchmarkAnalysis::meta_WorkLoadOperationConnection_children.target() = WorkLoadOperationConnection::meta;
		WorkLoadOperationConnection::meta.association() = OperationRef::meta_dstWorkLoadOperationConnection.parent();
		WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_ = Task::meta_srcWorkLoadOperationConnection_rev = OperationRef::meta_dstWorkLoadOperationConnection;
		WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_ = OperationRef::meta_dstWorkLoadOperationConnection_rev = Task::meta_srcWorkLoadOperationConnection;

		Worker::meta_referedbyWorkerType.target() = WorkerType::meta;
		Operation::meta_Worker_parent.target() = Worker::meta;
		WorkerPackageBase::meta_Worker_children.target() = Worker::meta;

		WorkerPackage::meta_WorkerFile_parent.target() = WorkerFile::meta;
		WorkerLibrary::meta_WorkerFile_children.target() = WorkerFile::meta;

		WorkerLibrary::meta_WorkerLibraries_parent.target() = WorkerLibraries::meta;
		RootFolder::meta_WorkerLibraries_children.target() = WorkerLibraries::meta;

		WorkerFile::meta_WorkerLibrary_parent.target() = WorkerLibrary::meta;
		WorkerLibraries::meta_WorkerLibrary_children.target() = WorkerLibrary::meta;

		WorkerPackage::meta_WorkerPackage_parent.target() = WorkerPackage::meta;
		WorkerPackage::meta_WorkerPackage_children.target() = WorkerPackage::meta;
		WorkerFile::meta_WorkerPackage_children.target() = WorkerPackage::meta;

		Worker::meta_WorkerPackageBase_parent.target() = WorkerPackageBase::meta;
		WorkerPackageBase::meta.subTypes() += WorkerPackage::meta;
		WorkerPackageBase::meta.subTypes() += WorkerFile::meta;

		WorkerType::meta_ref.target() = Worker::meta;
		TopLevelBehavior::meta_WorkerType_children.target() = WorkerType::meta;

		BenchmarkAnalysis::meta_WorkloadCharacteristics_children.target() = WorkloadCharacteristics::meta;
		WorkloadCharacteristics::meta.association() = MetricsBase::meta_dstWorkloadCharacteristics.parent();
		WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_ = TaskSet::meta_srcWorkloadCharacteristics_rev = MetricsBase::meta_dstWorkloadCharacteristics;
		WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_ = MetricsBase::meta_dstWorkloadCharacteristics_rev = TaskSet::meta_srcWorkloadCharacteristics;

		Workspaces::meta_members.target() = Project::meta;
		MPC::meta_Workspaces_children.target() = Workspaces::meta;

		TopLevelPackageContainer::meta_package_child.target() = package::meta;
		package::meta.association() = TopLevelPackage::meta_dstpackage.parent();
		package::meta_dstpackage_end_ = PackageConfigurationReference::meta_srcpackage_rev = TopLevelPackage::meta_dstpackage;
		package::meta_srcpackage_end_ = TopLevelPackage::meta_dstpackage_rev = PackageConfigurationReference::meta_srcpackage;

	}

	void InitMeta(const ::Uml::Diagram &parent) {
		// classes, with attributes, constraints and constraint definitions
		::Uml::SetClass(Action::meta, parent, "Action");

		::Uml::SetClass(ActionBase::meta, parent, "ActionBase");
		::Uml::SetAttribute(ActionBase::meta_Duration, ActionBase::meta, "Duration");

		::Uml::SetClass(ActionType::meta, parent, "ActionType");

		::Uml::SetClass(Aggregate::meta, parent, "Aggregate");

		::Uml::SetClass(Alias::meta, parent, "Alias");

		::Uml::SetClass(ApplicationTask::meta, parent, "ApplicationTask");

		::Uml::SetClass(ArrayMember::meta, parent, "ArrayMember");
		::Uml::SetAttribute(ArrayMember::meta_Size, ArrayMember::meta, "Size");

		::Uml::SetClass(ArtifactContainer::meta, parent, "ArtifactContainer");

		::Uml::SetClass(ArtifactDependency::meta, parent, "ArtifactDependency");

		::Uml::SetClass(ArtifactDependsOn::meta, parent, "ArtifactDependsOn");

		::Uml::SetClass(ArtifactDeployRequirement::meta, parent, "ArtifactDeployRequirement");

		::Uml::SetClass(ArtifactExecParameter::meta, parent, "ArtifactExecParameter");

		::Uml::SetClass(ArtifactInfoProperty::meta, parent, "ArtifactInfoProperty");

		::Uml::SetClass(AssemblyConfigProperty::meta, parent, "AssemblyConfigProperty");

		::Uml::SetClass(AssemblyConfigPropertyEnd::meta, parent, "AssemblyConfigPropertyEnd");

		::Uml::SetClass(AssemblyselectRequirement::meta, parent, "AssemblyselectRequirement");

		::Uml::SetClass(Attribute::meta, parent, "Attribute");

		::Uml::SetClass(AttributeDelegate::meta, parent, "AttributeDelegate");

		::Uml::SetClass(AttributeInstance::meta, parent, "AttributeInstance");

		::Uml::SetClass(AttributeMapping::meta, parent, "AttributeMapping");

		::Uml::SetClass(AttributeMappingDelegate::meta, parent, "AttributeMappingDelegate");

		::Uml::SetClass(AttributeMappingValue::meta, parent, "AttributeMappingValue");

		::Uml::SetClass(AttributeMember::meta, parent, "AttributeMember");

		::Uml::SetClass(AttributeValue::meta, parent, "AttributeValue");

		::Uml::SetClass(Average::meta, parent, "Average");

		::Uml::SetClass(BehaviorInputAction::meta, parent, "BehaviorInputAction");

		::Uml::SetClass(BehaviorModel::meta, parent, "BehaviorModel");

		::Uml::SetClass(BenchmarkAnalysis::meta, parent, "BenchmarkAnalysis");

		::Uml::SetClass(BenchmarkCharacteristics::meta, parent, "BenchmarkCharacteristics");

		::Uml::SetClass(BenchmarkType::meta, parent, "BenchmarkType");

		::Uml::SetClass(Boolean::meta, parent, "Boolean");

		::Uml::SetClass(Boxed::meta, parent, "Boxed");

		::Uml::SetClass(BranchState::meta, parent, "BranchState");

		::Uml::SetClass(BranchTransition::meta, parent, "BranchTransition");
		::Uml::SetAttribute(BranchTransition::meta_Condition, BranchTransition::meta, "Condition");

		::Uml::SetClass(Bridge::meta, parent, "Bridge");
		::Uml::SetAttribute(Bridge::meta_label, Bridge::meta, "label");

		::Uml::SetClass(BridgeConnection::meta, parent, "BridgeConnection");

		::Uml::SetClass(Byte::meta, parent, "Byte");

		::Uml::SetClass(CallAction::meta, parent, "CallAction");

		::Uml::SetClass(Capability::meta, parent, "Capability");

		::Uml::SetClass(Char::meta, parent, "Char");

		::Uml::SetClass(CharType::meta, parent, "CharType");

		::Uml::SetClass(Collection::meta, parent, "Collection");
		::Uml::SetAttribute(Collection::meta_bound, Collection::meta, "bound");

		::Uml::SetClass(CollectionParameter::meta, parent, "CollectionParameter");

		::Uml::SetClass(CollocationGroup::meta, parent, "CollocationGroup");

		::Uml::SetClass(CollocationGroupMember::meta, parent, "CollocationGroupMember");

		::Uml::SetClass(CollocationGroupProperty::meta, parent, "CollocationGroupProperty");

		::Uml::SetClass(CommonPortAttrs::meta, parent, "CommonPortAttrs");
		::Uml::SetAttribute(CommonPortAttrs::meta_optional, CommonPortAttrs::meta, "optional");
		::Uml::SetAttribute(CommonPortAttrs::meta_exclusiveUser, CommonPortAttrs::meta, "exclusiveUser");
		::Uml::SetAttribute(CommonPortAttrs::meta_exclusiveProvider, CommonPortAttrs::meta, "exclusiveProvider");

		::Uml::SetClass(CompRef::meta, parent, "CompRef");

		::Uml::SetClass(ComplexProperty::meta, parent, "ComplexProperty");

		::Uml::SetClass(ComplexType::meta, parent, "ComplexType");

		::Uml::SetClass(ComplexTypeReference::meta, parent, "ComplexTypeReference");

		::Uml::SetClass(Component::meta, parent, "Component");
		::Uml::SetAttribute(Component::meta_label, Component::meta, "label");
		::Uml::SetAttribute(Component::meta_UUID, Component::meta, "UUID");

		::Uml::SetClass(ComponentAnalyses::meta, parent, "ComponentAnalyses");
		::Uml::SetAttribute(ComponentAnalyses::meta_name, ComponentAnalyses::meta, "name");

		::Uml::SetClass(ComponentAssembly::meta, parent, "ComponentAssembly");

		::Uml::SetClass(ComponentAssemblyReference::meta, parent, "ComponentAssemblyReference");

		::Uml::SetClass(ComponentBuild::meta, parent, "ComponentBuild");
		::Uml::SetAttribute(ComponentBuild::meta_name, ComponentBuild::meta, "name");

		::Uml::SetClass(ComponentConfigProperty::meta, parent, "ComponentConfigProperty");

		::Uml::SetClass(ComponentContainer::meta, parent, "ComponentContainer");

		::Uml::SetClass(ComponentFactory::meta, parent, "ComponentFactory");

		::Uml::SetClass(ComponentFactoryImplementationContainer::meta, parent, "ComponentFactoryImplementationContainer");

		::Uml::SetClass(ComponentFactoryImplementations::meta, parent, "ComponentFactoryImplementations");
		::Uml::SetAttribute(ComponentFactoryImplementations::meta_name, ComponentFactoryImplementations::meta, "name");

		::Uml::SetClass(ComponentFactoryInstance::meta, parent, "ComponentFactoryInstance");

		::Uml::SetClass(ComponentFactoryRef::meta, parent, "ComponentFactoryRef");

		::Uml::SetClass(ComponentImplementation::meta, parent, "ComponentImplementation");

		::Uml::SetClass(ComponentImplementationArtifact::meta, parent, "ComponentImplementationArtifact");
		::Uml::SetAttribute(ComponentImplementationArtifact::meta_EntryPoint, ComponentImplementationArtifact::meta, "EntryPoint");

		::Uml::SetClass(ComponentImplementationContainer::meta, parent, "ComponentImplementationContainer");

		::Uml::SetClass(ComponentImplementationReference::meta, parent, "ComponentImplementationReference");

		::Uml::SetClass(ComponentImplementations::meta, parent, "ComponentImplementations");
		::Uml::SetAttribute(ComponentImplementations::meta_name, ComponentImplementations::meta, "name");

		::Uml::SetClass(ComponentInfoProperty::meta, parent, "ComponentInfoProperty");

		::Uml::SetClass(ComponentInherits::meta, parent, "ComponentInherits");

		::Uml::SetClass(ComponentInstance::meta, parent, "ComponentInstance");
		::Uml::SetAttribute(ComponentInstance::meta_UUID, ComponentInstance::meta, "UUID");

		::Uml::SetClass(ComponentInstanceRef::meta, parent, "ComponentInstanceRef");

		::Uml::SetClass(ComponentInstanceType::meta, parent, "ComponentInstanceType");

		::Uml::SetClass(ComponentLib::meta, parent, "ComponentLib");
		::Uml::SetAttribute(ComponentLib::meta_libraryexport, ComponentLib::meta, "libraryexport");
		::Uml::SetAttribute(ComponentLib::meta_sharedname, ComponentLib::meta, "sharedname");
		::Uml::SetAttribute(ComponentLib::meta_ORBServices, ComponentLib::meta, "ORBServices");

		::Uml::SetClass(ComponentOperation::meta, parent, "ComponentOperation");

		::Uml::SetClass(ComponentPackage::meta, parent, "ComponentPackage");
		::Uml::SetAttribute(ComponentPackage::meta_label, ComponentPackage::meta, "label");
		::Uml::SetAttribute(ComponentPackage::meta_UUID, ComponentPackage::meta, "UUID");

		::Uml::SetClass(ComponentPackageReference::meta, parent, "ComponentPackageReference");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredUUID, ComponentPackageReference::meta, "requiredUUID");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredName, ComponentPackageReference::meta, "requiredName");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredType, ComponentPackageReference::meta, "requiredType");

		::Uml::SetClass(ComponentPackages::meta, parent, "ComponentPackages");
		::Uml::SetAttribute(ComponentPackages::meta_name, ComponentPackages::meta, "name");

		::Uml::SetClass(ComponentProperty::meta, parent, "ComponentProperty");

		::Uml::SetClass(ComponentPropertyDescription::meta, parent, "ComponentPropertyDescription");

		::Uml::SetClass(ComponentRef::meta, parent, "ComponentRef");

		::Uml::SetClass(ComponentServantArtifact::meta, parent, "ComponentServantArtifact");
		::Uml::SetAttribute(ComponentServantArtifact::meta_EntryPoint, ComponentServantArtifact::meta, "EntryPoint");

		::Uml::SetClass(ComponentTypes::meta, parent, "ComponentTypes");
		::Uml::SetAttribute(ComponentTypes::meta_name, ComponentTypes::meta, "name");

		::Uml::SetClass(ConfigProperty::meta, parent, "ConfigProperty");

		::Uml::SetClass(ConnectedComponent::meta, parent, "ConnectedComponent");

		::Uml::SetClass(ConnectorImplementation::meta, parent, "ConnectorImplementation");

		::Uml::SetClass(ConnectorImplementationContainer::meta, parent, "ConnectorImplementationContainer");

		::Uml::SetClass(ConnectorImplementationType::meta, parent, "ConnectorImplementationType");

		::Uml::SetClass(ConnectorImplementations::meta, parent, "ConnectorImplementations");
		::Uml::SetAttribute(ConnectorImplementations::meta_name, ConnectorImplementations::meta, "name");

		::Uml::SetClass(ConnectorImplements::meta, parent, "ConnectorImplements");

		::Uml::SetClass(ConnectorInherits::meta, parent, "ConnectorInherits");

		::Uml::SetClass(ConnectorInstance::meta, parent, "ConnectorInstance");
		::Uml::SetAttribute(ConnectorInstance::meta_UUID, ConnectorInstance::meta, "UUID");

		::Uml::SetClass(ConnectorObject::meta, parent, "ConnectorObject");
		::Uml::SetAttribute(ConnectorObject::meta_UUID, ConnectorObject::meta, "UUID");

		::Uml::SetClass(ConnectorToFacet::meta, parent, "ConnectorToFacet");
		::Uml::SetAttribute(ConnectorToFacet::meta_InnerName, ConnectorToFacet::meta, "InnerName");

		::Uml::SetClass(ConnectorToReceptacle::meta, parent, "ConnectorToReceptacle");
		::Uml::SetAttribute(ConnectorToReceptacle::meta_InnerName, ConnectorToReceptacle::meta, "InnerName");

		::Uml::SetClass(ConnectorType::meta, parent, "ConnectorType");

		::Uml::SetClass(Constant::meta, parent, "Constant");
		::Uml::SetAttribute(Constant::meta_value, Constant::meta, "value");

		::Uml::SetClass(ConstantType::meta, parent, "ConstantType");

		::Uml::SetClass(Consume::meta, parent, "Consume");

		::Uml::SetClass(CriticalPath::meta, parent, "CriticalPath");

		::Uml::SetClass(DataAnalysisBase::meta, parent, "DataAnalysisBase");

		::Uml::SetClass(DataType::meta, parent, "DataType");

		::Uml::SetClass(DataValue::meta, parent, "DataValue");
		::Uml::SetAttribute(DataValue::meta_Value, DataValue::meta, "Value");

		::Uml::SetClass(DataValueBase::meta, parent, "DataValueBase");

		::Uml::SetClass(DataValueContainer::meta, parent, "DataValueContainer");

		::Uml::SetClass(DeploymentPlan::meta, parent, "DeploymentPlan");
		::Uml::SetAttribute(DeploymentPlan::meta_label, DeploymentPlan::meta, "label");
		::Uml::SetAttribute(DeploymentPlan::meta_UUID, DeploymentPlan::meta, "UUID");

		::Uml::SetClass(DeploymentPlans::meta, parent, "DeploymentPlans");
		::Uml::SetAttribute(DeploymentPlans::meta_name, DeploymentPlans::meta, "name");

		::Uml::SetClass(Deploys::meta, parent, "Deploys");

		::Uml::SetClass(Discriminator::meta, parent, "Discriminator");

		::Uml::SetClass(DisplayNode::meta, parent, "DisplayNode");

		::Uml::SetClass(DoWhileState::meta, parent, "DoWhileState");

		::Uml::SetClass(Domain::meta, parent, "Domain");
		::Uml::SetAttribute(Domain::meta_UUID, Domain::meta, "UUID");
		::Uml::SetAttribute(Domain::meta_label, Domain::meta, "label");

		::Uml::SetClass(DoubleNumber::meta, parent, "DoubleNumber");

		::Uml::SetClass(DstEdge::meta, parent, "DstEdge");

		::Uml::SetClass(ECBehavior::meta, parent, "ECBehavior");
		::Uml::SetAttribute(ECBehavior::meta_SupplierBasedFiltering, ECBehavior::meta, "SupplierBasedFiltering");
		::Uml::SetAttribute(ECBehavior::meta_ConsumerBasedFiltering, ECBehavior::meta, "ConsumerBasedFiltering");
		::Uml::SetAttribute(ECBehavior::meta_DisconnectDanglingConnections, ECBehavior::meta, "DisconnectDanglingConnections");
		::Uml::SetAttribute(ECBehavior::meta_MultithreadedConsumer, ECBehavior::meta, "MultithreadedConsumer");
		::Uml::SetAttribute(ECBehavior::meta_DispatchingMultithreadingLevel, ECBehavior::meta, "DispatchingMultithreadingLevel");
		::Uml::SetAttribute(ECBehavior::meta_MultithreadedSupplier, ECBehavior::meta, "MultithreadedSupplier");

		::Uml::SetClass(ECRequirements::meta, parent, "ECRequirements");
		::Uml::SetAttribute(ECRequirements::meta_ConfigureRTQoS, ECRequirements::meta, "ConfigureRTQoS");

		::Uml::SetClass(ECRole::meta, parent, "ECRole");
		::Uml::SetAttribute(ECRole::meta_ECFilterType, ECRole::meta, "ECFilterType");
		::Uml::SetAttribute(ECRole::meta_rolekind, ECRole::meta, "rolekind");

		::Uml::SetClass(Edge::meta, parent, "Edge");

		::Uml::SetClass(EdgeProperty::meta, parent, "EdgeProperty");

		::Uml::SetClass(Effect::meta, parent, "Effect");

		::Uml::SetClass(EffectBase::meta, parent, "EffectBase");
		::Uml::SetAttribute(EffectBase::meta_Postcondition, EffectBase::meta, "Postcondition");

		::Uml::SetClass(Enum::meta, parent, "Enum");

		::Uml::SetClass(EnumValue::meta, parent, "EnumValue");

		::Uml::SetClass(Environment::meta, parent, "Environment");

		::Uml::SetClass(Event::meta, parent, "Event");

		::Uml::SetClass(EventPort::meta, parent, "EventPort");

		::Uml::SetClass(EventRef::meta, parent, "EventRef");

		::Uml::SetClass(EventSinkDelegate::meta, parent, "EventSinkDelegate");

		::Uml::SetClass(EventSourceDelegate::meta, parent, "EventSourceDelegate");

		::Uml::SetClass(EventType::meta, parent, "EventType");

		::Uml::SetClass(Exception::meta, parent, "Exception");

		::Uml::SetClass(ExceptionRef::meta, parent, "ExceptionRef");

		::Uml::SetClass(ExceptionType::meta, parent, "ExceptionType");

		::Uml::SetClass(ExecutorProject::meta, parent, "ExecutorProject");

		::Uml::SetClass(ExtResourceConn::meta, parent, "ExtResourceConn");

		::Uml::SetClass(ExtendPortEnd::meta, parent, "ExtendPortEnd");

		::Uml::SetClass(ExtendedDelegate::meta, parent, "ExtendedDelegate");

		::Uml::SetClass(ExtendedPort::meta, parent, "ExtendedPort");

		::Uml::SetClass(ExtendedPortBase::meta, parent, "ExtendedPortBase");

		::Uml::SetClass(ExtendedPortDelegate::meta, parent, "ExtendedPortDelegate");

		::Uml::SetClass(ExtendedPortInstance::meta, parent, "ExtendedPortInstance");

		::Uml::SetClass(ExtendedPortInstanceBase::meta, parent, "ExtendedPortInstanceBase");

		::Uml::SetClass(ExternalDelegate::meta, parent, "ExternalDelegate");

		::Uml::SetClass(ExternalPort::meta, parent, "ExternalPort");
		::Uml::SetAttribute(ExternalPort::meta_location, ExternalPort::meta, "location");

		::Uml::SetClass(ExternalPortEnd::meta, parent, "ExternalPortEnd");

		::Uml::SetClass(ExternalResources::meta, parent, "ExternalResources");

		::Uml::SetClass(FacetDelegate::meta, parent, "FacetDelegate");

		::Uml::SetClass(FactoryOperation::meta, parent, "FactoryOperation");

		::Uml::SetClass(File::meta, parent, "File");
		::Uml::SetAttribute(File::meta_Path, File::meta, "Path");

		::Uml::SetClass(FileRef::meta, parent, "FileRef");

		::Uml::SetClass(Finish::meta, parent, "Finish");

		::Uml::SetClass(FixedIterationBenchmarks::meta, parent, "FixedIterationBenchmarks");
		::Uml::SetAttribute(FixedIterationBenchmarks::meta_benchmarkIterations, FixedIterationBenchmarks::meta, "benchmarkIterations");

		::Uml::SetClass(FloatNumber::meta, parent, "FloatNumber");

		::Uml::SetClass(FloatingPointType::meta, parent, "FloatingPointType");

		::Uml::SetClass(ForState::meta, parent, "ForState");
		::Uml::SetAttribute(ForState::meta_InitialCondition, ForState::meta, "InitialCondition");
		::Uml::SetAttribute(ForState::meta_IncrementExpr, ForState::meta, "IncrementExpr");

		::Uml::SetClass(GenericObject::meta, parent, "GenericObject");

		::Uml::SetClass(GenericValue::meta, parent, "GenericValue");

		::Uml::SetClass(GenericValueObject::meta, parent, "GenericValueObject");

		::Uml::SetClass(GetException::meta, parent, "GetException");

		::Uml::SetClass(GraphVertex::meta, parent, "GraphVertex");

		::Uml::SetClass(HasExceptions::meta, parent, "HasExceptions");

		::Uml::SetClass(HasOperations::meta, parent, "HasOperations");

		::Uml::SetClass(Implemenation::meta, parent, "Implemenation");
		::Uml::SetAttribute(Implemenation::meta_label, Implemenation::meta, "label");
		::Uml::SetAttribute(Implemenation::meta_UUID, Implemenation::meta, "UUID");

		::Uml::SetClass(Implementation::meta, parent, "Implementation");

		::Uml::SetClass(ImplementationArtifact::meta, parent, "ImplementationArtifact");
		::Uml::SetAttribute(ImplementationArtifact::meta_operatingSystem, ImplementationArtifact::meta, "operatingSystem");
		::Uml::SetAttribute(ImplementationArtifact::meta_configuration, ImplementationArtifact::meta, "configuration");
		::Uml::SetAttribute(ImplementationArtifact::meta_artifactVersion, ImplementationArtifact::meta, "artifactVersion");
		::Uml::SetAttribute(ImplementationArtifact::meta_architecture, ImplementationArtifact::meta, "architecture");
		::Uml::SetAttribute(ImplementationArtifact::meta_label, ImplementationArtifact::meta, "label");
		::Uml::SetAttribute(ImplementationArtifact::meta_UUID, ImplementationArtifact::meta, "UUID");
		::Uml::SetAttribute(ImplementationArtifact::meta_location, ImplementationArtifact::meta, "location");

		::Uml::SetClass(ImplementationArtifactReference::meta, parent, "ImplementationArtifactReference");

		::Uml::SetClass(ImplementationArtifacts::meta, parent, "ImplementationArtifacts");
		::Uml::SetAttribute(ImplementationArtifacts::meta_name, ImplementationArtifacts::meta, "name");

		::Uml::SetClass(ImplementationCapability::meta, parent, "ImplementationCapability");

		::Uml::SetClass(ImplementationContainer::meta, parent, "ImplementationContainer");

		::Uml::SetClass(ImplementationDependency::meta, parent, "ImplementationDependency");
		::Uml::SetAttribute(ImplementationDependency::meta_requiredType, ImplementationDependency::meta, "requiredType");

		::Uml::SetClass(ImplementationDependsOn::meta, parent, "ImplementationDependsOn");

		::Uml::SetClass(ImplementationRequirement::meta, parent, "ImplementationRequirement");
		::Uml::SetAttribute(ImplementationRequirement::meta_componentPort, ImplementationRequirement::meta, "componentPort");
		::Uml::SetAttribute(ImplementationRequirement::meta_ResourceUsageKind, ImplementationRequirement::meta, "ResourceUsageKind");
		::Uml::SetAttribute(ImplementationRequirement::meta_resourcePort, ImplementationRequirement::meta, "resourcePort");

		::Uml::SetClass(Implements::meta, parent, "Implements");

		::Uml::SetClass(InEventPort::meta, parent, "InEventPort");

		::Uml::SetClass(InEventPortDelegate::meta, parent, "InEventPortDelegate");

		::Uml::SetClass(InEventPortEnd::meta, parent, "InEventPortEnd");

		::Uml::SetClass(InEventPortInstance::meta, parent, "InEventPortInstance");

		::Uml::SetClass(InParameter::meta, parent, "InParameter");

		::Uml::SetClass(InfoProperty::meta, parent, "InfoProperty");

		::Uml::SetClass(Inheritable::meta, parent, "Inheritable");

		::Uml::SetClass(Inherits::meta, parent, "Inherits");

		::Uml::SetClass(InoutParameter::meta, parent, "InoutParameter");

		::Uml::SetClass(Input::meta, parent, "Input");

		::Uml::SetClass(InputAction::meta, parent, "InputAction");

		::Uml::SetClass(InputEffect::meta, parent, "InputEffect");

		::Uml::SetClass(InstanceMapping::meta, parent, "InstanceMapping");

		::Uml::SetClass(IntegerType::meta, parent, "IntegerType");

		::Uml::SetClass(Interconnect::meta, parent, "Interconnect");
		::Uml::SetAttribute(Interconnect::meta_label, Interconnect::meta, "label");

		::Uml::SetClass(InterconnectConnection::meta, parent, "InterconnectConnection");

		::Uml::SetClass(InterfaceDefinitions::meta, parent, "InterfaceDefinitions");
		::Uml::SetAttribute(InterfaceDefinitions::meta_name, InterfaceDefinitions::meta, "name");

		::Uml::SetClass(Invoke::meta, parent, "Invoke");

		::Uml::SetClass(Jitter::meta, parent, "Jitter");

		::Uml::SetClass(Key::meta, parent, "Key");

		::Uml::SetClass(KeyMember::meta, parent, "KeyMember");

		::Uml::SetClass(Label::meta, parent, "Label");

		::Uml::SetClass(LabelConnection::meta, parent, "LabelConnection");

		::Uml::SetClass(Latency::meta, parent, "Latency");

		::Uml::SetClass(LongDoubleNumber::meta, parent, "LongDoubleNumber");

		::Uml::SetClass(LongInteger::meta, parent, "LongInteger");

		::Uml::SetClass(LongLongInteger::meta, parent, "LongLongInteger");

		::Uml::SetClass(LookupKey::meta, parent, "LookupKey");

		::Uml::SetClass(LookupKeyType::meta, parent, "LookupKeyType");

		::Uml::SetClass(LookupOperation::meta, parent, "LookupOperation");

		::Uml::SetClass(LoopState::meta, parent, "LoopState");
		::Uml::SetAttribute(LoopState::meta_LoopingCondition, LoopState::meta, "LoopingCondition");

		::Uml::SetClass(LoopTransition::meta, parent, "LoopTransition");

		::Uml::SetClass(MPC::meta, parent, "MPC");

		::Uml::SetClass(MakeMemberPrivate::meta, parent, "MakeMemberPrivate");

		::Uml::SetClass(Manageable::meta, parent, "Manageable");

		::Uml::SetClass(ManagesComponent::meta, parent, "ManagesComponent");

		::Uml::SetClass(Maximum::meta, parent, "Maximum");

		::Uml::SetClass(Member::meta, parent, "Member");

		::Uml::SetClass(MemberType::meta, parent, "MemberType");

		::Uml::SetClass(MetricConnection::meta, parent, "MetricConnection");

		::Uml::SetClass(MetricsBase::meta, parent, "MetricsBase");
		::Uml::SetAttribute(MetricsBase::meta_fileName, MetricsBase::meta, "fileName");
		::Uml::SetAttribute(MetricsBase::meta_warmup, MetricsBase::meta, "warmup");
		::Uml::SetAttribute(MetricsBase::meta_iterations, MetricsBase::meta, "iterations");
		::Uml::SetAttribute(MetricsBase::meta_priority, MetricsBase::meta, "priority");
		::Uml::SetAttribute(MetricsBase::meta_rate, MetricsBase::meta, "rate");
		::Uml::SetAttribute(MetricsBase::meta_resolution, MetricsBase::meta, "resolution");

		::Uml::SetClass(MgaObject::meta, parent, "MgaObject");
		::Uml::SetAttribute(MgaObject::meta_name, MgaObject::meta, "name");
		::Uml::SetAttribute(MgaObject::meta_position, MgaObject::meta, "position");

		::Uml::SetClass(Minimum::meta, parent, "Minimum");

		::Uml::SetClass(MirrorDelegate::meta, parent, "MirrorDelegate");

		::Uml::SetClass(MirrorPort::meta, parent, "MirrorPort");

		::Uml::SetClass(MirrorPortDelegate::meta, parent, "MirrorPortDelegate");

		::Uml::SetClass(MirrorPortInstance::meta, parent, "MirrorPortInstance");

		::Uml::SetClass(MirrorPortInstanceBase::meta, parent, "MirrorPortInstanceBase");

		::Uml::SetClass(MonolithDeployRequirement::meta, parent, "MonolithDeployRequirement");

		::Uml::SetClass(MonolithExecParameter::meta, parent, "MonolithExecParameter");

		::Uml::SetClass(MonolithicImplementation::meta, parent, "MonolithicImplementation");
		::Uml::SetAttribute(MonolithicImplementation::meta_defaultVersion, MonolithicImplementation::meta, "defaultVersion");

		::Uml::SetClass(MonolithicImplementationBase::meta, parent, "MonolithicImplementationBase");

		::Uml::SetClass(MonolithprimaryArtifact::meta, parent, "MonolithprimaryArtifact");

		::Uml::SetClass(MultiInput::meta, parent, "MultiInput");

		::Uml::SetClass(MultiInputAction::meta, parent, "MultiInputAction");

		::Uml::SetClass(MultiInputBase::meta, parent, "MultiInputBase");

		::Uml::SetClass(MultiOutputBase::meta, parent, "MultiOutputBase");

		::Uml::SetClass(MultipleServiceRequests::meta, parent, "MultipleServiceRequests");
		::Uml::SetAttribute(MultipleServiceRequests::meta_minimum_simultaneous_service_level, MultipleServiceRequests::meta, "minimum_simultaneous_service_level");
		::Uml::SetAttribute(MultipleServiceRequests::meta_simultaneous_service_execution, MultipleServiceRequests::meta, "simultaneous_service_execution");
		::Uml::SetAttribute(MultipleServiceRequests::meta_buffer_service_requests, MultipleServiceRequests::meta, "buffer_service_requests");
		::Uml::SetAttribute(MultipleServiceRequests::meta_maximum_simultaneous_service_level, MultipleServiceRequests::meta, "maximum_simultaneous_service_level");

		::Uml::SetClass(NameParameter::meta, parent, "NameParameter");

		::Uml::SetClass(NamedType::meta, parent, "NamedType");

		::Uml::SetClass(NativeValue::meta, parent, "NativeValue");

		::Uml::SetClass(NoInheritable::meta, parent, "NoInheritable");

		::Uml::SetClass(Node::meta, parent, "Node");
		::Uml::SetAttribute(Node::meta_label, Node::meta, "label");
		::Uml::SetAttribute(Node::meta_operatingSystem, Node::meta, "operatingSystem");
		::Uml::SetAttribute(Node::meta_architecture, Node::meta, "architecture");

		::Uml::SetClass(NodeReference::meta, parent, "NodeReference");

		::Uml::SetClass(Object::meta, parent, "Object");
		::Uml::SetAttribute(Object::meta_InterfaceSemantics, Object::meta, "InterfaceSemantics");
		::Uml::SetAttribute(Object::meta_SupportsAsync, Object::meta, "SupportsAsync");

		::Uml::SetClass(ObjectByValue::meta, parent, "ObjectByValue");
		::Uml::SetAttribute(ObjectByValue::meta_abstract, ObjectByValue::meta, "abstract");

		::Uml::SetClass(ObjectPort::meta, parent, "ObjectPort");

		::Uml::SetClass(OnewayOperation::meta, parent, "OnewayOperation");

		::Uml::SetClass(Operation::meta, parent, "Operation");

		::Uml::SetClass(OperationBase::meta, parent, "OperationBase");

		::Uml::SetClass(OperationRef::meta, parent, "OperationRef");

		::Uml::SetClass(OutEventPort::meta, parent, "OutEventPort");
		::Uml::SetAttribute(OutEventPort::meta_single_destination, OutEventPort::meta, "single_destination");
		::Uml::SetAttribute(OutEventPort::meta_out_event_port_type, OutEventPort::meta, "out_event_port_type");

		::Uml::SetClass(OutEventPortDelegate::meta, parent, "OutEventPortDelegate");

		::Uml::SetClass(OutEventPortEnd::meta, parent, "OutEventPortEnd");

		::Uml::SetClass(OutEventPortInstance::meta, parent, "OutEventPortInstance");

		::Uml::SetClass(OutParameter::meta, parent, "OutParameter");

		::Uml::SetClass(OutputAction::meta, parent, "OutputAction");

		::Uml::SetClass(Package::meta, parent, "Package");

		::Uml::SetClass(PackageConfBasePackage::meta, parent, "PackageConfBasePackage");

		::Uml::SetClass(PackageConfConfigProperty::meta, parent, "PackageConfConfigProperty");

		::Uml::SetClass(PackageConfReference::meta, parent, "PackageConfReference");

		::Uml::SetClass(PackageConfSelectRequirement::meta, parent, "PackageConfSelectRequirement");

		::Uml::SetClass(PackageConfSpecializedConfig::meta, parent, "PackageConfSpecializedConfig");

		::Uml::SetClass(PackageConfigProperty::meta, parent, "PackageConfigProperty");

		::Uml::SetClass(PackageConfiguration::meta, parent, "PackageConfiguration");
		::Uml::SetAttribute(PackageConfiguration::meta_label, PackageConfiguration::meta, "label");
		::Uml::SetAttribute(PackageConfiguration::meta_UUID, PackageConfiguration::meta, "UUID");

		::Uml::SetClass(PackageConfigurationContainer::meta, parent, "PackageConfigurationContainer");

		::Uml::SetClass(PackageConfigurationReference::meta, parent, "PackageConfigurationReference");

		::Uml::SetClass(PackageConfigurations::meta, parent, "PackageConfigurations");
		::Uml::SetAttribute(PackageConfigurations::meta_name, PackageConfigurations::meta, "name");

		::Uml::SetClass(PackageContainer::meta, parent, "PackageContainer");

		::Uml::SetClass(PackageInfoProperty::meta, parent, "PackageInfoProperty");

		::Uml::SetClass(PackageInterface::meta, parent, "PackageInterface");

		::Uml::SetClass(PackageType::meta, parent, "PackageType");

		::Uml::SetClass(ParameterType::meta, parent, "ParameterType");

		::Uml::SetClass(Path::meta, parent, "Path");

		::Uml::SetClass(PathDiagrams::meta, parent, "PathDiagrams");
		::Uml::SetAttribute(PathDiagrams::meta_name, PathDiagrams::meta, "name");

		::Uml::SetClass(PathProperty::meta, parent, "PathProperty");

		::Uml::SetClass(PathReference::meta, parent, "PathReference");

		::Uml::SetClass(Paths::meta, parent, "Paths");

		::Uml::SetClass(PeriodicBenchmarks::meta, parent, "PeriodicBenchmarks");
		::Uml::SetAttribute(PeriodicBenchmarks::meta_timeperiod, PeriodicBenchmarks::meta, "timeperiod");

		::Uml::SetClass(PeriodicEvent::meta, parent, "PeriodicEvent");
		::Uml::SetAttribute(PeriodicEvent::meta_Hertz, PeriodicEvent::meta, "Hertz");
		::Uml::SetAttribute(PeriodicEvent::meta_Distribution, PeriodicEvent::meta, "Distribution");

		::Uml::SetClass(Port::meta, parent, "Port");

		::Uml::SetClass(PortInstance::meta, parent, "PortInstance");

		::Uml::SetClass(PortType::meta, parent, "PortType");

		::Uml::SetClass(PredefinedType::meta, parent, "PredefinedType");

		::Uml::SetClass(PredefinedTypes::meta, parent, "PredefinedTypes");
		::Uml::SetAttribute(PredefinedTypes::meta_name, PredefinedTypes::meta, "name");

		::Uml::SetClass(Prefixable::meta, parent, "Prefixable");
		::Uml::SetAttribute(Prefixable::meta_PrefixTag, Prefixable::meta, "PrefixTag");

		::Uml::SetClass(PrivateFlag::meta, parent, "PrivateFlag");

		::Uml::SetClass(Project::meta, parent, "Project");

		::Uml::SetClass(Property::meta, parent, "Property");

		::Uml::SetClass(PropertyMapping::meta, parent, "PropertyMapping");

		::Uml::SetClass(Provideable::meta, parent, "Provideable");

		::Uml::SetClass(ProvidedRequestPort::meta, parent, "ProvidedRequestPort");

		::Uml::SetClass(ProvidedRequestPortDelegate::meta, parent, "ProvidedRequestPortDelegate");

		::Uml::SetClass(ProvidedRequestPortEnd::meta, parent, "ProvidedRequestPortEnd");

		::Uml::SetClass(ProvidedRequestPortInstance::meta, parent, "ProvidedRequestPortInstance");

		::Uml::SetClass(Publish::meta, parent, "Publish");

		::Uml::SetClass(QueryAction::meta, parent, "QueryAction");

		::Uml::SetClass(QueryInput::meta, parent, "QueryInput");

		::Uml::SetClass(QueryInputAction::meta, parent, "QueryInputAction");

		::Uml::SetClass(QueryInputBase::meta, parent, "QueryInputBase");

		::Uml::SetClass(RTRequirements::meta, parent, "RTRequirements");

		::Uml::SetClass(ReadonlyAttribute::meta, parent, "ReadonlyAttribute");

		::Uml::SetClass(ReceptacleDelegate::meta, parent, "ReceptacleDelegate");

		::Uml::SetClass(RequestAction::meta, parent, "RequestAction");
		::Uml::SetAttribute(RequestAction::meta_MethodName, RequestAction::meta, "MethodName");

		::Uml::SetClass(RequiredRequestPort::meta, parent, "RequiredRequestPort");
		::Uml::SetAttribute(RequiredRequestPort::meta_multiple_connections, RequiredRequestPort::meta, "multiple_connections");
		::Uml::SetAttribute(RequiredRequestPort::meta_AsyncCommunication, RequiredRequestPort::meta, "AsyncCommunication");

		::Uml::SetClass(RequiredRequestPortDelegate::meta, parent, "RequiredRequestPortDelegate");

		::Uml::SetClass(RequiredRequestPortEnd::meta, parent, "RequiredRequestPortEnd");

		::Uml::SetClass(RequiredRequestPortInstance::meta, parent, "RequiredRequestPortInstance");

		::Uml::SetClass(Requirement::meta, parent, "Requirement");

		::Uml::SetClass(RequirementBase::meta, parent, "RequirementBase");
		::Uml::SetAttribute(RequirementBase::meta_resourceType, RequirementBase::meta, "resourceType");

		::Uml::SetClass(RequirementSatisfier::meta, parent, "RequirementSatisfier");
		::Uml::SetAttribute(RequirementSatisfier::meta_resourceType, RequirementSatisfier::meta, "resourceType");

		::Uml::SetClass(Resource::meta, parent, "Resource");

		::Uml::SetClass(ReturnType::meta, parent, "ReturnType");

		::Uml::SetClass(RootFolder::meta, parent, "RootFolder");
		::Uml::SetAttribute(RootFolder::meta_name, RootFolder::meta, "name");

		::Uml::SetClass(SatisfierProperty::meta, parent, "SatisfierProperty");
		::Uml::SetAttribute(SatisfierProperty::meta_SatisfierPropertyKind, SatisfierProperty::meta, "SatisfierPropertyKind");
		::Uml::SetAttribute(SatisfierProperty::meta_DataValue, SatisfierProperty::meta, "DataValue");
		::Uml::SetAttribute(SatisfierProperty::meta_dynamic, SatisfierProperty::meta, "dynamic");

		::Uml::SetClass(SendsTo::meta, parent, "SendsTo");

		::Uml::SetClass(ServantProject::meta, parent, "ServantProject");

		::Uml::SetClass(ServiceConsumer::meta, parent, "ServiceConsumer");
		::Uml::SetAttribute(ServiceConsumer::meta_prioritize_service_invocations, ServiceConsumer::meta, "prioritize_service_invocations");

		::Uml::SetClass(ServiceLevels::meta, parent, "ServiceLevels");
		::Uml::SetAttribute(ServiceLevels::meta_varying_service_levels, ServiceLevels::meta, "varying_service_levels");

		::Uml::SetClass(ServiceProvider::meta, parent, "ServiceProvider");
		::Uml::SetAttribute(ServiceProvider::meta_fixed_prioirty_service_execution, ServiceProvider::meta, "fixed_prioirty_service_execution");

		::Uml::SetClass(SetException::meta, parent, "SetException");

		::Uml::SetClass(SharedResource::meta, parent, "SharedResource");

		::Uml::SetClass(Shares::meta, parent, "Shares");

		::Uml::SetClass(ShortInteger::meta, parent, "ShortInteger");

		::Uml::SetClass(SignedIntegerType::meta, parent, "SignedIntegerType");

		::Uml::SetClass(SimpleProperty::meta, parent, "SimpleProperty");
		::Uml::SetAttribute(SimpleProperty::meta_Value, SimpleProperty::meta, "Value");

		::Uml::SetClass(SimpleType::meta, parent, "SimpleType");

		::Uml::SetClass(SingleInputBase::meta, parent, "SingleInputBase");

		::Uml::SetClass(SingleOutputBase::meta, parent, "SingleOutputBase");

		::Uml::SetClass(SrcEdge::meta, parent, "SrcEdge");

		::Uml::SetClass(State::meta, parent, "State");

		::Uml::SetClass(StateBase::meta, parent, "StateBase");

		::Uml::SetClass(String::meta, parent, "String");

		::Uml::SetClass(StringType::meta, parent, "StringType");

		::Uml::SetClass(StubProject::meta, parent, "StubProject");

		::Uml::SetClass(Supports::meta, parent, "Supports");

		::Uml::SetClass(SupportsInstance::meta, parent, "SupportsInstance");

		::Uml::SetClass(SupportsInterfaces::meta, parent, "SupportsInterfaces");

		::Uml::SetClass(SwitchedAggregate::meta, parent, "SwitchedAggregate");

		::Uml::SetClass(Taggable::meta, parent, "Taggable");
		::Uml::SetAttribute(Taggable::meta_VersionTag, Taggable::meta, "VersionTag");
		::Uml::SetAttribute(Taggable::meta_SpecifyIdTag, Taggable::meta, "SpecifyIdTag");

		::Uml::SetClass(TargetRequiredRequestPort::meta, parent, "TargetRequiredRequestPort");

		::Uml::SetClass(Targets::meta, parent, "Targets");
		::Uml::SetAttribute(Targets::meta_name, Targets::meta, "name");

		::Uml::SetClass(Task::meta, parent, "Task");

		::Uml::SetClass(TaskSet::meta, parent, "TaskSet");
		::Uml::SetAttribute(TaskSet::meta_priority, TaskSet::meta, "priority");
		::Uml::SetAttribute(TaskSet::meta_rate, TaskSet::meta, "rate");

		::Uml::SetClass(TemplatePackageAlias::meta, parent, "TemplatePackageAlias");

		::Uml::SetClass(TemplatePackageInstance::meta, parent, "TemplatePackageInstance");

		::Uml::SetClass(TemplateParameter::meta, parent, "TemplateParameter");

		::Uml::SetClass(TemplateParameterReference::meta, parent, "TemplateParameterReference");

		::Uml::SetClass(TemplateParameterValue::meta, parent, "TemplateParameterValue");

		::Uml::SetClass(TemplateParameterValueType::meta, parent, "TemplateParameterValueType");

		::Uml::SetClass(Terminal::meta, parent, "Terminal");

		::Uml::SetClass(TerminalEffect::meta, parent, "TerminalEffect");

		::Uml::SetClass(TerminalTransition::meta, parent, "TerminalTransition");

		::Uml::SetClass(Throughput::meta, parent, "Throughput");

		::Uml::SetClass(TimeProbe::meta, parent, "TimeProbe");

		::Uml::SetClass(TimerConnection::meta, parent, "TimerConnection");

		::Uml::SetClass(TimerEventSinkConn::meta, parent, "TimerEventSinkConn");

		::Uml::SetClass(TopLevelBehavior::meta, parent, "TopLevelBehavior");

		::Uml::SetClass(TopLevelPackage::meta, parent, "TopLevelPackage");

		::Uml::SetClass(TopLevelPackageContainer::meta, parent, "TopLevelPackageContainer");

		::Uml::SetClass(TopLevelPackages::meta, parent, "TopLevelPackages");
		::Uml::SetAttribute(TopLevelPackages::meta_name, TopLevelPackages::meta, "name");

		::Uml::SetClass(Transition::meta, parent, "Transition");

		::Uml::SetClass(TriggerBenchmarks::meta, parent, "TriggerBenchmarks");

		::Uml::SetClass(TwowayOperation::meta, parent, "TwowayOperation");

		::Uml::SetClass(TypeEncoding::meta, parent, "TypeEncoding");

		::Uml::SetClass(TypeKind::meta, parent, "TypeKind");

		::Uml::SetClass(TypeParameter::meta, parent, "TypeParameter");
		::Uml::SetAttribute(TypeParameter::meta_Type, TypeParameter::meta, "Type");

		::Uml::SetClass(UnsignedIntegerType::meta, parent, "UnsignedIntegerType");

		::Uml::SetClass(UnsignedLongInteger::meta, parent, "UnsignedLongInteger");

		::Uml::SetClass(UnsignedLongLongInteger::meta, parent, "UnsignedLongLongInteger");

		::Uml::SetClass(UnsignedShortInteger::meta, parent, "UnsignedShortInteger");

		::Uml::SetClass(ValueObject::meta, parent, "ValueObject");

		::Uml::SetClass(Variable::meta, parent, "Variable");
		::Uml::SetAttribute(Variable::meta_InitialValue, Variable::meta, "InitialValue");

		::Uml::SetClass(WhileState::meta, parent, "WhileState");

		::Uml::SetClass(WideChar::meta, parent, "WideChar");

		::Uml::SetClass(WideString::meta, parent, "WideString");

		::Uml::SetClass(WorkLoadOperationConnection::meta, parent, "WorkLoadOperationConnection");

		::Uml::SetClass(Worker::meta, parent, "Worker");
		::Uml::SetAttribute(Worker::meta_Abstract, Worker::meta, "Abstract");

		::Uml::SetClass(WorkerFile::meta, parent, "WorkerFile");
		::Uml::SetAttribute(WorkerFile::meta_Location, WorkerFile::meta, "Location");

		::Uml::SetClass(WorkerLibraries::meta, parent, "WorkerLibraries");
		::Uml::SetAttribute(WorkerLibraries::meta_name, WorkerLibraries::meta, "name");

		::Uml::SetClass(WorkerLibrary::meta, parent, "WorkerLibrary");
		::Uml::SetAttribute(WorkerLibrary::meta_Location, WorkerLibrary::meta, "Location");

		::Uml::SetClass(WorkerPackage::meta, parent, "WorkerPackage");

		::Uml::SetClass(WorkerPackageBase::meta, parent, "WorkerPackageBase");

		::Uml::SetClass(WorkerType::meta, parent, "WorkerType");

		::Uml::SetClass(WorkloadCharacteristics::meta, parent, "WorkloadCharacteristics");

		::Uml::SetClass(Workspaces::meta, parent, "Workspaces");

		::Uml::SetClass(package::meta, parent, "package");

	}

	void InitMetaLinks(const ::Uml::Diagram &parent) {
		// classes
		::Uml::SetChildRole(Action::meta_ActionType_child, Action::meta, ActionType::meta, "", "");

		::Uml::SetAssocRole(ActionBase::meta_srcLoopTransition, ActionBase::meta, LoopState::meta, "dstLoopTransition");
		LoopTransition::meta_srcLoopTransition_end_ = LoopState::meta_dstLoopTransition_rev = ActionBase::meta_srcLoopTransition;
		::Uml::SetAssocRole(ActionBase::meta_srcBranchTransition, ActionBase::meta, BranchState::meta, "dstBranchTransition");
		BranchTransition::meta_srcBranchTransition_end_ = BranchState::meta_dstBranchTransition_rev = ActionBase::meta_srcBranchTransition;
		::Uml::SetAssocRole(ActionBase::meta_srcTransition, ActionBase::meta, State::meta, "dstTransition");
		Transition::meta_srcTransition_end_ = State::meta_dstTransition_rev = ActionBase::meta_srcTransition;
		::Uml::SetAssocRole(ActionBase::meta_dstEffect, ActionBase::meta, StateBase::meta, "srcEffect");
		Effect::meta_dstEffect_end_ = StateBase::meta_srcEffect_rev = ActionBase::meta_dstEffect;
		::Uml::SetChildRole(ActionBase::meta_Property_children, ActionBase::meta, Property::meta, "", "");
		::Uml::SetParentRole(ActionBase::meta_BehaviorModel_parent, ActionBase::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(ActionType::meta_ref, ActionType::meta, Operation::meta, "referedbyActionType");
		::Uml::SetParentRole(ActionType::meta_Action_parent, ActionType::meta, Action::meta, "", "");

		::Uml::SetChildRole(Aggregate::meta_Key_child, Aggregate::meta, Key::meta, "", "");
		::Uml::SetChildRole(Aggregate::meta_KeyMember_children, Aggregate::meta, KeyMember::meta, "", "");
		::Uml::SetChildRole(Aggregate::meta_Member_children, Aggregate::meta, Member::meta, "", "");
		::Uml::SetParentRole(Aggregate::meta_ConnectorObject_parent, Aggregate::meta, ConnectorObject::meta, "", "");

		::Uml::SetAssocRole(Alias::meta_ref, Alias::meta, MemberType::meta, "referedbyAlias");

		::Uml::SetParentRole(ApplicationTask::meta_TopLevelBehavior_parent, ApplicationTask::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetChildRole(ArtifactContainer::meta_Property_children, ArtifactContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDependency_children, ArtifactContainer::meta, ArtifactDependency::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ImplementationArtifact_children, ArtifactContainer::meta, ImplementationArtifact::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactInfoProperty_children, ArtifactContainer::meta, ArtifactInfoProperty::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactExecParameter_children, ArtifactContainer::meta, ArtifactExecParameter::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_Requirement_children, ArtifactContainer::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDeployRequirement_children, ArtifactContainer::meta, ArtifactDeployRequirement::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ImplementationArtifactReference_children, ArtifactContainer::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDependsOn_children, ArtifactContainer::meta, ArtifactDependsOn::meta, "", "");
		::Uml::SetParentRole(ArtifactContainer::meta_ImplementationArtifacts_parent, ArtifactContainer::meta, ImplementationArtifacts::meta, "", "");

		::Uml::SetParentRole(ArtifactDependency::meta_ArtifactContainer_parent, ArtifactDependency::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactDependsOn::meta_ArtifactContainer_parent, ArtifactDependsOn::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactDeployRequirement::meta_ArtifactContainer_parent, ArtifactDeployRequirement::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactExecParameter::meta_ArtifactContainer_parent, ArtifactExecParameter::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactInfoProperty::meta_ArtifactContainer_parent, ArtifactInfoProperty::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(AssemblyConfigProperty::meta_ComponentAssembly_parent, AssemblyConfigProperty::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty, AssemblyConfigPropertyEnd::meta, Property::meta, "srcAssemblyConfigProperty");
		AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_ = Property::meta_srcAssemblyConfigProperty_rev = AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty;
		::Uml::SetAssocRole(AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement, AssemblyConfigPropertyEnd::meta, Requirement::meta, "srcAssemblyselectRequirement");
		AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_ = Requirement::meta_srcAssemblyselectRequirement_rev = AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement;

		::Uml::SetParentRole(AssemblyselectRequirement::meta_ComponentAssembly_parent, AssemblyselectRequirement::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(Attribute::meta_SetException_children, Attribute::meta, SetException::meta, "", "");

		::Uml::SetParentRole(AttributeDelegate::meta_ComponentAssembly_parent, AttributeDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(AttributeInstance::meta_srcAttributeDelegate, AttributeInstance::meta, AttributeMapping::meta, "dstAttributeDelegate");
		AttributeDelegate::meta_srcAttributeDelegate_end_ = AttributeMapping::meta_dstAttributeDelegate_rev = AttributeInstance::meta_srcAttributeDelegate;
		::Uml::SetAssocRole(AttributeInstance::meta_referedbyAttributeMapping, AttributeInstance::meta, AttributeMapping::meta, "ref");
		::Uml::SetAssocRole(AttributeInstance::meta_ref, AttributeInstance::meta, ReadonlyAttribute::meta, "referedbyAttributeInstance");
		::Uml::SetAssocRole(AttributeInstance::meta_dstAttributeValue, AttributeInstance::meta, Property::meta, "srcAttributeValue");
		AttributeValue::meta_dstAttributeValue_end_ = Property::meta_srcAttributeValue_rev = AttributeInstance::meta_dstAttributeValue;
		::Uml::SetParentRole(AttributeInstance::meta_ConnectorInstance_parent, AttributeInstance::meta, ConnectorInstance::meta, "", "");

		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeMappingDelegate, AttributeMapping::meta, AttributeMapping::meta, "srcAttributeMappingDelegate");
		AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_ = AttributeMapping::meta_srcAttributeMappingDelegate_rev = AttributeMapping::meta_dstAttributeMappingDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_srcAttributeMappingDelegate, AttributeMapping::meta, AttributeMapping::meta, "dstAttributeMappingDelegate");
		AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_ = AttributeMapping::meta_dstAttributeMappingDelegate_rev = AttributeMapping::meta_srcAttributeMappingDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeMappingValue, AttributeMapping::meta, Property::meta, "srcAttributeMappingValue");
		AttributeMappingValue::meta_dstAttributeMappingValue_end_ = Property::meta_srcAttributeMappingValue_rev = AttributeMapping::meta_dstAttributeMappingValue;
		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeDelegate, AttributeMapping::meta, AttributeInstance::meta, "srcAttributeDelegate");
		AttributeDelegate::meta_dstAttributeDelegate_end_ = AttributeInstance::meta_srcAttributeDelegate_rev = AttributeMapping::meta_dstAttributeDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_ref, AttributeMapping::meta, AttributeInstance::meta, "referedbyAttributeMapping");
		::Uml::SetParentRole(AttributeMapping::meta_ComponentAssembly_parent, AttributeMapping::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AttributeMappingDelegate::meta_ComponentAssembly_parent, AttributeMappingDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AttributeMappingValue::meta_ComponentAssembly_parent, AttributeMappingValue::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(AttributeMember::meta_ref, AttributeMember::meta, MemberType::meta, "referedbyAttributeMember");
		::Uml::SetParentRole(AttributeMember::meta_ReadonlyAttribute_parent, AttributeMember::meta, ReadonlyAttribute::meta, "", "");

		::Uml::SetParentRole(AttributeValue::meta_ComponentAssembly_parent, AttributeValue::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(BehaviorInputAction::meta_srcFinish, BehaviorInputAction::meta, StateBase::meta, "dstFinish");
		Finish::meta_srcFinish_end_ = StateBase::meta_dstFinish_rev = BehaviorInputAction::meta_srcFinish;
		::Uml::SetAssocRole(BehaviorInputAction::meta_dstInputEffect, BehaviorInputAction::meta, StateBase::meta, "srcInputEffect");
		InputEffect::meta_dstInputEffect_end_ = StateBase::meta_srcInputEffect_rev = BehaviorInputAction::meta_dstInputEffect;
		::Uml::SetChildRole(BehaviorInputAction::meta_Property_children, BehaviorInputAction::meta, Property::meta, "", "");
		::Uml::SetParentRole(BehaviorInputAction::meta_BehaviorModel_parent, BehaviorInputAction::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(BehaviorModel::meta_Variable_children, BehaviorModel::meta, Variable::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_LoopTransition_children, BehaviorModel::meta, LoopTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Transition_children, BehaviorModel::meta, Transition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_BranchTransition_children, BehaviorModel::meta, BranchTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_StateBase_children, BehaviorModel::meta, StateBase::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_TerminalEffect_children, BehaviorModel::meta, TerminalEffect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Terminal_children, BehaviorModel::meta, Terminal::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_TerminalTransition_children, BehaviorModel::meta, TerminalTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_QueryInputAction_children, BehaviorModel::meta, QueryInputAction::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Effect_children, BehaviorModel::meta, Effect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_ActionBase_children, BehaviorModel::meta, ActionBase::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_InputEffect_children, BehaviorModel::meta, InputEffect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_BehaviorInputAction_children, BehaviorModel::meta, BehaviorInputAction::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Finish_children, BehaviorModel::meta, Finish::meta, "", "");

		::Uml::SetChildRole(BenchmarkAnalysis::meta_BenchmarkCharacteristics_children, BenchmarkAnalysis::meta, BenchmarkCharacteristics::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_BenchmarkType_children, BenchmarkAnalysis::meta, BenchmarkType::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_WorkLoadOperationConnection_children, BenchmarkAnalysis::meta, WorkLoadOperationConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_CompRef_children, BenchmarkAnalysis::meta, CompRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_ComponentOperation_children, BenchmarkAnalysis::meta, ComponentOperation::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_WorkloadCharacteristics_children, BenchmarkAnalysis::meta, WorkloadCharacteristics::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_Task_children, BenchmarkAnalysis::meta, Task::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TaskSet_children, BenchmarkAnalysis::meta, TaskSet::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimerEventSinkConn_children, BenchmarkAnalysis::meta, TimerEventSinkConn::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_Event_children, BenchmarkAnalysis::meta, Event::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_EventRef_children, BenchmarkAnalysis::meta, EventRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_OperationRef_children, BenchmarkAnalysis::meta, OperationRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimeProbe_children, BenchmarkAnalysis::meta, TimeProbe::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_MetricsBase_children, BenchmarkAnalysis::meta, MetricsBase::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_DataAnalysisBase_children, BenchmarkAnalysis::meta, DataAnalysisBase::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_MetricConnection_children, BenchmarkAnalysis::meta, MetricConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimerConnection_children, BenchmarkAnalysis::meta, TimerConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_OperationBase_children, BenchmarkAnalysis::meta, OperationBase::meta, "", "");
		::Uml::SetParentRole(BenchmarkAnalysis::meta_ComponentAnalyses_parent, BenchmarkAnalysis::meta, ComponentAnalyses::meta, "", "");

		::Uml::SetParentRole(BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent, BenchmarkCharacteristics::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(BenchmarkType::meta_dstBenchmarkCharacteristics, BenchmarkType::meta, MetricsBase::meta, "srcBenchmarkCharacteristics");
		BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_ = MetricsBase::meta_srcBenchmarkCharacteristics_rev = BenchmarkType::meta_dstBenchmarkCharacteristics;
		::Uml::SetParentRole(BenchmarkType::meta_BenchmarkAnalysis_parent, BenchmarkType::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Boxed::meta_ref, Boxed::meta, MemberType::meta, "referedbyBoxed");

		::Uml::SetAssocRole(BranchState::meta_dstBranchTransition, BranchState::meta, ActionBase::meta, "srcBranchTransition");
		BranchTransition::meta_dstBranchTransition_end_ = ActionBase::meta_srcBranchTransition_rev = BranchState::meta_dstBranchTransition;

		::Uml::SetParentRole(BranchTransition::meta_BehaviorModel_parent, BranchTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(Bridge::meta_srcBridgeConnection, Bridge::meta, Interconnect::meta, "dstBridgeConnection");
		BridgeConnection::meta_srcBridgeConnection_end_ = Interconnect::meta_dstBridgeConnection_rev = Bridge::meta_srcBridgeConnection;
		::Uml::SetChildRole(Bridge::meta_Resource_children, Bridge::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Bridge::meta_Domain_parent, Bridge::meta, Domain::meta, "", "");

		::Uml::SetParentRole(BridgeConnection::meta_Domain_parent, BridgeConnection::meta, Domain::meta, "", "");

		::Uml::SetChildRole(CallAction::meta_TargetRequiredRequestPort_child, CallAction::meta, TargetRequiredRequestPort::meta, "", "");

		::Uml::SetAssocRole(Capability::meta_srcImplementationCapability, Capability::meta, ComponentImplementation::meta, "dstImplementationCapability");
		ImplementationCapability::meta_srcImplementationCapability_end_ = ComponentImplementation::meta_dstImplementationCapability_rev = Capability::meta_srcImplementationCapability;
		::Uml::SetParentRole(Capability::meta_ComponentImplementationContainer_parent, Capability::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(Collection::meta_ref, Collection::meta, MemberType::meta, "referedbyCollection");
		::Uml::SetParentRole(Collection::meta_ConnectorObject_parent, Collection::meta, ConnectorObject::meta, "", "");

		::Uml::SetAssocRole(CollectionParameter::meta_ref, CollectionParameter::meta, NameParameter::meta, "referedbyCollectionParameter");

		::Uml::SetAssocRole(CollocationGroup::meta_members, CollocationGroup::meta, CollocationGroupMember::meta, "setCollocationGroup");
		::Uml::SetAssocRole(CollocationGroup::meta_dstInstanceMapping, CollocationGroup::meta, NodeReference::meta, "srcInstanceMapping");
		InstanceMapping::meta_dstInstanceMapping_end_ = NodeReference::meta_srcInstanceMapping_rev = CollocationGroup::meta_dstInstanceMapping;
		::Uml::SetAssocRole(CollocationGroup::meta_srcCollocationGroupProperty, CollocationGroup::meta, Property::meta, "dstCollocationGroupProperty");
		CollocationGroupProperty::meta_srcCollocationGroupProperty_end_ = Property::meta_dstCollocationGroupProperty_rev = CollocationGroup::meta_srcCollocationGroupProperty;
		::Uml::SetParentRole(CollocationGroup::meta_DeploymentPlan_parent, CollocationGroup::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(CollocationGroupMember::meta_setCollocationGroup, CollocationGroupMember::meta, CollocationGroup::meta, "members");
		::Uml::SetParentRole(CollocationGroupMember::meta_DeploymentPlan_parent, CollocationGroupMember::meta, DeploymentPlan::meta, "", "");

		::Uml::SetParentRole(CollocationGroupProperty::meta_DeploymentPlan_parent, CollocationGroupProperty::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(CompRef::meta_ref, CompRef::meta, Component::meta, "referedbyCompRef");
		::Uml::SetAssocRole(CompRef::meta_srcComponentOperation, CompRef::meta, OperationRef::meta, "dstComponentOperation");
		ComponentOperation::meta_srcComponentOperation_end_ = OperationRef::meta_dstComponentOperation_rev = CompRef::meta_srcComponentOperation;
		::Uml::SetParentRole(CompRef::meta_BenchmarkAnalysis_parent, CompRef::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetChildRole(ComplexProperty::meta_DataValueBase_children, ComplexProperty::meta, DataValueBase::meta, "", "");
		::Uml::SetChildRole(ComplexProperty::meta_ComplexTypeReference_child, ComplexProperty::meta, ComplexTypeReference::meta, "", "");

		::Uml::SetAssocRole(ComplexType::meta_referedbyComplexTypeReference, ComplexType::meta, ComplexTypeReference::meta, "ref");

		::Uml::SetAssocRole(ComplexTypeReference::meta_ref, ComplexTypeReference::meta, ComplexType::meta, "referedbyComplexTypeReference");
		::Uml::SetParentRole(ComplexTypeReference::meta_ComplexProperty_parent, ComplexTypeReference::meta, ComplexProperty::meta, "", "");
		::Uml::SetParentRole(ComplexTypeReference::meta_DataValueContainer_parent, ComplexTypeReference::meta, DataValueContainer::meta, "", "");

		::Uml::SetAssocRole(Component::meta_referedbyCompRef, Component::meta, CompRef::meta, "ref");
		::Uml::SetAssocRole(Component::meta_referedbyComponentRef, Component::meta, ComponentRef::meta, "ref");
		::Uml::SetAssocRole(Component::meta_referedbyComponentInherits, Component::meta, ComponentInherits::meta, "ref");
		::Uml::SetChildRole(Component::meta_ExtendedPortBase_children, Component::meta, ExtendedPortBase::meta, "", "");
		::Uml::SetChildRole(Component::meta_ComponentInherits_child, Component::meta, ComponentInherits::meta, "", "");
		::Uml::SetChildRole(Component::meta_ReadonlyAttribute_children, Component::meta, ReadonlyAttribute::meta, "", "");
		::Uml::SetChildRole(Component::meta_Port_children, Component::meta, Port::meta, "", "");

		::Uml::SetChildRole(ComponentAnalyses::meta_BenchmarkAnalysis_children, ComponentAnalyses::meta, BenchmarkAnalysis::meta, "", "");
		::Uml::SetParentRole(ComponentAnalyses::meta_RootFolder_parent, ComponentAnalyses::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(ComponentAssembly::meta_referedbyComponentAssemblyReference, ComponentAssembly::meta, ComponentAssemblyReference::meta, "ref");
		::Uml::SetAssocRole(ComponentAssembly::meta_dstCriticalPath, ComponentAssembly::meta, PathReference::meta, "srcCriticalPath");
		CriticalPath::meta_dstCriticalPath_end_ = PathReference::meta_srcCriticalPath_rev = ComponentAssembly::meta_dstCriticalPath;
		::Uml::SetChildRole(ComponentAssembly::meta_Property_children, ComponentAssembly::meta, Property::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_MirrorDelegate_children, ComponentAssembly::meta, MirrorDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_MirrorPortDelegate_children, ComponentAssembly::meta, MirrorPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExtendedPortDelegate_children, ComponentAssembly::meta, ExtendedPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExtendedDelegate_children, ComponentAssembly::meta, ExtendedDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ConnectorToFacet_children, ComponentAssembly::meta, ConnectorToFacet::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ConnectorToReceptacle_children, ComponentAssembly::meta, ConnectorToReceptacle::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ProvidedRequestPortDelegate_children, ComponentAssembly::meta, ProvidedRequestPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_RequiredRequestPortDelegate_children, ComponentAssembly::meta, RequiredRequestPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_OutEventPortDelegate_children, ComponentAssembly::meta, OutEventPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_InEventPortDelegate_children, ComponentAssembly::meta, InEventPortDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Consume_children, ComponentAssembly::meta, Consume::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Publish_children, ComponentAssembly::meta, Publish::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ConnectorInstance_children, ComponentAssembly::meta, ConnectorInstance::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentInstance_children, ComponentAssembly::meta, ComponentInstance::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExternalPort_children, ComponentAssembly::meta, ExternalPort::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMapping_children, ComponentAssembly::meta, AttributeMapping::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExternalDelegate_children, ComponentAssembly::meta, ExternalDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMappingDelegate_children, ComponentAssembly::meta, AttributeMappingDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ReceptacleDelegate_children, ComponentAssembly::meta, ReceptacleDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Invoke_children, ComponentAssembly::meta, Invoke::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_FacetDelegate_children, ComponentAssembly::meta, FacetDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AssemblyConfigProperty_children, ComponentAssembly::meta, AssemblyConfigProperty::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMappingValue_children, ComponentAssembly::meta, AttributeMappingValue::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeDelegate_children, ComponentAssembly::meta, AttributeDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeValue_children, ComponentAssembly::meta, AttributeValue::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AssemblyselectRequirement_children, ComponentAssembly::meta, AssemblyselectRequirement::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentAssemblyReference_children, ComponentAssembly::meta, ComponentAssemblyReference::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSinkDelegate_children, ComponentAssembly::meta, EventSinkDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSourceDelegate_children, ComponentAssembly::meta, EventSourceDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_SendsTo_children, ComponentAssembly::meta, SendsTo::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentAssembly_children, ComponentAssembly::meta, ComponentAssembly::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Requirement_children, ComponentAssembly::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentPackageReference_children, ComponentAssembly::meta, ComponentPackageReference::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentPackage_children, ComponentAssembly::meta, ComponentPackage::meta, "", "");
		::Uml::SetParentRole(ComponentAssembly::meta_ComponentAssembly_parent, ComponentAssembly::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentAssemblyReference::meta_ref, ComponentAssemblyReference::meta, ComponentAssembly::meta, "referedbyComponentAssemblyReference");
		::Uml::SetParentRole(ComponentAssemblyReference::meta_ComponentAssembly_parent, ComponentAssemblyReference::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(ComponentBuild::meta_MPC_children, ComponentBuild::meta, MPC::meta, "", "");
		::Uml::SetParentRole(ComponentBuild::meta_RootFolder_parent, ComponentBuild::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentConfigProperty::meta_ComponentContainer_parent, ComponentConfigProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetChildRole(ComponentContainer::meta_Property_children, ComponentContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentRef_child, ComponentContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentPropertyDescription_children, ComponentContainer::meta, ComponentPropertyDescription::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentProperty_children, ComponentContainer::meta, ComponentProperty::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentInfoProperty_children, ComponentContainer::meta, ComponentInfoProperty::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentConfigProperty_children, ComponentContainer::meta, ComponentConfigProperty::meta, "", "");
		::Uml::SetParentRole(ComponentContainer::meta_ComponentTypes_parent, ComponentContainer::meta, ComponentTypes::meta, "", "");

		::Uml::SetAssocRole(ComponentFactory::meta_referedbyComponentFactoryInstance, ComponentFactory::meta, ComponentFactoryInstance::meta, "ref");
		::Uml::SetAssocRole(ComponentFactory::meta_dstManagesComponent, ComponentFactory::meta, Manageable::meta, "srcManagesComponent");
		ManagesComponent::meta_dstManagesComponent_end_ = Manageable::meta_srcManagesComponent_rev = ComponentFactory::meta_dstManagesComponent;
		::Uml::SetChildRole(ComponentFactory::meta_LookupKey_child, ComponentFactory::meta, LookupKey::meta, "", "");
		::Uml::SetChildRole(ComponentFactory::meta_LookupOperation_children, ComponentFactory::meta, LookupOperation::meta, "", "");
		::Uml::SetChildRole(ComponentFactory::meta_FactoryOperation_children, ComponentFactory::meta, FactoryOperation::meta, "", "");

		::Uml::SetChildRole(ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children, ComponentFactoryImplementationContainer::meta, ComponentFactoryInstance::meta, "", "");
		::Uml::SetParentRole(ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent, ComponentFactoryImplementationContainer::meta, ComponentFactoryImplementations::meta, "", "");

		::Uml::SetChildRole(ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children, ComponentFactoryImplementations::meta, ComponentFactoryImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentFactoryImplementations::meta_RootFolder_parent, ComponentFactoryImplementations::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(ComponentFactoryInstance::meta_ref, ComponentFactoryInstance::meta, ComponentFactory::meta, "referedbyComponentFactoryInstance");
		::Uml::SetAssocRole(ComponentFactoryInstance::meta_referedbyComponentFactoryRef, ComponentFactoryInstance::meta, ComponentFactoryRef::meta, "ref");
		::Uml::SetParentRole(ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent, ComponentFactoryInstance::meta, ComponentFactoryImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentFactoryRef::meta_dstDeploys, ComponentFactoryRef::meta, ComponentInstanceRef::meta, "srcDeploys");
		Deploys::meta_dstDeploys_end_ = ComponentInstanceRef::meta_srcDeploys_rev = ComponentFactoryRef::meta_dstDeploys;
		::Uml::SetAssocRole(ComponentFactoryRef::meta_ref, ComponentFactoryRef::meta, ComponentFactoryInstance::meta, "referedbyComponentFactoryRef");

		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplements, ComponentImplementation::meta, ComponentRef::meta, "srcImplements");
		Implements::meta_dstImplements_end_ = ComponentRef::meta_srcImplements_rev = ComponentImplementation::meta_dstImplements;
		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplementationDependsOn, ComponentImplementation::meta, ImplementationDependency::meta, "srcImplementationDependsOn");
		ImplementationDependsOn::meta_dstImplementationDependsOn_end_ = ImplementationDependency::meta_srcImplementationDependsOn_rev = ComponentImplementation::meta_dstImplementationDependsOn;
		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplementationCapability, ComponentImplementation::meta, Capability::meta, "srcImplementationCapability");
		ImplementationCapability::meta_dstImplementationCapability_end_ = Capability::meta_srcImplementationCapability_rev = ComponentImplementation::meta_dstImplementationCapability;
		::Uml::SetAssocRole(ComponentImplementation::meta_referedbyComponentImplementationReference, ComponentImplementation::meta, ComponentImplementationReference::meta, "ref");
		::Uml::SetParentRole(ComponentImplementation::meta_ComponentImplementationContainer_parent, ComponentImplementation::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentImplementationArtifact::meta_ref, ComponentImplementationArtifact::meta, ImplementationArtifact::meta, "referedbyComponentImplemenationArtifact");

		::Uml::SetChildRole(ComponentImplementationContainer::meta_ComponentImplementation_children, ComponentImplementationContainer::meta, ComponentImplementation::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_PathReference_child, ComponentImplementationContainer::meta, PathReference::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_CriticalPath_children, ComponentImplementationContainer::meta, CriticalPath::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_Capability_children, ComponentImplementationContainer::meta, Capability::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationCapability_children, ComponentImplementationContainer::meta, ImplementationCapability::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationDependency_children, ComponentImplementationContainer::meta, ImplementationDependency::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ComponentRef_child, ComponentImplementationContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_Implements_child, ComponentImplementationContainer::meta, Implements::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationDependsOn_children, ComponentImplementationContainer::meta, ImplementationDependsOn::meta, "", "");
		::Uml::SetParentRole(ComponentImplementationContainer::meta_ComponentImplementations_parent, ComponentImplementationContainer::meta, ComponentImplementations::meta, "", "");

		::Uml::SetAssocRole(ComponentImplementationReference::meta_srcImplementation, ComponentImplementationReference::meta, ComponentPackage::meta, "dstImplementation");
		Implementation::meta_srcImplementation_end_ = ComponentPackage::meta_dstImplementation_rev = ComponentImplementationReference::meta_srcImplementation;
		::Uml::SetAssocRole(ComponentImplementationReference::meta_ref, ComponentImplementationReference::meta, ComponentImplementation::meta, "referedbyComponentImplementationReference");
		::Uml::SetParentRole(ComponentImplementationReference::meta_PackageContainer_parent, ComponentImplementationReference::meta, PackageContainer::meta, "", "");

		::Uml::SetChildRole(ComponentImplementations::meta_ComponentImplementationContainer_children, ComponentImplementations::meta, ComponentImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentImplementations::meta_RootFolder_parent, ComponentImplementations::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentInfoProperty::meta_ComponentContainer_parent, ComponentInfoProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentInherits::meta_ref, ComponentInherits::meta, Component::meta, "referedbyComponentInherits");
		::Uml::SetParentRole(ComponentInherits::meta_Component_parent, ComponentInherits::meta, Component::meta, "", "");

		::Uml::SetAssocRole(ComponentInstance::meta_referedbyComponentInstanceRef, ComponentInstance::meta, ComponentInstanceRef::meta, "ref");
		::Uml::SetChildRole(ComponentInstance::meta_PortInstance_children, ComponentInstance::meta, PortInstance::meta, "", "");
		::Uml::SetChildRole(ComponentInstance::meta_SupportsInstance_children, ComponentInstance::meta, SupportsInstance::meta, "", "");
		::Uml::SetChildRole(ComponentInstance::meta_ComponentInstanceType_child, ComponentInstance::meta, ComponentInstanceType::meta, "", "");
		::Uml::SetParentRole(ComponentInstance::meta_ComponentAssembly_parent, ComponentInstance::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentInstanceRef::meta_ref, ComponentInstanceRef::meta, ComponentInstance::meta, "referedbyComponentInstanceRef");
		::Uml::SetAssocRole(ComponentInstanceRef::meta_srcDeploys, ComponentInstanceRef::meta, ComponentFactoryRef::meta, "dstDeploys");
		Deploys::meta_srcDeploys_end_ = ComponentFactoryRef::meta_dstDeploys_rev = ComponentInstanceRef::meta_srcDeploys;

		::Uml::SetAssocRole(ComponentInstanceType::meta_ref, ComponentInstanceType::meta, MonolithicImplementation::meta, "referedbyComponentInstanceType");
		::Uml::SetParentRole(ComponentInstanceType::meta_ComponentInstance_parent, ComponentInstanceType::meta, ComponentInstance::meta, "", "");

		::Uml::SetAssocRole(ComponentLib::meta_dstExtResourceConn, ComponentLib::meta, ExternalResources::meta, "srcExtResourceConn");
		ExtResourceConn::meta_dstExtResourceConn_end_ = ExternalResources::meta_srcExtResourceConn_rev = ComponentLib::meta_dstExtResourceConn;
		::Uml::SetParentRole(ComponentLib::meta_Project_parent, ComponentLib::meta, Project::meta, "", "");

		::Uml::SetParentRole(ComponentOperation::meta_BenchmarkAnalysis_parent, ComponentOperation::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(ComponentPackage::meta_srcPackageConfBasePackage, ComponentPackage::meta, PackageConfiguration::meta, "dstPackageConfBasePackage");
		PackageConfBasePackage::meta_srcPackageConfBasePackage_end_ = PackageConfiguration::meta_dstPackageConfBasePackage_rev = ComponentPackage::meta_srcPackageConfBasePackage;
		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageInfoProperty, ComponentPackage::meta, Property::meta, "srcPackageInfoProperty");
		PackageInfoProperty::meta_dstPackageInfoProperty_end_ = Property::meta_srcPackageInfoProperty_rev = ComponentPackage::meta_dstPackageInfoProperty;
		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageConfigProperty, ComponentPackage::meta, Property::meta, "srcPackageConfigProperty");
		PackageConfigProperty::meta_dstPackageConfigProperty_end_ = Property::meta_srcPackageConfigProperty_rev = ComponentPackage::meta_dstPackageConfigProperty;
		::Uml::SetAssocRole(ComponentPackage::meta_dstImplementation, ComponentPackage::meta, ComponentImplementationReference::meta, "srcImplementation");
		Implementation::meta_dstImplementation_end_ = ComponentImplementationReference::meta_srcImplementation_rev = ComponentPackage::meta_dstImplementation;
		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageInterface, ComponentPackage::meta, ComponentRef::meta, "srcPackageInterface");
		PackageInterface::meta_dstPackageInterface_end_ = ComponentRef::meta_srcPackageInterface_rev = ComponentPackage::meta_dstPackageInterface;
		::Uml::SetAssocRole(ComponentPackage::meta_referedbyComponentPackageReference, ComponentPackage::meta, ComponentPackageReference::meta, "ref");
		::Uml::SetParentRole(ComponentPackage::meta_PackageConfigurationContainer_parent, ComponentPackage::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackage::meta_PackageContainer_parent, ComponentPackage::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackage::meta_ComponentAssembly_parent, ComponentPackage::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentPackageReference::meta_srcPackageConfReference, ComponentPackageReference::meta, PackageConfiguration::meta, "dstPackageConfReference");
		PackageConfReference::meta_srcPackageConfReference_end_ = PackageConfiguration::meta_dstPackageConfReference_rev = ComponentPackageReference::meta_srcPackageConfReference;
		::Uml::SetAssocRole(ComponentPackageReference::meta_ref, ComponentPackageReference::meta, ComponentPackage::meta, "referedbyComponentPackageReference");
		::Uml::SetParentRole(ComponentPackageReference::meta_PackageConfigurationContainer_parent, ComponentPackageReference::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackageReference::meta_ComponentAssembly_parent, ComponentPackageReference::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(ComponentPackages::meta_PackageContainer_children, ComponentPackages::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackages::meta_RootFolder_parent, ComponentPackages::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentProperty::meta_ComponentContainer_parent, ComponentProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentPropertyDescription::meta_srcComponentProperty, ComponentPropertyDescription::meta, ComponentRef::meta, "dstComponentProperty");
		ComponentProperty::meta_srcComponentProperty_end_ = ComponentRef::meta_dstComponentProperty_rev = ComponentPropertyDescription::meta_srcComponentProperty;
		::Uml::SetChildRole(ComponentPropertyDescription::meta_DataType_child, ComponentPropertyDescription::meta, DataType::meta, "", "");
		::Uml::SetParentRole(ComponentPropertyDescription::meta_ComponentContainer_parent, ComponentPropertyDescription::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentRef::meta_srcPackageInterface, ComponentRef::meta, ComponentPackage::meta, "dstPackageInterface");
		PackageInterface::meta_srcPackageInterface_end_ = ComponentPackage::meta_dstPackageInterface_rev = ComponentRef::meta_srcPackageInterface;
		::Uml::SetAssocRole(ComponentRef::meta_ref, ComponentRef::meta, Component::meta, "referedbyComponentRef");
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentInfoProperty, ComponentRef::meta, Property::meta, "srcComponentInfoProperty");
		ComponentInfoProperty::meta_dstComponentInfoProperty_end_ = Property::meta_srcComponentInfoProperty_rev = ComponentRef::meta_dstComponentInfoProperty;
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentConfigProperty, ComponentRef::meta, Property::meta, "srcComponentConfigProperty");
		ComponentConfigProperty::meta_dstComponentConfigProperty_end_ = Property::meta_srcComponentConfigProperty_rev = ComponentRef::meta_dstComponentConfigProperty;
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentProperty, ComponentRef::meta, ComponentPropertyDescription::meta, "srcComponentProperty");
		ComponentProperty::meta_dstComponentProperty_end_ = ComponentPropertyDescription::meta_srcComponentProperty_rev = ComponentRef::meta_dstComponentProperty;
		::Uml::SetAssocRole(ComponentRef::meta_srcImplements, ComponentRef::meta, ComponentImplementation::meta, "dstImplements");
		Implements::meta_srcImplements_end_ = ComponentImplementation::meta_dstImplements_rev = ComponentRef::meta_srcImplements;
		::Uml::SetParentRole(ComponentRef::meta_Path_parent, ComponentRef::meta, Path::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_PackageContainer_parent, ComponentRef::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_File_parent, ComponentRef::meta, File::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_Package_parent, ComponentRef::meta, Package::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_ComponentImplementationContainer_parent, ComponentRef::meta, ComponentImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_ComponentContainer_parent, ComponentRef::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentServantArtifact::meta_ref, ComponentServantArtifact::meta, ImplementationArtifact::meta, "referedbyComponentServantArtifact");

		::Uml::SetChildRole(ComponentTypes::meta_ComponentContainer_children, ComponentTypes::meta, ComponentContainer::meta, "", "");
		::Uml::SetParentRole(ComponentTypes::meta_RootFolder_parent, ComponentTypes::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ConfigProperty::meta_ImplementationContainer_parent, ConfigProperty::meta, ImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ConnectedComponent::meta_Port_children, ConnectedComponent::meta, Port::meta, "", "");
		::Uml::SetChildRole(ConnectedComponent::meta_DstEdge_children, ConnectedComponent::meta, DstEdge::meta, "", "");

		::Uml::SetAssocRole(ConnectorImplementation::meta_dstConnectorImplements, ConnectorImplementation::meta, ConnectorType::meta, "srcConnectorImplements");
		ConnectorImplements::meta_dstConnectorImplements_end_ = ConnectorType::meta_srcConnectorImplements_rev = ConnectorImplementation::meta_dstConnectorImplements;
		::Uml::SetAssocRole(ConnectorImplementation::meta_referedbyConnectorImplementationType, ConnectorImplementation::meta, ConnectorImplementationType::meta, "ref");
		::Uml::SetParentRole(ConnectorImplementation::meta_ConnectorImplementationContainer_parent, ConnectorImplementation::meta, ConnectorImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ConnectorImplementationContainer::meta_ConnectorImplements_children, ConnectorImplementationContainer::meta, ConnectorImplements::meta, "", "");
		::Uml::SetChildRole(ConnectorImplementationContainer::meta_ConnectorType_children, ConnectorImplementationContainer::meta, ConnectorType::meta, "", "");
		::Uml::SetChildRole(ConnectorImplementationContainer::meta_ConnectorImplementation_children, ConnectorImplementationContainer::meta, ConnectorImplementation::meta, "", "");
		::Uml::SetParentRole(ConnectorImplementationContainer::meta_ConnectorImplementations_parent, ConnectorImplementationContainer::meta, ConnectorImplementations::meta, "", "");

		::Uml::SetAssocRole(ConnectorImplementationType::meta_ref, ConnectorImplementationType::meta, ConnectorImplementation::meta, "referedbyConnectorImplementationType");
		::Uml::SetParentRole(ConnectorImplementationType::meta_ConnectorInstance_parent, ConnectorImplementationType::meta, ConnectorInstance::meta, "", "");

		::Uml::SetChildRole(ConnectorImplementations::meta_ConnectorImplementationContainer_children, ConnectorImplementations::meta, ConnectorImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ConnectorImplementations::meta_RootFolder_parent, ConnectorImplementations::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ConnectorImplements::meta_ConnectorImplementationContainer_parent, ConnectorImplements::meta, ConnectorImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ConnectorInherits::meta_ref, ConnectorInherits::meta, ConnectorObject::meta, "referedbyConnectorInherits");
		::Uml::SetParentRole(ConnectorInherits::meta_ConnectorObject_parent, ConnectorInherits::meta, ConnectorObject::meta, "", "");

		::Uml::SetAssocRole(ConnectorInstance::meta_srcConnectorToReceptacle, ConnectorInstance::meta, RequiredRequestPortEnd::meta, "dstConnectorToReceptacle");
		ConnectorToReceptacle::meta_srcConnectorToReceptacle_end_ = RequiredRequestPortEnd::meta_dstConnectorToReceptacle_rev = ConnectorInstance::meta_srcConnectorToReceptacle;
		::Uml::SetAssocRole(ConnectorInstance::meta_srcPublish, ConnectorInstance::meta, ExtendPortEnd::meta, "dstPublish");
		Publish::meta_srcPublish_end_ = ExtendPortEnd::meta_dstPublish_rev = ConnectorInstance::meta_srcPublish;
		::Uml::SetAssocRole(ConnectorInstance::meta_dstConsume, ConnectorInstance::meta, ExtendPortEnd::meta, "srcConsume");
		Consume::meta_dstConsume_end_ = ExtendPortEnd::meta_srcConsume_rev = ConnectorInstance::meta_dstConsume;
		::Uml::SetAssocRole(ConnectorInstance::meta_dstConnectorToFacet, ConnectorInstance::meta, ProvidedRequestPortEnd::meta, "srcConnectorToFacet");
		ConnectorToFacet::meta_dstConnectorToFacet_end_ = ProvidedRequestPortEnd::meta_srcConnectorToFacet_rev = ConnectorInstance::meta_dstConnectorToFacet;
		::Uml::SetChildRole(ConnectorInstance::meta_AttributeInstance_children, ConnectorInstance::meta, AttributeInstance::meta, "", "");
		::Uml::SetChildRole(ConnectorInstance::meta_ConnectorImplementationType_child, ConnectorInstance::meta, ConnectorImplementationType::meta, "", "");
		::Uml::SetParentRole(ConnectorInstance::meta_ComponentAssembly_parent, ConnectorInstance::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ConnectorObject::meta_referedbyConnectorType, ConnectorObject::meta, ConnectorType::meta, "ref");
		::Uml::SetAssocRole(ConnectorObject::meta_referedbyConnectorInherits, ConnectorObject::meta, ConnectorInherits::meta, "ref");
		::Uml::SetChildRole(ConnectorObject::meta_Collection_children, ConnectorObject::meta, Collection::meta, "", "");
		::Uml::SetChildRole(ConnectorObject::meta_Aggregate_children, ConnectorObject::meta, Aggregate::meta, "", "");
		::Uml::SetChildRole(ConnectorObject::meta_ExtendedPortBase_children, ConnectorObject::meta, ExtendedPortBase::meta, "", "");
		::Uml::SetChildRole(ConnectorObject::meta_ConnectorInherits_child, ConnectorObject::meta, ConnectorInherits::meta, "", "");
		::Uml::SetChildRole(ConnectorObject::meta_ReadonlyAttribute_children, ConnectorObject::meta, ReadonlyAttribute::meta, "", "");
		::Uml::SetChildRole(ConnectorObject::meta_ObjectPort_children, ConnectorObject::meta, ObjectPort::meta, "", "");

		::Uml::SetParentRole(ConnectorToFacet::meta_ComponentAssembly_parent, ConnectorToFacet::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(ConnectorToReceptacle::meta_ComponentAssembly_parent, ConnectorToReceptacle::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ConnectorType::meta_ref, ConnectorType::meta, ConnectorObject::meta, "referedbyConnectorType");
		::Uml::SetAssocRole(ConnectorType::meta_srcConnectorImplements, ConnectorType::meta, ConnectorImplementation::meta, "dstConnectorImplements");
		ConnectorImplements::meta_srcConnectorImplements_end_ = ConnectorImplementation::meta_dstConnectorImplements_rev = ConnectorType::meta_srcConnectorImplements;
		::Uml::SetParentRole(ConnectorType::meta_ConnectorImplementationContainer_parent, ConnectorType::meta, ConnectorImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(Constant::meta_ref, Constant::meta, ConstantType::meta, "referedbyConstant");
		::Uml::SetParentRole(Constant::meta_HasOperations_parent, Constant::meta, HasOperations::meta, "", "");
		::Uml::SetParentRole(Constant::meta_File_parent, Constant::meta, File::meta, "", "");
		::Uml::SetParentRole(Constant::meta_Package_parent, Constant::meta, Package::meta, "", "");

		::Uml::SetAssocRole(ConstantType::meta_referedbyDiscriminator, ConstantType::meta, Discriminator::meta, "ref");
		::Uml::SetAssocRole(ConstantType::meta_referedbyConstant, ConstantType::meta, Constant::meta, "ref");

		::Uml::SetParentRole(Consume::meta_ComponentAssembly_parent, Consume::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(CriticalPath::meta_ComponentImplementationContainer_parent, CriticalPath::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetParentRole(DataAnalysisBase::meta_MetricsBase_parent, DataAnalysisBase::meta, MetricsBase::meta, "", "");
		::Uml::SetParentRole(DataAnalysisBase::meta_BenchmarkAnalysis_parent, DataAnalysisBase::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(DataType::meta_ref, DataType::meta, MemberType::meta, "referedbyDataType");
		::Uml::SetParentRole(DataType::meta_SatisfierProperty_parent, DataType::meta, SatisfierProperty::meta, "", "");
		::Uml::SetParentRole(DataType::meta_ComponentPropertyDescription_parent, DataType::meta, ComponentPropertyDescription::meta, "", "");

		::Uml::SetAssocRole(DataValue::meta_ref, DataValue::meta, SimpleType::meta, "referedbyDataValue");

		::Uml::SetParentRole(DataValueBase::meta_ComplexProperty_parent, DataValueBase::meta, ComplexProperty::meta, "", "");
		::Uml::SetParentRole(DataValueBase::meta_DataValueContainer_parent, DataValueBase::meta, DataValueContainer::meta, "", "");

		::Uml::SetChildRole(DataValueContainer::meta_DataValueBase_children, DataValueContainer::meta, DataValueBase::meta, "", "");
		::Uml::SetChildRole(DataValueContainer::meta_ComplexTypeReference_child, DataValueContainer::meta, ComplexTypeReference::meta, "", "");

		::Uml::SetChildRole(DeploymentPlan::meta_CollocationGroupProperty_children, DeploymentPlan::meta, CollocationGroupProperty::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_InstanceMapping_children, DeploymentPlan::meta, InstanceMapping::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_NodeReference_children, DeploymentPlan::meta, NodeReference::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_CollocationGroup_children, DeploymentPlan::meta, CollocationGroup::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_PropertyMapping_children, DeploymentPlan::meta, PropertyMapping::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_Property_children, DeploymentPlan::meta, Property::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_CollocationGroupMember_children, DeploymentPlan::meta, CollocationGroupMember::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_Deploys_children, DeploymentPlan::meta, Deploys::meta, "", "");
		::Uml::SetParentRole(DeploymentPlan::meta_DeploymentPlans_parent, DeploymentPlan::meta, DeploymentPlans::meta, "", "");

		::Uml::SetChildRole(DeploymentPlans::meta_DeploymentPlan_children, DeploymentPlans::meta, DeploymentPlan::meta, "", "");
		::Uml::SetParentRole(DeploymentPlans::meta_RootFolder_parent, DeploymentPlans::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(Deploys::meta_DeploymentPlan_parent, Deploys::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Discriminator::meta_ref, Discriminator::meta, ConstantType::meta, "referedbyDiscriminator");
		::Uml::SetParentRole(Discriminator::meta_SwitchedAggregate_parent, Discriminator::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetChildRole(Domain::meta_Property_children, Domain::meta, Property::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Shares_children, Domain::meta, Shares::meta, "", "");
		::Uml::SetChildRole(Domain::meta_SharedResource_children, Domain::meta, SharedResource::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Bridge_children, Domain::meta, Bridge::meta, "", "");
		::Uml::SetChildRole(Domain::meta_BridgeConnection_children, Domain::meta, BridgeConnection::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Node_children, Domain::meta, Node::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Interconnect_children, Domain::meta, Interconnect::meta, "", "");
		::Uml::SetChildRole(Domain::meta_InterconnectConnection_children, Domain::meta, InterconnectConnection::meta, "", "");
		::Uml::SetParentRole(Domain::meta_Targets_parent, Domain::meta, Targets::meta, "", "");

		::Uml::SetParentRole(DstEdge::meta_ConnectedComponent_parent, DstEdge::meta, ConnectedComponent::meta, "", "");
		::Uml::SetParentRole(DstEdge::meta_Path_parent, DstEdge::meta, Path::meta, "", "");

		::Uml::SetParentRole(ECBehavior::meta_ECRequirements_parent, ECBehavior::meta, ECRequirements::meta, "", "");

		::Uml::SetChildRole(ECRequirements::meta_ECRole_children, ECRequirements::meta, ECRole::meta, "", "");
		::Uml::SetChildRole(ECRequirements::meta_ECBehavior_child, ECRequirements::meta, ECBehavior::meta, "", "");

		::Uml::SetParentRole(ECRole::meta_ECRequirements_parent, ECRole::meta, ECRequirements::meta, "", "");

		::Uml::SetAssocRole(Edge::meta_dstSrcEdge, Edge::meta, GraphVertex::meta, "srcSrcEdge");
		SrcEdge::meta_dstSrcEdge_end_ = GraphVertex::meta_srcSrcEdge_rev = Edge::meta_dstSrcEdge;
		::Uml::SetAssocRole(Edge::meta_srcDstEdge, Edge::meta, GraphVertex::meta, "dstDstEdge");
		DstEdge::meta_srcDstEdge_end_ = GraphVertex::meta_dstDstEdge_rev = Edge::meta_srcDstEdge;
		::Uml::SetAssocRole(Edge::meta_srcPropertyConnector, Edge::meta, Property::meta, "dstPropertyConnector");
		EdgeProperty::meta_srcPropertyConnector_end_ = Property::meta_dstPropertyConnector_rev = Edge::meta_srcPropertyConnector;
		::Uml::SetParentRole(Edge::meta_Path_parent, Edge::meta, Path::meta, "", "");

		::Uml::SetParentRole(EdgeProperty::meta_Path_parent, EdgeProperty::meta, Path::meta, "", "");

		::Uml::SetParentRole(Effect::meta_BehaviorModel_parent, Effect::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(Enum::meta_EnumValue_children, Enum::meta, EnumValue::meta, "", "");

		::Uml::SetParentRole(EnumValue::meta_Enum_parent, EnumValue::meta, Enum::meta, "", "");

		::Uml::SetParentRole(Environment::meta_TopLevelBehavior_parent, Environment::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(Event::meta_referedbyEventRef, Event::meta, EventRef::meta, "ref");
		::Uml::SetParentRole(Event::meta_BenchmarkAnalysis_parent, Event::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(EventRef::meta_dstTimerEventSinkConn, EventRef::meta, TimeProbe::meta, "srcTimerEventSinkConn");
		TimerEventSinkConn::meta_dstTimerEventSinkConn_end_ = TimeProbe::meta_srcTimerEventSinkConn_rev = EventRef::meta_dstTimerEventSinkConn;
		::Uml::SetAssocRole(EventRef::meta_ref, EventRef::meta, Event::meta, "referedbyEventRef");
		::Uml::SetParentRole(EventRef::meta_BenchmarkAnalysis_parent, EventRef::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(EventSinkDelegate::meta_ComponentAssembly_parent, EventSinkDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(EventSourceDelegate::meta_ComponentAssembly_parent, EventSourceDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(EventType::meta_referedbyInEventPort, EventType::meta, InEventPort::meta, "ref");
		::Uml::SetAssocRole(EventType::meta_referedbyOutEventPort, EventType::meta, OutEventPort::meta, "ref");

		::Uml::SetChildRole(Exception::meta_Member_children, Exception::meta, Member::meta, "", "");
		::Uml::SetParentRole(Exception::meta_HasOperations_parent, Exception::meta, HasOperations::meta, "", "");
		::Uml::SetParentRole(Exception::meta_File_parent, Exception::meta, File::meta, "", "");
		::Uml::SetParentRole(Exception::meta_Package_parent, Exception::meta, Package::meta, "", "");

		::Uml::SetAssocRole(ExceptionRef::meta_ref, ExceptionRef::meta, ExceptionType::meta, "referedbyExceptionRef");
		::Uml::SetParentRole(ExceptionRef::meta_HasExceptions_parent, ExceptionRef::meta, HasExceptions::meta, "", "");

		::Uml::SetAssocRole(ExceptionType::meta_referedbyExceptionRef, ExceptionType::meta, ExceptionRef::meta, "ref");
		::Uml::SetAssocRole(ExceptionType::meta_referedbyGetException, ExceptionType::meta, GetException::meta, "ref");
		::Uml::SetAssocRole(ExceptionType::meta_referedbySetException, ExceptionType::meta, SetException::meta, "ref");

		::Uml::SetChildRole(ExecutorProject::meta_ImplementationArtifactReference_child, ExecutorProject::meta, ImplementationArtifactReference::meta, "", "");

		::Uml::SetParentRole(ExtResourceConn::meta_Project_parent, ExtResourceConn::meta, Project::meta, "", "");

		::Uml::SetAssocRole(ExtendPortEnd::meta_dstPublish, ExtendPortEnd::meta, ConnectorInstance::meta, "srcPublish");
		Publish::meta_dstPublish_end_ = ConnectorInstance::meta_srcPublish_rev = ExtendPortEnd::meta_dstPublish;
		::Uml::SetAssocRole(ExtendPortEnd::meta_srcConsume, ExtendPortEnd::meta, ConnectorInstance::meta, "dstConsume");
		Consume::meta_srcConsume_end_ = ConnectorInstance::meta_dstConsume_rev = ExtendPortEnd::meta_srcConsume;

		::Uml::SetParentRole(ExtendedDelegate::meta_ComponentAssembly_parent, ExtendedDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExtendedPort::meta_referedbyExtendedPortInstance, ExtendedPort::meta, ExtendedPortInstance::meta, "ref");

		::Uml::SetAssocRole(ExtendedPortBase::meta_ref, ExtendedPortBase::meta, PortType::meta, "referedbyExtendedPortBase");
		::Uml::SetParentRole(ExtendedPortBase::meta_Component_parent, ExtendedPortBase::meta, Component::meta, "", "");
		::Uml::SetParentRole(ExtendedPortBase::meta_ConnectorObject_parent, ExtendedPortBase::meta, ConnectorObject::meta, "", "");

		::Uml::SetAssocRole(ExtendedPortDelegate::meta_srcExtendedDelegate, ExtendedPortDelegate::meta, ExtendedPortInstanceBase::meta, "dstExtendedDelegate");
		ExtendedDelegate::meta_srcExtendedDelegate_end_ = ExtendedPortInstanceBase::meta_dstExtendedDelegate_rev = ExtendedPortDelegate::meta_srcExtendedDelegate;
		::Uml::SetParentRole(ExtendedPortDelegate::meta_ComponentAssembly_parent, ExtendedPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExtendedPortInstance::meta_ref, ExtendedPortInstance::meta, ExtendedPort::meta, "referedbyExtendedPortInstance");

		::Uml::SetAssocRole(ExtendedPortInstanceBase::meta_dstExtendedDelegate, ExtendedPortInstanceBase::meta, ExtendedPortDelegate::meta, "srcExtendedDelegate");
		ExtendedDelegate::meta_dstExtendedDelegate_end_ = ExtendedPortDelegate::meta_srcExtendedDelegate_rev = ExtendedPortInstanceBase::meta_dstExtendedDelegate;

		::Uml::SetParentRole(ExternalDelegate::meta_ComponentAssembly_parent, ExternalDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExternalPort::meta_dstExternalDelegate, ExternalPort::meta, ExternalPortEnd::meta, "srcExternalDelegate");
		ExternalDelegate::meta_dstExternalDelegate_end_ = ExternalPortEnd::meta_srcExternalDelegate_rev = ExternalPort::meta_dstExternalDelegate;
		::Uml::SetParentRole(ExternalPort::meta_ComponentAssembly_parent, ExternalPort::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExternalPortEnd::meta_srcExternalDelegate, ExternalPortEnd::meta, ExternalPort::meta, "dstExternalDelegate");
		ExternalDelegate::meta_srcExternalDelegate_end_ = ExternalPort::meta_dstExternalDelegate_rev = ExternalPortEnd::meta_srcExternalDelegate;

		::Uml::SetAssocRole(ExternalResources::meta_srcExtResourceConn, ExternalResources::meta, ComponentLib::meta, "dstExtResourceConn");
		ExtResourceConn::meta_srcExtResourceConn_end_ = ComponentLib::meta_dstExtResourceConn_rev = ExternalResources::meta_srcExtResourceConn;
		::Uml::SetAssocRole(ExternalResources::meta_ref, ExternalResources::meta, ImplementationArtifact::meta, "referedbyExternalResources");
		::Uml::SetParentRole(ExternalResources::meta_Project_parent, ExternalResources::meta, Project::meta, "", "");

		::Uml::SetParentRole(FacetDelegate::meta_ComponentAssembly_parent, FacetDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(FactoryOperation::meta_ObjectByValue_parent, FactoryOperation::meta, ObjectByValue::meta, "", "");
		::Uml::SetParentRole(FactoryOperation::meta_ComponentFactory_parent, FactoryOperation::meta, ComponentFactory::meta, "", "");

		::Uml::SetAssocRole(File::meta_referedbyFileRef, File::meta, FileRef::meta, "ref");
		::Uml::SetChildRole(File::meta_NativeValue_children, File::meta, NativeValue::meta, "", "");
		::Uml::SetChildRole(File::meta_ManagesComponent_children, File::meta, ManagesComponent::meta, "", "");
		::Uml::SetChildRole(File::meta_ComponentRef_children, File::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(File::meta_NamedType_children, File::meta, NamedType::meta, "", "");
		::Uml::SetChildRole(File::meta_Constant_children, File::meta, Constant::meta, "", "");
		::Uml::SetChildRole(File::meta_FileRef_children, File::meta, FileRef::meta, "", "");
		::Uml::SetChildRole(File::meta_Exception_children, File::meta, Exception::meta, "", "");
		::Uml::SetChildRole(File::meta_Package_children, File::meta, Package::meta, "", "");
		::Uml::SetParentRole(File::meta_InterfaceDefinitions_parent, File::meta, InterfaceDefinitions::meta, "", "");

		::Uml::SetAssocRole(FileRef::meta_ref, FileRef::meta, File::meta, "referedbyFileRef");
		::Uml::SetParentRole(FileRef::meta_File_parent, FileRef::meta, File::meta, "", "");
		::Uml::SetParentRole(FileRef::meta_ServantProject_parent, FileRef::meta, ServantProject::meta, "", "");
		::Uml::SetParentRole(FileRef::meta_StubProject_parent, FileRef::meta, StubProject::meta, "", "");

		::Uml::SetParentRole(Finish::meta_BehaviorModel_parent, Finish::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(GetException::meta_ref, GetException::meta, ExceptionType::meta, "referedbyGetException");
		::Uml::SetParentRole(GetException::meta_ReadonlyAttribute_parent, GetException::meta, ReadonlyAttribute::meta, "", "");

		::Uml::SetAssocRole(GraphVertex::meta_srcSrcEdge, GraphVertex::meta, Edge::meta, "dstSrcEdge");
		SrcEdge::meta_srcSrcEdge_end_ = Edge::meta_dstSrcEdge_rev = GraphVertex::meta_srcSrcEdge;
		::Uml::SetAssocRole(GraphVertex::meta_dstDstEdge, GraphVertex::meta, Edge::meta, "srcDstEdge");
		DstEdge::meta_dstDstEdge_end_ = Edge::meta_srcDstEdge_rev = GraphVertex::meta_dstDstEdge;
		::Uml::SetParentRole(GraphVertex::meta_Path_parent, GraphVertex::meta, Path::meta, "", "");

		::Uml::SetChildRole(HasExceptions::meta_ExceptionRef_children, HasExceptions::meta, ExceptionRef::meta, "", "");

		::Uml::SetChildRole(HasOperations::meta_NoInheritable_children, HasOperations::meta, NoInheritable::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_Constant_children, HasOperations::meta, Constant::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_Exception_children, HasOperations::meta, Exception::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_TwowayOperation_children, HasOperations::meta, TwowayOperation::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_OnewayOperation_children, HasOperations::meta, OnewayOperation::meta, "", "");

		::Uml::SetAssocRole(Implemenation::meta_dstInfoProperty, Implemenation::meta, Property::meta, "srcInfoProperty");
		InfoProperty::meta_dstInfoProperty_end_ = Property::meta_srcInfoProperty_rev = Implemenation::meta_dstInfoProperty;
		::Uml::SetAssocRole(Implemenation::meta_dstConfigProperty, Implemenation::meta, Property::meta, "srcConfigProperty");
		ConfigProperty::meta_dstConfigProperty_end_ = Property::meta_srcConfigProperty_rev = Implemenation::meta_dstConfigProperty;

		::Uml::SetParentRole(Implementation::meta_PackageContainer_parent, Implementation::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyComponentImplemenationArtifact, ImplementationArtifact::meta, ComponentImplementationArtifact::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyComponentServantArtifact, ImplementationArtifact::meta, ComponentServantArtifact::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDependency, ImplementationArtifact::meta, ImplementationArtifact::meta, "srcArtifactDependency");
		ArtifactDependency::meta_dstArtifactDependency_end_ = ImplementationArtifact::meta_srcArtifactDependency_rev = ImplementationArtifact::meta_dstArtifactDependency;
		::Uml::SetAssocRole(ImplementationArtifact::meta_srcArtifactDependency, ImplementationArtifact::meta, ImplementationArtifact::meta, "dstArtifactDependency");
		ArtifactDependency::meta_srcArtifactDependency_end_ = ImplementationArtifact::meta_dstArtifactDependency_rev = ImplementationArtifact::meta_srcArtifactDependency;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactInfoProperty, ImplementationArtifact::meta, Property::meta, "srcArtifactInfoProperty");
		ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_ = Property::meta_srcArtifactInfoProperty_rev = ImplementationArtifact::meta_dstArtifactInfoProperty;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactExecParameter, ImplementationArtifact::meta, Property::meta, "srcArtifactExecParameter");
		ArtifactExecParameter::meta_dstArtifactExecParameter_end_ = Property::meta_srcArtifactExecParameter_rev = ImplementationArtifact::meta_dstArtifactExecParameter;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDeployRequirement, ImplementationArtifact::meta, Requirement::meta, "srcArtifactDeployRequirement");
		ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_ = Requirement::meta_srcArtifactDeployRequirement_rev = ImplementationArtifact::meta_dstArtifactDeployRequirement;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDependsOn, ImplementationArtifact::meta, ImplementationArtifactReference::meta, "srcArtifactDependsOn");
		ArtifactDependsOn::meta_dstArtifactDependsOn_end_ = ImplementationArtifactReference::meta_srcArtifactDependsOn_rev = ImplementationArtifact::meta_dstArtifactDependsOn;
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyImplementationArtifactReference, ImplementationArtifact::meta, ImplementationArtifactReference::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyExternalResources, ImplementationArtifact::meta, ExternalResources::meta, "ref");
		::Uml::SetParentRole(ImplementationArtifact::meta_ArtifactContainer_parent, ImplementationArtifact::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifact::meta_Project_parent, ImplementationArtifact::meta, Project::meta, "", "");

		::Uml::SetAssocRole(ImplementationArtifactReference::meta_srcMonolithprimaryArtifact, ImplementationArtifactReference::meta, MonolithicImplementationBase::meta, "dstMonolithprimaryArtifact");
		MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_ = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;
		::Uml::SetAssocRole(ImplementationArtifactReference::meta_srcArtifactDependsOn, ImplementationArtifactReference::meta, ImplementationArtifact::meta, "dstArtifactDependsOn");
		ArtifactDependsOn::meta_srcArtifactDependsOn_end_ = ImplementationArtifact::meta_dstArtifactDependsOn_rev = ImplementationArtifactReference::meta_srcArtifactDependsOn;
		::Uml::SetAssocRole(ImplementationArtifactReference::meta_ref, ImplementationArtifactReference::meta, ImplementationArtifact::meta, "referedbyImplementationArtifactReference");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ImplementationContainer_parent, ImplementationArtifactReference::meta, ImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ArtifactContainer_parent, ImplementationArtifactReference::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ExecutorProject_parent, ImplementationArtifactReference::meta, ExecutorProject::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ServantProject_parent, ImplementationArtifactReference::meta, ServantProject::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_StubProject_parent, ImplementationArtifactReference::meta, StubProject::meta, "", "");

		::Uml::SetChildRole(ImplementationArtifacts::meta_ArtifactContainer_children, ImplementationArtifacts::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifacts::meta_RootFolder_parent, ImplementationArtifacts::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ImplementationCapability::meta_ComponentImplementationContainer_parent, ImplementationCapability::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ImplementationContainer::meta_Property_children, ImplementationContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ImplementationRequirement_children, ImplementationContainer::meta, ImplementationRequirement::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ImplementationArtifactReference_children, ImplementationContainer::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithExecParameter_children, ImplementationContainer::meta, MonolithExecParameter::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithDeployRequirement_children, ImplementationContainer::meta, MonolithDeployRequirement::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithprimaryArtifact_children, ImplementationContainer::meta, MonolithprimaryArtifact::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ConfigProperty_children, ImplementationContainer::meta, ConfigProperty::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_InfoProperty_children, ImplementationContainer::meta, InfoProperty::meta, "", "");

		::Uml::SetAssocRole(ImplementationDependency::meta_srcImplementationDependsOn, ImplementationDependency::meta, ComponentImplementation::meta, "dstImplementationDependsOn");
		ImplementationDependsOn::meta_srcImplementationDependsOn_end_ = ComponentImplementation::meta_dstImplementationDependsOn_rev = ImplementationDependency::meta_srcImplementationDependsOn;
		::Uml::SetParentRole(ImplementationDependency::meta_ComponentImplementationContainer_parent, ImplementationDependency::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetParentRole(ImplementationDependsOn::meta_ComponentImplementationContainer_parent, ImplementationDependsOn::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ImplementationRequirement::meta_srcMonolithDeployRequirement, ImplementationRequirement::meta, MonolithicImplementationBase::meta, "dstMonolithDeployRequirement");
		MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_ = MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev = ImplementationRequirement::meta_srcMonolithDeployRequirement;
		::Uml::SetParentRole(ImplementationRequirement::meta_ImplementationContainer_parent, ImplementationRequirement::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(Implements::meta_ComponentImplementationContainer_parent, Implements::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(InEventPort::meta_referedbyInEventPortInstance, InEventPort::meta, InEventPortInstance::meta, "ref");
		::Uml::SetAssocRole(InEventPort::meta_ref, InEventPort::meta, EventType::meta, "referedbyInEventPort");

		::Uml::SetAssocRole(InEventPortDelegate::meta_dstEventSinkDelegate, InEventPortDelegate::meta, InEventPortEnd::meta, "srcEventSinkDelegate");
		EventSinkDelegate::meta_dstEventSinkDelegate_end_ = InEventPortEnd::meta_srcEventSinkDelegate_rev = InEventPortDelegate::meta_dstEventSinkDelegate;
		::Uml::SetParentRole(InEventPortDelegate::meta_ComponentAssembly_parent, InEventPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(InEventPortEnd::meta_srcEventSinkDelegate, InEventPortEnd::meta, InEventPortDelegate::meta, "dstEventSinkDelegate");
		EventSinkDelegate::meta_srcEventSinkDelegate_end_ = InEventPortDelegate::meta_dstEventSinkDelegate_rev = InEventPortEnd::meta_srcEventSinkDelegate;
		::Uml::SetAssocRole(InEventPortEnd::meta_srcSendsTo, InEventPortEnd::meta, OutEventPortEnd::meta, "dstSendsTo");
		SendsTo::meta_srcSendsTo_end_ = OutEventPortEnd::meta_dstSendsTo_rev = InEventPortEnd::meta_srcSendsTo;

		::Uml::SetAssocRole(InEventPortInstance::meta_ref, InEventPortInstance::meta, InEventPort::meta, "referedbyInEventPortInstance");

		::Uml::SetParentRole(InParameter::meta_OperationBase_parent, InParameter::meta, OperationBase::meta, "", "");

		::Uml::SetParentRole(InfoProperty::meta_ImplementationContainer_parent, InfoProperty::meta, ImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(Inheritable::meta_referedbyInherits, Inheritable::meta, Inherits::meta, "ref");
		::Uml::SetChildRole(Inheritable::meta_ReadonlyAttribute_children, Inheritable::meta, ReadonlyAttribute::meta, "", "");
		::Uml::SetChildRole(Inheritable::meta_Inherits_children, Inheritable::meta, Inherits::meta, "", "");

		::Uml::SetAssocRole(Inherits::meta_ref, Inherits::meta, Inheritable::meta, "referedbyInherits");
		::Uml::SetParentRole(Inherits::meta_Inheritable_parent, Inherits::meta, Inheritable::meta, "", "");

		::Uml::SetParentRole(InoutParameter::meta_TwowayOperation_parent, InoutParameter::meta, TwowayOperation::meta, "", "");

		::Uml::SetParentRole(Input::meta_TopLevelBehavior_parent, Input::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(InputAction::meta_srcInput, InputAction::meta, SingleInputBase::meta, "dstInput");
		Input::meta_srcInput_end_ = SingleInputBase::meta_dstInput_rev = InputAction::meta_srcInput;

		::Uml::SetParentRole(InputEffect::meta_BehaviorModel_parent, InputEffect::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(InstanceMapping::meta_DeploymentPlan_parent, InstanceMapping::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Interconnect::meta_srcInterconnectConnection, Interconnect::meta, Node::meta, "dstInterconnectConnection");
		InterconnectConnection::meta_srcInterconnectConnection_end_ = Node::meta_dstInterconnectConnection_rev = Interconnect::meta_srcInterconnectConnection;
		::Uml::SetAssocRole(Interconnect::meta_dstBridgeConnection, Interconnect::meta, Bridge::meta, "srcBridgeConnection");
		BridgeConnection::meta_dstBridgeConnection_end_ = Bridge::meta_srcBridgeConnection_rev = Interconnect::meta_dstBridgeConnection;
		::Uml::SetChildRole(Interconnect::meta_Resource_children, Interconnect::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Interconnect::meta_Domain_parent, Interconnect::meta, Domain::meta, "", "");

		::Uml::SetParentRole(InterconnectConnection::meta_Domain_parent, InterconnectConnection::meta, Domain::meta, "", "");

		::Uml::SetChildRole(InterfaceDefinitions::meta_File_children, InterfaceDefinitions::meta, File::meta, "", "");
		::Uml::SetParentRole(InterfaceDefinitions::meta_RootFolder_parent, InterfaceDefinitions::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(Invoke::meta_ComponentAssembly_parent, Invoke::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(Key::meta_dstKeyMember, Key::meta, Member::meta, "srcKeyMember");
		KeyMember::meta_dstKeyMember_end_ = Member::meta_srcKeyMember_rev = Key::meta_dstKeyMember;
		::Uml::SetParentRole(Key::meta_Aggregate_parent, Key::meta, Aggregate::meta, "", "");

		::Uml::SetParentRole(KeyMember::meta_Aggregate_parent, KeyMember::meta, Aggregate::meta, "", "");

		::Uml::SetAssocRole(Label::meta_srcLabelConnection, Label::meta, Member::meta, "dstLabelConnection");
		LabelConnection::meta_srcLabelConnection_end_ = Member::meta_dstLabelConnection_rev = Label::meta_srcLabelConnection;
		::Uml::SetParentRole(Label::meta_SwitchedAggregate_parent, Label::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetParentRole(LabelConnection::meta_SwitchedAggregate_parent, LabelConnection::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetAssocRole(LookupKey::meta_ref, LookupKey::meta, LookupKeyType::meta, "referedbyLookupKey");
		::Uml::SetParentRole(LookupKey::meta_ComponentFactory_parent, LookupKey::meta, ComponentFactory::meta, "", "");

		::Uml::SetAssocRole(LookupKeyType::meta_referedbyLookupKey, LookupKeyType::meta, LookupKey::meta, "ref");

		::Uml::SetParentRole(LookupOperation::meta_ComponentFactory_parent, LookupOperation::meta, ComponentFactory::meta, "", "");

		::Uml::SetAssocRole(LoopState::meta_dstLoopTransition, LoopState::meta, ActionBase::meta, "srcLoopTransition");
		LoopTransition::meta_dstLoopTransition_end_ = ActionBase::meta_srcLoopTransition_rev = LoopState::meta_dstLoopTransition;

		::Uml::SetParentRole(LoopTransition::meta_BehaviorModel_parent, LoopTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(MPC::meta_Project_children, MPC::meta, Project::meta, "", "");
		::Uml::SetChildRole(MPC::meta_Workspaces_children, MPC::meta, Workspaces::meta, "", "");
		::Uml::SetParentRole(MPC::meta_ComponentBuild_parent, MPC::meta, ComponentBuild::meta, "", "");

		::Uml::SetParentRole(MakeMemberPrivate::meta_ObjectByValue_parent, MakeMemberPrivate::meta, ObjectByValue::meta, "", "");

		::Uml::SetAssocRole(Manageable::meta_srcManagesComponent, Manageable::meta, ComponentFactory::meta, "dstManagesComponent");
		ManagesComponent::meta_srcManagesComponent_end_ = ComponentFactory::meta_dstManagesComponent_rev = Manageable::meta_srcManagesComponent;

		::Uml::SetParentRole(ManagesComponent::meta_File_parent, ManagesComponent::meta, File::meta, "", "");
		::Uml::SetParentRole(ManagesComponent::meta_Package_parent, ManagesComponent::meta, Package::meta, "", "");

		::Uml::SetAssocRole(Member::meta_srcKeyMember, Member::meta, Key::meta, "dstKeyMember");
		KeyMember::meta_srcKeyMember_end_ = Key::meta_dstKeyMember_rev = Member::meta_srcKeyMember;
		::Uml::SetAssocRole(Member::meta_dstLabelConnection, Member::meta, Label::meta, "srcLabelConnection");
		LabelConnection::meta_dstLabelConnection_end_ = Label::meta_srcLabelConnection_rev = Member::meta_dstLabelConnection;
		::Uml::SetAssocRole(Member::meta_ref, Member::meta, MemberType::meta, "referedbyMember");
		::Uml::SetAssocRole(Member::meta_dstMakeMemberPrivate, Member::meta, PrivateFlag::meta, "srcMakeMemberPrivate");
		MakeMemberPrivate::meta_dstMakeMemberPrivate_end_ = PrivateFlag::meta_srcMakeMemberPrivate_rev = Member::meta_dstMakeMemberPrivate;
		::Uml::SetParentRole(Member::meta_ObjectByValue_parent, Member::meta, ObjectByValue::meta, "", "");
		::Uml::SetParentRole(Member::meta_SwitchedAggregate_parent, Member::meta, SwitchedAggregate::meta, "", "");
		::Uml::SetParentRole(Member::meta_Aggregate_parent, Member::meta, Aggregate::meta, "", "");
		::Uml::SetParentRole(Member::meta_Exception_parent, Member::meta, Exception::meta, "", "");

		::Uml::SetAssocRole(MemberType::meta_referedbySimpleProperty, MemberType::meta, SimpleProperty::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyDataType, MemberType::meta, DataType::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyParameterType, MemberType::meta, ParameterType::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyReturnType, MemberType::meta, ReturnType::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyAttributeMember, MemberType::meta, AttributeMember::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyMember, MemberType::meta, Member::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyBoxed, MemberType::meta, Boxed::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyAlias, MemberType::meta, Alias::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyCollection, MemberType::meta, Collection::meta, "ref");

		::Uml::SetParentRole(MetricConnection::meta_BenchmarkAnalysis_parent, MetricConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(MetricsBase::meta_srcBenchmarkCharacteristics, MetricsBase::meta, BenchmarkType::meta, "dstBenchmarkCharacteristics");
		BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_ = BenchmarkType::meta_dstBenchmarkCharacteristics_rev = MetricsBase::meta_srcBenchmarkCharacteristics;
		::Uml::SetAssocRole(MetricsBase::meta_srcMetricConnection, MetricsBase::meta, OperationRef::meta, "dstMetricConnection");
		MetricConnection::meta_srcMetricConnection_end_ = OperationRef::meta_dstMetricConnection_rev = MetricsBase::meta_srcMetricConnection;
		::Uml::SetAssocRole(MetricsBase::meta_dstWorkloadCharacteristics, MetricsBase::meta, TaskSet::meta, "srcWorkloadCharacteristics");
		WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_ = TaskSet::meta_srcWorkloadCharacteristics_rev = MetricsBase::meta_dstWorkloadCharacteristics;
		::Uml::SetChildRole(MetricsBase::meta_DataAnalysisBase_children, MetricsBase::meta, DataAnalysisBase::meta, "", "");
		::Uml::SetParentRole(MetricsBase::meta_BenchmarkAnalysis_parent, MetricsBase::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(MirrorDelegate::meta_ComponentAssembly_parent, MirrorDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(MirrorPort::meta_referedbyMirrorPortInstance, MirrorPort::meta, MirrorPortInstance::meta, "ref");

		::Uml::SetAssocRole(MirrorPortDelegate::meta_srcMirrorDelegate, MirrorPortDelegate::meta, MirrorPortInstanceBase::meta, "dstMirrorDelegate");
		MirrorDelegate::meta_srcMirrorDelegate_end_ = MirrorPortInstanceBase::meta_dstMirrorDelegate_rev = MirrorPortDelegate::meta_srcMirrorDelegate;
		::Uml::SetParentRole(MirrorPortDelegate::meta_ComponentAssembly_parent, MirrorPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(MirrorPortInstance::meta_ref, MirrorPortInstance::meta, MirrorPort::meta, "referedbyMirrorPortInstance");

		::Uml::SetAssocRole(MirrorPortInstanceBase::meta_dstMirrorDelegate, MirrorPortInstanceBase::meta, MirrorPortDelegate::meta, "srcMirrorDelegate");
		MirrorDelegate::meta_dstMirrorDelegate_end_ = MirrorPortDelegate::meta_srcMirrorDelegate_rev = MirrorPortInstanceBase::meta_dstMirrorDelegate;

		::Uml::SetParentRole(MonolithDeployRequirement::meta_ImplementationContainer_parent, MonolithDeployRequirement::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(MonolithExecParameter::meta_ImplementationContainer_parent, MonolithExecParameter::meta, ImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(MonolithicImplementation::meta_referedbyComponentInstanceType, MonolithicImplementation::meta, ComponentInstanceType::meta, "ref");

		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithprimaryArtifact, MonolithicImplementationBase::meta, ImplementationArtifactReference::meta, "srcMonolithprimaryArtifact");
		MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_ = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;
		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithExecParameter, MonolithicImplementationBase::meta, Property::meta, "srcMonolithExecParameter");
		MonolithExecParameter::meta_dstMonolithExecParameter_end_ = Property::meta_srcMonolithExecParameter_rev = MonolithicImplementationBase::meta_dstMonolithExecParameter;
		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithDeployRequirement, MonolithicImplementationBase::meta, ImplementationRequirement::meta, "srcMonolithDeployRequirement");
		MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_ = ImplementationRequirement::meta_srcMonolithDeployRequirement_rev = MonolithicImplementationBase::meta_dstMonolithDeployRequirement;

		::Uml::SetParentRole(MonolithprimaryArtifact::meta_ImplementationContainer_parent, MonolithprimaryArtifact::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(MultiInput::meta_TopLevelBehavior_parent, MultiInput::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(MultiInputAction::meta_srcMultiInput, MultiInputAction::meta, MultiInputBase::meta, "dstMultiInput");
		MultiInput::meta_srcMultiInput_end_ = MultiInputBase::meta_dstMultiInput_rev = MultiInputAction::meta_srcMultiInput;

		::Uml::SetAssocRole(MultiInputBase::meta_dstMultiInput, MultiInputBase::meta, MultiInputAction::meta, "srcMultiInput");
		MultiInput::meta_dstMultiInput_end_ = MultiInputAction::meta_srcMultiInput_rev = MultiInputBase::meta_dstMultiInput;

		::Uml::SetParentRole(MultipleServiceRequests::meta_ServiceProvider_parent, MultipleServiceRequests::meta, ServiceProvider::meta, "", "");

		::Uml::SetAssocRole(NameParameter::meta_referedbyCollectionParameter, NameParameter::meta, CollectionParameter::meta, "ref");

		::Uml::SetParentRole(NamedType::meta_File_parent, NamedType::meta, File::meta, "", "");
		::Uml::SetParentRole(NamedType::meta_Package_parent, NamedType::meta, Package::meta, "", "");

		::Uml::SetParentRole(NativeValue::meta_File_parent, NativeValue::meta, File::meta, "", "");
		::Uml::SetParentRole(NativeValue::meta_Package_parent, NativeValue::meta, Package::meta, "", "");

		::Uml::SetParentRole(NoInheritable::meta_HasOperations_parent, NoInheritable::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(Node::meta_referedbyNodeReference, Node::meta, NodeReference::meta, "ref");
		::Uml::SetAssocRole(Node::meta_dstInterconnectConnection, Node::meta, Interconnect::meta, "srcInterconnectConnection");
		InterconnectConnection::meta_dstInterconnectConnection_end_ = Interconnect::meta_srcInterconnectConnection_rev = Node::meta_dstInterconnectConnection;
		::Uml::SetAssocRole(Node::meta_dstShares, Node::meta, SharedResource::meta, "srcShares");
		Shares::meta_dstShares_end_ = SharedResource::meta_srcShares_rev = Node::meta_dstShares;
		::Uml::SetChildRole(Node::meta_Resource_children, Node::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Node::meta_Domain_parent, Node::meta, Domain::meta, "", "");

		::Uml::SetAssocRole(NodeReference::meta_ref, NodeReference::meta, Node::meta, "referedbyNodeReference");
		::Uml::SetAssocRole(NodeReference::meta_dstPropertyMapping, NodeReference::meta, Property::meta, "srcPropertyMapping");
		PropertyMapping::meta_dstPropertyMapping_end_ = Property::meta_srcPropertyMapping_rev = NodeReference::meta_dstPropertyMapping;
		::Uml::SetAssocRole(NodeReference::meta_srcInstanceMapping, NodeReference::meta, CollocationGroup::meta, "dstInstanceMapping");
		InstanceMapping::meta_srcInstanceMapping_end_ = CollocationGroup::meta_dstInstanceMapping_rev = NodeReference::meta_srcInstanceMapping;
		::Uml::SetParentRole(NodeReference::meta_DeploymentPlan_parent, NodeReference::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Object::meta_referedbySupports, Object::meta, Supports::meta, "ref");

		::Uml::SetChildRole(ObjectByValue::meta_Member_children, ObjectByValue::meta, Member::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_MakeMemberPrivate_children, ObjectByValue::meta, MakeMemberPrivate::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_PrivateFlag_children, ObjectByValue::meta, PrivateFlag::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_FactoryOperation_children, ObjectByValue::meta, FactoryOperation::meta, "", "");

		::Uml::SetParentRole(ObjectPort::meta_PortType_parent, ObjectPort::meta, PortType::meta, "", "");
		::Uml::SetParentRole(ObjectPort::meta_ConnectorObject_parent, ObjectPort::meta, ConnectorObject::meta, "", "");

		::Uml::SetParentRole(OnewayOperation::meta_HasOperations_parent, OnewayOperation::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(Operation::meta_referedbyActionType, Operation::meta, ActionType::meta, "ref");
		::Uml::SetChildRole(Operation::meta_ReturnType_child, Operation::meta, ReturnType::meta, "", "");
		::Uml::SetChildRole(Operation::meta_ParameterType_children, Operation::meta, ParameterType::meta, "", "");
		::Uml::SetParentRole(Operation::meta_Worker_parent, Operation::meta, Worker::meta, "", "");

		::Uml::SetAssocRole(OperationBase::meta_referedbyOperationRef, OperationBase::meta, OperationRef::meta, "ref");
		::Uml::SetChildRole(OperationBase::meta_InParameter_children, OperationBase::meta, InParameter::meta, "", "");
		::Uml::SetParentRole(OperationBase::meta_BenchmarkAnalysis_parent, OperationBase::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(OperationRef::meta_dstWorkLoadOperationConnection, OperationRef::meta, Task::meta, "srcWorkLoadOperationConnection");
		WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_ = Task::meta_srcWorkLoadOperationConnection_rev = OperationRef::meta_dstWorkLoadOperationConnection;
		::Uml::SetAssocRole(OperationRef::meta_dstTimerConnection, OperationRef::meta, TimeProbe::meta, "srcTimerConnection");
		TimerConnection::meta_dstTimerConnection_end_ = TimeProbe::meta_srcTimerConnection_rev = OperationRef::meta_dstTimerConnection;
		::Uml::SetAssocRole(OperationRef::meta_dstMetricConnection, OperationRef::meta, MetricsBase::meta, "srcMetricConnection");
		MetricConnection::meta_dstMetricConnection_end_ = MetricsBase::meta_srcMetricConnection_rev = OperationRef::meta_dstMetricConnection;
		::Uml::SetAssocRole(OperationRef::meta_dstComponentOperation, OperationRef::meta, CompRef::meta, "srcComponentOperation");
		ComponentOperation::meta_dstComponentOperation_end_ = CompRef::meta_srcComponentOperation_rev = OperationRef::meta_dstComponentOperation;
		::Uml::SetAssocRole(OperationRef::meta_ref, OperationRef::meta, OperationBase::meta, "referedbyOperationRef");
		::Uml::SetParentRole(OperationRef::meta_BenchmarkAnalysis_parent, OperationRef::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(OutEventPort::meta_referedbyOutEventPortInstance, OutEventPort::meta, OutEventPortInstance::meta, "ref");
		::Uml::SetAssocRole(OutEventPort::meta_ref, OutEventPort::meta, EventType::meta, "referedbyOutEventPort");

		::Uml::SetAssocRole(OutEventPortDelegate::meta_srcEventSourceDelegate, OutEventPortDelegate::meta, OutEventPortEnd::meta, "dstEventSourceDelegate");
		EventSourceDelegate::meta_srcEventSourceDelegate_end_ = OutEventPortEnd::meta_dstEventSourceDelegate_rev = OutEventPortDelegate::meta_srcEventSourceDelegate;
		::Uml::SetParentRole(OutEventPortDelegate::meta_ComponentAssembly_parent, OutEventPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(OutEventPortEnd::meta_dstEventSourceDelegate, OutEventPortEnd::meta, OutEventPortDelegate::meta, "srcEventSourceDelegate");
		EventSourceDelegate::meta_dstEventSourceDelegate_end_ = OutEventPortDelegate::meta_srcEventSourceDelegate_rev = OutEventPortEnd::meta_dstEventSourceDelegate;
		::Uml::SetAssocRole(OutEventPortEnd::meta_dstSendsTo, OutEventPortEnd::meta, InEventPortEnd::meta, "srcSendsTo");
		SendsTo::meta_dstSendsTo_end_ = InEventPortEnd::meta_srcSendsTo_rev = OutEventPortEnd::meta_dstSendsTo;

		::Uml::SetAssocRole(OutEventPortInstance::meta_ref, OutEventPortInstance::meta, OutEventPort::meta, "referedbyOutEventPortInstance");

		::Uml::SetParentRole(OutParameter::meta_TwowayOperation_parent, OutParameter::meta, TwowayOperation::meta, "", "");

		::Uml::SetAssocRole(Package::meta_referedbyPackageType, Package::meta, PackageType::meta, "ref");
		::Uml::SetChildRole(Package::meta_NativeValue_children, Package::meta, NativeValue::meta, "", "");
		::Uml::SetChildRole(Package::meta_TemplateParameter_children, Package::meta, TemplateParameter::meta, "", "");
		::Uml::SetChildRole(Package::meta_ManagesComponent_children, Package::meta, ManagesComponent::meta, "", "");
		::Uml::SetChildRole(Package::meta_ComponentRef_children, Package::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(Package::meta_NamedType_children, Package::meta, NamedType::meta, "", "");
		::Uml::SetChildRole(Package::meta_Constant_children, Package::meta, Constant::meta, "", "");
		::Uml::SetChildRole(Package::meta_Exception_children, Package::meta, Exception::meta, "", "");
		::Uml::SetChildRole(Package::meta_Package_children, Package::meta, Package::meta, "", "");
		::Uml::SetParentRole(Package::meta_File_parent, Package::meta, File::meta, "", "");
		::Uml::SetParentRole(Package::meta_Package_parent, Package::meta, Package::meta, "", "");

		::Uml::SetParentRole(PackageConfBasePackage::meta_PackageConfigurationContainer_parent, PackageConfBasePackage::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfConfigProperty::meta_PackageConfigurationContainer_parent, PackageConfConfigProperty::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfReference::meta_PackageConfigurationContainer_parent, PackageConfReference::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent, PackageConfSelectRequirement::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent, PackageConfSpecializedConfig::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfigProperty::meta_PackageContainer_parent, PackageConfigProperty::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfSpecializedConfig, PackageConfiguration::meta, PackageConfigurationReference::meta, "srcPackageConfSpecializedConfig");
		PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_ = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev = PackageConfiguration::meta_dstPackageConfSpecializedConfig;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfConfigProperty, PackageConfiguration::meta, Property::meta, "srcPackageConfConfigProperty");
		PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_ = Property::meta_srcPackageConfConfigProperty_rev = PackageConfiguration::meta_dstPackageConfConfigProperty;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfSelectRequirement, PackageConfiguration::meta, Requirement::meta, "srcPackageConfSelectRequirement");
		PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_ = Requirement::meta_srcPackageConfSelectRequirement_rev = PackageConfiguration::meta_dstPackageConfSelectRequirement;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfReference, PackageConfiguration::meta, ComponentPackageReference::meta, "srcPackageConfReference");
		PackageConfReference::meta_dstPackageConfReference_end_ = ComponentPackageReference::meta_srcPackageConfReference_rev = PackageConfiguration::meta_dstPackageConfReference;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfBasePackage, PackageConfiguration::meta, ComponentPackage::meta, "srcPackageConfBasePackage");
		PackageConfBasePackage::meta_dstPackageConfBasePackage_end_ = ComponentPackage::meta_srcPackageConfBasePackage_rev = PackageConfiguration::meta_dstPackageConfBasePackage;
		::Uml::SetAssocRole(PackageConfiguration::meta_referedbyPackageConfigurationReference, PackageConfiguration::meta, PackageConfigurationReference::meta, "ref");
		::Uml::SetParentRole(PackageConfiguration::meta_PackageConfigurationContainer_parent, PackageConfiguration::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetChildRole(PackageConfigurationContainer::meta_Property_children, PackageConfigurationContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfiguration_children, PackageConfigurationContainer::meta, PackageConfiguration::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child, PackageConfigurationContainer::meta, PackageConfSpecializedConfig::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_Requirement_children, PackageConfigurationContainer::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfSelectRequirement_children, PackageConfigurationContainer::meta, PackageConfSelectRequirement::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfConfigProperty_children, PackageConfigurationContainer::meta, PackageConfConfigProperty::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_ComponentPackageReference_child, PackageConfigurationContainer::meta, ComponentPackageReference::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_ComponentPackage_child, PackageConfigurationContainer::meta, ComponentPackage::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfReference_child, PackageConfigurationContainer::meta, PackageConfReference::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfBasePackage_child, PackageConfigurationContainer::meta, PackageConfBasePackage::meta, "", "");
		::Uml::SetParentRole(PackageConfigurationContainer::meta_PackageConfigurations_parent, PackageConfigurationContainer::meta, PackageConfigurations::meta, "", "");

		::Uml::SetAssocRole(PackageConfigurationReference::meta_srcPackageConfSpecializedConfig, PackageConfigurationReference::meta, PackageConfiguration::meta, "dstPackageConfSpecializedConfig");
		PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_ = PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;
		::Uml::SetAssocRole(PackageConfigurationReference::meta_ref, PackageConfigurationReference::meta, PackageConfiguration::meta, "referedbyPackageConfigurationReference");
		::Uml::SetAssocRole(PackageConfigurationReference::meta_srcpackage, PackageConfigurationReference::meta, TopLevelPackage::meta, "dstpackage");
		package::meta_srcpackage_end_ = TopLevelPackage::meta_dstpackage_rev = PackageConfigurationReference::meta_srcpackage;
		::Uml::SetParentRole(PackageConfigurationReference::meta_TopLevelPackageContainer_parent, PackageConfigurationReference::meta, TopLevelPackageContainer::meta, "", "");

		::Uml::SetChildRole(PackageConfigurations::meta_PackageConfigurationContainer_children, PackageConfigurations::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(PackageConfigurations::meta_RootFolder_parent, PackageConfigurations::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(PackageContainer::meta_Property_children, PackageContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentPackage_child, PackageContainer::meta, ComponentPackage::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_PackageInfoProperty_children, PackageContainer::meta, PackageInfoProperty::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_PackageConfigProperty_children, PackageContainer::meta, PackageConfigProperty::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentRef_child, PackageContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentImplementationReference_children, PackageContainer::meta, ComponentImplementationReference::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_Implementation_children, PackageContainer::meta, Implementation::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_PackageInterface_child, PackageContainer::meta, PackageInterface::meta, "", "");
		::Uml::SetParentRole(PackageContainer::meta_ComponentPackages_parent, PackageContainer::meta, ComponentPackages::meta, "", "");

		::Uml::SetParentRole(PackageInfoProperty::meta_PackageContainer_parent, PackageInfoProperty::meta, PackageContainer::meta, "", "");

		::Uml::SetParentRole(PackageInterface::meta_PackageContainer_parent, PackageInterface::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(PackageType::meta_ref, PackageType::meta, Package::meta, "referedbyPackageType");
		::Uml::SetParentRole(PackageType::meta_TemplatePackageAlias_parent, PackageType::meta, TemplatePackageAlias::meta, "", "");
		::Uml::SetParentRole(PackageType::meta_TemplatePackageInstance_parent, PackageType::meta, TemplatePackageInstance::meta, "", "");

		::Uml::SetAssocRole(ParameterType::meta_ref, ParameterType::meta, MemberType::meta, "referedbyParameterType");
		::Uml::SetParentRole(ParameterType::meta_Operation_parent, ParameterType::meta, Operation::meta, "", "");

		::Uml::SetAssocRole(Path::meta_referedbyPathReference, Path::meta, PathReference::meta, "ref");
		::Uml::SetAssocRole(Path::meta_dstPathProperty, Path::meta, Property::meta, "srcPathProperty");
		PathProperty::meta_dstPathProperty_end_ = Property::meta_srcPathProperty_rev = Path::meta_dstPathProperty;
		::Uml::SetChildRole(Path::meta_Property_children, Path::meta, Property::meta, "", "");
		::Uml::SetChildRole(Path::meta_GraphVertex_children, Path::meta, GraphVertex::meta, "", "");
		::Uml::SetChildRole(Path::meta_Edge_children, Path::meta, Edge::meta, "", "");
		::Uml::SetChildRole(Path::meta_EdgeProperty_children, Path::meta, EdgeProperty::meta, "", "");
		::Uml::SetChildRole(Path::meta_SrcEdge_children, Path::meta, SrcEdge::meta, "", "");
		::Uml::SetChildRole(Path::meta_ComponentRef_children, Path::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(Path::meta_DstEdge_children, Path::meta, DstEdge::meta, "", "");
		::Uml::SetParentRole(Path::meta_Paths_parent, Path::meta, Paths::meta, "", "");

		::Uml::SetChildRole(PathDiagrams::meta_Paths_children, PathDiagrams::meta, Paths::meta, "", "");
		::Uml::SetParentRole(PathDiagrams::meta_RootFolder_parent, PathDiagrams::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(PathProperty::meta_Paths_parent, PathProperty::meta, Paths::meta, "", "");

		::Uml::SetAssocRole(PathReference::meta_ref, PathReference::meta, Path::meta, "referedbyPathReference");
		::Uml::SetAssocRole(PathReference::meta_srcCriticalPath, PathReference::meta, ComponentAssembly::meta, "dstCriticalPath");
		CriticalPath::meta_srcCriticalPath_end_ = ComponentAssembly::meta_dstCriticalPath_rev = PathReference::meta_srcCriticalPath;
		::Uml::SetParentRole(PathReference::meta_ComponentImplementationContainer_parent, PathReference::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetChildRole(Paths::meta_Property_children, Paths::meta, Property::meta, "", "");
		::Uml::SetChildRole(Paths::meta_PathProperty_children, Paths::meta, PathProperty::meta, "", "");
		::Uml::SetChildRole(Paths::meta_Path_children, Paths::meta, Path::meta, "", "");
		::Uml::SetParentRole(Paths::meta_PathDiagrams_parent, Paths::meta, PathDiagrams::meta, "", "");

		::Uml::SetParentRole(PeriodicEvent::meta_TopLevelBehavior_parent, PeriodicEvent::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetParentRole(Port::meta_ConnectedComponent_parent, Port::meta, ConnectedComponent::meta, "", "");
		::Uml::SetParentRole(Port::meta_Component_parent, Port::meta, Component::meta, "", "");

		::Uml::SetParentRole(PortInstance::meta_ComponentInstance_parent, PortInstance::meta, ComponentInstance::meta, "", "");

		::Uml::SetAssocRole(PortType::meta_referedbyExtendedPortBase, PortType::meta, ExtendedPortBase::meta, "ref");
		::Uml::SetChildRole(PortType::meta_ReadonlyAttribute_children, PortType::meta, ReadonlyAttribute::meta, "", "");
		::Uml::SetChildRole(PortType::meta_ObjectPort_children, PortType::meta, ObjectPort::meta, "", "");

		::Uml::SetAssocRole(PredefinedType::meta_referedbyVariable, PredefinedType::meta, Variable::meta, "ref");
		::Uml::SetParentRole(PredefinedType::meta_PredefinedTypes_parent, PredefinedType::meta, PredefinedTypes::meta, "", "");

		::Uml::SetChildRole(PredefinedTypes::meta_PredefinedType_children, PredefinedTypes::meta, PredefinedType::meta, "", "");
		::Uml::SetParentRole(PredefinedTypes::meta_RootFolder_parent, PredefinedTypes::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(PrivateFlag::meta_srcMakeMemberPrivate, PrivateFlag::meta, Member::meta, "dstMakeMemberPrivate");
		MakeMemberPrivate::meta_srcMakeMemberPrivate_end_ = Member::meta_dstMakeMemberPrivate_rev = PrivateFlag::meta_srcMakeMemberPrivate;
		::Uml::SetParentRole(PrivateFlag::meta_ObjectByValue_parent, PrivateFlag::meta, ObjectByValue::meta, "", "");

		::Uml::SetAssocRole(Project::meta_setWorkspace, Project::meta, Workspaces::meta, "members");
		::Uml::SetChildRole(Project::meta_ImplementationArtifact_children, Project::meta, ImplementationArtifact::meta, "", "");
		::Uml::SetChildRole(Project::meta_ComponentLib_children, Project::meta, ComponentLib::meta, "", "");
		::Uml::SetChildRole(Project::meta_ExtResourceConn_children, Project::meta, ExtResourceConn::meta, "", "");
		::Uml::SetChildRole(Project::meta_ExternalResources_children, Project::meta, ExternalResources::meta, "", "");
		::Uml::SetParentRole(Project::meta_MPC_parent, Project::meta, MPC::meta, "", "");

		::Uml::SetAssocRole(Property::meta_srcMonolithExecParameter, Property::meta, MonolithicImplementationBase::meta, "dstMonolithExecParameter");
		MonolithExecParameter::meta_srcMonolithExecParameter_end_ = MonolithicImplementationBase::meta_dstMonolithExecParameter_rev = Property::meta_srcMonolithExecParameter;
		::Uml::SetAssocRole(Property::meta_srcInfoProperty, Property::meta, Implemenation::meta, "dstInfoProperty");
		InfoProperty::meta_srcInfoProperty_end_ = Implemenation::meta_dstInfoProperty_rev = Property::meta_srcInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcConfigProperty, Property::meta, Implemenation::meta, "dstConfigProperty");
		ConfigProperty::meta_srcConfigProperty_end_ = Implemenation::meta_dstConfigProperty_rev = Property::meta_srcConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcPathProperty, Property::meta, Path::meta, "dstPathProperty");
		PathProperty::meta_srcPathProperty_end_ = Path::meta_dstPathProperty_rev = Property::meta_srcPathProperty;
		::Uml::SetAssocRole(Property::meta_srcPropertyMapping, Property::meta, NodeReference::meta, "dstPropertyMapping");
		PropertyMapping::meta_srcPropertyMapping_end_ = NodeReference::meta_dstPropertyMapping_rev = Property::meta_srcPropertyMapping;
		::Uml::SetAssocRole(Property::meta_srcPackageConfConfigProperty, Property::meta, PackageConfiguration::meta, "dstPackageConfConfigProperty");
		PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_ = PackageConfiguration::meta_dstPackageConfConfigProperty_rev = Property::meta_srcPackageConfConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcArtifactInfoProperty, Property::meta, ImplementationArtifact::meta, "dstArtifactInfoProperty");
		ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_ = ImplementationArtifact::meta_dstArtifactInfoProperty_rev = Property::meta_srcArtifactInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcArtifactExecParameter, Property::meta, ImplementationArtifact::meta, "dstArtifactExecParameter");
		ArtifactExecParameter::meta_srcArtifactExecParameter_end_ = ImplementationArtifact::meta_dstArtifactExecParameter_rev = Property::meta_srcArtifactExecParameter;
		::Uml::SetAssocRole(Property::meta_srcPackageInfoProperty, Property::meta, ComponentPackage::meta, "dstPackageInfoProperty");
		PackageInfoProperty::meta_srcPackageInfoProperty_end_ = ComponentPackage::meta_dstPackageInfoProperty_rev = Property::meta_srcPackageInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcPackageConfigProperty, Property::meta, ComponentPackage::meta, "dstPackageConfigProperty");
		PackageConfigProperty::meta_srcPackageConfigProperty_end_ = ComponentPackage::meta_dstPackageConfigProperty_rev = Property::meta_srcPackageConfigProperty;
		::Uml::SetAssocRole(Property::meta_dstPropertyConnector, Property::meta, Edge::meta, "srcPropertyConnector");
		EdgeProperty::meta_dstPropertyConnector_end_ = Edge::meta_srcPropertyConnector_rev = Property::meta_dstPropertyConnector;
		::Uml::SetAssocRole(Property::meta_dstCollocationGroupProperty, Property::meta, CollocationGroup::meta, "srcCollocationGroupProperty");
		CollocationGroupProperty::meta_dstCollocationGroupProperty_end_ = CollocationGroup::meta_srcCollocationGroupProperty_rev = Property::meta_dstCollocationGroupProperty;
		::Uml::SetAssocRole(Property::meta_srcAssemblyConfigProperty, Property::meta, AssemblyConfigPropertyEnd::meta, "dstAssemblyConfigProperty");
		AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_ = AssemblyConfigPropertyEnd::meta_dstAssemblyConfigProperty_rev = Property::meta_srcAssemblyConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcAttributeMappingValue, Property::meta, AttributeMapping::meta, "dstAttributeMappingValue");
		AttributeMappingValue::meta_srcAttributeMappingValue_end_ = AttributeMapping::meta_dstAttributeMappingValue_rev = Property::meta_srcAttributeMappingValue;
		::Uml::SetAssocRole(Property::meta_srcAttributeValue, Property::meta, AttributeInstance::meta, "dstAttributeValue");
		AttributeValue::meta_srcAttributeValue_end_ = AttributeInstance::meta_dstAttributeValue_rev = Property::meta_srcAttributeValue;
		::Uml::SetAssocRole(Property::meta_srcComponentInfoProperty, Property::meta, ComponentRef::meta, "dstComponentInfoProperty");
		ComponentInfoProperty::meta_srcComponentInfoProperty_end_ = ComponentRef::meta_dstComponentInfoProperty_rev = Property::meta_srcComponentInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcComponentConfigProperty, Property::meta, ComponentRef::meta, "dstComponentConfigProperty");
		ComponentConfigProperty::meta_srcComponentConfigProperty_end_ = ComponentRef::meta_dstComponentConfigProperty_rev = Property::meta_srcComponentConfigProperty;
		::Uml::SetParentRole(Property::meta_ImplementationContainer_parent, Property::meta, ImplementationContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_Paths_parent, Property::meta, Paths::meta, "", "");
		::Uml::SetParentRole(Property::meta_Path_parent, Property::meta, Path::meta, "", "");
		::Uml::SetParentRole(Property::meta_DeploymentPlan_parent, Property::meta, DeploymentPlan::meta, "", "");
		::Uml::SetParentRole(Property::meta_PackageConfigurationContainer_parent, Property::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_ArtifactContainer_parent, Property::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_PackageContainer_parent, Property::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_RequirementBase_parent, Property::meta, RequirementBase::meta, "", "");
		::Uml::SetParentRole(Property::meta_Domain_parent, Property::meta, Domain::meta, "", "");
		::Uml::SetParentRole(Property::meta_ComponentAssembly_parent, Property::meta, ComponentAssembly::meta, "", "");
		::Uml::SetParentRole(Property::meta_ComponentContainer_parent, Property::meta, ComponentContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_QueryInputAction_parent, Property::meta, QueryInputAction::meta, "", "");
		::Uml::SetParentRole(Property::meta_ActionBase_parent, Property::meta, ActionBase::meta, "", "");
		::Uml::SetParentRole(Property::meta_BehaviorInputAction_parent, Property::meta, BehaviorInputAction::meta, "", "");

		::Uml::SetParentRole(PropertyMapping::meta_DeploymentPlan_parent, PropertyMapping::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Provideable::meta_referedbyRequiredRequestPort, Provideable::meta, RequiredRequestPort::meta, "ref");
		::Uml::SetAssocRole(Provideable::meta_referedbyProvidedRequestPort, Provideable::meta, ProvidedRequestPort::meta, "ref");

		::Uml::SetAssocRole(ProvidedRequestPort::meta_referedbyProvidedRequestPortInstance, ProvidedRequestPort::meta, ProvidedRequestPortInstance::meta, "ref");
		::Uml::SetAssocRole(ProvidedRequestPort::meta_ref, ProvidedRequestPort::meta, Provideable::meta, "referedbyProvidedRequestPort");

		::Uml::SetAssocRole(ProvidedRequestPortDelegate::meta_dstFacetDelegate, ProvidedRequestPortDelegate::meta, ProvidedRequestPortEnd::meta, "srcFacetDelegate");
		FacetDelegate::meta_dstFacetDelegate_end_ = ProvidedRequestPortEnd::meta_srcFacetDelegate_rev = ProvidedRequestPortDelegate::meta_dstFacetDelegate;
		::Uml::SetParentRole(ProvidedRequestPortDelegate::meta_ComponentAssembly_parent, ProvidedRequestPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ProvidedRequestPortEnd::meta_srcFacetDelegate, ProvidedRequestPortEnd::meta, ProvidedRequestPortDelegate::meta, "dstFacetDelegate");
		FacetDelegate::meta_srcFacetDelegate_end_ = ProvidedRequestPortDelegate::meta_dstFacetDelegate_rev = ProvidedRequestPortEnd::meta_srcFacetDelegate;
		::Uml::SetAssocRole(ProvidedRequestPortEnd::meta_srcinvoke, ProvidedRequestPortEnd::meta, RequiredRequestPortEnd::meta, "dstinvoke");
		Invoke::meta_srcinvoke_end_ = RequiredRequestPortEnd::meta_dstinvoke_rev = ProvidedRequestPortEnd::meta_srcinvoke;
		::Uml::SetAssocRole(ProvidedRequestPortEnd::meta_srcConnectorToFacet, ProvidedRequestPortEnd::meta, ConnectorInstance::meta, "dstConnectorToFacet");
		ConnectorToFacet::meta_srcConnectorToFacet_end_ = ConnectorInstance::meta_dstConnectorToFacet_rev = ProvidedRequestPortEnd::meta_srcConnectorToFacet;

		::Uml::SetAssocRole(ProvidedRequestPortInstance::meta_ref, ProvidedRequestPortInstance::meta, ProvidedRequestPort::meta, "referedbyProvidedRequestPortInstance");

		::Uml::SetParentRole(Publish::meta_ComponentAssembly_parent, Publish::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(QueryInput::meta_TopLevelBehavior_parent, QueryInput::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(QueryInputAction::meta_srcQueryInput, QueryInputAction::meta, QueryInputBase::meta, "dstQueryInput");
		QueryInput::meta_srcQueryInput_end_ = QueryInputBase::meta_dstQueryInput_rev = QueryInputAction::meta_srcQueryInput;
		::Uml::SetChildRole(QueryInputAction::meta_Property_children, QueryInputAction::meta, Property::meta, "", "");
		::Uml::SetParentRole(QueryInputAction::meta_BehaviorModel_parent, QueryInputAction::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(QueryInputBase::meta_dstQueryInput, QueryInputBase::meta, QueryInputAction::meta, "srcQueryInput");
		QueryInput::meta_dstQueryInput_end_ = QueryInputAction::meta_srcQueryInput_rev = QueryInputBase::meta_dstQueryInput;

		::Uml::SetChildRole(RTRequirements::meta_ServiceConsumer_child, RTRequirements::meta, ServiceConsumer::meta, "", "");
		::Uml::SetChildRole(RTRequirements::meta_ServiceProvider_child, RTRequirements::meta, ServiceProvider::meta, "", "");

		::Uml::SetAssocRole(ReadonlyAttribute::meta_referedbyAttributeInstance, ReadonlyAttribute::meta, AttributeInstance::meta, "ref");
		::Uml::SetChildRole(ReadonlyAttribute::meta_AttributeMember_child, ReadonlyAttribute::meta, AttributeMember::meta, "", "");
		::Uml::SetChildRole(ReadonlyAttribute::meta_GetException_children, ReadonlyAttribute::meta, GetException::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_Inheritable_parent, ReadonlyAttribute::meta, Inheritable::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_Component_parent, ReadonlyAttribute::meta, Component::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_PortType_parent, ReadonlyAttribute::meta, PortType::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_ConnectorObject_parent, ReadonlyAttribute::meta, ConnectorObject::meta, "", "");

		::Uml::SetParentRole(ReceptacleDelegate::meta_ComponentAssembly_parent, ReceptacleDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(RequiredRequestPort::meta_referedbyRequiredRequestPortInstance, RequiredRequestPort::meta, RequiredRequestPortInstance::meta, "ref");
		::Uml::SetAssocRole(RequiredRequestPort::meta_ref, RequiredRequestPort::meta, Provideable::meta, "referedbyRequiredRequestPort");
		::Uml::SetAssocRole(RequiredRequestPort::meta_referedbyTargetRequiredRequestPort, RequiredRequestPort::meta, TargetRequiredRequestPort::meta, "ref");

		::Uml::SetAssocRole(RequiredRequestPortDelegate::meta_dstReceptacleDelegate, RequiredRequestPortDelegate::meta, RequiredRequestPortEnd::meta, "srcReceptacleDelegate");
		ReceptacleDelegate::meta_dstReceptacleDelegate_end_ = RequiredRequestPortEnd::meta_srcReceptacleDelegate_rev = RequiredRequestPortDelegate::meta_dstReceptacleDelegate;
		::Uml::SetParentRole(RequiredRequestPortDelegate::meta_ComponentAssembly_parent, RequiredRequestPortDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(RequiredRequestPortEnd::meta_srcReceptacleDelegate, RequiredRequestPortEnd::meta, RequiredRequestPortDelegate::meta, "dstReceptacleDelegate");
		ReceptacleDelegate::meta_srcReceptacleDelegate_end_ = RequiredRequestPortDelegate::meta_dstReceptacleDelegate_rev = RequiredRequestPortEnd::meta_srcReceptacleDelegate;
		::Uml::SetAssocRole(RequiredRequestPortEnd::meta_dstConnectorToReceptacle, RequiredRequestPortEnd::meta, ConnectorInstance::meta, "srcConnectorToReceptacle");
		ConnectorToReceptacle::meta_dstConnectorToReceptacle_end_ = ConnectorInstance::meta_srcConnectorToReceptacle_rev = RequiredRequestPortEnd::meta_dstConnectorToReceptacle;
		::Uml::SetAssocRole(RequiredRequestPortEnd::meta_dstinvoke, RequiredRequestPortEnd::meta, ProvidedRequestPortEnd::meta, "srcinvoke");
		Invoke::meta_dstinvoke_end_ = ProvidedRequestPortEnd::meta_srcinvoke_rev = RequiredRequestPortEnd::meta_dstinvoke;

		::Uml::SetAssocRole(RequiredRequestPortInstance::meta_ref, RequiredRequestPortInstance::meta, RequiredRequestPort::meta, "referedbyRequiredRequestPortInstance");

		::Uml::SetAssocRole(Requirement::meta_srcPackageConfSelectRequirement, Requirement::meta, PackageConfiguration::meta, "dstPackageConfSelectRequirement");
		PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_ = PackageConfiguration::meta_dstPackageConfSelectRequirement_rev = Requirement::meta_srcPackageConfSelectRequirement;
		::Uml::SetAssocRole(Requirement::meta_srcArtifactDeployRequirement, Requirement::meta, ImplementationArtifact::meta, "dstArtifactDeployRequirement");
		ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_ = ImplementationArtifact::meta_dstArtifactDeployRequirement_rev = Requirement::meta_srcArtifactDeployRequirement;
		::Uml::SetAssocRole(Requirement::meta_srcAssemblyselectRequirement, Requirement::meta, AssemblyConfigPropertyEnd::meta, "dstAssemblyselectRequirement");
		AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_ = AssemblyConfigPropertyEnd::meta_dstAssemblyselectRequirement_rev = Requirement::meta_srcAssemblyselectRequirement;
		::Uml::SetParentRole(Requirement::meta_PackageConfigurationContainer_parent, Requirement::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(Requirement::meta_ArtifactContainer_parent, Requirement::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(Requirement::meta_ComponentAssembly_parent, Requirement::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(RequirementBase::meta_Property_children, RequirementBase::meta, Property::meta, "", "");

		::Uml::SetChildRole(RequirementSatisfier::meta_SatisfierProperty_children, RequirementSatisfier::meta, SatisfierProperty::meta, "", "");

		::Uml::SetParentRole(Resource::meta_Node_parent, Resource::meta, Node::meta, "", "");
		::Uml::SetParentRole(Resource::meta_Interconnect_parent, Resource::meta, Interconnect::meta, "", "");
		::Uml::SetParentRole(Resource::meta_Bridge_parent, Resource::meta, Bridge::meta, "", "");

		::Uml::SetAssocRole(ReturnType::meta_ref, ReturnType::meta, MemberType::meta, "referedbyReturnType");
		::Uml::SetParentRole(ReturnType::meta_TwowayOperation_parent, ReturnType::meta, TwowayOperation::meta, "", "");
		::Uml::SetParentRole(ReturnType::meta_Operation_parent, ReturnType::meta, Operation::meta, "", "");

		::Uml::SetChildRole(RootFolder::meta_ComponentFactoryImplementations_children, RootFolder::meta, ComponentFactoryImplementations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PathDiagrams_children, RootFolder::meta, PathDiagrams::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentAnalyses_children, RootFolder::meta, ComponentAnalyses::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_DeploymentPlans_children, RootFolder::meta, DeploymentPlans::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PackageConfigurations_children, RootFolder::meta, PackageConfigurations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ImplementationArtifacts_children, RootFolder::meta, ImplementationArtifacts::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_TopLevelPackages_children, RootFolder::meta, TopLevelPackages::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentPackages_children, RootFolder::meta, ComponentPackages::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_Targets_children, RootFolder::meta, Targets::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PredefinedTypes_children, RootFolder::meta, PredefinedTypes::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_InterfaceDefinitions_children, RootFolder::meta, InterfaceDefinitions::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentBuild_children, RootFolder::meta, ComponentBuild::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_WorkerLibraries_children, RootFolder::meta, WorkerLibraries::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentImplementations_children, RootFolder::meta, ComponentImplementations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentTypes_children, RootFolder::meta, ComponentTypes::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ConnectorImplementations_children, RootFolder::meta, ConnectorImplementations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_RootFolder_children, RootFolder::meta, RootFolder::meta, "", "");
		::Uml::SetParentRole(RootFolder::meta_RootFolder_parent, RootFolder::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(SatisfierProperty::meta_DataType_child, SatisfierProperty::meta, DataType::meta, "", "");
		::Uml::SetParentRole(SatisfierProperty::meta_RequirementSatisfier_parent, SatisfierProperty::meta, RequirementSatisfier::meta, "", "");

		::Uml::SetParentRole(SendsTo::meta_ComponentAssembly_parent, SendsTo::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(ServantProject::meta_FileRef_child, ServantProject::meta, FileRef::meta, "", "");
		::Uml::SetChildRole(ServantProject::meta_ImplementationArtifactReference_child, ServantProject::meta, ImplementationArtifactReference::meta, "", "");

		::Uml::SetParentRole(ServiceConsumer::meta_RTRequirements_parent, ServiceConsumer::meta, RTRequirements::meta, "", "");

		::Uml::SetParentRole(ServiceLevels::meta_ServiceProvider_parent, ServiceLevels::meta, ServiceProvider::meta, "", "");

		::Uml::SetChildRole(ServiceProvider::meta_ServiceLevels_child, ServiceProvider::meta, ServiceLevels::meta, "", "");
		::Uml::SetChildRole(ServiceProvider::meta_MultipleServiceRequests_child, ServiceProvider::meta, MultipleServiceRequests::meta, "", "");
		::Uml::SetParentRole(ServiceProvider::meta_RTRequirements_parent, ServiceProvider::meta, RTRequirements::meta, "", "");

		::Uml::SetAssocRole(SetException::meta_ref, SetException::meta, ExceptionType::meta, "referedbySetException");
		::Uml::SetParentRole(SetException::meta_Attribute_parent, SetException::meta, Attribute::meta, "", "");

		::Uml::SetAssocRole(SharedResource::meta_srcShares, SharedResource::meta, Node::meta, "dstShares");
		Shares::meta_srcShares_end_ = Node::meta_dstShares_rev = SharedResource::meta_srcShares;
		::Uml::SetParentRole(SharedResource::meta_Domain_parent, SharedResource::meta, Domain::meta, "", "");

		::Uml::SetParentRole(Shares::meta_Domain_parent, Shares::meta, Domain::meta, "", "");

		::Uml::SetAssocRole(SimpleProperty::meta_ref, SimpleProperty::meta, MemberType::meta, "referedbySimpleProperty");

		::Uml::SetAssocRole(SimpleType::meta_referedbyDataValue, SimpleType::meta, DataValue::meta, "ref");

		::Uml::SetAssocRole(SingleInputBase::meta_dstInput, SingleInputBase::meta, InputAction::meta, "srcInput");
		Input::meta_dstInput_end_ = InputAction::meta_srcInput_rev = SingleInputBase::meta_dstInput;

		::Uml::SetParentRole(SrcEdge::meta_Path_parent, SrcEdge::meta, Path::meta, "", "");

		::Uml::SetAssocRole(State::meta_dstTransition, State::meta, ActionBase::meta, "srcTransition");
		Transition::meta_dstTransition_end_ = ActionBase::meta_srcTransition_rev = State::meta_dstTransition;
		::Uml::SetAssocRole(State::meta_dstTerminalTransition, State::meta, Terminal::meta, "srcTerminalTransition");
		TerminalTransition::meta_dstTerminalTransition_end_ = Terminal::meta_srcTerminalTransition_rev = State::meta_dstTerminalTransition;

		::Uml::SetAssocRole(StateBase::meta_srcTerminalEffect, StateBase::meta, Terminal::meta, "dstTerminalEffect");
		TerminalEffect::meta_srcTerminalEffect_end_ = Terminal::meta_dstTerminalEffect_rev = StateBase::meta_srcTerminalEffect;
		::Uml::SetAssocRole(StateBase::meta_dstFinish, StateBase::meta, BehaviorInputAction::meta, "srcFinish");
		Finish::meta_dstFinish_end_ = BehaviorInputAction::meta_srcFinish_rev = StateBase::meta_dstFinish;
		::Uml::SetAssocRole(StateBase::meta_srcEffect, StateBase::meta, ActionBase::meta, "dstEffect");
		Effect::meta_srcEffect_end_ = ActionBase::meta_dstEffect_rev = StateBase::meta_srcEffect;
		::Uml::SetAssocRole(StateBase::meta_srcInputEffect, StateBase::meta, BehaviorInputAction::meta, "dstInputEffect");
		InputEffect::meta_srcInputEffect_end_ = BehaviorInputAction::meta_dstInputEffect_rev = StateBase::meta_srcInputEffect;
		::Uml::SetParentRole(StateBase::meta_BehaviorModel_parent, StateBase::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(StubProject::meta_FileRef_child, StubProject::meta, FileRef::meta, "", "");
		::Uml::SetChildRole(StubProject::meta_ImplementationArtifactReference_child, StubProject::meta, ImplementationArtifactReference::meta, "", "");

		::Uml::SetAssocRole(Supports::meta_ref, Supports::meta, ::PICML::Object::meta, "referedbySupports");
		::Uml::SetAssocRole(Supports::meta_referedbySupportsInstance, Supports::meta, SupportsInstance::meta, "ref");
		::Uml::SetParentRole(Supports::meta_SupportsInterfaces_parent, Supports::meta, SupportsInterfaces::meta, "", "");

		::Uml::SetAssocRole(SupportsInstance::meta_ref, SupportsInstance::meta, Supports::meta, "referedbySupportsInstance");
		::Uml::SetParentRole(SupportsInstance::meta_ComponentInstance_parent, SupportsInstance::meta, ComponentInstance::meta, "", "");

		::Uml::SetChildRole(SupportsInterfaces::meta_Supports_children, SupportsInterfaces::meta, Supports::meta, "", "");

		::Uml::SetChildRole(SwitchedAggregate::meta_LabelConnection_children, SwitchedAggregate::meta, LabelConnection::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Discriminator_child, SwitchedAggregate::meta, Discriminator::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Member_children, SwitchedAggregate::meta, Member::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Label_children, SwitchedAggregate::meta, Label::meta, "", "");

		::Uml::SetAssocRole(TargetRequiredRequestPort::meta_ref, TargetRequiredRequestPort::meta, RequiredRequestPort::meta, "referedbyTargetRequiredRequestPort");
		::Uml::SetParentRole(TargetRequiredRequestPort::meta_CallAction_parent, TargetRequiredRequestPort::meta, CallAction::meta, "", "");

		::Uml::SetChildRole(Targets::meta_Domain_children, Targets::meta, Domain::meta, "", "");
		::Uml::SetParentRole(Targets::meta_RootFolder_parent, Targets::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(Task::meta_setTaskSet, Task::meta, TaskSet::meta, "members");
		::Uml::SetAssocRole(Task::meta_srcWorkLoadOperationConnection, Task::meta, OperationRef::meta, "dstWorkLoadOperationConnection");
		WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_ = OperationRef::meta_dstWorkLoadOperationConnection_rev = Task::meta_srcWorkLoadOperationConnection;
		::Uml::SetParentRole(Task::meta_BenchmarkAnalysis_parent, Task::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(TaskSet::meta_members, TaskSet::meta, Task::meta, "setTaskSet");
		::Uml::SetAssocRole(TaskSet::meta_srcWorkloadCharacteristics, TaskSet::meta, MetricsBase::meta, "dstWorkloadCharacteristics");
		WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_ = MetricsBase::meta_dstWorkloadCharacteristics_rev = TaskSet::meta_srcWorkloadCharacteristics;
		::Uml::SetParentRole(TaskSet::meta_BenchmarkAnalysis_parent, TaskSet::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetChildRole(TemplatePackageAlias::meta_PackageType_child, TemplatePackageAlias::meta, PackageType::meta, "", "");
		::Uml::SetChildRole(TemplatePackageAlias::meta_TemplateParameterReference_children, TemplatePackageAlias::meta, TemplateParameterReference::meta, "", "");

		::Uml::SetChildRole(TemplatePackageInstance::meta_TemplateParameterValue_children, TemplatePackageInstance::meta, TemplateParameterValue::meta, "", "");
		::Uml::SetChildRole(TemplatePackageInstance::meta_PackageType_child, TemplatePackageInstance::meta, PackageType::meta, "", "");

		::Uml::SetAssocRole(TemplateParameter::meta_referedbyTemplateParameterReference, TemplateParameter::meta, TemplateParameterReference::meta, "ref");
		::Uml::SetParentRole(TemplateParameter::meta_Package_parent, TemplateParameter::meta, Package::meta, "", "");

		::Uml::SetAssocRole(TemplateParameterReference::meta_ref, TemplateParameterReference::meta, TemplateParameter::meta, "referedbyTemplateParameterReference");
		::Uml::SetParentRole(TemplateParameterReference::meta_TemplatePackageAlias_parent, TemplateParameterReference::meta, TemplatePackageAlias::meta, "", "");

		::Uml::SetAssocRole(TemplateParameterValue::meta_ref, TemplateParameterValue::meta, TemplateParameterValueType::meta, "referedbyTemplateParameterValue");
		::Uml::SetParentRole(TemplateParameterValue::meta_TemplatePackageInstance_parent, TemplateParameterValue::meta, TemplatePackageInstance::meta, "", "");

		::Uml::SetAssocRole(TemplateParameterValueType::meta_referedbyTemplateParameterValue, TemplateParameterValueType::meta, TemplateParameterValue::meta, "ref");

		::Uml::SetAssocRole(Terminal::meta_dstTerminalEffect, Terminal::meta, StateBase::meta, "srcTerminalEffect");
		TerminalEffect::meta_dstTerminalEffect_end_ = StateBase::meta_srcTerminalEffect_rev = Terminal::meta_dstTerminalEffect;
		::Uml::SetAssocRole(Terminal::meta_srcTerminalTransition, Terminal::meta, State::meta, "dstTerminalTransition");
		TerminalTransition::meta_srcTerminalTransition_end_ = State::meta_dstTerminalTransition_rev = Terminal::meta_srcTerminalTransition;
		::Uml::SetParentRole(Terminal::meta_BehaviorModel_parent, Terminal::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(TerminalEffect::meta_BehaviorModel_parent, TerminalEffect::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(TerminalTransition::meta_BehaviorModel_parent, TerminalTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(TimeProbe::meta_srcTimerEventSinkConn, TimeProbe::meta, EventRef::meta, "dstTimerEventSinkConn");
		TimerEventSinkConn::meta_srcTimerEventSinkConn_end_ = EventRef::meta_dstTimerEventSinkConn_rev = TimeProbe::meta_srcTimerEventSinkConn;
		::Uml::SetAssocRole(TimeProbe::meta_srcTimerConnection, TimeProbe::meta, OperationRef::meta, "dstTimerConnection");
		TimerConnection::meta_srcTimerConnection_end_ = OperationRef::meta_dstTimerConnection_rev = TimeProbe::meta_srcTimerConnection;
		::Uml::SetParentRole(TimeProbe::meta_BenchmarkAnalysis_parent, TimeProbe::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(TimerConnection::meta_BenchmarkAnalysis_parent, TimerConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(TimerEventSinkConn::meta_BenchmarkAnalysis_parent, TimerEventSinkConn::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetChildRole(TopLevelBehavior::meta_WorkerType_children, TopLevelBehavior::meta, WorkerType::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_QueryInput_children, TopLevelBehavior::meta, QueryInput::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_Input_children, TopLevelBehavior::meta, Input::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_MultiInput_children, TopLevelBehavior::meta, MultiInput::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_Environment_child, TopLevelBehavior::meta, Environment::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_ApplicationTask_children, TopLevelBehavior::meta, ApplicationTask::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_PeriodicEvent_children, TopLevelBehavior::meta, PeriodicEvent::meta, "", "");

		::Uml::SetAssocRole(TopLevelPackage::meta_dstpackage, TopLevelPackage::meta, PackageConfigurationReference::meta, "srcpackage");
		package::meta_dstpackage_end_ = PackageConfigurationReference::meta_srcpackage_rev = TopLevelPackage::meta_dstpackage;
		::Uml::SetParentRole(TopLevelPackage::meta_TopLevelPackageContainer_parent, TopLevelPackage::meta, TopLevelPackageContainer::meta, "", "");

		::Uml::SetChildRole(TopLevelPackageContainer::meta_package_child, TopLevelPackageContainer::meta, package::meta, "", "");
		::Uml::SetChildRole(TopLevelPackageContainer::meta_TopLevelPackage_child, TopLevelPackageContainer::meta, TopLevelPackage::meta, "", "");
		::Uml::SetChildRole(TopLevelPackageContainer::meta_PackageConfigurationReference_child, TopLevelPackageContainer::meta, PackageConfigurationReference::meta, "", "");
		::Uml::SetParentRole(TopLevelPackageContainer::meta_TopLevelPackages_parent, TopLevelPackageContainer::meta, TopLevelPackages::meta, "", "");

		::Uml::SetChildRole(TopLevelPackages::meta_TopLevelPackageContainer_children, TopLevelPackages::meta, TopLevelPackageContainer::meta, "", "");
		::Uml::SetParentRole(TopLevelPackages::meta_RootFolder_parent, TopLevelPackages::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(Transition::meta_BehaviorModel_parent, Transition::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(TwowayOperation::meta_ReturnType_child, TwowayOperation::meta, ReturnType::meta, "", "");
		::Uml::SetChildRole(TwowayOperation::meta_OutParameter_children, TwowayOperation::meta, OutParameter::meta, "", "");
		::Uml::SetChildRole(TwowayOperation::meta_InoutParameter_children, TwowayOperation::meta, InoutParameter::meta, "", "");
		::Uml::SetParentRole(TwowayOperation::meta_HasOperations_parent, TwowayOperation::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(Variable::meta_ref, Variable::meta, PredefinedType::meta, "referedbyVariable");
		::Uml::SetParentRole(Variable::meta_BehaviorModel_parent, Variable::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent, WorkLoadOperationConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Worker::meta_referedbyWorkerType, Worker::meta, WorkerType::meta, "ref");
		::Uml::SetChildRole(Worker::meta_Operation_children, Worker::meta, Operation::meta, "", "");
		::Uml::SetParentRole(Worker::meta_WorkerPackageBase_parent, Worker::meta, WorkerPackageBase::meta, "", "");

		::Uml::SetChildRole(WorkerFile::meta_WorkerPackage_children, WorkerFile::meta, WorkerPackage::meta, "", "");
		::Uml::SetParentRole(WorkerFile::meta_WorkerLibrary_parent, WorkerFile::meta, WorkerLibrary::meta, "", "");

		::Uml::SetChildRole(WorkerLibraries::meta_WorkerLibrary_children, WorkerLibraries::meta, WorkerLibrary::meta, "", "");
		::Uml::SetParentRole(WorkerLibraries::meta_RootFolder_parent, WorkerLibraries::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(WorkerLibrary::meta_WorkerFile_children, WorkerLibrary::meta, WorkerFile::meta, "", "");
		::Uml::SetParentRole(WorkerLibrary::meta_WorkerLibraries_parent, WorkerLibrary::meta, WorkerLibraries::meta, "", "");

		::Uml::SetChildRole(WorkerPackage::meta_WorkerPackage_children, WorkerPackage::meta, WorkerPackage::meta, "", "");
		::Uml::SetParentRole(WorkerPackage::meta_WorkerPackage_parent, WorkerPackage::meta, WorkerPackage::meta, "", "");
		::Uml::SetParentRole(WorkerPackage::meta_WorkerFile_parent, WorkerPackage::meta, WorkerFile::meta, "", "");

		::Uml::SetChildRole(WorkerPackageBase::meta_Worker_children, WorkerPackageBase::meta, Worker::meta, "", "");

		::Uml::SetAssocRole(WorkerType::meta_ref, WorkerType::meta, Worker::meta, "referedbyWorkerType");
		::Uml::SetParentRole(WorkerType::meta_TopLevelBehavior_parent, WorkerType::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetParentRole(WorkloadCharacteristics::meta_BenchmarkAnalysis_parent, WorkloadCharacteristics::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Workspaces::meta_members, Workspaces::meta, Project::meta, "setWorkspace");
		::Uml::SetParentRole(Workspaces::meta_MPC_parent, Workspaces::meta, MPC::meta, "", "");

		::Uml::SetParentRole(package::meta_TopLevelPackageContainer_parent, package::meta, TopLevelPackageContainer::meta, "", "");

	}

	Visitor::~Visitor() {}

	void Visitor::Visit_ComponentImplementationArtifact(const ComponentImplementationArtifact &) {}
	void Visitor::Visit_ComponentServantArtifact(const ComponentServantArtifact &) {}
	void Visitor::Visit_MonolithExecParameter(const MonolithExecParameter &) {}
	void Visitor::Visit_MonolithDeployRequirement(const MonolithDeployRequirement &) {}
	void Visitor::Visit_MonolithprimaryArtifact(const MonolithprimaryArtifact &) {}
	void Visitor::Visit_InfoProperty(const InfoProperty &) {}
	void Visitor::Visit_ConfigProperty(const ConfigProperty &) {}
	void Visitor::Visit_ComponentFactoryInstance(const ComponentFactoryInstance &) {}
	void Visitor::Visit_ComponentFactoryImplementationContainer(const ComponentFactoryImplementationContainer &) {}
	void Visitor::Visit_ComponentFactoryImplementations(const ComponentFactoryImplementations &) {}
	void Visitor::Visit_ServiceConsumer(const ServiceConsumer &) {}
	void Visitor::Visit_MultipleServiceRequests(const MultipleServiceRequests &) {}
	void Visitor::Visit_ServiceLevels(const ServiceLevels &) {}
	void Visitor::Visit_ServiceProvider(const ServiceProvider &) {}
	void Visitor::Visit_RTRequirements(const RTRequirements &) {}
	void Visitor::Visit_ECRole(const ECRole &) {}
	void Visitor::Visit_ECRequirements(const ECRequirements &) {}
	void Visitor::Visit_ECBehavior(const ECBehavior &) {}
	void Visitor::Visit_PathReference(const PathReference &) {}
	void Visitor::Visit_PathProperty(const PathProperty &) {}
	void Visitor::Visit_Paths(const Paths &) {}
	void Visitor::Visit_DisplayNode(const DisplayNode &) {}
	void Visitor::Visit_Edge(const Edge &) {}
	void Visitor::Visit_EdgeProperty(const EdgeProperty &) {}
	void Visitor::Visit_SrcEdge(const SrcEdge &) {}
	void Visitor::Visit_DstEdge(const DstEdge &) {}
	void Visitor::Visit_PathDiagrams(const PathDiagrams &) {}
	void Visitor::Visit_ConnectedComponent(const ConnectedComponent &) {}
	void Visitor::Visit_Path(const Path &) {}
	void Visitor::Visit_BenchmarkCharacteristics(const BenchmarkCharacteristics &) {}
	void Visitor::Visit_PeriodicBenchmarks(const PeriodicBenchmarks &) {}
	void Visitor::Visit_TriggerBenchmarks(const TriggerBenchmarks &) {}
	void Visitor::Visit_WorkLoadOperationConnection(const WorkLoadOperationConnection &) {}
	void Visitor::Visit_FixedIterationBenchmarks(const FixedIterationBenchmarks &) {}
	void Visitor::Visit_CompRef(const CompRef &) {}
	void Visitor::Visit_ComponentOperation(const ComponentOperation &) {}
	void Visitor::Visit_WorkloadCharacteristics(const WorkloadCharacteristics &) {}
	void Visitor::Visit_Task(const Task &) {}
	void Visitor::Visit_TaskSet(const TaskSet &) {}
	void Visitor::Visit_TimerEventSinkConn(const TimerEventSinkConn &) {}
	void Visitor::Visit_EventRef(const EventRef &) {}
	void Visitor::Visit_OperationRef(const OperationRef &) {}
	void Visitor::Visit_ComponentAnalyses(const ComponentAnalyses &) {}
	void Visitor::Visit_BenchmarkAnalysis(const BenchmarkAnalysis &) {}
	void Visitor::Visit_Throughput(const Throughput &) {}
	void Visitor::Visit_Latency(const Latency &) {}
	void Visitor::Visit_TimerConnection(const TimerConnection &) {}
	void Visitor::Visit_TimeProbe(const TimeProbe &) {}
	void Visitor::Visit_Jitter(const Jitter &) {}
	void Visitor::Visit_Maximum(const Maximum &) {}
	void Visitor::Visit_Minimum(const Minimum &) {}
	void Visitor::Visit_Average(const Average &) {}
	void Visitor::Visit_MetricConnection(const MetricConnection &) {}
	void Visitor::Visit_Resource(const Resource &) {}
	void Visitor::Visit_SharedResource(const SharedResource &) {}
	void Visitor::Visit_NodeReference(const NodeReference &) {}
	void Visitor::Visit_Node(const Node &) {}
	void Visitor::Visit_Interconnect(const Interconnect &) {}
	void Visitor::Visit_Bridge(const Bridge &) {}
	void Visitor::Visit_CollocationGroupProperty(const CollocationGroupProperty &) {}
	void Visitor::Visit_PropertyMapping(const PropertyMapping &) {}
	void Visitor::Visit_ComponentInstanceRef(const ComponentInstanceRef &) {}
	void Visitor::Visit_Deploys(const Deploys &) {}
	void Visitor::Visit_ComponentFactoryRef(const ComponentFactoryRef &) {}
	void Visitor::Visit_CollocationGroup(const CollocationGroup &) {}
	void Visitor::Visit_DeploymentPlans(const DeploymentPlans &) {}
	void Visitor::Visit_InstanceMapping(const InstanceMapping &) {}
	void Visitor::Visit_DeploymentPlan(const DeploymentPlan &) {}
	void Visitor::Visit_PackageConfiguration(const PackageConfiguration &) {}
	void Visitor::Visit_PackageConfSpecializedConfig(const PackageConfSpecializedConfig &) {}
	void Visitor::Visit_PackageConfSelectRequirement(const PackageConfSelectRequirement &) {}
	void Visitor::Visit_PackageConfConfigProperty(const PackageConfConfigProperty &) {}
	void Visitor::Visit_PackageConfigurations(const PackageConfigurations &) {}
	void Visitor::Visit_PackageConfigurationContainer(const PackageConfigurationContainer &) {}
	void Visitor::Visit_PackageConfigurationReference(const PackageConfigurationReference &) {}
	void Visitor::Visit_PackageConfReference(const PackageConfReference &) {}
	void Visitor::Visit_PackageConfBasePackage(const PackageConfBasePackage &) {}
	void Visitor::Visit_ArtifactDependency(const ArtifactDependency &) {}
	void Visitor::Visit_ImplementationArtifact(const ImplementationArtifact &) {}
	void Visitor::Visit_ArtifactInfoProperty(const ArtifactInfoProperty &) {}
	void Visitor::Visit_ArtifactContainer(const ArtifactContainer &) {}
	void Visitor::Visit_ArtifactExecParameter(const ArtifactExecParameter &) {}
	void Visitor::Visit_ArtifactDeployRequirement(const ArtifactDeployRequirement &) {}
	void Visitor::Visit_ArtifactDependsOn(const ArtifactDependsOn &) {}
	void Visitor::Visit_ImplementationArtifactReference(const ImplementationArtifactReference &) {}
	void Visitor::Visit_ImplementationArtifacts(const ImplementationArtifacts &) {}
	void Visitor::Visit_package(const package &) {}
	void Visitor::Visit_TopLevelPackages(const TopLevelPackages &) {}
	void Visitor::Visit_TopLevelPackage(const TopLevelPackage &) {}
	void Visitor::Visit_TopLevelPackageContainer(const TopLevelPackageContainer &) {}
	void Visitor::Visit_ComponentPackage(const ComponentPackage &) {}
	void Visitor::Visit_PackageInfoProperty(const PackageInfoProperty &) {}
	void Visitor::Visit_ComponentPackageReference(const ComponentPackageReference &) {}
	void Visitor::Visit_PackageContainer(const PackageContainer &) {}
	void Visitor::Visit_PackageConfigProperty(const PackageConfigProperty &) {}
	void Visitor::Visit_Implementation(const Implementation &) {}
	void Visitor::Visit_PackageInterface(const PackageInterface &) {}
	void Visitor::Visit_ComponentPackages(const ComponentPackages &) {}
	void Visitor::Visit_ComplexProperty(const ComplexProperty &) {}
	void Visitor::Visit_SimpleProperty(const SimpleProperty &) {}
	void Visitor::Visit_DataValue(const DataValue &) {}
	void Visitor::Visit_DataValueContainer(const DataValueContainer &) {}
	void Visitor::Visit_ComplexTypeReference(const ComplexTypeReference &) {}
	void Visitor::Visit_DataType(const DataType &) {}
	void Visitor::Visit_ImplementationRequirement(const ImplementationRequirement &) {}
	void Visitor::Visit_Capability(const Capability &) {}
	void Visitor::Visit_SatisfierProperty(const SatisfierProperty &) {}
	void Visitor::Visit_ImplementationDependency(const ImplementationDependency &) {}
	void Visitor::Visit_Requirement(const Requirement &) {}
	void Visitor::Visit_Shares(const Shares &) {}
	void Visitor::Visit_Targets(const Targets &) {}
	void Visitor::Visit_Domain(const Domain &) {}
	void Visitor::Visit_BridgeConnection(const BridgeConnection &) {}
	void Visitor::Visit_InterconnectConnection(const InterconnectConnection &) {}
	void Visitor::Visit_ReturnType(const ReturnType &) {}
	void Visitor::Visit_OutParameter(const OutParameter &) {}
	void Visitor::Visit_InoutParameter(const InoutParameter &) {}
	void Visitor::Visit_InParameter(const InParameter &) {}
	void Visitor::Visit_OnewayOperation(const OnewayOperation &) {}
	void Visitor::Visit_TwowayOperation(const TwowayOperation &) {}
	void Visitor::Visit_LookupOperation(const LookupOperation &) {}
	void Visitor::Visit_FactoryOperation(const FactoryOperation &) {}
	void Visitor::Visit_ExceptionRef(const ExceptionRef &) {}
	void Visitor::Visit_AttributeMember(const AttributeMember &) {}
	void Visitor::Visit_MakeMemberPrivate(const MakeMemberPrivate &) {}
	void Visitor::Visit_PrivateFlag(const PrivateFlag &) {}
	void Visitor::Visit_GetException(const GetException &) {}
	void Visitor::Visit_SetException(const SetException &) {}
	void Visitor::Visit_Attribute(const Attribute &) {}
	void Visitor::Visit_ReadonlyAttribute(const ReadonlyAttribute &) {}
	void Visitor::Visit_Supports(const Supports &) {}
	void Visitor::Visit_ValueObject(const ValueObject &) {}
	void Visitor::Visit_Event(const Event &) {}
	void Visitor::Visit_Inherits(const Inherits &) {}
	void Visitor::Visit_Object(const Object &) {}
	void Visitor::Visit_Key(const Key &) {}
	void Visitor::Visit_KeyMember(const KeyMember &) {}
	void Visitor::Visit_ArrayMember(const ArrayMember &) {}
	void Visitor::Visit_Member(const Member &) {}
	void Visitor::Visit_Boxed(const Boxed &) {}
	void Visitor::Visit_Alias(const Alias &) {}
	void Visitor::Visit_Collection(const Collection &) {}
	void Visitor::Visit_Discriminator(const Discriminator &) {}
	void Visitor::Visit_LabelConnection(const LabelConnection &) {}
	void Visitor::Visit_SwitchedAggregate(const SwitchedAggregate &) {}
	void Visitor::Visit_Label(const Label &) {}
	void Visitor::Visit_Aggregate(const Aggregate &) {}
	void Visitor::Visit_EnumValue(const EnumValue &) {}
	void Visitor::Visit_Enum(const Enum &) {}
	void Visitor::Visit_Char(const Char &) {}
	void Visitor::Visit_WideString(const WideString &) {}
	void Visitor::Visit_WideChar(const WideChar &) {}
	void Visitor::Visit_UnsignedLongInteger(const UnsignedLongInteger &) {}
	void Visitor::Visit_UnsignedLongLongInteger(const UnsignedLongLongInteger &) {}
	void Visitor::Visit_UnsignedShortInteger(const UnsignedShortInteger &) {}
	void Visitor::Visit_LongLongInteger(const LongLongInteger &) {}
	void Visitor::Visit_LongDoubleNumber(const LongDoubleNumber &) {}
	void Visitor::Visit_DoubleNumber(const DoubleNumber &) {}
	void Visitor::Visit_TypeKind(const TypeKind &) {}
	void Visitor::Visit_TypeEncoding(const TypeEncoding &) {}
	void Visitor::Visit_GenericValue(const GenericValue &) {}
	void Visitor::Visit_GenericValueObject(const GenericValueObject &) {}
	void Visitor::Visit_GenericObject(const GenericObject &) {}
	void Visitor::Visit_FloatNumber(const FloatNumber &) {}
	void Visitor::Visit_LongInteger(const LongInteger &) {}
	void Visitor::Visit_ShortInteger(const ShortInteger &) {}
	void Visitor::Visit_Boolean(const Boolean &) {}
	void Visitor::Visit_Byte(const Byte &) {}
	void Visitor::Visit_PredefinedTypes(const PredefinedTypes &) {}
	void Visitor::Visit_String(const String &) {}
	void Visitor::Visit_TemplatePackageAlias(const TemplatePackageAlias &) {}
	void Visitor::Visit_TemplateParameterReference(const TemplateParameterReference &) {}
	void Visitor::Visit_NativeValue(const NativeValue &) {}
	void Visitor::Visit_TypeParameter(const TypeParameter &) {}
	void Visitor::Visit_TemplateParameterValue(const TemplateParameterValue &) {}
	void Visitor::Visit_TemplatePackageInstance(const TemplatePackageInstance &) {}
	void Visitor::Visit_PackageType(const PackageType &) {}
	void Visitor::Visit_CollectionParameter(const CollectionParameter &) {}
	void Visitor::Visit_NameParameter(const NameParameter &) {}
	void Visitor::Visit_Constant(const Constant &) {}
	void Visitor::Visit_InterfaceDefinitions(const InterfaceDefinitions &) {}
	void Visitor::Visit_FileRef(const FileRef &) {}
	void Visitor::Visit_Exception(const Exception &) {}
	void Visitor::Visit_File(const File &) {}
	void Visitor::Visit_Package(const Package &) {}
	void Visitor::Visit_Workspaces(const Workspaces &) {}
	void Visitor::Visit_ExecutorProject(const ExecutorProject &) {}
	void Visitor::Visit_ServantProject(const ServantProject &) {}
	void Visitor::Visit_StubProject(const StubProject &) {}
	void Visitor::Visit_MPC(const MPC &) {}
	void Visitor::Visit_ExtResourceConn(const ExtResourceConn &) {}
	void Visitor::Visit_ExternalResources(const ExternalResources &) {}
	void Visitor::Visit_Project(const Project &) {}
	void Visitor::Visit_ComponentBuild(const ComponentBuild &) {}
	void Visitor::Visit_ExternalPort(const ExternalPort &) {}
	void Visitor::Visit_ComponentAssemblyReference(const ComponentAssemblyReference &) {}
	void Visitor::Visit_ComponentAssembly(const ComponentAssembly &) {}
	void Visitor::Visit_ExtendedDelegate(const ExtendedDelegate &) {}
	void Visitor::Visit_ExtendedPortDelegate(const ExtendedPortDelegate &) {}
	void Visitor::Visit_MirrorDelegate(const MirrorDelegate &) {}
	void Visitor::Visit_MirrorPortDelegate(const MirrorPortDelegate &) {}
	void Visitor::Visit_ConnectorToFacet(const ConnectorToFacet &) {}
	void Visitor::Visit_ConnectorToReceptacle(const ConnectorToReceptacle &) {}
	void Visitor::Visit_ProvidedRequestPortDelegate(const ProvidedRequestPortDelegate &) {}
	void Visitor::Visit_RequiredRequestPortDelegate(const RequiredRequestPortDelegate &) {}
	void Visitor::Visit_OutEventPortDelegate(const OutEventPortDelegate &) {}
	void Visitor::Visit_InEventPortDelegate(const InEventPortDelegate &) {}
	void Visitor::Visit_Consume(const Consume &) {}
	void Visitor::Visit_Publish(const Publish &) {}
	void Visitor::Visit_AttributeMappingDelegate(const AttributeMappingDelegate &) {}
	void Visitor::Visit_AttributeMappingValue(const AttributeMappingValue &) {}
	void Visitor::Visit_AttributeMapping(const AttributeMapping &) {}
	void Visitor::Visit_AttributeDelegate(const AttributeDelegate &) {}
	void Visitor::Visit_AttributeValue(const AttributeValue &) {}
	void Visitor::Visit_ExternalDelegate(const ExternalDelegate &) {}
	void Visitor::Visit_EventSinkDelegate(const EventSinkDelegate &) {}
	void Visitor::Visit_EventSourceDelegate(const EventSourceDelegate &) {}
	void Visitor::Visit_FacetDelegate(const FacetDelegate &) {}
	void Visitor::Visit_ReceptacleDelegate(const ReceptacleDelegate &) {}
	void Visitor::Visit_SendsTo(const SendsTo &) {}
	void Visitor::Visit_AssemblyConfigProperty(const AssemblyConfigProperty &) {}
	void Visitor::Visit_AssemblyselectRequirement(const AssemblyselectRequirement &) {}
	void Visitor::Visit_Invoke(const Invoke &) {}
	void Visitor::Visit_Operation(const Operation &) {}
	void Visitor::Visit_WorkerPackage(const WorkerPackage &) {}
	void Visitor::Visit_WorkerFile(const WorkerFile &) {}
	void Visitor::Visit_WorkerLibraries(const WorkerLibraries &) {}
	void Visitor::Visit_Worker(const Worker &) {}
	void Visitor::Visit_WorkerLibrary(const WorkerLibrary &) {}
	void Visitor::Visit_SupportsInstance(const SupportsInstance &) {}
	void Visitor::Visit_RequiredRequestPortInstance(const RequiredRequestPortInstance &) {}
	void Visitor::Visit_InEventPortInstance(const InEventPortInstance &) {}
	void Visitor::Visit_ProvidedRequestPortInstance(const ProvidedRequestPortInstance &) {}
	void Visitor::Visit_OutEventPortInstance(const OutEventPortInstance &) {}
	void Visitor::Visit_MirrorPortInstance(const MirrorPortInstance &) {}
	void Visitor::Visit_ExtendedPortInstance(const ExtendedPortInstance &) {}
	void Visitor::Visit_AttributeInstance(const AttributeInstance &) {}
	void Visitor::Visit_ComponentInstanceType(const ComponentInstanceType &) {}
	void Visitor::Visit_ComponentInstance(const ComponentInstance &) {}
	void Visitor::Visit_ComponentRef(const ComponentRef &) {}
	void Visitor::Visit_InEventPort(const InEventPort &) {}
	void Visitor::Visit_RequiredRequestPort(const RequiredRequestPort &) {}
	void Visitor::Visit_ProvidedRequestPort(const ProvidedRequestPort &) {}
	void Visitor::Visit_OutEventPort(const OutEventPort &) {}
	void Visitor::Visit_Component(const Component &) {}
	void Visitor::Visit_LookupKey(const LookupKey &) {}
	void Visitor::Visit_MirrorPort(const MirrorPort &) {}
	void Visitor::Visit_ComponentInherits(const ComponentInherits &) {}
	void Visitor::Visit_PortType(const PortType &) {}
	void Visitor::Visit_ExtendedPort(const ExtendedPort &) {}
	void Visitor::Visit_ComponentFactory(const ComponentFactory &) {}
	void Visitor::Visit_ManagesComponent(const ManagesComponent &) {}
	void Visitor::Visit_CriticalPath(const CriticalPath &) {}
	void Visitor::Visit_MonolithicImplementation(const MonolithicImplementation &) {}
	void Visitor::Visit_ComponentImplementationContainer(const ComponentImplementationContainer &) {}
	void Visitor::Visit_ComponentImplementationReference(const ComponentImplementationReference &) {}
	void Visitor::Visit_ComponentImplementations(const ComponentImplementations &) {}
	void Visitor::Visit_Implements(const Implements &) {}
	void Visitor::Visit_ImplementationDependsOn(const ImplementationDependsOn &) {}
	void Visitor::Visit_ImplementationCapability(const ImplementationCapability &) {}
	void Visitor::Visit_ComponentInfoProperty(const ComponentInfoProperty &) {}
	void Visitor::Visit_ComponentConfigProperty(const ComponentConfigProperty &) {}
	void Visitor::Visit_ComponentContainer(const ComponentContainer &) {}
	void Visitor::Visit_ComponentProperty(const ComponentProperty &) {}
	void Visitor::Visit_ComponentPropertyDescription(const ComponentPropertyDescription &) {}
	void Visitor::Visit_ComponentTypes(const ComponentTypes &) {}
	void Visitor::Visit_ConnectorType(const ConnectorType &) {}
	void Visitor::Visit_ConnectorImplements(const ConnectorImplements &) {}
	void Visitor::Visit_ConnectorImplementation(const ConnectorImplementation &) {}
	void Visitor::Visit_ConnectorImplementationContainer(const ConnectorImplementationContainer &) {}
	void Visitor::Visit_ConnectorImplementations(const ConnectorImplementations &) {}
	void Visitor::Visit_ConnectorImplementationType(const ConnectorImplementationType &) {}
	void Visitor::Visit_ConnectorInstance(const ConnectorInstance &) {}
	void Visitor::Visit_ConnectorInherits(const ConnectorInherits &) {}
	void Visitor::Visit_ConnectorObject(const ConnectorObject &) {}
	void Visitor::Visit_TerminalEffect(const TerminalEffect &) {}
	void Visitor::Visit_InputEffect(const InputEffect &) {}
	void Visitor::Visit_Effect(const Effect &) {}
	void Visitor::Visit_TerminalTransition(const TerminalTransition &) {}
	void Visitor::Visit_Terminal(const Terminal &) {}
	void Visitor::Visit_LoopTransition(const LoopTransition &) {}
	void Visitor::Visit_WhileState(const WhileState &) {}
	void Visitor::Visit_DoWhileState(const DoWhileState &) {}
	void Visitor::Visit_ForState(const ForState &) {}
	void Visitor::Visit_BranchTransition(const BranchTransition &) {}
	void Visitor::Visit_BranchState(const BranchState &) {}
	void Visitor::Visit_State(const State &) {}
	void Visitor::Visit_Transition(const Transition &) {}
	void Visitor::Visit_TargetRequiredRequestPort(const TargetRequiredRequestPort &) {}
	void Visitor::Visit_CallAction(const CallAction &) {}
	void Visitor::Visit_ActionType(const ActionType &) {}
	void Visitor::Visit_RequestAction(const RequestAction &) {}
	void Visitor::Visit_InputAction(const InputAction &) {}
	void Visitor::Visit_QueryInputAction(const QueryInputAction &) {}
	void Visitor::Visit_MultiInputAction(const MultiInputAction &) {}
	void Visitor::Visit_QueryAction(const QueryAction &) {}
	void Visitor::Visit_Finish(const Finish &) {}
	void Visitor::Visit_OutputAction(const OutputAction &) {}
	void Visitor::Visit_Action(const Action &) {}
	void Visitor::Visit_Variable(const Variable &) {}
	void Visitor::Visit_QueryInput(const QueryInput &) {}
	void Visitor::Visit_MultiInput(const MultiInput &) {}
	void Visitor::Visit_Input(const Input &) {}
	void Visitor::Visit_WorkerType(const WorkerType &) {}
	void Visitor::Visit_ApplicationTask(const ApplicationTask &) {}
	void Visitor::Visit_PeriodicEvent(const PeriodicEvent &) {}
	void Visitor::Visit_Environment(const Environment &) {}
	void Visitor::Visit_RootFolder(const RootFolder &) {}
	void Visitor::Visit_Object(const ::Udm::Object &) {}

	PICML_Export void Initialize()
	{
		static bool first = true;
		if (!first) return;
		first = false;
		::Uml::Initialize();

	
		UDM_ASSERT( meta == ::Udm::null );

		::UdmStatic::StaticDataNetwork * meta_dn = new ::UdmStatic::StaticDataNetwork(::Uml::diagram);
		meta_dn->CreateNew("PICML.mem", "", ::Uml::Diagram::meta, ::Udm::CHANGES_LOST_DEFAULT);
		meta = ::Uml::Diagram::Cast(meta_dn->GetRootObject());

		::Uml::InitDiagramProps(meta, "PICML", "1.00");


		CreateMeta();
		InitMeta();
		InitMetaLinks();

	}

	PICML_Export void Initialize(const ::Uml::Diagram &dgr)
	{
		
		if (meta == dgr) return;
		meta = dgr;

		InitMeta(dgr);
		InitMetaLinks(dgr);

		
		
	}


	PICML_Export  ::Udm::UdmDiagram diagram = { &meta, Initialize };
	static struct _regClass
	{
		_regClass()
		{
			::Udm::MetaDepository::StoreDiagram("PICML", diagram);
		}
		~_regClass()
		{
			::Udm::MetaDepository::RemoveDiagram("PICML");
		}
	} __regUnUsed;

}

