.:: $Id$ ::.

This document is a roadmap for CoSMIC. It lists user visible
changes for each upcoming version of CoSMIC. This document can
therefore help to better plan your CoSMIC usage, as well as help
us better plan for what changes should be included in each
upcoming version of CoSMIC. This, however, depends on the
amout of effort required to complete the given change.

USER VISIBLE CHANGES FOR CoSMIC-0.8.1 (tentative 8/4/2010)
===========================================================

. Delegation of extended/mirror ports

. Support for generating valid descriptor information for
  AMI4CCM connections.

. Support process/thread specification for plan locality
  managers.

. Support specification of CPU or CPU core affinity for each
  process/thread.

. Complete support for managing ComplexType elements via the
  Property Manager, and expose the Property Manager icon on
  the toolbar.

. Generation of a nodemap.dat file in conjunction with the
  auto-generated .cdd file. The name of the auto-generated
  file will be the same as the deployment plan.

. When making a connection between a Facet/Receptacle and
  Connector the PICML Model Intelligence either (1) auto-complete
  the connection name or (2) display a dialog for selecting the
  correct connection name.

. Support for deployment of ComponentAssembly elements under
  the new modeling semantics for PICML.

USER VISIBLE CHANGES FOR CoSMIC-0.8.2 (tentative 8/25/2010)
===========================================================

. Placement of Property elements in their own aspect when
  viewing a ComponentAssembly to reduce *clutter*.

. Introduction of SimpleProperty and ComplexProperty model
  element. The SimpleProperty will be used for setting the
  values of PredefinedType and Enum element. The ComplexProperty
  will be use to set the values for Aggregate, SwitchedAggregate,
  and Collection elements.

. Expansion of TemplateModule elements into their concrete
  artifacts. This will make it easier to determine the actual
  type of a parameter. Likewise, you can then use the concrete
  types like *traditional* elements.
