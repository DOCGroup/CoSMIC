Tue Jan 11 21:56:25 UTC 2011  James H. Hill  <hillj at cs dot iupui dot edu>

        * game/FCO.cpp:

          Bug fix where the in_connections () was throwing a runtime
          execution because of a null pointer.

        * game/Collection_T.cpp:

          Removed unnecessary comments.

        * game/graphics/Port_Decorator.cpp:

          Removed the 'static' keyword from the Gdiplus objects.

        * tests/mga/Visitor:

          Updated the svn:ignore property.

        * tests/tests.mwc:

          Missing workspace file.

Tue Jan 11 17:22:03 UTC 2011  James H. Hill  <hillj at cs dot iupui dot edu>

        * GAME.mwc:

          Removed the COSMIC_ROOT definition.

        * game/Atom.h:
        * game/Atom.inl:
        * game/Atom.cpp:
        * game/Attribute.h:
        * game/Attribute.inl:
        * game/Attribute.cpp:
        * game/Collection_T.h:
        * game/Collection_T.cpp:
        * game/Component.h:
        * game/Component.inl:
        * game/Component.cpp:
        * game/ComponentEx.h:
        * game/ComponentEx.inl:
        * game/ComponentEx.cpp:
        * game/Connection.h:
        * game/Connection.inl:
        * game/Connection.cpp:
        * game/Exception.h:
        * game/FCO.h:
        * game/FCO.inl:
        * game/FCO.cpp:
        * game/Filter.h:
        * game/Filter.cpp:
        * game/Folder.h:
        * game/Folder.inl:
        * game/Folder.cpp:
        * game/GAME.mpc:
        * game/GME_fwd.h:
        * game/Impl_Factory.h:
        * game/Impl_Factory.inl:
        * game/Impl_Factory.cpp:
        * game/MetaAspect.h:
        * game/MetaAspect.inl:
        * game/MetaAspect.cpp:
        * game/MetaAtom.h:
        * game/MetaAtom.inl:
        * game/MetaAtom.cpp:
        * game/MetaAttribute.h:
        * game/MetaAttribute.inl:
        * game/MetaAttribute.cpp:
        * game/MetaBase.h:
        * game/MetaBase.inl:
        * game/MetaBase.cpp:
        * game/MetaConnection.h:
        * game/MetaConnection.inl:
        * game/MetaConnection.cpp:
        * game/MetaEnumItem.h:
        * game/MetaEnumItem.inl:
        * game/MetaEnumItem.cpp:
        * game/MetaFCO.h:
        * game/MetaFCO.inl:
        * game/MetaFCO.cpp:
        * game/MetaFolder.h:
        * game/MetaFolder.inl:
        * game/MetaFolder.cpp:
        * game/MetaModel.h:
        * game/MetaModel.inl:
        * game/MetaModel.cpp:
        * game/MetaPart.h:
        * game/MetaPart.inl:
        * game/MetaPart.cpp:
        * game/MetaReference.h:
        * game/MetaReference.inl:
        * game/MetaReference.cpp:
        * game/MetaRole.h:
        * game/MetaRole.inl:
        * game/MetaRole.cpp:
        * game/MetaSet.h:
        * game/MetaSet.inl:
        * game/MetaSet.cpp:
        * game/Model.h:
        * game/Model.inl:
        * game/Model.cpp:
        * game/Object.h:
        * game/Object.inl:
        * game/Object.cpp:
        * game/Project.cpp:
        * game/Refcountable.h:
        * game/Refcountable.inl:
        * game/Refcountable.cpp:
        * game/Reference.h:
        * game/Reference.inl:
        * game/Reference.cpp:
        * game/RegistryNode.h:
        * game/RegistryNode.inl:
        * game/RegistryNode.cpp:
        * game/Set.h:
        * game/Set.inl:
        * game/Set.cpp:
        * game/Smart_Ptr.h:
        * game/Smart_Ptr.inl:
        * game/Smart_Ptr.cpp:
        * game/Visitor.h:
        * game/Visitor.inl:
        * game/Visitor.cpp:

          Re-design the GAME architecture so that it is possible to dispatch
          to concrete elements. This means that clients no longer need to write
          custom dispatchers because the visitor does not behave as expected.

        * game/automation/Automation_App.cpp:
        * game/be/ComponentEx_Impl_Base.h:
        * game/be/ComponentEx_Impl_Base.inl:
        * game/be/ComponentEx_Impl_T.cpp:
        * game/be/Decorator_Impl.h:
        * game/be/Decorator_Impl.inl:
        * game/be/Decorator_T.inl:
        * game/be/Decorator_T.cpp:
        * game/be/Event_Handler.h:
        * game/be/Event_Handler.cpp:
        * game/be/Event_Handler_Impl.h:
        * game/be/Event_Handler_Impl.inl:
        * game/be/Event_Handler_Interface.h:
        * game/be/Readonly_Event_Handler.h:
        * game/be/Readonly_Event_Handler.cpp:
        * game/dialogs/Dialog_Display_Strategy.h:
        * game/dialogs/Name_Dialog.h:
        * game/dialogs/Name_Dialog.cpp:
        * game/dialogs/Object_Path_Dialog_Display_Strategy.h:
        * game/dialogs/Object_Path_Dialog_Display_Strategy.cpp:
        * game/dialogs/Selection_List_Dialog.h:
        * game/dialogs/Selection_List_Dialog.cpp:
        * game/dialogs/Selection_List_Dialog_T.h:
        * game/dialogs/Selection_List_Dialog_T.cpp:
        * game/graphics/Port_Decorator.h:
        * game/graphics/Port_Decorator.inl:
        * game/graphics/Port_Decorator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.inl:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:
        * game/manip/copy.h:
        * game/manip/copy.cpp:
        * game/utils/Point.h:
        * game/utils/Point.cpp:
        * game/utils/Project_Settings.h:
        * game/utils/Project_Settings.cpp:
        * game/utils/modelgen.h:
        * game/utils/modelgen.inl:
        * game/utils/modelgen.cpp:

          Updated the implementation in each of these files to support to
          new GAME architecture.

        * tests/mga:
        * tests/mga/Visitor:
        * tests/mga/Visitor/GAME_Visitor_Testd.reg:
        * tests/mga/Visitor/Visitor_Test.idl:
        * tests/mga/Visitor/Visitor_Test.mpc:
        * tests/mga/Visitor/Visitor_Test.xme:
        * tests/mga/Visitor/Visitor_Test_Impl.h:
        * tests/mga/Visitor/Visitor_Test_Impl.cpp:
        * tests/mga/Visitor/Visitor_Test_Module.cpp:
        * tests/mga/Visitor/stdafx.h:
        * tests/mga/Visitor/stdafx.cpp:

          Test to verify the visitor is working correctly, i.e., dispatching
          to the concrete implementations.

        * game/Interpreter.h:
        * game/Interpreter.cpp:

          Removed these files.

Fri Dec  3 14:45:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * AUTHORS:
        * COPYING:
        * VERSION:

          Added project information to the repo.

Tue Nov 30 20:54:52 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/GAME.mpc:
        * game/Utils.h:
        * game/Utils.cpp:

          Created utility functions file in the GAME directory.

        * game/interpreters/ExtensionClasses/ExtensionClasses.mpc:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.inl:

          Added all the utility functions to the above directory and used them
          in extension classes.

Fri Nov 26 00:51:31 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.inl:

          Changed the mkdir function to ::Utils::CreatePath.

Thu Nov 25 23:27:52 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Added iomanip functions to generate repeated patterns in header.

Thu Nov 25 21:48:49 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Added normalize functions to normalize names of generated mpc/mwc files
          and the name used in ifndef.

Thu Nov 25 07:30:10 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.inl:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Refactored code and corrected allignment bugs in generated files.
          Bugfix in the generated mpc file where the include tag was generated
          incorrectly.

Wed Nov 24 04:47:53 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * GAME.mwc:

          Added game folder to the list of folders for project generation
          as the game projects were not being generated.

        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:

        * game/GAME.mpc:
        * game/dialogs/GAME_Dialogs.mpc:
        * game/manip/Manipulation.mpc:
        * game/utils/GAME_Utils.mpc:
        * game/xme/XME.mpc:

          Added boost_base as the root project as the files in the projects
          could not bind the included boost files.

Tue Nov 23 10:16:17 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * game/xme/Configuration.h:
          Fixed compile problem with GCC 4.5

Tue Nov 23 10:12:36 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * GAME.mwc:
          Try to compile everything on non windows

Mon Nov 22 14:32:59 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Removed the -features line from the generated mwc. Now to generate the wrokspace
          one has to use -features mfc=1.

Mon Nov 22 14:23:06 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Tab spacing corrected in the generated mpc file.

Mon Nov 22 14:14:41 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Corrected coding style.

Mon Nov 22 01:53:32 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Bugfix where the generated create methods were not static. The create methods
          are generated only when the object has a parent or is in the root folder.

Mon Nov 22 00:34:08 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/ExtensionClasses.mpc:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:

          Removed gme_common from the list of base projects for the
          generated mpc.

Sun Nov 21 22:58:37 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Changed the includes and the cmdline in the generated mpc amd mwc
          files respectively.

Sun Nov 21 22:01:06 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Added metaname as the first attribute in .h and .cpp files.
          Added const static member name decleration in each generated
          attribute function.

Sun Nov 21 19:39:40 UTC 2010 Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/ExtensionClasses.mpc:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:

          Removed configuration.cpp from mpc file.

        * game/interpreters/ExtensionClasses/Configuration.h:
        * game/interpreters/ExtensionClasses/Configuration.cpp:

          Removed these files.

Sun Nov 21 19:00:03 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Removed unnecessary includes from the header files. Added the necessary
          ones to the cpp file.

Sun Nov 21 06:24:22 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Removed extra spaces at the start of base member initialization.

Sun Nov 21 05:53:45 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Removed ./ from front of the filenames that appear in the .mpc file

Sun Nov 21 05:37:37 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Added  // \-*- C++ -*- at the top of all the generated .h files.

Sun Nov 21 05:18:51 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Added newline at the end of generated stdafx files. Added the header preamble
          to the generated stdafx.h file.

Sat Nov 20 14:42:26 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Bugfix where copy constructor was not generated.

Sat Nov 20 04:19:24 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Bugfix for the generated _create method for the meta type Connection,Set,
          Reference and FCO.

Sat Nov 20 03:05:19 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Module.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Bugfixes: incorrect #ifndef tag, added Id tag to .cpp files, correted
          implementation of _create method, fixed formatting for _narrow method,
          added keyword void to empty functions, corrected format of generated
          constructor and added Id tag to mwc file.
          Features: added header preamble and added metaname attribute to
          generated classes.

Fri Nov 19 19:45:43 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Bugfix where the #ifndef name was generated inncorrectly.

Fri Nov 19 18:30:50 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Bugfix where Mga.h was included in all the generages.h files. Now
          it is included only in the stdafx.h file.

Fri Nov 19 07:16:11 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * game/interpreters/ExtensionClasses/ExtensionClasses.mpc:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Build_Files_Generator.cpp:

          Added the above mentioned files to seperate the generation of mpc, mwc and
          stdafx files from the class files.

        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Code_Generator.cpp:

          Bugfix where the proper base class was not called in the constructor
          in case the inheritance was done using the proxy of the given object.

        * game/interpreters/ExtensionClasses/Extension_Classes_Component.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_Impl.cpp:

          Removed the code generation of the mwc, mpc and stdafx files and
          added it to a separate file.

        * game/interpreters/ExtensionClasses/Extension_Classes_Component_i.c:
        * game/interpreters/ExtensionClasses/Extension_Classes_Component_p.c:

        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.h:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.inl:
        * game/interpreters/ExtensionClasses/Extension_Classes_Visitor.cpp:

          Bugfix where the proper base class was not called in the constructor
          in case the inheritance was done using the proxy of the given object.
          Removed the code that seperated the generatio of mpc and mwc files,
          instead created a set to store all the elements and process later
          while generating the mwc and mpc files.

          Added the code that creates the _export file to enable the generated
          code to be exported as a library.

Wed Nov 17 05:27:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_bin.mpb:
        * MPC/config/game_component.mpb:
        * MPC/config/game_decorator.mpb:
        * MPC/config/game_lib.mpb:

          Refactored the base projects.

        * game/GAME.mpc:
        * game/automation/automation.mpc:
        * game/be/GAME_BE.mpc:
        * game/dialogs/GAME_Dialogs.mpc:
        * game/graphics/Graphics.mpc:
        * game/manip/Manipulation.mpc:
        * game/utils/GAME_Utils.mpc:
        * game/xme/XME.mpc:
        * game/xml/GAME_XML.mpc:

          Updated the projects above to install binaries in locations
          under $(GAME_ROOT).

Wed Nov 17 03:58:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_common.mpb:
        * MPC/config/game_decorator.mpb:
        * MPC/config/game_register.mpb:

          Updated variables to use $(GAME_ROOT) locations.

        * includes:
        * includes/GME:
        * includes/GME/Component.def:
        * includes/GME/DecoratorApp.def:

          Definition files used when building GAME components for GME.

Wed Nov 17 03:52:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC:
        * MPC/config:
        * MPC/config/game.mpb:
        * MPC/config/game_be.mpb:
        * MPC/config/game_common.mpb:
        * MPC/config/game_component.mpb:
        * MPC/config/game_decorator.mpb:
        * MPC/config/game_dialogs.mpb:
        * MPC/config/game_graphics.mpb:
        * MPC/config/game_interpreter.mpb:
        * MPC/config/game_manip.mpb:
        * MPC/config/game_utils.mpb:
        * MPC/config/game_xme.mpb:
        * MPC/config/game_xml.mpb:

          MPC base projects for GAME.

        * bin:
        * lib:

          Location of compiled artifacts.

Tue Nov 16 15:01:08 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * ChangeLog:

          The location for writing changes to GAME.

