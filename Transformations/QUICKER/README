* Running Transformation on PICML model Using QUICKER UMLModelTransformer project:

1. Import QoSMapping.xme file from QUICKER\paradigms. If the import succeeds PICML2CQML.mga is created.
2. Open the PICML2CQML.mga model. If not created already, we will need to create configuration files that
are needed for running the GR engine. Go to Interpreters->GReAT Master Interpreter and run it. Accept the
default file locations and continue. If the interpreter succeeds the necessary configuration files will be
created in the specified directory.
3. Run the Graph Rewrite Engine that executes the Transformation rules. Go to Interpreters->Invoke Graph Rewrite
Engine. A dialog box asks us to specify the input and output files. Give appropriate files here. **Note: If you
have changed the configuration path/file names in the above step, you will need to re-enter the input/output 
filenames in this step *irrespective* of whether you want to change them or not. Additionally, choose "Update
And Save Configuration Model".
4. Run the interpreter. This will take several minutes for complete. If the transformation succeeds a dialog box
is generated showing the output files generated.


* Updating CQML and/or PICML in QoSMapping Transformation Project:

1. Open PICML.mga and run the "Converts GME MetaModel to UML class diagram in a given UMT paradigm. When asked to
give the file name, give QoSMapping transformation mga file's name.
2. You will need to re-run the MetaGME interpreter once this is done.
3. Follow similar steps for CQML.mga as well.
4. Open QoSMapping Transformation mga file. It should contain old and new copies of PICML and CQML.
5. Run the library update interpreter. The dialog box asks old and new paradigm names. Add old name (for example, 
PICML) and new name (for example, NewPICMLXXXXX). When the update completes the paradigms will be renamed as
PICML (which is the latest paradigm, we imported previously) and OldPICMLXXX. Delete the old paradigms.
6. Run the GReAT Master Interpreter. This generates the configuration files needed for the GREngine to run. Accept
defaults for the file names and locations.
7. Once the Master interpreter finishes and creates the required files, run the GREngine. Give the input and output
filenames in the dialog box. PICML model should confirm to the latest PICML that we have in the Transformation 
project. This will take sometime to complete, after which output mga file gets generated.

Note: For a detailed description on how to perform GReAT transformations on GME models in general, refer to 
GReAT user manual.