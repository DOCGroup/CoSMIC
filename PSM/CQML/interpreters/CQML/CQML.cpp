// cpp (meta datanetwork format) source file CQML.cpp
// generated from diagram CQML
// generated on Tue Jun 10 01:07:36 2014

#include "CQML.h"
#include <UmlExt.h>
#include <UdmStatic.h>

using namespace std;

namespace CQML {

	Project::Project() {}
	Project::Project(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Project::Project(const Project &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Project::Project(Project &&master) : MgaObject(master) {};

	Project Project::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Project& Project::operator=(Project &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Project Project::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Project Project::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Project Project::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Project> Project::Instances() { return ::Udm::InstantiatedAttr< Project>(impl); }
	Project Project::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Project> Project::Derived() { return ::Udm::DerivedAttr< Project>(impl); }
	::Udm::ArchetypeAttr< Project> Project::Archetype() const { return ::Udm::ArchetypeAttr< Project>(impl); }
	::Udm::AssocAttr< Workspaces> Project::setWorkspace() const { return ::Udm::AssocAttr< Workspaces>(impl, meta_setWorkspace); }
	::Udm::ChildrenAttr< ::CQML::ExternalResources> Project::ExternalResources_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalResources>(impl, meta_ExternalResources_children); }
	::Udm::ChildrenAttr< ::CQML::ExtResourceConn> Project::ExtResourceConn_children() const { return ::Udm::ChildrenAttr< ::CQML::ExtResourceConn>(impl, meta_ExtResourceConn_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentLib> Project::ComponentLib_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentLib>(impl, meta_ComponentLib_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifact> Project::ImplementationArtifact_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifact>(impl, meta_ImplementationArtifact_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Project::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExternalResources> Project::ExternalResources_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalResources>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExtResourceConn> Project::ExtResourceConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExtResourceConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentLib> Project::ComponentLib_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentLib>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::StubProject> Project::StubProject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::StubProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ServantProject> Project::ServantProject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ServantProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExecutorProject> Project::ExecutorProject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExecutorProject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifact> Project::ImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MPC> Project::MPC_parent() const { return ::Udm::ParentAttr< ::CQML::MPC>(impl, meta_MPC_parent); }
	::Udm::ParentAttr< ::CQML::MPC> Project::parent() const { return ::Udm::ParentAttr< ::CQML::MPC>(impl, ::Udm::NULLPARENTROLE); }
	void Project::Accept(Visitor &v) { v.Visit_Project(*this); }

	::Uml::Class Project::meta;
	::Uml::AssociationRole Project::meta_setWorkspace;
	::Uml::CompositionChildRole Project::meta_ExternalResources_children;
	::Uml::CompositionChildRole Project::meta_ExtResourceConn_children;
	::Uml::CompositionChildRole Project::meta_ComponentLib_children;
	::Uml::CompositionChildRole Project::meta_ImplementationArtifact_children;
	::Uml::CompositionParentRole Project::meta_MPC_parent;

	MgaObject::MgaObject() {}
	MgaObject::MgaObject(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	MgaObject::MgaObject(const MgaObject &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	MgaObject::MgaObject(MgaObject &&master) : UDM_OBJECT(master) {};

	MgaObject MgaObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MgaObject& MgaObject::operator=(MgaObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MgaObject MgaObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MgaObject MgaObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MgaObject MgaObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MgaObject> MgaObject::Instances() { return ::Udm::InstantiatedAttr< MgaObject>(impl); }
	MgaObject MgaObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MgaObject> MgaObject::Derived() { return ::Udm::DerivedAttr< MgaObject>(impl); }
	::Udm::ArchetypeAttr< MgaObject> MgaObject::Archetype() const { return ::Udm::ArchetypeAttr< MgaObject>(impl); }
	::Udm::StringAttr MgaObject::position() const { return ::Udm::StringAttr(impl, meta_position); }
	::Udm::StringAttr MgaObject::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ParentAttr< ::Udm::Object> MgaObject::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MgaObject::meta;
	::Uml::Attribute MgaObject::meta_position;
	::Uml::Attribute MgaObject::meta_name;

	ExternalResources::ExternalResources() {}
	ExternalResources::ExternalResources(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalResources::ExternalResources(const ExternalResources &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalResources::ExternalResources(ExternalResources &&master) : MgaObject(master) {};

	ExternalResources ExternalResources::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalResources& ExternalResources::operator=(ExternalResources &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalResources ExternalResources::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalResources ExternalResources::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalResources ExternalResources::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalResources> ExternalResources::Instances() { return ::Udm::InstantiatedAttr< ExternalResources>(impl); }
	ExternalResources ExternalResources::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalResources> ExternalResources::Derived() { return ::Udm::DerivedAttr< ExternalResources>(impl); }
	::Udm::ArchetypeAttr< ExternalResources> ExternalResources::Archetype() const { return ::Udm::ArchetypeAttr< ExternalResources>(impl); }
	::Udm::PointerAttr< ImplementationArtifact> ExternalResources::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::AClassAssocAttr< ExtResourceConn, ComponentLib> ExternalResources::srcExtResourceConn() const { return ::Udm::AClassAssocAttr< ExtResourceConn, ComponentLib>(impl, meta_srcExtResourceConn, meta_srcExtResourceConn_rev); }
	::Udm::ParentAttr< ::CQML::Project> ExternalResources::Project_parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::CQML::Project> ExternalResources::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ExternalResources::Accept(Visitor &v) { v.Visit_ExternalResources(*this); }

	::Uml::Class ExternalResources::meta;
	::Uml::AssociationRole ExternalResources::meta_ref;
	::Uml::AssociationRole ExternalResources::meta_srcExtResourceConn;
	::Uml::AssociationRole ExternalResources::meta_srcExtResourceConn_rev;
	::Uml::CompositionParentRole ExternalResources::meta_Project_parent;

	ExtResourceConn::ExtResourceConn() {}
	ExtResourceConn::ExtResourceConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExtResourceConn::ExtResourceConn(const ExtResourceConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExtResourceConn::ExtResourceConn(ExtResourceConn &&master) : MgaObject(master) {};

	ExtResourceConn ExtResourceConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExtResourceConn& ExtResourceConn::operator=(ExtResourceConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExtResourceConn ExtResourceConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExtResourceConn ExtResourceConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExtResourceConn ExtResourceConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExtResourceConn> ExtResourceConn::Instances() { return ::Udm::InstantiatedAttr< ExtResourceConn>(impl); }
	ExtResourceConn ExtResourceConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExtResourceConn> ExtResourceConn::Derived() { return ::Udm::DerivedAttr< ExtResourceConn>(impl); }
	::Udm::ArchetypeAttr< ExtResourceConn> ExtResourceConn::Archetype() const { return ::Udm::ArchetypeAttr< ExtResourceConn>(impl); }
	::Udm::ParentAttr< ::CQML::Project> ExtResourceConn::Project_parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::CQML::Project> ExtResourceConn::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentLib> ExtResourceConn::srcExtResourceConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentLib>(impl, meta_srcExtResourceConn_end_); }
	::Udm::AssocEndAttr< ::CQML::ExternalResources> ExtResourceConn::dstExtResourceConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ExternalResources>(impl, meta_dstExtResourceConn_end_); }
	void ExtResourceConn::Accept(Visitor &v) { v.Visit_ExtResourceConn(*this); }

	::Uml::Class ExtResourceConn::meta;
	::Uml::CompositionParentRole ExtResourceConn::meta_Project_parent;
	::Uml::AssociationRole ExtResourceConn::meta_srcExtResourceConn_end_;
	::Uml::AssociationRole ExtResourceConn::meta_dstExtResourceConn_end_;

	ComponentLib::ComponentLib() {}
	ComponentLib::ComponentLib(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentLib::ComponentLib(const ComponentLib &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentLib::ComponentLib(ComponentLib &&master) : MgaObject(master) {};

	ComponentLib ComponentLib::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentLib& ComponentLib::operator=(ComponentLib &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentLib ComponentLib::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentLib ComponentLib::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentLib ComponentLib::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentLib> ComponentLib::Instances() { return ::Udm::InstantiatedAttr< ComponentLib>(impl); }
	ComponentLib ComponentLib::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentLib> ComponentLib::Derived() { return ::Udm::DerivedAttr< ComponentLib>(impl); }
	::Udm::ArchetypeAttr< ComponentLib> ComponentLib::Archetype() const { return ::Udm::ArchetypeAttr< ComponentLib>(impl); }
	::Udm::StringAttr ComponentLib::sharedname() const { return ::Udm::StringAttr(impl, meta_sharedname); }
	::Udm::StringAttr ComponentLib::ORBServices() const { return ::Udm::StringAttr(impl, meta_ORBServices); }
	::Udm::StringAttr ComponentLib::libraryexport() const { return ::Udm::StringAttr(impl, meta_libraryexport); }
	::Udm::AClassAssocAttr< ExtResourceConn, ExternalResources> ComponentLib::dstExtResourceConn() const { return ::Udm::AClassAssocAttr< ExtResourceConn, ExternalResources>(impl, meta_dstExtResourceConn, meta_dstExtResourceConn_rev); }
	::Udm::ParentAttr< ::CQML::Project> ComponentLib::Project_parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::CQML::Project> ComponentLib::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentLib::meta;
	::Uml::Attribute ComponentLib::meta_sharedname;
	::Uml::Attribute ComponentLib::meta_ORBServices;
	::Uml::Attribute ComponentLib::meta_libraryexport;
	::Uml::AssociationRole ComponentLib::meta_dstExtResourceConn;
	::Uml::AssociationRole ComponentLib::meta_dstExtResourceConn_rev;
	::Uml::CompositionParentRole ComponentLib::meta_Project_parent;

	StubProject::StubProject() {}
	StubProject::StubProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	StubProject::StubProject(const StubProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	StubProject::StubProject(StubProject &&master) : ComponentLib(master) {};

	StubProject StubProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	StubProject& StubProject::operator=(StubProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	StubProject StubProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	StubProject StubProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	StubProject StubProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< StubProject> StubProject::Instances() { return ::Udm::InstantiatedAttr< StubProject>(impl); }
	StubProject StubProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< StubProject> StubProject::Derived() { return ::Udm::DerivedAttr< StubProject>(impl); }
	::Udm::ArchetypeAttr< StubProject> StubProject::Archetype() const { return ::Udm::ArchetypeAttr< StubProject>(impl); }
	::Udm::ChildAttr< ::CQML::ImplementationArtifactReference> StubProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::CQML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildAttr< ::CQML::FileRef> StubProject::FileRef_child() const { return ::Udm::ChildAttr< ::CQML::FileRef>(impl, meta_FileRef_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> StubProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FileRef> StubProject::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> StubProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact> StubProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact> StubProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Project> StubProject::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void StubProject::Accept(Visitor &v) { v.Visit_StubProject(*this); }

	::Uml::Class StubProject::meta;
	::Uml::CompositionChildRole StubProject::meta_ImplementationArtifactReference_child;
	::Uml::CompositionChildRole StubProject::meta_FileRef_child;

	ServantProject::ServantProject() {}
	ServantProject::ServantProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	ServantProject::ServantProject(const ServantProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	ServantProject::ServantProject(ServantProject &&master) : ComponentLib(master) {};

	ServantProject ServantProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServantProject& ServantProject::operator=(ServantProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServantProject ServantProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServantProject ServantProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServantProject ServantProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServantProject> ServantProject::Instances() { return ::Udm::InstantiatedAttr< ServantProject>(impl); }
	ServantProject ServantProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServantProject> ServantProject::Derived() { return ::Udm::DerivedAttr< ServantProject>(impl); }
	::Udm::ArchetypeAttr< ServantProject> ServantProject::Archetype() const { return ::Udm::ArchetypeAttr< ServantProject>(impl); }
	::Udm::ChildAttr< ::CQML::ImplementationArtifactReference> ServantProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::CQML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildAttr< ::CQML::FileRef> ServantProject::FileRef_child() const { return ::Udm::ChildAttr< ::CQML::FileRef>(impl, meta_FileRef_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ServantProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FileRef> ServantProject::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ServantProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact> ServantProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact> ServantProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Project> ServantProject::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ServantProject::Accept(Visitor &v) { v.Visit_ServantProject(*this); }

	::Uml::Class ServantProject::meta;
	::Uml::CompositionChildRole ServantProject::meta_ImplementationArtifactReference_child;
	::Uml::CompositionChildRole ServantProject::meta_FileRef_child;

	ExecutorProject::ExecutorProject() {}
	ExecutorProject::ExecutorProject(::Udm::ObjectImpl *impl) : ComponentLib(impl) {}
	ExecutorProject::ExecutorProject(const ExecutorProject &master) : ComponentLib(master) {}

#ifdef UDM_RVALUE
	ExecutorProject::ExecutorProject(ExecutorProject &&master) : ComponentLib(master) {};

	ExecutorProject ExecutorProject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExecutorProject& ExecutorProject::operator=(ExecutorProject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExecutorProject ExecutorProject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExecutorProject ExecutorProject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExecutorProject ExecutorProject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExecutorProject> ExecutorProject::Instances() { return ::Udm::InstantiatedAttr< ExecutorProject>(impl); }
	ExecutorProject ExecutorProject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExecutorProject> ExecutorProject::Derived() { return ::Udm::DerivedAttr< ExecutorProject>(impl); }
	::Udm::ArchetypeAttr< ExecutorProject> ExecutorProject::Archetype() const { return ::Udm::ArchetypeAttr< ExecutorProject>(impl); }
	::Udm::ChildAttr< ::CQML::ImplementationArtifactReference> ExecutorProject::ImplementationArtifactReference_child() const { return ::Udm::ChildAttr< ::CQML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ExecutorProject::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ExecutorProject::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact> ExecutorProject::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact> ExecutorProject::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Project> ExecutorProject::parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, ::Udm::NULLPARENTROLE); }
	void ExecutorProject::Accept(Visitor &v) { v.Visit_ExecutorProject(*this); }

	::Uml::Class ExecutorProject::meta;
	::Uml::CompositionChildRole ExecutorProject::meta_ImplementationArtifactReference_child;

	MPC::MPC() {}
	MPC::MPC(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MPC::MPC(const MPC &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MPC::MPC(MPC &&master) : MgaObject(master) {};

	MPC MPC::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MPC& MPC::operator=(MPC &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MPC MPC::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MPC MPC::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MPC MPC::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MPC> MPC::Instances() { return ::Udm::InstantiatedAttr< MPC>(impl); }
	MPC MPC::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MPC> MPC::Derived() { return ::Udm::DerivedAttr< MPC>(impl); }
	::Udm::ArchetypeAttr< MPC> MPC::Archetype() const { return ::Udm::ArchetypeAttr< MPC>(impl); }
	::Udm::ChildrenAttr< ::CQML::Workspaces> MPC::Workspaces_children() const { return ::Udm::ChildrenAttr< ::CQML::Workspaces>(impl, meta_Workspaces_children); }
	::Udm::ChildrenAttr< ::CQML::Project> MPC::Project_children() const { return ::Udm::ChildrenAttr< ::CQML::Project>(impl, meta_Project_children); }
	::Udm::ChildrenAttr< ::CQML::Project> MPC::Project_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Project>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> MPC::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Workspaces> MPC::Workspaces_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Workspaces>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentBuild> MPC::ComponentBuild_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentBuild>(impl, meta_ComponentBuild_parent); }
	::Udm::ParentAttr< ::CQML::ComponentBuild> MPC::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentBuild>(impl, ::Udm::NULLPARENTROLE); }
	void MPC::Accept(Visitor &v) { v.Visit_MPC(*this); }

	::Uml::Class MPC::meta;
	::Uml::CompositionChildRole MPC::meta_Workspaces_children;
	::Uml::CompositionChildRole MPC::meta_Project_children;
	::Uml::CompositionParentRole MPC::meta_ComponentBuild_parent;

	Workspaces::Workspaces() {}
	Workspaces::Workspaces(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Workspaces::Workspaces(const Workspaces &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Workspaces::Workspaces(Workspaces &&master) : MgaObject(master) {};

	Workspaces Workspaces::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Workspaces& Workspaces::operator=(Workspaces &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Workspaces Workspaces::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Workspaces Workspaces::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Workspaces Workspaces::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Workspaces> Workspaces::Instances() { return ::Udm::InstantiatedAttr< Workspaces>(impl); }
	Workspaces Workspaces::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Workspaces> Workspaces::Derived() { return ::Udm::DerivedAttr< Workspaces>(impl); }
	::Udm::ArchetypeAttr< Workspaces> Workspaces::Archetype() const { return ::Udm::ArchetypeAttr< Workspaces>(impl); }
	::Udm::AssocAttr< Project> Workspaces::members() const { return ::Udm::AssocAttr< Project>(impl, meta_members); }
	::Udm::ParentAttr< ::CQML::MPC> Workspaces::MPC_parent() const { return ::Udm::ParentAttr< ::CQML::MPC>(impl, meta_MPC_parent); }
	::Udm::ParentAttr< ::CQML::MPC> Workspaces::parent() const { return ::Udm::ParentAttr< ::CQML::MPC>(impl, ::Udm::NULLPARENTROLE); }
	void Workspaces::Accept(Visitor &v) { v.Visit_Workspaces(*this); }

	::Uml::Class Workspaces::meta;
	::Uml::AssociationRole Workspaces::meta_members;
	::Uml::CompositionParentRole Workspaces::meta_MPC_parent;

	Package::Package() {}
	Package::Package(::Udm::ObjectImpl *impl) : Prefixable(impl),Taggable(impl), MgaObject(impl) {}
	Package::Package(const Package &master) : Prefixable(master),Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Package::Package(Package &&master) : Prefixable(master),Taggable(master), MgaObject(master) {};

	Package Package::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Package& Package::operator=(Package &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Package Package::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Package Package::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Package Package::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Package> Package::Instances() { return ::Udm::InstantiatedAttr< Package>(impl); }
	Package Package::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Package> Package::Derived() { return ::Udm::DerivedAttr< Package>(impl); }
	::Udm::ArchetypeAttr< Package> Package::Archetype() const { return ::Udm::ArchetypeAttr< Package>(impl); }
	::Udm::ChildrenAttr< ::CQML::Package> Package::Package_children() const { return ::Udm::ChildrenAttr< ::CQML::Package>(impl, meta_Package_children); }
	::Udm::ChildrenAttr< ::CQML::Exception> Package::Exception_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::CQML::Constant> Package::Constant_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::CQML::NamedType> Package::NamedType_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, meta_NamedType_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Package::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::CQML::ManagesComponent> Package::ManagesComponent_children() const { return ::Udm::ChildrenAttr< ::CQML::ManagesComponent>(impl, meta_ManagesComponent_children); }
	::Udm::ChildrenAttr< ::CQML::RequiredRights> Package::RequiredRights_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRights>(impl, meta_RequiredRights_children); }
	::Udm::ChildrenAttr< ::CQML::InterfaceClassificationConn> Package::InterfaceClassificationConn_children() const { return ::Udm::ChildrenAttr< ::CQML::InterfaceClassificationConn>(impl, meta_InterfaceClassificationConn_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Package::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Package> Package::Package_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Prefixable> Package::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> Package::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Exception> Package::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Enum> Package::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Constant> Package::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> Package::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NoInheritable> Package::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Aggregate> Package::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SwitchedAggregate> Package::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NamedType> Package::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Inheritable> Package::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Boxed> Package::Boxed_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Boxed>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Component> Package::Component_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Component>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Collection> Package::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Alias> Package::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Object> Package::Object_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Object>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasOperations> Package::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Event> Package::Event_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ObjectByValue> Package::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ValueObject> Package::ValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactory> Package::ComponentFactory_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactory>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> Package::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> Package::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Package::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> Package::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> Package::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ManagesComponent> Package::ManagesComponent_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ManagesComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> Package::ResourceActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRights> Package::RequiredRights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Rights> Package::Rights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Rights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InterfaceClassificationConn> Package::InterfaceClassificationConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InterfaceClassificationConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Package> Package::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> Package::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::Prefixable> Package::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Package::Accept(Visitor &v) { v.Visit_Package(*this); }

	::Uml::Class Package::meta;
	::Uml::CompositionChildRole Package::meta_Package_children;
	::Uml::CompositionChildRole Package::meta_Exception_children;
	::Uml::CompositionChildRole Package::meta_Constant_children;
	::Uml::CompositionChildRole Package::meta_NamedType_children;
	::Uml::CompositionChildRole Package::meta_ComponentRef_children;
	::Uml::CompositionChildRole Package::meta_ManagesComponent_children;
	::Uml::CompositionChildRole Package::meta_RequiredRights_children;
	::Uml::CompositionChildRole Package::meta_InterfaceClassificationConn_children;
	::Uml::CompositionParentRole Package::meta_Package_parent;
	::Uml::CompositionParentRole Package::meta_File_parent;

	Prefixable::Prefixable() {}
	Prefixable::Prefixable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Prefixable::Prefixable(const Prefixable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Prefixable::Prefixable(Prefixable &&master) : MgaObject(master) {};

	Prefixable Prefixable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Prefixable& Prefixable::operator=(Prefixable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Prefixable Prefixable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Prefixable Prefixable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Prefixable Prefixable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Prefixable> Prefixable::Instances() { return ::Udm::InstantiatedAttr< Prefixable>(impl); }
	Prefixable Prefixable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Prefixable> Prefixable::Derived() { return ::Udm::DerivedAttr< Prefixable>(impl); }
	::Udm::ArchetypeAttr< Prefixable> Prefixable::Archetype() const { return ::Udm::ArchetypeAttr< Prefixable>(impl); }
	::Udm::StringAttr Prefixable::PrefixTag() const { return ::Udm::StringAttr(impl, meta_PrefixTag); }
	::Udm::ParentAttr< ::Udm::Object> Prefixable::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Prefixable::meta;
	::Uml::Attribute Prefixable::meta_PrefixTag;

	Taggable::Taggable() {}
	Taggable::Taggable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Taggable::Taggable(const Taggable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Taggable::Taggable(Taggable &&master) : MgaObject(master) {};

	Taggable Taggable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Taggable& Taggable::operator=(Taggable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Taggable Taggable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Taggable Taggable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Taggable Taggable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Taggable> Taggable::Instances() { return ::Udm::InstantiatedAttr< Taggable>(impl); }
	Taggable Taggable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Taggable> Taggable::Derived() { return ::Udm::DerivedAttr< Taggable>(impl); }
	::Udm::ArchetypeAttr< Taggable> Taggable::Archetype() const { return ::Udm::ArchetypeAttr< Taggable>(impl); }
	::Udm::StringAttr Taggable::VersionTag() const { return ::Udm::StringAttr(impl, meta_VersionTag); }
	::Udm::StringAttr Taggable::SpecifyIdTag() const { return ::Udm::StringAttr(impl, meta_SpecifyIdTag); }
	::Udm::ParentAttr< ::CQML::MgaObject> Taggable::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Taggable::meta;
	::Uml::Attribute Taggable::meta_VersionTag;
	::Uml::Attribute Taggable::meta_SpecifyIdTag;

	File::File() {}
	File::File(::Udm::ObjectImpl *impl) : Prefixable(impl), MgaObject(impl) {}
	File::File(const File &master) : Prefixable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	File::File(File &&master) : Prefixable(master), MgaObject(master) {};

	File File::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	File& File::operator=(File &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	File File::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	File File::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	File File::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< File> File::Instances() { return ::Udm::InstantiatedAttr< File>(impl); }
	File File::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< File> File::Derived() { return ::Udm::DerivedAttr< File>(impl); }
	::Udm::ArchetypeAttr< File> File::Archetype() const { return ::Udm::ArchetypeAttr< File>(impl); }
	::Udm::StringAttr File::path() const { return ::Udm::StringAttr(impl, meta_path); }
	::Udm::AssocAttr< FileRef> File::referedbyFileRef() const { return ::Udm::AssocAttr< FileRef>(impl, meta_referedbyFileRef); }
	::Udm::ChildrenAttr< ::CQML::Package> File::Package_children() const { return ::Udm::ChildrenAttr< ::CQML::Package>(impl, meta_Package_children); }
	::Udm::ChildrenAttr< ::CQML::Exception> File::Exception_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::CQML::FileRef> File::FileRef_children() const { return ::Udm::ChildrenAttr< ::CQML::FileRef>(impl, meta_FileRef_children); }
	::Udm::ChildrenAttr< ::CQML::Constant> File::Constant_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::CQML::NamedType> File::NamedType_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, meta_NamedType_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> File::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::CQML::ManagesComponent> File::ManagesComponent_children() const { return ::Udm::ChildrenAttr< ::CQML::ManagesComponent>(impl, meta_ManagesComponent_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> File::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Package> File::Package_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Prefixable> File::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> File::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Exception> File::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FileRef> File::FileRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FileRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Enum> File::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Constant> File::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> File::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NoInheritable> File::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Aggregate> File::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SwitchedAggregate> File::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NamedType> File::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Inheritable> File::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Boxed> File::Boxed_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Boxed>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Component> File::Component_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Component>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Collection> File::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Alias> File::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Object> File::Object_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Object>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasOperations> File::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Event> File::Event_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ObjectByValue> File::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ValueObject> File::ValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactory> File::ComponentFactory_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactory>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> File::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> File::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> File::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> File::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> File::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ManagesComponent> File::ManagesComponent_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ManagesComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::InterfaceDefinitions> File::InterfaceDefinitions_parent() const { return ::Udm::ParentAttr< ::CQML::InterfaceDefinitions>(impl, meta_InterfaceDefinitions_parent); }
	::Udm::ParentAttr< ::CQML::InterfaceDefinitions> File::parent() const { return ::Udm::ParentAttr< ::CQML::InterfaceDefinitions>(impl, ::Udm::NULLPARENTROLE); }
	void File::Accept(Visitor &v) { v.Visit_File(*this); }

	::Uml::Class File::meta;
	::Uml::Attribute File::meta_path;
	::Uml::AssociationRole File::meta_referedbyFileRef;
	::Uml::CompositionChildRole File::meta_Package_children;
	::Uml::CompositionChildRole File::meta_Exception_children;
	::Uml::CompositionChildRole File::meta_FileRef_children;
	::Uml::CompositionChildRole File::meta_Constant_children;
	::Uml::CompositionChildRole File::meta_NamedType_children;
	::Uml::CompositionChildRole File::meta_ComponentRef_children;
	::Uml::CompositionChildRole File::meta_ManagesComponent_children;
	::Uml::CompositionParentRole File::meta_InterfaceDefinitions_parent;

	Exception::Exception() {}
	Exception::Exception(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	Exception::Exception(const Exception &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Exception::Exception(Exception &&master) : Taggable(master), MgaObject(master) {};

	Exception Exception::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Exception& Exception::operator=(Exception &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Exception Exception::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Exception Exception::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Exception Exception::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Exception> Exception::Instances() { return ::Udm::InstantiatedAttr< Exception>(impl); }
	Exception Exception::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Exception> Exception::Derived() { return ::Udm::DerivedAttr< Exception>(impl); }
	::Udm::ArchetypeAttr< Exception> Exception::Archetype() const { return ::Udm::ArchetypeAttr< Exception>(impl); }
	::Udm::AssocAttr< ExceptionRef> Exception::referedbyExceptionRef() const { return ::Udm::AssocAttr< ExceptionRef>(impl, meta_referedbyExceptionRef); }
	::Udm::AssocAttr< SetException> Exception::referedbySetException() const { return ::Udm::AssocAttr< SetException>(impl, meta_referedbySetException); }
	::Udm::AssocAttr< GetException> Exception::referedbyGetException() const { return ::Udm::AssocAttr< GetException>(impl, meta_referedbyGetException); }
	::Udm::ChildrenAttr< ::CQML::Member> Exception::Member_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Exception::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Member> Exception::Member_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Package> Exception::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> Exception::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::HasOperations> Exception::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Exception::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Exception::Accept(Visitor &v) { v.Visit_Exception(*this); }

	::Uml::Class Exception::meta;
	::Uml::AssociationRole Exception::meta_referedbyExceptionRef;
	::Uml::AssociationRole Exception::meta_referedbySetException;
	::Uml::AssociationRole Exception::meta_referedbyGetException;
	::Uml::CompositionChildRole Exception::meta_Member_children;
	::Uml::CompositionParentRole Exception::meta_Package_parent;
	::Uml::CompositionParentRole Exception::meta_File_parent;
	::Uml::CompositionParentRole Exception::meta_HasOperations_parent;

	ExceptionRef::ExceptionRef() {}
	ExceptionRef::ExceptionRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExceptionRef::ExceptionRef(const ExceptionRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExceptionRef::ExceptionRef(ExceptionRef &&master) : MgaObject(master) {};

	ExceptionRef ExceptionRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExceptionRef& ExceptionRef::operator=(ExceptionRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExceptionRef ExceptionRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExceptionRef ExceptionRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExceptionRef ExceptionRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExceptionRef> ExceptionRef::Instances() { return ::Udm::InstantiatedAttr< ExceptionRef>(impl); }
	ExceptionRef ExceptionRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExceptionRef> ExceptionRef::Derived() { return ::Udm::DerivedAttr< ExceptionRef>(impl); }
	::Udm::ArchetypeAttr< ExceptionRef> ExceptionRef::Archetype() const { return ::Udm::ArchetypeAttr< ExceptionRef>(impl); }
	::Udm::PointerAttr< Exception> ExceptionRef::ref() const { return ::Udm::PointerAttr< Exception>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::HasExceptions> ExceptionRef::HasExceptions_parent() const { return ::Udm::ParentAttr< ::CQML::HasExceptions>(impl, meta_HasExceptions_parent); }
	::Udm::ParentAttr< ::CQML::HasExceptions> ExceptionRef::parent() const { return ::Udm::ParentAttr< ::CQML::HasExceptions>(impl, ::Udm::NULLPARENTROLE); }
	void ExceptionRef::Accept(Visitor &v) { v.Visit_ExceptionRef(*this); }

	::Uml::Class ExceptionRef::meta;
	::Uml::AssociationRole ExceptionRef::meta_ref;
	::Uml::CompositionParentRole ExceptionRef::meta_HasExceptions_parent;

	FileRef::FileRef() {}
	FileRef::FileRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FileRef::FileRef(const FileRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FileRef::FileRef(FileRef &&master) : MgaObject(master) {};

	FileRef FileRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FileRef& FileRef::operator=(FileRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FileRef FileRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FileRef FileRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FileRef FileRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FileRef> FileRef::Instances() { return ::Udm::InstantiatedAttr< FileRef>(impl); }
	FileRef FileRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FileRef> FileRef::Derived() { return ::Udm::DerivedAttr< FileRef>(impl); }
	::Udm::ArchetypeAttr< FileRef> FileRef::Archetype() const { return ::Udm::ArchetypeAttr< FileRef>(impl); }
	::Udm::PointerAttr< File> FileRef::ref() const { return ::Udm::PointerAttr< File>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::StubProject> FileRef::StubProject_parent() const { return ::Udm::ParentAttr< ::CQML::StubProject>(impl, meta_StubProject_parent); }
	::Udm::ParentAttr< ::CQML::ServantProject> FileRef::ServantProject_parent() const { return ::Udm::ParentAttr< ::CQML::ServantProject>(impl, meta_ServantProject_parent); }
	::Udm::ParentAttr< ::CQML::File> FileRef::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> FileRef::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void FileRef::Accept(Visitor &v) { v.Visit_FileRef(*this); }

	::Uml::Class FileRef::meta;
	::Uml::AssociationRole FileRef::meta_ref;
	::Uml::CompositionParentRole FileRef::meta_StubProject_parent;
	::Uml::CompositionParentRole FileRef::meta_ServantProject_parent;
	::Uml::CompositionParentRole FileRef::meta_File_parent;

	ConstantType::ConstantType() {}
	ConstantType::ConstantType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConstantType::ConstantType(const ConstantType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConstantType::ConstantType(ConstantType &&master) : MgaObject(master) {};

	ConstantType ConstantType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConstantType& ConstantType::operator=(ConstantType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConstantType ConstantType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConstantType ConstantType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConstantType ConstantType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConstantType> ConstantType::Instances() { return ::Udm::InstantiatedAttr< ConstantType>(impl); }
	ConstantType ConstantType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConstantType> ConstantType::Derived() { return ::Udm::DerivedAttr< ConstantType>(impl); }
	::Udm::ArchetypeAttr< ConstantType> ConstantType::Archetype() const { return ::Udm::ArchetypeAttr< ConstantType>(impl); }
	::Udm::AssocAttr< Constant> ConstantType::referedbyConstant() const { return ::Udm::AssocAttr< Constant>(impl, meta_referedbyConstant); }
	::Udm::AssocAttr< Discriminator> ConstantType::referedbyDiscriminator() const { return ::Udm::AssocAttr< Discriminator>(impl, meta_referedbyDiscriminator); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> ConstantType::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ConstantType::meta;
	::Uml::AssociationRole ConstantType::meta_referedbyConstant;
	::Uml::AssociationRole ConstantType::meta_referedbyDiscriminator;

	PredefinedType::PredefinedType() {}
	PredefinedType::PredefinedType(::Udm::ObjectImpl *impl) : ConstantType(impl),MemberType(impl), MgaObject(impl) {}
	PredefinedType::PredefinedType(const PredefinedType &master) : ConstantType(master),MemberType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PredefinedType::PredefinedType(PredefinedType &&master) : ConstantType(master),MemberType(master), MgaObject(master) {};

	PredefinedType PredefinedType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PredefinedType& PredefinedType::operator=(PredefinedType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PredefinedType PredefinedType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PredefinedType PredefinedType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PredefinedType PredefinedType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PredefinedType> PredefinedType::Instances() { return ::Udm::InstantiatedAttr< PredefinedType>(impl); }
	PredefinedType PredefinedType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PredefinedType> PredefinedType::Derived() { return ::Udm::DerivedAttr< PredefinedType>(impl); }
	::Udm::ArchetypeAttr< PredefinedType> PredefinedType::Archetype() const { return ::Udm::ArchetypeAttr< PredefinedType>(impl); }
	::Udm::AssocAttr< Variable> PredefinedType::referedbyVariable() const { return ::Udm::AssocAttr< Variable>(impl, meta_referedbyVariable); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> PredefinedType::PredefinedTypes_parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, meta_PredefinedTypes_parent); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> PredefinedType::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class PredefinedType::meta;
	::Uml::AssociationRole PredefinedType::meta_referedbyVariable;
	::Uml::CompositionParentRole PredefinedType::meta_PredefinedTypes_parent;

	Enum::Enum() {}
	Enum::Enum(::Udm::ObjectImpl *impl) : ConstantType(impl),NoInheritable(impl), MgaObject(impl) {}
	Enum::Enum(const Enum &master) : ConstantType(master),NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Enum::Enum(Enum &&master) : ConstantType(master),NoInheritable(master), MgaObject(master) {};

	Enum Enum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Enum& Enum::operator=(Enum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Enum Enum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Enum Enum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Enum Enum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Enum> Enum::Instances() { return ::Udm::InstantiatedAttr< Enum>(impl); }
	Enum Enum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Enum> Enum::Derived() { return ::Udm::DerivedAttr< Enum>(impl); }
	::Udm::ArchetypeAttr< Enum> Enum::Archetype() const { return ::Udm::ArchetypeAttr< Enum>(impl); }
	::Udm::ChildrenAttr< ::CQML::EnumValue> Enum::EnumValue_children() const { return ::Udm::ChildrenAttr< ::CQML::EnumValue>(impl, meta_EnumValue_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Enum::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EnumValue> Enum::EnumValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EnumValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> Enum::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Enum::Accept(Visitor &v) { v.Visit_Enum(*this); }

	::Uml::Class Enum::meta;
	::Uml::CompositionChildRole Enum::meta_EnumValue_children;

	Constant::Constant() {}
	Constant::Constant(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	Constant::Constant(const Constant &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Constant::Constant(Constant &&master) : Taggable(master), MgaObject(master) {};

	Constant Constant::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Constant& Constant::operator=(Constant &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Constant Constant::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Constant Constant::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Constant Constant::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Constant> Constant::Instances() { return ::Udm::InstantiatedAttr< Constant>(impl); }
	Constant Constant::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Constant> Constant::Derived() { return ::Udm::DerivedAttr< Constant>(impl); }
	::Udm::ArchetypeAttr< Constant> Constant::Archetype() const { return ::Udm::ArchetypeAttr< Constant>(impl); }
	::Udm::StringAttr Constant::value() const { return ::Udm::StringAttr(impl, meta_value); }
	::Udm::PointerAttr< ConstantType> Constant::ref() const { return ::Udm::PointerAttr< ConstantType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Package> Constant::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> Constant::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::HasOperations> Constant::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Constant::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Constant::Accept(Visitor &v) { v.Visit_Constant(*this); }

	::Uml::Class Constant::meta;
	::Uml::Attribute Constant::meta_value;
	::Uml::AssociationRole Constant::meta_ref;
	::Uml::CompositionParentRole Constant::meta_Package_parent;
	::Uml::CompositionParentRole Constant::meta_File_parent;
	::Uml::CompositionParentRole Constant::meta_HasOperations_parent;

	MemberType::MemberType() {}
	MemberType::MemberType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MemberType::MemberType(const MemberType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MemberType::MemberType(MemberType &&master) : MgaObject(master) {};

	MemberType MemberType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MemberType& MemberType::operator=(MemberType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MemberType MemberType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MemberType MemberType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MemberType MemberType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MemberType> MemberType::Instances() { return ::Udm::InstantiatedAttr< MemberType>(impl); }
	MemberType MemberType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MemberType> MemberType::Derived() { return ::Udm::DerivedAttr< MemberType>(impl); }
	::Udm::ArchetypeAttr< MemberType> MemberType::Archetype() const { return ::Udm::ArchetypeAttr< MemberType>(impl); }
	::Udm::AssocAttr< Collection> MemberType::referedbyCollection() const { return ::Udm::AssocAttr< Collection>(impl, meta_referedbyCollection); }
	::Udm::AssocAttr< Alias> MemberType::referedbyAlias() const { return ::Udm::AssocAttr< Alias>(impl, meta_referedbyAlias); }
	::Udm::AssocAttr< Boxed> MemberType::referedbyBoxed() const { return ::Udm::AssocAttr< Boxed>(impl, meta_referedbyBoxed); }
	::Udm::AssocAttr< Member> MemberType::referedbyMember() const { return ::Udm::AssocAttr< Member>(impl, meta_referedbyMember); }
	::Udm::AssocAttr< AttributeMember> MemberType::referedbyAttributeMember() const { return ::Udm::AssocAttr< AttributeMember>(impl, meta_referedbyAttributeMember); }
	::Udm::AssocAttr< InParameter> MemberType::referedbyInParameter() const { return ::Udm::AssocAttr< InParameter>(impl, meta_referedbyInParameter); }
	::Udm::AssocAttr< OutParameter> MemberType::referedbyOutParameter() const { return ::Udm::AssocAttr< OutParameter>(impl, meta_referedbyOutParameter); }
	::Udm::AssocAttr< ReturnType> MemberType::referedbyReturnType() const { return ::Udm::AssocAttr< ReturnType>(impl, meta_referedbyReturnType); }
	::Udm::AssocAttr< ParameterType> MemberType::referedbyParameterType() const { return ::Udm::AssocAttr< ParameterType>(impl, meta_referedbyParameterType); }
	::Udm::AssocAttr< InoutParameter> MemberType::referedbyInoutParameter() const { return ::Udm::AssocAttr< InoutParameter>(impl, meta_referedbyInoutParameter); }
	::Udm::AssocAttr< DataType> MemberType::referedbyDataType() const { return ::Udm::AssocAttr< DataType>(impl, meta_referedbyDataType); }
	::Udm::ParentAttr< ::Udm::Object> MemberType::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MemberType::meta;
	::Uml::AssociationRole MemberType::meta_referedbyCollection;
	::Uml::AssociationRole MemberType::meta_referedbyAlias;
	::Uml::AssociationRole MemberType::meta_referedbyBoxed;
	::Uml::AssociationRole MemberType::meta_referedbyMember;
	::Uml::AssociationRole MemberType::meta_referedbyAttributeMember;
	::Uml::AssociationRole MemberType::meta_referedbyInParameter;
	::Uml::AssociationRole MemberType::meta_referedbyOutParameter;
	::Uml::AssociationRole MemberType::meta_referedbyReturnType;
	::Uml::AssociationRole MemberType::meta_referedbyParameterType;
	::Uml::AssociationRole MemberType::meta_referedbyInoutParameter;
	::Uml::AssociationRole MemberType::meta_referedbyDataType;

	Boolean::Boolean() {}
	Boolean::Boolean(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	Boolean::Boolean(const Boolean &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Boolean::Boolean(Boolean &&master) : PredefinedType(master), MgaObject(master) {};

	Boolean Boolean::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Boolean& Boolean::operator=(Boolean &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Boolean Boolean::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Boolean Boolean::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Boolean Boolean::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Boolean> Boolean::Instances() { return ::Udm::InstantiatedAttr< Boolean>(impl); }
	Boolean Boolean::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Boolean> Boolean::Derived() { return ::Udm::DerivedAttr< Boolean>(impl); }
	::Udm::ArchetypeAttr< Boolean> Boolean::Archetype() const { return ::Udm::ArchetypeAttr< Boolean>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> Boolean::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void Boolean::Accept(Visitor &v) { v.Visit_Boolean(*this); }

	::Uml::Class Boolean::meta;

	Byte::Byte() {}
	Byte::Byte(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	Byte::Byte(const Byte &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Byte::Byte(Byte &&master) : PredefinedType(master), MgaObject(master) {};

	Byte Byte::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Byte& Byte::operator=(Byte &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Byte Byte::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Byte Byte::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Byte Byte::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Byte> Byte::Instances() { return ::Udm::InstantiatedAttr< Byte>(impl); }
	Byte Byte::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Byte> Byte::Derived() { return ::Udm::DerivedAttr< Byte>(impl); }
	::Udm::ArchetypeAttr< Byte> Byte::Archetype() const { return ::Udm::ArchetypeAttr< Byte>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> Byte::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void Byte::Accept(Visitor &v) { v.Visit_Byte(*this); }

	::Uml::Class Byte::meta;

	ShortInteger::ShortInteger() {}
	ShortInteger::ShortInteger(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	ShortInteger::ShortInteger(const ShortInteger &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ShortInteger::ShortInteger(ShortInteger &&master) : PredefinedType(master), MgaObject(master) {};

	ShortInteger ShortInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ShortInteger& ShortInteger::operator=(ShortInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ShortInteger ShortInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ShortInteger ShortInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ShortInteger ShortInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ShortInteger> ShortInteger::Instances() { return ::Udm::InstantiatedAttr< ShortInteger>(impl); }
	ShortInteger ShortInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ShortInteger> ShortInteger::Derived() { return ::Udm::DerivedAttr< ShortInteger>(impl); }
	::Udm::ArchetypeAttr< ShortInteger> ShortInteger::Archetype() const { return ::Udm::ArchetypeAttr< ShortInteger>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> ShortInteger::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void ShortInteger::Accept(Visitor &v) { v.Visit_ShortInteger(*this); }

	::Uml::Class ShortInteger::meta;

	LongInteger::LongInteger() {}
	LongInteger::LongInteger(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	LongInteger::LongInteger(const LongInteger &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LongInteger::LongInteger(LongInteger &&master) : PredefinedType(master), MgaObject(master) {};

	LongInteger LongInteger::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LongInteger& LongInteger::operator=(LongInteger &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LongInteger LongInteger::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LongInteger LongInteger::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LongInteger LongInteger::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LongInteger> LongInteger::Instances() { return ::Udm::InstantiatedAttr< LongInteger>(impl); }
	LongInteger LongInteger::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LongInteger> LongInteger::Derived() { return ::Udm::DerivedAttr< LongInteger>(impl); }
	::Udm::ArchetypeAttr< LongInteger> LongInteger::Archetype() const { return ::Udm::ArchetypeAttr< LongInteger>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> LongInteger::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void LongInteger::Accept(Visitor &v) { v.Visit_LongInteger(*this); }

	::Uml::Class LongInteger::meta;

	RealNumber::RealNumber() {}
	RealNumber::RealNumber(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	RealNumber::RealNumber(const RealNumber &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RealNumber::RealNumber(RealNumber &&master) : PredefinedType(master), MgaObject(master) {};

	RealNumber RealNumber::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RealNumber& RealNumber::operator=(RealNumber &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RealNumber RealNumber::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RealNumber RealNumber::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RealNumber RealNumber::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RealNumber> RealNumber::Instances() { return ::Udm::InstantiatedAttr< RealNumber>(impl); }
	RealNumber RealNumber::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RealNumber> RealNumber::Derived() { return ::Udm::DerivedAttr< RealNumber>(impl); }
	::Udm::ArchetypeAttr< RealNumber> RealNumber::Archetype() const { return ::Udm::ArchetypeAttr< RealNumber>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> RealNumber::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void RealNumber::Accept(Visitor &v) { v.Visit_RealNumber(*this); }

	::Uml::Class RealNumber::meta;

	String::String() {}
	String::String(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	String::String(const String &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	String::String(String &&master) : PredefinedType(master), MgaObject(master) {};

	String String::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	String& String::operator=(String &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	String String::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	String String::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	String String::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< String> String::Instances() { return ::Udm::InstantiatedAttr< String>(impl); }
	String String::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< String> String::Derived() { return ::Udm::DerivedAttr< String>(impl); }
	::Udm::ArchetypeAttr< String> String::Archetype() const { return ::Udm::ArchetypeAttr< String>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> String::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void String::Accept(Visitor &v) { v.Visit_String(*this); }

	::Uml::Class String::meta;

	GenericObject::GenericObject() {}
	GenericObject::GenericObject(::Udm::ObjectImpl *impl) : PredefinedType(impl),Provideable(impl), MgaObject(impl) {}
	GenericObject::GenericObject(const GenericObject &master) : PredefinedType(master),Provideable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericObject::GenericObject(GenericObject &&master) : PredefinedType(master),Provideable(master), MgaObject(master) {};

	GenericObject GenericObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericObject& GenericObject::operator=(GenericObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericObject GenericObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericObject GenericObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericObject GenericObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericObject> GenericObject::Instances() { return ::Udm::InstantiatedAttr< GenericObject>(impl); }
	GenericObject GenericObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericObject> GenericObject::Derived() { return ::Udm::DerivedAttr< GenericObject>(impl); }
	::Udm::ArchetypeAttr< GenericObject> GenericObject::Archetype() const { return ::Udm::ArchetypeAttr< GenericObject>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> GenericObject::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericObject::Accept(Visitor &v) { v.Visit_GenericObject(*this); }

	::Uml::Class GenericObject::meta;

	GenericValueObject::GenericValueObject() {}
	GenericValueObject::GenericValueObject(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	GenericValueObject::GenericValueObject(const GenericValueObject &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericValueObject::GenericValueObject(GenericValueObject &&master) : PredefinedType(master), MgaObject(master) {};

	GenericValueObject GenericValueObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericValueObject& GenericValueObject::operator=(GenericValueObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericValueObject GenericValueObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericValueObject GenericValueObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericValueObject GenericValueObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericValueObject> GenericValueObject::Instances() { return ::Udm::InstantiatedAttr< GenericValueObject>(impl); }
	GenericValueObject GenericValueObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericValueObject> GenericValueObject::Derived() { return ::Udm::DerivedAttr< GenericValueObject>(impl); }
	::Udm::ArchetypeAttr< GenericValueObject> GenericValueObject::Archetype() const { return ::Udm::ArchetypeAttr< GenericValueObject>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> GenericValueObject::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericValueObject::Accept(Visitor &v) { v.Visit_GenericValueObject(*this); }

	::Uml::Class GenericValueObject::meta;

	GenericValue::GenericValue() {}
	GenericValue::GenericValue(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	GenericValue::GenericValue(const GenericValue &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GenericValue::GenericValue(GenericValue &&master) : PredefinedType(master), MgaObject(master) {};

	GenericValue GenericValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GenericValue& GenericValue::operator=(GenericValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GenericValue GenericValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GenericValue GenericValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GenericValue GenericValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GenericValue> GenericValue::Instances() { return ::Udm::InstantiatedAttr< GenericValue>(impl); }
	GenericValue GenericValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GenericValue> GenericValue::Derived() { return ::Udm::DerivedAttr< GenericValue>(impl); }
	::Udm::ArchetypeAttr< GenericValue> GenericValue::Archetype() const { return ::Udm::ArchetypeAttr< GenericValue>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> GenericValue::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void GenericValue::Accept(Visitor &v) { v.Visit_GenericValue(*this); }

	::Uml::Class GenericValue::meta;

	TypeEncoding::TypeEncoding() {}
	TypeEncoding::TypeEncoding(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	TypeEncoding::TypeEncoding(const TypeEncoding &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TypeEncoding::TypeEncoding(TypeEncoding &&master) : PredefinedType(master), MgaObject(master) {};

	TypeEncoding TypeEncoding::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TypeEncoding& TypeEncoding::operator=(TypeEncoding &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TypeEncoding TypeEncoding::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TypeEncoding TypeEncoding::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TypeEncoding TypeEncoding::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TypeEncoding> TypeEncoding::Instances() { return ::Udm::InstantiatedAttr< TypeEncoding>(impl); }
	TypeEncoding TypeEncoding::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TypeEncoding> TypeEncoding::Derived() { return ::Udm::DerivedAttr< TypeEncoding>(impl); }
	::Udm::ArchetypeAttr< TypeEncoding> TypeEncoding::Archetype() const { return ::Udm::ArchetypeAttr< TypeEncoding>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> TypeEncoding::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void TypeEncoding::Accept(Visitor &v) { v.Visit_TypeEncoding(*this); }

	::Uml::Class TypeEncoding::meta;

	TypeKind::TypeKind() {}
	TypeKind::TypeKind(::Udm::ObjectImpl *impl) : PredefinedType(impl), MgaObject(impl) {}
	TypeKind::TypeKind(const TypeKind &master) : PredefinedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TypeKind::TypeKind(TypeKind &&master) : PredefinedType(master), MgaObject(master) {};

	TypeKind TypeKind::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TypeKind& TypeKind::operator=(TypeKind &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TypeKind TypeKind::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TypeKind TypeKind::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TypeKind TypeKind::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TypeKind> TypeKind::Instances() { return ::Udm::InstantiatedAttr< TypeKind>(impl); }
	TypeKind TypeKind::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TypeKind> TypeKind::Derived() { return ::Udm::DerivedAttr< TypeKind>(impl); }
	::Udm::ArchetypeAttr< TypeKind> TypeKind::Archetype() const { return ::Udm::ArchetypeAttr< TypeKind>(impl); }
	::Udm::ParentAttr< ::CQML::PredefinedTypes> TypeKind::parent() const { return ::Udm::ParentAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLPARENTROLE); }
	void TypeKind::Accept(Visitor &v) { v.Visit_TypeKind(*this); }

	::Uml::Class TypeKind::meta;

	Provideable::Provideable() {}
	Provideable::Provideable(::Udm::ObjectImpl *impl) : ExternalPortReferenceType(impl), MgaObject(impl) {}
	Provideable::Provideable(const Provideable &master) : ExternalPortReferenceType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Provideable::Provideable(Provideable &&master) : ExternalPortReferenceType(master), MgaObject(master) {};

	Provideable Provideable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Provideable& Provideable::operator=(Provideable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Provideable Provideable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Provideable Provideable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Provideable Provideable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Provideable> Provideable::Instances() { return ::Udm::InstantiatedAttr< Provideable>(impl); }
	Provideable Provideable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Provideable> Provideable::Derived() { return ::Udm::DerivedAttr< Provideable>(impl); }
	::Udm::ArchetypeAttr< Provideable> Provideable::Archetype() const { return ::Udm::ArchetypeAttr< Provideable>(impl); }
	::Udm::AssocAttr< ProvidedRequestPort> Provideable::referedbyProvidedRequestPort() const { return ::Udm::AssocAttr< ProvidedRequestPort>(impl, meta_referedbyProvidedRequestPort); }
	::Udm::AssocAttr< RequiredRequestPort> Provideable::referedbyRequiredRequestPort() const { return ::Udm::AssocAttr< RequiredRequestPort>(impl, meta_referedbyRequiredRequestPort); }
	::Udm::ParentAttr< ::Udm::Object> Provideable::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Provideable::meta;
	::Uml::AssociationRole Provideable::meta_referedbyProvidedRequestPort;
	::Uml::AssociationRole Provideable::meta_referedbyRequiredRequestPort;

	NoInheritable::NoInheritable() {}
	NoInheritable::NoInheritable(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	NoInheritable::NoInheritable(const NoInheritable &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	NoInheritable::NoInheritable(NoInheritable &&master) : NamedType(master), MgaObject(master) {};

	NoInheritable NoInheritable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NoInheritable& NoInheritable::operator=(NoInheritable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NoInheritable NoInheritable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NoInheritable NoInheritable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NoInheritable NoInheritable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NoInheritable> NoInheritable::Instances() { return ::Udm::InstantiatedAttr< NoInheritable>(impl); }
	NoInheritable NoInheritable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NoInheritable> NoInheritable::Derived() { return ::Udm::DerivedAttr< NoInheritable>(impl); }
	::Udm::ArchetypeAttr< NoInheritable> NoInheritable::Archetype() const { return ::Udm::ArchetypeAttr< NoInheritable>(impl); }
	::Udm::ParentAttr< ::CQML::HasOperations> NoInheritable::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> NoInheritable::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class NoInheritable::meta;
	::Uml::CompositionParentRole NoInheritable::meta_HasOperations_parent;

	EnumValue::EnumValue() {}
	EnumValue::EnumValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EnumValue::EnumValue(const EnumValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EnumValue::EnumValue(EnumValue &&master) : MgaObject(master) {};

	EnumValue EnumValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EnumValue& EnumValue::operator=(EnumValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EnumValue EnumValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EnumValue EnumValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EnumValue EnumValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EnumValue> EnumValue::Instances() { return ::Udm::InstantiatedAttr< EnumValue>(impl); }
	EnumValue EnumValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EnumValue> EnumValue::Derived() { return ::Udm::DerivedAttr< EnumValue>(impl); }
	::Udm::ArchetypeAttr< EnumValue> EnumValue::Archetype() const { return ::Udm::ArchetypeAttr< EnumValue>(impl); }
	::Udm::ParentAttr< ::CQML::Enum> EnumValue::Enum_parent() const { return ::Udm::ParentAttr< ::CQML::Enum>(impl, meta_Enum_parent); }
	::Udm::ParentAttr< ::CQML::Enum> EnumValue::parent() const { return ::Udm::ParentAttr< ::CQML::Enum>(impl, ::Udm::NULLPARENTROLE); }
	void EnumValue::Accept(Visitor &v) { v.Visit_EnumValue(*this); }

	::Uml::Class EnumValue::meta;
	::Uml::CompositionParentRole EnumValue::meta_Enum_parent;

	Aggregate::Aggregate() {}
	Aggregate::Aggregate(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	Aggregate::Aggregate(const Aggregate &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Aggregate::Aggregate(Aggregate &&master) : NoInheritable(master), MgaObject(master) {};

	Aggregate Aggregate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Aggregate& Aggregate::operator=(Aggregate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Aggregate Aggregate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Aggregate Aggregate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Aggregate Aggregate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Aggregate> Aggregate::Instances() { return ::Udm::InstantiatedAttr< Aggregate>(impl); }
	Aggregate Aggregate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Aggregate> Aggregate::Derived() { return ::Udm::DerivedAttr< Aggregate>(impl); }
	::Udm::ArchetypeAttr< Aggregate> Aggregate::Archetype() const { return ::Udm::ArchetypeAttr< Aggregate>(impl); }
	::Udm::ChildrenAttr< ::CQML::Member> Aggregate::Member_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Aggregate::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Member> Aggregate::Member_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> Aggregate::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Aggregate::Accept(Visitor &v) { v.Visit_Aggregate(*this); }

	::Uml::Class Aggregate::meta;
	::Uml::CompositionChildRole Aggregate::meta_Member_children;

	SwitchedAggregate::SwitchedAggregate() {}
	SwitchedAggregate::SwitchedAggregate(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	SwitchedAggregate::SwitchedAggregate(const SwitchedAggregate &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	SwitchedAggregate::SwitchedAggregate(SwitchedAggregate &&master) : NoInheritable(master), MgaObject(master) {};

	SwitchedAggregate SwitchedAggregate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SwitchedAggregate& SwitchedAggregate::operator=(SwitchedAggregate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SwitchedAggregate SwitchedAggregate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SwitchedAggregate SwitchedAggregate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SwitchedAggregate SwitchedAggregate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SwitchedAggregate> SwitchedAggregate::Instances() { return ::Udm::InstantiatedAttr< SwitchedAggregate>(impl); }
	SwitchedAggregate SwitchedAggregate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SwitchedAggregate> SwitchedAggregate::Derived() { return ::Udm::DerivedAttr< SwitchedAggregate>(impl); }
	::Udm::ArchetypeAttr< SwitchedAggregate> SwitchedAggregate::Archetype() const { return ::Udm::ArchetypeAttr< SwitchedAggregate>(impl); }
	::Udm::ChildrenAttr< ::CQML::LabelConnection> SwitchedAggregate::LabelConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::LabelConnection>(impl, meta_LabelConnection_children); }
	::Udm::ChildrenAttr< ::CQML::Label> SwitchedAggregate::Label_children() const { return ::Udm::ChildrenAttr< ::CQML::Label>(impl, meta_Label_children); }
	::Udm::ChildrenAttr< ::CQML::Member> SwitchedAggregate::Member_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, meta_Member_children); }
	::Udm::ChildAttr< ::CQML::Discriminator> SwitchedAggregate::Discriminator_child() const { return ::Udm::ChildAttr< ::CQML::Discriminator>(impl, meta_Discriminator_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SwitchedAggregate::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Label> SwitchedAggregate::Label_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Label>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LabelConnection> SwitchedAggregate::LabelConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LabelConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Discriminator> SwitchedAggregate::Discriminator_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Discriminator>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Member> SwitchedAggregate::Member_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> SwitchedAggregate::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void SwitchedAggregate::Accept(Visitor &v) { v.Visit_SwitchedAggregate(*this); }

	::Uml::Class SwitchedAggregate::meta;
	::Uml::CompositionChildRole SwitchedAggregate::meta_LabelConnection_children;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Label_children;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Member_children;
	::Uml::CompositionChildRole SwitchedAggregate::meta_Discriminator_child;

	Label::Label() {}
	Label::Label(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Label::Label(const Label &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Label::Label(Label &&master) : MgaObject(master) {};

	Label Label::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Label& Label::operator=(Label &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Label Label::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Label Label::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Label Label::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Label> Label::Instances() { return ::Udm::InstantiatedAttr< Label>(impl); }
	Label Label::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Label> Label::Derived() { return ::Udm::DerivedAttr< Label>(impl); }
	::Udm::ArchetypeAttr< Label> Label::Archetype() const { return ::Udm::ArchetypeAttr< Label>(impl); }
	::Udm::AClassPointerAttr< LabelConnection, Member> Label::srcLabelConnection() const { return ::Udm::AClassPointerAttr< LabelConnection, Member>(impl, meta_srcLabelConnection, meta_srcLabelConnection_rev); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> Label::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> Label::parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	void Label::Accept(Visitor &v) { v.Visit_Label(*this); }

	::Uml::Class Label::meta;
	::Uml::AssociationRole Label::meta_srcLabelConnection;
	::Uml::AssociationRole Label::meta_srcLabelConnection_rev;
	::Uml::CompositionParentRole Label::meta_SwitchedAggregate_parent;

	LabelConnection::LabelConnection() {}
	LabelConnection::LabelConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LabelConnection::LabelConnection(const LabelConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LabelConnection::LabelConnection(LabelConnection &&master) : MgaObject(master) {};

	LabelConnection LabelConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LabelConnection& LabelConnection::operator=(LabelConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LabelConnection LabelConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LabelConnection LabelConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LabelConnection LabelConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LabelConnection> LabelConnection::Instances() { return ::Udm::InstantiatedAttr< LabelConnection>(impl); }
	LabelConnection LabelConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LabelConnection> LabelConnection::Derived() { return ::Udm::DerivedAttr< LabelConnection>(impl); }
	::Udm::ArchetypeAttr< LabelConnection> LabelConnection::Archetype() const { return ::Udm::ArchetypeAttr< LabelConnection>(impl); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> LabelConnection::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> LabelConnection::parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Member> LabelConnection::srcLabelConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Member>(impl, meta_srcLabelConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::Label> LabelConnection::dstLabelConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Label>(impl, meta_dstLabelConnection_end_); }
	void LabelConnection::Accept(Visitor &v) { v.Visit_LabelConnection(*this); }

	::Uml::Class LabelConnection::meta;
	::Uml::CompositionParentRole LabelConnection::meta_SwitchedAggregate_parent;
	::Uml::AssociationRole LabelConnection::meta_srcLabelConnection_end_;
	::Uml::AssociationRole LabelConnection::meta_dstLabelConnection_end_;

	NamedType::NamedType() {}
	NamedType::NamedType(::Udm::ObjectImpl *impl) : Taggable(impl),MemberType(impl), MgaObject(impl) {}
	NamedType::NamedType(const NamedType &master) : Taggable(master),MemberType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	NamedType::NamedType(NamedType &&master) : Taggable(master),MemberType(master), MgaObject(master) {};

	NamedType NamedType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NamedType& NamedType::operator=(NamedType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NamedType NamedType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NamedType NamedType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NamedType NamedType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NamedType> NamedType::Instances() { return ::Udm::InstantiatedAttr< NamedType>(impl); }
	NamedType NamedType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NamedType> NamedType::Derived() { return ::Udm::DerivedAttr< NamedType>(impl); }
	::Udm::ArchetypeAttr< NamedType> NamedType::Archetype() const { return ::Udm::ArchetypeAttr< NamedType>(impl); }
	::Udm::ParentAttr< ::CQML::Package> NamedType::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> NamedType::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> NamedType::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class NamedType::meta;
	::Uml::CompositionParentRole NamedType::meta_Package_parent;
	::Uml::CompositionParentRole NamedType::meta_File_parent;

	Discriminator::Discriminator() {}
	Discriminator::Discriminator(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Discriminator::Discriminator(const Discriminator &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Discriminator::Discriminator(Discriminator &&master) : MgaObject(master) {};

	Discriminator Discriminator::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Discriminator& Discriminator::operator=(Discriminator &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Discriminator Discriminator::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Discriminator Discriminator::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Discriminator Discriminator::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Discriminator> Discriminator::Instances() { return ::Udm::InstantiatedAttr< Discriminator>(impl); }
	Discriminator Discriminator::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Discriminator> Discriminator::Derived() { return ::Udm::DerivedAttr< Discriminator>(impl); }
	::Udm::ArchetypeAttr< Discriminator> Discriminator::Archetype() const { return ::Udm::ArchetypeAttr< Discriminator>(impl); }
	::Udm::PointerAttr< ConstantType> Discriminator::ref() const { return ::Udm::PointerAttr< ConstantType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> Discriminator::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> Discriminator::parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLPARENTROLE); }
	void Discriminator::Accept(Visitor &v) { v.Visit_Discriminator(*this); }

	::Uml::Class Discriminator::meta;
	::Uml::AssociationRole Discriminator::meta_ref;
	::Uml::CompositionParentRole Discriminator::meta_SwitchedAggregate_parent;

	Inheritable::Inheritable() {}
	Inheritable::Inheritable(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	Inheritable::Inheritable(const Inheritable &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Inheritable::Inheritable(Inheritable &&master) : NamedType(master), MgaObject(master) {};

	Inheritable Inheritable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Inheritable& Inheritable::operator=(Inheritable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Inheritable Inheritable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Inheritable Inheritable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Inheritable Inheritable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Inheritable> Inheritable::Instances() { return ::Udm::InstantiatedAttr< Inheritable>(impl); }
	Inheritable Inheritable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Inheritable> Inheritable::Derived() { return ::Udm::DerivedAttr< Inheritable>(impl); }
	::Udm::ArchetypeAttr< Inheritable> Inheritable::Archetype() const { return ::Udm::ArchetypeAttr< Inheritable>(impl); }
	::Udm::AssocAttr< Inherits> Inheritable::referedbyInherits() const { return ::Udm::AssocAttr< Inherits>(impl, meta_referedbyInherits); }
	::Udm::ChildrenAttr< ::CQML::Inherits> Inheritable::Inherits_children() const { return ::Udm::ChildrenAttr< ::CQML::Inherits>(impl, meta_Inherits_children); }
	::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute> Inheritable::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Inheritable::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> Inheritable::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Inherits> Inheritable::Inherits_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Inherits>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute> Inheritable::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Attribute> Inheritable::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> Inheritable::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Inheritable::meta;
	::Uml::AssociationRole Inheritable::meta_referedbyInherits;
	::Uml::CompositionChildRole Inheritable::meta_Inherits_children;
	::Uml::CompositionChildRole Inheritable::meta_ReadonlyAttribute_children;

	Boxed::Boxed() {}
	Boxed::Boxed(::Udm::ObjectImpl *impl) : NamedType(impl), MgaObject(impl) {}
	Boxed::Boxed(const Boxed &master) : NamedType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Boxed::Boxed(Boxed &&master) : NamedType(master), MgaObject(master) {};

	Boxed Boxed::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Boxed& Boxed::operator=(Boxed &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Boxed Boxed::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Boxed Boxed::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Boxed Boxed::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Boxed> Boxed::Instances() { return ::Udm::InstantiatedAttr< Boxed>(impl); }
	Boxed Boxed::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Boxed> Boxed::Derived() { return ::Udm::DerivedAttr< Boxed>(impl); }
	::Udm::ArchetypeAttr< Boxed> Boxed::Archetype() const { return ::Udm::ArchetypeAttr< Boxed>(impl); }
	::Udm::PointerAttr< MemberType> Boxed::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Prefixable> Boxed::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Boxed::Accept(Visitor &v) { v.Visit_Boxed(*this); }

	::Uml::Class Boxed::meta;
	::Uml::AssociationRole Boxed::meta_ref;

	Component::Component() {}
	Component::Component(::Udm::ObjectImpl *impl) : NamedType(impl),SupportsInterfaces(impl),Manageable(impl),TopLevelBehavior(impl),ComponentBase(impl), MgaObject(impl) {}
	Component::Component(const Component &master) : NamedType(master),SupportsInterfaces(master),Manageable(master),TopLevelBehavior(master),ComponentBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Component::Component(Component &&master) : NamedType(master),SupportsInterfaces(master),Manageable(master),TopLevelBehavior(master),ComponentBase(master), MgaObject(master) {};

	Component Component::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Component& Component::operator=(Component &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Component Component::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Component Component::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Component Component::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Component> Component::Instances() { return ::Udm::InstantiatedAttr< Component>(impl); }
	Component Component::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Component> Component::Derived() { return ::Udm::DerivedAttr< Component>(impl); }
	::Udm::ArchetypeAttr< Component> Component::Archetype() const { return ::Udm::ArchetypeAttr< Component>(impl); }
	::Udm::StringAttr Component::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr Component::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassAssocAttr< AssemblyselectRequirement, Requirement> Component::dstAssemblyselectRequirement() const { return ::Udm::AClassAssocAttr< AssemblyselectRequirement, Requirement>(impl, meta_dstAssemblyselectRequirement, meta_dstAssemblyselectRequirement_rev); }
	::Udm::AClassAssocAttr< AssemblyConfigProperty, Property> Component::dstAssemblyConfigProperty() const { return ::Udm::AClassAssocAttr< AssemblyConfigProperty, Property>(impl, meta_dstAssemblyConfigProperty, meta_dstAssemblyConfigProperty_rev); }
	::Udm::AssocAttr< ComponentRef> Component::referedbyComponentRef() const { return ::Udm::AssocAttr< ComponentRef>(impl, meta_referedbyComponentRef); }
	::Udm::AssocAttr< CompRef> Component::referedbyCompRef() const { return ::Udm::AssocAttr< CompRef>(impl, meta_referedbyCompRef); }
	::Udm::ChildrenAttr< ::CQML::Port> Component::Port_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, meta_Port_children); }
	::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute> Component::ReadonlyAttribute_children() const { return ::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_children); }
	::Udm::ChildrenAttr< ::CQML::WorkerType> Component::WorkerType_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerType>(impl, meta_WorkerType_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Component::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> Component::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute> Component::ReadonlyAttribute_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ReadonlyAttribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Attribute> Component::Attribute_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Attribute>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutEventPort> Component::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Port> Component::Port_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort> Component::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRequestPort> Component::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InEventPort> Component::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CommonPortAttrs> Component::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GraphVertex> Component::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerType> Component::WorkerType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> Component::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Component::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Component::Accept(Visitor &v) { v.Visit_Component(*this); }

	::Uml::Class Component::meta;
	::Uml::Attribute Component::meta_label;
	::Uml::Attribute Component::meta_UUID;
	::Uml::AssociationRole Component::meta_dstAssemblyselectRequirement;
	::Uml::AssociationRole Component::meta_dstAssemblyselectRequirement_rev;
	::Uml::AssociationRole Component::meta_dstAssemblyConfigProperty;
	::Uml::AssociationRole Component::meta_dstAssemblyConfigProperty_rev;
	::Uml::AssociationRole Component::meta_referedbyComponentRef;
	::Uml::AssociationRole Component::meta_referedbyCompRef;
	::Uml::CompositionChildRole Component::meta_Port_children;
	::Uml::CompositionChildRole Component::meta_ReadonlyAttribute_children;
	::Uml::CompositionChildRole Component::meta_WorkerType_children;
	::Uml::CompositionParentRole Component::meta_ComponentAssembly_parent;

	Collection::Collection() {}
	Collection::Collection(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	Collection::Collection(const Collection &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Collection::Collection(Collection &&master) : NoInheritable(master), MgaObject(master) {};

	Collection Collection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Collection& Collection::operator=(Collection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Collection Collection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Collection Collection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Collection Collection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Collection> Collection::Instances() { return ::Udm::InstantiatedAttr< Collection>(impl); }
	Collection Collection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Collection> Collection::Derived() { return ::Udm::DerivedAttr< Collection>(impl); }
	::Udm::ArchetypeAttr< Collection> Collection::Archetype() const { return ::Udm::ArchetypeAttr< Collection>(impl); }
	::Udm::StringAttr Collection::bound() const { return ::Udm::StringAttr(impl, meta_bound); }
	::Udm::PointerAttr< MemberType> Collection::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::MgaObject> Collection::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Collection::Accept(Visitor &v) { v.Visit_Collection(*this); }

	::Uml::Class Collection::meta;
	::Uml::Attribute Collection::meta_bound;
	::Uml::AssociationRole Collection::meta_ref;

	Alias::Alias() {}
	Alias::Alias(::Udm::ObjectImpl *impl) : NoInheritable(impl), MgaObject(impl) {}
	Alias::Alias(const Alias &master) : NoInheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Alias::Alias(Alias &&master) : NoInheritable(master), MgaObject(master) {};

	Alias Alias::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Alias& Alias::operator=(Alias &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Alias Alias::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Alias Alias::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Alias Alias::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Alias> Alias::Instances() { return ::Udm::InstantiatedAttr< Alias>(impl); }
	Alias Alias::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Alias> Alias::Derived() { return ::Udm::DerivedAttr< Alias>(impl); }
	::Udm::ArchetypeAttr< Alias> Alias::Archetype() const { return ::Udm::ArchetypeAttr< Alias>(impl); }
	::Udm::PointerAttr< MemberType> Alias::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::MgaObject> Alias::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Alias::Accept(Visitor &v) { v.Visit_Alias(*this); }

	::Uml::Class Alias::meta;
	::Uml::AssociationRole Alias::meta_ref;

	Member::Member() {}
	Member::Member(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Member::Member(const Member &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Member::Member(Member &&master) : MgaObject(master) {};

	Member Member::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Member& Member::operator=(Member &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Member Member::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Member Member::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Member Member::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Member> Member::Instances() { return ::Udm::InstantiatedAttr< Member>(impl); }
	Member Member::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Member> Member::Derived() { return ::Udm::DerivedAttr< Member>(impl); }
	::Udm::ArchetypeAttr< Member> Member::Archetype() const { return ::Udm::ArchetypeAttr< Member>(impl); }
	::Udm::AClassAssocAttr< LabelConnection, Label> Member::dstLabelConnection() const { return ::Udm::AClassAssocAttr< LabelConnection, Label>(impl, meta_dstLabelConnection, meta_dstLabelConnection_rev); }
	::Udm::PointerAttr< MemberType> Member::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::AClassPointerAttr< MakeMemberPrivate, PrivateFlag> Member::dstMakeMemberPrivate() const { return ::Udm::AClassPointerAttr< MakeMemberPrivate, PrivateFlag>(impl, meta_dstMakeMemberPrivate, meta_dstMakeMemberPrivate_rev); }
	::Udm::ParentAttr< ::CQML::Exception> Member::Exception_parent() const { return ::Udm::ParentAttr< ::CQML::Exception>(impl, meta_Exception_parent); }
	::Udm::ParentAttr< ::CQML::Aggregate> Member::Aggregate_parent() const { return ::Udm::ParentAttr< ::CQML::Aggregate>(impl, meta_Aggregate_parent); }
	::Udm::ParentAttr< ::CQML::SwitchedAggregate> Member::SwitchedAggregate_parent() const { return ::Udm::ParentAttr< ::CQML::SwitchedAggregate>(impl, meta_SwitchedAggregate_parent); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> Member::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::CQML::Taggable> Member::parent() const { return ::Udm::ParentAttr< ::CQML::Taggable>(impl, ::Udm::NULLPARENTROLE); }
	void Member::Accept(Visitor &v) { v.Visit_Member(*this); }

	::Uml::Class Member::meta;
	::Uml::AssociationRole Member::meta_dstLabelConnection;
	::Uml::AssociationRole Member::meta_dstLabelConnection_rev;
	::Uml::AssociationRole Member::meta_ref;
	::Uml::AssociationRole Member::meta_dstMakeMemberPrivate;
	::Uml::AssociationRole Member::meta_dstMakeMemberPrivate_rev;
	::Uml::CompositionParentRole Member::meta_Exception_parent;
	::Uml::CompositionParentRole Member::meta_Aggregate_parent;
	::Uml::CompositionParentRole Member::meta_SwitchedAggregate_parent;
	::Uml::CompositionParentRole Member::meta_ObjectByValue_parent;

	Object::Object() {}
	Object::Object(::Udm::ObjectImpl *impl) : Prefixable(impl),Provideable(impl),HasOperations(impl), MgaObject(impl) {}
	Object::Object(const Object &master) : Prefixable(master),Provideable(master),HasOperations(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Object::Object(Object &&master) : Prefixable(master),Provideable(master),HasOperations(master), MgaObject(master) {};

	Object Object::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Object& Object::operator=(Object &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Object Object::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Object Object::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Object Object::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Object> Object::Instances() { return ::Udm::InstantiatedAttr< Object>(impl); }
	Object Object::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Object> Object::Derived() { return ::Udm::DerivedAttr< Object>(impl); }
	::Udm::ArchetypeAttr< Object> Object::Archetype() const { return ::Udm::ArchetypeAttr< Object>(impl); }
	::Udm::BooleanAttr Object::abstract() const { return ::Udm::BooleanAttr(impl, meta_abstract); }
	::Udm::BooleanAttr Object::local() const { return ::Udm::BooleanAttr(impl, meta_local); }
	::Udm::AClassPointerAttr< InterfaceClassificationConn, RequiredRights> Object::dstInterfaceClassificationConn() const { return ::Udm::AClassPointerAttr< InterfaceClassificationConn, RequiredRights>(impl, meta_dstInterfaceClassificationConn, meta_dstInterfaceClassificationConn_rev); }
	::Udm::AssocAttr< Supports> Object::referedbySupports() const { return ::Udm::AssocAttr< Supports>(impl, meta_referedbySupports); }
	::Udm::AssocAttr< TargetObjectRef> Object::referedbyTargetObjectRef() const { return ::Udm::AssocAttr< TargetObjectRef>(impl, meta_referedbyTargetObjectRef); }
	::Udm::ParentAttr< ::CQML::Prefixable> Object::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void Object::Accept(Visitor &v) { v.Visit_Object(*this); }

	::Uml::Class Object::meta;
	::Uml::Attribute Object::meta_abstract;
	::Uml::Attribute Object::meta_local;
	::Uml::AssociationRole Object::meta_dstInterfaceClassificationConn;
	::Uml::AssociationRole Object::meta_dstInterfaceClassificationConn_rev;
	::Uml::AssociationRole Object::meta_referedbySupports;
	::Uml::AssociationRole Object::meta_referedbyTargetObjectRef;

	HasOperations::HasOperations() {}
	HasOperations::HasOperations(::Udm::ObjectImpl *impl) : Inheritable(impl), MgaObject(impl) {}
	HasOperations::HasOperations(const HasOperations &master) : Inheritable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	HasOperations::HasOperations(HasOperations &&master) : Inheritable(master), MgaObject(master) {};

	HasOperations HasOperations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	HasOperations& HasOperations::operator=(HasOperations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	HasOperations HasOperations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	HasOperations HasOperations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	HasOperations HasOperations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< HasOperations> HasOperations::Instances() { return ::Udm::InstantiatedAttr< HasOperations>(impl); }
	HasOperations HasOperations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< HasOperations> HasOperations::Derived() { return ::Udm::DerivedAttr< HasOperations>(impl); }
	::Udm::ArchetypeAttr< HasOperations> HasOperations::Archetype() const { return ::Udm::ArchetypeAttr< HasOperations>(impl); }
	::Udm::ChildrenAttr< ::CQML::OnewayOperation> HasOperations::OnewayOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::OnewayOperation>(impl, meta_OnewayOperation_children); }
	::Udm::ChildrenAttr< ::CQML::TwowayOperation> HasOperations::TwowayOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::TwowayOperation>(impl, meta_TwowayOperation_children); }
	::Udm::ChildrenAttr< ::CQML::Exception> HasOperations::Exception_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, meta_Exception_children); }
	::Udm::ChildrenAttr< ::CQML::Constant> HasOperations::Constant_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, meta_Constant_children); }
	::Udm::ChildrenAttr< ::CQML::NoInheritable> HasOperations::NoInheritable_children() const { return ::Udm::ChildrenAttr< ::CQML::NoInheritable>(impl, meta_NoInheritable_children); }
	::Udm::ChildrenAttr< ::CQML::RequiredRights> HasOperations::RequiredRights_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRights>(impl, meta_RequiredRights_children); }
	::Udm::ChildrenAttr< ::CQML::OperationClassificationConn> HasOperations::OperationClassificationConn_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationClassificationConn>(impl, meta_OperationClassificationConn_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> HasOperations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> HasOperations::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Exception> HasOperations::Exception_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Exception>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Enum> HasOperations::Enum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Enum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Constant> HasOperations::Constant_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Constant>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> HasOperations::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NoInheritable> HasOperations::NoInheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NoInheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Aggregate> HasOperations::Aggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Aggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SwitchedAggregate> HasOperations::SwitchedAggregate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SwitchedAggregate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NamedType> HasOperations::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Collection> HasOperations::Collection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Collection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Alias> HasOperations::Alias_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Alias>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationBase> HasOperations::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasExceptions> HasOperations::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OnewayOperation> HasOperations::OnewayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OnewayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TwowayOperation> HasOperations::TwowayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TwowayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> HasOperations::ResourceActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRights> HasOperations::RequiredRights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Rights> HasOperations::Rights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Rights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationClassificationConn> HasOperations::OperationClassificationConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationClassificationConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> HasOperations::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class HasOperations::meta;
	::Uml::CompositionChildRole HasOperations::meta_OnewayOperation_children;
	::Uml::CompositionChildRole HasOperations::meta_TwowayOperation_children;
	::Uml::CompositionChildRole HasOperations::meta_Exception_children;
	::Uml::CompositionChildRole HasOperations::meta_Constant_children;
	::Uml::CompositionChildRole HasOperations::meta_NoInheritable_children;
	::Uml::CompositionChildRole HasOperations::meta_RequiredRights_children;
	::Uml::CompositionChildRole HasOperations::meta_OperationClassificationConn_children;

	Inherits::Inherits() {}
	Inherits::Inherits(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Inherits::Inherits(const Inherits &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Inherits::Inherits(Inherits &&master) : MgaObject(master) {};

	Inherits Inherits::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Inherits& Inherits::operator=(Inherits &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Inherits Inherits::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Inherits Inherits::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Inherits Inherits::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Inherits> Inherits::Instances() { return ::Udm::InstantiatedAttr< Inherits>(impl); }
	Inherits Inherits::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Inherits> Inherits::Derived() { return ::Udm::DerivedAttr< Inherits>(impl); }
	::Udm::ArchetypeAttr< Inherits> Inherits::Archetype() const { return ::Udm::ArchetypeAttr< Inherits>(impl); }
	::Udm::PointerAttr< Inheritable> Inherits::ref() const { return ::Udm::PointerAttr< Inheritable>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Inheritable> Inherits::Inheritable_parent() const { return ::Udm::ParentAttr< ::CQML::Inheritable>(impl, meta_Inheritable_parent); }
	::Udm::ParentAttr< ::CQML::Inheritable> Inherits::parent() const { return ::Udm::ParentAttr< ::CQML::Inheritable>(impl, ::Udm::NULLPARENTROLE); }
	void Inherits::Accept(Visitor &v) { v.Visit_Inherits(*this); }

	::Uml::Class Inherits::meta;
	::Uml::AssociationRole Inherits::meta_ref;
	::Uml::CompositionParentRole Inherits::meta_Inheritable_parent;

	Event::Event() {}
	Event::Event(::Udm::ObjectImpl *impl) : ObjectByValue(impl),ExternalPortReferenceType(impl), MgaObject(impl) {}
	Event::Event(const Event &master) : ObjectByValue(master),ExternalPortReferenceType(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Event::Event(Event &&master) : ObjectByValue(master),ExternalPortReferenceType(master), MgaObject(master) {};

	Event Event::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Event& Event::operator=(Event &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Event Event::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Event Event::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Event Event::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Event> Event::Instances() { return ::Udm::InstantiatedAttr< Event>(impl); }
	Event Event::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Event> Event::Derived() { return ::Udm::DerivedAttr< Event>(impl); }
	::Udm::ArchetypeAttr< Event> Event::Archetype() const { return ::Udm::ArchetypeAttr< Event>(impl); }
	::Udm::AssocAttr< OutEventPort> Event::referedbyOutEventPort() const { return ::Udm::AssocAttr< OutEventPort>(impl, meta_referedbyOutEventPort); }
	::Udm::AssocAttr< InEventPort> Event::referedbyInEventPort() const { return ::Udm::AssocAttr< InEventPort>(impl, meta_referedbyInEventPort); }
	::Udm::AssocAttr< EventRef> Event::referedbyEventRef() const { return ::Udm::AssocAttr< EventRef>(impl, meta_referedbyEventRef); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> Event::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Event::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Event::Accept(Visitor &v) { v.Visit_Event(*this); }

	::Uml::Class Event::meta;
	::Uml::AssociationRole Event::meta_referedbyOutEventPort;
	::Uml::AssociationRole Event::meta_referedbyInEventPort;
	::Uml::AssociationRole Event::meta_referedbyEventRef;
	::Uml::CompositionParentRole Event::meta_BenchmarkAnalysis_parent;

	ObjectByValue::ObjectByValue() {}
	ObjectByValue::ObjectByValue(::Udm::ObjectImpl *impl) : Prefixable(impl),HasOperations(impl),SupportsInterfaces(impl), MgaObject(impl) {}
	ObjectByValue::ObjectByValue(const ObjectByValue &master) : Prefixable(master),HasOperations(master),SupportsInterfaces(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ObjectByValue::ObjectByValue(ObjectByValue &&master) : Prefixable(master),HasOperations(master),SupportsInterfaces(master), MgaObject(master) {};

	ObjectByValue ObjectByValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ObjectByValue& ObjectByValue::operator=(ObjectByValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ObjectByValue ObjectByValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ObjectByValue ObjectByValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ObjectByValue ObjectByValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ObjectByValue> ObjectByValue::Instances() { return ::Udm::InstantiatedAttr< ObjectByValue>(impl); }
	ObjectByValue ObjectByValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ObjectByValue> ObjectByValue::Derived() { return ::Udm::DerivedAttr< ObjectByValue>(impl); }
	::Udm::ArchetypeAttr< ObjectByValue> ObjectByValue::Archetype() const { return ::Udm::ArchetypeAttr< ObjectByValue>(impl); }
	::Udm::BooleanAttr ObjectByValue::abstract() const { return ::Udm::BooleanAttr(impl, meta_abstract); }
	::Udm::ChildrenAttr< ::CQML::FactoryOperation> ObjectByValue::FactoryOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::FactoryOperation>(impl, meta_FactoryOperation_children); }
	::Udm::ChildrenAttr< ::CQML::PrivateFlag> ObjectByValue::PrivateFlag_children() const { return ::Udm::ChildrenAttr< ::CQML::PrivateFlag>(impl, meta_PrivateFlag_children); }
	::Udm::ChildrenAttr< ::CQML::MakeMemberPrivate> ObjectByValue::MakeMemberPrivate_children() const { return ::Udm::ChildrenAttr< ::CQML::MakeMemberPrivate>(impl, meta_MakeMemberPrivate_children); }
	::Udm::ChildrenAttr< ::CQML::Member> ObjectByValue::Member_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, meta_Member_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ObjectByValue::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> ObjectByValue::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Member> ObjectByValue::Member_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Member>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PrivateFlag> ObjectByValue::PrivateFlag_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PrivateFlag>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MakeMemberPrivate> ObjectByValue::MakeMemberPrivate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MakeMemberPrivate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationBase> ObjectByValue::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasExceptions> ObjectByValue::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FactoryOperation> ObjectByValue::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> ObjectByValue::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ObjectByValue::meta;
	::Uml::Attribute ObjectByValue::meta_abstract;
	::Uml::CompositionChildRole ObjectByValue::meta_FactoryOperation_children;
	::Uml::CompositionChildRole ObjectByValue::meta_PrivateFlag_children;
	::Uml::CompositionChildRole ObjectByValue::meta_MakeMemberPrivate_children;
	::Uml::CompositionChildRole ObjectByValue::meta_Member_children;

	ExternalPortReferenceType::ExternalPortReferenceType() {}
	ExternalPortReferenceType::ExternalPortReferenceType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalPortReferenceType::ExternalPortReferenceType(const ExternalPortReferenceType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalPortReferenceType::ExternalPortReferenceType(ExternalPortReferenceType &&master) : MgaObject(master) {};

	ExternalPortReferenceType ExternalPortReferenceType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalPortReferenceType& ExternalPortReferenceType::operator=(ExternalPortReferenceType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalPortReferenceType ExternalPortReferenceType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalPortReferenceType ExternalPortReferenceType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalPortReferenceType ExternalPortReferenceType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalPortReferenceType> ExternalPortReferenceType::Instances() { return ::Udm::InstantiatedAttr< ExternalPortReferenceType>(impl); }
	ExternalPortReferenceType ExternalPortReferenceType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalPortReferenceType> ExternalPortReferenceType::Derived() { return ::Udm::DerivedAttr< ExternalPortReferenceType>(impl); }
	::Udm::ArchetypeAttr< ExternalPortReferenceType> ExternalPortReferenceType::Archetype() const { return ::Udm::ArchetypeAttr< ExternalPortReferenceType>(impl); }
	::Udm::AssocAttr< ExternalPortReference> ExternalPortReferenceType::referedbyExternalPortReference() const { return ::Udm::AssocAttr< ExternalPortReference>(impl, meta_referedbyExternalPortReference); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> ExternalPortReferenceType::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ExternalPortReferenceType::meta;
	::Uml::AssociationRole ExternalPortReferenceType::meta_referedbyExternalPortReference;

	ValueObject::ValueObject() {}
	ValueObject::ValueObject(::Udm::ObjectImpl *impl) : ObjectByValue(impl), MgaObject(impl) {}
	ValueObject::ValueObject(const ValueObject &master) : ObjectByValue(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ValueObject::ValueObject(ValueObject &&master) : ObjectByValue(master), MgaObject(master) {};

	ValueObject ValueObject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ValueObject& ValueObject::operator=(ValueObject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ValueObject ValueObject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ValueObject ValueObject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ValueObject ValueObject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ValueObject> ValueObject::Instances() { return ::Udm::InstantiatedAttr< ValueObject>(impl); }
	ValueObject ValueObject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ValueObject> ValueObject::Derived() { return ::Udm::DerivedAttr< ValueObject>(impl); }
	::Udm::ArchetypeAttr< ValueObject> ValueObject::Archetype() const { return ::Udm::ArchetypeAttr< ValueObject>(impl); }
	::Udm::AssocAttr< LookupKey> ValueObject::referedbyLookupKey() const { return ::Udm::AssocAttr< LookupKey>(impl, meta_referedbyLookupKey); }
	::Udm::ParentAttr< ::CQML::Prefixable> ValueObject::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void ValueObject::Accept(Visitor &v) { v.Visit_ValueObject(*this); }

	::Uml::Class ValueObject::meta;
	::Uml::AssociationRole ValueObject::meta_referedbyLookupKey;

	ComponentFactory::ComponentFactory() {}
	ComponentFactory::ComponentFactory(::Udm::ObjectImpl *impl) : HasOperations(impl),SupportsInterfaces(impl), MgaObject(impl) {}
	ComponentFactory::ComponentFactory(const ComponentFactory &master) : HasOperations(master),SupportsInterfaces(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentFactory::ComponentFactory(ComponentFactory &&master) : HasOperations(master),SupportsInterfaces(master), MgaObject(master) {};

	ComponentFactory ComponentFactory::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactory& ComponentFactory::operator=(ComponentFactory &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactory ComponentFactory::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactory ComponentFactory::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactory ComponentFactory::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactory> ComponentFactory::Instances() { return ::Udm::InstantiatedAttr< ComponentFactory>(impl); }
	ComponentFactory ComponentFactory::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactory> ComponentFactory::Derived() { return ::Udm::DerivedAttr< ComponentFactory>(impl); }
	::Udm::ArchetypeAttr< ComponentFactory> ComponentFactory::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactory>(impl); }
	::Udm::AClassPointerAttr< ManagesComponent, Manageable> ComponentFactory::dstManagesComponent() const { return ::Udm::AClassPointerAttr< ManagesComponent, Manageable>(impl, meta_dstManagesComponent, meta_dstManagesComponent_rev); }
	::Udm::AssocAttr< ComponentFactoryInstance> ComponentFactory::referedbyComponentFactoryInstance() const { return ::Udm::AssocAttr< ComponentFactoryInstance>(impl, meta_referedbyComponentFactoryInstance); }
	::Udm::ChildrenAttr< ::CQML::FactoryOperation> ComponentFactory::FactoryOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::FactoryOperation>(impl, meta_FactoryOperation_children); }
	::Udm::ChildAttr< ::CQML::LookupKey> ComponentFactory::LookupKey_child() const { return ::Udm::ChildAttr< ::CQML::LookupKey>(impl, meta_LookupKey_child); }
	::Udm::ChildrenAttr< ::CQML::LookupOperation> ComponentFactory::LookupOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::LookupOperation>(impl, meta_LookupOperation_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentFactory::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> ComponentFactory::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LookupKey> ComponentFactory::LookupKey_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LookupKey>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationBase> ComponentFactory::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasExceptions> ComponentFactory::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FactoryOperation> ComponentFactory::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LookupOperation> ComponentFactory::LookupOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LookupOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Prefixable> ComponentFactory::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactory::Accept(Visitor &v) { v.Visit_ComponentFactory(*this); }

	::Uml::Class ComponentFactory::meta;
	::Uml::AssociationRole ComponentFactory::meta_dstManagesComponent;
	::Uml::AssociationRole ComponentFactory::meta_dstManagesComponent_rev;
	::Uml::AssociationRole ComponentFactory::meta_referedbyComponentFactoryInstance;
	::Uml::CompositionChildRole ComponentFactory::meta_FactoryOperation_children;
	::Uml::CompositionChildRole ComponentFactory::meta_LookupKey_child;
	::Uml::CompositionChildRole ComponentFactory::meta_LookupOperation_children;

	SupportsInterfaces::SupportsInterfaces() {}
	SupportsInterfaces::SupportsInterfaces(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SupportsInterfaces::SupportsInterfaces(const SupportsInterfaces &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SupportsInterfaces::SupportsInterfaces(SupportsInterfaces &&master) : MgaObject(master) {};

	SupportsInterfaces SupportsInterfaces::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SupportsInterfaces& SupportsInterfaces::operator=(SupportsInterfaces &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SupportsInterfaces SupportsInterfaces::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SupportsInterfaces SupportsInterfaces::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SupportsInterfaces SupportsInterfaces::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SupportsInterfaces> SupportsInterfaces::Instances() { return ::Udm::InstantiatedAttr< SupportsInterfaces>(impl); }
	SupportsInterfaces SupportsInterfaces::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SupportsInterfaces> SupportsInterfaces::Derived() { return ::Udm::DerivedAttr< SupportsInterfaces>(impl); }
	::Udm::ArchetypeAttr< SupportsInterfaces> SupportsInterfaces::Archetype() const { return ::Udm::ArchetypeAttr< SupportsInterfaces>(impl); }
	::Udm::ChildrenAttr< ::CQML::Supports> SupportsInterfaces::Supports_children() const { return ::Udm::ChildrenAttr< ::CQML::Supports>(impl, meta_Supports_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SupportsInterfaces::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Supports> SupportsInterfaces::Supports_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Supports>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InvokePortBase> SupportsInterfaces::InvokePortBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InvokePortBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> SupportsInterfaces::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SupportsInterfaces::meta;
	::Uml::CompositionChildRole SupportsInterfaces::meta_Supports_children;

	Supports::Supports() {}
	Supports::Supports(::Udm::ObjectImpl *impl) : InvokePortBase(impl), MgaObject(impl) {}
	Supports::Supports(const Supports &master) : InvokePortBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Supports::Supports(Supports &&master) : InvokePortBase(master), MgaObject(master) {};

	Supports Supports::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Supports& Supports::operator=(Supports &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Supports Supports::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Supports Supports::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Supports Supports::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Supports> Supports::Instances() { return ::Udm::InstantiatedAttr< Supports>(impl); }
	Supports Supports::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Supports> Supports::Derived() { return ::Udm::DerivedAttr< Supports>(impl); }
	::Udm::ArchetypeAttr< Supports> Supports::Archetype() const { return ::Udm::ArchetypeAttr< Supports>(impl); }
	::Udm::PointerAttr< ::CQML::Object> Supports::ref() const { return ::Udm::PointerAttr< ::CQML::Object>(impl, meta_ref); }
	::Udm::AClassAssocAttr< SupportsDelegate, ProvidedRequestPort> Supports::dstSupportsDelegate() const { return ::Udm::AClassAssocAttr< SupportsDelegate, ProvidedRequestPort>(impl, meta_dstSupportsDelegate, meta_dstSupportsDelegate_rev); }
	::Udm::ParentAttr< ::CQML::SupportsInterfaces> Supports::SupportsInterfaces_parent() const { return ::Udm::ParentAttr< ::CQML::SupportsInterfaces>(impl, meta_SupportsInterfaces_parent); }
	::Udm::ParentAttr< ::CQML::SupportsInterfaces> Supports::parent() const { return ::Udm::ParentAttr< ::CQML::SupportsInterfaces>(impl, ::Udm::NULLPARENTROLE); }
	void Supports::Accept(Visitor &v) { v.Visit_Supports(*this); }

	::Uml::Class Supports::meta;
	::Uml::AssociationRole Supports::meta_ref;
	::Uml::AssociationRole Supports::meta_dstSupportsDelegate;
	::Uml::AssociationRole Supports::meta_dstSupportsDelegate_rev;
	::Uml::CompositionParentRole Supports::meta_SupportsInterfaces_parent;

	InvokePortBase::InvokePortBase() {}
	InvokePortBase::InvokePortBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InvokePortBase::InvokePortBase(const InvokePortBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InvokePortBase::InvokePortBase(InvokePortBase &&master) : MgaObject(master) {};

	InvokePortBase InvokePortBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InvokePortBase& InvokePortBase::operator=(InvokePortBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InvokePortBase InvokePortBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InvokePortBase InvokePortBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InvokePortBase InvokePortBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InvokePortBase> InvokePortBase::Instances() { return ::Udm::InstantiatedAttr< InvokePortBase>(impl); }
	InvokePortBase InvokePortBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InvokePortBase> InvokePortBase::Derived() { return ::Udm::DerivedAttr< InvokePortBase>(impl); }
	::Udm::ArchetypeAttr< InvokePortBase> InvokePortBase::Archetype() const { return ::Udm::ArchetypeAttr< InvokePortBase>(impl); }
	::Udm::AClassAssocAttr< invoke, RequiredRequestPort> InvokePortBase::srcinvoke() const { return ::Udm::AClassAssocAttr< invoke, RequiredRequestPort>(impl, meta_srcinvoke, meta_srcinvoke_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> InvokePortBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class InvokePortBase::meta;
	::Uml::AssociationRole InvokePortBase::meta_srcinvoke;
	::Uml::AssociationRole InvokePortBase::meta_srcinvoke_rev;

	ReadonlyAttribute::ReadonlyAttribute() {}
	ReadonlyAttribute::ReadonlyAttribute(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	ReadonlyAttribute::ReadonlyAttribute(const ReadonlyAttribute &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ReadonlyAttribute::ReadonlyAttribute(ReadonlyAttribute &&master) : Taggable(master), MgaObject(master) {};

	ReadonlyAttribute ReadonlyAttribute::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReadonlyAttribute& ReadonlyAttribute::operator=(ReadonlyAttribute &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReadonlyAttribute ReadonlyAttribute::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReadonlyAttribute ReadonlyAttribute::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReadonlyAttribute ReadonlyAttribute::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReadonlyAttribute> ReadonlyAttribute::Instances() { return ::Udm::InstantiatedAttr< ReadonlyAttribute>(impl); }
	ReadonlyAttribute ReadonlyAttribute::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReadonlyAttribute> ReadonlyAttribute::Derived() { return ::Udm::DerivedAttr< ReadonlyAttribute>(impl); }
	::Udm::ArchetypeAttr< ReadonlyAttribute> ReadonlyAttribute::Archetype() const { return ::Udm::ArchetypeAttr< ReadonlyAttribute>(impl); }
	::Udm::AClassPointerAttr< AttributeValue, Property> ReadonlyAttribute::dstAttributeValue() const { return ::Udm::AClassPointerAttr< AttributeValue, Property>(impl, meta_dstAttributeValue, meta_dstAttributeValue_rev); }
	::Udm::AClassPointerAttr< AttributeDelegate, AttributeMapping> ReadonlyAttribute::srcAttributeDelegate() const { return ::Udm::AClassPointerAttr< AttributeDelegate, AttributeMapping>(impl, meta_srcAttributeDelegate, meta_srcAttributeDelegate_rev); }
	::Udm::AssocAttr< AttributeMapping> ReadonlyAttribute::referedbyAttributeMapping() const { return ::Udm::AssocAttr< AttributeMapping>(impl, meta_referedbyAttributeMapping); }
	::Udm::AssocAttr< AttributeRef> ReadonlyAttribute::referedbyAttributeRef() const { return ::Udm::AssocAttr< AttributeRef>(impl, meta_referedbyAttributeRef); }
	::Udm::ChildrenAttr< ::CQML::GetException> ReadonlyAttribute::GetException_children() const { return ::Udm::ChildrenAttr< ::CQML::GetException>(impl, meta_GetException_children); }
	::Udm::ChildAttr< ::CQML::AttributeMember> ReadonlyAttribute::AttributeMember_child() const { return ::Udm::ChildAttr< ::CQML::AttributeMember>(impl, meta_AttributeMember_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ReadonlyAttribute::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GetException> ReadonlyAttribute::GetException_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GetException>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeMember> ReadonlyAttribute::AttributeMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Inheritable> ReadonlyAttribute::Inheritable_parent() const { return ::Udm::ParentAttr< ::CQML::Inheritable>(impl, meta_Inheritable_parent); }
	::Udm::ParentAttr< ::CQML::Component> ReadonlyAttribute::Component_parent() const { return ::Udm::ParentAttr< ::CQML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::CQML::NamedType> ReadonlyAttribute::parent() const { return ::Udm::ParentAttr< ::CQML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void ReadonlyAttribute::Accept(Visitor &v) { v.Visit_ReadonlyAttribute(*this); }

	::Uml::Class ReadonlyAttribute::meta;
	::Uml::AssociationRole ReadonlyAttribute::meta_dstAttributeValue;
	::Uml::AssociationRole ReadonlyAttribute::meta_dstAttributeValue_rev;
	::Uml::AssociationRole ReadonlyAttribute::meta_srcAttributeDelegate;
	::Uml::AssociationRole ReadonlyAttribute::meta_srcAttributeDelegate_rev;
	::Uml::AssociationRole ReadonlyAttribute::meta_referedbyAttributeMapping;
	::Uml::AssociationRole ReadonlyAttribute::meta_referedbyAttributeRef;
	::Uml::CompositionChildRole ReadonlyAttribute::meta_GetException_children;
	::Uml::CompositionChildRole ReadonlyAttribute::meta_AttributeMember_child;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_Inheritable_parent;
	::Uml::CompositionParentRole ReadonlyAttribute::meta_Component_parent;

	Attribute::Attribute() {}
	Attribute::Attribute(::Udm::ObjectImpl *impl) : ReadonlyAttribute(impl), MgaObject(impl) {}
	Attribute::Attribute(const Attribute &master) : ReadonlyAttribute(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Attribute::Attribute(Attribute &&master) : ReadonlyAttribute(master), MgaObject(master) {};

	Attribute Attribute::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Attribute& Attribute::operator=(Attribute &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Attribute Attribute::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Attribute Attribute::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Attribute Attribute::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Attribute> Attribute::Instances() { return ::Udm::InstantiatedAttr< Attribute>(impl); }
	Attribute Attribute::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Attribute> Attribute::Derived() { return ::Udm::DerivedAttr< Attribute>(impl); }
	::Udm::ArchetypeAttr< Attribute> Attribute::Archetype() const { return ::Udm::ArchetypeAttr< Attribute>(impl); }
	::Udm::ChildrenAttr< ::CQML::SetException> Attribute::SetException_children() const { return ::Udm::ChildrenAttr< ::CQML::SetException>(impl, meta_SetException_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Attribute::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SetException> Attribute::SetException_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SetException>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::NamedType> Attribute::parent() const { return ::Udm::ParentAttr< ::CQML::NamedType>(impl, ::Udm::NULLPARENTROLE); }
	void Attribute::Accept(Visitor &v) { v.Visit_Attribute(*this); }

	::Uml::Class Attribute::meta;
	::Uml::CompositionChildRole Attribute::meta_SetException_children;

	LookupKey::LookupKey() {}
	LookupKey::LookupKey(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LookupKey::LookupKey(const LookupKey &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LookupKey::LookupKey(LookupKey &&master) : MgaObject(master) {};

	LookupKey LookupKey::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LookupKey& LookupKey::operator=(LookupKey &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LookupKey LookupKey::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LookupKey LookupKey::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LookupKey LookupKey::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LookupKey> LookupKey::Instances() { return ::Udm::InstantiatedAttr< LookupKey>(impl); }
	LookupKey LookupKey::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LookupKey> LookupKey::Derived() { return ::Udm::DerivedAttr< LookupKey>(impl); }
	::Udm::ArchetypeAttr< LookupKey> LookupKey::Archetype() const { return ::Udm::ArchetypeAttr< LookupKey>(impl); }
	::Udm::PointerAttr< ValueObject> LookupKey::ref() const { return ::Udm::PointerAttr< ValueObject>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ComponentFactory> LookupKey::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::CQML::ComponentFactory> LookupKey::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactory>(impl, ::Udm::NULLPARENTROLE); }
	void LookupKey::Accept(Visitor &v) { v.Visit_LookupKey(*this); }

	::Uml::Class LookupKey::meta;
	::Uml::AssociationRole LookupKey::meta_ref;
	::Uml::CompositionParentRole LookupKey::meta_ComponentFactory_parent;

	SetException::SetException() {}
	SetException::SetException(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SetException::SetException(const SetException &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SetException::SetException(SetException &&master) : MgaObject(master) {};

	SetException SetException::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SetException& SetException::operator=(SetException &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SetException SetException::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SetException SetException::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SetException SetException::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SetException> SetException::Instances() { return ::Udm::InstantiatedAttr< SetException>(impl); }
	SetException SetException::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SetException> SetException::Derived() { return ::Udm::DerivedAttr< SetException>(impl); }
	::Udm::ArchetypeAttr< SetException> SetException::Archetype() const { return ::Udm::ArchetypeAttr< SetException>(impl); }
	::Udm::PointerAttr< Exception> SetException::ref() const { return ::Udm::PointerAttr< Exception>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Attribute> SetException::Attribute_parent() const { return ::Udm::ParentAttr< ::CQML::Attribute>(impl, meta_Attribute_parent); }
	::Udm::ParentAttr< ::CQML::Attribute> SetException::parent() const { return ::Udm::ParentAttr< ::CQML::Attribute>(impl, ::Udm::NULLPARENTROLE); }
	void SetException::Accept(Visitor &v) { v.Visit_SetException(*this); }

	::Uml::Class SetException::meta;
	::Uml::AssociationRole SetException::meta_ref;
	::Uml::CompositionParentRole SetException::meta_Attribute_parent;

	GetException::GetException() {}
	GetException::GetException(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	GetException::GetException(const GetException &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	GetException::GetException(GetException &&master) : MgaObject(master) {};

	GetException GetException::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GetException& GetException::operator=(GetException &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GetException GetException::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GetException GetException::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GetException GetException::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GetException> GetException::Instances() { return ::Udm::InstantiatedAttr< GetException>(impl); }
	GetException GetException::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GetException> GetException::Derived() { return ::Udm::DerivedAttr< GetException>(impl); }
	::Udm::ArchetypeAttr< GetException> GetException::Archetype() const { return ::Udm::ArchetypeAttr< GetException>(impl); }
	::Udm::PointerAttr< Exception> GetException::ref() const { return ::Udm::PointerAttr< Exception>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ReadonlyAttribute> GetException::ReadonlyAttribute_parent() const { return ::Udm::ParentAttr< ::CQML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_parent); }
	::Udm::ParentAttr< ::CQML::ReadonlyAttribute> GetException::parent() const { return ::Udm::ParentAttr< ::CQML::ReadonlyAttribute>(impl, ::Udm::NULLPARENTROLE); }
	void GetException::Accept(Visitor &v) { v.Visit_GetException(*this); }

	::Uml::Class GetException::meta;
	::Uml::AssociationRole GetException::meta_ref;
	::Uml::CompositionParentRole GetException::meta_ReadonlyAttribute_parent;

	PrivateFlag::PrivateFlag() {}
	PrivateFlag::PrivateFlag(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PrivateFlag::PrivateFlag(const PrivateFlag &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PrivateFlag::PrivateFlag(PrivateFlag &&master) : MgaObject(master) {};

	PrivateFlag PrivateFlag::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PrivateFlag& PrivateFlag::operator=(PrivateFlag &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PrivateFlag PrivateFlag::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PrivateFlag PrivateFlag::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PrivateFlag PrivateFlag::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PrivateFlag> PrivateFlag::Instances() { return ::Udm::InstantiatedAttr< PrivateFlag>(impl); }
	PrivateFlag PrivateFlag::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PrivateFlag> PrivateFlag::Derived() { return ::Udm::DerivedAttr< PrivateFlag>(impl); }
	::Udm::ArchetypeAttr< PrivateFlag> PrivateFlag::Archetype() const { return ::Udm::ArchetypeAttr< PrivateFlag>(impl); }
	::Udm::AClassPointerAttr< MakeMemberPrivate, Member> PrivateFlag::srcMakeMemberPrivate() const { return ::Udm::AClassPointerAttr< MakeMemberPrivate, Member>(impl, meta_srcMakeMemberPrivate, meta_srcMakeMemberPrivate_rev); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> PrivateFlag::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> PrivateFlag::parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, ::Udm::NULLPARENTROLE); }
	void PrivateFlag::Accept(Visitor &v) { v.Visit_PrivateFlag(*this); }

	::Uml::Class PrivateFlag::meta;
	::Uml::AssociationRole PrivateFlag::meta_srcMakeMemberPrivate;
	::Uml::AssociationRole PrivateFlag::meta_srcMakeMemberPrivate_rev;
	::Uml::CompositionParentRole PrivateFlag::meta_ObjectByValue_parent;

	MakeMemberPrivate::MakeMemberPrivate() {}
	MakeMemberPrivate::MakeMemberPrivate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MakeMemberPrivate::MakeMemberPrivate(const MakeMemberPrivate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MakeMemberPrivate::MakeMemberPrivate(MakeMemberPrivate &&master) : MgaObject(master) {};

	MakeMemberPrivate MakeMemberPrivate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MakeMemberPrivate& MakeMemberPrivate::operator=(MakeMemberPrivate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MakeMemberPrivate MakeMemberPrivate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MakeMemberPrivate MakeMemberPrivate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MakeMemberPrivate MakeMemberPrivate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MakeMemberPrivate> MakeMemberPrivate::Instances() { return ::Udm::InstantiatedAttr< MakeMemberPrivate>(impl); }
	MakeMemberPrivate MakeMemberPrivate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MakeMemberPrivate> MakeMemberPrivate::Derived() { return ::Udm::DerivedAttr< MakeMemberPrivate>(impl); }
	::Udm::ArchetypeAttr< MakeMemberPrivate> MakeMemberPrivate::Archetype() const { return ::Udm::ArchetypeAttr< MakeMemberPrivate>(impl); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> MakeMemberPrivate::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> MakeMemberPrivate::parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Member> MakeMemberPrivate::srcMakeMemberPrivate_end() const { return ::Udm::AssocEndAttr< ::CQML::Member>(impl, meta_srcMakeMemberPrivate_end_); }
	::Udm::AssocEndAttr< ::CQML::PrivateFlag> MakeMemberPrivate::dstMakeMemberPrivate_end() const { return ::Udm::AssocEndAttr< ::CQML::PrivateFlag>(impl, meta_dstMakeMemberPrivate_end_); }
	void MakeMemberPrivate::Accept(Visitor &v) { v.Visit_MakeMemberPrivate(*this); }

	::Uml::Class MakeMemberPrivate::meta;
	::Uml::CompositionParentRole MakeMemberPrivate::meta_ObjectByValue_parent;
	::Uml::AssociationRole MakeMemberPrivate::meta_srcMakeMemberPrivate_end_;
	::Uml::AssociationRole MakeMemberPrivate::meta_dstMakeMemberPrivate_end_;

	AttributeMember::AttributeMember() {}
	AttributeMember::AttributeMember(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMember::AttributeMember(const AttributeMember &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMember::AttributeMember(AttributeMember &&master) : MgaObject(master) {};

	AttributeMember AttributeMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMember& AttributeMember::operator=(AttributeMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMember AttributeMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMember AttributeMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMember AttributeMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMember> AttributeMember::Instances() { return ::Udm::InstantiatedAttr< AttributeMember>(impl); }
	AttributeMember AttributeMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMember> AttributeMember::Derived() { return ::Udm::DerivedAttr< AttributeMember>(impl); }
	::Udm::ArchetypeAttr< AttributeMember> AttributeMember::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMember>(impl); }
	::Udm::PointerAttr< MemberType> AttributeMember::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ReadonlyAttribute> AttributeMember::ReadonlyAttribute_parent() const { return ::Udm::ParentAttr< ::CQML::ReadonlyAttribute>(impl, meta_ReadonlyAttribute_parent); }
	::Udm::ParentAttr< ::CQML::ReadonlyAttribute> AttributeMember::parent() const { return ::Udm::ParentAttr< ::CQML::ReadonlyAttribute>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeMember::Accept(Visitor &v) { v.Visit_AttributeMember(*this); }

	::Uml::Class AttributeMember::meta;
	::Uml::AssociationRole AttributeMember::meta_ref;
	::Uml::CompositionParentRole AttributeMember::meta_ReadonlyAttribute_parent;

	OperationBase::OperationBase() {}
	OperationBase::OperationBase(::Udm::ObjectImpl *impl) : Taggable(impl), MgaObject(impl) {}
	OperationBase::OperationBase(const OperationBase &master) : Taggable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationBase::OperationBase(OperationBase &&master) : Taggable(master), MgaObject(master) {};

	OperationBase OperationBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationBase& OperationBase::operator=(OperationBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationBase OperationBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationBase OperationBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationBase OperationBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationBase> OperationBase::Instances() { return ::Udm::InstantiatedAttr< OperationBase>(impl); }
	OperationBase OperationBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationBase> OperationBase::Derived() { return ::Udm::DerivedAttr< OperationBase>(impl); }
	::Udm::ArchetypeAttr< OperationBase> OperationBase::Archetype() const { return ::Udm::ArchetypeAttr< OperationBase>(impl); }
	::Udm::AClassPointerAttr< OperationClassificationConn, RequiredRights> OperationBase::dstOperationClassificationConn() const { return ::Udm::AClassPointerAttr< OperationClassificationConn, RequiredRights>(impl, meta_dstOperationClassificationConn, meta_dstOperationClassificationConn_rev); }
	::Udm::AssocAttr< OperationRef> OperationBase::referedbyOperationRef() const { return ::Udm::AssocAttr< OperationRef>(impl, meta_referedbyOperationRef); }
	::Udm::ChildrenAttr< ::CQML::InParameter> OperationBase::InParameter_children() const { return ::Udm::ChildrenAttr< ::CQML::InParameter>(impl, meta_InParameter_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> OperationBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InParameter> OperationBase::InParameter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ParameterType> OperationBase::ParameterType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ParameterType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> OperationBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> OperationBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class OperationBase::meta;
	::Uml::AssociationRole OperationBase::meta_dstOperationClassificationConn;
	::Uml::AssociationRole OperationBase::meta_dstOperationClassificationConn_rev;
	::Uml::AssociationRole OperationBase::meta_referedbyOperationRef;
	::Uml::CompositionChildRole OperationBase::meta_InParameter_children;
	::Uml::CompositionParentRole OperationBase::meta_BenchmarkAnalysis_parent;

	HasExceptions::HasExceptions() {}
	HasExceptions::HasExceptions(::Udm::ObjectImpl *impl) : OperationBase(impl), MgaObject(impl) {}
	HasExceptions::HasExceptions(const HasExceptions &master) : OperationBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	HasExceptions::HasExceptions(HasExceptions &&master) : OperationBase(master), MgaObject(master) {};

	HasExceptions HasExceptions::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	HasExceptions& HasExceptions::operator=(HasExceptions &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	HasExceptions HasExceptions::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	HasExceptions HasExceptions::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	HasExceptions HasExceptions::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< HasExceptions> HasExceptions::Instances() { return ::Udm::InstantiatedAttr< HasExceptions>(impl); }
	HasExceptions HasExceptions::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< HasExceptions> HasExceptions::Derived() { return ::Udm::DerivedAttr< HasExceptions>(impl); }
	::Udm::ArchetypeAttr< HasExceptions> HasExceptions::Archetype() const { return ::Udm::ArchetypeAttr< HasExceptions>(impl); }
	::Udm::ChildrenAttr< ::CQML::ExceptionRef> HasExceptions::ExceptionRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ExceptionRef>(impl, meta_ExceptionRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> HasExceptions::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExceptionRef> HasExceptions::ExceptionRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExceptionRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> HasExceptions::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class HasExceptions::meta;
	::Uml::CompositionChildRole HasExceptions::meta_ExceptionRef_children;

	OnewayOperation::OnewayOperation() {}
	OnewayOperation::OnewayOperation(::Udm::ObjectImpl *impl) : OperationBase(impl), MgaObject(impl) {}
	OnewayOperation::OnewayOperation(const OnewayOperation &master) : OperationBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OnewayOperation::OnewayOperation(OnewayOperation &&master) : OperationBase(master), MgaObject(master) {};

	OnewayOperation OnewayOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OnewayOperation& OnewayOperation::operator=(OnewayOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OnewayOperation OnewayOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OnewayOperation OnewayOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OnewayOperation OnewayOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OnewayOperation> OnewayOperation::Instances() { return ::Udm::InstantiatedAttr< OnewayOperation>(impl); }
	OnewayOperation OnewayOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OnewayOperation> OnewayOperation::Derived() { return ::Udm::DerivedAttr< OnewayOperation>(impl); }
	::Udm::ArchetypeAttr< OnewayOperation> OnewayOperation::Archetype() const { return ::Udm::ArchetypeAttr< OnewayOperation>(impl); }
	::Udm::ParentAttr< ::CQML::HasOperations> OnewayOperation::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> OnewayOperation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OnewayOperation::Accept(Visitor &v) { v.Visit_OnewayOperation(*this); }

	::Uml::Class OnewayOperation::meta;
	::Uml::CompositionParentRole OnewayOperation::meta_HasOperations_parent;

	FactoryOperation::FactoryOperation() {}
	FactoryOperation::FactoryOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	FactoryOperation::FactoryOperation(const FactoryOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	FactoryOperation::FactoryOperation(FactoryOperation &&master) : HasExceptions(master), MgaObject(master) {};

	FactoryOperation FactoryOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FactoryOperation& FactoryOperation::operator=(FactoryOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FactoryOperation FactoryOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FactoryOperation FactoryOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FactoryOperation FactoryOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FactoryOperation> FactoryOperation::Instances() { return ::Udm::InstantiatedAttr< FactoryOperation>(impl); }
	FactoryOperation FactoryOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FactoryOperation> FactoryOperation::Derived() { return ::Udm::DerivedAttr< FactoryOperation>(impl); }
	::Udm::ArchetypeAttr< FactoryOperation> FactoryOperation::Archetype() const { return ::Udm::ArchetypeAttr< FactoryOperation>(impl); }
	::Udm::ParentAttr< ::CQML::ObjectByValue> FactoryOperation::ObjectByValue_parent() const { return ::Udm::ParentAttr< ::CQML::ObjectByValue>(impl, meta_ObjectByValue_parent); }
	::Udm::ParentAttr< ::CQML::ComponentFactory> FactoryOperation::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> FactoryOperation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void FactoryOperation::Accept(Visitor &v) { v.Visit_FactoryOperation(*this); }

	::Uml::Class FactoryOperation::meta;
	::Uml::CompositionParentRole FactoryOperation::meta_ObjectByValue_parent;
	::Uml::CompositionParentRole FactoryOperation::meta_ComponentFactory_parent;

	LookupOperation::LookupOperation() {}
	LookupOperation::LookupOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	LookupOperation::LookupOperation(const LookupOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	LookupOperation::LookupOperation(LookupOperation &&master) : HasExceptions(master), MgaObject(master) {};

	LookupOperation LookupOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LookupOperation& LookupOperation::operator=(LookupOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LookupOperation LookupOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LookupOperation LookupOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LookupOperation LookupOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LookupOperation> LookupOperation::Instances() { return ::Udm::InstantiatedAttr< LookupOperation>(impl); }
	LookupOperation LookupOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LookupOperation> LookupOperation::Derived() { return ::Udm::DerivedAttr< LookupOperation>(impl); }
	::Udm::ArchetypeAttr< LookupOperation> LookupOperation::Archetype() const { return ::Udm::ArchetypeAttr< LookupOperation>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentFactory> LookupOperation::ComponentFactory_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactory>(impl, meta_ComponentFactory_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> LookupOperation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void LookupOperation::Accept(Visitor &v) { v.Visit_LookupOperation(*this); }

	::Uml::Class LookupOperation::meta;
	::Uml::CompositionParentRole LookupOperation::meta_ComponentFactory_parent;

	TwowayOperation::TwowayOperation() {}
	TwowayOperation::TwowayOperation(::Udm::ObjectImpl *impl) : HasExceptions(impl), MgaObject(impl) {}
	TwowayOperation::TwowayOperation(const TwowayOperation &master) : HasExceptions(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TwowayOperation::TwowayOperation(TwowayOperation &&master) : HasExceptions(master), MgaObject(master) {};

	TwowayOperation TwowayOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TwowayOperation& TwowayOperation::operator=(TwowayOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TwowayOperation TwowayOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TwowayOperation TwowayOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TwowayOperation TwowayOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TwowayOperation> TwowayOperation::Instances() { return ::Udm::InstantiatedAttr< TwowayOperation>(impl); }
	TwowayOperation TwowayOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TwowayOperation> TwowayOperation::Derived() { return ::Udm::DerivedAttr< TwowayOperation>(impl); }
	::Udm::ArchetypeAttr< TwowayOperation> TwowayOperation::Archetype() const { return ::Udm::ArchetypeAttr< TwowayOperation>(impl); }
	::Udm::ChildrenAttr< ::CQML::InoutParameter> TwowayOperation::InoutParameter_children() const { return ::Udm::ChildrenAttr< ::CQML::InoutParameter>(impl, meta_InoutParameter_children); }
	::Udm::ChildrenAttr< ::CQML::OutParameter> TwowayOperation::OutParameter_children() const { return ::Udm::ChildrenAttr< ::CQML::OutParameter>(impl, meta_OutParameter_children); }
	::Udm::ChildAttr< ::CQML::ReturnType> TwowayOperation::ReturnType_child() const { return ::Udm::ChildAttr< ::CQML::ReturnType>(impl, meta_ReturnType_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> TwowayOperation::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ParameterType> TwowayOperation::ParameterType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ParameterType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutParameter> TwowayOperation::OutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ReturnType> TwowayOperation::ReturnType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ReturnType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InoutParameter> TwowayOperation::InoutParameter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InoutParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::HasOperations> TwowayOperation::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> TwowayOperation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void TwowayOperation::Accept(Visitor &v) { v.Visit_TwowayOperation(*this); }

	::Uml::Class TwowayOperation::meta;
	::Uml::CompositionChildRole TwowayOperation::meta_InoutParameter_children;
	::Uml::CompositionChildRole TwowayOperation::meta_OutParameter_children;
	::Uml::CompositionChildRole TwowayOperation::meta_ReturnType_child;
	::Uml::CompositionParentRole TwowayOperation::meta_HasOperations_parent;

	InParameter::InParameter() {}
	InParameter::InParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	InParameter::InParameter(const InParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	InParameter::InParameter(InParameter &&master) : ParameterType(master) {};

	InParameter InParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InParameter& InParameter::operator=(InParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InParameter InParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InParameter InParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InParameter InParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InParameter> InParameter::Instances() { return ::Udm::InstantiatedAttr< InParameter>(impl); }
	InParameter InParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InParameter> InParameter::Derived() { return ::Udm::DerivedAttr< InParameter>(impl); }
	::Udm::ArchetypeAttr< InParameter> InParameter::Archetype() const { return ::Udm::ArchetypeAttr< InParameter>(impl); }
	::Udm::PointerAttr< MemberType> InParameter::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::OperationBase> InParameter::OperationBase_parent() const { return ::Udm::ParentAttr< ::CQML::OperationBase>(impl, meta_OperationBase_parent); }
	::Udm::ParentAttr< ::CQML::OperationBase> InParameter::parent() const { return ::Udm::ParentAttr< ::CQML::OperationBase>(impl, ::Udm::NULLPARENTROLE); }
	void InParameter::Accept(Visitor &v) { v.Visit_InParameter(*this); }

	::Uml::Class InParameter::meta;
	::Uml::AssociationRole InParameter::meta_ref;
	::Uml::CompositionParentRole InParameter::meta_OperationBase_parent;

	ParameterType::ParameterType() {}
	ParameterType::ParameterType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ParameterType::ParameterType(const ParameterType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ParameterType::ParameterType(ParameterType &&master) : MgaObject(master) {};

	ParameterType ParameterType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ParameterType& ParameterType::operator=(ParameterType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ParameterType ParameterType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ParameterType ParameterType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ParameterType ParameterType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ParameterType> ParameterType::Instances() { return ::Udm::InstantiatedAttr< ParameterType>(impl); }
	ParameterType ParameterType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ParameterType> ParameterType::Derived() { return ::Udm::DerivedAttr< ParameterType>(impl); }
	::Udm::ArchetypeAttr< ParameterType> ParameterType::Archetype() const { return ::Udm::ArchetypeAttr< ParameterType>(impl); }
	::Udm::PointerAttr< MemberType> ParameterType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::OperationBase> ParameterType::parent() const { return ::Udm::ParentAttr< ::CQML::OperationBase>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ParameterType::meta;
	::Uml::AssociationRole ParameterType::meta_ref;

	OutParameter::OutParameter() {}
	OutParameter::OutParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	OutParameter::OutParameter(const OutParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	OutParameter::OutParameter(OutParameter &&master) : ParameterType(master) {};

	OutParameter OutParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutParameter& OutParameter::operator=(OutParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutParameter OutParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutParameter OutParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutParameter OutParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutParameter> OutParameter::Instances() { return ::Udm::InstantiatedAttr< OutParameter>(impl); }
	OutParameter OutParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutParameter> OutParameter::Derived() { return ::Udm::DerivedAttr< OutParameter>(impl); }
	::Udm::ArchetypeAttr< OutParameter> OutParameter::Archetype() const { return ::Udm::ArchetypeAttr< OutParameter>(impl); }
	::Udm::PointerAttr< MemberType> OutParameter::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> OutParameter::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> OutParameter::parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, ::Udm::NULLPARENTROLE); }
	void OutParameter::Accept(Visitor &v) { v.Visit_OutParameter(*this); }

	::Uml::Class OutParameter::meta;
	::Uml::AssociationRole OutParameter::meta_ref;
	::Uml::CompositionParentRole OutParameter::meta_TwowayOperation_parent;

	ReturnType::ReturnType() {}
	ReturnType::ReturnType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ReturnType::ReturnType(const ReturnType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ReturnType::ReturnType(ReturnType &&master) : MgaObject(master) {};

	ReturnType ReturnType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReturnType& ReturnType::operator=(ReturnType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReturnType ReturnType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReturnType ReturnType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReturnType ReturnType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReturnType> ReturnType::Instances() { return ::Udm::InstantiatedAttr< ReturnType>(impl); }
	ReturnType ReturnType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReturnType> ReturnType::Derived() { return ::Udm::DerivedAttr< ReturnType>(impl); }
	::Udm::ArchetypeAttr< ReturnType> ReturnType::Archetype() const { return ::Udm::ArchetypeAttr< ReturnType>(impl); }
	::Udm::PointerAttr< MemberType> ReturnType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> ReturnType::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> ReturnType::parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, ::Udm::NULLPARENTROLE); }
	void ReturnType::Accept(Visitor &v) { v.Visit_ReturnType(*this); }

	::Uml::Class ReturnType::meta;
	::Uml::AssociationRole ReturnType::meta_ref;
	::Uml::CompositionParentRole ReturnType::meta_TwowayOperation_parent;

	InoutParameter::InoutParameter() {}
	InoutParameter::InoutParameter(::Udm::ObjectImpl *impl) : ParameterType(impl) {}
	InoutParameter::InoutParameter(const InoutParameter &master) : ParameterType(master) {}

#ifdef UDM_RVALUE
	InoutParameter::InoutParameter(InoutParameter &&master) : ParameterType(master) {};

	InoutParameter InoutParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InoutParameter& InoutParameter::operator=(InoutParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InoutParameter InoutParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InoutParameter InoutParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InoutParameter InoutParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InoutParameter> InoutParameter::Instances() { return ::Udm::InstantiatedAttr< InoutParameter>(impl); }
	InoutParameter InoutParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InoutParameter> InoutParameter::Derived() { return ::Udm::DerivedAttr< InoutParameter>(impl); }
	::Udm::ArchetypeAttr< InoutParameter> InoutParameter::Archetype() const { return ::Udm::ArchetypeAttr< InoutParameter>(impl); }
	::Udm::PointerAttr< MemberType> InoutParameter::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> InoutParameter::TwowayOperation_parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, meta_TwowayOperation_parent); }
	::Udm::ParentAttr< ::CQML::TwowayOperation> InoutParameter::parent() const { return ::Udm::ParentAttr< ::CQML::TwowayOperation>(impl, ::Udm::NULLPARENTROLE); }
	void InoutParameter::Accept(Visitor &v) { v.Visit_InoutParameter(*this); }

	::Uml::Class InoutParameter::meta;
	::Uml::AssociationRole InoutParameter::meta_ref;
	::Uml::CompositionParentRole InoutParameter::meta_TwowayOperation_parent;

	Manageable::Manageable() {}
	Manageable::Manageable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Manageable::Manageable(const Manageable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Manageable::Manageable(Manageable &&master) : MgaObject(master) {};

	Manageable Manageable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Manageable& Manageable::operator=(Manageable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Manageable Manageable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Manageable Manageable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Manageable Manageable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Manageable> Manageable::Instances() { return ::Udm::InstantiatedAttr< Manageable>(impl); }
	Manageable Manageable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Manageable> Manageable::Derived() { return ::Udm::DerivedAttr< Manageable>(impl); }
	::Udm::ArchetypeAttr< Manageable> Manageable::Archetype() const { return ::Udm::ArchetypeAttr< Manageable>(impl); }
	::Udm::AClassAssocAttr< ManagesComponent, ComponentFactory> Manageable::srcManagesComponent() const { return ::Udm::AClassAssocAttr< ManagesComponent, ComponentFactory>(impl, meta_srcManagesComponent, meta_srcManagesComponent_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> Manageable::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Manageable::meta;
	::Uml::AssociationRole Manageable::meta_srcManagesComponent;
	::Uml::AssociationRole Manageable::meta_srcManagesComponent_rev;

	TopLevelBehavior::TopLevelBehavior() {}
	TopLevelBehavior::TopLevelBehavior(::Udm::ObjectImpl *impl) : BehaviorModel(impl), MgaObject(impl) {}
	TopLevelBehavior::TopLevelBehavior(const TopLevelBehavior &master) : BehaviorModel(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelBehavior::TopLevelBehavior(TopLevelBehavior &&master) : BehaviorModel(master), MgaObject(master) {};

	TopLevelBehavior TopLevelBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelBehavior& TopLevelBehavior::operator=(TopLevelBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelBehavior TopLevelBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelBehavior TopLevelBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelBehavior TopLevelBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelBehavior> TopLevelBehavior::Instances() { return ::Udm::InstantiatedAttr< TopLevelBehavior>(impl); }
	TopLevelBehavior TopLevelBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelBehavior> TopLevelBehavior::Derived() { return ::Udm::DerivedAttr< TopLevelBehavior>(impl); }
	::Udm::ArchetypeAttr< TopLevelBehavior> TopLevelBehavior::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelBehavior>(impl); }
	::Udm::ChildrenAttr< ::CQML::MultiInput> TopLevelBehavior::MultiInput_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiInput>(impl, meta_MultiInput_children); }
	::Udm::ChildrenAttr< ::CQML::Input> TopLevelBehavior::Input_children() const { return ::Udm::ChildrenAttr< ::CQML::Input>(impl, meta_Input_children); }
	::Udm::ChildrenAttr< ::CQML::QueryInput> TopLevelBehavior::QueryInput_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryInput>(impl, meta_QueryInput_children); }
	::Udm::ChildrenAttr< ::CQML::PeriodicEvent> TopLevelBehavior::PeriodicEvent_children() const { return ::Udm::ChildrenAttr< ::CQML::PeriodicEvent>(impl, meta_PeriodicEvent_children); }
	::Udm::ChildrenAttr< ::CQML::ApplicationTask> TopLevelBehavior::ApplicationTask_children() const { return ::Udm::ChildrenAttr< ::CQML::ApplicationTask>(impl, meta_ApplicationTask_children); }
	::Udm::ChildAttr< ::CQML::Environment> TopLevelBehavior::Environment_child() const { return ::Udm::ChildAttr< ::CQML::Environment>(impl, meta_Environment_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> TopLevelBehavior::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultiInputBase> TopLevelBehavior::MultiInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SingleInputBase> TopLevelBehavior::SingleInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SingleInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Environment> TopLevelBehavior::Environment_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Environment>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PeriodicEvent> TopLevelBehavior::PeriodicEvent_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PeriodicEvent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ApplicationTask> TopLevelBehavior::ApplicationTask_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ApplicationTask>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Input> TopLevelBehavior::Input_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Input>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultiInput> TopLevelBehavior::MultiInput_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiInput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QueryInput> TopLevelBehavior::QueryInput_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryInput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> TopLevelBehavior::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class TopLevelBehavior::meta;
	::Uml::CompositionChildRole TopLevelBehavior::meta_MultiInput_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_Input_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_QueryInput_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_PeriodicEvent_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_ApplicationTask_children;
	::Uml::CompositionChildRole TopLevelBehavior::meta_Environment_child;

	ComponentBase::ComponentBase() {}
	ComponentBase::ComponentBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentBase::ComponentBase(const ComponentBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentBase::ComponentBase(ComponentBase &&master) : MgaObject(master) {};

	ComponentBase ComponentBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentBase& ComponentBase::operator=(ComponentBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentBase ComponentBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentBase ComponentBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentBase ComponentBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentBase> ComponentBase::Instances() { return ::Udm::InstantiatedAttr< ComponentBase>(impl); }
	ComponentBase ComponentBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentBase> ComponentBase::Derived() { return ::Udm::DerivedAttr< ComponentBase>(impl); }
	::Udm::ArchetypeAttr< ComponentBase> ComponentBase::Archetype() const { return ::Udm::ArchetypeAttr< ComponentBase>(impl); }
	::Udm::AClassAssocAttr< ComponentQoS, ComponentQoSCharacteristic> ComponentBase::dstComponentQoS() const { return ::Udm::AClassAssocAttr< ComponentQoS, ComponentQoSCharacteristic>(impl, meta_dstComponentQoS, meta_dstComponentQoS_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentBase::meta;
	::Uml::AssociationRole ComponentBase::meta_dstComponentQoS;
	::Uml::AssociationRole ComponentBase::meta_dstComponentQoS_rev;

	OutEventPort::OutEventPort() {}
	OutEventPort::OutEventPort(::Udm::ObjectImpl *impl) : Port(impl),SingleOutputBase(impl), MgaObject(impl) {}
	OutEventPort::OutEventPort(const OutEventPort &master) : Port(master),SingleOutputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OutEventPort::OutEventPort(OutEventPort &&master) : Port(master),SingleOutputBase(master), MgaObject(master) {};

	OutEventPort OutEventPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutEventPort& OutEventPort::operator=(OutEventPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutEventPort OutEventPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutEventPort OutEventPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutEventPort OutEventPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutEventPort> OutEventPort::Instances() { return ::Udm::InstantiatedAttr< OutEventPort>(impl); }
	OutEventPort OutEventPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutEventPort> OutEventPort::Derived() { return ::Udm::DerivedAttr< OutEventPort>(impl); }
	::Udm::ArchetypeAttr< OutEventPort> OutEventPort::Archetype() const { return ::Udm::ArchetypeAttr< OutEventPort>(impl); }
	::Udm::BooleanAttr OutEventPort::single_destination() const { return ::Udm::BooleanAttr(impl, meta_single_destination); }
	::Udm::StringAttr OutEventPort::out_event_port_type() const { return ::Udm::StringAttr(impl, meta_out_event_port_type); }
	::Udm::PointerAttr< Event> OutEventPort::ref() const { return ::Udm::PointerAttr< Event>(impl, meta_ref); }
	::Udm::AClassAssocAttr< EventSourcePublish, QoSConnector> OutEventPort::dstEventSourcePublish() const { return ::Udm::AClassAssocAttr< EventSourcePublish, QoSConnector>(impl, meta_dstEventSourcePublish, meta_dstEventSourcePublish_rev); }
	::Udm::AClassAssocAttr< publish, PublishConnector> OutEventPort::dstpublish() const { return ::Udm::AClassAssocAttr< publish, PublishConnector>(impl, meta_dstpublish, meta_dstpublish_rev); }
	::Udm::AClassPointerAttr< emit, InEventPort> OutEventPort::dstemit() const { return ::Udm::AClassPointerAttr< emit, InEventPort>(impl, meta_dstemit, meta_dstemit_rev); }
	::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPort> OutEventPort::dstEventSourceDelegate() const { return ::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPort>(impl, meta_dstEventSourceDelegate, meta_dstEventSourceDelegate_rev); }
	::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPort> OutEventPort::srcEventSourceDelegate() const { return ::Udm::AClassAssocAttr< EventSourceDelegate, OutEventPort>(impl, meta_srcEventSourceDelegate, meta_srcEventSourceDelegate_rev); }
	::Udm::AssocAttr< EventSourcePort> OutEventPort::referedbyEventSourcePort() const { return ::Udm::AssocAttr< EventSourcePort>(impl, meta_referedbyEventSourcePort); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> OutEventPort::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> OutEventPort::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OutEventPort::Accept(Visitor &v) { v.Visit_OutEventPort(*this); }

	::Uml::Class OutEventPort::meta;
	::Uml::Attribute OutEventPort::meta_single_destination;
	::Uml::Attribute OutEventPort::meta_out_event_port_type;
	::Uml::AssociationRole OutEventPort::meta_ref;
	::Uml::AssociationRole OutEventPort::meta_dstEventSourcePublish;
	::Uml::AssociationRole OutEventPort::meta_dstEventSourcePublish_rev;
	::Uml::AssociationRole OutEventPort::meta_dstpublish;
	::Uml::AssociationRole OutEventPort::meta_dstpublish_rev;
	::Uml::AssociationRole OutEventPort::meta_dstemit;
	::Uml::AssociationRole OutEventPort::meta_dstemit_rev;
	::Uml::AssociationRole OutEventPort::meta_dstEventSourceDelegate;
	::Uml::AssociationRole OutEventPort::meta_dstEventSourceDelegate_rev;
	::Uml::AssociationRole OutEventPort::meta_srcEventSourceDelegate;
	::Uml::AssociationRole OutEventPort::meta_srcEventSourceDelegate_rev;
	::Uml::AssociationRole OutEventPort::meta_referedbyEventSourcePort;
	::Uml::CompositionParentRole OutEventPort::meta_ComponentAssembly_parent;

	Port::Port() {}
	Port::Port(::Udm::ObjectImpl *impl) : Taggable(impl),CommonPortAttrs(impl),GraphVertex(impl), MgaObject(impl) {}
	Port::Port(const Port &master) : Taggable(master),CommonPortAttrs(master),GraphVertex(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Port::Port(Port &&master) : Taggable(master),CommonPortAttrs(master),GraphVertex(master), MgaObject(master) {};

	Port Port::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Port& Port::operator=(Port &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Port Port::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Port Port::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Port Port::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Port> Port::Instances() { return ::Udm::InstantiatedAttr< Port>(impl); }
	Port Port::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Port> Port::Derived() { return ::Udm::DerivedAttr< Port>(impl); }
	::Udm::ArchetypeAttr< Port> Port::Archetype() const { return ::Udm::ArchetypeAttr< Port>(impl); }
	::Udm::AClassAssocAttr< PortQoS, PortQoSCharacteristic> Port::dstPortQoS() const { return ::Udm::AClassAssocAttr< PortQoS, PortQoSCharacteristic>(impl, meta_dstPortQoS, meta_dstPortQoS_rev); }
	::Udm::AClassAssocAttr< ExternalDelegate, ExternalPortReference> Port::srcExternalDelegate() const { return ::Udm::AClassAssocAttr< ExternalDelegate, ExternalPortReference>(impl, meta_srcExternalDelegate, meta_srcExternalDelegate_rev); }
	::Udm::ParentAttr< ::CQML::Component> Port::Component_parent() const { return ::Udm::ParentAttr< ::CQML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::CQML::ConnectedComponent> Port::ConnectedComponent_parent() const { return ::Udm::ParentAttr< ::CQML::ConnectedComponent>(impl, meta_ConnectedComponent_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Port::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Port::meta;
	::Uml::AssociationRole Port::meta_dstPortQoS;
	::Uml::AssociationRole Port::meta_dstPortQoS_rev;
	::Uml::AssociationRole Port::meta_srcExternalDelegate;
	::Uml::AssociationRole Port::meta_srcExternalDelegate_rev;
	::Uml::CompositionParentRole Port::meta_Component_parent;
	::Uml::CompositionParentRole Port::meta_ConnectedComponent_parent;

	SingleOutputBase::SingleOutputBase() {}
	SingleOutputBase::SingleOutputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SingleOutputBase::SingleOutputBase(const SingleOutputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SingleOutputBase::SingleOutputBase(SingleOutputBase &&master) : MgaObject(master) {};

	SingleOutputBase SingleOutputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SingleOutputBase& SingleOutputBase::operator=(SingleOutputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SingleOutputBase SingleOutputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SingleOutputBase SingleOutputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SingleOutputBase SingleOutputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SingleOutputBase> SingleOutputBase::Instances() { return ::Udm::InstantiatedAttr< SingleOutputBase>(impl); }
	SingleOutputBase SingleOutputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SingleOutputBase> SingleOutputBase::Derived() { return ::Udm::DerivedAttr< SingleOutputBase>(impl); }
	::Udm::ArchetypeAttr< SingleOutputBase> SingleOutputBase::Archetype() const { return ::Udm::ArchetypeAttr< SingleOutputBase>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> SingleOutputBase::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SingleOutputBase::meta;

	ProvidedRequestPort::ProvidedRequestPort() {}
	ProvidedRequestPort::ProvidedRequestPort(::Udm::ObjectImpl *impl) : InvokePortBase(impl),Port(impl),MultiInputBase(impl), MgaObject(impl) {}
	ProvidedRequestPort::ProvidedRequestPort(const ProvidedRequestPort &master) : InvokePortBase(master),Port(master),MultiInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ProvidedRequestPort::ProvidedRequestPort(ProvidedRequestPort &&master) : InvokePortBase(master),Port(master),MultiInputBase(master), MgaObject(master) {};

	ProvidedRequestPort ProvidedRequestPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ProvidedRequestPort& ProvidedRequestPort::operator=(ProvidedRequestPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ProvidedRequestPort ProvidedRequestPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ProvidedRequestPort ProvidedRequestPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ProvidedRequestPort ProvidedRequestPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ProvidedRequestPort> ProvidedRequestPort::Instances() { return ::Udm::InstantiatedAttr< ProvidedRequestPort>(impl); }
	ProvidedRequestPort ProvidedRequestPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ProvidedRequestPort> ProvidedRequestPort::Derived() { return ::Udm::DerivedAttr< ProvidedRequestPort>(impl); }
	::Udm::ArchetypeAttr< ProvidedRequestPort> ProvidedRequestPort::Archetype() const { return ::Udm::ArchetypeAttr< ProvidedRequestPort>(impl); }
	::Udm::AClassAssocAttr< SupportsDelegate, Supports> ProvidedRequestPort::srcSupportsDelegate() const { return ::Udm::AClassAssocAttr< SupportsDelegate, Supports>(impl, meta_srcSupportsDelegate, meta_srcSupportsDelegate_rev); }
	::Udm::PointerAttr< Provideable> ProvidedRequestPort::ref() const { return ::Udm::PointerAttr< Provideable>(impl, meta_ref); }
	::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPort> ProvidedRequestPort::dstFacetDelegate() const { return ::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPort>(impl, meta_dstFacetDelegate, meta_dstFacetDelegate_rev); }
	::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPort> ProvidedRequestPort::srcFacetDelegate() const { return ::Udm::AClassAssocAttr< FacetDelegate, ProvidedRequestPort>(impl, meta_srcFacetDelegate, meta_srcFacetDelegate_rev); }
	::Udm::AClassAssocAttr< FacetInvoke, QoSConnector> ProvidedRequestPort::srcFacetInvoke() const { return ::Udm::AClassAssocAttr< FacetInvoke, QoSConnector>(impl, meta_srcFacetInvoke, meta_srcFacetInvoke_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ProvidedRequestPort::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ProvidedRequestPort::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ProvidedRequestPort::Accept(Visitor &v) { v.Visit_ProvidedRequestPort(*this); }

	::Uml::Class ProvidedRequestPort::meta;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcSupportsDelegate;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcSupportsDelegate_rev;
	::Uml::AssociationRole ProvidedRequestPort::meta_ref;
	::Uml::AssociationRole ProvidedRequestPort::meta_dstFacetDelegate;
	::Uml::AssociationRole ProvidedRequestPort::meta_dstFacetDelegate_rev;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcFacetDelegate;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcFacetDelegate_rev;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcFacetInvoke;
	::Uml::AssociationRole ProvidedRequestPort::meta_srcFacetInvoke_rev;
	::Uml::CompositionParentRole ProvidedRequestPort::meta_ComponentAssembly_parent;

	MultiInputBase::MultiInputBase() {}
	MultiInputBase::MultiInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiInputBase::MultiInputBase(const MultiInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiInputBase::MultiInputBase(MultiInputBase &&master) : MgaObject(master) {};

	MultiInputBase MultiInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInputBase& MultiInputBase::operator=(MultiInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInputBase MultiInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInputBase MultiInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInputBase MultiInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInputBase> MultiInputBase::Instances() { return ::Udm::InstantiatedAttr< MultiInputBase>(impl); }
	MultiInputBase MultiInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInputBase> MultiInputBase::Derived() { return ::Udm::DerivedAttr< MultiInputBase>(impl); }
	::Udm::ArchetypeAttr< MultiInputBase> MultiInputBase::Archetype() const { return ::Udm::ArchetypeAttr< MultiInputBase>(impl); }
	::Udm::AClassAssocAttr< MultiInput, MultiInputAction> MultiInputBase::dstMultiInput() const { return ::Udm::AClassAssocAttr< MultiInput, MultiInputAction>(impl, meta_dstMultiInput, meta_dstMultiInput_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> MultiInputBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MultiInputBase::meta;
	::Uml::AssociationRole MultiInputBase::meta_dstMultiInput;
	::Uml::AssociationRole MultiInputBase::meta_dstMultiInput_rev;

	RequiredRequestPort::RequiredRequestPort() {}
	RequiredRequestPort::RequiredRequestPort(::Udm::ObjectImpl *impl) : Port(impl),MultiOutputBase(impl), MgaObject(impl) {}
	RequiredRequestPort::RequiredRequestPort(const RequiredRequestPort &master) : Port(master),MultiOutputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRequestPort::RequiredRequestPort(RequiredRequestPort &&master) : Port(master),MultiOutputBase(master), MgaObject(master) {};

	RequiredRequestPort RequiredRequestPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRequestPort& RequiredRequestPort::operator=(RequiredRequestPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRequestPort RequiredRequestPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRequestPort RequiredRequestPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRequestPort RequiredRequestPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRequestPort> RequiredRequestPort::Instances() { return ::Udm::InstantiatedAttr< RequiredRequestPort>(impl); }
	RequiredRequestPort RequiredRequestPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRequestPort> RequiredRequestPort::Derived() { return ::Udm::DerivedAttr< RequiredRequestPort>(impl); }
	::Udm::ArchetypeAttr< RequiredRequestPort> RequiredRequestPort::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRequestPort>(impl); }
	::Udm::BooleanAttr RequiredRequestPort::multiple_connections() const { return ::Udm::BooleanAttr(impl, meta_multiple_connections); }
	::Udm::PointerAttr< Provideable> RequiredRequestPort::ref() const { return ::Udm::PointerAttr< Provideable>(impl, meta_ref); }
	::Udm::AClassAssocAttr< RecepInvoke, QoSConnector> RequiredRequestPort::dstRecepInvoke() const { return ::Udm::AClassAssocAttr< RecepInvoke, QoSConnector>(impl, meta_dstRecepInvoke, meta_dstRecepInvoke_rev); }
	::Udm::AClassAssocAttr< invoke, InvokePortBase> RequiredRequestPort::dstinvoke() const { return ::Udm::AClassAssocAttr< invoke, InvokePortBase>(impl, meta_dstinvoke, meta_dstinvoke_rev); }
	::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPort> RequiredRequestPort::dstReceptacleDelegate() const { return ::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPort>(impl, meta_dstReceptacleDelegate, meta_dstReceptacleDelegate_rev); }
	::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPort> RequiredRequestPort::srcReceptacleDelegate() const { return ::Udm::AClassAssocAttr< ReceptacleDelegate, RequiredRequestPort>(impl, meta_srcReceptacleDelegate, meta_srcReceptacleDelegate_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> RequiredRequestPort::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> RequiredRequestPort::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void RequiredRequestPort::Accept(Visitor &v) { v.Visit_RequiredRequestPort(*this); }

	::Uml::Class RequiredRequestPort::meta;
	::Uml::Attribute RequiredRequestPort::meta_multiple_connections;
	::Uml::AssociationRole RequiredRequestPort::meta_ref;
	::Uml::AssociationRole RequiredRequestPort::meta_dstRecepInvoke;
	::Uml::AssociationRole RequiredRequestPort::meta_dstRecepInvoke_rev;
	::Uml::AssociationRole RequiredRequestPort::meta_dstinvoke;
	::Uml::AssociationRole RequiredRequestPort::meta_dstinvoke_rev;
	::Uml::AssociationRole RequiredRequestPort::meta_dstReceptacleDelegate;
	::Uml::AssociationRole RequiredRequestPort::meta_dstReceptacleDelegate_rev;
	::Uml::AssociationRole RequiredRequestPort::meta_srcReceptacleDelegate;
	::Uml::AssociationRole RequiredRequestPort::meta_srcReceptacleDelegate_rev;
	::Uml::CompositionParentRole RequiredRequestPort::meta_ComponentAssembly_parent;

	MultiOutputBase::MultiOutputBase() {}
	MultiOutputBase::MultiOutputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiOutputBase::MultiOutputBase(const MultiOutputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiOutputBase::MultiOutputBase(MultiOutputBase &&master) : MgaObject(master) {};

	MultiOutputBase MultiOutputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiOutputBase& MultiOutputBase::operator=(MultiOutputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiOutputBase MultiOutputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiOutputBase MultiOutputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiOutputBase MultiOutputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiOutputBase> MultiOutputBase::Instances() { return ::Udm::InstantiatedAttr< MultiOutputBase>(impl); }
	MultiOutputBase MultiOutputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiOutputBase> MultiOutputBase::Derived() { return ::Udm::DerivedAttr< MultiOutputBase>(impl); }
	::Udm::ArchetypeAttr< MultiOutputBase> MultiOutputBase::Archetype() const { return ::Udm::ArchetypeAttr< MultiOutputBase>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> MultiOutputBase::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MultiOutputBase::meta;

	InEventPort::InEventPort() {}
	InEventPort::InEventPort(::Udm::ObjectImpl *impl) : Port(impl),SingleInputBase(impl),QueryInputBase(impl), MgaObject(impl) {}
	InEventPort::InEventPort(const InEventPort &master) : Port(master),SingleInputBase(master),QueryInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	InEventPort::InEventPort(InEventPort &&master) : Port(master),SingleInputBase(master),QueryInputBase(master), MgaObject(master) {};

	InEventPort InEventPort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InEventPort& InEventPort::operator=(InEventPort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InEventPort InEventPort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InEventPort InEventPort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InEventPort InEventPort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InEventPort> InEventPort::Instances() { return ::Udm::InstantiatedAttr< InEventPort>(impl); }
	InEventPort InEventPort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InEventPort> InEventPort::Derived() { return ::Udm::DerivedAttr< InEventPort>(impl); }
	::Udm::ArchetypeAttr< InEventPort> InEventPort::Archetype() const { return ::Udm::ArchetypeAttr< InEventPort>(impl); }
	::Udm::AClassAssocAttr< emit, OutEventPort> InEventPort::srcemit() const { return ::Udm::AClassAssocAttr< emit, OutEventPort>(impl, meta_srcemit, meta_srcemit_rev); }
	::Udm::PointerAttr< Event> InEventPort::ref() const { return ::Udm::PointerAttr< Event>(impl, meta_ref); }
	::Udm::AClassAssocAttr< EventSinkDelegate, InEventPort> InEventPort::dstEventSinkDelegate() const { return ::Udm::AClassAssocAttr< EventSinkDelegate, InEventPort>(impl, meta_dstEventSinkDelegate, meta_dstEventSinkDelegate_rev); }
	::Udm::AClassAssocAttr< EventSinkDelegate, InEventPort> InEventPort::srcEventSinkDelegate() const { return ::Udm::AClassAssocAttr< EventSinkDelegate, InEventPort>(impl, meta_srcEventSinkDelegate, meta_srcEventSinkDelegate_rev); }
	::Udm::AClassAssocAttr< deliverTo, PublishConnector> InEventPort::srcdeliverTo() const { return ::Udm::AClassAssocAttr< deliverTo, PublishConnector>(impl, meta_srcdeliverTo, meta_srcdeliverTo_rev); }
	::Udm::AClassAssocAttr< EventSinkPublish, QoSConnector> InEventPort::srcEventSinkPublish() const { return ::Udm::AClassAssocAttr< EventSinkPublish, QoSConnector>(impl, meta_srcEventSinkPublish, meta_srcEventSinkPublish_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> InEventPort::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> InEventPort::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void InEventPort::Accept(Visitor &v) { v.Visit_InEventPort(*this); }

	::Uml::Class InEventPort::meta;
	::Uml::AssociationRole InEventPort::meta_srcemit;
	::Uml::AssociationRole InEventPort::meta_srcemit_rev;
	::Uml::AssociationRole InEventPort::meta_ref;
	::Uml::AssociationRole InEventPort::meta_dstEventSinkDelegate;
	::Uml::AssociationRole InEventPort::meta_dstEventSinkDelegate_rev;
	::Uml::AssociationRole InEventPort::meta_srcEventSinkDelegate;
	::Uml::AssociationRole InEventPort::meta_srcEventSinkDelegate_rev;
	::Uml::AssociationRole InEventPort::meta_srcdeliverTo;
	::Uml::AssociationRole InEventPort::meta_srcdeliverTo_rev;
	::Uml::AssociationRole InEventPort::meta_srcEventSinkPublish;
	::Uml::AssociationRole InEventPort::meta_srcEventSinkPublish_rev;
	::Uml::CompositionParentRole InEventPort::meta_ComponentAssembly_parent;

	SingleInputBase::SingleInputBase() {}
	SingleInputBase::SingleInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SingleInputBase::SingleInputBase(const SingleInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SingleInputBase::SingleInputBase(SingleInputBase &&master) : MgaObject(master) {};

	SingleInputBase SingleInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SingleInputBase& SingleInputBase::operator=(SingleInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SingleInputBase SingleInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SingleInputBase SingleInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SingleInputBase SingleInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SingleInputBase> SingleInputBase::Instances() { return ::Udm::InstantiatedAttr< SingleInputBase>(impl); }
	SingleInputBase SingleInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SingleInputBase> SingleInputBase::Derived() { return ::Udm::DerivedAttr< SingleInputBase>(impl); }
	::Udm::ArchetypeAttr< SingleInputBase> SingleInputBase::Archetype() const { return ::Udm::ArchetypeAttr< SingleInputBase>(impl); }
	::Udm::AClassPointerAttr< Input, InputAction> SingleInputBase::dstInput() const { return ::Udm::AClassPointerAttr< Input, InputAction>(impl, meta_dstInput, meta_dstInput_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> SingleInputBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SingleInputBase::meta;
	::Uml::AssociationRole SingleInputBase::meta_dstInput;
	::Uml::AssociationRole SingleInputBase::meta_dstInput_rev;

	QueryInputBase::QueryInputBase() {}
	QueryInputBase::QueryInputBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInputBase::QueryInputBase(const QueryInputBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInputBase::QueryInputBase(QueryInputBase &&master) : MgaObject(master) {};

	QueryInputBase QueryInputBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInputBase& QueryInputBase::operator=(QueryInputBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInputBase QueryInputBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInputBase QueryInputBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInputBase QueryInputBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInputBase> QueryInputBase::Instances() { return ::Udm::InstantiatedAttr< QueryInputBase>(impl); }
	QueryInputBase QueryInputBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInputBase> QueryInputBase::Derived() { return ::Udm::DerivedAttr< QueryInputBase>(impl); }
	::Udm::ArchetypeAttr< QueryInputBase> QueryInputBase::Archetype() const { return ::Udm::ArchetypeAttr< QueryInputBase>(impl); }
	::Udm::AClassPointerAttr< QueryInput, QueryInputAction> QueryInputBase::dstQueryInput() const { return ::Udm::AClassPointerAttr< QueryInput, QueryInputAction>(impl, meta_dstQueryInput, meta_dstQueryInput_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QueryInputBase::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class QueryInputBase::meta;
	::Uml::AssociationRole QueryInputBase::meta_dstQueryInput;
	::Uml::AssociationRole QueryInputBase::meta_dstQueryInput_rev;

	CommonPortAttrs::CommonPortAttrs() {}
	CommonPortAttrs::CommonPortAttrs(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CommonPortAttrs::CommonPortAttrs(const CommonPortAttrs &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CommonPortAttrs::CommonPortAttrs(CommonPortAttrs &&master) : MgaObject(master) {};

	CommonPortAttrs CommonPortAttrs::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CommonPortAttrs& CommonPortAttrs::operator=(CommonPortAttrs &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CommonPortAttrs CommonPortAttrs::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CommonPortAttrs CommonPortAttrs::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CommonPortAttrs CommonPortAttrs::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CommonPortAttrs> CommonPortAttrs::Instances() { return ::Udm::InstantiatedAttr< CommonPortAttrs>(impl); }
	CommonPortAttrs CommonPortAttrs::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CommonPortAttrs> CommonPortAttrs::Derived() { return ::Udm::DerivedAttr< CommonPortAttrs>(impl); }
	::Udm::ArchetypeAttr< CommonPortAttrs> CommonPortAttrs::Archetype() const { return ::Udm::ArchetypeAttr< CommonPortAttrs>(impl); }
	::Udm::BooleanAttr CommonPortAttrs::exclusiveUser() const { return ::Udm::BooleanAttr(impl, meta_exclusiveUser); }
	::Udm::BooleanAttr CommonPortAttrs::exclusiveProvider() const { return ::Udm::BooleanAttr(impl, meta_exclusiveProvider); }
	::Udm::BooleanAttr CommonPortAttrs::optional() const { return ::Udm::BooleanAttr(impl, meta_optional); }
	::Udm::ParentAttr< ::CQML::MgaObject> CommonPortAttrs::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class CommonPortAttrs::meta;
	::Uml::Attribute CommonPortAttrs::meta_exclusiveUser;
	::Uml::Attribute CommonPortAttrs::meta_exclusiveProvider;
	::Uml::Attribute CommonPortAttrs::meta_optional;

	GraphVertex::GraphVertex() {}
	GraphVertex::GraphVertex(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	GraphVertex::GraphVertex(const GraphVertex &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	GraphVertex::GraphVertex(GraphVertex &&master) : MgaObject(master) {};

	GraphVertex GraphVertex::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GraphVertex& GraphVertex::operator=(GraphVertex &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GraphVertex GraphVertex::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GraphVertex GraphVertex::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GraphVertex GraphVertex::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GraphVertex> GraphVertex::Instances() { return ::Udm::InstantiatedAttr< GraphVertex>(impl); }
	GraphVertex GraphVertex::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GraphVertex> GraphVertex::Derived() { return ::Udm::DerivedAttr< GraphVertex>(impl); }
	::Udm::ArchetypeAttr< GraphVertex> GraphVertex::Archetype() const { return ::Udm::ArchetypeAttr< GraphVertex>(impl); }
	::Udm::AClassPointerAttr< DstEdge, Edge> GraphVertex::dstDstEdge() const { return ::Udm::AClassPointerAttr< DstEdge, Edge>(impl, meta_dstDstEdge, meta_dstDstEdge_rev); }
	::Udm::AClassPointerAttr< SrcEdge, Edge> GraphVertex::srcSrcEdge() const { return ::Udm::AClassPointerAttr< SrcEdge, Edge>(impl, meta_srcSrcEdge, meta_srcSrcEdge_rev); }
	::Udm::ParentAttr< ::CQML::Path> GraphVertex::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> GraphVertex::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class GraphVertex::meta;
	::Uml::AssociationRole GraphVertex::meta_dstDstEdge;
	::Uml::AssociationRole GraphVertex::meta_dstDstEdge_rev;
	::Uml::AssociationRole GraphVertex::meta_srcSrcEdge;
	::Uml::AssociationRole GraphVertex::meta_srcSrcEdge_rev;
	::Uml::CompositionParentRole GraphVertex::meta_Path_parent;

	ComponentRef::ComponentRef() {}
	ComponentRef::ComponentRef(::Udm::ObjectImpl *impl) : Manageable(impl),ComponentBase(impl),CollocationGroupMember(impl),FTMonitorable(impl), MgaObject(impl) {}
	ComponentRef::ComponentRef(const ComponentRef &master) : Manageable(master),ComponentBase(master),CollocationGroupMember(master),FTMonitorable(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentRef::ComponentRef(ComponentRef &&master) : Manageable(master),ComponentBase(master),CollocationGroupMember(master),FTMonitorable(master), MgaObject(master) {};

	ComponentRef ComponentRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentRef& ComponentRef::operator=(ComponentRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentRef ComponentRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentRef ComponentRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentRef ComponentRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentRef> ComponentRef::Instances() { return ::Udm::InstantiatedAttr< ComponentRef>(impl); }
	ComponentRef ComponentRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentRef> ComponentRef::Derived() { return ::Udm::DerivedAttr< ComponentRef>(impl); }
	::Udm::ArchetypeAttr< ComponentRef> ComponentRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentRef>(impl); }
	::Udm::PointerAttr< Component> ComponentRef::ref() const { return ::Udm::PointerAttr< Component>(impl, meta_ref); }
	::Udm::AClassAssocAttr< ComponentProperty, ComponentPropertyDescription> ComponentRef::dstComponentProperty() const { return ::Udm::AClassAssocAttr< ComponentProperty, ComponentPropertyDescription>(impl, meta_dstComponentProperty, meta_dstComponentProperty_rev); }
	::Udm::AClassAssocAttr< ComponentConfigProperty, Property> ComponentRef::dstComponentConfigProperty() const { return ::Udm::AClassAssocAttr< ComponentConfigProperty, Property>(impl, meta_dstComponentConfigProperty, meta_dstComponentConfigProperty_rev); }
	::Udm::AClassAssocAttr< ComponentInfoProperty, Property> ComponentRef::dstComponentInfoProperty() const { return ::Udm::AClassAssocAttr< ComponentInfoProperty, Property>(impl, meta_dstComponentInfoProperty, meta_dstComponentInfoProperty_rev); }
	::Udm::AClassPointerAttr< PackageInterface, ComponentPackage> ComponentRef::srcPackageInterface() const { return ::Udm::AClassPointerAttr< PackageInterface, ComponentPackage>(impl, meta_srcPackageInterface, meta_srcPackageInterface_rev); }
	::Udm::AClassPointerAttr< Implements, ComponentImplementation> ComponentRef::srcImplements() const { return ::Udm::AClassPointerAttr< Implements, ComponentImplementation>(impl, meta_srcImplements, meta_srcImplements_rev); }
	::Udm::AssocAttr< SharedComponentReference> ComponentRef::referedbySharedComponentReference() const { return ::Udm::AssocAttr< SharedComponentReference>(impl, meta_referedbySharedComponentReference); }
	::Udm::AClassPointerAttr< Deploys, ComponentFactoryRef> ComponentRef::srcDeploys() const { return ::Udm::AClassPointerAttr< Deploys, ComponentFactoryRef>(impl, meta_srcDeploys, meta_srcDeploys_rev); }
	::Udm::AClassAssocAttr< OnComponentConn, ComponentRule> ComponentRef::srcOnComponentConn() const { return ::Udm::AClassAssocAttr< OnComponentConn, ComponentRule>(impl, meta_srcOnComponentConn, meta_srcOnComponentConn_rev); }
	::Udm::ParentAttr< ::CQML::Package> ComponentRef::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> ComponentRef::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> ComponentRef::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentRef::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ComponentRef::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::Path> ComponentRef::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentRef::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::Policy> ComponentRef::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentRef::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentRef::Accept(Visitor &v) { v.Visit_ComponentRef(*this); }

	::Uml::Class ComponentRef::meta;
	::Uml::AssociationRole ComponentRef::meta_ref;
	::Uml::AssociationRole ComponentRef::meta_dstComponentProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_dstComponentConfigProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentConfigProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_dstComponentInfoProperty;
	::Uml::AssociationRole ComponentRef::meta_dstComponentInfoProperty_rev;
	::Uml::AssociationRole ComponentRef::meta_srcPackageInterface;
	::Uml::AssociationRole ComponentRef::meta_srcPackageInterface_rev;
	::Uml::AssociationRole ComponentRef::meta_srcImplements;
	::Uml::AssociationRole ComponentRef::meta_srcImplements_rev;
	::Uml::AssociationRole ComponentRef::meta_referedbySharedComponentReference;
	::Uml::AssociationRole ComponentRef::meta_srcDeploys;
	::Uml::AssociationRole ComponentRef::meta_srcDeploys_rev;
	::Uml::AssociationRole ComponentRef::meta_srcOnComponentConn;
	::Uml::AssociationRole ComponentRef::meta_srcOnComponentConn_rev;
	::Uml::CompositionParentRole ComponentRef::meta_Package_parent;
	::Uml::CompositionParentRole ComponentRef::meta_File_parent;
	::Uml::CompositionParentRole ComponentRef::meta_PackageContainer_parent;
	::Uml::CompositionParentRole ComponentRef::meta_ComponentContainer_parent;
	::Uml::CompositionParentRole ComponentRef::meta_ComponentImplementationContainer_parent;
	::Uml::CompositionParentRole ComponentRef::meta_Path_parent;
	::Uml::CompositionParentRole ComponentRef::meta_ComponentAssembly_parent;
	::Uml::CompositionParentRole ComponentRef::meta_Policy_parent;

	CollocationGroupMember::CollocationGroupMember() {}
	CollocationGroupMember::CollocationGroupMember(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CollocationGroupMember::CollocationGroupMember(const CollocationGroupMember &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CollocationGroupMember::CollocationGroupMember(CollocationGroupMember &&master) : MgaObject(master) {};

	CollocationGroupMember CollocationGroupMember::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollocationGroupMember& CollocationGroupMember::operator=(CollocationGroupMember &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollocationGroupMember CollocationGroupMember::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollocationGroupMember CollocationGroupMember::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollocationGroupMember CollocationGroupMember::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollocationGroupMember> CollocationGroupMember::Instances() { return ::Udm::InstantiatedAttr< CollocationGroupMember>(impl); }
	CollocationGroupMember CollocationGroupMember::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollocationGroupMember> CollocationGroupMember::Derived() { return ::Udm::DerivedAttr< CollocationGroupMember>(impl); }
	::Udm::ArchetypeAttr< CollocationGroupMember> CollocationGroupMember::Archetype() const { return ::Udm::ArchetypeAttr< CollocationGroupMember>(impl); }
	::Udm::AssocAttr< CollocationGroup> CollocationGroupMember::setCollocationGroup() const { return ::Udm::AssocAttr< CollocationGroup>(impl, meta_setCollocationGroup); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> CollocationGroupMember::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> CollocationGroupMember::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class CollocationGroupMember::meta;
	::Uml::AssociationRole CollocationGroupMember::meta_setCollocationGroup;
	::Uml::CompositionParentRole CollocationGroupMember::meta_DeploymentPlan_parent;

	FTMonitorable::FTMonitorable() {}
	FTMonitorable::FTMonitorable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FTMonitorable::FTMonitorable(const FTMonitorable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FTMonitorable::FTMonitorable(FTMonitorable &&master) : MgaObject(master) {};

	FTMonitorable FTMonitorable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FTMonitorable& FTMonitorable::operator=(FTMonitorable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FTMonitorable FTMonitorable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FTMonitorable FTMonitorable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FTMonitorable FTMonitorable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FTMonitorable> FTMonitorable::Instances() { return ::Udm::InstantiatedAttr< FTMonitorable>(impl); }
	FTMonitorable FTMonitorable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FTMonitorable> FTMonitorable::Derived() { return ::Udm::DerivedAttr< FTMonitorable>(impl); }
	::Udm::ArchetypeAttr< FTMonitorable> FTMonitorable::Archetype() const { return ::Udm::ArchetypeAttr< FTMonitorable>(impl); }
	::Udm::AClassPointerAttr< MonitorableGroupAssociation, RepicaGroupConfiguration> FTMonitorable::dstMonitorable2RepG() const { return ::Udm::AClassPointerAttr< MonitorableGroupAssociation, RepicaGroupConfiguration>(impl, meta_dstMonitorable2RepG, meta_dstMonitorable2RepG_rev); }
	::Udm::ParentAttr< ::CQML::FailOverUnit> FTMonitorable::FailOverUnit_parent() const { return ::Udm::ParentAttr< ::CQML::FailOverUnit>(impl, meta_FailOverUnit_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> FTMonitorable::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class FTMonitorable::meta;
	::Uml::AssociationRole FTMonitorable::meta_dstMonitorable2RepG;
	::Uml::AssociationRole FTMonitorable::meta_dstMonitorable2RepG_rev;
	::Uml::CompositionParentRole FTMonitorable::meta_FailOverUnit_parent;

	ManagesComponent::ManagesComponent() {}
	ManagesComponent::ManagesComponent(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ManagesComponent::ManagesComponent(const ManagesComponent &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ManagesComponent::ManagesComponent(ManagesComponent &&master) : MgaObject(master) {};

	ManagesComponent ManagesComponent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ManagesComponent& ManagesComponent::operator=(ManagesComponent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ManagesComponent ManagesComponent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ManagesComponent ManagesComponent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ManagesComponent ManagesComponent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ManagesComponent> ManagesComponent::Instances() { return ::Udm::InstantiatedAttr< ManagesComponent>(impl); }
	ManagesComponent ManagesComponent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ManagesComponent> ManagesComponent::Derived() { return ::Udm::DerivedAttr< ManagesComponent>(impl); }
	::Udm::ArchetypeAttr< ManagesComponent> ManagesComponent::Archetype() const { return ::Udm::ArchetypeAttr< ManagesComponent>(impl); }
	::Udm::ParentAttr< ::CQML::Package> ManagesComponent::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::File> ManagesComponent::File_parent() const { return ::Udm::ParentAttr< ::CQML::File>(impl, meta_File_parent); }
	::Udm::ParentAttr< ::CQML::Prefixable> ManagesComponent::parent() const { return ::Udm::ParentAttr< ::CQML::Prefixable>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentFactory> ManagesComponent::srcManagesComponent_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentFactory>(impl, meta_srcManagesComponent_end_); }
	::Udm::AssocEndAttr< ::CQML::Manageable> ManagesComponent::dstManagesComponent_end() const { return ::Udm::AssocEndAttr< ::CQML::Manageable>(impl, meta_dstManagesComponent_end_); }
	void ManagesComponent::Accept(Visitor &v) { v.Visit_ManagesComponent(*this); }

	::Uml::Class ManagesComponent::meta;
	::Uml::CompositionParentRole ManagesComponent::meta_Package_parent;
	::Uml::CompositionParentRole ManagesComponent::meta_File_parent;
	::Uml::AssociationRole ManagesComponent::meta_srcManagesComponent_end_;
	::Uml::AssociationRole ManagesComponent::meta_dstManagesComponent_end_;

	Domain::Domain() {}
	Domain::Domain(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Domain::Domain(const Domain &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Domain::Domain(Domain &&master) : MgaObject(master) {};

	Domain Domain::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Domain& Domain::operator=(Domain &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Domain Domain::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Domain Domain::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Domain Domain::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Domain> Domain::Instances() { return ::Udm::InstantiatedAttr< Domain>(impl); }
	Domain Domain::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Domain> Domain::Derived() { return ::Udm::DerivedAttr< Domain>(impl); }
	::Udm::ArchetypeAttr< Domain> Domain::Archetype() const { return ::Udm::ArchetypeAttr< Domain>(impl); }
	::Udm::StringAttr Domain::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::StringAttr Domain::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::ChildrenAttr< ::CQML::InterconnectConnection> Domain::InterconnectConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::InterconnectConnection>(impl, meta_InterconnectConnection_children); }
	::Udm::ChildrenAttr< ::CQML::Interconnect> Domain::Interconnect_children() const { return ::Udm::ChildrenAttr< ::CQML::Interconnect>(impl, meta_Interconnect_children); }
	::Udm::ChildrenAttr< ::CQML::Node> Domain::Node_children() const { return ::Udm::ChildrenAttr< ::CQML::Node>(impl, meta_Node_children); }
	::Udm::ChildrenAttr< ::CQML::BridgeConnection> Domain::BridgeConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::BridgeConnection>(impl, meta_BridgeConnection_children); }
	::Udm::ChildrenAttr< ::CQML::Bridge> Domain::Bridge_children() const { return ::Udm::ChildrenAttr< ::CQML::Bridge>(impl, meta_Bridge_children); }
	::Udm::ChildrenAttr< ::CQML::SharedResource> Domain::SharedResource_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResource>(impl, meta_SharedResource_children); }
	::Udm::ChildrenAttr< ::CQML::Shares> Domain::Shares_children() const { return ::Udm::ChildrenAttr< ::CQML::Shares>(impl, meta_Shares_children); }
	::Udm::ChildrenAttr< ::CQML::Property> Domain::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Domain::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Shares> Domain::Shares_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Shares>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InterconnectConnection> Domain::InterconnectConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InterconnectConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BridgeConnection> Domain::BridgeConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BridgeConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> Domain::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementSatisfier> Domain::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SharedResource> Domain::SharedResource_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Bridge> Domain::Bridge_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Bridge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Interconnect> Domain::Interconnect_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Interconnect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Node> Domain::Node_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Node>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Targets> Domain::Targets_parent() const { return ::Udm::ParentAttr< ::CQML::Targets>(impl, meta_Targets_parent); }
	::Udm::ParentAttr< ::CQML::Targets> Domain::parent() const { return ::Udm::ParentAttr< ::CQML::Targets>(impl, ::Udm::NULLPARENTROLE); }
	void Domain::Accept(Visitor &v) { v.Visit_Domain(*this); }

	::Uml::Class Domain::meta;
	::Uml::Attribute Domain::meta_UUID;
	::Uml::Attribute Domain::meta_label;
	::Uml::CompositionChildRole Domain::meta_InterconnectConnection_children;
	::Uml::CompositionChildRole Domain::meta_Interconnect_children;
	::Uml::CompositionChildRole Domain::meta_Node_children;
	::Uml::CompositionChildRole Domain::meta_BridgeConnection_children;
	::Uml::CompositionChildRole Domain::meta_Bridge_children;
	::Uml::CompositionChildRole Domain::meta_SharedResource_children;
	::Uml::CompositionChildRole Domain::meta_Shares_children;
	::Uml::CompositionChildRole Domain::meta_Property_children;
	::Uml::CompositionParentRole Domain::meta_Targets_parent;

	Shares::Shares() {}
	Shares::Shares(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Shares::Shares(const Shares &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Shares::Shares(Shares &&master) : MgaObject(master) {};

	Shares Shares::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Shares& Shares::operator=(Shares &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Shares Shares::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Shares Shares::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Shares Shares::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Shares> Shares::Instances() { return ::Udm::InstantiatedAttr< Shares>(impl); }
	Shares Shares::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Shares> Shares::Derived() { return ::Udm::DerivedAttr< Shares>(impl); }
	::Udm::ArchetypeAttr< Shares> Shares::Archetype() const { return ::Udm::ArchetypeAttr< Shares>(impl); }
	::Udm::ParentAttr< ::CQML::Domain> Shares::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> Shares::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Node> Shares::srcShares_end() const { return ::Udm::AssocEndAttr< ::CQML::Node>(impl, meta_srcShares_end_); }
	::Udm::AssocEndAttr< ::CQML::SharedResource> Shares::dstShares_end() const { return ::Udm::AssocEndAttr< ::CQML::SharedResource>(impl, meta_dstShares_end_); }
	void Shares::Accept(Visitor &v) { v.Visit_Shares(*this); }

	::Uml::Class Shares::meta;
	::Uml::CompositionParentRole Shares::meta_Domain_parent;
	::Uml::AssociationRole Shares::meta_srcShares_end_;
	::Uml::AssociationRole Shares::meta_dstShares_end_;

	InterconnectConnection::InterconnectConnection() {}
	InterconnectConnection::InterconnectConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InterconnectConnection::InterconnectConnection(const InterconnectConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InterconnectConnection::InterconnectConnection(InterconnectConnection &&master) : MgaObject(master) {};

	InterconnectConnection InterconnectConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InterconnectConnection& InterconnectConnection::operator=(InterconnectConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InterconnectConnection InterconnectConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InterconnectConnection InterconnectConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InterconnectConnection InterconnectConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InterconnectConnection> InterconnectConnection::Instances() { return ::Udm::InstantiatedAttr< InterconnectConnection>(impl); }
	InterconnectConnection InterconnectConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InterconnectConnection> InterconnectConnection::Derived() { return ::Udm::DerivedAttr< InterconnectConnection>(impl); }
	::Udm::ArchetypeAttr< InterconnectConnection> InterconnectConnection::Archetype() const { return ::Udm::ArchetypeAttr< InterconnectConnection>(impl); }
	::Udm::ParentAttr< ::CQML::Domain> InterconnectConnection::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> InterconnectConnection::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Node> InterconnectConnection::srcInterconnectConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Node>(impl, meta_srcInterconnectConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::Interconnect> InterconnectConnection::dstInterconnectConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Interconnect>(impl, meta_dstInterconnectConnection_end_); }
	void InterconnectConnection::Accept(Visitor &v) { v.Visit_InterconnectConnection(*this); }

	::Uml::Class InterconnectConnection::meta;
	::Uml::CompositionParentRole InterconnectConnection::meta_Domain_parent;
	::Uml::AssociationRole InterconnectConnection::meta_srcInterconnectConnection_end_;
	::Uml::AssociationRole InterconnectConnection::meta_dstInterconnectConnection_end_;

	BridgeConnection::BridgeConnection() {}
	BridgeConnection::BridgeConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BridgeConnection::BridgeConnection(const BridgeConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BridgeConnection::BridgeConnection(BridgeConnection &&master) : MgaObject(master) {};

	BridgeConnection BridgeConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BridgeConnection& BridgeConnection::operator=(BridgeConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BridgeConnection BridgeConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BridgeConnection BridgeConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BridgeConnection BridgeConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BridgeConnection> BridgeConnection::Instances() { return ::Udm::InstantiatedAttr< BridgeConnection>(impl); }
	BridgeConnection BridgeConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BridgeConnection> BridgeConnection::Derived() { return ::Udm::DerivedAttr< BridgeConnection>(impl); }
	::Udm::ArchetypeAttr< BridgeConnection> BridgeConnection::Archetype() const { return ::Udm::ArchetypeAttr< BridgeConnection>(impl); }
	::Udm::ParentAttr< ::CQML::Domain> BridgeConnection::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> BridgeConnection::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Interconnect> BridgeConnection::srcBridgeConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Interconnect>(impl, meta_srcBridgeConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::Bridge> BridgeConnection::dstBridgeConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Bridge>(impl, meta_dstBridgeConnection_end_); }
	void BridgeConnection::Accept(Visitor &v) { v.Visit_BridgeConnection(*this); }

	::Uml::Class BridgeConnection::meta;
	::Uml::CompositionParentRole BridgeConnection::meta_Domain_parent;
	::Uml::AssociationRole BridgeConnection::meta_srcBridgeConnection_end_;
	::Uml::AssociationRole BridgeConnection::meta_dstBridgeConnection_end_;

	Requirement::Requirement() {}
	Requirement::Requirement(::Udm::ObjectImpl *impl) : RequirementBase(impl) {}
	Requirement::Requirement(const Requirement &master) : RequirementBase(master) {}

#ifdef UDM_RVALUE
	Requirement::Requirement(Requirement &&master) : RequirementBase(master) {};

	Requirement Requirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Requirement& Requirement::operator=(Requirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Requirement Requirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Requirement Requirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Requirement Requirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Requirement> Requirement::Instances() { return ::Udm::InstantiatedAttr< Requirement>(impl); }
	Requirement Requirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Requirement> Requirement::Derived() { return ::Udm::DerivedAttr< Requirement>(impl); }
	::Udm::ArchetypeAttr< Requirement> Requirement::Archetype() const { return ::Udm::ArchetypeAttr< Requirement>(impl); }
	::Udm::AClassAssocAttr< AssemblyselectRequirement, Component> Requirement::srcAssemblyselectRequirement() const { return ::Udm::AClassAssocAttr< AssemblyselectRequirement, Component>(impl, meta_srcAssemblyselectRequirement, meta_srcAssemblyselectRequirement_rev); }
	::Udm::AClassAssocAttr< ArtifactDeployRequirement, ImplementationArtifact> Requirement::srcArtifactDeployRequirement() const { return ::Udm::AClassAssocAttr< ArtifactDeployRequirement, ImplementationArtifact>(impl, meta_srcArtifactDeployRequirement, meta_srcArtifactDeployRequirement_rev); }
	::Udm::AClassAssocAttr< PackageConfSelectRequirement, PackageConfiguration> Requirement::srcPackageConfSelectRequirement() const { return ::Udm::AClassAssocAttr< PackageConfSelectRequirement, PackageConfiguration>(impl, meta_srcPackageConfSelectRequirement, meta_srcPackageConfSelectRequirement_rev); }
	::Udm::AClassAssocAttr< AssemblyDeployRequirement, PublishConnector> Requirement::srcAssemblyDeployRequirement() const { return ::Udm::AClassAssocAttr< AssemblyDeployRequirement, PublishConnector>(impl, meta_srcAssemblyDeployRequirement, meta_srcAssemblyDeployRequirement_rev); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> Requirement::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> Requirement::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> Requirement::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Requirement::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Requirement::Accept(Visitor &v) { v.Visit_Requirement(*this); }

	::Uml::Class Requirement::meta;
	::Uml::AssociationRole Requirement::meta_srcAssemblyselectRequirement;
	::Uml::AssociationRole Requirement::meta_srcAssemblyselectRequirement_rev;
	::Uml::AssociationRole Requirement::meta_srcArtifactDeployRequirement;
	::Uml::AssociationRole Requirement::meta_srcArtifactDeployRequirement_rev;
	::Uml::AssociationRole Requirement::meta_srcPackageConfSelectRequirement;
	::Uml::AssociationRole Requirement::meta_srcPackageConfSelectRequirement_rev;
	::Uml::AssociationRole Requirement::meta_srcAssemblyDeployRequirement;
	::Uml::AssociationRole Requirement::meta_srcAssemblyDeployRequirement_rev;
	::Uml::CompositionParentRole Requirement::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole Requirement::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole Requirement::meta_ComponentAssembly_parent;

	RequirementBase::RequirementBase() {}
	RequirementBase::RequirementBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RequirementBase::RequirementBase(const RequirementBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RequirementBase::RequirementBase(RequirementBase &&master) : MgaObject(master) {};

	RequirementBase RequirementBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequirementBase& RequirementBase::operator=(RequirementBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequirementBase RequirementBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequirementBase RequirementBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequirementBase RequirementBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequirementBase> RequirementBase::Instances() { return ::Udm::InstantiatedAttr< RequirementBase>(impl); }
	RequirementBase RequirementBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequirementBase> RequirementBase::Derived() { return ::Udm::DerivedAttr< RequirementBase>(impl); }
	::Udm::ArchetypeAttr< RequirementBase> RequirementBase::Archetype() const { return ::Udm::ArchetypeAttr< RequirementBase>(impl); }
	::Udm::StringAttr RequirementBase::resourceType() const { return ::Udm::StringAttr(impl, meta_resourceType); }
	::Udm::ChildrenAttr< ::CQML::Property> RequirementBase::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RequirementBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> RequirementBase::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> RequirementBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RequirementBase::meta;
	::Uml::Attribute RequirementBase::meta_resourceType;
	::Uml::CompositionChildRole RequirementBase::meta_Property_children;

	ECRequirements::ECRequirements() {}
	ECRequirements::ECRequirements(::Udm::ObjectImpl *impl) : Requirement(impl) {}
	ECRequirements::ECRequirements(const ECRequirements &master) : Requirement(master) {}

#ifdef UDM_RVALUE
	ECRequirements::ECRequirements(ECRequirements &&master) : Requirement(master) {};

	ECRequirements ECRequirements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECRequirements& ECRequirements::operator=(ECRequirements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECRequirements ECRequirements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECRequirements ECRequirements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECRequirements ECRequirements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECRequirements> ECRequirements::Instances() { return ::Udm::InstantiatedAttr< ECRequirements>(impl); }
	ECRequirements ECRequirements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECRequirements> ECRequirements::Derived() { return ::Udm::DerivedAttr< ECRequirements>(impl); }
	::Udm::ArchetypeAttr< ECRequirements> ECRequirements::Archetype() const { return ::Udm::ArchetypeAttr< ECRequirements>(impl); }
	::Udm::BooleanAttr ECRequirements::ConfigureRTQoS() const { return ::Udm::BooleanAttr(impl, meta_ConfigureRTQoS); }
	::Udm::ChildAttr< ::CQML::ECBehavior> ECRequirements::ECBehavior_child() const { return ::Udm::ChildAttr< ::CQML::ECBehavior>(impl, meta_ECBehavior_child); }
	::Udm::ChildrenAttr< ::CQML::ECRole> ECRequirements::ECRole_children() const { return ::Udm::ChildrenAttr< ::CQML::ECRole>(impl, meta_ECRole_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ECRequirements::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ECBehavior> ECRequirements::ECBehavior_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ECBehavior>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ECRole> ECRequirements::ECRole_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ECRole>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> ECRequirements::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ECRequirements::Accept(Visitor &v) { v.Visit_ECRequirements(*this); }

	::Uml::Class ECRequirements::meta;
	::Uml::Attribute ECRequirements::meta_ConfigureRTQoS;
	::Uml::CompositionChildRole ECRequirements::meta_ECBehavior_child;
	::Uml::CompositionChildRole ECRequirements::meta_ECRole_children;

	RTRequirements::RTRequirements() {}
	RTRequirements::RTRequirements(::Udm::ObjectImpl *impl) : Requirement(impl) {}
	RTRequirements::RTRequirements(const RTRequirements &master) : Requirement(master) {}

#ifdef UDM_RVALUE
	RTRequirements::RTRequirements(RTRequirements &&master) : Requirement(master) {};

	RTRequirements RTRequirements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RTRequirements& RTRequirements::operator=(RTRequirements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RTRequirements RTRequirements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RTRequirements RTRequirements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RTRequirements RTRequirements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RTRequirements> RTRequirements::Instances() { return ::Udm::InstantiatedAttr< RTRequirements>(impl); }
	RTRequirements RTRequirements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RTRequirements> RTRequirements::Derived() { return ::Udm::DerivedAttr< RTRequirements>(impl); }
	::Udm::ArchetypeAttr< RTRequirements> RTRequirements::Archetype() const { return ::Udm::ArchetypeAttr< RTRequirements>(impl); }
	::Udm::ChildAttr< ::CQML::ServiceProvider> RTRequirements::ServiceProvider_child() const { return ::Udm::ChildAttr< ::CQML::ServiceProvider>(impl, meta_ServiceProvider_child); }
	::Udm::ChildAttr< ::CQML::ServiceConsumer> RTRequirements::ServiceConsumer_child() const { return ::Udm::ChildAttr< ::CQML::ServiceConsumer>(impl, meta_ServiceConsumer_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RTRequirements::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ServiceProvider> RTRequirements::ServiceProvider_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ServiceProvider>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ServiceConsumer> RTRequirements::ServiceConsumer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ServiceConsumer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> RTRequirements::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void RTRequirements::Accept(Visitor &v) { v.Visit_RTRequirements(*this); }

	::Uml::Class RTRequirements::meta;
	::Uml::CompositionChildRole RTRequirements::meta_ServiceProvider_child;
	::Uml::CompositionChildRole RTRequirements::meta_ServiceConsumer_child;

	ImplementationDependency::ImplementationDependency() {}
	ImplementationDependency::ImplementationDependency(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationDependency::ImplementationDependency(const ImplementationDependency &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationDependency::ImplementationDependency(ImplementationDependency &&master) : MgaObject(master) {};

	ImplementationDependency ImplementationDependency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationDependency& ImplementationDependency::operator=(ImplementationDependency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationDependency ImplementationDependency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationDependency ImplementationDependency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationDependency ImplementationDependency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationDependency> ImplementationDependency::Instances() { return ::Udm::InstantiatedAttr< ImplementationDependency>(impl); }
	ImplementationDependency ImplementationDependency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationDependency> ImplementationDependency::Derived() { return ::Udm::DerivedAttr< ImplementationDependency>(impl); }
	::Udm::ArchetypeAttr< ImplementationDependency> ImplementationDependency::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationDependency>(impl); }
	::Udm::StringAttr ImplementationDependency::requiredType() const { return ::Udm::StringAttr(impl, meta_requiredType); }
	::Udm::AClassAssocAttr< ImplementationDependsOn, ComponentImplementation> ImplementationDependency::srcImplementationDependsOn() const { return ::Udm::AClassAssocAttr< ImplementationDependsOn, ComponentImplementation>(impl, meta_srcImplementationDependsOn, meta_srcImplementationDependsOn_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationDependency::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationDependency::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationDependency::Accept(Visitor &v) { v.Visit_ImplementationDependency(*this); }

	::Uml::Class ImplementationDependency::meta;
	::Uml::Attribute ImplementationDependency::meta_requiredType;
	::Uml::AssociationRole ImplementationDependency::meta_srcImplementationDependsOn;
	::Uml::AssociationRole ImplementationDependency::meta_srcImplementationDependsOn_rev;
	::Uml::CompositionParentRole ImplementationDependency::meta_ComponentImplementationContainer_parent;

	Property::Property() {}
	Property::Property(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Property::Property(const Property &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Property::Property(Property &&master) : MgaObject(master) {};

	Property Property::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Property& Property::operator=(Property &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Property Property::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Property Property::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Property Property::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Property> Property::Instances() { return ::Udm::InstantiatedAttr< Property>(impl); }
	Property Property::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Property> Property::Derived() { return ::Udm::DerivedAttr< Property>(impl); }
	::Udm::ArchetypeAttr< Property> Property::Archetype() const { return ::Udm::ArchetypeAttr< Property>(impl); }
	::Udm::StringAttr Property::DataValue() const { return ::Udm::StringAttr(impl, meta_DataValue); }
	::Udm::AClassAssocAttr< AttributeValue, ReadonlyAttribute> Property::srcAttributeValue() const { return ::Udm::AClassAssocAttr< AttributeValue, ReadonlyAttribute>(impl, meta_srcAttributeValue, meta_srcAttributeValue_rev); }
	::Udm::AClassAssocAttr< AssemblyConfigProperty, Component> Property::srcAssemblyConfigProperty() const { return ::Udm::AClassAssocAttr< AssemblyConfigProperty, Component>(impl, meta_srcAssemblyConfigProperty, meta_srcAssemblyConfigProperty_rev); }
	::Udm::AClassAssocAttr< ComponentConfigProperty, ComponentRef> Property::srcComponentConfigProperty() const { return ::Udm::AClassAssocAttr< ComponentConfigProperty, ComponentRef>(impl, meta_srcComponentConfigProperty, meta_srcComponentConfigProperty_rev); }
	::Udm::AClassAssocAttr< ComponentInfoProperty, ComponentRef> Property::srcComponentInfoProperty() const { return ::Udm::AClassAssocAttr< ComponentInfoProperty, ComponentRef>(impl, meta_srcComponentInfoProperty, meta_srcComponentInfoProperty_rev); }
	::Udm::AClassAssocAttr< EdgeProperty, Edge> Property::dstPropertyConnector() const { return ::Udm::AClassAssocAttr< EdgeProperty, Edge>(impl, meta_dstPropertyConnector, meta_dstPropertyConnector_rev); }
	::Udm::AClassAssocAttr< PackageConfigProperty, ComponentPackage> Property::srcPackageConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfigProperty, ComponentPackage>(impl, meta_srcPackageConfigProperty, meta_srcPackageConfigProperty_rev); }
	::Udm::AClassAssocAttr< PackageInfoProperty, ComponentPackage> Property::srcPackageInfoProperty() const { return ::Udm::AClassAssocAttr< PackageInfoProperty, ComponentPackage>(impl, meta_srcPackageInfoProperty, meta_srcPackageInfoProperty_rev); }
	::Udm::AClassAssocAttr< ArtifactExecParameter, ImplementationArtifact> Property::srcArtifactExecParameter() const { return ::Udm::AClassAssocAttr< ArtifactExecParameter, ImplementationArtifact>(impl, meta_srcArtifactExecParameter, meta_srcArtifactExecParameter_rev); }
	::Udm::AClassAssocAttr< ArtifactInfoProperty, ImplementationArtifact> Property::srcArtifactInfoProperty() const { return ::Udm::AClassAssocAttr< ArtifactInfoProperty, ImplementationArtifact>(impl, meta_srcArtifactInfoProperty, meta_srcArtifactInfoProperty_rev); }
	::Udm::AClassAssocAttr< PackageConfConfigProperty, PackageConfiguration> Property::srcPackageConfConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfConfigProperty, PackageConfiguration>(impl, meta_srcPackageConfConfigProperty, meta_srcPackageConfConfigProperty_rev); }
	::Udm::AClassPointerAttr< AttributeMappingValue, AttributeMapping> Property::srcAttributeMappingValue() const { return ::Udm::AClassPointerAttr< AttributeMappingValue, AttributeMapping>(impl, meta_srcAttributeMappingValue, meta_srcAttributeMappingValue_rev); }
	::Udm::AClassAssocAttr< PathProperty, Path> Property::srcPathProperty() const { return ::Udm::AClassAssocAttr< PathProperty, Path>(impl, meta_srcPathProperty, meta_srcPathProperty_rev); }
	::Udm::AClassAssocAttr< ConfigProperty, Implemenation> Property::srcConfigProperty() const { return ::Udm::AClassAssocAttr< ConfigProperty, Implemenation>(impl, meta_srcConfigProperty, meta_srcConfigProperty_rev); }
	::Udm::AClassAssocAttr< InfoProperty, Implemenation> Property::srcInfoProperty() const { return ::Udm::AClassAssocAttr< InfoProperty, Implemenation>(impl, meta_srcInfoProperty, meta_srcInfoProperty_rev); }
	::Udm::AClassAssocAttr< MonolithExecParameter, MonolithicImplementationBase> Property::srcMonolithExecParameter() const { return ::Udm::AClassAssocAttr< MonolithExecParameter, MonolithicImplementationBase>(impl, meta_srcMonolithExecParameter, meta_srcMonolithExecParameter_rev); }
	::Udm::ChildAttr< ::CQML::DataType> Property::DataType_child() const { return ::Udm::ChildAttr< ::CQML::DataType>(impl, meta_DataType_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Property::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DataType> Property::DataType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DataType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Domain> Property::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::RequirementBase> Property::RequirementBase_parent() const { return ::Udm::ParentAttr< ::CQML::RequirementBase>(impl, meta_RequirementBase_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> Property::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> Property::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> Property::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> Property::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> Property::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::Path> Property::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::Paths> Property::Paths_parent() const { return ::Udm::ParentAttr< ::CQML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> Property::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> Property::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorInputAction> Property::BehaviorInputAction_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorInputAction>(impl, meta_BehaviorInputAction_parent); }
	::Udm::ParentAttr< ::CQML::ActionBase> Property::ActionBase_parent() const { return ::Udm::ParentAttr< ::CQML::ActionBase>(impl, meta_ActionBase_parent); }
	::Udm::ParentAttr< ::CQML::QueryInputAction> Property::QueryInputAction_parent() const { return ::Udm::ParentAttr< ::CQML::QueryInputAction>(impl, meta_QueryInputAction_parent); }
	::Udm::ParentAttr< ::CQML::RepicaGroupConfiguration> Property::RepicaGroupConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RepicaGroupConfiguration>(impl, meta_RepicaGroupConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Property::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Property::Accept(Visitor &v) { v.Visit_Property(*this); }

	::Uml::Class Property::meta;
	::Uml::Attribute Property::meta_DataValue;
	::Uml::AssociationRole Property::meta_srcAttributeValue;
	::Uml::AssociationRole Property::meta_srcAttributeValue_rev;
	::Uml::AssociationRole Property::meta_srcAssemblyConfigProperty;
	::Uml::AssociationRole Property::meta_srcAssemblyConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcComponentConfigProperty;
	::Uml::AssociationRole Property::meta_srcComponentConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcComponentInfoProperty;
	::Uml::AssociationRole Property::meta_srcComponentInfoProperty_rev;
	::Uml::AssociationRole Property::meta_dstPropertyConnector;
	::Uml::AssociationRole Property::meta_dstPropertyConnector_rev;
	::Uml::AssociationRole Property::meta_srcPackageConfigProperty;
	::Uml::AssociationRole Property::meta_srcPackageConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcPackageInfoProperty;
	::Uml::AssociationRole Property::meta_srcPackageInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcArtifactExecParameter;
	::Uml::AssociationRole Property::meta_srcArtifactExecParameter_rev;
	::Uml::AssociationRole Property::meta_srcArtifactInfoProperty;
	::Uml::AssociationRole Property::meta_srcArtifactInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcPackageConfConfigProperty;
	::Uml::AssociationRole Property::meta_srcPackageConfConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcAttributeMappingValue;
	::Uml::AssociationRole Property::meta_srcAttributeMappingValue_rev;
	::Uml::AssociationRole Property::meta_srcPathProperty;
	::Uml::AssociationRole Property::meta_srcPathProperty_rev;
	::Uml::AssociationRole Property::meta_srcConfigProperty;
	::Uml::AssociationRole Property::meta_srcConfigProperty_rev;
	::Uml::AssociationRole Property::meta_srcInfoProperty;
	::Uml::AssociationRole Property::meta_srcInfoProperty_rev;
	::Uml::AssociationRole Property::meta_srcMonolithExecParameter;
	::Uml::AssociationRole Property::meta_srcMonolithExecParameter_rev;
	::Uml::CompositionChildRole Property::meta_DataType_child;
	::Uml::CompositionParentRole Property::meta_Domain_parent;
	::Uml::CompositionParentRole Property::meta_RequirementBase_parent;
	::Uml::CompositionParentRole Property::meta_PackageContainer_parent;
	::Uml::CompositionParentRole Property::meta_ComponentContainer_parent;
	::Uml::CompositionParentRole Property::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole Property::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole Property::meta_DeploymentPlan_parent;
	::Uml::CompositionParentRole Property::meta_Path_parent;
	::Uml::CompositionParentRole Property::meta_Paths_parent;
	::Uml::CompositionParentRole Property::meta_ComponentAssembly_parent;
	::Uml::CompositionParentRole Property::meta_ImplementationContainer_parent;
	::Uml::CompositionParentRole Property::meta_BehaviorInputAction_parent;
	::Uml::CompositionParentRole Property::meta_ActionBase_parent;
	::Uml::CompositionParentRole Property::meta_QueryInputAction_parent;
	::Uml::CompositionParentRole Property::meta_RepicaGroupConfiguration_parent;

	SatisfierProperty::SatisfierProperty() {}
	SatisfierProperty::SatisfierProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SatisfierProperty::SatisfierProperty(const SatisfierProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SatisfierProperty::SatisfierProperty(SatisfierProperty &&master) : MgaObject(master) {};

	SatisfierProperty SatisfierProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SatisfierProperty& SatisfierProperty::operator=(SatisfierProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SatisfierProperty SatisfierProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SatisfierProperty SatisfierProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SatisfierProperty SatisfierProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SatisfierProperty> SatisfierProperty::Instances() { return ::Udm::InstantiatedAttr< SatisfierProperty>(impl); }
	SatisfierProperty SatisfierProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SatisfierProperty> SatisfierProperty::Derived() { return ::Udm::DerivedAttr< SatisfierProperty>(impl); }
	::Udm::ArchetypeAttr< SatisfierProperty> SatisfierProperty::Archetype() const { return ::Udm::ArchetypeAttr< SatisfierProperty>(impl); }
	::Udm::StringAttr SatisfierProperty::DataValue() const { return ::Udm::StringAttr(impl, meta_DataValue); }
	::Udm::BooleanAttr SatisfierProperty::dynamic() const { return ::Udm::BooleanAttr(impl, meta_dynamic); }
	::Udm::StringAttr SatisfierProperty::SatisfierPropertyKind() const { return ::Udm::StringAttr(impl, meta_SatisfierPropertyKind); }
	::Udm::ChildAttr< ::CQML::DataType> SatisfierProperty::DataType_child() const { return ::Udm::ChildAttr< ::CQML::DataType>(impl, meta_DataType_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SatisfierProperty::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DataType> SatisfierProperty::DataType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DataType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RequirementSatisfier> SatisfierProperty::RequirementSatisfier_parent() const { return ::Udm::ParentAttr< ::CQML::RequirementSatisfier>(impl, meta_RequirementSatisfier_parent); }
	::Udm::ParentAttr< ::CQML::RequirementSatisfier> SatisfierProperty::parent() const { return ::Udm::ParentAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLPARENTROLE); }
	void SatisfierProperty::Accept(Visitor &v) { v.Visit_SatisfierProperty(*this); }

	::Uml::Class SatisfierProperty::meta;
	::Uml::Attribute SatisfierProperty::meta_DataValue;
	::Uml::Attribute SatisfierProperty::meta_dynamic;
	::Uml::Attribute SatisfierProperty::meta_SatisfierPropertyKind;
	::Uml::CompositionChildRole SatisfierProperty::meta_DataType_child;
	::Uml::CompositionParentRole SatisfierProperty::meta_RequirementSatisfier_parent;

	RequirementSatisfier::RequirementSatisfier() {}
	RequirementSatisfier::RequirementSatisfier(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RequirementSatisfier::RequirementSatisfier(const RequirementSatisfier &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RequirementSatisfier::RequirementSatisfier(RequirementSatisfier &&master) : MgaObject(master) {};

	RequirementSatisfier RequirementSatisfier::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequirementSatisfier& RequirementSatisfier::operator=(RequirementSatisfier &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequirementSatisfier RequirementSatisfier::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequirementSatisfier RequirementSatisfier::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequirementSatisfier RequirementSatisfier::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequirementSatisfier> RequirementSatisfier::Instances() { return ::Udm::InstantiatedAttr< RequirementSatisfier>(impl); }
	RequirementSatisfier RequirementSatisfier::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequirementSatisfier> RequirementSatisfier::Derived() { return ::Udm::DerivedAttr< RequirementSatisfier>(impl); }
	::Udm::ArchetypeAttr< RequirementSatisfier> RequirementSatisfier::Archetype() const { return ::Udm::ArchetypeAttr< RequirementSatisfier>(impl); }
	::Udm::StringAttr RequirementSatisfier::resourceType() const { return ::Udm::StringAttr(impl, meta_resourceType); }
	::Udm::ChildrenAttr< ::CQML::SatisfierProperty> RequirementSatisfier::SatisfierProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::SatisfierProperty>(impl, meta_SatisfierProperty_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RequirementSatisfier::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SatisfierProperty> RequirementSatisfier::SatisfierProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SatisfierProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> RequirementSatisfier::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RequirementSatisfier::meta;
	::Uml::Attribute RequirementSatisfier::meta_resourceType;
	::Uml::CompositionChildRole RequirementSatisfier::meta_SatisfierProperty_children;

	Capability::Capability() {}
	Capability::Capability(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	Capability::Capability(const Capability &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	Capability::Capability(Capability &&master) : RequirementSatisfier(master) {};

	Capability Capability::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Capability& Capability::operator=(Capability &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Capability Capability::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Capability Capability::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Capability Capability::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Capability> Capability::Instances() { return ::Udm::InstantiatedAttr< Capability>(impl); }
	Capability Capability::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Capability> Capability::Derived() { return ::Udm::DerivedAttr< Capability>(impl); }
	::Udm::ArchetypeAttr< Capability> Capability::Archetype() const { return ::Udm::ArchetypeAttr< Capability>(impl); }
	::Udm::AClassAssocAttr< ImplementationCapability, ComponentImplementation> Capability::srcImplementationCapability() const { return ::Udm::AClassAssocAttr< ImplementationCapability, ComponentImplementation>(impl, meta_srcImplementationCapability, meta_srcImplementationCapability_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> Capability::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> Capability::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void Capability::Accept(Visitor &v) { v.Visit_Capability(*this); }

	::Uml::Class Capability::meta;
	::Uml::AssociationRole Capability::meta_srcImplementationCapability;
	::Uml::AssociationRole Capability::meta_srcImplementationCapability_rev;
	::Uml::CompositionParentRole Capability::meta_ComponentImplementationContainer_parent;

	Resource::Resource() {}
	Resource::Resource(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	Resource::Resource(const Resource &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	Resource::Resource(Resource &&master) : RequirementSatisfier(master) {};

	Resource Resource::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Resource& Resource::operator=(Resource &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Resource Resource::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Resource Resource::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Resource Resource::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Resource> Resource::Instances() { return ::Udm::InstantiatedAttr< Resource>(impl); }
	Resource Resource::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Resource> Resource::Derived() { return ::Udm::DerivedAttr< Resource>(impl); }
	::Udm::ArchetypeAttr< Resource> Resource::Archetype() const { return ::Udm::ArchetypeAttr< Resource>(impl); }
	::Udm::ParentAttr< ::CQML::Bridge> Resource::Bridge_parent() const { return ::Udm::ParentAttr< ::CQML::Bridge>(impl, meta_Bridge_parent); }
	::Udm::ParentAttr< ::CQML::Interconnect> Resource::Interconnect_parent() const { return ::Udm::ParentAttr< ::CQML::Interconnect>(impl, meta_Interconnect_parent); }
	::Udm::ParentAttr< ::CQML::Node> Resource::Node_parent() const { return ::Udm::ParentAttr< ::CQML::Node>(impl, meta_Node_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Resource::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Resource::Accept(Visitor &v) { v.Visit_Resource(*this); }

	::Uml::Class Resource::meta;
	::Uml::CompositionParentRole Resource::meta_Bridge_parent;
	::Uml::CompositionParentRole Resource::meta_Interconnect_parent;
	::Uml::CompositionParentRole Resource::meta_Node_parent;

	SharedResource::SharedResource() {}
	SharedResource::SharedResource(::Udm::ObjectImpl *impl) : RequirementSatisfier(impl) {}
	SharedResource::SharedResource(const SharedResource &master) : RequirementSatisfier(master) {}

#ifdef UDM_RVALUE
	SharedResource::SharedResource(SharedResource &&master) : RequirementSatisfier(master) {};

	SharedResource SharedResource::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SharedResource& SharedResource::operator=(SharedResource &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SharedResource SharedResource::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SharedResource SharedResource::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SharedResource SharedResource::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SharedResource> SharedResource::Instances() { return ::Udm::InstantiatedAttr< SharedResource>(impl); }
	SharedResource SharedResource::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SharedResource> SharedResource::Derived() { return ::Udm::DerivedAttr< SharedResource>(impl); }
	::Udm::ArchetypeAttr< SharedResource> SharedResource::Archetype() const { return ::Udm::ArchetypeAttr< SharedResource>(impl); }
	::Udm::AClassAssocAttr< Shares, Node> SharedResource::srcShares() const { return ::Udm::AClassAssocAttr< Shares, Node>(impl, meta_srcShares, meta_srcShares_rev); }
	::Udm::AssocAttr< SharedResourceReference> SharedResource::referedbySharedResourceReference() const { return ::Udm::AssocAttr< SharedResourceReference>(impl, meta_referedbySharedResourceReference); }
	::Udm::ParentAttr< ::CQML::Domain> SharedResource::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> SharedResource::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void SharedResource::Accept(Visitor &v) { v.Visit_SharedResource(*this); }

	::Uml::Class SharedResource::meta;
	::Uml::AssociationRole SharedResource::meta_srcShares;
	::Uml::AssociationRole SharedResource::meta_srcShares_rev;
	::Uml::AssociationRole SharedResource::meta_referedbySharedResourceReference;
	::Uml::CompositionParentRole SharedResource::meta_Domain_parent;

	ImplementationRequirement::ImplementationRequirement() {}
	ImplementationRequirement::ImplementationRequirement(::Udm::ObjectImpl *impl) : RequirementBase(impl) {}
	ImplementationRequirement::ImplementationRequirement(const ImplementationRequirement &master) : RequirementBase(master) {}

#ifdef UDM_RVALUE
	ImplementationRequirement::ImplementationRequirement(ImplementationRequirement &&master) : RequirementBase(master) {};

	ImplementationRequirement ImplementationRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationRequirement& ImplementationRequirement::operator=(ImplementationRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationRequirement ImplementationRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationRequirement ImplementationRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationRequirement ImplementationRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationRequirement> ImplementationRequirement::Instances() { return ::Udm::InstantiatedAttr< ImplementationRequirement>(impl); }
	ImplementationRequirement ImplementationRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationRequirement> ImplementationRequirement::Derived() { return ::Udm::DerivedAttr< ImplementationRequirement>(impl); }
	::Udm::ArchetypeAttr< ImplementationRequirement> ImplementationRequirement::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationRequirement>(impl); }
	::Udm::StringAttr ImplementationRequirement::ResourceUsageKind() const { return ::Udm::StringAttr(impl, meta_ResourceUsageKind); }
	::Udm::StringAttr ImplementationRequirement::resourcePort() const { return ::Udm::StringAttr(impl, meta_resourcePort); }
	::Udm::StringAttr ImplementationRequirement::componentPort() const { return ::Udm::StringAttr(impl, meta_componentPort); }
	::Udm::AClassAssocAttr< MonolithDeployRequirement, MonolithicImplementationBase> ImplementationRequirement::srcMonolithDeployRequirement() const { return ::Udm::AClassAssocAttr< MonolithDeployRequirement, MonolithicImplementationBase>(impl, meta_srcMonolithDeployRequirement, meta_srcMonolithDeployRequirement_rev); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> ImplementationRequirement::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> ImplementationRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationRequirement::Accept(Visitor &v) { v.Visit_ImplementationRequirement(*this); }

	::Uml::Class ImplementationRequirement::meta;
	::Uml::Attribute ImplementationRequirement::meta_ResourceUsageKind;
	::Uml::Attribute ImplementationRequirement::meta_resourcePort;
	::Uml::Attribute ImplementationRequirement::meta_componentPort;
	::Uml::AssociationRole ImplementationRequirement::meta_srcMonolithDeployRequirement;
	::Uml::AssociationRole ImplementationRequirement::meta_srcMonolithDeployRequirement_rev;
	::Uml::CompositionParentRole ImplementationRequirement::meta_ImplementationContainer_parent;

	DataType::DataType() {}
	DataType::DataType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DataType::DataType(const DataType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DataType::DataType(DataType &&master) : MgaObject(master) {};

	DataType DataType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataType& DataType::operator=(DataType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataType DataType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataType DataType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataType DataType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataType> DataType::Instances() { return ::Udm::InstantiatedAttr< DataType>(impl); }
	DataType DataType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataType> DataType::Derived() { return ::Udm::DerivedAttr< DataType>(impl); }
	::Udm::ArchetypeAttr< DataType> DataType::Archetype() const { return ::Udm::ArchetypeAttr< DataType>(impl); }
	::Udm::PointerAttr< MemberType> DataType::ref() const { return ::Udm::PointerAttr< MemberType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Property> DataType::Property_parent() const { return ::Udm::ParentAttr< ::CQML::Property>(impl, meta_Property_parent); }
	::Udm::ParentAttr< ::CQML::SatisfierProperty> DataType::SatisfierProperty_parent() const { return ::Udm::ParentAttr< ::CQML::SatisfierProperty>(impl, meta_SatisfierProperty_parent); }
	::Udm::ParentAttr< ::CQML::ComponentPropertyDescription> DataType::ComponentPropertyDescription_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentPropertyDescription>(impl, meta_ComponentPropertyDescription_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> DataType::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void DataType::Accept(Visitor &v) { v.Visit_DataType(*this); }

	::Uml::Class DataType::meta;
	::Uml::AssociationRole DataType::meta_ref;
	::Uml::CompositionParentRole DataType::meta_Property_parent;
	::Uml::CompositionParentRole DataType::meta_SatisfierProperty_parent;
	::Uml::CompositionParentRole DataType::meta_ComponentPropertyDescription_parent;

	PackageInterface::PackageInterface() {}
	PackageInterface::PackageInterface(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageInterface::PackageInterface(const PackageInterface &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageInterface::PackageInterface(PackageInterface &&master) : MgaObject(master) {};

	PackageInterface PackageInterface::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageInterface& PackageInterface::operator=(PackageInterface &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageInterface PackageInterface::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageInterface PackageInterface::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageInterface PackageInterface::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageInterface> PackageInterface::Instances() { return ::Udm::InstantiatedAttr< PackageInterface>(impl); }
	PackageInterface PackageInterface::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageInterface> PackageInterface::Derived() { return ::Udm::DerivedAttr< PackageInterface>(impl); }
	::Udm::ArchetypeAttr< PackageInterface> PackageInterface::Archetype() const { return ::Udm::ArchetypeAttr< PackageInterface>(impl); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageInterface::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageInterface::parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackage> PackageInterface::srcPackageInterface_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackage>(impl, meta_srcPackageInterface_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> PackageInterface::dstPackageInterface_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_dstPackageInterface_end_); }
	void PackageInterface::Accept(Visitor &v) { v.Visit_PackageInterface(*this); }

	::Uml::Class PackageInterface::meta;
	::Uml::CompositionParentRole PackageInterface::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageInterface::meta_srcPackageInterface_end_;
	::Uml::AssociationRole PackageInterface::meta_dstPackageInterface_end_;

	Implementation::Implementation() {}
	Implementation::Implementation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implementation::Implementation(const Implementation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implementation::Implementation(Implementation &&master) : MgaObject(master) {};

	Implementation Implementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implementation& Implementation::operator=(Implementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implementation Implementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implementation Implementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implementation Implementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implementation> Implementation::Instances() { return ::Udm::InstantiatedAttr< Implementation>(impl); }
	Implementation Implementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implementation> Implementation::Derived() { return ::Udm::DerivedAttr< Implementation>(impl); }
	::Udm::ArchetypeAttr< Implementation> Implementation::Archetype() const { return ::Udm::ArchetypeAttr< Implementation>(impl); }
	::Udm::ParentAttr< ::CQML::PackageContainer> Implementation::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> Implementation::parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackage> Implementation::srcImplementation_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackage>(impl, meta_srcImplementation_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentImplementationReference> Implementation::dstImplementation_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentImplementationReference>(impl, meta_dstImplementation_end_); }
	void Implementation::Accept(Visitor &v) { v.Visit_Implementation(*this); }

	::Uml::Class Implementation::meta;
	::Uml::CompositionParentRole Implementation::meta_PackageContainer_parent;
	::Uml::AssociationRole Implementation::meta_srcImplementation_end_;
	::Uml::AssociationRole Implementation::meta_dstImplementation_end_;

	PackageContainer::PackageContainer() {}
	PackageContainer::PackageContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageContainer::PackageContainer(const PackageContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageContainer::PackageContainer(PackageContainer &&master) : MgaObject(master) {};

	PackageContainer PackageContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageContainer& PackageContainer::operator=(PackageContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageContainer PackageContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageContainer PackageContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageContainer PackageContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageContainer> PackageContainer::Instances() { return ::Udm::InstantiatedAttr< PackageContainer>(impl); }
	PackageContainer PackageContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageContainer> PackageContainer::Derived() { return ::Udm::DerivedAttr< PackageContainer>(impl); }
	::Udm::ArchetypeAttr< PackageContainer> PackageContainer::Archetype() const { return ::Udm::ArchetypeAttr< PackageContainer>(impl); }
	::Udm::ChildAttr< ::CQML::PackageInterface> PackageContainer::PackageInterface_child() const { return ::Udm::ChildAttr< ::CQML::PackageInterface>(impl, meta_PackageInterface_child); }
	::Udm::ChildrenAttr< ::CQML::Implementation> PackageContainer::Implementation_children() const { return ::Udm::ChildrenAttr< ::CQML::Implementation>(impl, meta_Implementation_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationReference> PackageContainer::ComponentImplementationReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationReference>(impl, meta_ComponentImplementationReference_children); }
	::Udm::ChildAttr< ::CQML::ComponentRef> PackageContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigProperty> PackageContainer::PackageConfigProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigProperty>(impl, meta_PackageConfigProperty_children); }
	::Udm::ChildrenAttr< ::CQML::Property> PackageContainer::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::PackageInfoProperty> PackageContainer::PackageInfoProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageInfoProperty>(impl, meta_PackageInfoProperty_children); }
	::Udm::ChildAttr< ::CQML::ComponentPackage> PackageContainer::ComponentPackage_child() const { return ::Udm::ChildAttr< ::CQML::ComponentPackage>(impl, meta_ComponentPackage_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PackageContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> PackageContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> PackageContainer::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> PackageContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> PackageContainer::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> PackageContainer::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> PackageContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageInterface> PackageContainer::PackageInterface_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageInterface>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Implementation> PackageContainer::Implementation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Implementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigProperty> PackageContainer::PackageConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageInfoProperty> PackageContainer::PackageInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackage> PackageContainer::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationReference> PackageContainer::ComponentImplementationReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentPackages> PackageContainer::ComponentPackages_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentPackages>(impl, meta_ComponentPackages_parent); }
	::Udm::ParentAttr< ::CQML::ComponentPackages> PackageContainer::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentPackages>(impl, ::Udm::NULLPARENTROLE); }
	void PackageContainer::Accept(Visitor &v) { v.Visit_PackageContainer(*this); }

	::Uml::Class PackageContainer::meta;
	::Uml::CompositionChildRole PackageContainer::meta_PackageInterface_child;
	::Uml::CompositionChildRole PackageContainer::meta_Implementation_children;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentImplementationReference_children;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentRef_child;
	::Uml::CompositionChildRole PackageContainer::meta_PackageConfigProperty_children;
	::Uml::CompositionChildRole PackageContainer::meta_Property_children;
	::Uml::CompositionChildRole PackageContainer::meta_PackageInfoProperty_children;
	::Uml::CompositionChildRole PackageContainer::meta_ComponentPackage_child;
	::Uml::CompositionParentRole PackageContainer::meta_ComponentPackages_parent;

	PackageConfigProperty::PackageConfigProperty() {}
	PackageConfigProperty::PackageConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigProperty::PackageConfigProperty(const PackageConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigProperty::PackageConfigProperty(PackageConfigProperty &&master) : MgaObject(master) {};

	PackageConfigProperty PackageConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigProperty& PackageConfigProperty::operator=(PackageConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigProperty PackageConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigProperty PackageConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigProperty PackageConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigProperty> PackageConfigProperty::Instances() { return ::Udm::InstantiatedAttr< PackageConfigProperty>(impl); }
	PackageConfigProperty PackageConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigProperty> PackageConfigProperty::Derived() { return ::Udm::DerivedAttr< PackageConfigProperty>(impl); }
	::Udm::ArchetypeAttr< PackageConfigProperty> PackageConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigProperty>(impl); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageConfigProperty::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageConfigProperty::parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackage> PackageConfigProperty::srcPackageConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackage>(impl, meta_srcPackageConfigProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> PackageConfigProperty::dstPackageConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstPackageConfigProperty_end_); }
	void PackageConfigProperty::Accept(Visitor &v) { v.Visit_PackageConfigProperty(*this); }

	::Uml::Class PackageConfigProperty::meta;
	::Uml::CompositionParentRole PackageConfigProperty::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageConfigProperty::meta_srcPackageConfigProperty_end_;
	::Uml::AssociationRole PackageConfigProperty::meta_dstPackageConfigProperty_end_;

	PackageInfoProperty::PackageInfoProperty() {}
	PackageInfoProperty::PackageInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageInfoProperty::PackageInfoProperty(const PackageInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageInfoProperty::PackageInfoProperty(PackageInfoProperty &&master) : MgaObject(master) {};

	PackageInfoProperty PackageInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageInfoProperty& PackageInfoProperty::operator=(PackageInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageInfoProperty PackageInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageInfoProperty PackageInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageInfoProperty PackageInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageInfoProperty> PackageInfoProperty::Instances() { return ::Udm::InstantiatedAttr< PackageInfoProperty>(impl); }
	PackageInfoProperty PackageInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageInfoProperty> PackageInfoProperty::Derived() { return ::Udm::DerivedAttr< PackageInfoProperty>(impl); }
	::Udm::ArchetypeAttr< PackageInfoProperty> PackageInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageInfoProperty>(impl); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageInfoProperty::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> PackageInfoProperty::parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackage> PackageInfoProperty::srcPackageInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackage>(impl, meta_srcPackageInfoProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> PackageInfoProperty::dstPackageInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstPackageInfoProperty_end_); }
	void PackageInfoProperty::Accept(Visitor &v) { v.Visit_PackageInfoProperty(*this); }

	::Uml::Class PackageInfoProperty::meta;
	::Uml::CompositionParentRole PackageInfoProperty::meta_PackageContainer_parent;
	::Uml::AssociationRole PackageInfoProperty::meta_srcPackageInfoProperty_end_;
	::Uml::AssociationRole PackageInfoProperty::meta_dstPackageInfoProperty_end_;

	ComponentPackage::ComponentPackage() {}
	ComponentPackage::ComponentPackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPackage::ComponentPackage(const ComponentPackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPackage::ComponentPackage(ComponentPackage &&master) : MgaObject(master) {};

	ComponentPackage ComponentPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackage& ComponentPackage::operator=(ComponentPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackage ComponentPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackage ComponentPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackage ComponentPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackage> ComponentPackage::Instances() { return ::Udm::InstantiatedAttr< ComponentPackage>(impl); }
	ComponentPackage ComponentPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackage> ComponentPackage::Derived() { return ::Udm::DerivedAttr< ComponentPackage>(impl); }
	::Udm::ArchetypeAttr< ComponentPackage> ComponentPackage::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackage>(impl); }
	::Udm::StringAttr ComponentPackage::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr ComponentPackage::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassPointerAttr< PackageInterface, ComponentRef> ComponentPackage::dstPackageInterface() const { return ::Udm::AClassPointerAttr< PackageInterface, ComponentRef>(impl, meta_dstPackageInterface, meta_dstPackageInterface_rev); }
	::Udm::AClassAssocAttr< Implementation, ComponentImplementationReference> ComponentPackage::dstImplementation() const { return ::Udm::AClassAssocAttr< Implementation, ComponentImplementationReference>(impl, meta_dstImplementation, meta_dstImplementation_rev); }
	::Udm::AClassAssocAttr< PackageConfigProperty, Property> ComponentPackage::dstPackageConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfigProperty, Property>(impl, meta_dstPackageConfigProperty, meta_dstPackageConfigProperty_rev); }
	::Udm::AClassAssocAttr< PackageInfoProperty, Property> ComponentPackage::dstPackageInfoProperty() const { return ::Udm::AClassAssocAttr< PackageInfoProperty, Property>(impl, meta_dstPackageInfoProperty, meta_dstPackageInfoProperty_rev); }
	::Udm::AssocAttr< ComponentPackageReference> ComponentPackage::referedbyComponentPackageReference() const { return ::Udm::AssocAttr< ComponentPackageReference>(impl, meta_referedbyComponentPackageReference); }
	::Udm::AClassAssocAttr< PackageConfBasePackage, PackageConfiguration> ComponentPackage::srcPackageConfBasePackage() const { return ::Udm::AClassAssocAttr< PackageConfBasePackage, PackageConfiguration>(impl, meta_srcPackageConfBasePackage, meta_srcPackageConfBasePackage_rev); }
	::Udm::ParentAttr< ::CQML::PackageContainer> ComponentPackage::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> ComponentPackage::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentPackage::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentPackage::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackage::Accept(Visitor &v) { v.Visit_ComponentPackage(*this); }

	::Uml::Class ComponentPackage::meta;
	::Uml::Attribute ComponentPackage::meta_label;
	::Uml::Attribute ComponentPackage::meta_UUID;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInterface;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInterface_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstImplementation;
	::Uml::AssociationRole ComponentPackage::meta_dstImplementation_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageConfigProperty;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageConfigProperty_rev;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInfoProperty;
	::Uml::AssociationRole ComponentPackage::meta_dstPackageInfoProperty_rev;
	::Uml::AssociationRole ComponentPackage::meta_referedbyComponentPackageReference;
	::Uml::AssociationRole ComponentPackage::meta_srcPackageConfBasePackage;
	::Uml::AssociationRole ComponentPackage::meta_srcPackageConfBasePackage_rev;
	::Uml::CompositionParentRole ComponentPackage::meta_PackageContainer_parent;
	::Uml::CompositionParentRole ComponentPackage::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole ComponentPackage::meta_ComponentAssembly_parent;

	ComponentPackageReference::ComponentPackageReference() {}
	ComponentPackageReference::ComponentPackageReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPackageReference::ComponentPackageReference(const ComponentPackageReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPackageReference::ComponentPackageReference(ComponentPackageReference &&master) : MgaObject(master) {};

	ComponentPackageReference ComponentPackageReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackageReference& ComponentPackageReference::operator=(ComponentPackageReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackageReference ComponentPackageReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackageReference ComponentPackageReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackageReference ComponentPackageReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackageReference> ComponentPackageReference::Instances() { return ::Udm::InstantiatedAttr< ComponentPackageReference>(impl); }
	ComponentPackageReference ComponentPackageReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackageReference> ComponentPackageReference::Derived() { return ::Udm::DerivedAttr< ComponentPackageReference>(impl); }
	::Udm::ArchetypeAttr< ComponentPackageReference> ComponentPackageReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackageReference>(impl); }
	::Udm::StringAttr ComponentPackageReference::requiredName() const { return ::Udm::StringAttr(impl, meta_requiredName); }
	::Udm::StringAttr ComponentPackageReference::requiredType() const { return ::Udm::StringAttr(impl, meta_requiredType); }
	::Udm::StringAttr ComponentPackageReference::requiredUUID() const { return ::Udm::StringAttr(impl, meta_requiredUUID); }
	::Udm::PointerAttr< ComponentPackage> ComponentPackageReference::ref() const { return ::Udm::PointerAttr< ComponentPackage>(impl, meta_ref); }
	::Udm::AClassAssocAttr< PackageConfReference, PackageConfiguration> ComponentPackageReference::srcPackageConfReference() const { return ::Udm::AClassAssocAttr< PackageConfReference, PackageConfiguration>(impl, meta_srcPackageConfReference, meta_srcPackageConfReference_rev); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> ComponentPackageReference::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentPackageReference::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentPackageReference::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackageReference::Accept(Visitor &v) { v.Visit_ComponentPackageReference(*this); }

	::Uml::Class ComponentPackageReference::meta;
	::Uml::Attribute ComponentPackageReference::meta_requiredName;
	::Uml::Attribute ComponentPackageReference::meta_requiredType;
	::Uml::Attribute ComponentPackageReference::meta_requiredUUID;
	::Uml::AssociationRole ComponentPackageReference::meta_ref;
	::Uml::AssociationRole ComponentPackageReference::meta_srcPackageConfReference;
	::Uml::AssociationRole ComponentPackageReference::meta_srcPackageConfReference_rev;
	::Uml::CompositionParentRole ComponentPackageReference::meta_PackageConfigurationContainer_parent;
	::Uml::CompositionParentRole ComponentPackageReference::meta_ComponentAssembly_parent;

	TopLevelPackageContainer::TopLevelPackageContainer() {}
	TopLevelPackageContainer::TopLevelPackageContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TopLevelPackageContainer::TopLevelPackageContainer(const TopLevelPackageContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelPackageContainer::TopLevelPackageContainer(TopLevelPackageContainer &&master) : MgaObject(master) {};

	TopLevelPackageContainer TopLevelPackageContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackageContainer& TopLevelPackageContainer::operator=(TopLevelPackageContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackageContainer TopLevelPackageContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackageContainer TopLevelPackageContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackageContainer TopLevelPackageContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackageContainer> TopLevelPackageContainer::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackageContainer>(impl); }
	TopLevelPackageContainer TopLevelPackageContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackageContainer> TopLevelPackageContainer::Derived() { return ::Udm::DerivedAttr< TopLevelPackageContainer>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackageContainer> TopLevelPackageContainer::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackageContainer>(impl); }
	::Udm::ChildAttr< ::CQML::PackageConfigurationReference> TopLevelPackageContainer::PackageConfigurationReference_child() const { return ::Udm::ChildAttr< ::CQML::PackageConfigurationReference>(impl, meta_PackageConfigurationReference_child); }
	::Udm::ChildAttr< ::CQML::TopLevelPackage> TopLevelPackageContainer::TopLevelPackage_child() const { return ::Udm::ChildAttr< ::CQML::TopLevelPackage>(impl, meta_TopLevelPackage_child); }
	::Udm::ChildAttr< ::CQML::package> TopLevelPackageContainer::package_child() const { return ::Udm::ChildAttr< ::CQML::package>(impl, meta_package_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> TopLevelPackageContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TopLevelPackage> TopLevelPackageContainer::TopLevelPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::package> TopLevelPackageContainer::package_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::package>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigurationReference> TopLevelPackageContainer::PackageConfigurationReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigurationReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::TopLevelPackages> TopLevelPackageContainer::TopLevelPackages_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackages>(impl, meta_TopLevelPackages_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelPackages> TopLevelPackageContainer::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackages>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackageContainer::Accept(Visitor &v) { v.Visit_TopLevelPackageContainer(*this); }

	::Uml::Class TopLevelPackageContainer::meta;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_PackageConfigurationReference_child;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_TopLevelPackage_child;
	::Uml::CompositionChildRole TopLevelPackageContainer::meta_package_child;
	::Uml::CompositionParentRole TopLevelPackageContainer::meta_TopLevelPackages_parent;

	TopLevelPackage::TopLevelPackage() {}
	TopLevelPackage::TopLevelPackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TopLevelPackage::TopLevelPackage(const TopLevelPackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TopLevelPackage::TopLevelPackage(TopLevelPackage &&master) : MgaObject(master) {};

	TopLevelPackage TopLevelPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackage& TopLevelPackage::operator=(TopLevelPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackage TopLevelPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackage TopLevelPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackage TopLevelPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackage> TopLevelPackage::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackage>(impl); }
	TopLevelPackage TopLevelPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackage> TopLevelPackage::Derived() { return ::Udm::DerivedAttr< TopLevelPackage>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackage> TopLevelPackage::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackage>(impl); }
	::Udm::AClassPointerAttr< package, PackageConfigurationReference> TopLevelPackage::dstpackage() const { return ::Udm::AClassPointerAttr< package, PackageConfigurationReference>(impl, meta_dstpackage, meta_dstpackage_rev); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> TopLevelPackage::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> TopLevelPackage::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackage::Accept(Visitor &v) { v.Visit_TopLevelPackage(*this); }

	::Uml::Class TopLevelPackage::meta;
	::Uml::AssociationRole TopLevelPackage::meta_dstpackage;
	::Uml::AssociationRole TopLevelPackage::meta_dstpackage_rev;
	::Uml::CompositionParentRole TopLevelPackage::meta_TopLevelPackageContainer_parent;

	package::package() {}
	package::package(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	package::package(const package &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	package::package(package &&master) : MgaObject(master) {};

	package package::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	package& package::operator=(package &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	package package::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	package package::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	package package::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< package> package::Instances() { return ::Udm::InstantiatedAttr< package>(impl); }
	package package::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< package> package::Derived() { return ::Udm::DerivedAttr< package>(impl); }
	::Udm::ArchetypeAttr< package> package::Archetype() const { return ::Udm::ArchetypeAttr< package>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> package::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> package::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::TopLevelPackage> package::srcpackage_end() const { return ::Udm::AssocEndAttr< ::CQML::TopLevelPackage>(impl, meta_srcpackage_end_); }
	::Udm::AssocEndAttr< ::CQML::PackageConfigurationReference> package::dstpackage_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfigurationReference>(impl, meta_dstpackage_end_); }
	void package::Accept(Visitor &v) { v.Visit_package(*this); }

	::Uml::Class package::meta;
	::Uml::CompositionParentRole package::meta_TopLevelPackageContainer_parent;
	::Uml::AssociationRole package::meta_srcpackage_end_;
	::Uml::AssociationRole package::meta_dstpackage_end_;

	ComponentPropertyDescription::ComponentPropertyDescription() {}
	ComponentPropertyDescription::ComponentPropertyDescription(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentPropertyDescription::ComponentPropertyDescription(const ComponentPropertyDescription &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentPropertyDescription::ComponentPropertyDescription(ComponentPropertyDescription &&master) : MgaObject(master) {};

	ComponentPropertyDescription ComponentPropertyDescription::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPropertyDescription& ComponentPropertyDescription::operator=(ComponentPropertyDescription &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPropertyDescription ComponentPropertyDescription::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPropertyDescription ComponentPropertyDescription::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPropertyDescription ComponentPropertyDescription::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPropertyDescription> ComponentPropertyDescription::Instances() { return ::Udm::InstantiatedAttr< ComponentPropertyDescription>(impl); }
	ComponentPropertyDescription ComponentPropertyDescription::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPropertyDescription> ComponentPropertyDescription::Derived() { return ::Udm::DerivedAttr< ComponentPropertyDescription>(impl); }
	::Udm::ArchetypeAttr< ComponentPropertyDescription> ComponentPropertyDescription::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPropertyDescription>(impl); }
	::Udm::AClassAssocAttr< ComponentProperty, ComponentRef> ComponentPropertyDescription::srcComponentProperty() const { return ::Udm::AClassAssocAttr< ComponentProperty, ComponentRef>(impl, meta_srcComponentProperty, meta_srcComponentProperty_rev); }
	::Udm::ChildAttr< ::CQML::DataType> ComponentPropertyDescription::DataType_child() const { return ::Udm::ChildAttr< ::CQML::DataType>(impl, meta_DataType_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentPropertyDescription::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DataType> ComponentPropertyDescription::DataType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DataType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentPropertyDescription::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentPropertyDescription::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPropertyDescription::Accept(Visitor &v) { v.Visit_ComponentPropertyDescription(*this); }

	::Uml::Class ComponentPropertyDescription::meta;
	::Uml::AssociationRole ComponentPropertyDescription::meta_srcComponentProperty;
	::Uml::AssociationRole ComponentPropertyDescription::meta_srcComponentProperty_rev;
	::Uml::CompositionChildRole ComponentPropertyDescription::meta_DataType_child;
	::Uml::CompositionParentRole ComponentPropertyDescription::meta_ComponentContainer_parent;

	ComponentProperty::ComponentProperty() {}
	ComponentProperty::ComponentProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentProperty::ComponentProperty(const ComponentProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentProperty::ComponentProperty(ComponentProperty &&master) : MgaObject(master) {};

	ComponentProperty ComponentProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentProperty& ComponentProperty::operator=(ComponentProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentProperty ComponentProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentProperty ComponentProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentProperty ComponentProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentProperty> ComponentProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentProperty>(impl); }
	ComponentProperty ComponentProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentProperty> ComponentProperty::Derived() { return ::Udm::DerivedAttr< ComponentProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentProperty> ComponentProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> ComponentProperty::srcComponentProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_srcComponentProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentPropertyDescription> ComponentProperty::dstComponentProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPropertyDescription>(impl, meta_dstComponentProperty_end_); }
	void ComponentProperty::Accept(Visitor &v) { v.Visit_ComponentProperty(*this); }

	::Uml::Class ComponentProperty::meta;
	::Uml::CompositionParentRole ComponentProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentProperty::meta_srcComponentProperty_end_;
	::Uml::AssociationRole ComponentProperty::meta_dstComponentProperty_end_;

	ComponentContainer::ComponentContainer() {}
	ComponentContainer::ComponentContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentContainer::ComponentContainer(const ComponentContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentContainer::ComponentContainer(ComponentContainer &&master) : MgaObject(master) {};

	ComponentContainer ComponentContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentContainer& ComponentContainer::operator=(ComponentContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentContainer ComponentContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentContainer ComponentContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentContainer ComponentContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentContainer> ComponentContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentContainer>(impl); }
	ComponentContainer ComponentContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentContainer> ComponentContainer::Derived() { return ::Udm::DerivedAttr< ComponentContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentContainer> ComponentContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentContainer>(impl); }
	::Udm::ChildrenAttr< ::CQML::Property> ComponentContainer::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentConfigProperty> ComponentContainer::ComponentConfigProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentConfigProperty>(impl, meta_ComponentConfigProperty_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentInfoProperty> ComponentContainer::ComponentInfoProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentInfoProperty>(impl, meta_ComponentInfoProperty_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentProperty> ComponentContainer::ComponentProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentProperty>(impl, meta_ComponentProperty_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentPropertyDescription> ComponentContainer::ComponentPropertyDescription_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPropertyDescription>(impl, meta_ComponentPropertyDescription_children); }
	::Udm::ChildAttr< ::CQML::ComponentRef> ComponentContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> ComponentContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> ComponentContainer::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> ComponentContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> ComponentContainer::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> ComponentContainer::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> ComponentContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPropertyDescription> ComponentContainer::ComponentPropertyDescription_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPropertyDescription>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentProperty> ComponentContainer::ComponentProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentConfigProperty> ComponentContainer::ComponentConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentInfoProperty> ComponentContainer::ComponentInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentTypes> ComponentContainer::ComponentTypes_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentTypes>(impl, meta_ComponentTypes_parent); }
	::Udm::ParentAttr< ::CQML::ComponentTypes> ComponentContainer::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentTypes>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentContainer::Accept(Visitor &v) { v.Visit_ComponentContainer(*this); }

	::Uml::Class ComponentContainer::meta;
	::Uml::CompositionChildRole ComponentContainer::meta_Property_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentConfigProperty_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentInfoProperty_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentProperty_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentPropertyDescription_children;
	::Uml::CompositionChildRole ComponentContainer::meta_ComponentRef_child;
	::Uml::CompositionParentRole ComponentContainer::meta_ComponentTypes_parent;

	ComponentConfigProperty::ComponentConfigProperty() {}
	ComponentConfigProperty::ComponentConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentConfigProperty::ComponentConfigProperty(const ComponentConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentConfigProperty::ComponentConfigProperty(ComponentConfigProperty &&master) : MgaObject(master) {};

	ComponentConfigProperty ComponentConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentConfigProperty& ComponentConfigProperty::operator=(ComponentConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentConfigProperty ComponentConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentConfigProperty ComponentConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentConfigProperty ComponentConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentConfigProperty> ComponentConfigProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentConfigProperty>(impl); }
	ComponentConfigProperty ComponentConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentConfigProperty> ComponentConfigProperty::Derived() { return ::Udm::DerivedAttr< ComponentConfigProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentConfigProperty> ComponentConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentConfigProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentConfigProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentConfigProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> ComponentConfigProperty::srcComponentConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_srcComponentConfigProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> ComponentConfigProperty::dstComponentConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstComponentConfigProperty_end_); }
	void ComponentConfigProperty::Accept(Visitor &v) { v.Visit_ComponentConfigProperty(*this); }

	::Uml::Class ComponentConfigProperty::meta;
	::Uml::CompositionParentRole ComponentConfigProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentConfigProperty::meta_srcComponentConfigProperty_end_;
	::Uml::AssociationRole ComponentConfigProperty::meta_dstComponentConfigProperty_end_;

	ComponentInfoProperty::ComponentInfoProperty() {}
	ComponentInfoProperty::ComponentInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentInfoProperty::ComponentInfoProperty(const ComponentInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentInfoProperty::ComponentInfoProperty(ComponentInfoProperty &&master) : MgaObject(master) {};

	ComponentInfoProperty ComponentInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentInfoProperty& ComponentInfoProperty::operator=(ComponentInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentInfoProperty ComponentInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentInfoProperty ComponentInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentInfoProperty ComponentInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentInfoProperty> ComponentInfoProperty::Instances() { return ::Udm::InstantiatedAttr< ComponentInfoProperty>(impl); }
	ComponentInfoProperty ComponentInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentInfoProperty> ComponentInfoProperty::Derived() { return ::Udm::DerivedAttr< ComponentInfoProperty>(impl); }
	::Udm::ArchetypeAttr< ComponentInfoProperty> ComponentInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< ComponentInfoProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentInfoProperty::ComponentContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentContainer> ComponentInfoProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> ComponentInfoProperty::srcComponentInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_srcComponentInfoProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> ComponentInfoProperty::dstComponentInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstComponentInfoProperty_end_); }
	void ComponentInfoProperty::Accept(Visitor &v) { v.Visit_ComponentInfoProperty(*this); }

	::Uml::Class ComponentInfoProperty::meta;
	::Uml::CompositionParentRole ComponentInfoProperty::meta_ComponentContainer_parent;
	::Uml::AssociationRole ComponentInfoProperty::meta_srcComponentInfoProperty_end_;
	::Uml::AssociationRole ComponentInfoProperty::meta_dstComponentInfoProperty_end_;

	ImplementationArtifactReference::ImplementationArtifactReference() {}
	ImplementationArtifactReference::ImplementationArtifactReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationArtifactReference::ImplementationArtifactReference(const ImplementationArtifactReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifactReference::ImplementationArtifactReference(ImplementationArtifactReference &&master) : MgaObject(master) {};

	ImplementationArtifactReference ImplementationArtifactReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifactReference& ImplementationArtifactReference::operator=(ImplementationArtifactReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifactReference ImplementationArtifactReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifactReference ImplementationArtifactReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifactReference ImplementationArtifactReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifactReference> ImplementationArtifactReference::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifactReference>(impl); }
	ImplementationArtifactReference ImplementationArtifactReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifactReference> ImplementationArtifactReference::Derived() { return ::Udm::DerivedAttr< ImplementationArtifactReference>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifactReference> ImplementationArtifactReference::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifactReference>(impl); }
	::Udm::PointerAttr< ImplementationArtifact> ImplementationArtifactReference::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifact> ImplementationArtifactReference::srcArtifactDependsOn() const { return ::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifact>(impl, meta_srcArtifactDependsOn, meta_srcArtifactDependsOn_rev); }
	::Udm::AClassAssocAttr< MonolithprimaryArtifact, MonolithicImplementationBase> ImplementationArtifactReference::srcMonolithprimaryArtifact() const { return ::Udm::AClassAssocAttr< MonolithprimaryArtifact, MonolithicImplementationBase>(impl, meta_srcMonolithprimaryArtifact, meta_srcMonolithprimaryArtifact_rev); }
	::Udm::ParentAttr< ::CQML::StubProject> ImplementationArtifactReference::StubProject_parent() const { return ::Udm::ParentAttr< ::CQML::StubProject>(impl, meta_StubProject_parent); }
	::Udm::ParentAttr< ::CQML::ServantProject> ImplementationArtifactReference::ServantProject_parent() const { return ::Udm::ParentAttr< ::CQML::ServantProject>(impl, meta_ServantProject_parent); }
	::Udm::ParentAttr< ::CQML::ExecutorProject> ImplementationArtifactReference::ExecutorProject_parent() const { return ::Udm::ParentAttr< ::CQML::ExecutorProject>(impl, meta_ExecutorProject_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ImplementationArtifactReference::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> ImplementationArtifactReference::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ImplementationArtifactReference::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifactReference::Accept(Visitor &v) { v.Visit_ImplementationArtifactReference(*this); }

	::Uml::Class ImplementationArtifactReference::meta;
	::Uml::AssociationRole ImplementationArtifactReference::meta_ref;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcArtifactDependsOn;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcArtifactDependsOn_rev;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;
	::Uml::AssociationRole ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_StubProject_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ServantProject_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ExecutorProject_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ArtifactContainer_parent;
	::Uml::CompositionParentRole ImplementationArtifactReference::meta_ImplementationContainer_parent;

	ComponentServantArtifact::ComponentServantArtifact() {}
	ComponentServantArtifact::ComponentServantArtifact(::Udm::ObjectImpl *impl) : ImplementationArtifactReference(impl) {}
	ComponentServantArtifact::ComponentServantArtifact(const ComponentServantArtifact &master) : ImplementationArtifactReference(master) {}

#ifdef UDM_RVALUE
	ComponentServantArtifact::ComponentServantArtifact(ComponentServantArtifact &&master) : ImplementationArtifactReference(master) {};

	ComponentServantArtifact ComponentServantArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentServantArtifact& ComponentServantArtifact::operator=(ComponentServantArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentServantArtifact ComponentServantArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentServantArtifact ComponentServantArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentServantArtifact ComponentServantArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentServantArtifact> ComponentServantArtifact::Instances() { return ::Udm::InstantiatedAttr< ComponentServantArtifact>(impl); }
	ComponentServantArtifact ComponentServantArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentServantArtifact> ComponentServantArtifact::Derived() { return ::Udm::DerivedAttr< ComponentServantArtifact>(impl); }
	::Udm::ArchetypeAttr< ComponentServantArtifact> ComponentServantArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ComponentServantArtifact>(impl); }
	::Udm::PointerAttr< ImplementationArtifact> ComponentServantArtifact::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentServantArtifact::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentServantArtifact::Accept(Visitor &v) { v.Visit_ComponentServantArtifact(*this); }

	::Uml::Class ComponentServantArtifact::meta;
	::Uml::AssociationRole ComponentServantArtifact::meta_ref;

	ComponentImplementationArtifact::ComponentImplementationArtifact() {}
	ComponentImplementationArtifact::ComponentImplementationArtifact(::Udm::ObjectImpl *impl) : ImplementationArtifactReference(impl) {}
	ComponentImplementationArtifact::ComponentImplementationArtifact(const ComponentImplementationArtifact &master) : ImplementationArtifactReference(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationArtifact::ComponentImplementationArtifact(ComponentImplementationArtifact &&master) : ImplementationArtifactReference(master) {};

	ComponentImplementationArtifact ComponentImplementationArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationArtifact& ComponentImplementationArtifact::operator=(ComponentImplementationArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationArtifact ComponentImplementationArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationArtifact ComponentImplementationArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationArtifact ComponentImplementationArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationArtifact>(impl); }
	ComponentImplementationArtifact ComponentImplementationArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Derived() { return ::Udm::DerivedAttr< ComponentImplementationArtifact>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationArtifact> ComponentImplementationArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationArtifact>(impl); }
	::Udm::PointerAttr< ImplementationArtifact> ComponentImplementationArtifact::ref() const { return ::Udm::PointerAttr< ImplementationArtifact>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentImplementationArtifact::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationArtifact::Accept(Visitor &v) { v.Visit_ComponentImplementationArtifact(*this); }

	::Uml::Class ComponentImplementationArtifact::meta;
	::Uml::AssociationRole ComponentImplementationArtifact::meta_ref;

	ArtifactDependsOn::ArtifactDependsOn() {}
	ArtifactDependsOn::ArtifactDependsOn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDependsOn::ArtifactDependsOn(const ArtifactDependsOn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDependsOn::ArtifactDependsOn(ArtifactDependsOn &&master) : MgaObject(master) {};

	ArtifactDependsOn ArtifactDependsOn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDependsOn& ArtifactDependsOn::operator=(ArtifactDependsOn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDependsOn ArtifactDependsOn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDependsOn ArtifactDependsOn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDependsOn ArtifactDependsOn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDependsOn> ArtifactDependsOn::Instances() { return ::Udm::InstantiatedAttr< ArtifactDependsOn>(impl); }
	ArtifactDependsOn ArtifactDependsOn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDependsOn> ArtifactDependsOn::Derived() { return ::Udm::DerivedAttr< ArtifactDependsOn>(impl); }
	::Udm::ArchetypeAttr< ArtifactDependsOn> ArtifactDependsOn::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDependsOn>(impl); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDependsOn::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDependsOn::parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactDependsOn::srcArtifactDependsOn_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_srcArtifactDependsOn_end_); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifactReference> ArtifactDependsOn::dstArtifactDependsOn_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifactReference>(impl, meta_dstArtifactDependsOn_end_); }
	void ArtifactDependsOn::Accept(Visitor &v) { v.Visit_ArtifactDependsOn(*this); }

	::Uml::Class ArtifactDependsOn::meta;
	::Uml::CompositionParentRole ArtifactDependsOn::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDependsOn::meta_srcArtifactDependsOn_end_;
	::Uml::AssociationRole ArtifactDependsOn::meta_dstArtifactDependsOn_end_;

	ArtifactDeployRequirement::ArtifactDeployRequirement() {}
	ArtifactDeployRequirement::ArtifactDeployRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDeployRequirement::ArtifactDeployRequirement(const ArtifactDeployRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDeployRequirement::ArtifactDeployRequirement(ArtifactDeployRequirement &&master) : MgaObject(master) {};

	ArtifactDeployRequirement ArtifactDeployRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDeployRequirement& ArtifactDeployRequirement::operator=(ArtifactDeployRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDeployRequirement ArtifactDeployRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDeployRequirement ArtifactDeployRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDeployRequirement ArtifactDeployRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Instances() { return ::Udm::InstantiatedAttr< ArtifactDeployRequirement>(impl); }
	ArtifactDeployRequirement ArtifactDeployRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Derived() { return ::Udm::DerivedAttr< ArtifactDeployRequirement>(impl); }
	::Udm::ArchetypeAttr< ArtifactDeployRequirement> ArtifactDeployRequirement::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDeployRequirement>(impl); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDeployRequirement::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDeployRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactDeployRequirement::srcArtifactDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_srcArtifactDeployRequirement_end_); }
	::Udm::AssocEndAttr< ::CQML::Requirement> ArtifactDeployRequirement::dstArtifactDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::Requirement>(impl, meta_dstArtifactDeployRequirement_end_); }
	void ArtifactDeployRequirement::Accept(Visitor &v) { v.Visit_ArtifactDeployRequirement(*this); }

	::Uml::Class ArtifactDeployRequirement::meta;
	::Uml::CompositionParentRole ArtifactDeployRequirement::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_;
	::Uml::AssociationRole ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_;

	ArtifactContainer::ArtifactContainer() {}
	ArtifactContainer::ArtifactContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactContainer::ArtifactContainer(const ArtifactContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactContainer::ArtifactContainer(ArtifactContainer &&master) : MgaObject(master) {};

	ArtifactContainer ArtifactContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactContainer& ArtifactContainer::operator=(ArtifactContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactContainer ArtifactContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactContainer ArtifactContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactContainer ArtifactContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactContainer> ArtifactContainer::Instances() { return ::Udm::InstantiatedAttr< ArtifactContainer>(impl); }
	ArtifactContainer ArtifactContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactContainer> ArtifactContainer::Derived() { return ::Udm::DerivedAttr< ArtifactContainer>(impl); }
	::Udm::ArchetypeAttr< ArtifactContainer> ArtifactContainer::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactContainer>(impl); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDependsOn> ArtifactContainer::ArtifactDependsOn_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDependsOn>(impl, meta_ArtifactDependsOn_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ArtifactContainer::ImplementationArtifactReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_children); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDeployRequirement> ArtifactContainer::ArtifactDeployRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDeployRequirement>(impl, meta_ArtifactDeployRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::Requirement> ArtifactContainer::Requirement_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::CQML::ArtifactExecParameter> ArtifactContainer::ArtifactExecParameter_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactExecParameter>(impl, meta_ArtifactExecParameter_children); }
	::Udm::ChildrenAttr< ::CQML::ArtifactInfoProperty> ArtifactContainer::ArtifactInfoProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactInfoProperty>(impl, meta_ArtifactInfoProperty_children); }
	::Udm::ChildrenAttr< ::CQML::Property> ArtifactContainer::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifact> ArtifactContainer::ImplementationArtifact_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifact>(impl, meta_ImplementationArtifact_children); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDependency> ArtifactContainer::ArtifactDependency_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDependency>(impl, meta_ArtifactDependency_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ArtifactContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Requirement> ArtifactContainer::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementBase> ArtifactContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ECRequirements> ArtifactContainer::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RTRequirements> ArtifactContainer::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> ArtifactContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ArtifactContainer::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact> ArtifactContainer::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact> ArtifactContainer::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDependsOn> ArtifactContainer::ArtifactDependsOn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDependsOn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDeployRequirement> ArtifactContainer::ArtifactDeployRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDeployRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactExecParameter> ArtifactContainer::ArtifactExecParameter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactExecParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactInfoProperty> ArtifactContainer::ArtifactInfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactInfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifact> ArtifactContainer::ImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactDependency> ArtifactContainer::ArtifactDependency_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactDependency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ImplementationArtifacts> ArtifactContainer::ImplementationArtifacts_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationArtifacts>(impl, meta_ImplementationArtifacts_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationArtifacts> ArtifactContainer::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationArtifacts>(impl, ::Udm::NULLPARENTROLE); }
	void ArtifactContainer::Accept(Visitor &v) { v.Visit_ArtifactContainer(*this); }

	::Uml::Class ArtifactContainer::meta;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDependsOn_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ImplementationArtifactReference_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDeployRequirement_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_Requirement_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactExecParameter_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactInfoProperty_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_Property_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ImplementationArtifact_children;
	::Uml::CompositionChildRole ArtifactContainer::meta_ArtifactDependency_children;
	::Uml::CompositionParentRole ArtifactContainer::meta_ImplementationArtifacts_parent;

	ArtifactExecParameter::ArtifactExecParameter() {}
	ArtifactExecParameter::ArtifactExecParameter(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactExecParameter::ArtifactExecParameter(const ArtifactExecParameter &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactExecParameter::ArtifactExecParameter(ArtifactExecParameter &&master) : MgaObject(master) {};

	ArtifactExecParameter ArtifactExecParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactExecParameter& ArtifactExecParameter::operator=(ArtifactExecParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactExecParameter ArtifactExecParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactExecParameter ArtifactExecParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactExecParameter ArtifactExecParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactExecParameter> ArtifactExecParameter::Instances() { return ::Udm::InstantiatedAttr< ArtifactExecParameter>(impl); }
	ArtifactExecParameter ArtifactExecParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactExecParameter> ArtifactExecParameter::Derived() { return ::Udm::DerivedAttr< ArtifactExecParameter>(impl); }
	::Udm::ArchetypeAttr< ArtifactExecParameter> ArtifactExecParameter::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactExecParameter>(impl); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactExecParameter::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactExecParameter::parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactExecParameter::srcArtifactExecParameter_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_srcArtifactExecParameter_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> ArtifactExecParameter::dstArtifactExecParameter_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstArtifactExecParameter_end_); }
	void ArtifactExecParameter::Accept(Visitor &v) { v.Visit_ArtifactExecParameter(*this); }

	::Uml::Class ArtifactExecParameter::meta;
	::Uml::CompositionParentRole ArtifactExecParameter::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactExecParameter::meta_srcArtifactExecParameter_end_;
	::Uml::AssociationRole ArtifactExecParameter::meta_dstArtifactExecParameter_end_;

	ArtifactInfoProperty::ArtifactInfoProperty() {}
	ArtifactInfoProperty::ArtifactInfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactInfoProperty::ArtifactInfoProperty(const ArtifactInfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactInfoProperty::ArtifactInfoProperty(ArtifactInfoProperty &&master) : MgaObject(master) {};

	ArtifactInfoProperty ArtifactInfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactInfoProperty& ArtifactInfoProperty::operator=(ArtifactInfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactInfoProperty ArtifactInfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactInfoProperty ArtifactInfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactInfoProperty ArtifactInfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactInfoProperty> ArtifactInfoProperty::Instances() { return ::Udm::InstantiatedAttr< ArtifactInfoProperty>(impl); }
	ArtifactInfoProperty ArtifactInfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactInfoProperty> ArtifactInfoProperty::Derived() { return ::Udm::DerivedAttr< ArtifactInfoProperty>(impl); }
	::Udm::ArchetypeAttr< ArtifactInfoProperty> ArtifactInfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactInfoProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactInfoProperty::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactInfoProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactInfoProperty::srcArtifactInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_srcArtifactInfoProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> ArtifactInfoProperty::dstArtifactInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstArtifactInfoProperty_end_); }
	void ArtifactInfoProperty::Accept(Visitor &v) { v.Visit_ArtifactInfoProperty(*this); }

	::Uml::Class ArtifactInfoProperty::meta;
	::Uml::CompositionParentRole ArtifactInfoProperty::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_;
	::Uml::AssociationRole ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_;

	ImplementationArtifact::ImplementationArtifact() {}
	ImplementationArtifact::ImplementationArtifact(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationArtifact::ImplementationArtifact(const ImplementationArtifact &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifact::ImplementationArtifact(ImplementationArtifact &&master) : MgaObject(master) {};

	ImplementationArtifact ImplementationArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifact& ImplementationArtifact::operator=(ImplementationArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifact ImplementationArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifact ImplementationArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifact ImplementationArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifact> ImplementationArtifact::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifact>(impl); }
	ImplementationArtifact ImplementationArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifact> ImplementationArtifact::Derived() { return ::Udm::DerivedAttr< ImplementationArtifact>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifact> ImplementationArtifact::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifact>(impl); }
	::Udm::StringAttr ImplementationArtifact::artifactVersion() const { return ::Udm::StringAttr(impl, meta_artifactVersion); }
	::Udm::StringAttr ImplementationArtifact::architecture() const { return ::Udm::StringAttr(impl, meta_architecture); }
	::Udm::StringAttr ImplementationArtifact::configuration() const { return ::Udm::StringAttr(impl, meta_configuration); }
	::Udm::StringAttr ImplementationArtifact::operatingSystem() const { return ::Udm::StringAttr(impl, meta_operatingSystem); }
	::Udm::StringAttr ImplementationArtifact::location() const { return ::Udm::StringAttr(impl, meta_location); }
	::Udm::StringAttr ImplementationArtifact::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::StringAttr ImplementationArtifact::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AssocAttr< ExternalResources> ImplementationArtifact::referedbyExternalResources() const { return ::Udm::AssocAttr< ExternalResources>(impl, meta_referedbyExternalResources); }
	::Udm::AssocAttr< ImplementationArtifactReference> ImplementationArtifact::referedbyImplementationArtifactReference() const { return ::Udm::AssocAttr< ImplementationArtifactReference>(impl, meta_referedbyImplementationArtifactReference); }
	::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifactReference> ImplementationArtifact::dstArtifactDependsOn() const { return ::Udm::AClassAssocAttr< ArtifactDependsOn, ImplementationArtifactReference>(impl, meta_dstArtifactDependsOn, meta_dstArtifactDependsOn_rev); }
	::Udm::AClassAssocAttr< ArtifactDeployRequirement, Requirement> ImplementationArtifact::dstArtifactDeployRequirement() const { return ::Udm::AClassAssocAttr< ArtifactDeployRequirement, Requirement>(impl, meta_dstArtifactDeployRequirement, meta_dstArtifactDeployRequirement_rev); }
	::Udm::AClassAssocAttr< ArtifactExecParameter, Property> ImplementationArtifact::dstArtifactExecParameter() const { return ::Udm::AClassAssocAttr< ArtifactExecParameter, Property>(impl, meta_dstArtifactExecParameter, meta_dstArtifactExecParameter_rev); }
	::Udm::AClassAssocAttr< ArtifactInfoProperty, Property> ImplementationArtifact::dstArtifactInfoProperty() const { return ::Udm::AClassAssocAttr< ArtifactInfoProperty, Property>(impl, meta_dstArtifactInfoProperty, meta_dstArtifactInfoProperty_rev); }
	::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact> ImplementationArtifact::dstArtifactDependency() const { return ::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact>(impl, meta_dstArtifactDependency, meta_dstArtifactDependency_rev); }
	::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact> ImplementationArtifact::srcArtifactDependency() const { return ::Udm::AClassAssocAttr< ArtifactDependency, ImplementationArtifact>(impl, meta_srcArtifactDependency, meta_srcArtifactDependency_rev); }
	::Udm::AssocAttr< ComponentServantArtifact> ImplementationArtifact::referedbyComponentServantArtifact() const { return ::Udm::AssocAttr< ComponentServantArtifact>(impl, meta_referedbyComponentServantArtifact); }
	::Udm::AssocAttr< ComponentImplementationArtifact> ImplementationArtifact::referedbyComponentImplemenationArtifact() const { return ::Udm::AssocAttr< ComponentImplementationArtifact>(impl, meta_referedbyComponentImplemenationArtifact); }
	::Udm::ParentAttr< ::CQML::Project> ImplementationArtifact::Project_parent() const { return ::Udm::ParentAttr< ::CQML::Project>(impl, meta_Project_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ImplementationArtifact::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ImplementationArtifact::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifact::Accept(Visitor &v) { v.Visit_ImplementationArtifact(*this); }

	::Uml::Class ImplementationArtifact::meta;
	::Uml::Attribute ImplementationArtifact::meta_artifactVersion;
	::Uml::Attribute ImplementationArtifact::meta_architecture;
	::Uml::Attribute ImplementationArtifact::meta_configuration;
	::Uml::Attribute ImplementationArtifact::meta_operatingSystem;
	::Uml::Attribute ImplementationArtifact::meta_location;
	::Uml::Attribute ImplementationArtifact::meta_UUID;
	::Uml::Attribute ImplementationArtifact::meta_label;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyExternalResources;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyImplementationArtifactReference;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependsOn;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependsOn_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDeployRequirement;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDeployRequirement_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactExecParameter;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactExecParameter_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactInfoProperty;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactInfoProperty_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependency;
	::Uml::AssociationRole ImplementationArtifact::meta_dstArtifactDependency_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_srcArtifactDependency;
	::Uml::AssociationRole ImplementationArtifact::meta_srcArtifactDependency_rev;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyComponentServantArtifact;
	::Uml::AssociationRole ImplementationArtifact::meta_referedbyComponentImplemenationArtifact;
	::Uml::CompositionParentRole ImplementationArtifact::meta_Project_parent;
	::Uml::CompositionParentRole ImplementationArtifact::meta_ArtifactContainer_parent;

	ArtifactDependency::ArtifactDependency() {}
	ArtifactDependency::ArtifactDependency(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ArtifactDependency::ArtifactDependency(const ArtifactDependency &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ArtifactDependency::ArtifactDependency(ArtifactDependency &&master) : MgaObject(master) {};

	ArtifactDependency ArtifactDependency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ArtifactDependency& ArtifactDependency::operator=(ArtifactDependency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ArtifactDependency ArtifactDependency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ArtifactDependency ArtifactDependency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ArtifactDependency ArtifactDependency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ArtifactDependency> ArtifactDependency::Instances() { return ::Udm::InstantiatedAttr< ArtifactDependency>(impl); }
	ArtifactDependency ArtifactDependency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ArtifactDependency> ArtifactDependency::Derived() { return ::Udm::DerivedAttr< ArtifactDependency>(impl); }
	::Udm::ArchetypeAttr< ArtifactDependency> ArtifactDependency::Archetype() const { return ::Udm::ArchetypeAttr< ArtifactDependency>(impl); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDependency::ArtifactContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_parent); }
	::Udm::ParentAttr< ::CQML::ArtifactContainer> ArtifactDependency::parent() const { return ::Udm::ParentAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactDependency::srcArtifactDependency_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_srcArtifactDependency_end_); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifact> ArtifactDependency::dstArtifactDependency_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifact>(impl, meta_dstArtifactDependency_end_); }
	void ArtifactDependency::Accept(Visitor &v) { v.Visit_ArtifactDependency(*this); }

	::Uml::Class ArtifactDependency::meta;
	::Uml::CompositionParentRole ArtifactDependency::meta_ArtifactContainer_parent;
	::Uml::AssociationRole ArtifactDependency::meta_srcArtifactDependency_end_;
	::Uml::AssociationRole ArtifactDependency::meta_dstArtifactDependency_end_;

	PackageConfBasePackage::PackageConfBasePackage() {}
	PackageConfBasePackage::PackageConfBasePackage(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfBasePackage::PackageConfBasePackage(const PackageConfBasePackage &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfBasePackage::PackageConfBasePackage(PackageConfBasePackage &&master) : MgaObject(master) {};

	PackageConfBasePackage PackageConfBasePackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfBasePackage& PackageConfBasePackage::operator=(PackageConfBasePackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfBasePackage PackageConfBasePackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfBasePackage PackageConfBasePackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfBasePackage PackageConfBasePackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfBasePackage> PackageConfBasePackage::Instances() { return ::Udm::InstantiatedAttr< PackageConfBasePackage>(impl); }
	PackageConfBasePackage PackageConfBasePackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfBasePackage> PackageConfBasePackage::Derived() { return ::Udm::DerivedAttr< PackageConfBasePackage>(impl); }
	::Udm::ArchetypeAttr< PackageConfBasePackage> PackageConfBasePackage::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfBasePackage>(impl); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfBasePackage::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfBasePackage::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PackageConfiguration> PackageConfBasePackage::srcPackageConfBasePackage_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfiguration>(impl, meta_srcPackageConfBasePackage_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackage> PackageConfBasePackage::dstPackageConfBasePackage_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackage>(impl, meta_dstPackageConfBasePackage_end_); }
	void PackageConfBasePackage::Accept(Visitor &v) { v.Visit_PackageConfBasePackage(*this); }

	::Uml::Class PackageConfBasePackage::meta;
	::Uml::CompositionParentRole PackageConfBasePackage::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfBasePackage::meta_srcPackageConfBasePackage_end_;
	::Uml::AssociationRole PackageConfBasePackage::meta_dstPackageConfBasePackage_end_;

	PackageConfReference::PackageConfReference() {}
	PackageConfReference::PackageConfReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfReference::PackageConfReference(const PackageConfReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfReference::PackageConfReference(PackageConfReference &&master) : MgaObject(master) {};

	PackageConfReference PackageConfReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfReference& PackageConfReference::operator=(PackageConfReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfReference PackageConfReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfReference PackageConfReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfReference PackageConfReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfReference> PackageConfReference::Instances() { return ::Udm::InstantiatedAttr< PackageConfReference>(impl); }
	PackageConfReference PackageConfReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfReference> PackageConfReference::Derived() { return ::Udm::DerivedAttr< PackageConfReference>(impl); }
	::Udm::ArchetypeAttr< PackageConfReference> PackageConfReference::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfReference>(impl); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfReference::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfReference::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PackageConfiguration> PackageConfReference::srcPackageConfReference_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfiguration>(impl, meta_srcPackageConfReference_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentPackageReference> PackageConfReference::dstPackageConfReference_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentPackageReference>(impl, meta_dstPackageConfReference_end_); }
	void PackageConfReference::Accept(Visitor &v) { v.Visit_PackageConfReference(*this); }

	::Uml::Class PackageConfReference::meta;
	::Uml::CompositionParentRole PackageConfReference::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfReference::meta_srcPackageConfReference_end_;
	::Uml::AssociationRole PackageConfReference::meta_dstPackageConfReference_end_;

	PackageConfigurationReference::PackageConfigurationReference() {}
	PackageConfigurationReference::PackageConfigurationReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigurationReference::PackageConfigurationReference(const PackageConfigurationReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigurationReference::PackageConfigurationReference(PackageConfigurationReference &&master) : MgaObject(master) {};

	PackageConfigurationReference PackageConfigurationReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurationReference& PackageConfigurationReference::operator=(PackageConfigurationReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurationReference PackageConfigurationReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurationReference PackageConfigurationReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurationReference PackageConfigurationReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurationReference> PackageConfigurationReference::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurationReference>(impl); }
	PackageConfigurationReference PackageConfigurationReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurationReference> PackageConfigurationReference::Derived() { return ::Udm::DerivedAttr< PackageConfigurationReference>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurationReference> PackageConfigurationReference::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurationReference>(impl); }
	::Udm::AClassPointerAttr< package, TopLevelPackage> PackageConfigurationReference::srcpackage() const { return ::Udm::AClassPointerAttr< package, TopLevelPackage>(impl, meta_srcpackage, meta_srcpackage_rev); }
	::Udm::PointerAttr< PackageConfiguration> PackageConfigurationReference::ref() const { return ::Udm::PointerAttr< PackageConfiguration>(impl, meta_ref); }
	::Udm::AClassAssocAttr< PackageConfSpecializedConfig, PackageConfiguration> PackageConfigurationReference::srcPackageConfSpecializedConfig() const { return ::Udm::AClassAssocAttr< PackageConfSpecializedConfig, PackageConfiguration>(impl, meta_srcPackageConfSpecializedConfig, meta_srcPackageConfSpecializedConfig_rev); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> PackageConfigurationReference::TopLevelPackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelPackageContainer> PackageConfigurationReference::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelPackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurationReference::Accept(Visitor &v) { v.Visit_PackageConfigurationReference(*this); }

	::Uml::Class PackageConfigurationReference::meta;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcpackage;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcpackage_rev;
	::Uml::AssociationRole PackageConfigurationReference::meta_ref;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;
	::Uml::AssociationRole PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev;
	::Uml::CompositionParentRole PackageConfigurationReference::meta_TopLevelPackageContainer_parent;

	PackageConfigurationContainer::PackageConfigurationContainer() {}
	PackageConfigurationContainer::PackageConfigurationContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfigurationContainer::PackageConfigurationContainer(const PackageConfigurationContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfigurationContainer::PackageConfigurationContainer(PackageConfigurationContainer &&master) : MgaObject(master) {};

	PackageConfigurationContainer PackageConfigurationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurationContainer& PackageConfigurationContainer::operator=(PackageConfigurationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurationContainer PackageConfigurationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurationContainer PackageConfigurationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurationContainer PackageConfigurationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurationContainer> PackageConfigurationContainer::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurationContainer>(impl); }
	PackageConfigurationContainer PackageConfigurationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurationContainer> PackageConfigurationContainer::Derived() { return ::Udm::DerivedAttr< PackageConfigurationContainer>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurationContainer> PackageConfigurationContainer::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurationContainer>(impl); }
	::Udm::ChildAttr< ::CQML::PackageConfBasePackage> PackageConfigurationContainer::PackageConfBasePackage_child() const { return ::Udm::ChildAttr< ::CQML::PackageConfBasePackage>(impl, meta_PackageConfBasePackage_child); }
	::Udm::ChildAttr< ::CQML::PackageConfReference> PackageConfigurationContainer::PackageConfReference_child() const { return ::Udm::ChildAttr< ::CQML::PackageConfReference>(impl, meta_PackageConfReference_child); }
	::Udm::ChildAttr< ::CQML::ComponentPackage> PackageConfigurationContainer::ComponentPackage_child() const { return ::Udm::ChildAttr< ::CQML::ComponentPackage>(impl, meta_ComponentPackage_child); }
	::Udm::ChildAttr< ::CQML::ComponentPackageReference> PackageConfigurationContainer::ComponentPackageReference_child() const { return ::Udm::ChildAttr< ::CQML::ComponentPackageReference>(impl, meta_ComponentPackageReference_child); }
	::Udm::ChildrenAttr< ::CQML::PackageConfConfigProperty> PackageConfigurationContainer::PackageConfConfigProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfConfigProperty>(impl, meta_PackageConfConfigProperty_children); }
	::Udm::ChildrenAttr< ::CQML::PackageConfSelectRequirement> PackageConfigurationContainer::PackageConfSelectRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfSelectRequirement>(impl, meta_PackageConfSelectRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::Requirement> PackageConfigurationContainer::Requirement_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::CQML::Property> PackageConfigurationContainer::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildAttr< ::CQML::PackageConfSpecializedConfig> PackageConfigurationContainer::PackageConfSpecializedConfig_child() const { return ::Udm::ChildAttr< ::CQML::PackageConfSpecializedConfig>(impl, meta_PackageConfSpecializedConfig_child); }
	::Udm::ChildrenAttr< ::CQML::PackageConfiguration> PackageConfigurationContainer::PackageConfiguration_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfiguration>(impl, meta_PackageConfiguration_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PackageConfigurationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Requirement> PackageConfigurationContainer::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementBase> PackageConfigurationContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ECRequirements> PackageConfigurationContainer::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RTRequirements> PackageConfigurationContainer::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> PackageConfigurationContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackage> PackageConfigurationContainer::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackageReference> PackageConfigurationContainer::ComponentPackageReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackageReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfBasePackage> PackageConfigurationContainer::PackageConfBasePackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfBasePackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfReference> PackageConfigurationContainer::PackageConfReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfConfigProperty> PackageConfigurationContainer::PackageConfConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfSelectRequirement> PackageConfigurationContainer::PackageConfSelectRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfSelectRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfSpecializedConfig> PackageConfigurationContainer::PackageConfSpecializedConfig_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfSpecializedConfig>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfiguration> PackageConfigurationContainer::PackageConfiguration_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfiguration>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::PackageConfigurations> PackageConfigurationContainer::PackageConfigurations_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurations>(impl, meta_PackageConfigurations_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurations> PackageConfigurationContainer::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurations>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurationContainer::Accept(Visitor &v) { v.Visit_PackageConfigurationContainer(*this); }

	::Uml::Class PackageConfigurationContainer::meta;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfBasePackage_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfReference_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_ComponentPackage_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_ComponentPackageReference_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfConfigProperty_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfSelectRequirement_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_Requirement_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_Property_children;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child;
	::Uml::CompositionChildRole PackageConfigurationContainer::meta_PackageConfiguration_children;
	::Uml::CompositionParentRole PackageConfigurationContainer::meta_PackageConfigurations_parent;

	PackageConfConfigProperty::PackageConfConfigProperty() {}
	PackageConfConfigProperty::PackageConfConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfConfigProperty::PackageConfConfigProperty(const PackageConfConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfConfigProperty::PackageConfConfigProperty(PackageConfConfigProperty &&master) : MgaObject(master) {};

	PackageConfConfigProperty PackageConfConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfConfigProperty& PackageConfConfigProperty::operator=(PackageConfConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfConfigProperty PackageConfConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfConfigProperty PackageConfConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfConfigProperty PackageConfConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfConfigProperty> PackageConfConfigProperty::Instances() { return ::Udm::InstantiatedAttr< PackageConfConfigProperty>(impl); }
	PackageConfConfigProperty PackageConfConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfConfigProperty> PackageConfConfigProperty::Derived() { return ::Udm::DerivedAttr< PackageConfConfigProperty>(impl); }
	::Udm::ArchetypeAttr< PackageConfConfigProperty> PackageConfConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfConfigProperty>(impl); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfConfigProperty::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfConfigProperty::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PackageConfiguration> PackageConfConfigProperty::srcPackageConfConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfiguration>(impl, meta_srcPackageConfConfigProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> PackageConfConfigProperty::dstPackageConfConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstPackageConfConfigProperty_end_); }
	void PackageConfConfigProperty::Accept(Visitor &v) { v.Visit_PackageConfConfigProperty(*this); }

	::Uml::Class PackageConfConfigProperty::meta;
	::Uml::CompositionParentRole PackageConfConfigProperty::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_;
	::Uml::AssociationRole PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_;

	PackageConfSelectRequirement::PackageConfSelectRequirement() {}
	PackageConfSelectRequirement::PackageConfSelectRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfSelectRequirement::PackageConfSelectRequirement(const PackageConfSelectRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfSelectRequirement::PackageConfSelectRequirement(PackageConfSelectRequirement &&master) : MgaObject(master) {};

	PackageConfSelectRequirement PackageConfSelectRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfSelectRequirement& PackageConfSelectRequirement::operator=(PackageConfSelectRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfSelectRequirement PackageConfSelectRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfSelectRequirement PackageConfSelectRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfSelectRequirement PackageConfSelectRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Instances() { return ::Udm::InstantiatedAttr< PackageConfSelectRequirement>(impl); }
	PackageConfSelectRequirement PackageConfSelectRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Derived() { return ::Udm::DerivedAttr< PackageConfSelectRequirement>(impl); }
	::Udm::ArchetypeAttr< PackageConfSelectRequirement> PackageConfSelectRequirement::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfSelectRequirement>(impl); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfSelectRequirement::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfSelectRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PackageConfiguration> PackageConfSelectRequirement::srcPackageConfSelectRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfiguration>(impl, meta_srcPackageConfSelectRequirement_end_); }
	::Udm::AssocEndAttr< ::CQML::Requirement> PackageConfSelectRequirement::dstPackageConfSelectRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::Requirement>(impl, meta_dstPackageConfSelectRequirement_end_); }
	void PackageConfSelectRequirement::Accept(Visitor &v) { v.Visit_PackageConfSelectRequirement(*this); }

	::Uml::Class PackageConfSelectRequirement::meta;
	::Uml::CompositionParentRole PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_;
	::Uml::AssociationRole PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_;

	PackageConfSpecializedConfig::PackageConfSpecializedConfig() {}
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(const PackageConfSpecializedConfig &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfSpecializedConfig::PackageConfSpecializedConfig(PackageConfSpecializedConfig &&master) : MgaObject(master) {};

	PackageConfSpecializedConfig PackageConfSpecializedConfig::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfSpecializedConfig& PackageConfSpecializedConfig::operator=(PackageConfSpecializedConfig &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfSpecializedConfig PackageConfSpecializedConfig::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Instances() { return ::Udm::InstantiatedAttr< PackageConfSpecializedConfig>(impl); }
	PackageConfSpecializedConfig PackageConfSpecializedConfig::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Derived() { return ::Udm::DerivedAttr< PackageConfSpecializedConfig>(impl); }
	::Udm::ArchetypeAttr< PackageConfSpecializedConfig> PackageConfSpecializedConfig::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfSpecializedConfig>(impl); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfSpecializedConfig::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfSpecializedConfig::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PackageConfiguration> PackageConfSpecializedConfig::srcPackageConfSpecializedConfig_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfiguration>(impl, meta_srcPackageConfSpecializedConfig_end_); }
	::Udm::AssocEndAttr< ::CQML::PackageConfigurationReference> PackageConfSpecializedConfig::dstPackageConfSpecializedConfig_end() const { return ::Udm::AssocEndAttr< ::CQML::PackageConfigurationReference>(impl, meta_dstPackageConfSpecializedConfig_end_); }
	void PackageConfSpecializedConfig::Accept(Visitor &v) { v.Visit_PackageConfSpecializedConfig(*this); }

	::Uml::Class PackageConfSpecializedConfig::meta;
	::Uml::CompositionParentRole PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent;
	::Uml::AssociationRole PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_;
	::Uml::AssociationRole PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_;

	PackageConfiguration::PackageConfiguration() {}
	PackageConfiguration::PackageConfiguration(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PackageConfiguration::PackageConfiguration(const PackageConfiguration &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PackageConfiguration::PackageConfiguration(PackageConfiguration &&master) : MgaObject(master) {};

	PackageConfiguration PackageConfiguration::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfiguration& PackageConfiguration::operator=(PackageConfiguration &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfiguration PackageConfiguration::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfiguration PackageConfiguration::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfiguration PackageConfiguration::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfiguration> PackageConfiguration::Instances() { return ::Udm::InstantiatedAttr< PackageConfiguration>(impl); }
	PackageConfiguration PackageConfiguration::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfiguration> PackageConfiguration::Derived() { return ::Udm::DerivedAttr< PackageConfiguration>(impl); }
	::Udm::ArchetypeAttr< PackageConfiguration> PackageConfiguration::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfiguration>(impl); }
	::Udm::StringAttr PackageConfiguration::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr PackageConfiguration::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AssocAttr< PackageConfigurationReference> PackageConfiguration::referedbyPackageConfigurationReference() const { return ::Udm::AssocAttr< PackageConfigurationReference>(impl, meta_referedbyPackageConfigurationReference); }
	::Udm::AClassPointerAttr< PackageConfBasePackage, ComponentPackage> PackageConfiguration::dstPackageConfBasePackage() const { return ::Udm::AClassPointerAttr< PackageConfBasePackage, ComponentPackage>(impl, meta_dstPackageConfBasePackage, meta_dstPackageConfBasePackage_rev); }
	::Udm::AClassPointerAttr< PackageConfReference, ComponentPackageReference> PackageConfiguration::dstPackageConfReference() const { return ::Udm::AClassPointerAttr< PackageConfReference, ComponentPackageReference>(impl, meta_dstPackageConfReference, meta_dstPackageConfReference_rev); }
	::Udm::AClassAssocAttr< PackageConfSelectRequirement, Requirement> PackageConfiguration::dstPackageConfSelectRequirement() const { return ::Udm::AClassAssocAttr< PackageConfSelectRequirement, Requirement>(impl, meta_dstPackageConfSelectRequirement, meta_dstPackageConfSelectRequirement_rev); }
	::Udm::AClassAssocAttr< PackageConfConfigProperty, Property> PackageConfiguration::dstPackageConfConfigProperty() const { return ::Udm::AClassAssocAttr< PackageConfConfigProperty, Property>(impl, meta_dstPackageConfConfigProperty, meta_dstPackageConfConfigProperty_rev); }
	::Udm::AClassPointerAttr< PackageConfSpecializedConfig, PackageConfigurationReference> PackageConfiguration::dstPackageConfSpecializedConfig() const { return ::Udm::AClassPointerAttr< PackageConfSpecializedConfig, PackageConfigurationReference>(impl, meta_dstPackageConfSpecializedConfig, meta_dstPackageConfSpecializedConfig_rev); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfiguration::PackageConfigurationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageConfigurationContainer> PackageConfiguration::parent() const { return ::Udm::ParentAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfiguration::Accept(Visitor &v) { v.Visit_PackageConfiguration(*this); }

	::Uml::Class PackageConfiguration::meta;
	::Uml::Attribute PackageConfiguration::meta_label;
	::Uml::Attribute PackageConfiguration::meta_UUID;
	::Uml::AssociationRole PackageConfiguration::meta_referedbyPackageConfigurationReference;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfBasePackage;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfBasePackage_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfReference;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfReference_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSelectRequirement;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSelectRequirement_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfConfigProperty;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfConfigProperty_rev;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSpecializedConfig;
	::Uml::AssociationRole PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev;
	::Uml::CompositionParentRole PackageConfiguration::meta_PackageConfigurationContainer_parent;

	ImplementationCapability::ImplementationCapability() {}
	ImplementationCapability::ImplementationCapability(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationCapability::ImplementationCapability(const ImplementationCapability &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationCapability::ImplementationCapability(ImplementationCapability &&master) : MgaObject(master) {};

	ImplementationCapability ImplementationCapability::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationCapability& ImplementationCapability::operator=(ImplementationCapability &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationCapability ImplementationCapability::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationCapability ImplementationCapability::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationCapability ImplementationCapability::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationCapability> ImplementationCapability::Instances() { return ::Udm::InstantiatedAttr< ImplementationCapability>(impl); }
	ImplementationCapability ImplementationCapability::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationCapability> ImplementationCapability::Derived() { return ::Udm::DerivedAttr< ImplementationCapability>(impl); }
	::Udm::ArchetypeAttr< ImplementationCapability> ImplementationCapability::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationCapability>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationCapability::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationCapability::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentImplementation> ImplementationCapability::srcImplementationCapability_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentImplementation>(impl, meta_srcImplementationCapability_end_); }
	::Udm::AssocEndAttr< ::CQML::Capability> ImplementationCapability::dstImplementationCapability_end() const { return ::Udm::AssocEndAttr< ::CQML::Capability>(impl, meta_dstImplementationCapability_end_); }
	void ImplementationCapability::Accept(Visitor &v) { v.Visit_ImplementationCapability(*this); }

	::Uml::Class ImplementationCapability::meta;
	::Uml::CompositionParentRole ImplementationCapability::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole ImplementationCapability::meta_srcImplementationCapability_end_;
	::Uml::AssociationRole ImplementationCapability::meta_dstImplementationCapability_end_;

	ImplementationDependsOn::ImplementationDependsOn() {}
	ImplementationDependsOn::ImplementationDependsOn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationDependsOn::ImplementationDependsOn(const ImplementationDependsOn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationDependsOn::ImplementationDependsOn(ImplementationDependsOn &&master) : MgaObject(master) {};

	ImplementationDependsOn ImplementationDependsOn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationDependsOn& ImplementationDependsOn::operator=(ImplementationDependsOn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationDependsOn ImplementationDependsOn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationDependsOn ImplementationDependsOn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationDependsOn ImplementationDependsOn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationDependsOn> ImplementationDependsOn::Instances() { return ::Udm::InstantiatedAttr< ImplementationDependsOn>(impl); }
	ImplementationDependsOn ImplementationDependsOn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationDependsOn> ImplementationDependsOn::Derived() { return ::Udm::DerivedAttr< ImplementationDependsOn>(impl); }
	::Udm::ArchetypeAttr< ImplementationDependsOn> ImplementationDependsOn::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationDependsOn>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationDependsOn::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ImplementationDependsOn::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentImplementation> ImplementationDependsOn::srcImplementationDependsOn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentImplementation>(impl, meta_srcImplementationDependsOn_end_); }
	::Udm::AssocEndAttr< ::CQML::ImplementationDependency> ImplementationDependsOn::dstImplementationDependsOn_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationDependency>(impl, meta_dstImplementationDependsOn_end_); }
	void ImplementationDependsOn::Accept(Visitor &v) { v.Visit_ImplementationDependsOn(*this); }

	::Uml::Class ImplementationDependsOn::meta;
	::Uml::CompositionParentRole ImplementationDependsOn::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole ImplementationDependsOn::meta_srcImplementationDependsOn_end_;
	::Uml::AssociationRole ImplementationDependsOn::meta_dstImplementationDependsOn_end_;

	Implements::Implements() {}
	Implements::Implements(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implements::Implements(const Implements &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implements::Implements(Implements &&master) : MgaObject(master) {};

	Implements Implements::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implements& Implements::operator=(Implements &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implements Implements::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implements Implements::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implements Implements::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implements> Implements::Instances() { return ::Udm::InstantiatedAttr< Implements>(impl); }
	Implements Implements::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implements> Implements::Derived() { return ::Udm::DerivedAttr< Implements>(impl); }
	::Udm::ArchetypeAttr< Implements> Implements::Archetype() const { return ::Udm::ArchetypeAttr< Implements>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> Implements::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> Implements::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentImplementation> Implements::srcImplements_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentImplementation>(impl, meta_srcImplements_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> Implements::dstImplements_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_dstImplements_end_); }
	void Implements::Accept(Visitor &v) { v.Visit_Implements(*this); }

	::Uml::Class Implements::meta;
	::Uml::CompositionParentRole Implements::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole Implements::meta_srcImplements_end_;
	::Uml::AssociationRole Implements::meta_dstImplements_end_;

	ComponentImplementationReference::ComponentImplementationReference() {}
	ComponentImplementationReference::ComponentImplementationReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentImplementationReference::ComponentImplementationReference(const ComponentImplementationReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationReference::ComponentImplementationReference(ComponentImplementationReference &&master) : MgaObject(master) {};

	ComponentImplementationReference ComponentImplementationReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationReference& ComponentImplementationReference::operator=(ComponentImplementationReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationReference ComponentImplementationReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationReference ComponentImplementationReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationReference ComponentImplementationReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationReference> ComponentImplementationReference::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationReference>(impl); }
	ComponentImplementationReference ComponentImplementationReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationReference> ComponentImplementationReference::Derived() { return ::Udm::DerivedAttr< ComponentImplementationReference>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationReference> ComponentImplementationReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationReference>(impl); }
	::Udm::AClassAssocAttr< Implementation, ComponentPackage> ComponentImplementationReference::srcImplementation() const { return ::Udm::AClassAssocAttr< Implementation, ComponentPackage>(impl, meta_srcImplementation, meta_srcImplementation_rev); }
	::Udm::PointerAttr< ComponentImplementation> ComponentImplementationReference::ref() const { return ::Udm::PointerAttr< ComponentImplementation>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::PackageContainer> ComponentImplementationReference::PackageContainer_parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_parent); }
	::Udm::ParentAttr< ::CQML::PackageContainer> ComponentImplementationReference::parent() const { return ::Udm::ParentAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationReference::Accept(Visitor &v) { v.Visit_ComponentImplementationReference(*this); }

	::Uml::Class ComponentImplementationReference::meta;
	::Uml::AssociationRole ComponentImplementationReference::meta_srcImplementation;
	::Uml::AssociationRole ComponentImplementationReference::meta_srcImplementation_rev;
	::Uml::AssociationRole ComponentImplementationReference::meta_ref;
	::Uml::CompositionParentRole ComponentImplementationReference::meta_PackageContainer_parent;

	ComponentImplementation::ComponentImplementation() {}
	ComponentImplementation::ComponentImplementation(::Udm::ObjectImpl *impl) : Implemenation(impl), MgaObject(impl) {}
	ComponentImplementation::ComponentImplementation(const ComponentImplementation &master) : Implemenation(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentImplementation::ComponentImplementation(ComponentImplementation &&master) : Implemenation(master), MgaObject(master) {};

	ComponentImplementation ComponentImplementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementation& ComponentImplementation::operator=(ComponentImplementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementation ComponentImplementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementation ComponentImplementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementation ComponentImplementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementation> ComponentImplementation::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementation>(impl); }
	ComponentImplementation ComponentImplementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementation> ComponentImplementation::Derived() { return ::Udm::DerivedAttr< ComponentImplementation>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementation> ComponentImplementation::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementation>(impl); }
	::Udm::AssocAttr< ComponentImplementationReference> ComponentImplementation::referedbyComponentImplementationReference() const { return ::Udm::AssocAttr< ComponentImplementationReference>(impl, meta_referedbyComponentImplementationReference); }
	::Udm::AClassAssocAttr< ImplementationCapability, Capability> ComponentImplementation::dstImplementationCapability() const { return ::Udm::AClassAssocAttr< ImplementationCapability, Capability>(impl, meta_dstImplementationCapability, meta_dstImplementationCapability_rev); }
	::Udm::AClassAssocAttr< ImplementationDependsOn, ImplementationDependency> ComponentImplementation::dstImplementationDependsOn() const { return ::Udm::AClassAssocAttr< ImplementationDependsOn, ImplementationDependency>(impl, meta_dstImplementationDependsOn, meta_dstImplementationDependsOn_rev); }
	::Udm::AClassPointerAttr< Implements, ComponentRef> ComponentImplementation::dstImplements() const { return ::Udm::AClassPointerAttr< Implements, ComponentRef>(impl, meta_dstImplements, meta_dstImplements_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ComponentImplementation::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentImplementation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentImplementation::meta;
	::Uml::AssociationRole ComponentImplementation::meta_referedbyComponentImplementationReference;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationCapability;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationCapability_rev;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationDependsOn;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplementationDependsOn_rev;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplements;
	::Uml::AssociationRole ComponentImplementation::meta_dstImplements_rev;
	::Uml::CompositionParentRole ComponentImplementation::meta_ComponentImplementationContainer_parent;

	Implemenation::Implemenation() {}
	Implemenation::Implemenation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Implemenation::Implemenation(const Implemenation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Implemenation::Implemenation(Implemenation &&master) : MgaObject(master) {};

	Implemenation Implemenation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Implemenation& Implemenation::operator=(Implemenation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Implemenation Implemenation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Implemenation Implemenation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Implemenation Implemenation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Implemenation> Implemenation::Instances() { return ::Udm::InstantiatedAttr< Implemenation>(impl); }
	Implemenation Implemenation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Implemenation> Implemenation::Derived() { return ::Udm::DerivedAttr< Implemenation>(impl); }
	::Udm::ArchetypeAttr< Implemenation> Implemenation::Archetype() const { return ::Udm::ArchetypeAttr< Implemenation>(impl); }
	::Udm::StringAttr Implemenation::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr Implemenation::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AClassAssocAttr< ConfigProperty, Property> Implemenation::dstConfigProperty() const { return ::Udm::AClassAssocAttr< ConfigProperty, Property>(impl, meta_dstConfigProperty, meta_dstConfigProperty_rev); }
	::Udm::AClassAssocAttr< InfoProperty, Property> Implemenation::dstInfoProperty() const { return ::Udm::AClassAssocAttr< InfoProperty, Property>(impl, meta_dstInfoProperty, meta_dstInfoProperty_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> Implemenation::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Implemenation::meta;
	::Uml::Attribute Implemenation::meta_label;
	::Uml::Attribute Implemenation::meta_UUID;
	::Uml::AssociationRole Implemenation::meta_dstConfigProperty;
	::Uml::AssociationRole Implemenation::meta_dstConfigProperty_rev;
	::Uml::AssociationRole Implemenation::meta_dstInfoProperty;
	::Uml::AssociationRole Implemenation::meta_dstInfoProperty_rev;

	ComponentAssembly::ComponentAssembly() {}
	ComponentAssembly::ComponentAssembly(::Udm::ObjectImpl *impl) : ComponentImplementation(impl),ComponentAssemblyBase(impl), MgaObject(impl), Implemenation(impl) {}
	ComponentAssembly::ComponentAssembly(const ComponentAssembly &master) : ComponentImplementation(master),ComponentAssemblyBase(master), MgaObject(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	ComponentAssembly::ComponentAssembly(ComponentAssembly &&master) : ComponentImplementation(master),ComponentAssemblyBase(master), MgaObject(master), Implemenation(master) {};

	ComponentAssembly ComponentAssembly::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssembly& ComponentAssembly::operator=(ComponentAssembly &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssembly ComponentAssembly::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssembly ComponentAssembly::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssembly ComponentAssembly::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssembly> ComponentAssembly::Instances() { return ::Udm::InstantiatedAttr< ComponentAssembly>(impl); }
	ComponentAssembly ComponentAssembly::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssembly> ComponentAssembly::Derived() { return ::Udm::DerivedAttr< ComponentAssembly>(impl); }
	::Udm::ArchetypeAttr< ComponentAssembly> ComponentAssembly::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssembly>(impl); }
	::Udm::AClassPointerAttr< CriticalPath, PathReference> ComponentAssembly::dstCriticalPath() const { return ::Udm::AClassPointerAttr< CriticalPath, PathReference>(impl, meta_dstCriticalPath, meta_dstCriticalPath_rev); }
	::Udm::AssocAttr< ComponentAssemblyReference> ComponentAssembly::referedbyComponentAssemblyReference() const { return ::Udm::AssocAttr< ComponentAssemblyReference>(impl, meta_referedbyComponentAssemblyReference); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackage> ComponentAssembly::ComponentPackage_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackage>(impl, meta_ComponentPackage_children); }
	::Udm::ChildrenAttr< ::CQML::Property> ComponentAssembly::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackageReference> ComponentAssembly::ComponentPackageReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackageReference>(impl, meta_ComponentPackageReference_children); }
	::Udm::ChildrenAttr< ::CQML::Requirement> ComponentAssembly::Requirement_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, meta_Requirement_children); }
	::Udm::ChildrenAttr< ::CQML::Component> ComponentAssembly::Component_children() const { return ::Udm::ChildrenAttr< ::CQML::Component>(impl, meta_Component_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssembly> ComponentAssembly::ComponentAssembly_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_children); }
	::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort> ComponentAssembly::ProvidedRequestPort_children() const { return ::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort>(impl, meta_ProvidedRequestPort_children); }
	::Udm::ChildrenAttr< ::CQML::RequiredRequestPort> ComponentAssembly::RequiredRequestPort_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRequestPort>(impl, meta_RequiredRequestPort_children); }
	::Udm::ChildrenAttr< ::CQML::InEventPort> ComponentAssembly::InEventPort_children() const { return ::Udm::ChildrenAttr< ::CQML::InEventPort>(impl, meta_InEventPort_children); }
	::Udm::ChildrenAttr< ::CQML::OutEventPort> ComponentAssembly::OutEventPort_children() const { return ::Udm::ChildrenAttr< ::CQML::OutEventPort>(impl, meta_OutEventPort_children); }
	::Udm::ChildrenAttr< ::CQML::emit> ComponentAssembly::emit_children() const { return ::Udm::ChildrenAttr< ::CQML::emit>(impl, meta_emit_children); }
	::Udm::ChildrenAttr< ::CQML::EventSourceDelegate> ComponentAssembly::EventSourceDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourceDelegate>(impl, meta_EventSourceDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::EventSinkDelegate> ComponentAssembly::EventSinkDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSinkDelegate>(impl, meta_EventSinkDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::deliverTo> ComponentAssembly::deliverTo_children() const { return ::Udm::ChildrenAttr< ::CQML::deliverTo>(impl, meta_deliverTo_children); }
	::Udm::ChildrenAttr< ::CQML::publish> ComponentAssembly::publish_children() const { return ::Udm::ChildrenAttr< ::CQML::publish>(impl, meta_publish_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> ComponentAssembly::ComponentAssemblyReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, meta_ComponentAssemblyReference_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> ComponentAssembly::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::CQML::AssemblyselectRequirement> ComponentAssembly::AssemblyselectRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyselectRequirement>(impl, meta_AssemblyselectRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeValue> ComponentAssembly::AttributeValue_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeValue>(impl, meta_AttributeValue_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeDelegate> ComponentAssembly::AttributeDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeDelegate>(impl, meta_AttributeDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeMappingValue> ComponentAssembly::AttributeMappingValue_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMappingValue>(impl, meta_AttributeMappingValue_children); }
	::Udm::ChildrenAttr< ::CQML::AssemblyConfigProperty> ComponentAssembly::AssemblyConfigProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyConfigProperty>(impl, meta_AssemblyConfigProperty_children); }
	::Udm::ChildrenAttr< ::CQML::FacetDelegate> ComponentAssembly::FacetDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::FacetDelegate>(impl, meta_FacetDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::invoke> ComponentAssembly::invoke_children() const { return ::Udm::ChildrenAttr< ::CQML::invoke>(impl, meta_invoke_children); }
	::Udm::ChildrenAttr< ::CQML::ReceptacleDelegate> ComponentAssembly::ReceptacleDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::ReceptacleDelegate>(impl, meta_ReceptacleDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeMappingDelegate> ComponentAssembly::AttributeMappingDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMappingDelegate>(impl, meta_AttributeMappingDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::ExternalDelegate> ComponentAssembly::ExternalDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalDelegate>(impl, meta_ExternalDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeMapping> ComponentAssembly::AttributeMapping_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMapping>(impl, meta_AttributeMapping_children); }
	::Udm::ChildrenAttr< ::CQML::PublishConnector> ComponentAssembly::PublishConnector_children() const { return ::Udm::ChildrenAttr< ::CQML::PublishConnector>(impl, meta_PublishConnector_children); }
	::Udm::ChildrenAttr< ::CQML::ExternalPortReference> ComponentAssembly::ExternalPortReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalPortReference>(impl, meta_ExternalPortReference_children); }
	::Udm::ChildrenAttr< ::CQML::SupportsDelegate> ComponentAssembly::SupportsDelegate_children() const { return ::Udm::ChildrenAttr< ::CQML::SupportsDelegate>(impl, meta_SupportsDelegate_children); }
	::Udm::ChildrenAttr< ::CQML::AssemblyDeployRequirement> ComponentAssembly::AssemblyDeployRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyDeployRequirement>(impl, meta_AssemblyDeployRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::QoSConnector> ComponentAssembly::QoSConnector_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSConnector>(impl, meta_QoSConnector_children); }
	::Udm::ChildrenAttr< ::CQML::PortQoS> ComponentAssembly::PortQoS_children() const { return ::Udm::ChildrenAttr< ::CQML::PortQoS>(impl, meta_PortQoS_children); }
	::Udm::ChildrenAttr< ::CQML::QoSReq> ComponentAssembly::QoSReq_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSReq>(impl, meta_QoSReq_children); }
	::Udm::ChildrenAttr< ::CQML::RecepInvoke> ComponentAssembly::RecepInvoke_children() const { return ::Udm::ChildrenAttr< ::CQML::RecepInvoke>(impl, meta_RecepInvoke_children); }
	::Udm::ChildrenAttr< ::CQML::FacetInvoke> ComponentAssembly::FacetInvoke_children() const { return ::Udm::ChildrenAttr< ::CQML::FacetInvoke>(impl, meta_FacetInvoke_children); }
	::Udm::ChildrenAttr< ::CQML::EventSourcePublish> ComponentAssembly::EventSourcePublish_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourcePublish>(impl, meta_EventSourcePublish_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentQoS> ComponentAssembly::ComponentQoS_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentQoS>(impl, meta_ComponentQoS_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS> ComponentAssembly::ComponentAssemblyQoS_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS>(impl, meta_ComponentAssemblyQoS_children); }
	::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase> ComponentAssembly::QoSCharacteristicBase_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase>(impl, meta_QoSCharacteristicBase_children); }
	::Udm::ChildrenAttr< ::CQML::EventSinkPublish> ComponentAssembly::EventSinkPublish_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSinkPublish>(impl, meta_EventSinkPublish_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentAssembly::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> ComponentAssembly::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> ComponentAssembly::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NamedType> ComponentAssembly::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Component> ComponentAssembly::Component_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Component>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SupportsInterfaces> ComponentAssembly::SupportsInterfaces_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SupportsInterfaces>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InvokePortBase> ComponentAssembly::InvokePortBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InvokePortBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> ComponentAssembly::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TopLevelBehavior> ComponentAssembly::TopLevelBehavior_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> ComponentAssembly::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutEventPort> ComponentAssembly::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Port> ComponentAssembly::Port_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SingleOutputBase> ComponentAssembly::SingleOutputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SingleOutputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort> ComponentAssembly::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultiInputBase> ComponentAssembly::MultiInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRequestPort> ComponentAssembly::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultiOutputBase> ComponentAssembly::MultiOutputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiOutputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InEventPort> ComponentAssembly::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SingleInputBase> ComponentAssembly::SingleInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SingleInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QueryInputBase> ComponentAssembly::QueryInputBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryInputBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CommonPortAttrs> ComponentAssembly::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GraphVertex> ComponentAssembly::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> ComponentAssembly::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> ComponentAssembly::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> ComponentAssembly::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Requirement> ComponentAssembly::Requirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Requirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementBase> ComponentAssembly::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ECRequirements> ComponentAssembly::ECRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ECRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RTRequirements> ComponentAssembly::RTRequirements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RTRequirements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> ComponentAssembly::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackage> ComponentAssembly::ComponentPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackageReference> ComponentAssembly::ComponentPackageReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackageReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementation> ComponentAssembly::ComponentImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Implemenation> ComponentAssembly::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssembly> ComponentAssembly::ComponentAssembly_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::invoke> ComponentAssembly::invoke_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::invoke>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyselectRequirement> ComponentAssembly::AssemblyselectRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyselectRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyConfigProperty> ComponentAssembly::AssemblyConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PublishConnector> ComponentAssembly::PublishConnector_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PublishConnector>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::publish> ComponentAssembly::publish_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::publish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::deliverTo> ComponentAssembly::deliverTo_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::deliverTo>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyDeployRequirement> ComponentAssembly::AssemblyDeployRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyDeployRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::emit> ComponentAssembly::emit_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::emit>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ReceptacleDelegate> ComponentAssembly::ReceptacleDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ReceptacleDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FacetDelegate> ComponentAssembly::FacetDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FacetDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSourceDelegate> ComponentAssembly::EventSourceDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourceDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSinkDelegate> ComponentAssembly::EventSinkDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSinkDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExternalDelegate> ComponentAssembly::ExternalDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeValue> ComponentAssembly::AttributeValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeDelegate> ComponentAssembly::AttributeDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeMapping> ComponentAssembly::AttributeMapping_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMapping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeMappingValue> ComponentAssembly::AttributeMappingValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMappingValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeMappingDelegate> ComponentAssembly::AttributeMappingDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeMappingDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SupportsDelegate> ComponentAssembly::SupportsDelegate_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SupportsDelegate>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> ComponentAssembly::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyBase> ComponentAssembly::ComponentAssemblyBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExternalPortReference> ComponentAssembly::ExternalPortReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalPortReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BehaviorModel> ComponentAssembly::BehaviorModel_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic> ComponentAssembly::ComponentAssemblyQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase> ComponentAssembly::QoSCharacteristicBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSCharRef> ComponentAssembly::QoSCharRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblySecurityQoS> ComponentAssembly::ComponentAssemblySecurityQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblySecurityQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FailOverUnit> ComponentAssembly::FailOverUnit_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FailOverUnit>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConnectionQoSCharacteristic> ComponentAssembly::ConnectionQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConnectionQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CIAOEvents> ComponentAssembly::CIAOEvents_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NetQoS> ComponentAssembly::NetQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NetQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RecepInvoke> ComponentAssembly::RecepInvoke_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RecepInvoke>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS> ComponentAssembly::ComponentAssemblyQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentQoSCharacteristic> ComponentAssembly::ComponentQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic> ComponentAssembly::PortQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortQoS> ComponentAssembly::PortQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FacetInvoke> ComponentAssembly::FacetInvoke_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FacetInvoke>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSReq> ComponentAssembly::QoSReq_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSReq>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSourcePublish> ComponentAssembly::EventSourcePublish_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourcePublish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentQoS> ComponentAssembly::ComponentQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSinkPublish> ComponentAssembly::EventSinkPublish_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSinkPublish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSConnector> ComponentAssembly::QoSConnector_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSConnector>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentSecurityQoS> ComponentAssembly::ComponentSecurityQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentSecurityQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RealTimeConfiguration> ComponentAssembly::RealTimeConfiguration_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortSecurityQoS> ComponentAssembly::PortSecurityQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortSecurityQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentAssembly::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssembly::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAssembly::Accept(Visitor &v) { v.Visit_ComponentAssembly(*this); }

	::Uml::Class ComponentAssembly::meta;
	::Uml::AssociationRole ComponentAssembly::meta_dstCriticalPath;
	::Uml::AssociationRole ComponentAssembly::meta_dstCriticalPath_rev;
	::Uml::AssociationRole ComponentAssembly::meta_referedbyComponentAssemblyReference;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentPackage_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Property_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentPackageReference_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Requirement_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_Component_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentAssembly_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ProvidedRequestPort_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_RequiredRequestPort_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_InEventPort_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_OutEventPort_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_emit_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSourceDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSinkDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_deliverTo_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_publish_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentAssemblyReference_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentRef_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AssemblyselectRequirement_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeValue_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMappingValue_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AssemblyConfigProperty_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_FacetDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_invoke_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ReceptacleDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMappingDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExternalDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AttributeMapping_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_PublishConnector_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ExternalPortReference_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_SupportsDelegate_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_AssemblyDeployRequirement_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_QoSConnector_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_PortQoS_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_QoSReq_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_RecepInvoke_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_FacetInvoke_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSourcePublish_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentQoS_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_ComponentAssemblyQoS_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_QoSCharacteristicBase_children;
	::Uml::CompositionChildRole ComponentAssembly::meta_EventSinkPublish_children;
	::Uml::CompositionParentRole ComponentAssembly::meta_ComponentAssembly_parent;

	MonolithicImplementation::MonolithicImplementation() {}
	MonolithicImplementation::MonolithicImplementation(::Udm::ObjectImpl *impl) : ComponentImplementation(impl),MonolithicImplementationBase(impl), MgaObject(impl), Implemenation(impl) {}
	MonolithicImplementation::MonolithicImplementation(const MonolithicImplementation &master) : ComponentImplementation(master),MonolithicImplementationBase(master), MgaObject(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	MonolithicImplementation::MonolithicImplementation(MonolithicImplementation &&master) : ComponentImplementation(master),MonolithicImplementationBase(master), MgaObject(master), Implemenation(master) {};

	MonolithicImplementation MonolithicImplementation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithicImplementation& MonolithicImplementation::operator=(MonolithicImplementation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithicImplementation MonolithicImplementation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithicImplementation MonolithicImplementation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithicImplementation MonolithicImplementation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithicImplementation> MonolithicImplementation::Instances() { return ::Udm::InstantiatedAttr< MonolithicImplementation>(impl); }
	MonolithicImplementation MonolithicImplementation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithicImplementation> MonolithicImplementation::Derived() { return ::Udm::DerivedAttr< MonolithicImplementation>(impl); }
	::Udm::ArchetypeAttr< MonolithicImplementation> MonolithicImplementation::Archetype() const { return ::Udm::ArchetypeAttr< MonolithicImplementation>(impl); }
	::Udm::StringAttr MonolithicImplementation::defaultVersion() const { return ::Udm::StringAttr(impl, meta_defaultVersion); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> MonolithicImplementation::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void MonolithicImplementation::Accept(Visitor &v) { v.Visit_MonolithicImplementation(*this); }

	::Uml::Class MonolithicImplementation::meta;
	::Uml::Attribute MonolithicImplementation::meta_defaultVersion;

	ComponentImplementationContainer::ComponentImplementationContainer() {}
	ComponentImplementationContainer::ComponentImplementationContainer(::Udm::ObjectImpl *impl) : ImplementationContainer(impl) {}
	ComponentImplementationContainer::ComponentImplementationContainer(const ComponentImplementationContainer &master) : ImplementationContainer(master) {}

#ifdef UDM_RVALUE
	ComponentImplementationContainer::ComponentImplementationContainer(ComponentImplementationContainer &&master) : ImplementationContainer(master) {};

	ComponentImplementationContainer ComponentImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementationContainer& ComponentImplementationContainer::operator=(ComponentImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementationContainer ComponentImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementationContainer ComponentImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementationContainer ComponentImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementationContainer> ComponentImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementationContainer>(impl); }
	ComponentImplementationContainer ComponentImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementationContainer> ComponentImplementationContainer::Derived() { return ::Udm::DerivedAttr< ComponentImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementationContainer> ComponentImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::CQML::ImplementationDependsOn> ComponentImplementationContainer::ImplementationDependsOn_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationDependsOn>(impl, meta_ImplementationDependsOn_children); }
	::Udm::ChildAttr< ::CQML::Implements> ComponentImplementationContainer::Implements_child() const { return ::Udm::ChildAttr< ::CQML::Implements>(impl, meta_Implements_child); }
	::Udm::ChildAttr< ::CQML::ComponentRef> ComponentImplementationContainer::ComponentRef_child() const { return ::Udm::ChildAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_child); }
	::Udm::ChildrenAttr< ::CQML::ImplementationDependency> ComponentImplementationContainer::ImplementationDependency_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationDependency>(impl, meta_ImplementationDependency_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationCapability> ComponentImplementationContainer::ImplementationCapability_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationCapability>(impl, meta_ImplementationCapability_children); }
	::Udm::ChildrenAttr< ::CQML::Capability> ComponentImplementationContainer::Capability_children() const { return ::Udm::ChildrenAttr< ::CQML::Capability>(impl, meta_Capability_children); }
	::Udm::ChildrenAttr< ::CQML::CriticalPath> ComponentImplementationContainer::CriticalPath_children() const { return ::Udm::ChildrenAttr< ::CQML::CriticalPath>(impl, meta_CriticalPath_children); }
	::Udm::ChildAttr< ::CQML::PathReference> ComponentImplementationContainer::PathReference_child() const { return ::Udm::ChildAttr< ::CQML::PathReference>(impl, meta_PathReference_child); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementation> ComponentImplementationContainer::ComponentImplementation_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementation>(impl, meta_ComponentImplementation_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic> ComponentImplementationContainer::AssemblyQoSComposition() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic>(impl, meta_AssemblyQoSComposition); }
	::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic> ComponentImplementationContainer::PortQoSComposition() const { return ::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic>(impl, meta_PortQoSComposition); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS> ComponentImplementationContainer::ComponentAssemblyQoS_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS>(impl, meta_ComponentAssemblyQoS_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> ComponentImplementationContainer::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> ComponentImplementationContainer::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> ComponentImplementationContainer::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> ComponentImplementationContainer::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> ComponentImplementationContainer::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationDependency> ComponentImplementationContainer::ImplementationDependency_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationDependency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementSatisfier> ComponentImplementationContainer::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Capability> ComponentImplementationContainer::Capability_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Capability>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationCapability> ComponentImplementationContainer::ImplementationCapability_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationCapability>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationDependsOn> ComponentImplementationContainer::ImplementationDependsOn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationDependsOn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Implements> ComponentImplementationContainer::Implements_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Implements>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementation> ComponentImplementationContainer::ComponentImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Implemenation> ComponentImplementationContainer::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssembly> ComponentImplementationContainer::ComponentAssembly_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonolithicImplementation> ComponentImplementationContainer::MonolithicImplementation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithicImplementation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CriticalPath> ComponentImplementationContainer::CriticalPath_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CriticalPath>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PathReference> ComponentImplementationContainer::PathReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PathReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic> ComponentImplementationContainer::ComponentAssemblyQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase> ComponentImplementationContainer::QoSCharacteristicBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSCharRef> ComponentImplementationContainer::QoSCharRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblySecurityQoS> ComponentImplementationContainer::ComponentAssemblySecurityQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblySecurityQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FailOverUnit> ComponentImplementationContainer::FailOverUnit_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FailOverUnit>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NetQoS> ComponentImplementationContainer::NetQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NetQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS> ComponentImplementationContainer::ComponentAssemblyQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic> ComponentImplementationContainer::PortQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortSecurityQoS> ComponentImplementationContainer::PortSecurityQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortSecurityQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentImplementations> ComponentImplementationContainer::ComponentImplementations_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementations>(impl, meta_ComponentImplementations_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementations> ComponentImplementationContainer::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementations>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementationContainer::Accept(Visitor &v) { v.Visit_ComponentImplementationContainer(*this); }

	::Uml::Class ComponentImplementationContainer::meta;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationDependsOn_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_Implements_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ComponentRef_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationDependency_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ImplementationCapability_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_Capability_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_CriticalPath_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_PathReference_child;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ComponentImplementation_children;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_AssemblyQoSComposition;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_PortQoSComposition;
	::Uml::CompositionChildRole ComponentImplementationContainer::meta_ComponentAssemblyQoS_children;
	::Uml::CompositionParentRole ComponentImplementationContainer::meta_ComponentImplementations_parent;

	ImplementationContainer::ImplementationContainer() {}
	ImplementationContainer::ImplementationContainer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ImplementationContainer::ImplementationContainer(const ImplementationContainer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ImplementationContainer::ImplementationContainer(ImplementationContainer &&master) : MgaObject(master) {};

	ImplementationContainer ImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationContainer& ImplementationContainer::operator=(ImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationContainer ImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationContainer ImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationContainer ImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationContainer> ImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ImplementationContainer>(impl); }
	ImplementationContainer ImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationContainer> ImplementationContainer::Derived() { return ::Udm::DerivedAttr< ImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ImplementationContainer> ImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::CQML::InfoProperty> ImplementationContainer::InfoProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::InfoProperty>(impl, meta_InfoProperty_children); }
	::Udm::ChildrenAttr< ::CQML::ConfigProperty> ImplementationContainer::ConfigProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::ConfigProperty>(impl, meta_ConfigProperty_children); }
	::Udm::ChildrenAttr< ::CQML::Property> ImplementationContainer::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MonolithprimaryArtifact> ImplementationContainer::MonolithprimaryArtifact_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithprimaryArtifact>(impl, meta_MonolithprimaryArtifact_children); }
	::Udm::ChildrenAttr< ::CQML::MonolithDeployRequirement> ImplementationContainer::MonolithDeployRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithDeployRequirement>(impl, meta_MonolithDeployRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::MonolithExecParameter> ImplementationContainer::MonolithExecParameter_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithExecParameter>(impl, meta_MonolithExecParameter_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ImplementationContainer::ImplementationArtifactReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, meta_ImplementationArtifactReference_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationRequirement> ImplementationContainer::ImplementationRequirement_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationRequirement>(impl, meta_ImplementationRequirement_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementBase> ImplementationContainer::RequirementBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> ImplementationContainer::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationRequirement> ImplementationContainer::ImplementationRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference> ImplementationContainer::ImplementationArtifactReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifactReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact> ImplementationContainer::ComponentServantArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentServantArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact> ImplementationContainer::ComponentImplementationArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConfigProperty> ImplementationContainer::ConfigProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConfigProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InfoProperty> ImplementationContainer::InfoProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InfoProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonolithprimaryArtifact> ImplementationContainer::MonolithprimaryArtifact_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithprimaryArtifact>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonolithDeployRequirement> ImplementationContainer::MonolithDeployRequirement_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithDeployRequirement>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonolithExecParameter> ImplementationContainer::MonolithExecParameter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithExecParameter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::Udm::Object> ImplementationContainer::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ImplementationContainer::meta;
	::Uml::CompositionChildRole ImplementationContainer::meta_InfoProperty_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ConfigProperty_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_Property_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithprimaryArtifact_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithDeployRequirement_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_MonolithExecParameter_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ImplementationArtifactReference_children;
	::Uml::CompositionChildRole ImplementationContainer::meta_ImplementationRequirement_children;

	MonolithicImplementationBase::MonolithicImplementationBase() {}
	MonolithicImplementationBase::MonolithicImplementationBase(::Udm::ObjectImpl *impl) : Implemenation(impl), MgaObject(impl) {}
	MonolithicImplementationBase::MonolithicImplementationBase(const MonolithicImplementationBase &master) : Implemenation(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithicImplementationBase::MonolithicImplementationBase(MonolithicImplementationBase &&master) : Implemenation(master), MgaObject(master) {};

	MonolithicImplementationBase MonolithicImplementationBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithicImplementationBase& MonolithicImplementationBase::operator=(MonolithicImplementationBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithicImplementationBase MonolithicImplementationBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithicImplementationBase MonolithicImplementationBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithicImplementationBase MonolithicImplementationBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithicImplementationBase> MonolithicImplementationBase::Instances() { return ::Udm::InstantiatedAttr< MonolithicImplementationBase>(impl); }
	MonolithicImplementationBase MonolithicImplementationBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithicImplementationBase> MonolithicImplementationBase::Derived() { return ::Udm::DerivedAttr< MonolithicImplementationBase>(impl); }
	::Udm::ArchetypeAttr< MonolithicImplementationBase> MonolithicImplementationBase::Archetype() const { return ::Udm::ArchetypeAttr< MonolithicImplementationBase>(impl); }
	::Udm::AClassAssocAttr< MonolithDeployRequirement, ImplementationRequirement> MonolithicImplementationBase::dstMonolithDeployRequirement() const { return ::Udm::AClassAssocAttr< MonolithDeployRequirement, ImplementationRequirement>(impl, meta_dstMonolithDeployRequirement, meta_dstMonolithDeployRequirement_rev); }
	::Udm::AClassAssocAttr< MonolithExecParameter, Property> MonolithicImplementationBase::dstMonolithExecParameter() const { return ::Udm::AClassAssocAttr< MonolithExecParameter, Property>(impl, meta_dstMonolithExecParameter, meta_dstMonolithExecParameter_rev); }
	::Udm::AClassAssocAttr< MonolithprimaryArtifact, ImplementationArtifactReference> MonolithicImplementationBase::dstMonolithprimaryArtifact() const { return ::Udm::AClassAssocAttr< MonolithprimaryArtifact, ImplementationArtifactReference>(impl, meta_dstMonolithprimaryArtifact, meta_dstMonolithprimaryArtifact_rev); }
	::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer> MonolithicImplementationBase::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MonolithicImplementationBase::meta;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithDeployRequirement;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithExecParameter;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithExecParameter_rev;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;
	::Uml::AssociationRole MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev;

	CriticalPath::CriticalPath() {}
	CriticalPath::CriticalPath(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CriticalPath::CriticalPath(const CriticalPath &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CriticalPath::CriticalPath(CriticalPath &&master) : MgaObject(master) {};

	CriticalPath CriticalPath::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CriticalPath& CriticalPath::operator=(CriticalPath &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CriticalPath CriticalPath::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CriticalPath CriticalPath::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CriticalPath CriticalPath::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CriticalPath> CriticalPath::Instances() { return ::Udm::InstantiatedAttr< CriticalPath>(impl); }
	CriticalPath CriticalPath::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CriticalPath> CriticalPath::Derived() { return ::Udm::DerivedAttr< CriticalPath>(impl); }
	::Udm::ArchetypeAttr< CriticalPath> CriticalPath::Archetype() const { return ::Udm::ArchetypeAttr< CriticalPath>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> CriticalPath::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> CriticalPath::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentAssembly> CriticalPath::srcCriticalPath_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentAssembly>(impl, meta_srcCriticalPath_end_); }
	::Udm::AssocEndAttr< ::CQML::PathReference> CriticalPath::dstCriticalPath_end() const { return ::Udm::AssocEndAttr< ::CQML::PathReference>(impl, meta_dstCriticalPath_end_); }
	void CriticalPath::Accept(Visitor &v) { v.Visit_CriticalPath(*this); }

	::Uml::Class CriticalPath::meta;
	::Uml::CompositionParentRole CriticalPath::meta_ComponentImplementationContainer_parent;
	::Uml::AssociationRole CriticalPath::meta_srcCriticalPath_end_;
	::Uml::AssociationRole CriticalPath::meta_dstCriticalPath_end_;

	invoke::invoke() {}
	invoke::invoke(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	invoke::invoke(const invoke &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	invoke::invoke(invoke &&master) : MgaObject(master) {};

	invoke invoke::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	invoke& invoke::operator=(invoke &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	invoke invoke::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	invoke invoke::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	invoke invoke::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< invoke> invoke::Instances() { return ::Udm::InstantiatedAttr< invoke>(impl); }
	invoke invoke::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< invoke> invoke::Derived() { return ::Udm::DerivedAttr< invoke>(impl); }
	::Udm::ArchetypeAttr< invoke> invoke::Archetype() const { return ::Udm::ArchetypeAttr< invoke>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> invoke::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> invoke::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::RequiredRequestPort> invoke::srcinvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRequestPort>(impl, meta_srcinvoke_end_); }
	::Udm::AssocEndAttr< ::CQML::InvokePortBase> invoke::dstinvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::InvokePortBase>(impl, meta_dstinvoke_end_); }
	void invoke::Accept(Visitor &v) { v.Visit_invoke(*this); }

	::Uml::Class invoke::meta;
	::Uml::CompositionParentRole invoke::meta_ComponentAssembly_parent;
	::Uml::AssociationRole invoke::meta_srcinvoke_end_;
	::Uml::AssociationRole invoke::meta_dstinvoke_end_;

	AssemblyselectRequirement::AssemblyselectRequirement() {}
	AssemblyselectRequirement::AssemblyselectRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyselectRequirement::AssemblyselectRequirement(const AssemblyselectRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyselectRequirement::AssemblyselectRequirement(AssemblyselectRequirement &&master) : MgaObject(master) {};

	AssemblyselectRequirement AssemblyselectRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyselectRequirement& AssemblyselectRequirement::operator=(AssemblyselectRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyselectRequirement AssemblyselectRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyselectRequirement AssemblyselectRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyselectRequirement AssemblyselectRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyselectRequirement> AssemblyselectRequirement::Instances() { return ::Udm::InstantiatedAttr< AssemblyselectRequirement>(impl); }
	AssemblyselectRequirement AssemblyselectRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyselectRequirement> AssemblyselectRequirement::Derived() { return ::Udm::DerivedAttr< AssemblyselectRequirement>(impl); }
	::Udm::ArchetypeAttr< AssemblyselectRequirement> AssemblyselectRequirement::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyselectRequirement>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyselectRequirement::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyselectRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Component> AssemblyselectRequirement::srcAssemblyselectRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::Component>(impl, meta_srcAssemblyselectRequirement_end_); }
	::Udm::AssocEndAttr< ::CQML::Requirement> AssemblyselectRequirement::dstAssemblyselectRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::Requirement>(impl, meta_dstAssemblyselectRequirement_end_); }
	void AssemblyselectRequirement::Accept(Visitor &v) { v.Visit_AssemblyselectRequirement(*this); }

	::Uml::Class AssemblyselectRequirement::meta;
	::Uml::CompositionParentRole AssemblyselectRequirement::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_;
	::Uml::AssociationRole AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_;

	AssemblyConfigProperty::AssemblyConfigProperty() {}
	AssemblyConfigProperty::AssemblyConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyConfigProperty::AssemblyConfigProperty(const AssemblyConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyConfigProperty::AssemblyConfigProperty(AssemblyConfigProperty &&master) : MgaObject(master) {};

	AssemblyConfigProperty AssemblyConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyConfigProperty& AssemblyConfigProperty::operator=(AssemblyConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyConfigProperty AssemblyConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyConfigProperty AssemblyConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyConfigProperty AssemblyConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyConfigProperty> AssemblyConfigProperty::Instances() { return ::Udm::InstantiatedAttr< AssemblyConfigProperty>(impl); }
	AssemblyConfigProperty AssemblyConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyConfigProperty> AssemblyConfigProperty::Derived() { return ::Udm::DerivedAttr< AssemblyConfigProperty>(impl); }
	::Udm::ArchetypeAttr< AssemblyConfigProperty> AssemblyConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyConfigProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyConfigProperty::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyConfigProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Component> AssemblyConfigProperty::srcAssemblyConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Component>(impl, meta_srcAssemblyConfigProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> AssemblyConfigProperty::dstAssemblyConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstAssemblyConfigProperty_end_); }
	void AssemblyConfigProperty::Accept(Visitor &v) { v.Visit_AssemblyConfigProperty(*this); }

	::Uml::Class AssemblyConfigProperty::meta;
	::Uml::CompositionParentRole AssemblyConfigProperty::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_;
	::Uml::AssociationRole AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_;

	PublishConnector::PublishConnector() {}
	PublishConnector::PublishConnector(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PublishConnector::PublishConnector(const PublishConnector &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PublishConnector::PublishConnector(PublishConnector &&master) : MgaObject(master) {};

	PublishConnector PublishConnector::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PublishConnector& PublishConnector::operator=(PublishConnector &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PublishConnector PublishConnector::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PublishConnector PublishConnector::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PublishConnector PublishConnector::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PublishConnector> PublishConnector::Instances() { return ::Udm::InstantiatedAttr< PublishConnector>(impl); }
	PublishConnector PublishConnector::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PublishConnector> PublishConnector::Derived() { return ::Udm::DerivedAttr< PublishConnector>(impl); }
	::Udm::ArchetypeAttr< PublishConnector> PublishConnector::Archetype() const { return ::Udm::ArchetypeAttr< PublishConnector>(impl); }
	::Udm::AClassPointerAttr< publish, OutEventPort> PublishConnector::srcpublish() const { return ::Udm::AClassPointerAttr< publish, OutEventPort>(impl, meta_srcpublish, meta_srcpublish_rev); }
	::Udm::AClassAssocAttr< deliverTo, InEventPort> PublishConnector::dstdeliverTo() const { return ::Udm::AClassAssocAttr< deliverTo, InEventPort>(impl, meta_dstdeliverTo, meta_dstdeliverTo_rev); }
	::Udm::AClassAssocAttr< AssemblyDeployRequirement, Requirement> PublishConnector::dstAssemblyDeployRequirement() const { return ::Udm::AClassAssocAttr< AssemblyDeployRequirement, Requirement>(impl, meta_dstAssemblyDeployRequirement, meta_dstAssemblyDeployRequirement_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> PublishConnector::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> PublishConnector::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void PublishConnector::Accept(Visitor &v) { v.Visit_PublishConnector(*this); }

	::Uml::Class PublishConnector::meta;
	::Uml::AssociationRole PublishConnector::meta_srcpublish;
	::Uml::AssociationRole PublishConnector::meta_srcpublish_rev;
	::Uml::AssociationRole PublishConnector::meta_dstdeliverTo;
	::Uml::AssociationRole PublishConnector::meta_dstdeliverTo_rev;
	::Uml::AssociationRole PublishConnector::meta_dstAssemblyDeployRequirement;
	::Uml::AssociationRole PublishConnector::meta_dstAssemblyDeployRequirement_rev;
	::Uml::CompositionParentRole PublishConnector::meta_ComponentAssembly_parent;

	publish::publish() {}
	publish::publish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	publish::publish(const publish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	publish::publish(publish &&master) : MgaObject(master) {};

	publish publish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	publish& publish::operator=(publish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	publish publish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	publish publish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	publish publish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< publish> publish::Instances() { return ::Udm::InstantiatedAttr< publish>(impl); }
	publish publish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< publish> publish::Derived() { return ::Udm::DerivedAttr< publish>(impl); }
	::Udm::ArchetypeAttr< publish> publish::Archetype() const { return ::Udm::ArchetypeAttr< publish>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> publish::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> publish::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OutEventPort> publish::srcpublish_end() const { return ::Udm::AssocEndAttr< ::CQML::OutEventPort>(impl, meta_srcpublish_end_); }
	::Udm::AssocEndAttr< ::CQML::PublishConnector> publish::dstpublish_end() const { return ::Udm::AssocEndAttr< ::CQML::PublishConnector>(impl, meta_dstpublish_end_); }
	void publish::Accept(Visitor &v) { v.Visit_publish(*this); }

	::Uml::Class publish::meta;
	::Uml::CompositionParentRole publish::meta_ComponentAssembly_parent;
	::Uml::AssociationRole publish::meta_srcpublish_end_;
	::Uml::AssociationRole publish::meta_dstpublish_end_;

	deliverTo::deliverTo() {}
	deliverTo::deliverTo(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	deliverTo::deliverTo(const deliverTo &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	deliverTo::deliverTo(deliverTo &&master) : MgaObject(master) {};

	deliverTo deliverTo::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	deliverTo& deliverTo::operator=(deliverTo &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	deliverTo deliverTo::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	deliverTo deliverTo::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	deliverTo deliverTo::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< deliverTo> deliverTo::Instances() { return ::Udm::InstantiatedAttr< deliverTo>(impl); }
	deliverTo deliverTo::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< deliverTo> deliverTo::Derived() { return ::Udm::DerivedAttr< deliverTo>(impl); }
	::Udm::ArchetypeAttr< deliverTo> deliverTo::Archetype() const { return ::Udm::ArchetypeAttr< deliverTo>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> deliverTo::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> deliverTo::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PublishConnector> deliverTo::srcdeliverTo_end() const { return ::Udm::AssocEndAttr< ::CQML::PublishConnector>(impl, meta_srcdeliverTo_end_); }
	::Udm::AssocEndAttr< ::CQML::InEventPort> deliverTo::dstdeliverTo_end() const { return ::Udm::AssocEndAttr< ::CQML::InEventPort>(impl, meta_dstdeliverTo_end_); }
	void deliverTo::Accept(Visitor &v) { v.Visit_deliverTo(*this); }

	::Uml::Class deliverTo::meta;
	::Uml::CompositionParentRole deliverTo::meta_ComponentAssembly_parent;
	::Uml::AssociationRole deliverTo::meta_srcdeliverTo_end_;
	::Uml::AssociationRole deliverTo::meta_dstdeliverTo_end_;

	AssemblyDeployRequirement::AssemblyDeployRequirement() {}
	AssemblyDeployRequirement::AssemblyDeployRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyDeployRequirement::AssemblyDeployRequirement(const AssemblyDeployRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyDeployRequirement::AssemblyDeployRequirement(AssemblyDeployRequirement &&master) : MgaObject(master) {};

	AssemblyDeployRequirement AssemblyDeployRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyDeployRequirement& AssemblyDeployRequirement::operator=(AssemblyDeployRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyDeployRequirement AssemblyDeployRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyDeployRequirement AssemblyDeployRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyDeployRequirement AssemblyDeployRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyDeployRequirement> AssemblyDeployRequirement::Instances() { return ::Udm::InstantiatedAttr< AssemblyDeployRequirement>(impl); }
	AssemblyDeployRequirement AssemblyDeployRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyDeployRequirement> AssemblyDeployRequirement::Derived() { return ::Udm::DerivedAttr< AssemblyDeployRequirement>(impl); }
	::Udm::ArchetypeAttr< AssemblyDeployRequirement> AssemblyDeployRequirement::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyDeployRequirement>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyDeployRequirement::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AssemblyDeployRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PublishConnector> AssemblyDeployRequirement::srcAssemblyDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::PublishConnector>(impl, meta_srcAssemblyDeployRequirement_end_); }
	::Udm::AssocEndAttr< ::CQML::Requirement> AssemblyDeployRequirement::dstAssemblyDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::Requirement>(impl, meta_dstAssemblyDeployRequirement_end_); }
	void AssemblyDeployRequirement::Accept(Visitor &v) { v.Visit_AssemblyDeployRequirement(*this); }

	::Uml::Class AssemblyDeployRequirement::meta;
	::Uml::CompositionParentRole AssemblyDeployRequirement::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AssemblyDeployRequirement::meta_srcAssemblyDeployRequirement_end_;
	::Uml::AssociationRole AssemblyDeployRequirement::meta_dstAssemblyDeployRequirement_end_;

	emit::emit() {}
	emit::emit(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	emit::emit(const emit &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	emit::emit(emit &&master) : MgaObject(master) {};

	emit emit::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	emit& emit::operator=(emit &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	emit emit::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	emit emit::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	emit emit::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< emit> emit::Instances() { return ::Udm::InstantiatedAttr< emit>(impl); }
	emit emit::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< emit> emit::Derived() { return ::Udm::DerivedAttr< emit>(impl); }
	::Udm::ArchetypeAttr< emit> emit::Archetype() const { return ::Udm::ArchetypeAttr< emit>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> emit::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> emit::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OutEventPort> emit::srcemit_end() const { return ::Udm::AssocEndAttr< ::CQML::OutEventPort>(impl, meta_srcemit_end_); }
	::Udm::AssocEndAttr< ::CQML::InEventPort> emit::dstemit_end() const { return ::Udm::AssocEndAttr< ::CQML::InEventPort>(impl, meta_dstemit_end_); }
	void emit::Accept(Visitor &v) { v.Visit_emit(*this); }

	::Uml::Class emit::meta;
	::Uml::CompositionParentRole emit::meta_ComponentAssembly_parent;
	::Uml::AssociationRole emit::meta_srcemit_end_;
	::Uml::AssociationRole emit::meta_dstemit_end_;

	ReceptacleDelegate::ReceptacleDelegate() {}
	ReceptacleDelegate::ReceptacleDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ReceptacleDelegate::ReceptacleDelegate(const ReceptacleDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ReceptacleDelegate::ReceptacleDelegate(ReceptacleDelegate &&master) : MgaObject(master) {};

	ReceptacleDelegate ReceptacleDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReceptacleDelegate& ReceptacleDelegate::operator=(ReceptacleDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReceptacleDelegate ReceptacleDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReceptacleDelegate ReceptacleDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReceptacleDelegate ReceptacleDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReceptacleDelegate> ReceptacleDelegate::Instances() { return ::Udm::InstantiatedAttr< ReceptacleDelegate>(impl); }
	ReceptacleDelegate ReceptacleDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReceptacleDelegate> ReceptacleDelegate::Derived() { return ::Udm::DerivedAttr< ReceptacleDelegate>(impl); }
	::Udm::ArchetypeAttr< ReceptacleDelegate> ReceptacleDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ReceptacleDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ReceptacleDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ReceptacleDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::RequiredRequestPort> ReceptacleDelegate::srcReceptacleDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRequestPort>(impl, meta_srcReceptacleDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::RequiredRequestPort> ReceptacleDelegate::dstReceptacleDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRequestPort>(impl, meta_dstReceptacleDelegate_end_); }
	void ReceptacleDelegate::Accept(Visitor &v) { v.Visit_ReceptacleDelegate(*this); }

	::Uml::Class ReceptacleDelegate::meta;
	::Uml::CompositionParentRole ReceptacleDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ReceptacleDelegate::meta_srcReceptacleDelegate_end_;
	::Uml::AssociationRole ReceptacleDelegate::meta_dstReceptacleDelegate_end_;

	FacetDelegate::FacetDelegate() {}
	FacetDelegate::FacetDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FacetDelegate::FacetDelegate(const FacetDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FacetDelegate::FacetDelegate(FacetDelegate &&master) : MgaObject(master) {};

	FacetDelegate FacetDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FacetDelegate& FacetDelegate::operator=(FacetDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FacetDelegate FacetDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FacetDelegate FacetDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FacetDelegate FacetDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FacetDelegate> FacetDelegate::Instances() { return ::Udm::InstantiatedAttr< FacetDelegate>(impl); }
	FacetDelegate FacetDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FacetDelegate> FacetDelegate::Derived() { return ::Udm::DerivedAttr< FacetDelegate>(impl); }
	::Udm::ArchetypeAttr< FacetDelegate> FacetDelegate::Archetype() const { return ::Udm::ArchetypeAttr< FacetDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> FacetDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> FacetDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort> FacetDelegate::srcFacetDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort>(impl, meta_srcFacetDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort> FacetDelegate::dstFacetDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort>(impl, meta_dstFacetDelegate_end_); }
	void FacetDelegate::Accept(Visitor &v) { v.Visit_FacetDelegate(*this); }

	::Uml::Class FacetDelegate::meta;
	::Uml::CompositionParentRole FacetDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole FacetDelegate::meta_srcFacetDelegate_end_;
	::Uml::AssociationRole FacetDelegate::meta_dstFacetDelegate_end_;

	EventSourceDelegate::EventSourceDelegate() {}
	EventSourceDelegate::EventSourceDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSourceDelegate::EventSourceDelegate(const EventSourceDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSourceDelegate::EventSourceDelegate(EventSourceDelegate &&master) : MgaObject(master) {};

	EventSourceDelegate EventSourceDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSourceDelegate& EventSourceDelegate::operator=(EventSourceDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSourceDelegate EventSourceDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSourceDelegate EventSourceDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSourceDelegate EventSourceDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSourceDelegate> EventSourceDelegate::Instances() { return ::Udm::InstantiatedAttr< EventSourceDelegate>(impl); }
	EventSourceDelegate EventSourceDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSourceDelegate> EventSourceDelegate::Derived() { return ::Udm::DerivedAttr< EventSourceDelegate>(impl); }
	::Udm::ArchetypeAttr< EventSourceDelegate> EventSourceDelegate::Archetype() const { return ::Udm::ArchetypeAttr< EventSourceDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSourceDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSourceDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OutEventPort> EventSourceDelegate::srcEventSourceDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::OutEventPort>(impl, meta_srcEventSourceDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::OutEventPort> EventSourceDelegate::dstEventSourceDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::OutEventPort>(impl, meta_dstEventSourceDelegate_end_); }
	void EventSourceDelegate::Accept(Visitor &v) { v.Visit_EventSourceDelegate(*this); }

	::Uml::Class EventSourceDelegate::meta;
	::Uml::CompositionParentRole EventSourceDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSourceDelegate::meta_srcEventSourceDelegate_end_;
	::Uml::AssociationRole EventSourceDelegate::meta_dstEventSourceDelegate_end_;

	EventSinkDelegate::EventSinkDelegate() {}
	EventSinkDelegate::EventSinkDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSinkDelegate::EventSinkDelegate(const EventSinkDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSinkDelegate::EventSinkDelegate(EventSinkDelegate &&master) : MgaObject(master) {};

	EventSinkDelegate EventSinkDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSinkDelegate& EventSinkDelegate::operator=(EventSinkDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSinkDelegate EventSinkDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSinkDelegate EventSinkDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSinkDelegate EventSinkDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSinkDelegate> EventSinkDelegate::Instances() { return ::Udm::InstantiatedAttr< EventSinkDelegate>(impl); }
	EventSinkDelegate EventSinkDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSinkDelegate> EventSinkDelegate::Derived() { return ::Udm::DerivedAttr< EventSinkDelegate>(impl); }
	::Udm::ArchetypeAttr< EventSinkDelegate> EventSinkDelegate::Archetype() const { return ::Udm::ArchetypeAttr< EventSinkDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSinkDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSinkDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::InEventPort> EventSinkDelegate::srcEventSinkDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::InEventPort>(impl, meta_srcEventSinkDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::InEventPort> EventSinkDelegate::dstEventSinkDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::InEventPort>(impl, meta_dstEventSinkDelegate_end_); }
	void EventSinkDelegate::Accept(Visitor &v) { v.Visit_EventSinkDelegate(*this); }

	::Uml::Class EventSinkDelegate::meta;
	::Uml::CompositionParentRole EventSinkDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSinkDelegate::meta_srcEventSinkDelegate_end_;
	::Uml::AssociationRole EventSinkDelegate::meta_dstEventSinkDelegate_end_;

	ExternalDelegate::ExternalDelegate() {}
	ExternalDelegate::ExternalDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalDelegate::ExternalDelegate(const ExternalDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalDelegate::ExternalDelegate(ExternalDelegate &&master) : MgaObject(master) {};

	ExternalDelegate ExternalDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalDelegate& ExternalDelegate::operator=(ExternalDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalDelegate ExternalDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalDelegate ExternalDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalDelegate ExternalDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalDelegate> ExternalDelegate::Instances() { return ::Udm::InstantiatedAttr< ExternalDelegate>(impl); }
	ExternalDelegate ExternalDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalDelegate> ExternalDelegate::Derived() { return ::Udm::DerivedAttr< ExternalDelegate>(impl); }
	::Udm::ArchetypeAttr< ExternalDelegate> ExternalDelegate::Archetype() const { return ::Udm::ArchetypeAttr< ExternalDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ExternalDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ExternalDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ExternalPortReference> ExternalDelegate::srcExternalDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::ExternalPortReference>(impl, meta_srcExternalDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::Port> ExternalDelegate::dstExternalDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::Port>(impl, meta_dstExternalDelegate_end_); }
	void ExternalDelegate::Accept(Visitor &v) { v.Visit_ExternalDelegate(*this); }

	::Uml::Class ExternalDelegate::meta;
	::Uml::CompositionParentRole ExternalDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ExternalDelegate::meta_srcExternalDelegate_end_;
	::Uml::AssociationRole ExternalDelegate::meta_dstExternalDelegate_end_;

	AttributeValue::AttributeValue() {}
	AttributeValue::AttributeValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeValue::AttributeValue(const AttributeValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeValue::AttributeValue(AttributeValue &&master) : MgaObject(master) {};

	AttributeValue AttributeValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeValue& AttributeValue::operator=(AttributeValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeValue AttributeValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeValue AttributeValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeValue AttributeValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeValue> AttributeValue::Instances() { return ::Udm::InstantiatedAttr< AttributeValue>(impl); }
	AttributeValue AttributeValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeValue> AttributeValue::Derived() { return ::Udm::DerivedAttr< AttributeValue>(impl); }
	::Udm::ArchetypeAttr< AttributeValue> AttributeValue::Archetype() const { return ::Udm::ArchetypeAttr< AttributeValue>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeValue::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeValue::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ReadonlyAttribute> AttributeValue::srcAttributeValue_end() const { return ::Udm::AssocEndAttr< ::CQML::ReadonlyAttribute>(impl, meta_srcAttributeValue_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> AttributeValue::dstAttributeValue_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstAttributeValue_end_); }
	void AttributeValue::Accept(Visitor &v) { v.Visit_AttributeValue(*this); }

	::Uml::Class AttributeValue::meta;
	::Uml::CompositionParentRole AttributeValue::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeValue::meta_srcAttributeValue_end_;
	::Uml::AssociationRole AttributeValue::meta_dstAttributeValue_end_;

	AttributeDelegate::AttributeDelegate() {}
	AttributeDelegate::AttributeDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeDelegate::AttributeDelegate(const AttributeDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeDelegate::AttributeDelegate(AttributeDelegate &&master) : MgaObject(master) {};

	AttributeDelegate AttributeDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeDelegate& AttributeDelegate::operator=(AttributeDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeDelegate AttributeDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeDelegate AttributeDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeDelegate AttributeDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeDelegate> AttributeDelegate::Instances() { return ::Udm::InstantiatedAttr< AttributeDelegate>(impl); }
	AttributeDelegate AttributeDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeDelegate> AttributeDelegate::Derived() { return ::Udm::DerivedAttr< AttributeDelegate>(impl); }
	::Udm::ArchetypeAttr< AttributeDelegate> AttributeDelegate::Archetype() const { return ::Udm::ArchetypeAttr< AttributeDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::AttributeMapping> AttributeDelegate::srcAttributeDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::AttributeMapping>(impl, meta_srcAttributeDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::ReadonlyAttribute> AttributeDelegate::dstAttributeDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::ReadonlyAttribute>(impl, meta_dstAttributeDelegate_end_); }
	void AttributeDelegate::Accept(Visitor &v) { v.Visit_AttributeDelegate(*this); }

	::Uml::Class AttributeDelegate::meta;
	::Uml::CompositionParentRole AttributeDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeDelegate::meta_srcAttributeDelegate_end_;
	::Uml::AssociationRole AttributeDelegate::meta_dstAttributeDelegate_end_;

	AttributeMapping::AttributeMapping() {}
	AttributeMapping::AttributeMapping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMapping::AttributeMapping(const AttributeMapping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMapping::AttributeMapping(AttributeMapping &&master) : MgaObject(master) {};

	AttributeMapping AttributeMapping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMapping& AttributeMapping::operator=(AttributeMapping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMapping AttributeMapping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMapping AttributeMapping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMapping AttributeMapping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMapping> AttributeMapping::Instances() { return ::Udm::InstantiatedAttr< AttributeMapping>(impl); }
	AttributeMapping AttributeMapping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMapping> AttributeMapping::Derived() { return ::Udm::DerivedAttr< AttributeMapping>(impl); }
	::Udm::ArchetypeAttr< AttributeMapping> AttributeMapping::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMapping>(impl); }
	::Udm::AClassAssocAttr< AttributeDelegate, ReadonlyAttribute> AttributeMapping::dstAttributeDelegate() const { return ::Udm::AClassAssocAttr< AttributeDelegate, ReadonlyAttribute>(impl, meta_dstAttributeDelegate, meta_dstAttributeDelegate_rev); }
	::Udm::AClassPointerAttr< AttributeMappingValue, Property> AttributeMapping::dstAttributeMappingValue() const { return ::Udm::AClassPointerAttr< AttributeMappingValue, Property>(impl, meta_dstAttributeMappingValue, meta_dstAttributeMappingValue_rev); }
	::Udm::AClassAssocAttr< AttributeMappingDelegate, AttributeMapping> AttributeMapping::dstAttributeMappingDelegate() const { return ::Udm::AClassAssocAttr< AttributeMappingDelegate, AttributeMapping>(impl, meta_dstAttributeMappingDelegate, meta_dstAttributeMappingDelegate_rev); }
	::Udm::AClassPointerAttr< AttributeMappingDelegate, AttributeMapping> AttributeMapping::srcAttributeMappingDelegate() const { return ::Udm::AClassPointerAttr< AttributeMappingDelegate, AttributeMapping>(impl, meta_srcAttributeMappingDelegate, meta_srcAttributeMappingDelegate_rev); }
	::Udm::PointerAttr< ReadonlyAttribute> AttributeMapping::ref() const { return ::Udm::PointerAttr< ReadonlyAttribute>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMapping::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMapping::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeMapping::Accept(Visitor &v) { v.Visit_AttributeMapping(*this); }

	::Uml::Class AttributeMapping::meta;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeDelegate;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingValue;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingValue_rev;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingDelegate;
	::Uml::AssociationRole AttributeMapping::meta_dstAttributeMappingDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_srcAttributeMappingDelegate;
	::Uml::AssociationRole AttributeMapping::meta_srcAttributeMappingDelegate_rev;
	::Uml::AssociationRole AttributeMapping::meta_ref;
	::Uml::CompositionParentRole AttributeMapping::meta_ComponentAssembly_parent;

	AttributeMappingValue::AttributeMappingValue() {}
	AttributeMappingValue::AttributeMappingValue(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMappingValue::AttributeMappingValue(const AttributeMappingValue &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMappingValue::AttributeMappingValue(AttributeMappingValue &&master) : MgaObject(master) {};

	AttributeMappingValue AttributeMappingValue::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMappingValue& AttributeMappingValue::operator=(AttributeMappingValue &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMappingValue AttributeMappingValue::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMappingValue AttributeMappingValue::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMappingValue AttributeMappingValue::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMappingValue> AttributeMappingValue::Instances() { return ::Udm::InstantiatedAttr< AttributeMappingValue>(impl); }
	AttributeMappingValue AttributeMappingValue::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMappingValue> AttributeMappingValue::Derived() { return ::Udm::DerivedAttr< AttributeMappingValue>(impl); }
	::Udm::ArchetypeAttr< AttributeMappingValue> AttributeMappingValue::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMappingValue>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMappingValue::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMappingValue::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::AttributeMapping> AttributeMappingValue::srcAttributeMappingValue_end() const { return ::Udm::AssocEndAttr< ::CQML::AttributeMapping>(impl, meta_srcAttributeMappingValue_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> AttributeMappingValue::dstAttributeMappingValue_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstAttributeMappingValue_end_); }
	void AttributeMappingValue::Accept(Visitor &v) { v.Visit_AttributeMappingValue(*this); }

	::Uml::Class AttributeMappingValue::meta;
	::Uml::CompositionParentRole AttributeMappingValue::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeMappingValue::meta_srcAttributeMappingValue_end_;
	::Uml::AssociationRole AttributeMappingValue::meta_dstAttributeMappingValue_end_;

	AttributeMappingDelegate::AttributeMappingDelegate() {}
	AttributeMappingDelegate::AttributeMappingDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeMappingDelegate::AttributeMappingDelegate(const AttributeMappingDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeMappingDelegate::AttributeMappingDelegate(AttributeMappingDelegate &&master) : MgaObject(master) {};

	AttributeMappingDelegate AttributeMappingDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeMappingDelegate& AttributeMappingDelegate::operator=(AttributeMappingDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeMappingDelegate AttributeMappingDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeMappingDelegate AttributeMappingDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeMappingDelegate AttributeMappingDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeMappingDelegate> AttributeMappingDelegate::Instances() { return ::Udm::InstantiatedAttr< AttributeMappingDelegate>(impl); }
	AttributeMappingDelegate AttributeMappingDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeMappingDelegate> AttributeMappingDelegate::Derived() { return ::Udm::DerivedAttr< AttributeMappingDelegate>(impl); }
	::Udm::ArchetypeAttr< AttributeMappingDelegate> AttributeMappingDelegate::Archetype() const { return ::Udm::ArchetypeAttr< AttributeMappingDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMappingDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> AttributeMappingDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::AttributeMapping> AttributeMappingDelegate::srcAttributeMappingDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::AttributeMapping>(impl, meta_srcAttributeMappingDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::AttributeMapping> AttributeMappingDelegate::dstAttributeMappingDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::AttributeMapping>(impl, meta_dstAttributeMappingDelegate_end_); }
	void AttributeMappingDelegate::Accept(Visitor &v) { v.Visit_AttributeMappingDelegate(*this); }

	::Uml::Class AttributeMappingDelegate::meta;
	::Uml::CompositionParentRole AttributeMappingDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_;
	::Uml::AssociationRole AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_;

	SupportsDelegate::SupportsDelegate() {}
	SupportsDelegate::SupportsDelegate(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SupportsDelegate::SupportsDelegate(const SupportsDelegate &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SupportsDelegate::SupportsDelegate(SupportsDelegate &&master) : MgaObject(master) {};

	SupportsDelegate SupportsDelegate::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SupportsDelegate& SupportsDelegate::operator=(SupportsDelegate &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SupportsDelegate SupportsDelegate::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SupportsDelegate SupportsDelegate::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SupportsDelegate SupportsDelegate::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SupportsDelegate> SupportsDelegate::Instances() { return ::Udm::InstantiatedAttr< SupportsDelegate>(impl); }
	SupportsDelegate SupportsDelegate::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SupportsDelegate> SupportsDelegate::Derived() { return ::Udm::DerivedAttr< SupportsDelegate>(impl); }
	::Udm::ArchetypeAttr< SupportsDelegate> SupportsDelegate::Archetype() const { return ::Udm::ArchetypeAttr< SupportsDelegate>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> SupportsDelegate::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> SupportsDelegate::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Supports> SupportsDelegate::srcSupportsDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::Supports>(impl, meta_srcSupportsDelegate_end_); }
	::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort> SupportsDelegate::dstSupportsDelegate_end() const { return ::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort>(impl, meta_dstSupportsDelegate_end_); }
	void SupportsDelegate::Accept(Visitor &v) { v.Visit_SupportsDelegate(*this); }

	::Uml::Class SupportsDelegate::meta;
	::Uml::CompositionParentRole SupportsDelegate::meta_ComponentAssembly_parent;
	::Uml::AssociationRole SupportsDelegate::meta_srcSupportsDelegate_end_;
	::Uml::AssociationRole SupportsDelegate::meta_dstSupportsDelegate_end_;

	DeploymentPlan::DeploymentPlan() {}
	DeploymentPlan::DeploymentPlan(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DeploymentPlan::DeploymentPlan(const DeploymentPlan &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DeploymentPlan::DeploymentPlan(DeploymentPlan &&master) : MgaObject(master) {};

	DeploymentPlan DeploymentPlan::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlan& DeploymentPlan::operator=(DeploymentPlan &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlan DeploymentPlan::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlan DeploymentPlan::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlan DeploymentPlan::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlan> DeploymentPlan::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlan>(impl); }
	DeploymentPlan DeploymentPlan::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlan> DeploymentPlan::Derived() { return ::Udm::DerivedAttr< DeploymentPlan>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlan> DeploymentPlan::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlan>(impl); }
	::Udm::StringAttr DeploymentPlan::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::StringAttr DeploymentPlan::UUID() const { return ::Udm::StringAttr(impl, meta_UUID); }
	::Udm::AssocAttr< DeploymentPlanRef> DeploymentPlan::referedbyDeploymentPlanReference() const { return ::Udm::AssocAttr< DeploymentPlanRef>(impl, meta_referedbyDeploymentPlanReference); }
	::Udm::ChildrenAttr< ::CQML::NodeReference> DeploymentPlan::NodeReference_children() const { return ::Udm::ChildrenAttr< ::CQML::NodeReference>(impl, meta_NodeReference_children); }
	::Udm::ChildrenAttr< ::CQML::InstanceMapping> DeploymentPlan::InstanceMapping_children() const { return ::Udm::ChildrenAttr< ::CQML::InstanceMapping>(impl, meta_InstanceMapping_children); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroup> DeploymentPlan::CollocationGroup_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroup>(impl, meta_CollocationGroup_children); }
	::Udm::ChildrenAttr< ::CQML::Property> DeploymentPlan::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::Deploys> DeploymentPlan::Deploys_children() const { return ::Udm::ChildrenAttr< ::CQML::Deploys>(impl, meta_Deploys_children); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> DeploymentPlan::CollocationGroupMember_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, meta_CollocationGroupMember_children); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlanQoS> DeploymentPlan::DeploymentPlanQoS_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlanQoS>(impl, meta_DeploymentPlanQoS_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> DeploymentPlan::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> DeploymentPlan::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> DeploymentPlan::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> DeploymentPlan::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InstanceMapping> DeploymentPlan::InstanceMapping_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InstanceMapping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroup> DeploymentPlan::CollocationGroup_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroup>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SharedComponentReference> DeploymentPlan::SharedComponentReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedComponentReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryRef> DeploymentPlan::ComponentFactoryRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Deploys> DeploymentPlan::Deploys_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Deploys>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> DeploymentPlan::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NodeReference> DeploymentPlan::NodeReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NodeReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlanQoS> DeploymentPlan::DeploymentPlanQoS_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlanQoS>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DomainRiskGroupingRef> DeploymentPlan::DomainRiskGroupingRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DomainRiskGroupingRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::DeploymentPlans> DeploymentPlan::DeploymentPlans_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlans>(impl, meta_DeploymentPlans_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlans> DeploymentPlan::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlans>(impl, ::Udm::NULLPARENTROLE); }
	void DeploymentPlan::Accept(Visitor &v) { v.Visit_DeploymentPlan(*this); }

	::Uml::Class DeploymentPlan::meta;
	::Uml::Attribute DeploymentPlan::meta_label;
	::Uml::Attribute DeploymentPlan::meta_UUID;
	::Uml::AssociationRole DeploymentPlan::meta_referedbyDeploymentPlanReference;
	::Uml::CompositionChildRole DeploymentPlan::meta_NodeReference_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_InstanceMapping_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_CollocationGroup_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_Property_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_Deploys_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_CollocationGroupMember_children;
	::Uml::CompositionChildRole DeploymentPlan::meta_DeploymentPlanQoS_children;
	::Uml::CompositionParentRole DeploymentPlan::meta_DeploymentPlans_parent;

	InstanceMapping::InstanceMapping() {}
	InstanceMapping::InstanceMapping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InstanceMapping::InstanceMapping(const InstanceMapping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InstanceMapping::InstanceMapping(InstanceMapping &&master) : MgaObject(master) {};

	InstanceMapping InstanceMapping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InstanceMapping& InstanceMapping::operator=(InstanceMapping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InstanceMapping InstanceMapping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InstanceMapping InstanceMapping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InstanceMapping InstanceMapping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InstanceMapping> InstanceMapping::Instances() { return ::Udm::InstantiatedAttr< InstanceMapping>(impl); }
	InstanceMapping InstanceMapping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InstanceMapping> InstanceMapping::Derived() { return ::Udm::DerivedAttr< InstanceMapping>(impl); }
	::Udm::ArchetypeAttr< InstanceMapping> InstanceMapping::Archetype() const { return ::Udm::ArchetypeAttr< InstanceMapping>(impl); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> InstanceMapping::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> InstanceMapping::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::CollocationGroup> InstanceMapping::srcInstanceMapping_end() const { return ::Udm::AssocEndAttr< ::CQML::CollocationGroup>(impl, meta_srcInstanceMapping_end_); }
	::Udm::AssocEndAttr< ::CQML::NodeReference> InstanceMapping::dstInstanceMapping_end() const { return ::Udm::AssocEndAttr< ::CQML::NodeReference>(impl, meta_dstInstanceMapping_end_); }
	void InstanceMapping::Accept(Visitor &v) { v.Visit_InstanceMapping(*this); }

	::Uml::Class InstanceMapping::meta;
	::Uml::CompositionParentRole InstanceMapping::meta_DeploymentPlan_parent;
	::Uml::AssociationRole InstanceMapping::meta_srcInstanceMapping_end_;
	::Uml::AssociationRole InstanceMapping::meta_dstInstanceMapping_end_;

	CollocationGroup::CollocationGroup() {}
	CollocationGroup::CollocationGroup(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CollocationGroup::CollocationGroup(const CollocationGroup &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CollocationGroup::CollocationGroup(CollocationGroup &&master) : MgaObject(master) {};

	CollocationGroup CollocationGroup::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CollocationGroup& CollocationGroup::operator=(CollocationGroup &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CollocationGroup CollocationGroup::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CollocationGroup CollocationGroup::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CollocationGroup CollocationGroup::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CollocationGroup> CollocationGroup::Instances() { return ::Udm::InstantiatedAttr< CollocationGroup>(impl); }
	CollocationGroup CollocationGroup::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CollocationGroup> CollocationGroup::Derived() { return ::Udm::DerivedAttr< CollocationGroup>(impl); }
	::Udm::ArchetypeAttr< CollocationGroup> CollocationGroup::Archetype() const { return ::Udm::ArchetypeAttr< CollocationGroup>(impl); }
	::Udm::AClassAssocAttr< InstanceMapping, NodeReference> CollocationGroup::dstInstanceMapping() const { return ::Udm::AClassAssocAttr< InstanceMapping, NodeReference>(impl, meta_dstInstanceMapping, meta_dstInstanceMapping_rev); }
	::Udm::AssocAttr< CollocationGroupMember> CollocationGroup::members() const { return ::Udm::AssocAttr< CollocationGroupMember>(impl, meta_members); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> CollocationGroup::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> CollocationGroup::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void CollocationGroup::Accept(Visitor &v) { v.Visit_CollocationGroup(*this); }

	::Uml::Class CollocationGroup::meta;
	::Uml::AssociationRole CollocationGroup::meta_dstInstanceMapping;
	::Uml::AssociationRole CollocationGroup::meta_dstInstanceMapping_rev;
	::Uml::AssociationRole CollocationGroup::meta_members;
	::Uml::CompositionParentRole CollocationGroup::meta_DeploymentPlan_parent;

	SharedComponentReference::SharedComponentReference() {}
	SharedComponentReference::SharedComponentReference(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl), MgaObject(impl) {}
	SharedComponentReference::SharedComponentReference(const SharedComponentReference &master) : CollocationGroupMember(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	SharedComponentReference::SharedComponentReference(SharedComponentReference &&master) : CollocationGroupMember(master), MgaObject(master) {};

	SharedComponentReference SharedComponentReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SharedComponentReference& SharedComponentReference::operator=(SharedComponentReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SharedComponentReference SharedComponentReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SharedComponentReference SharedComponentReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SharedComponentReference SharedComponentReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SharedComponentReference> SharedComponentReference::Instances() { return ::Udm::InstantiatedAttr< SharedComponentReference>(impl); }
	SharedComponentReference SharedComponentReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SharedComponentReference> SharedComponentReference::Derived() { return ::Udm::DerivedAttr< SharedComponentReference>(impl); }
	::Udm::ArchetypeAttr< SharedComponentReference> SharedComponentReference::Archetype() const { return ::Udm::ArchetypeAttr< SharedComponentReference>(impl); }
	::Udm::PointerAttr< ComponentRef> SharedComponentReference::ref() const { return ::Udm::PointerAttr< ComponentRef>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> SharedComponentReference::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void SharedComponentReference::Accept(Visitor &v) { v.Visit_SharedComponentReference(*this); }

	::Uml::Class SharedComponentReference::meta;
	::Uml::AssociationRole SharedComponentReference::meta_ref;

	ComponentFactoryRef::ComponentFactoryRef() {}
	ComponentFactoryRef::ComponentFactoryRef(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl), MgaObject(impl) {}
	ComponentFactoryRef::ComponentFactoryRef(const ComponentFactoryRef &master) : CollocationGroupMember(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryRef::ComponentFactoryRef(ComponentFactoryRef &&master) : CollocationGroupMember(master), MgaObject(master) {};

	ComponentFactoryRef ComponentFactoryRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryRef& ComponentFactoryRef::operator=(ComponentFactoryRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryRef ComponentFactoryRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryRef ComponentFactoryRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryRef ComponentFactoryRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryRef> ComponentFactoryRef::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryRef>(impl); }
	ComponentFactoryRef ComponentFactoryRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryRef> ComponentFactoryRef::Derived() { return ::Udm::DerivedAttr< ComponentFactoryRef>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryRef> ComponentFactoryRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryRef>(impl); }
	::Udm::AClassAssocAttr< Deploys, ComponentRef> ComponentFactoryRef::dstDeploys() const { return ::Udm::AClassAssocAttr< Deploys, ComponentRef>(impl, meta_dstDeploys, meta_dstDeploys_rev); }
	::Udm::PointerAttr< ComponentFactoryInstance> ComponentFactoryRef::ref() const { return ::Udm::PointerAttr< ComponentFactoryInstance>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> ComponentFactoryRef::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryRef::Accept(Visitor &v) { v.Visit_ComponentFactoryRef(*this); }

	::Uml::Class ComponentFactoryRef::meta;
	::Uml::AssociationRole ComponentFactoryRef::meta_dstDeploys;
	::Uml::AssociationRole ComponentFactoryRef::meta_dstDeploys_rev;
	::Uml::AssociationRole ComponentFactoryRef::meta_ref;

	Deploys::Deploys() {}
	Deploys::Deploys(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Deploys::Deploys(const Deploys &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Deploys::Deploys(Deploys &&master) : MgaObject(master) {};

	Deploys Deploys::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Deploys& Deploys::operator=(Deploys &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Deploys Deploys::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Deploys Deploys::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Deploys Deploys::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Deploys> Deploys::Instances() { return ::Udm::InstantiatedAttr< Deploys>(impl); }
	Deploys Deploys::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Deploys> Deploys::Derived() { return ::Udm::DerivedAttr< Deploys>(impl); }
	::Udm::ArchetypeAttr< Deploys> Deploys::Archetype() const { return ::Udm::ArchetypeAttr< Deploys>(impl); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> Deploys::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> Deploys::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentFactoryRef> Deploys::srcDeploys_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentFactoryRef>(impl, meta_srcDeploys_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> Deploys::dstDeploys_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_dstDeploys_end_); }
	void Deploys::Accept(Visitor &v) { v.Visit_Deploys(*this); }

	::Uml::Class Deploys::meta;
	::Uml::CompositionParentRole Deploys::meta_DeploymentPlan_parent;
	::Uml::AssociationRole Deploys::meta_srcDeploys_end_;
	::Uml::AssociationRole Deploys::meta_dstDeploys_end_;

	ComponentAssemblyReference::ComponentAssemblyReference() {}
	ComponentAssemblyReference::ComponentAssemblyReference(::Udm::ObjectImpl *impl) : CollocationGroupMember(impl),FTMonitorable(impl),ComponentAssemblyBase(impl), MgaObject(impl) {}
	ComponentAssemblyReference::ComponentAssemblyReference(const ComponentAssemblyReference &master) : CollocationGroupMember(master),FTMonitorable(master),ComponentAssemblyBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblyReference::ComponentAssemblyReference(ComponentAssemblyReference &&master) : CollocationGroupMember(master),FTMonitorable(master),ComponentAssemblyBase(master), MgaObject(master) {};

	ComponentAssemblyReference ComponentAssemblyReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblyReference& ComponentAssemblyReference::operator=(ComponentAssemblyReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblyReference ComponentAssemblyReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblyReference ComponentAssemblyReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblyReference ComponentAssemblyReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblyReference> ComponentAssemblyReference::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblyReference>(impl); }
	ComponentAssemblyReference ComponentAssemblyReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblyReference> ComponentAssemblyReference::Derived() { return ::Udm::DerivedAttr< ComponentAssemblyReference>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblyReference> ComponentAssemblyReference::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblyReference>(impl); }
	::Udm::PointerAttr< ComponentAssembly> ComponentAssemblyReference::ref() const { return ::Udm::PointerAttr< ComponentAssembly>(impl, meta_ref); }
	::Udm::AClassAssocAttr< OnAssemblyConn, AssemblyRule> ComponentAssemblyReference::srcOnAssemblyConn() const { return ::Udm::AClassAssocAttr< OnAssemblyConn, AssemblyRule>(impl, meta_srcOnAssemblyConn, meta_srcOnAssemblyConn_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentAssemblyReference::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::Policy> ComponentAssemblyReference::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssemblyReference::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAssemblyReference::Accept(Visitor &v) { v.Visit_ComponentAssemblyReference(*this); }

	::Uml::Class ComponentAssemblyReference::meta;
	::Uml::AssociationRole ComponentAssemblyReference::meta_ref;
	::Uml::AssociationRole ComponentAssemblyReference::meta_srcOnAssemblyConn;
	::Uml::AssociationRole ComponentAssemblyReference::meta_srcOnAssemblyConn_rev;
	::Uml::CompositionParentRole ComponentAssemblyReference::meta_ComponentAssembly_parent;
	::Uml::CompositionParentRole ComponentAssemblyReference::meta_Policy_parent;

	Bridge::Bridge() {}
	Bridge::Bridge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Bridge::Bridge(const Bridge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Bridge::Bridge(Bridge &&master) : MgaObject(master) {};

	Bridge Bridge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Bridge& Bridge::operator=(Bridge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Bridge Bridge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Bridge Bridge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Bridge Bridge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Bridge> Bridge::Instances() { return ::Udm::InstantiatedAttr< Bridge>(impl); }
	Bridge Bridge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Bridge> Bridge::Derived() { return ::Udm::DerivedAttr< Bridge>(impl); }
	::Udm::ArchetypeAttr< Bridge> Bridge::Archetype() const { return ::Udm::ArchetypeAttr< Bridge>(impl); }
	::Udm::StringAttr Bridge::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AClassAssocAttr< BridgeConnection, Interconnect> Bridge::srcBridgeConnection() const { return ::Udm::AClassAssocAttr< BridgeConnection, Interconnect>(impl, meta_srcBridgeConnection, meta_srcBridgeConnection_rev); }
	::Udm::ChildrenAttr< ::CQML::Resource> Bridge::Resource_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Bridge::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementSatisfier> Bridge::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Resource> Bridge::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Domain> Bridge::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> Bridge::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Bridge::Accept(Visitor &v) { v.Visit_Bridge(*this); }

	::Uml::Class Bridge::meta;
	::Uml::Attribute Bridge::meta_label;
	::Uml::AssociationRole Bridge::meta_srcBridgeConnection;
	::Uml::AssociationRole Bridge::meta_srcBridgeConnection_rev;
	::Uml::CompositionChildRole Bridge::meta_Resource_children;
	::Uml::CompositionParentRole Bridge::meta_Domain_parent;

	Interconnect::Interconnect() {}
	Interconnect::Interconnect(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Interconnect::Interconnect(const Interconnect &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Interconnect::Interconnect(Interconnect &&master) : MgaObject(master) {};

	Interconnect Interconnect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Interconnect& Interconnect::operator=(Interconnect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Interconnect Interconnect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Interconnect Interconnect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Interconnect Interconnect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Interconnect> Interconnect::Instances() { return ::Udm::InstantiatedAttr< Interconnect>(impl); }
	Interconnect Interconnect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Interconnect> Interconnect::Derived() { return ::Udm::DerivedAttr< Interconnect>(impl); }
	::Udm::ArchetypeAttr< Interconnect> Interconnect::Archetype() const { return ::Udm::ArchetypeAttr< Interconnect>(impl); }
	::Udm::StringAttr Interconnect::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AClassAssocAttr< BridgeConnection, Bridge> Interconnect::dstBridgeConnection() const { return ::Udm::AClassAssocAttr< BridgeConnection, Bridge>(impl, meta_dstBridgeConnection, meta_dstBridgeConnection_rev); }
	::Udm::AClassAssocAttr< InterconnectConnection, Node> Interconnect::srcInterconnectConnection() const { return ::Udm::AClassAssocAttr< InterconnectConnection, Node>(impl, meta_srcInterconnectConnection, meta_srcInterconnectConnection_rev); }
	::Udm::ChildrenAttr< ::CQML::Resource> Interconnect::Resource_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Interconnect::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementSatisfier> Interconnect::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Resource> Interconnect::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Domain> Interconnect::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> Interconnect::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Interconnect::Accept(Visitor &v) { v.Visit_Interconnect(*this); }

	::Uml::Class Interconnect::meta;
	::Uml::Attribute Interconnect::meta_label;
	::Uml::AssociationRole Interconnect::meta_dstBridgeConnection;
	::Uml::AssociationRole Interconnect::meta_dstBridgeConnection_rev;
	::Uml::AssociationRole Interconnect::meta_srcInterconnectConnection;
	::Uml::AssociationRole Interconnect::meta_srcInterconnectConnection_rev;
	::Uml::CompositionChildRole Interconnect::meta_Resource_children;
	::Uml::CompositionParentRole Interconnect::meta_Domain_parent;

	Node::Node() {}
	Node::Node(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Node::Node(const Node &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Node::Node(Node &&master) : MgaObject(master) {};

	Node Node::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Node& Node::operator=(Node &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Node Node::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Node Node::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Node Node::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Node> Node::Instances() { return ::Udm::InstantiatedAttr< Node>(impl); }
	Node Node::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Node> Node::Derived() { return ::Udm::DerivedAttr< Node>(impl); }
	::Udm::ArchetypeAttr< Node> Node::Archetype() const { return ::Udm::ArchetypeAttr< Node>(impl); }
	::Udm::StringAttr Node::operatingSystem() const { return ::Udm::StringAttr(impl, meta_operatingSystem); }
	::Udm::StringAttr Node::architecture() const { return ::Udm::StringAttr(impl, meta_architecture); }
	::Udm::StringAttr Node::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::AClassAssocAttr< Shares, SharedResource> Node::dstShares() const { return ::Udm::AClassAssocAttr< Shares, SharedResource>(impl, meta_dstShares, meta_dstShares_rev); }
	::Udm::AClassAssocAttr< InterconnectConnection, Interconnect> Node::dstInterconnectConnection() const { return ::Udm::AClassAssocAttr< InterconnectConnection, Interconnect>(impl, meta_dstInterconnectConnection, meta_dstInterconnectConnection_rev); }
	::Udm::AssocAttr< NodeReference> Node::referedbyNodeReference() const { return ::Udm::AssocAttr< NodeReference>(impl, meta_referedbyNodeReference); }
	::Udm::AssocAttr< HostReference> Node::referedbyHostReference() const { return ::Udm::AssocAttr< HostReference>(impl, meta_referedbyHostReference); }
	::Udm::ChildrenAttr< ::CQML::Resource> Node::Resource_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, meta_Resource_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Node::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequirementSatisfier> Node::RequirementSatisfier_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequirementSatisfier>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Resource> Node::Resource_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Resource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Domain> Node::Domain_parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, meta_Domain_parent); }
	::Udm::ParentAttr< ::CQML::Domain> Node::parent() const { return ::Udm::ParentAttr< ::CQML::Domain>(impl, ::Udm::NULLPARENTROLE); }
	void Node::Accept(Visitor &v) { v.Visit_Node(*this); }

	::Uml::Class Node::meta;
	::Uml::Attribute Node::meta_operatingSystem;
	::Uml::Attribute Node::meta_architecture;
	::Uml::Attribute Node::meta_label;
	::Uml::AssociationRole Node::meta_dstShares;
	::Uml::AssociationRole Node::meta_dstShares_rev;
	::Uml::AssociationRole Node::meta_dstInterconnectConnection;
	::Uml::AssociationRole Node::meta_dstInterconnectConnection_rev;
	::Uml::AssociationRole Node::meta_referedbyNodeReference;
	::Uml::AssociationRole Node::meta_referedbyHostReference;
	::Uml::CompositionChildRole Node::meta_Resource_children;
	::Uml::CompositionParentRole Node::meta_Domain_parent;

	NodeReference::NodeReference() {}
	NodeReference::NodeReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	NodeReference::NodeReference(const NodeReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	NodeReference::NodeReference(NodeReference &&master) : MgaObject(master) {};

	NodeReference NodeReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NodeReference& NodeReference::operator=(NodeReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NodeReference NodeReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NodeReference NodeReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NodeReference NodeReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NodeReference> NodeReference::Instances() { return ::Udm::InstantiatedAttr< NodeReference>(impl); }
	NodeReference NodeReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NodeReference> NodeReference::Derived() { return ::Udm::DerivedAttr< NodeReference>(impl); }
	::Udm::ArchetypeAttr< NodeReference> NodeReference::Archetype() const { return ::Udm::ArchetypeAttr< NodeReference>(impl); }
	::Udm::AClassAssocAttr< InstanceMapping, CollocationGroup> NodeReference::srcInstanceMapping() const { return ::Udm::AClassAssocAttr< InstanceMapping, CollocationGroup>(impl, meta_srcInstanceMapping, meta_srcInstanceMapping_rev); }
	::Udm::PointerAttr< Node> NodeReference::ref() const { return ::Udm::PointerAttr< Node>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> NodeReference::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> NodeReference::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void NodeReference::Accept(Visitor &v) { v.Visit_NodeReference(*this); }

	::Uml::Class NodeReference::meta;
	::Uml::AssociationRole NodeReference::meta_srcInstanceMapping;
	::Uml::AssociationRole NodeReference::meta_srcInstanceMapping_rev;
	::Uml::AssociationRole NodeReference::meta_ref;
	::Uml::CompositionParentRole NodeReference::meta_DeploymentPlan_parent;

	MetricConnection::MetricConnection() {}
	MetricConnection::MetricConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MetricConnection::MetricConnection(const MetricConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MetricConnection::MetricConnection(MetricConnection &&master) : MgaObject(master) {};

	MetricConnection MetricConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MetricConnection& MetricConnection::operator=(MetricConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MetricConnection MetricConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MetricConnection MetricConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MetricConnection MetricConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MetricConnection> MetricConnection::Instances() { return ::Udm::InstantiatedAttr< MetricConnection>(impl); }
	MetricConnection MetricConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MetricConnection> MetricConnection::Derived() { return ::Udm::DerivedAttr< MetricConnection>(impl); }
	::Udm::ArchetypeAttr< MetricConnection> MetricConnection::Archetype() const { return ::Udm::ArchetypeAttr< MetricConnection>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> MetricConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> MetricConnection::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OperationRef> MetricConnection::srcMetricConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::OperationRef>(impl, meta_srcMetricConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::MetricsBase> MetricConnection::dstMetricConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::MetricsBase>(impl, meta_dstMetricConnection_end_); }
	void MetricConnection::Accept(Visitor &v) { v.Visit_MetricConnection(*this); }

	::Uml::Class MetricConnection::meta;
	::Uml::CompositionParentRole MetricConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole MetricConnection::meta_srcMetricConnection_end_;
	::Uml::AssociationRole MetricConnection::meta_dstMetricConnection_end_;

	DataAnalysisBase::DataAnalysisBase() {}
	DataAnalysisBase::DataAnalysisBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DataAnalysisBase::DataAnalysisBase(const DataAnalysisBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DataAnalysisBase::DataAnalysisBase(DataAnalysisBase &&master) : MgaObject(master) {};

	DataAnalysisBase DataAnalysisBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DataAnalysisBase& DataAnalysisBase::operator=(DataAnalysisBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DataAnalysisBase DataAnalysisBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DataAnalysisBase DataAnalysisBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DataAnalysisBase DataAnalysisBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DataAnalysisBase> DataAnalysisBase::Instances() { return ::Udm::InstantiatedAttr< DataAnalysisBase>(impl); }
	DataAnalysisBase DataAnalysisBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DataAnalysisBase> DataAnalysisBase::Derived() { return ::Udm::DerivedAttr< DataAnalysisBase>(impl); }
	::Udm::ArchetypeAttr< DataAnalysisBase> DataAnalysisBase::Archetype() const { return ::Udm::ArchetypeAttr< DataAnalysisBase>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> DataAnalysisBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::MetricsBase> DataAnalysisBase::MetricsBase_parent() const { return ::Udm::ParentAttr< ::CQML::MetricsBase>(impl, meta_MetricsBase_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> DataAnalysisBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class DataAnalysisBase::meta;
	::Uml::CompositionParentRole DataAnalysisBase::meta_BenchmarkAnalysis_parent;
	::Uml::CompositionParentRole DataAnalysisBase::meta_MetricsBase_parent;

	Average::Average() {}
	Average::Average(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Average::Average(const Average &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Average::Average(Average &&master) : DataAnalysisBase(master) {};

	Average Average::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Average& Average::operator=(Average &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Average Average::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Average Average::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Average Average::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Average> Average::Instances() { return ::Udm::InstantiatedAttr< Average>(impl); }
	Average Average::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Average> Average::Derived() { return ::Udm::DerivedAttr< Average>(impl); }
	::Udm::ArchetypeAttr< Average> Average::Archetype() const { return ::Udm::ArchetypeAttr< Average>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> Average::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Average::Accept(Visitor &v) { v.Visit_Average(*this); }

	::Uml::Class Average::meta;

	Minimum::Minimum() {}
	Minimum::Minimum(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Minimum::Minimum(const Minimum &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Minimum::Minimum(Minimum &&master) : DataAnalysisBase(master) {};

	Minimum Minimum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Minimum& Minimum::operator=(Minimum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Minimum Minimum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Minimum Minimum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Minimum Minimum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Minimum> Minimum::Instances() { return ::Udm::InstantiatedAttr< Minimum>(impl); }
	Minimum Minimum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Minimum> Minimum::Derived() { return ::Udm::DerivedAttr< Minimum>(impl); }
	::Udm::ArchetypeAttr< Minimum> Minimum::Archetype() const { return ::Udm::ArchetypeAttr< Minimum>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> Minimum::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Minimum::Accept(Visitor &v) { v.Visit_Minimum(*this); }

	::Uml::Class Minimum::meta;

	Maximum::Maximum() {}
	Maximum::Maximum(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Maximum::Maximum(const Maximum &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Maximum::Maximum(Maximum &&master) : DataAnalysisBase(master) {};

	Maximum Maximum::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Maximum& Maximum::operator=(Maximum &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Maximum Maximum::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Maximum Maximum::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Maximum Maximum::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Maximum> Maximum::Instances() { return ::Udm::InstantiatedAttr< Maximum>(impl); }
	Maximum Maximum::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Maximum> Maximum::Derived() { return ::Udm::DerivedAttr< Maximum>(impl); }
	::Udm::ArchetypeAttr< Maximum> Maximum::Archetype() const { return ::Udm::ArchetypeAttr< Maximum>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> Maximum::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Maximum::Accept(Visitor &v) { v.Visit_Maximum(*this); }

	::Uml::Class Maximum::meta;

	Jitter::Jitter() {}
	Jitter::Jitter(::Udm::ObjectImpl *impl) : DataAnalysisBase(impl) {}
	Jitter::Jitter(const Jitter &master) : DataAnalysisBase(master) {}

#ifdef UDM_RVALUE
	Jitter::Jitter(Jitter &&master) : DataAnalysisBase(master) {};

	Jitter Jitter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Jitter& Jitter::operator=(Jitter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Jitter Jitter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Jitter Jitter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Jitter Jitter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Jitter> Jitter::Instances() { return ::Udm::InstantiatedAttr< Jitter>(impl); }
	Jitter Jitter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Jitter> Jitter::Derived() { return ::Udm::DerivedAttr< Jitter>(impl); }
	::Udm::ArchetypeAttr< Jitter> Jitter::Archetype() const { return ::Udm::ArchetypeAttr< Jitter>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> Jitter::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Jitter::Accept(Visitor &v) { v.Visit_Jitter(*this); }

	::Uml::Class Jitter::meta;

	TimeProbe::TimeProbe() {}
	TimeProbe::TimeProbe(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimeProbe::TimeProbe(const TimeProbe &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimeProbe::TimeProbe(TimeProbe &&master) : MgaObject(master) {};

	TimeProbe TimeProbe::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimeProbe& TimeProbe::operator=(TimeProbe &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimeProbe TimeProbe::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimeProbe TimeProbe::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimeProbe TimeProbe::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimeProbe> TimeProbe::Instances() { return ::Udm::InstantiatedAttr< TimeProbe>(impl); }
	TimeProbe TimeProbe::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimeProbe> TimeProbe::Derived() { return ::Udm::DerivedAttr< TimeProbe>(impl); }
	::Udm::ArchetypeAttr< TimeProbe> TimeProbe::Archetype() const { return ::Udm::ArchetypeAttr< TimeProbe>(impl); }
	::Udm::AClassPointerAttr< TimerConnection, OperationRef> TimeProbe::srcTimerConnection() const { return ::Udm::AClassPointerAttr< TimerConnection, OperationRef>(impl, meta_srcTimerConnection, meta_srcTimerConnection_rev); }
	::Udm::AClassPointerAttr< TimerEventSinkConn, EventRef> TimeProbe::srcTimerEventSinkConn() const { return ::Udm::AClassPointerAttr< TimerEventSinkConn, EventRef>(impl, meta_srcTimerEventSinkConn, meta_srcTimerEventSinkConn_rev); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimeProbe::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimeProbe::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TimeProbe::Accept(Visitor &v) { v.Visit_TimeProbe(*this); }

	::Uml::Class TimeProbe::meta;
	::Uml::AssociationRole TimeProbe::meta_srcTimerConnection;
	::Uml::AssociationRole TimeProbe::meta_srcTimerConnection_rev;
	::Uml::AssociationRole TimeProbe::meta_srcTimerEventSinkConn;
	::Uml::AssociationRole TimeProbe::meta_srcTimerEventSinkConn_rev;
	::Uml::CompositionParentRole TimeProbe::meta_BenchmarkAnalysis_parent;

	TimerConnection::TimerConnection() {}
	TimerConnection::TimerConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimerConnection::TimerConnection(const TimerConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimerConnection::TimerConnection(TimerConnection &&master) : MgaObject(master) {};

	TimerConnection TimerConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimerConnection& TimerConnection::operator=(TimerConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimerConnection TimerConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimerConnection TimerConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimerConnection TimerConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimerConnection> TimerConnection::Instances() { return ::Udm::InstantiatedAttr< TimerConnection>(impl); }
	TimerConnection TimerConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimerConnection> TimerConnection::Derived() { return ::Udm::DerivedAttr< TimerConnection>(impl); }
	::Udm::ArchetypeAttr< TimerConnection> TimerConnection::Archetype() const { return ::Udm::ArchetypeAttr< TimerConnection>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimerConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimerConnection::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OperationRef> TimerConnection::srcTimerConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::OperationRef>(impl, meta_srcTimerConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::TimeProbe> TimerConnection::dstTimerConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::TimeProbe>(impl, meta_dstTimerConnection_end_); }
	void TimerConnection::Accept(Visitor &v) { v.Visit_TimerConnection(*this); }

	::Uml::Class TimerConnection::meta;
	::Uml::CompositionParentRole TimerConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole TimerConnection::meta_srcTimerConnection_end_;
	::Uml::AssociationRole TimerConnection::meta_dstTimerConnection_end_;

	Latency::Latency() {}
	Latency::Latency(::Udm::ObjectImpl *impl) : MetricsBase(impl) {}
	Latency::Latency(const Latency &master) : MetricsBase(master) {}

#ifdef UDM_RVALUE
	Latency::Latency(Latency &&master) : MetricsBase(master) {};

	Latency Latency::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Latency& Latency::operator=(Latency &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Latency Latency::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Latency Latency::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Latency Latency::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Latency> Latency::Instances() { return ::Udm::InstantiatedAttr< Latency>(impl); }
	Latency Latency::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Latency> Latency::Derived() { return ::Udm::DerivedAttr< Latency>(impl); }
	::Udm::ArchetypeAttr< Latency> Latency::Archetype() const { return ::Udm::ArchetypeAttr< Latency>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> Latency::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Latency::Accept(Visitor &v) { v.Visit_Latency(*this); }

	::Uml::Class Latency::meta;

	MetricsBase::MetricsBase() {}
	MetricsBase::MetricsBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MetricsBase::MetricsBase(const MetricsBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MetricsBase::MetricsBase(MetricsBase &&master) : MgaObject(master) {};

	MetricsBase MetricsBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MetricsBase& MetricsBase::operator=(MetricsBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MetricsBase MetricsBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MetricsBase MetricsBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MetricsBase MetricsBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MetricsBase> MetricsBase::Instances() { return ::Udm::InstantiatedAttr< MetricsBase>(impl); }
	MetricsBase MetricsBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MetricsBase> MetricsBase::Derived() { return ::Udm::DerivedAttr< MetricsBase>(impl); }
	::Udm::ArchetypeAttr< MetricsBase> MetricsBase::Archetype() const { return ::Udm::ArchetypeAttr< MetricsBase>(impl); }
	::Udm::IntegerAttr MetricsBase::rate() const { return ::Udm::IntegerAttr(impl, meta_rate); }
	::Udm::StringAttr MetricsBase::resolution() const { return ::Udm::StringAttr(impl, meta_resolution); }
	::Udm::IntegerAttr MetricsBase::priority() const { return ::Udm::IntegerAttr(impl, meta_priority); }
	::Udm::IntegerAttr MetricsBase::iterations() const { return ::Udm::IntegerAttr(impl, meta_iterations); }
	::Udm::IntegerAttr MetricsBase::warmup() const { return ::Udm::IntegerAttr(impl, meta_warmup); }
	::Udm::StringAttr MetricsBase::fileName() const { return ::Udm::StringAttr(impl, meta_fileName); }
	::Udm::AClassPointerAttr< WorkloadCharacteristics, TaskSet> MetricsBase::dstWorkloadCharacteristics() const { return ::Udm::AClassPointerAttr< WorkloadCharacteristics, TaskSet>(impl, meta_dstWorkloadCharacteristics, meta_dstWorkloadCharacteristics_rev); }
	::Udm::AClassPointerAttr< MetricConnection, OperationRef> MetricsBase::srcMetricConnection() const { return ::Udm::AClassPointerAttr< MetricConnection, OperationRef>(impl, meta_srcMetricConnection, meta_srcMetricConnection_rev); }
	::Udm::AClassPointerAttr< BenchmarkCharacteristics, BenchmarkType> MetricsBase::srcBenchmarkCharacteristics() const { return ::Udm::AClassPointerAttr< BenchmarkCharacteristics, BenchmarkType>(impl, meta_srcBenchmarkCharacteristics, meta_srcBenchmarkCharacteristics_rev); }
	::Udm::ChildrenAttr< ::CQML::DataAnalysisBase> MetricsBase::DataAnalysisBase_children() const { return ::Udm::ChildrenAttr< ::CQML::DataAnalysisBase>(impl, meta_DataAnalysisBase_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> MetricsBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DataAnalysisBase> MetricsBase::DataAnalysisBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DataAnalysisBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Average> MetricsBase::Average_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Average>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Minimum> MetricsBase::Minimum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Minimum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Maximum> MetricsBase::Maximum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Maximum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Jitter> MetricsBase::Jitter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Jitter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> MetricsBase::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> MetricsBase::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class MetricsBase::meta;
	::Uml::Attribute MetricsBase::meta_rate;
	::Uml::Attribute MetricsBase::meta_resolution;
	::Uml::Attribute MetricsBase::meta_priority;
	::Uml::Attribute MetricsBase::meta_iterations;
	::Uml::Attribute MetricsBase::meta_warmup;
	::Uml::Attribute MetricsBase::meta_fileName;
	::Uml::AssociationRole MetricsBase::meta_dstWorkloadCharacteristics;
	::Uml::AssociationRole MetricsBase::meta_dstWorkloadCharacteristics_rev;
	::Uml::AssociationRole MetricsBase::meta_srcMetricConnection;
	::Uml::AssociationRole MetricsBase::meta_srcMetricConnection_rev;
	::Uml::AssociationRole MetricsBase::meta_srcBenchmarkCharacteristics;
	::Uml::AssociationRole MetricsBase::meta_srcBenchmarkCharacteristics_rev;
	::Uml::CompositionChildRole MetricsBase::meta_DataAnalysisBase_children;
	::Uml::CompositionParentRole MetricsBase::meta_BenchmarkAnalysis_parent;

	Throughput::Throughput() {}
	Throughput::Throughput(::Udm::ObjectImpl *impl) : MetricsBase(impl) {}
	Throughput::Throughput(const Throughput &master) : MetricsBase(master) {}

#ifdef UDM_RVALUE
	Throughput::Throughput(Throughput &&master) : MetricsBase(master) {};

	Throughput Throughput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Throughput& Throughput::operator=(Throughput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Throughput Throughput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Throughput Throughput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Throughput Throughput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Throughput> Throughput::Instances() { return ::Udm::InstantiatedAttr< Throughput>(impl); }
	Throughput Throughput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Throughput> Throughput::Derived() { return ::Udm::DerivedAttr< Throughput>(impl); }
	::Udm::ArchetypeAttr< Throughput> Throughput::Archetype() const { return ::Udm::ArchetypeAttr< Throughput>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> Throughput::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Throughput::Accept(Visitor &v) { v.Visit_Throughput(*this); }

	::Uml::Class Throughput::meta;

	BenchmarkAnalysis::BenchmarkAnalysis() {}
	BenchmarkAnalysis::BenchmarkAnalysis(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkAnalysis::BenchmarkAnalysis(const BenchmarkAnalysis &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkAnalysis::BenchmarkAnalysis(BenchmarkAnalysis &&master) : MgaObject(master) {};

	BenchmarkAnalysis BenchmarkAnalysis::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkAnalysis& BenchmarkAnalysis::operator=(BenchmarkAnalysis &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkAnalysis BenchmarkAnalysis::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkAnalysis BenchmarkAnalysis::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkAnalysis BenchmarkAnalysis::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkAnalysis> BenchmarkAnalysis::Instances() { return ::Udm::InstantiatedAttr< BenchmarkAnalysis>(impl); }
	BenchmarkAnalysis BenchmarkAnalysis::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkAnalysis> BenchmarkAnalysis::Derived() { return ::Udm::DerivedAttr< BenchmarkAnalysis>(impl); }
	::Udm::ArchetypeAttr< BenchmarkAnalysis> BenchmarkAnalysis::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkAnalysis>(impl); }
	::Udm::ChildrenAttr< ::CQML::OperationBase> BenchmarkAnalysis::OperationBase_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationBase>(impl, meta_OperationBase_children); }
	::Udm::ChildrenAttr< ::CQML::TimerConnection> BenchmarkAnalysis::TimerConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::TimerConnection>(impl, meta_TimerConnection_children); }
	::Udm::ChildrenAttr< ::CQML::MetricConnection> BenchmarkAnalysis::MetricConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::MetricConnection>(impl, meta_MetricConnection_children); }
	::Udm::ChildrenAttr< ::CQML::DataAnalysisBase> BenchmarkAnalysis::DataAnalysisBase_children() const { return ::Udm::ChildrenAttr< ::CQML::DataAnalysisBase>(impl, meta_DataAnalysisBase_children); }
	::Udm::ChildrenAttr< ::CQML::MetricsBase> BenchmarkAnalysis::MetricsBase_children() const { return ::Udm::ChildrenAttr< ::CQML::MetricsBase>(impl, meta_MetricsBase_children); }
	::Udm::ChildrenAttr< ::CQML::TimeProbe> BenchmarkAnalysis::TimeProbe_children() const { return ::Udm::ChildrenAttr< ::CQML::TimeProbe>(impl, meta_TimeProbe_children); }
	::Udm::ChildrenAttr< ::CQML::OperationRef> BenchmarkAnalysis::OperationRef_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationRef>(impl, meta_OperationRef_children); }
	::Udm::ChildrenAttr< ::CQML::EventRef> BenchmarkAnalysis::EventRef_children() const { return ::Udm::ChildrenAttr< ::CQML::EventRef>(impl, meta_EventRef_children); }
	::Udm::ChildrenAttr< ::CQML::Event> BenchmarkAnalysis::Event_children() const { return ::Udm::ChildrenAttr< ::CQML::Event>(impl, meta_Event_children); }
	::Udm::ChildrenAttr< ::CQML::TimerEventSinkConn> BenchmarkAnalysis::TimerEventSinkConn_children() const { return ::Udm::ChildrenAttr< ::CQML::TimerEventSinkConn>(impl, meta_TimerEventSinkConn_children); }
	::Udm::ChildrenAttr< ::CQML::TaskSet> BenchmarkAnalysis::TaskSet_children() const { return ::Udm::ChildrenAttr< ::CQML::TaskSet>(impl, meta_TaskSet_children); }
	::Udm::ChildrenAttr< ::CQML::Task> BenchmarkAnalysis::Task_children() const { return ::Udm::ChildrenAttr< ::CQML::Task>(impl, meta_Task_children); }
	::Udm::ChildrenAttr< ::CQML::WorkloadCharacteristics> BenchmarkAnalysis::WorkloadCharacteristics_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkloadCharacteristics>(impl, meta_WorkloadCharacteristics_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentOperation> BenchmarkAnalysis::ComponentOperation_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentOperation>(impl, meta_ComponentOperation_children); }
	::Udm::ChildrenAttr< ::CQML::CompRef> BenchmarkAnalysis::CompRef_children() const { return ::Udm::ChildrenAttr< ::CQML::CompRef>(impl, meta_CompRef_children); }
	::Udm::ChildrenAttr< ::CQML::WorkLoadOperationConnection> BenchmarkAnalysis::WorkLoadOperationConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkLoadOperationConnection>(impl, meta_WorkLoadOperationConnection_children); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkType> BenchmarkAnalysis::BenchmarkType_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkType>(impl, meta_BenchmarkType_children); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkCharacteristics> BenchmarkAnalysis::BenchmarkCharacteristics_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkCharacteristics>(impl, meta_BenchmarkCharacteristics_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> BenchmarkAnalysis::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Prefixable> BenchmarkAnalysis::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> BenchmarkAnalysis::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> BenchmarkAnalysis::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::NamedType> BenchmarkAnalysis::NamedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::NamedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Inheritable> BenchmarkAnalysis::Inheritable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Inheritable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasOperations> BenchmarkAnalysis::HasOperations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasOperations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Event> BenchmarkAnalysis::Event_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Event>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ObjectByValue> BenchmarkAnalysis::ObjectByValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ObjectByValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ExternalPortReferenceType> BenchmarkAnalysis::ExternalPortReferenceType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ExternalPortReferenceType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SupportsInterfaces> BenchmarkAnalysis::SupportsInterfaces_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SupportsInterfaces>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationBase> BenchmarkAnalysis::OperationBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HasExceptions> BenchmarkAnalysis::HasExceptions_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HasExceptions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OnewayOperation> BenchmarkAnalysis::OnewayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OnewayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FactoryOperation> BenchmarkAnalysis::FactoryOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FactoryOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LookupOperation> BenchmarkAnalysis::LookupOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LookupOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TwowayOperation> BenchmarkAnalysis::TwowayOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TwowayOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MetricConnection> BenchmarkAnalysis::MetricConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MetricConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DataAnalysisBase> BenchmarkAnalysis::DataAnalysisBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DataAnalysisBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Average> BenchmarkAnalysis::Average_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Average>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Minimum> BenchmarkAnalysis::Minimum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Minimum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Maximum> BenchmarkAnalysis::Maximum_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Maximum>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Jitter> BenchmarkAnalysis::Jitter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Jitter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TimeProbe> BenchmarkAnalysis::TimeProbe_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TimeProbe>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TimerConnection> BenchmarkAnalysis::TimerConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TimerConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Latency> BenchmarkAnalysis::Latency_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Latency>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MetricsBase> BenchmarkAnalysis::MetricsBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MetricsBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Throughput> BenchmarkAnalysis::Throughput_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Throughput>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationRef> BenchmarkAnalysis::OperationRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> BenchmarkAnalysis::ResourceActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventRef> BenchmarkAnalysis::EventRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TimerEventSinkConn> BenchmarkAnalysis::TimerEventSinkConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TimerEventSinkConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TaskSet> BenchmarkAnalysis::TaskSet_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TaskSet>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Task> BenchmarkAnalysis::Task_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Task>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkloadCharacteristics> BenchmarkAnalysis::WorkloadCharacteristics_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkloadCharacteristics>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentOperation> BenchmarkAnalysis::ComponentOperation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentOperation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CompRef> BenchmarkAnalysis::CompRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CompRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkLoadOperationConnection> BenchmarkAnalysis::WorkLoadOperationConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkLoadOperationConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkType> BenchmarkAnalysis::BenchmarkType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TriggerBenchmarks> BenchmarkAnalysis::TriggerBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TriggerBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PeriodicBenchmarks> BenchmarkAnalysis::PeriodicBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PeriodicBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FixedIterationBenchmarks> BenchmarkAnalysis::FixedIterationBenchmarks_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FixedIterationBenchmarks>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkCharacteristics> BenchmarkAnalysis::BenchmarkCharacteristics_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkCharacteristics>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAnalyses> BenchmarkAnalysis::ComponentAnalyses_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAnalyses>(impl, meta_ComponentAnalyses_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAnalyses> BenchmarkAnalysis::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAnalyses>(impl, ::Udm::NULLPARENTROLE); }
	void BenchmarkAnalysis::Accept(Visitor &v) { v.Visit_BenchmarkAnalysis(*this); }

	::Uml::Class BenchmarkAnalysis::meta;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_OperationBase_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimerConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_MetricConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_DataAnalysisBase_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_MetricsBase_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimeProbe_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_OperationRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_EventRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_Event_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TimerEventSinkConn_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_TaskSet_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_Task_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_WorkloadCharacteristics_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_ComponentOperation_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_CompRef_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_WorkLoadOperationConnection_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_BenchmarkType_children;
	::Uml::CompositionChildRole BenchmarkAnalysis::meta_BenchmarkCharacteristics_children;
	::Uml::CompositionParentRole BenchmarkAnalysis::meta_ComponentAnalyses_parent;

	OperationRef::OperationRef() {}
	OperationRef::OperationRef(::Udm::ObjectImpl *impl) : ResourceActionBase(impl), MgaObject(impl) {}
	OperationRef::OperationRef(const OperationRef &master) : ResourceActionBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationRef::OperationRef(OperationRef &&master) : ResourceActionBase(master), MgaObject(master) {};

	OperationRef OperationRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationRef& OperationRef::operator=(OperationRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationRef OperationRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationRef OperationRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationRef OperationRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationRef> OperationRef::Instances() { return ::Udm::InstantiatedAttr< OperationRef>(impl); }
	OperationRef OperationRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationRef> OperationRef::Derived() { return ::Udm::DerivedAttr< OperationRef>(impl); }
	::Udm::ArchetypeAttr< OperationRef> OperationRef::Archetype() const { return ::Udm::ArchetypeAttr< OperationRef>(impl); }
	::Udm::AClassPointerAttr< MetricConnection, MetricsBase> OperationRef::dstMetricConnection() const { return ::Udm::AClassPointerAttr< MetricConnection, MetricsBase>(impl, meta_dstMetricConnection, meta_dstMetricConnection_rev); }
	::Udm::AClassPointerAttr< TimerConnection, TimeProbe> OperationRef::dstTimerConnection() const { return ::Udm::AClassPointerAttr< TimerConnection, TimeProbe>(impl, meta_dstTimerConnection, meta_dstTimerConnection_rev); }
	::Udm::AClassPointerAttr< ComponentOperation, CompRef> OperationRef::dstComponentOperation() const { return ::Udm::AClassPointerAttr< ComponentOperation, CompRef>(impl, meta_dstComponentOperation, meta_dstComponentOperation_rev); }
	::Udm::AClassPointerAttr< WorkLoadOperationConnection, Task> OperationRef::dstWorkLoadOperationConnection() const { return ::Udm::AClassPointerAttr< WorkLoadOperationConnection, Task>(impl, meta_dstWorkLoadOperationConnection, meta_dstWorkLoadOperationConnection_rev); }
	::Udm::PointerAttr< OperationBase> OperationRef::ref() const { return ::Udm::PointerAttr< OperationBase>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> OperationRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::OperationSet> OperationRef::OperationSet_parent() const { return ::Udm::ParentAttr< ::CQML::OperationSet>(impl, meta_OperationSet_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> OperationRef::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void OperationRef::Accept(Visitor &v) { v.Visit_OperationRef(*this); }

	::Uml::Class OperationRef::meta;
	::Uml::AssociationRole OperationRef::meta_dstMetricConnection;
	::Uml::AssociationRole OperationRef::meta_dstMetricConnection_rev;
	::Uml::AssociationRole OperationRef::meta_dstTimerConnection;
	::Uml::AssociationRole OperationRef::meta_dstTimerConnection_rev;
	::Uml::AssociationRole OperationRef::meta_dstComponentOperation;
	::Uml::AssociationRole OperationRef::meta_dstComponentOperation_rev;
	::Uml::AssociationRole OperationRef::meta_dstWorkLoadOperationConnection;
	::Uml::AssociationRole OperationRef::meta_dstWorkLoadOperationConnection_rev;
	::Uml::AssociationRole OperationRef::meta_ref;
	::Uml::CompositionParentRole OperationRef::meta_BenchmarkAnalysis_parent;
	::Uml::CompositionParentRole OperationRef::meta_OperationSet_parent;

	ResourceActionBase::ResourceActionBase() {}
	ResourceActionBase::ResourceActionBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ResourceActionBase::ResourceActionBase(const ResourceActionBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ResourceActionBase::ResourceActionBase(ResourceActionBase &&master) : MgaObject(master) {};

	ResourceActionBase ResourceActionBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ResourceActionBase& ResourceActionBase::operator=(ResourceActionBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ResourceActionBase ResourceActionBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ResourceActionBase ResourceActionBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ResourceActionBase ResourceActionBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ResourceActionBase> ResourceActionBase::Instances() { return ::Udm::InstantiatedAttr< ResourceActionBase>(impl); }
	ResourceActionBase ResourceActionBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ResourceActionBase> ResourceActionBase::Derived() { return ::Udm::DerivedAttr< ResourceActionBase>(impl); }
	::Udm::ArchetypeAttr< ResourceActionBase> ResourceActionBase::Archetype() const { return ::Udm::ArchetypeAttr< ResourceActionBase>(impl); }
	::Udm::AClassAssocAttr< OperationInvokeConn, PortRule> ResourceActionBase::srcOperationInvokeConn() const { return ::Udm::AClassAssocAttr< OperationInvokeConn, PortRule>(impl, meta_srcOperationInvokeConn, meta_srcOperationInvokeConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> ResourceActionBase::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ResourceActionBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ResourceActionBase::meta;
	::Uml::AssociationRole ResourceActionBase::meta_srcOperationInvokeConn;
	::Uml::AssociationRole ResourceActionBase::meta_srcOperationInvokeConn_rev;
	::Uml::CompositionParentRole ResourceActionBase::meta_Policy_parent;

	EventRef::EventRef() {}
	EventRef::EventRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventRef::EventRef(const EventRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventRef::EventRef(EventRef &&master) : MgaObject(master) {};

	EventRef EventRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventRef& EventRef::operator=(EventRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventRef EventRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventRef EventRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventRef EventRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventRef> EventRef::Instances() { return ::Udm::InstantiatedAttr< EventRef>(impl); }
	EventRef EventRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventRef> EventRef::Derived() { return ::Udm::DerivedAttr< EventRef>(impl); }
	::Udm::ArchetypeAttr< EventRef> EventRef::Archetype() const { return ::Udm::ArchetypeAttr< EventRef>(impl); }
	::Udm::AClassAssocAttr< TimerEventSinkConn, TimeProbe> EventRef::dstTimerEventSinkConn() const { return ::Udm::AClassAssocAttr< TimerEventSinkConn, TimeProbe>(impl, meta_dstTimerEventSinkConn, meta_dstTimerEventSinkConn_rev); }
	::Udm::PointerAttr< Event> EventRef::ref() const { return ::Udm::PointerAttr< Event>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> EventRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> EventRef::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void EventRef::Accept(Visitor &v) { v.Visit_EventRef(*this); }

	::Uml::Class EventRef::meta;
	::Uml::AssociationRole EventRef::meta_dstTimerEventSinkConn;
	::Uml::AssociationRole EventRef::meta_dstTimerEventSinkConn_rev;
	::Uml::AssociationRole EventRef::meta_ref;
	::Uml::CompositionParentRole EventRef::meta_BenchmarkAnalysis_parent;

	TimerEventSinkConn::TimerEventSinkConn() {}
	TimerEventSinkConn::TimerEventSinkConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TimerEventSinkConn::TimerEventSinkConn(const TimerEventSinkConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TimerEventSinkConn::TimerEventSinkConn(TimerEventSinkConn &&master) : MgaObject(master) {};

	TimerEventSinkConn TimerEventSinkConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TimerEventSinkConn& TimerEventSinkConn::operator=(TimerEventSinkConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TimerEventSinkConn TimerEventSinkConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TimerEventSinkConn TimerEventSinkConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TimerEventSinkConn TimerEventSinkConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TimerEventSinkConn> TimerEventSinkConn::Instances() { return ::Udm::InstantiatedAttr< TimerEventSinkConn>(impl); }
	TimerEventSinkConn TimerEventSinkConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TimerEventSinkConn> TimerEventSinkConn::Derived() { return ::Udm::DerivedAttr< TimerEventSinkConn>(impl); }
	::Udm::ArchetypeAttr< TimerEventSinkConn> TimerEventSinkConn::Archetype() const { return ::Udm::ArchetypeAttr< TimerEventSinkConn>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimerEventSinkConn::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TimerEventSinkConn::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::EventRef> TimerEventSinkConn::srcTimerEventSinkConn_end() const { return ::Udm::AssocEndAttr< ::CQML::EventRef>(impl, meta_srcTimerEventSinkConn_end_); }
	::Udm::AssocEndAttr< ::CQML::TimeProbe> TimerEventSinkConn::dstTimerEventSinkConn_end() const { return ::Udm::AssocEndAttr< ::CQML::TimeProbe>(impl, meta_dstTimerEventSinkConn_end_); }
	void TimerEventSinkConn::Accept(Visitor &v) { v.Visit_TimerEventSinkConn(*this); }

	::Uml::Class TimerEventSinkConn::meta;
	::Uml::CompositionParentRole TimerEventSinkConn::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole TimerEventSinkConn::meta_srcTimerEventSinkConn_end_;
	::Uml::AssociationRole TimerEventSinkConn::meta_dstTimerEventSinkConn_end_;

	TaskSet::TaskSet() {}
	TaskSet::TaskSet(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TaskSet::TaskSet(const TaskSet &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TaskSet::TaskSet(TaskSet &&master) : MgaObject(master) {};

	TaskSet TaskSet::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TaskSet& TaskSet::operator=(TaskSet &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TaskSet TaskSet::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TaskSet TaskSet::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TaskSet TaskSet::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TaskSet> TaskSet::Instances() { return ::Udm::InstantiatedAttr< TaskSet>(impl); }
	TaskSet TaskSet::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TaskSet> TaskSet::Derived() { return ::Udm::DerivedAttr< TaskSet>(impl); }
	::Udm::ArchetypeAttr< TaskSet> TaskSet::Archetype() const { return ::Udm::ArchetypeAttr< TaskSet>(impl); }
	::Udm::IntegerAttr TaskSet::priority() const { return ::Udm::IntegerAttr(impl, meta_priority); }
	::Udm::IntegerAttr TaskSet::rate() const { return ::Udm::IntegerAttr(impl, meta_rate); }
	::Udm::AClassPointerAttr< WorkloadCharacteristics, MetricsBase> TaskSet::srcWorkloadCharacteristics() const { return ::Udm::AClassPointerAttr< WorkloadCharacteristics, MetricsBase>(impl, meta_srcWorkloadCharacteristics, meta_srcWorkloadCharacteristics_rev); }
	::Udm::AssocAttr< Task> TaskSet::members() const { return ::Udm::AssocAttr< Task>(impl, meta_members); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TaskSet::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TaskSet::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TaskSet::Accept(Visitor &v) { v.Visit_TaskSet(*this); }

	::Uml::Class TaskSet::meta;
	::Uml::Attribute TaskSet::meta_priority;
	::Uml::Attribute TaskSet::meta_rate;
	::Uml::AssociationRole TaskSet::meta_srcWorkloadCharacteristics;
	::Uml::AssociationRole TaskSet::meta_srcWorkloadCharacteristics_rev;
	::Uml::AssociationRole TaskSet::meta_members;
	::Uml::CompositionParentRole TaskSet::meta_BenchmarkAnalysis_parent;

	Task::Task() {}
	Task::Task(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Task::Task(const Task &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Task::Task(Task &&master) : MgaObject(master) {};

	Task Task::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Task& Task::operator=(Task &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Task Task::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Task Task::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Task Task::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Task> Task::Instances() { return ::Udm::InstantiatedAttr< Task>(impl); }
	Task Task::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Task> Task::Derived() { return ::Udm::DerivedAttr< Task>(impl); }
	::Udm::ArchetypeAttr< Task> Task::Archetype() const { return ::Udm::ArchetypeAttr< Task>(impl); }
	::Udm::AClassPointerAttr< WorkLoadOperationConnection, OperationRef> Task::srcWorkLoadOperationConnection() const { return ::Udm::AClassPointerAttr< WorkLoadOperationConnection, OperationRef>(impl, meta_srcWorkLoadOperationConnection, meta_srcWorkLoadOperationConnection_rev); }
	::Udm::AssocAttr< TaskSet> Task::setTaskSet() const { return ::Udm::AssocAttr< TaskSet>(impl, meta_setTaskSet); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> Task::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> Task::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void Task::Accept(Visitor &v) { v.Visit_Task(*this); }

	::Uml::Class Task::meta;
	::Uml::AssociationRole Task::meta_srcWorkLoadOperationConnection;
	::Uml::AssociationRole Task::meta_srcWorkLoadOperationConnection_rev;
	::Uml::AssociationRole Task::meta_setTaskSet;
	::Uml::CompositionParentRole Task::meta_BenchmarkAnalysis_parent;

	WorkloadCharacteristics::WorkloadCharacteristics() {}
	WorkloadCharacteristics::WorkloadCharacteristics(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkloadCharacteristics::WorkloadCharacteristics(const WorkloadCharacteristics &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkloadCharacteristics::WorkloadCharacteristics(WorkloadCharacteristics &&master) : MgaObject(master) {};

	WorkloadCharacteristics WorkloadCharacteristics::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkloadCharacteristics& WorkloadCharacteristics::operator=(WorkloadCharacteristics &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkloadCharacteristics WorkloadCharacteristics::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkloadCharacteristics WorkloadCharacteristics::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkloadCharacteristics WorkloadCharacteristics::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkloadCharacteristics> WorkloadCharacteristics::Instances() { return ::Udm::InstantiatedAttr< WorkloadCharacteristics>(impl); }
	WorkloadCharacteristics WorkloadCharacteristics::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkloadCharacteristics> WorkloadCharacteristics::Derived() { return ::Udm::DerivedAttr< WorkloadCharacteristics>(impl); }
	::Udm::ArchetypeAttr< WorkloadCharacteristics> WorkloadCharacteristics::Archetype() const { return ::Udm::ArchetypeAttr< WorkloadCharacteristics>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> WorkloadCharacteristics::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> WorkloadCharacteristics::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::MetricsBase> WorkloadCharacteristics::srcWorkloadCharacteristics_end() const { return ::Udm::AssocEndAttr< ::CQML::MetricsBase>(impl, meta_srcWorkloadCharacteristics_end_); }
	::Udm::AssocEndAttr< ::CQML::TaskSet> WorkloadCharacteristics::dstWorkloadCharacteristics_end() const { return ::Udm::AssocEndAttr< ::CQML::TaskSet>(impl, meta_dstWorkloadCharacteristics_end_); }
	void WorkloadCharacteristics::Accept(Visitor &v) { v.Visit_WorkloadCharacteristics(*this); }

	::Uml::Class WorkloadCharacteristics::meta;
	::Uml::CompositionParentRole WorkloadCharacteristics::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_;
	::Uml::AssociationRole WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_;

	ComponentOperation::ComponentOperation() {}
	ComponentOperation::ComponentOperation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentOperation::ComponentOperation(const ComponentOperation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentOperation::ComponentOperation(ComponentOperation &&master) : MgaObject(master) {};

	ComponentOperation ComponentOperation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentOperation& ComponentOperation::operator=(ComponentOperation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentOperation ComponentOperation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentOperation ComponentOperation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentOperation ComponentOperation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentOperation> ComponentOperation::Instances() { return ::Udm::InstantiatedAttr< ComponentOperation>(impl); }
	ComponentOperation ComponentOperation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentOperation> ComponentOperation::Derived() { return ::Udm::DerivedAttr< ComponentOperation>(impl); }
	::Udm::ArchetypeAttr< ComponentOperation> ComponentOperation::Archetype() const { return ::Udm::ArchetypeAttr< ComponentOperation>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> ComponentOperation::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> ComponentOperation::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OperationRef> ComponentOperation::srcComponentOperation_end() const { return ::Udm::AssocEndAttr< ::CQML::OperationRef>(impl, meta_srcComponentOperation_end_); }
	::Udm::AssocEndAttr< ::CQML::CompRef> ComponentOperation::dstComponentOperation_end() const { return ::Udm::AssocEndAttr< ::CQML::CompRef>(impl, meta_dstComponentOperation_end_); }
	void ComponentOperation::Accept(Visitor &v) { v.Visit_ComponentOperation(*this); }

	::Uml::Class ComponentOperation::meta;
	::Uml::CompositionParentRole ComponentOperation::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole ComponentOperation::meta_srcComponentOperation_end_;
	::Uml::AssociationRole ComponentOperation::meta_dstComponentOperation_end_;

	CompRef::CompRef() {}
	CompRef::CompRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	CompRef::CompRef(const CompRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	CompRef::CompRef(CompRef &&master) : MgaObject(master) {};

	CompRef CompRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CompRef& CompRef::operator=(CompRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CompRef CompRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CompRef CompRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CompRef CompRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CompRef> CompRef::Instances() { return ::Udm::InstantiatedAttr< CompRef>(impl); }
	CompRef CompRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CompRef> CompRef::Derived() { return ::Udm::DerivedAttr< CompRef>(impl); }
	::Udm::ArchetypeAttr< CompRef> CompRef::Archetype() const { return ::Udm::ArchetypeAttr< CompRef>(impl); }
	::Udm::AClassPointerAttr< ComponentOperation, OperationRef> CompRef::srcComponentOperation() const { return ::Udm::AClassPointerAttr< ComponentOperation, OperationRef>(impl, meta_srcComponentOperation, meta_srcComponentOperation_rev); }
	::Udm::PointerAttr< Component> CompRef::ref() const { return ::Udm::PointerAttr< Component>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> CompRef::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> CompRef::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void CompRef::Accept(Visitor &v) { v.Visit_CompRef(*this); }

	::Uml::Class CompRef::meta;
	::Uml::AssociationRole CompRef::meta_srcComponentOperation;
	::Uml::AssociationRole CompRef::meta_srcComponentOperation_rev;
	::Uml::AssociationRole CompRef::meta_ref;
	::Uml::CompositionParentRole CompRef::meta_BenchmarkAnalysis_parent;

	WorkLoadOperationConnection::WorkLoadOperationConnection() {}
	WorkLoadOperationConnection::WorkLoadOperationConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkLoadOperationConnection::WorkLoadOperationConnection(const WorkLoadOperationConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkLoadOperationConnection::WorkLoadOperationConnection(WorkLoadOperationConnection &&master) : MgaObject(master) {};

	WorkLoadOperationConnection WorkLoadOperationConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkLoadOperationConnection& WorkLoadOperationConnection::operator=(WorkLoadOperationConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkLoadOperationConnection WorkLoadOperationConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkLoadOperationConnection WorkLoadOperationConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkLoadOperationConnection WorkLoadOperationConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Instances() { return ::Udm::InstantiatedAttr< WorkLoadOperationConnection>(impl); }
	WorkLoadOperationConnection WorkLoadOperationConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Derived() { return ::Udm::DerivedAttr< WorkLoadOperationConnection>(impl); }
	::Udm::ArchetypeAttr< WorkLoadOperationConnection> WorkLoadOperationConnection::Archetype() const { return ::Udm::ArchetypeAttr< WorkLoadOperationConnection>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> WorkLoadOperationConnection::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> WorkLoadOperationConnection::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OperationRef> WorkLoadOperationConnection::srcWorkLoadOperationConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::OperationRef>(impl, meta_srcWorkLoadOperationConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::Task> WorkLoadOperationConnection::dstWorkLoadOperationConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::Task>(impl, meta_dstWorkLoadOperationConnection_end_); }
	void WorkLoadOperationConnection::Accept(Visitor &v) { v.Visit_WorkLoadOperationConnection(*this); }

	::Uml::Class WorkLoadOperationConnection::meta;
	::Uml::CompositionParentRole WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_;
	::Uml::AssociationRole WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_;

	BenchmarkType::BenchmarkType() {}
	BenchmarkType::BenchmarkType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkType::BenchmarkType(const BenchmarkType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkType::BenchmarkType(BenchmarkType &&master) : MgaObject(master) {};

	BenchmarkType BenchmarkType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkType& BenchmarkType::operator=(BenchmarkType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkType BenchmarkType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkType BenchmarkType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkType BenchmarkType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkType> BenchmarkType::Instances() { return ::Udm::InstantiatedAttr< BenchmarkType>(impl); }
	BenchmarkType BenchmarkType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkType> BenchmarkType::Derived() { return ::Udm::DerivedAttr< BenchmarkType>(impl); }
	::Udm::ArchetypeAttr< BenchmarkType> BenchmarkType::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkType>(impl); }
	::Udm::AClassPointerAttr< BenchmarkCharacteristics, MetricsBase> BenchmarkType::dstBenchmarkCharacteristics() const { return ::Udm::AClassPointerAttr< BenchmarkCharacteristics, MetricsBase>(impl, meta_dstBenchmarkCharacteristics, meta_dstBenchmarkCharacteristics_rev); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> BenchmarkType::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> BenchmarkType::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BenchmarkType::meta;
	::Uml::AssociationRole BenchmarkType::meta_dstBenchmarkCharacteristics;
	::Uml::AssociationRole BenchmarkType::meta_dstBenchmarkCharacteristics_rev;
	::Uml::CompositionParentRole BenchmarkType::meta_BenchmarkAnalysis_parent;

	TriggerBenchmarks::TriggerBenchmarks() {}
	TriggerBenchmarks::TriggerBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	TriggerBenchmarks::TriggerBenchmarks(const TriggerBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	TriggerBenchmarks::TriggerBenchmarks(TriggerBenchmarks &&master) : BenchmarkType(master) {};

	TriggerBenchmarks TriggerBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TriggerBenchmarks& TriggerBenchmarks::operator=(TriggerBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TriggerBenchmarks TriggerBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TriggerBenchmarks TriggerBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TriggerBenchmarks TriggerBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TriggerBenchmarks> TriggerBenchmarks::Instances() { return ::Udm::InstantiatedAttr< TriggerBenchmarks>(impl); }
	TriggerBenchmarks TriggerBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TriggerBenchmarks> TriggerBenchmarks::Derived() { return ::Udm::DerivedAttr< TriggerBenchmarks>(impl); }
	::Udm::ArchetypeAttr< TriggerBenchmarks> TriggerBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< TriggerBenchmarks>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> TriggerBenchmarks::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void TriggerBenchmarks::Accept(Visitor &v) { v.Visit_TriggerBenchmarks(*this); }

	::Uml::Class TriggerBenchmarks::meta;

	PeriodicBenchmarks::PeriodicBenchmarks() {}
	PeriodicBenchmarks::PeriodicBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	PeriodicBenchmarks::PeriodicBenchmarks(const PeriodicBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	PeriodicBenchmarks::PeriodicBenchmarks(PeriodicBenchmarks &&master) : BenchmarkType(master) {};

	PeriodicBenchmarks PeriodicBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PeriodicBenchmarks& PeriodicBenchmarks::operator=(PeriodicBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PeriodicBenchmarks PeriodicBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PeriodicBenchmarks PeriodicBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PeriodicBenchmarks PeriodicBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PeriodicBenchmarks> PeriodicBenchmarks::Instances() { return ::Udm::InstantiatedAttr< PeriodicBenchmarks>(impl); }
	PeriodicBenchmarks PeriodicBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PeriodicBenchmarks> PeriodicBenchmarks::Derived() { return ::Udm::DerivedAttr< PeriodicBenchmarks>(impl); }
	::Udm::ArchetypeAttr< PeriodicBenchmarks> PeriodicBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< PeriodicBenchmarks>(impl); }
	::Udm::IntegerAttr PeriodicBenchmarks::timeperiod() const { return ::Udm::IntegerAttr(impl, meta_timeperiod); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> PeriodicBenchmarks::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void PeriodicBenchmarks::Accept(Visitor &v) { v.Visit_PeriodicBenchmarks(*this); }

	::Uml::Class PeriodicBenchmarks::meta;
	::Uml::Attribute PeriodicBenchmarks::meta_timeperiod;

	FixedIterationBenchmarks::FixedIterationBenchmarks() {}
	FixedIterationBenchmarks::FixedIterationBenchmarks(::Udm::ObjectImpl *impl) : BenchmarkType(impl) {}
	FixedIterationBenchmarks::FixedIterationBenchmarks(const FixedIterationBenchmarks &master) : BenchmarkType(master) {}

#ifdef UDM_RVALUE
	FixedIterationBenchmarks::FixedIterationBenchmarks(FixedIterationBenchmarks &&master) : BenchmarkType(master) {};

	FixedIterationBenchmarks FixedIterationBenchmarks::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FixedIterationBenchmarks& FixedIterationBenchmarks::operator=(FixedIterationBenchmarks &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FixedIterationBenchmarks FixedIterationBenchmarks::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FixedIterationBenchmarks FixedIterationBenchmarks::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FixedIterationBenchmarks FixedIterationBenchmarks::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Instances() { return ::Udm::InstantiatedAttr< FixedIterationBenchmarks>(impl); }
	FixedIterationBenchmarks FixedIterationBenchmarks::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Derived() { return ::Udm::DerivedAttr< FixedIterationBenchmarks>(impl); }
	::Udm::ArchetypeAttr< FixedIterationBenchmarks> FixedIterationBenchmarks::Archetype() const { return ::Udm::ArchetypeAttr< FixedIterationBenchmarks>(impl); }
	::Udm::IntegerAttr FixedIterationBenchmarks::benchmarkIterations() const { return ::Udm::IntegerAttr(impl, meta_benchmarkIterations); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> FixedIterationBenchmarks::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	void FixedIterationBenchmarks::Accept(Visitor &v) { v.Visit_FixedIterationBenchmarks(*this); }

	::Uml::Class FixedIterationBenchmarks::meta;
	::Uml::Attribute FixedIterationBenchmarks::meta_benchmarkIterations;

	BenchmarkCharacteristics::BenchmarkCharacteristics() {}
	BenchmarkCharacteristics::BenchmarkCharacteristics(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BenchmarkCharacteristics::BenchmarkCharacteristics(const BenchmarkCharacteristics &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BenchmarkCharacteristics::BenchmarkCharacteristics(BenchmarkCharacteristics &&master) : MgaObject(master) {};

	BenchmarkCharacteristics BenchmarkCharacteristics::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BenchmarkCharacteristics& BenchmarkCharacteristics::operator=(BenchmarkCharacteristics &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BenchmarkCharacteristics BenchmarkCharacteristics::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BenchmarkCharacteristics BenchmarkCharacteristics::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BenchmarkCharacteristics BenchmarkCharacteristics::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Instances() { return ::Udm::InstantiatedAttr< BenchmarkCharacteristics>(impl); }
	BenchmarkCharacteristics BenchmarkCharacteristics::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Derived() { return ::Udm::DerivedAttr< BenchmarkCharacteristics>(impl); }
	::Udm::ArchetypeAttr< BenchmarkCharacteristics> BenchmarkCharacteristics::Archetype() const { return ::Udm::ArchetypeAttr< BenchmarkCharacteristics>(impl); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> BenchmarkCharacteristics::BenchmarkAnalysis_parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_parent); }
	::Udm::ParentAttr< ::CQML::BenchmarkAnalysis> BenchmarkCharacteristics::parent() const { return ::Udm::ParentAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::BenchmarkType> BenchmarkCharacteristics::srcBenchmarkCharacteristics_end() const { return ::Udm::AssocEndAttr< ::CQML::BenchmarkType>(impl, meta_srcBenchmarkCharacteristics_end_); }
	::Udm::AssocEndAttr< ::CQML::MetricsBase> BenchmarkCharacteristics::dstBenchmarkCharacteristics_end() const { return ::Udm::AssocEndAttr< ::CQML::MetricsBase>(impl, meta_dstBenchmarkCharacteristics_end_); }
	void BenchmarkCharacteristics::Accept(Visitor &v) { v.Visit_BenchmarkCharacteristics(*this); }

	::Uml::Class BenchmarkCharacteristics::meta;
	::Uml::CompositionParentRole BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent;
	::Uml::AssociationRole BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_;
	::Uml::AssociationRole BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_;

	ConnectedComponent::ConnectedComponent() {}
	ConnectedComponent::ConnectedComponent(::Udm::ObjectImpl *impl) : GraphVertex(impl), MgaObject(impl) {}
	ConnectedComponent::ConnectedComponent(const ConnectedComponent &master) : GraphVertex(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectedComponent::ConnectedComponent(ConnectedComponent &&master) : GraphVertex(master), MgaObject(master) {};

	ConnectedComponent ConnectedComponent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectedComponent& ConnectedComponent::operator=(ConnectedComponent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectedComponent ConnectedComponent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectedComponent ConnectedComponent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectedComponent ConnectedComponent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectedComponent> ConnectedComponent::Instances() { return ::Udm::InstantiatedAttr< ConnectedComponent>(impl); }
	ConnectedComponent ConnectedComponent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectedComponent> ConnectedComponent::Derived() { return ::Udm::DerivedAttr< ConnectedComponent>(impl); }
	::Udm::ArchetypeAttr< ConnectedComponent> ConnectedComponent::Archetype() const { return ::Udm::ArchetypeAttr< ConnectedComponent>(impl); }
	::Udm::ChildrenAttr< ::CQML::DstEdge> ConnectedComponent::DstEdge_children() const { return ::Udm::ChildrenAttr< ::CQML::DstEdge>(impl, meta_DstEdge_children); }
	::Udm::ChildrenAttr< ::CQML::Port> ConnectedComponent::Port_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, meta_Port_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ConnectedComponent::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Taggable> ConnectedComponent::Taggable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Taggable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutEventPort> ConnectedComponent::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Port> ConnectedComponent::Port_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort> ConnectedComponent::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRequestPort> ConnectedComponent::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InEventPort> ConnectedComponent::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CommonPortAttrs> ConnectedComponent::CommonPortAttrs_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CommonPortAttrs>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GraphVertex> ConnectedComponent::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DstEdge> ConnectedComponent::DstEdge_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DstEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Path> ConnectedComponent::parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void ConnectedComponent::Accept(Visitor &v) { v.Visit_ConnectedComponent(*this); }

	::Uml::Class ConnectedComponent::meta;
	::Uml::CompositionChildRole ConnectedComponent::meta_DstEdge_children;
	::Uml::CompositionChildRole ConnectedComponent::meta_Port_children;

	Path::Path() {}
	Path::Path(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Path::Path(const Path &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Path::Path(Path &&master) : MgaObject(master) {};

	Path Path::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Path& Path::operator=(Path &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Path Path::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Path Path::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Path Path::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Path> Path::Instances() { return ::Udm::InstantiatedAttr< Path>(impl); }
	Path Path::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Path> Path::Derived() { return ::Udm::DerivedAttr< Path>(impl); }
	::Udm::ArchetypeAttr< Path> Path::Archetype() const { return ::Udm::ArchetypeAttr< Path>(impl); }
	::Udm::AClassAssocAttr< PathProperty, Property> Path::dstPathProperty() const { return ::Udm::AClassAssocAttr< PathProperty, Property>(impl, meta_dstPathProperty, meta_dstPathProperty_rev); }
	::Udm::AssocAttr< PathReference> Path::referedbyPathReference() const { return ::Udm::AssocAttr< PathReference>(impl, meta_referedbyPathReference); }
	::Udm::AssocAttr< PathRef> Path::referedbyPathRef() const { return ::Udm::AssocAttr< PathRef>(impl, meta_referedbyPathRef); }
	::Udm::ChildrenAttr< ::CQML::DstEdge> Path::DstEdge_children() const { return ::Udm::ChildrenAttr< ::CQML::DstEdge>(impl, meta_DstEdge_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Path::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::CQML::SrcEdge> Path::SrcEdge_children() const { return ::Udm::ChildrenAttr< ::CQML::SrcEdge>(impl, meta_SrcEdge_children); }
	::Udm::ChildrenAttr< ::CQML::EdgeProperty> Path::EdgeProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::EdgeProperty>(impl, meta_EdgeProperty_children); }
	::Udm::ChildrenAttr< ::CQML::Edge> Path::Edge_children() const { return ::Udm::ChildrenAttr< ::CQML::Edge>(impl, meta_Edge_children); }
	::Udm::ChildrenAttr< ::CQML::Property> Path::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::GraphVertex> Path::GraphVertex_children() const { return ::Udm::ChildrenAttr< ::CQML::GraphVertex>(impl, meta_GraphVertex_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Path::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> Path::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> Path::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutEventPort> Path::OutEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Port> Path::Port_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Port>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort> Path::ProvidedRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ProvidedRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRequestPort> Path::RequiredRequestPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRequestPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InEventPort> Path::InEventPort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InEventPort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GraphVertex> Path::GraphVertex_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GraphVertex>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Path::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> Path::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> Path::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> Path::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConnectedComponent> Path::ConnectedComponent_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConnectedComponent>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DstEdge> Path::DstEdge_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DstEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DisplayNode> Path::DisplayNode_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DisplayNode>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SrcEdge> Path::SrcEdge_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SrcEdge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EdgeProperty> Path::EdgeProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EdgeProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Edge> Path::Edge_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Edge>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Paths> Path::Paths_parent() const { return ::Udm::ParentAttr< ::CQML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::CQML::Paths> Path::parent() const { return ::Udm::ParentAttr< ::CQML::Paths>(impl, ::Udm::NULLPARENTROLE); }
	void Path::Accept(Visitor &v) { v.Visit_Path(*this); }

	::Uml::Class Path::meta;
	::Uml::AssociationRole Path::meta_dstPathProperty;
	::Uml::AssociationRole Path::meta_dstPathProperty_rev;
	::Uml::AssociationRole Path::meta_referedbyPathReference;
	::Uml::AssociationRole Path::meta_referedbyPathRef;
	::Uml::CompositionChildRole Path::meta_DstEdge_children;
	::Uml::CompositionChildRole Path::meta_ComponentRef_children;
	::Uml::CompositionChildRole Path::meta_SrcEdge_children;
	::Uml::CompositionChildRole Path::meta_EdgeProperty_children;
	::Uml::CompositionChildRole Path::meta_Edge_children;
	::Uml::CompositionChildRole Path::meta_Property_children;
	::Uml::CompositionChildRole Path::meta_GraphVertex_children;
	::Uml::CompositionParentRole Path::meta_Paths_parent;

	DstEdge::DstEdge() {}
	DstEdge::DstEdge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DstEdge::DstEdge(const DstEdge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DstEdge::DstEdge(DstEdge &&master) : MgaObject(master) {};

	DstEdge DstEdge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DstEdge& DstEdge::operator=(DstEdge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DstEdge DstEdge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DstEdge DstEdge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DstEdge DstEdge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DstEdge> DstEdge::Instances() { return ::Udm::InstantiatedAttr< DstEdge>(impl); }
	DstEdge DstEdge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DstEdge> DstEdge::Derived() { return ::Udm::DerivedAttr< DstEdge>(impl); }
	::Udm::ArchetypeAttr< DstEdge> DstEdge::Archetype() const { return ::Udm::ArchetypeAttr< DstEdge>(impl); }
	::Udm::ParentAttr< ::CQML::ConnectedComponent> DstEdge::ConnectedComponent_parent() const { return ::Udm::ParentAttr< ::CQML::ConnectedComponent>(impl, meta_ConnectedComponent_parent); }
	::Udm::ParentAttr< ::CQML::Path> DstEdge::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> DstEdge::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::GraphVertex> DstEdge::srcDstEdge_end() const { return ::Udm::AssocEndAttr< ::CQML::GraphVertex>(impl, meta_srcDstEdge_end_); }
	::Udm::AssocEndAttr< ::CQML::Edge> DstEdge::dstDstEdge_end() const { return ::Udm::AssocEndAttr< ::CQML::Edge>(impl, meta_dstDstEdge_end_); }
	void DstEdge::Accept(Visitor &v) { v.Visit_DstEdge(*this); }

	::Uml::Class DstEdge::meta;
	::Uml::CompositionParentRole DstEdge::meta_ConnectedComponent_parent;
	::Uml::CompositionParentRole DstEdge::meta_Path_parent;
	::Uml::AssociationRole DstEdge::meta_srcDstEdge_end_;
	::Uml::AssociationRole DstEdge::meta_dstDstEdge_end_;

	DisplayNode::DisplayNode() {}
	DisplayNode::DisplayNode(::Udm::ObjectImpl *impl) : GraphVertex(impl), MgaObject(impl) {}
	DisplayNode::DisplayNode(const DisplayNode &master) : GraphVertex(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	DisplayNode::DisplayNode(DisplayNode &&master) : GraphVertex(master), MgaObject(master) {};

	DisplayNode DisplayNode::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DisplayNode& DisplayNode::operator=(DisplayNode &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DisplayNode DisplayNode::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DisplayNode DisplayNode::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DisplayNode DisplayNode::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DisplayNode> DisplayNode::Instances() { return ::Udm::InstantiatedAttr< DisplayNode>(impl); }
	DisplayNode DisplayNode::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DisplayNode> DisplayNode::Derived() { return ::Udm::DerivedAttr< DisplayNode>(impl); }
	::Udm::ArchetypeAttr< DisplayNode> DisplayNode::Archetype() const { return ::Udm::ArchetypeAttr< DisplayNode>(impl); }
	::Udm::ParentAttr< ::CQML::Path> DisplayNode::parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void DisplayNode::Accept(Visitor &v) { v.Visit_DisplayNode(*this); }

	::Uml::Class DisplayNode::meta;

	SrcEdge::SrcEdge() {}
	SrcEdge::SrcEdge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SrcEdge::SrcEdge(const SrcEdge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SrcEdge::SrcEdge(SrcEdge &&master) : MgaObject(master) {};

	SrcEdge SrcEdge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SrcEdge& SrcEdge::operator=(SrcEdge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SrcEdge SrcEdge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SrcEdge SrcEdge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SrcEdge SrcEdge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SrcEdge> SrcEdge::Instances() { return ::Udm::InstantiatedAttr< SrcEdge>(impl); }
	SrcEdge SrcEdge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SrcEdge> SrcEdge::Derived() { return ::Udm::DerivedAttr< SrcEdge>(impl); }
	::Udm::ArchetypeAttr< SrcEdge> SrcEdge::Archetype() const { return ::Udm::ArchetypeAttr< SrcEdge>(impl); }
	::Udm::ParentAttr< ::CQML::Path> SrcEdge::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::Path> SrcEdge::parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Edge> SrcEdge::srcSrcEdge_end() const { return ::Udm::AssocEndAttr< ::CQML::Edge>(impl, meta_srcSrcEdge_end_); }
	::Udm::AssocEndAttr< ::CQML::GraphVertex> SrcEdge::dstSrcEdge_end() const { return ::Udm::AssocEndAttr< ::CQML::GraphVertex>(impl, meta_dstSrcEdge_end_); }
	void SrcEdge::Accept(Visitor &v) { v.Visit_SrcEdge(*this); }

	::Uml::Class SrcEdge::meta;
	::Uml::CompositionParentRole SrcEdge::meta_Path_parent;
	::Uml::AssociationRole SrcEdge::meta_srcSrcEdge_end_;
	::Uml::AssociationRole SrcEdge::meta_dstSrcEdge_end_;

	EdgeProperty::EdgeProperty() {}
	EdgeProperty::EdgeProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EdgeProperty::EdgeProperty(const EdgeProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EdgeProperty::EdgeProperty(EdgeProperty &&master) : MgaObject(master) {};

	EdgeProperty EdgeProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EdgeProperty& EdgeProperty::operator=(EdgeProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EdgeProperty EdgeProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EdgeProperty EdgeProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EdgeProperty EdgeProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EdgeProperty> EdgeProperty::Instances() { return ::Udm::InstantiatedAttr< EdgeProperty>(impl); }
	EdgeProperty EdgeProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EdgeProperty> EdgeProperty::Derived() { return ::Udm::DerivedAttr< EdgeProperty>(impl); }
	::Udm::ArchetypeAttr< EdgeProperty> EdgeProperty::Archetype() const { return ::Udm::ArchetypeAttr< EdgeProperty>(impl); }
	::Udm::ParentAttr< ::CQML::Path> EdgeProperty::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::Path> EdgeProperty::parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Property> EdgeProperty::srcPropertyConnector_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_srcPropertyConnector_end_); }
	::Udm::AssocEndAttr< ::CQML::Edge> EdgeProperty::dstPropertyConnector_end() const { return ::Udm::AssocEndAttr< ::CQML::Edge>(impl, meta_dstPropertyConnector_end_); }
	void EdgeProperty::Accept(Visitor &v) { v.Visit_EdgeProperty(*this); }

	::Uml::Class EdgeProperty::meta;
	::Uml::CompositionParentRole EdgeProperty::meta_Path_parent;
	::Uml::AssociationRole EdgeProperty::meta_srcPropertyConnector_end_;
	::Uml::AssociationRole EdgeProperty::meta_dstPropertyConnector_end_;

	Edge::Edge() {}
	Edge::Edge(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Edge::Edge(const Edge &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Edge::Edge(Edge &&master) : MgaObject(master) {};

	Edge Edge::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Edge& Edge::operator=(Edge &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Edge Edge::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Edge Edge::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Edge Edge::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Edge> Edge::Instances() { return ::Udm::InstantiatedAttr< Edge>(impl); }
	Edge Edge::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Edge> Edge::Derived() { return ::Udm::DerivedAttr< Edge>(impl); }
	::Udm::ArchetypeAttr< Edge> Edge::Archetype() const { return ::Udm::ArchetypeAttr< Edge>(impl); }
	::Udm::AClassAssocAttr< EdgeProperty, Property> Edge::srcPropertyConnector() const { return ::Udm::AClassAssocAttr< EdgeProperty, Property>(impl, meta_srcPropertyConnector, meta_srcPropertyConnector_rev); }
	::Udm::AClassPointerAttr< DstEdge, GraphVertex> Edge::srcDstEdge() const { return ::Udm::AClassPointerAttr< DstEdge, GraphVertex>(impl, meta_srcDstEdge, meta_srcDstEdge_rev); }
	::Udm::AClassPointerAttr< SrcEdge, GraphVertex> Edge::dstSrcEdge() const { return ::Udm::AClassPointerAttr< SrcEdge, GraphVertex>(impl, meta_dstSrcEdge, meta_dstSrcEdge_rev); }
	::Udm::ParentAttr< ::CQML::Path> Edge::Path_parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, meta_Path_parent); }
	::Udm::ParentAttr< ::CQML::Path> Edge::parent() const { return ::Udm::ParentAttr< ::CQML::Path>(impl, ::Udm::NULLPARENTROLE); }
	void Edge::Accept(Visitor &v) { v.Visit_Edge(*this); }

	::Uml::Class Edge::meta;
	::Uml::AssociationRole Edge::meta_srcPropertyConnector;
	::Uml::AssociationRole Edge::meta_srcPropertyConnector_rev;
	::Uml::AssociationRole Edge::meta_srcDstEdge;
	::Uml::AssociationRole Edge::meta_srcDstEdge_rev;
	::Uml::AssociationRole Edge::meta_dstSrcEdge;
	::Uml::AssociationRole Edge::meta_dstSrcEdge_rev;
	::Uml::CompositionParentRole Edge::meta_Path_parent;

	Paths::Paths() {}
	Paths::Paths(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Paths::Paths(const Paths &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Paths::Paths(Paths &&master) : MgaObject(master) {};

	Paths Paths::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Paths& Paths::operator=(Paths &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Paths Paths::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Paths Paths::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Paths Paths::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Paths> Paths::Instances() { return ::Udm::InstantiatedAttr< Paths>(impl); }
	Paths Paths::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Paths> Paths::Derived() { return ::Udm::DerivedAttr< Paths>(impl); }
	::Udm::ArchetypeAttr< Paths> Paths::Archetype() const { return ::Udm::ArchetypeAttr< Paths>(impl); }
	::Udm::ChildrenAttr< ::CQML::Path> Paths::Path_children() const { return ::Udm::ChildrenAttr< ::CQML::Path>(impl, meta_Path_children); }
	::Udm::ChildrenAttr< ::CQML::PathProperty> Paths::PathProperty_children() const { return ::Udm::ChildrenAttr< ::CQML::PathProperty>(impl, meta_PathProperty_children); }
	::Udm::ChildrenAttr< ::CQML::Property> Paths::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Paths::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> Paths::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Path> Paths::Path_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Path>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PathProperty> Paths::PathProperty_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PathProperty>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::PathDiagrams> Paths::PathDiagrams_parent() const { return ::Udm::ParentAttr< ::CQML::PathDiagrams>(impl, meta_PathDiagrams_parent); }
	::Udm::ParentAttr< ::CQML::PathDiagrams> Paths::parent() const { return ::Udm::ParentAttr< ::CQML::PathDiagrams>(impl, ::Udm::NULLPARENTROLE); }
	void Paths::Accept(Visitor &v) { v.Visit_Paths(*this); }

	::Uml::Class Paths::meta;
	::Uml::CompositionChildRole Paths::meta_Path_children;
	::Uml::CompositionChildRole Paths::meta_PathProperty_children;
	::Uml::CompositionChildRole Paths::meta_Property_children;
	::Uml::CompositionParentRole Paths::meta_PathDiagrams_parent;

	PathProperty::PathProperty() {}
	PathProperty::PathProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PathProperty::PathProperty(const PathProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PathProperty::PathProperty(PathProperty &&master) : MgaObject(master) {};

	PathProperty PathProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathProperty& PathProperty::operator=(PathProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathProperty PathProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathProperty PathProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathProperty PathProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathProperty> PathProperty::Instances() { return ::Udm::InstantiatedAttr< PathProperty>(impl); }
	PathProperty PathProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathProperty> PathProperty::Derived() { return ::Udm::DerivedAttr< PathProperty>(impl); }
	::Udm::ArchetypeAttr< PathProperty> PathProperty::Archetype() const { return ::Udm::ArchetypeAttr< PathProperty>(impl); }
	::Udm::ParentAttr< ::CQML::Paths> PathProperty::Paths_parent() const { return ::Udm::ParentAttr< ::CQML::Paths>(impl, meta_Paths_parent); }
	::Udm::ParentAttr< ::CQML::Paths> PathProperty::parent() const { return ::Udm::ParentAttr< ::CQML::Paths>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Path> PathProperty::srcPathProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Path>(impl, meta_srcPathProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> PathProperty::dstPathProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstPathProperty_end_); }
	void PathProperty::Accept(Visitor &v) { v.Visit_PathProperty(*this); }

	::Uml::Class PathProperty::meta;
	::Uml::CompositionParentRole PathProperty::meta_Paths_parent;
	::Uml::AssociationRole PathProperty::meta_srcPathProperty_end_;
	::Uml::AssociationRole PathProperty::meta_dstPathProperty_end_;

	PathReference::PathReference() {}
	PathReference::PathReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PathReference::PathReference(const PathReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PathReference::PathReference(PathReference &&master) : MgaObject(master) {};

	PathReference PathReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathReference& PathReference::operator=(PathReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathReference PathReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathReference PathReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathReference PathReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathReference> PathReference::Instances() { return ::Udm::InstantiatedAttr< PathReference>(impl); }
	PathReference PathReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathReference> PathReference::Derived() { return ::Udm::DerivedAttr< PathReference>(impl); }
	::Udm::ArchetypeAttr< PathReference> PathReference::Archetype() const { return ::Udm::ArchetypeAttr< PathReference>(impl); }
	::Udm::PointerAttr< Path> PathReference::ref() const { return ::Udm::PointerAttr< Path>(impl, meta_ref); }
	::Udm::AClassPointerAttr< CriticalPath, ComponentAssembly> PathReference::srcCriticalPath() const { return ::Udm::AClassPointerAttr< CriticalPath, ComponentAssembly>(impl, meta_srcCriticalPath, meta_srcCriticalPath_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> PathReference::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> PathReference::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void PathReference::Accept(Visitor &v) { v.Visit_PathReference(*this); }

	::Uml::Class PathReference::meta;
	::Uml::AssociationRole PathReference::meta_ref;
	::Uml::AssociationRole PathReference::meta_srcCriticalPath;
	::Uml::AssociationRole PathReference::meta_srcCriticalPath_rev;
	::Uml::CompositionParentRole PathReference::meta_ComponentImplementationContainer_parent;

	ComponentAssemblyBase::ComponentAssemblyBase() {}
	ComponentAssemblyBase::ComponentAssemblyBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentAssemblyBase::ComponentAssemblyBase(const ComponentAssemblyBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblyBase::ComponentAssemblyBase(ComponentAssemblyBase &&master) : MgaObject(master) {};

	ComponentAssemblyBase ComponentAssemblyBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblyBase& ComponentAssemblyBase::operator=(ComponentAssemblyBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblyBase ComponentAssemblyBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblyBase ComponentAssemblyBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblyBase ComponentAssemblyBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblyBase> ComponentAssemblyBase::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblyBase>(impl); }
	ComponentAssemblyBase ComponentAssemblyBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblyBase> ComponentAssemblyBase::Derived() { return ::Udm::DerivedAttr< ComponentAssemblyBase>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblyBase> ComponentAssemblyBase::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblyBase>(impl); }
	::Udm::AClassAssocAttr< ComponentAssemblyQoS, ComponentAssemblyQoSCharacteristic> ComponentAssemblyBase::dstComponentAssemblyQoS() const { return ::Udm::AClassAssocAttr< ComponentAssemblyQoS, ComponentAssemblyQoSCharacteristic>(impl, meta_dstComponentAssemblyQoS, meta_dstComponentAssemblyQoS_rev); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssemblyBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentAssemblyBase::meta;
	::Uml::AssociationRole ComponentAssemblyBase::meta_dstComponentAssemblyQoS;
	::Uml::AssociationRole ComponentAssemblyBase::meta_dstComponentAssemblyQoS_rev;

	ExternalPortReference::ExternalPortReference() {}
	ExternalPortReference::ExternalPortReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ExternalPortReference::ExternalPortReference(const ExternalPortReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ExternalPortReference::ExternalPortReference(ExternalPortReference &&master) : MgaObject(master) {};

	ExternalPortReference ExternalPortReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ExternalPortReference& ExternalPortReference::operator=(ExternalPortReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ExternalPortReference ExternalPortReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ExternalPortReference ExternalPortReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ExternalPortReference ExternalPortReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ExternalPortReference> ExternalPortReference::Instances() { return ::Udm::InstantiatedAttr< ExternalPortReference>(impl); }
	ExternalPortReference ExternalPortReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ExternalPortReference> ExternalPortReference::Derived() { return ::Udm::DerivedAttr< ExternalPortReference>(impl); }
	::Udm::ArchetypeAttr< ExternalPortReference> ExternalPortReference::Archetype() const { return ::Udm::ArchetypeAttr< ExternalPortReference>(impl); }
	::Udm::StringAttr ExternalPortReference::location() const { return ::Udm::StringAttr(impl, meta_location); }
	::Udm::StringAttr ExternalPortReference::label() const { return ::Udm::StringAttr(impl, meta_label); }
	::Udm::PointerAttr< ExternalPortReferenceType> ExternalPortReference::ref() const { return ::Udm::PointerAttr< ExternalPortReferenceType>(impl, meta_ref); }
	::Udm::AClassAssocAttr< ExternalDelegate, Port> ExternalPortReference::dstExternalDelegate() const { return ::Udm::AClassAssocAttr< ExternalDelegate, Port>(impl, meta_dstExternalDelegate, meta_dstExternalDelegate_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ExternalPortReference::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ExternalPortReference::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ExternalPortReference::Accept(Visitor &v) { v.Visit_ExternalPortReference(*this); }

	::Uml::Class ExternalPortReference::meta;
	::Uml::Attribute ExternalPortReference::meta_location;
	::Uml::Attribute ExternalPortReference::meta_label;
	::Uml::AssociationRole ExternalPortReference::meta_ref;
	::Uml::AssociationRole ExternalPortReference::meta_dstExternalDelegate;
	::Uml::AssociationRole ExternalPortReference::meta_dstExternalDelegate_rev;
	::Uml::CompositionParentRole ExternalPortReference::meta_ComponentAssembly_parent;

	ECBehavior::ECBehavior() {}
	ECBehavior::ECBehavior(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ECBehavior::ECBehavior(const ECBehavior &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ECBehavior::ECBehavior(ECBehavior &&master) : MgaObject(master) {};

	ECBehavior ECBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECBehavior& ECBehavior::operator=(ECBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECBehavior ECBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECBehavior ECBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECBehavior ECBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECBehavior> ECBehavior::Instances() { return ::Udm::InstantiatedAttr< ECBehavior>(impl); }
	ECBehavior ECBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECBehavior> ECBehavior::Derived() { return ::Udm::DerivedAttr< ECBehavior>(impl); }
	::Udm::ArchetypeAttr< ECBehavior> ECBehavior::Archetype() const { return ::Udm::ArchetypeAttr< ECBehavior>(impl); }
	::Udm::IntegerAttr ECBehavior::DispatchingMultithreadingLevel() const { return ::Udm::IntegerAttr(impl, meta_DispatchingMultithreadingLevel); }
	::Udm::BooleanAttr ECBehavior::MultithreadedSupplier() const { return ::Udm::BooleanAttr(impl, meta_MultithreadedSupplier); }
	::Udm::BooleanAttr ECBehavior::MultithreadedConsumer() const { return ::Udm::BooleanAttr(impl, meta_MultithreadedConsumer); }
	::Udm::BooleanAttr ECBehavior::DisconnectDanglingConnections() const { return ::Udm::BooleanAttr(impl, meta_DisconnectDanglingConnections); }
	::Udm::BooleanAttr ECBehavior::ConsumerBasedFiltering() const { return ::Udm::BooleanAttr(impl, meta_ConsumerBasedFiltering); }
	::Udm::BooleanAttr ECBehavior::SupplierBasedFiltering() const { return ::Udm::BooleanAttr(impl, meta_SupplierBasedFiltering); }
	::Udm::ParentAttr< ::CQML::ECRequirements> ECBehavior::ECRequirements_parent() const { return ::Udm::ParentAttr< ::CQML::ECRequirements>(impl, meta_ECRequirements_parent); }
	::Udm::ParentAttr< ::CQML::ECRequirements> ECBehavior::parent() const { return ::Udm::ParentAttr< ::CQML::ECRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ECBehavior::Accept(Visitor &v) { v.Visit_ECBehavior(*this); }

	::Uml::Class ECBehavior::meta;
	::Uml::Attribute ECBehavior::meta_DispatchingMultithreadingLevel;
	::Uml::Attribute ECBehavior::meta_MultithreadedSupplier;
	::Uml::Attribute ECBehavior::meta_MultithreadedConsumer;
	::Uml::Attribute ECBehavior::meta_DisconnectDanglingConnections;
	::Uml::Attribute ECBehavior::meta_ConsumerBasedFiltering;
	::Uml::Attribute ECBehavior::meta_SupplierBasedFiltering;
	::Uml::CompositionParentRole ECBehavior::meta_ECRequirements_parent;

	ECRole::ECRole() {}
	ECRole::ECRole(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ECRole::ECRole(const ECRole &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ECRole::ECRole(ECRole &&master) : MgaObject(master) {};

	ECRole ECRole::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ECRole& ECRole::operator=(ECRole &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ECRole ECRole::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ECRole ECRole::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ECRole ECRole::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ECRole> ECRole::Instances() { return ::Udm::InstantiatedAttr< ECRole>(impl); }
	ECRole ECRole::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ECRole> ECRole::Derived() { return ::Udm::DerivedAttr< ECRole>(impl); }
	::Udm::ArchetypeAttr< ECRole> ECRole::Archetype() const { return ::Udm::ArchetypeAttr< ECRole>(impl); }
	::Udm::StringAttr ECRole::ECFilterType() const { return ::Udm::StringAttr(impl, meta_ECFilterType); }
	::Udm::StringAttr ECRole::rolekind() const { return ::Udm::StringAttr(impl, meta_rolekind); }
	::Udm::ParentAttr< ::CQML::ECRequirements> ECRole::ECRequirements_parent() const { return ::Udm::ParentAttr< ::CQML::ECRequirements>(impl, meta_ECRequirements_parent); }
	::Udm::ParentAttr< ::CQML::ECRequirements> ECRole::parent() const { return ::Udm::ParentAttr< ::CQML::ECRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ECRole::Accept(Visitor &v) { v.Visit_ECRole(*this); }

	::Uml::Class ECRole::meta;
	::Uml::Attribute ECRole::meta_ECFilterType;
	::Uml::Attribute ECRole::meta_rolekind;
	::Uml::CompositionParentRole ECRole::meta_ECRequirements_parent;

	ServiceProvider::ServiceProvider() {}
	ServiceProvider::ServiceProvider(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceProvider::ServiceProvider(const ServiceProvider &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceProvider::ServiceProvider(ServiceProvider &&master) : MgaObject(master) {};

	ServiceProvider ServiceProvider::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceProvider& ServiceProvider::operator=(ServiceProvider &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceProvider ServiceProvider::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceProvider ServiceProvider::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceProvider ServiceProvider::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceProvider> ServiceProvider::Instances() { return ::Udm::InstantiatedAttr< ServiceProvider>(impl); }
	ServiceProvider ServiceProvider::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceProvider> ServiceProvider::Derived() { return ::Udm::DerivedAttr< ServiceProvider>(impl); }
	::Udm::ArchetypeAttr< ServiceProvider> ServiceProvider::Archetype() const { return ::Udm::ArchetypeAttr< ServiceProvider>(impl); }
	::Udm::BooleanAttr ServiceProvider::fixed_prioirty_service_execution() const { return ::Udm::BooleanAttr(impl, meta_fixed_prioirty_service_execution); }
	::Udm::ChildAttr< ::CQML::MultipleServiceRequests> ServiceProvider::MultipleServiceRequests_child() const { return ::Udm::ChildAttr< ::CQML::MultipleServiceRequests>(impl, meta_MultipleServiceRequests_child); }
	::Udm::ChildAttr< ::CQML::ServiceLevels> ServiceProvider::ServiceLevels_child() const { return ::Udm::ChildAttr< ::CQML::ServiceLevels>(impl, meta_ServiceLevels_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ServiceProvider::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultipleServiceRequests> ServiceProvider::MultipleServiceRequests_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultipleServiceRequests>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ServiceLevels> ServiceProvider::ServiceLevels_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ServiceLevels>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RTRequirements> ServiceProvider::RTRequirements_parent() const { return ::Udm::ParentAttr< ::CQML::RTRequirements>(impl, meta_RTRequirements_parent); }
	::Udm::ParentAttr< ::CQML::RTRequirements> ServiceProvider::parent() const { return ::Udm::ParentAttr< ::CQML::RTRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceProvider::Accept(Visitor &v) { v.Visit_ServiceProvider(*this); }

	::Uml::Class ServiceProvider::meta;
	::Uml::Attribute ServiceProvider::meta_fixed_prioirty_service_execution;
	::Uml::CompositionChildRole ServiceProvider::meta_MultipleServiceRequests_child;
	::Uml::CompositionChildRole ServiceProvider::meta_ServiceLevels_child;
	::Uml::CompositionParentRole ServiceProvider::meta_RTRequirements_parent;

	MultipleServiceRequests::MultipleServiceRequests() {}
	MultipleServiceRequests::MultipleServiceRequests(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultipleServiceRequests::MultipleServiceRequests(const MultipleServiceRequests &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultipleServiceRequests::MultipleServiceRequests(MultipleServiceRequests &&master) : MgaObject(master) {};

	MultipleServiceRequests MultipleServiceRequests::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultipleServiceRequests& MultipleServiceRequests::operator=(MultipleServiceRequests &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultipleServiceRequests MultipleServiceRequests::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultipleServiceRequests MultipleServiceRequests::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultipleServiceRequests MultipleServiceRequests::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultipleServiceRequests> MultipleServiceRequests::Instances() { return ::Udm::InstantiatedAttr< MultipleServiceRequests>(impl); }
	MultipleServiceRequests MultipleServiceRequests::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultipleServiceRequests> MultipleServiceRequests::Derived() { return ::Udm::DerivedAttr< MultipleServiceRequests>(impl); }
	::Udm::ArchetypeAttr< MultipleServiceRequests> MultipleServiceRequests::Archetype() const { return ::Udm::ArchetypeAttr< MultipleServiceRequests>(impl); }
	::Udm::BooleanAttr MultipleServiceRequests::buffer_service_requests() const { return ::Udm::BooleanAttr(impl, meta_buffer_service_requests); }
	::Udm::IntegerAttr MultipleServiceRequests::maximum_simultaneous_service_level() const { return ::Udm::IntegerAttr(impl, meta_maximum_simultaneous_service_level); }
	::Udm::BooleanAttr MultipleServiceRequests::simultaneous_service_execution() const { return ::Udm::BooleanAttr(impl, meta_simultaneous_service_execution); }
	::Udm::IntegerAttr MultipleServiceRequests::minimum_simultaneous_service_level() const { return ::Udm::IntegerAttr(impl, meta_minimum_simultaneous_service_level); }
	::Udm::ParentAttr< ::CQML::ServiceProvider> MultipleServiceRequests::ServiceProvider_parent() const { return ::Udm::ParentAttr< ::CQML::ServiceProvider>(impl, meta_ServiceProvider_parent); }
	::Udm::ParentAttr< ::CQML::ServiceProvider> MultipleServiceRequests::parent() const { return ::Udm::ParentAttr< ::CQML::ServiceProvider>(impl, ::Udm::NULLPARENTROLE); }
	void MultipleServiceRequests::Accept(Visitor &v) { v.Visit_MultipleServiceRequests(*this); }

	::Uml::Class MultipleServiceRequests::meta;
	::Uml::Attribute MultipleServiceRequests::meta_buffer_service_requests;
	::Uml::Attribute MultipleServiceRequests::meta_maximum_simultaneous_service_level;
	::Uml::Attribute MultipleServiceRequests::meta_simultaneous_service_execution;
	::Uml::Attribute MultipleServiceRequests::meta_minimum_simultaneous_service_level;
	::Uml::CompositionParentRole MultipleServiceRequests::meta_ServiceProvider_parent;

	ServiceLevels::ServiceLevels() {}
	ServiceLevels::ServiceLevels(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceLevels::ServiceLevels(const ServiceLevels &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceLevels::ServiceLevels(ServiceLevels &&master) : MgaObject(master) {};

	ServiceLevels ServiceLevels::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceLevels& ServiceLevels::operator=(ServiceLevels &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceLevels ServiceLevels::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceLevels ServiceLevels::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceLevels ServiceLevels::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceLevels> ServiceLevels::Instances() { return ::Udm::InstantiatedAttr< ServiceLevels>(impl); }
	ServiceLevels ServiceLevels::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceLevels> ServiceLevels::Derived() { return ::Udm::DerivedAttr< ServiceLevels>(impl); }
	::Udm::ArchetypeAttr< ServiceLevels> ServiceLevels::Archetype() const { return ::Udm::ArchetypeAttr< ServiceLevels>(impl); }
	::Udm::BooleanAttr ServiceLevels::varying_service_levels() const { return ::Udm::BooleanAttr(impl, meta_varying_service_levels); }
	::Udm::ParentAttr< ::CQML::ServiceProvider> ServiceLevels::ServiceProvider_parent() const { return ::Udm::ParentAttr< ::CQML::ServiceProvider>(impl, meta_ServiceProvider_parent); }
	::Udm::ParentAttr< ::CQML::ServiceProvider> ServiceLevels::parent() const { return ::Udm::ParentAttr< ::CQML::ServiceProvider>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceLevels::Accept(Visitor &v) { v.Visit_ServiceLevels(*this); }

	::Uml::Class ServiceLevels::meta;
	::Uml::Attribute ServiceLevels::meta_varying_service_levels;
	::Uml::CompositionParentRole ServiceLevels::meta_ServiceProvider_parent;

	ServiceConsumer::ServiceConsumer() {}
	ServiceConsumer::ServiceConsumer(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ServiceConsumer::ServiceConsumer(const ServiceConsumer &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ServiceConsumer::ServiceConsumer(ServiceConsumer &&master) : MgaObject(master) {};

	ServiceConsumer ServiceConsumer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ServiceConsumer& ServiceConsumer::operator=(ServiceConsumer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ServiceConsumer ServiceConsumer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ServiceConsumer ServiceConsumer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ServiceConsumer ServiceConsumer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ServiceConsumer> ServiceConsumer::Instances() { return ::Udm::InstantiatedAttr< ServiceConsumer>(impl); }
	ServiceConsumer ServiceConsumer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ServiceConsumer> ServiceConsumer::Derived() { return ::Udm::DerivedAttr< ServiceConsumer>(impl); }
	::Udm::ArchetypeAttr< ServiceConsumer> ServiceConsumer::Archetype() const { return ::Udm::ArchetypeAttr< ServiceConsumer>(impl); }
	::Udm::BooleanAttr ServiceConsumer::prioritize_service_invocations() const { return ::Udm::BooleanAttr(impl, meta_prioritize_service_invocations); }
	::Udm::ParentAttr< ::CQML::RTRequirements> ServiceConsumer::RTRequirements_parent() const { return ::Udm::ParentAttr< ::CQML::RTRequirements>(impl, meta_RTRequirements_parent); }
	::Udm::ParentAttr< ::CQML::RTRequirements> ServiceConsumer::parent() const { return ::Udm::ParentAttr< ::CQML::RTRequirements>(impl, ::Udm::NULLPARENTROLE); }
	void ServiceConsumer::Accept(Visitor &v) { v.Visit_ServiceConsumer(*this); }

	::Uml::Class ServiceConsumer::meta;
	::Uml::Attribute ServiceConsumer::meta_prioritize_service_invocations;
	::Uml::CompositionParentRole ServiceConsumer::meta_RTRequirements_parent;

	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer() {}
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(::Udm::ObjectImpl *impl) : ImplementationContainer(impl) {}
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(const ComponentFactoryImplementationContainer &master) : ImplementationContainer(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryImplementationContainer::ComponentFactoryImplementationContainer(ComponentFactoryImplementationContainer &&master) : ImplementationContainer(master) {};

	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryImplementationContainer& ComponentFactoryImplementationContainer::operator=(ComponentFactoryImplementationContainer &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryImplementationContainer>(impl); }
	ComponentFactoryImplementationContainer ComponentFactoryImplementationContainer::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Derived() { return ::Udm::DerivedAttr< ComponentFactoryImplementationContainer>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryImplementationContainer> ComponentFactoryImplementationContainer::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryImplementationContainer>(impl); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryInstance> ComponentFactoryImplementationContainer::ComponentFactoryInstance_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryInstance>(impl, meta_ComponentFactoryInstance_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentFactoryImplementationContainer::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Implemenation> ComponentFactoryImplementationContainer::Implemenation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Implemenation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonolithicImplementationBase> ComponentFactoryImplementationContainer::MonolithicImplementationBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonolithicImplementationBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryInstance> ComponentFactoryImplementationContainer::ComponentFactoryInstance_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryInstance>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentFactoryImplementations> ComponentFactoryImplementationContainer::ComponentFactoryImplementations_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactoryImplementations>(impl, meta_ComponentFactoryImplementations_parent); }
	::Udm::ParentAttr< ::CQML::ComponentFactoryImplementations> ComponentFactoryImplementationContainer::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactoryImplementations>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryImplementationContainer::Accept(Visitor &v) { v.Visit_ComponentFactoryImplementationContainer(*this); }

	::Uml::Class ComponentFactoryImplementationContainer::meta;
	::Uml::CompositionChildRole ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children;
	::Uml::CompositionParentRole ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent;

	ComponentFactoryInstance::ComponentFactoryInstance() {}
	ComponentFactoryInstance::ComponentFactoryInstance(::Udm::ObjectImpl *impl) : MonolithicImplementationBase(impl), MgaObject(impl), Implemenation(impl) {}
	ComponentFactoryInstance::ComponentFactoryInstance(const ComponentFactoryInstance &master) : MonolithicImplementationBase(master), MgaObject(master), Implemenation(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryInstance::ComponentFactoryInstance(ComponentFactoryInstance &&master) : MonolithicImplementationBase(master), MgaObject(master), Implemenation(master) {};

	ComponentFactoryInstance ComponentFactoryInstance::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryInstance& ComponentFactoryInstance::operator=(ComponentFactoryInstance &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryInstance ComponentFactoryInstance::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryInstance ComponentFactoryInstance::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryInstance ComponentFactoryInstance::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryInstance> ComponentFactoryInstance::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryInstance>(impl); }
	ComponentFactoryInstance ComponentFactoryInstance::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryInstance> ComponentFactoryInstance::Derived() { return ::Udm::DerivedAttr< ComponentFactoryInstance>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryInstance> ComponentFactoryInstance::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryInstance>(impl); }
	::Udm::AssocAttr< ComponentFactoryRef> ComponentFactoryInstance::referedbyComponentFactoryRef() const { return ::Udm::AssocAttr< ComponentFactoryRef>(impl, meta_referedbyComponentFactoryRef); }
	::Udm::PointerAttr< ComponentFactory> ComponentFactoryInstance::ref() const { return ::Udm::PointerAttr< ComponentFactory>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer> ComponentFactoryInstance::ComponentFactoryImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer>(impl, meta_ComponentFactoryImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer> ComponentFactoryInstance::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentFactoryImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryInstance::Accept(Visitor &v) { v.Visit_ComponentFactoryInstance(*this); }

	::Uml::Class ComponentFactoryInstance::meta;
	::Uml::AssociationRole ComponentFactoryInstance::meta_referedbyComponentFactoryRef;
	::Uml::AssociationRole ComponentFactoryInstance::meta_ref;
	::Uml::CompositionParentRole ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent;

	ConfigProperty::ConfigProperty() {}
	ConfigProperty::ConfigProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConfigProperty::ConfigProperty(const ConfigProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConfigProperty::ConfigProperty(ConfigProperty &&master) : MgaObject(master) {};

	ConfigProperty ConfigProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConfigProperty& ConfigProperty::operator=(ConfigProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConfigProperty ConfigProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConfigProperty ConfigProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConfigProperty ConfigProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConfigProperty> ConfigProperty::Instances() { return ::Udm::InstantiatedAttr< ConfigProperty>(impl); }
	ConfigProperty ConfigProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConfigProperty> ConfigProperty::Derived() { return ::Udm::DerivedAttr< ConfigProperty>(impl); }
	::Udm::ArchetypeAttr< ConfigProperty> ConfigProperty::Archetype() const { return ::Udm::ArchetypeAttr< ConfigProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> ConfigProperty::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> ConfigProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Implemenation> ConfigProperty::srcConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Implemenation>(impl, meta_srcConfigProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> ConfigProperty::dstConfigProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstConfigProperty_end_); }
	void ConfigProperty::Accept(Visitor &v) { v.Visit_ConfigProperty(*this); }

	::Uml::Class ConfigProperty::meta;
	::Uml::CompositionParentRole ConfigProperty::meta_ImplementationContainer_parent;
	::Uml::AssociationRole ConfigProperty::meta_srcConfigProperty_end_;
	::Uml::AssociationRole ConfigProperty::meta_dstConfigProperty_end_;

	InfoProperty::InfoProperty() {}
	InfoProperty::InfoProperty(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InfoProperty::InfoProperty(const InfoProperty &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InfoProperty::InfoProperty(InfoProperty &&master) : MgaObject(master) {};

	InfoProperty InfoProperty::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InfoProperty& InfoProperty::operator=(InfoProperty &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InfoProperty InfoProperty::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InfoProperty InfoProperty::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InfoProperty InfoProperty::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InfoProperty> InfoProperty::Instances() { return ::Udm::InstantiatedAttr< InfoProperty>(impl); }
	InfoProperty InfoProperty::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InfoProperty> InfoProperty::Derived() { return ::Udm::DerivedAttr< InfoProperty>(impl); }
	::Udm::ArchetypeAttr< InfoProperty> InfoProperty::Archetype() const { return ::Udm::ArchetypeAttr< InfoProperty>(impl); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> InfoProperty::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> InfoProperty::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Implemenation> InfoProperty::srcInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Implemenation>(impl, meta_srcInfoProperty_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> InfoProperty::dstInfoProperty_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstInfoProperty_end_); }
	void InfoProperty::Accept(Visitor &v) { v.Visit_InfoProperty(*this); }

	::Uml::Class InfoProperty::meta;
	::Uml::CompositionParentRole InfoProperty::meta_ImplementationContainer_parent;
	::Uml::AssociationRole InfoProperty::meta_srcInfoProperty_end_;
	::Uml::AssociationRole InfoProperty::meta_dstInfoProperty_end_;

	MonolithprimaryArtifact::MonolithprimaryArtifact() {}
	MonolithprimaryArtifact::MonolithprimaryArtifact(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithprimaryArtifact::MonolithprimaryArtifact(const MonolithprimaryArtifact &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithprimaryArtifact::MonolithprimaryArtifact(MonolithprimaryArtifact &&master) : MgaObject(master) {};

	MonolithprimaryArtifact MonolithprimaryArtifact::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithprimaryArtifact& MonolithprimaryArtifact::operator=(MonolithprimaryArtifact &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithprimaryArtifact MonolithprimaryArtifact::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithprimaryArtifact MonolithprimaryArtifact::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithprimaryArtifact MonolithprimaryArtifact::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Instances() { return ::Udm::InstantiatedAttr< MonolithprimaryArtifact>(impl); }
	MonolithprimaryArtifact MonolithprimaryArtifact::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Derived() { return ::Udm::DerivedAttr< MonolithprimaryArtifact>(impl); }
	::Udm::ArchetypeAttr< MonolithprimaryArtifact> MonolithprimaryArtifact::Archetype() const { return ::Udm::ArchetypeAttr< MonolithprimaryArtifact>(impl); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithprimaryArtifact::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithprimaryArtifact::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase> MonolithprimaryArtifact::srcMonolithprimaryArtifact_end() const { return ::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase>(impl, meta_srcMonolithprimaryArtifact_end_); }
	::Udm::AssocEndAttr< ::CQML::ImplementationArtifactReference> MonolithprimaryArtifact::dstMonolithprimaryArtifact_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationArtifactReference>(impl, meta_dstMonolithprimaryArtifact_end_); }
	void MonolithprimaryArtifact::Accept(Visitor &v) { v.Visit_MonolithprimaryArtifact(*this); }

	::Uml::Class MonolithprimaryArtifact::meta;
	::Uml::CompositionParentRole MonolithprimaryArtifact::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_;
	::Uml::AssociationRole MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_;

	MonolithDeployRequirement::MonolithDeployRequirement() {}
	MonolithDeployRequirement::MonolithDeployRequirement(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithDeployRequirement::MonolithDeployRequirement(const MonolithDeployRequirement &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithDeployRequirement::MonolithDeployRequirement(MonolithDeployRequirement &&master) : MgaObject(master) {};

	MonolithDeployRequirement MonolithDeployRequirement::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithDeployRequirement& MonolithDeployRequirement::operator=(MonolithDeployRequirement &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithDeployRequirement MonolithDeployRequirement::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithDeployRequirement MonolithDeployRequirement::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithDeployRequirement MonolithDeployRequirement::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithDeployRequirement> MonolithDeployRequirement::Instances() { return ::Udm::InstantiatedAttr< MonolithDeployRequirement>(impl); }
	MonolithDeployRequirement MonolithDeployRequirement::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithDeployRequirement> MonolithDeployRequirement::Derived() { return ::Udm::DerivedAttr< MonolithDeployRequirement>(impl); }
	::Udm::ArchetypeAttr< MonolithDeployRequirement> MonolithDeployRequirement::Archetype() const { return ::Udm::ArchetypeAttr< MonolithDeployRequirement>(impl); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithDeployRequirement::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithDeployRequirement::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase> MonolithDeployRequirement::srcMonolithDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase>(impl, meta_srcMonolithDeployRequirement_end_); }
	::Udm::AssocEndAttr< ::CQML::ImplementationRequirement> MonolithDeployRequirement::dstMonolithDeployRequirement_end() const { return ::Udm::AssocEndAttr< ::CQML::ImplementationRequirement>(impl, meta_dstMonolithDeployRequirement_end_); }
	void MonolithDeployRequirement::Accept(Visitor &v) { v.Visit_MonolithDeployRequirement(*this); }

	::Uml::Class MonolithDeployRequirement::meta;
	::Uml::CompositionParentRole MonolithDeployRequirement::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_;
	::Uml::AssociationRole MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_;

	MonolithExecParameter::MonolithExecParameter() {}
	MonolithExecParameter::MonolithExecParameter(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonolithExecParameter::MonolithExecParameter(const MonolithExecParameter &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonolithExecParameter::MonolithExecParameter(MonolithExecParameter &&master) : MgaObject(master) {};

	MonolithExecParameter MonolithExecParameter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonolithExecParameter& MonolithExecParameter::operator=(MonolithExecParameter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonolithExecParameter MonolithExecParameter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonolithExecParameter MonolithExecParameter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonolithExecParameter MonolithExecParameter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonolithExecParameter> MonolithExecParameter::Instances() { return ::Udm::InstantiatedAttr< MonolithExecParameter>(impl); }
	MonolithExecParameter MonolithExecParameter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonolithExecParameter> MonolithExecParameter::Derived() { return ::Udm::DerivedAttr< MonolithExecParameter>(impl); }
	::Udm::ArchetypeAttr< MonolithExecParameter> MonolithExecParameter::Archetype() const { return ::Udm::ArchetypeAttr< MonolithExecParameter>(impl); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithExecParameter::ImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, meta_ImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ImplementationContainer> MonolithExecParameter::parent() const { return ::Udm::ParentAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase> MonolithExecParameter::srcMonolithExecParameter_end() const { return ::Udm::AssocEndAttr< ::CQML::MonolithicImplementationBase>(impl, meta_srcMonolithExecParameter_end_); }
	::Udm::AssocEndAttr< ::CQML::Property> MonolithExecParameter::dstMonolithExecParameter_end() const { return ::Udm::AssocEndAttr< ::CQML::Property>(impl, meta_dstMonolithExecParameter_end_); }
	void MonolithExecParameter::Accept(Visitor &v) { v.Visit_MonolithExecParameter(*this); }

	::Uml::Class MonolithExecParameter::meta;
	::Uml::CompositionParentRole MonolithExecParameter::meta_ImplementationContainer_parent;
	::Uml::AssociationRole MonolithExecParameter::meta_srcMonolithExecParameter_end_;
	::Uml::AssociationRole MonolithExecParameter::meta_dstMonolithExecParameter_end_;

	WorkerLibrary::WorkerLibrary() {}
	WorkerLibrary::WorkerLibrary(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerLibrary::WorkerLibrary(const WorkerLibrary &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerLibrary::WorkerLibrary(WorkerLibrary &&master) : MgaObject(master) {};

	WorkerLibrary WorkerLibrary::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerLibrary& WorkerLibrary::operator=(WorkerLibrary &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerLibrary WorkerLibrary::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerLibrary WorkerLibrary::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerLibrary WorkerLibrary::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerLibrary> WorkerLibrary::Instances() { return ::Udm::InstantiatedAttr< WorkerLibrary>(impl); }
	WorkerLibrary WorkerLibrary::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerLibrary> WorkerLibrary::Derived() { return ::Udm::DerivedAttr< WorkerLibrary>(impl); }
	::Udm::ArchetypeAttr< WorkerLibrary> WorkerLibrary::Archetype() const { return ::Udm::ArchetypeAttr< WorkerLibrary>(impl); }
	::Udm::StringAttr WorkerLibrary::Location() const { return ::Udm::StringAttr(impl, meta_Location); }
	::Udm::ChildrenAttr< ::CQML::WorkerFile> WorkerLibrary::WorkerFile_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerFile>(impl, meta_WorkerFile_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> WorkerLibrary::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerFile> WorkerLibrary::WorkerFile_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerFile>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackageBase> WorkerLibrary::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::WorkerLibraries> WorkerLibrary::WorkerLibraries_parent() const { return ::Udm::ParentAttr< ::CQML::WorkerLibraries>(impl, meta_WorkerLibraries_parent); }
	::Udm::ParentAttr< ::CQML::WorkerLibraries> WorkerLibrary::parent() const { return ::Udm::ParentAttr< ::CQML::WorkerLibraries>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerLibrary::Accept(Visitor &v) { v.Visit_WorkerLibrary(*this); }

	::Uml::Class WorkerLibrary::meta;
	::Uml::Attribute WorkerLibrary::meta_Location;
	::Uml::CompositionChildRole WorkerLibrary::meta_WorkerFile_children;
	::Uml::CompositionParentRole WorkerLibrary::meta_WorkerLibraries_parent;

	Worker::Worker() {}
	Worker::Worker(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Worker::Worker(const Worker &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Worker::Worker(Worker &&master) : MgaObject(master) {};

	Worker Worker::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Worker& Worker::operator=(Worker &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Worker Worker::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Worker Worker::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Worker Worker::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Worker> Worker::Instances() { return ::Udm::InstantiatedAttr< Worker>(impl); }
	Worker Worker::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Worker> Worker::Derived() { return ::Udm::DerivedAttr< Worker>(impl); }
	::Udm::ArchetypeAttr< Worker> Worker::Archetype() const { return ::Udm::ArchetypeAttr< Worker>(impl); }
	::Udm::BooleanAttr Worker::Abstract() const { return ::Udm::BooleanAttr(impl, meta_Abstract); }
	::Udm::AssocAttr< WorkerType> Worker::referedbyWorkerType() const { return ::Udm::AssocAttr< WorkerType>(impl, meta_referedbyWorkerType); }
	::Udm::ChildrenAttr< ::CQML::Action> Worker::Action_children() const { return ::Udm::ChildrenAttr< ::CQML::Action>(impl, meta_Action_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Worker::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Action> Worker::Action_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Action>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ActionBase> Worker::ActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::WorkerPackageBase> Worker::WorkerPackageBase_parent() const { return ::Udm::ParentAttr< ::CQML::WorkerPackageBase>(impl, meta_WorkerPackageBase_parent); }
	::Udm::ParentAttr< ::CQML::WorkerPackageBase> Worker::parent() const { return ::Udm::ParentAttr< ::CQML::WorkerPackageBase>(impl, ::Udm::NULLPARENTROLE); }
	void Worker::Accept(Visitor &v) { v.Visit_Worker(*this); }

	::Uml::Class Worker::meta;
	::Uml::Attribute Worker::meta_Abstract;
	::Uml::AssociationRole Worker::meta_referedbyWorkerType;
	::Uml::CompositionChildRole Worker::meta_Action_children;
	::Uml::CompositionParentRole Worker::meta_WorkerPackageBase_parent;

	WorkerFile::WorkerFile() {}
	WorkerFile::WorkerFile(::Udm::ObjectImpl *impl) : WorkerPackageBase(impl) {}
	WorkerFile::WorkerFile(const WorkerFile &master) : WorkerPackageBase(master) {}

#ifdef UDM_RVALUE
	WorkerFile::WorkerFile(WorkerFile &&master) : WorkerPackageBase(master) {};

	WorkerFile WorkerFile::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerFile& WorkerFile::operator=(WorkerFile &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerFile WorkerFile::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerFile WorkerFile::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerFile WorkerFile::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerFile> WorkerFile::Instances() { return ::Udm::InstantiatedAttr< WorkerFile>(impl); }
	WorkerFile WorkerFile::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerFile> WorkerFile::Derived() { return ::Udm::DerivedAttr< WorkerFile>(impl); }
	::Udm::ArchetypeAttr< WorkerFile> WorkerFile::Archetype() const { return ::Udm::ArchetypeAttr< WorkerFile>(impl); }
	::Udm::StringAttr WorkerFile::Location() const { return ::Udm::StringAttr(impl, meta_Location); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackage> WorkerFile::WorkerPackage_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackage>(impl, meta_WorkerPackage_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> WorkerFile::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackageBase> WorkerFile::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackage> WorkerFile::WorkerPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::WorkerLibrary> WorkerFile::WorkerLibrary_parent() const { return ::Udm::ParentAttr< ::CQML::WorkerLibrary>(impl, meta_WorkerLibrary_parent); }
	::Udm::ParentAttr< ::CQML::WorkerLibrary> WorkerFile::parent() const { return ::Udm::ParentAttr< ::CQML::WorkerLibrary>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerFile::Accept(Visitor &v) { v.Visit_WorkerFile(*this); }

	::Uml::Class WorkerFile::meta;
	::Uml::Attribute WorkerFile::meta_Location;
	::Uml::CompositionChildRole WorkerFile::meta_WorkerPackage_children;
	::Uml::CompositionParentRole WorkerFile::meta_WorkerLibrary_parent;

	WorkerPackageBase::WorkerPackageBase() {}
	WorkerPackageBase::WorkerPackageBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerPackageBase::WorkerPackageBase(const WorkerPackageBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerPackageBase::WorkerPackageBase(WorkerPackageBase &&master) : MgaObject(master) {};

	WorkerPackageBase WorkerPackageBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerPackageBase& WorkerPackageBase::operator=(WorkerPackageBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerPackageBase WorkerPackageBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerPackageBase WorkerPackageBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerPackageBase WorkerPackageBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerPackageBase> WorkerPackageBase::Instances() { return ::Udm::InstantiatedAttr< WorkerPackageBase>(impl); }
	WorkerPackageBase WorkerPackageBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerPackageBase> WorkerPackageBase::Derived() { return ::Udm::DerivedAttr< WorkerPackageBase>(impl); }
	::Udm::ArchetypeAttr< WorkerPackageBase> WorkerPackageBase::Archetype() const { return ::Udm::ArchetypeAttr< WorkerPackageBase>(impl); }
	::Udm::ChildrenAttr< ::CQML::Worker> WorkerPackageBase::Worker_children() const { return ::Udm::ChildrenAttr< ::CQML::Worker>(impl, meta_Worker_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> WorkerPackageBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Worker> WorkerPackageBase::Worker_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Worker>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> WorkerPackageBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class WorkerPackageBase::meta;
	::Uml::CompositionChildRole WorkerPackageBase::meta_Worker_children;

	WorkerPackage::WorkerPackage() {}
	WorkerPackage::WorkerPackage(::Udm::ObjectImpl *impl) : WorkerPackageBase(impl) {}
	WorkerPackage::WorkerPackage(const WorkerPackage &master) : WorkerPackageBase(master) {}

#ifdef UDM_RVALUE
	WorkerPackage::WorkerPackage(WorkerPackage &&master) : WorkerPackageBase(master) {};

	WorkerPackage WorkerPackage::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerPackage& WorkerPackage::operator=(WorkerPackage &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerPackage WorkerPackage::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerPackage WorkerPackage::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerPackage WorkerPackage::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerPackage> WorkerPackage::Instances() { return ::Udm::InstantiatedAttr< WorkerPackage>(impl); }
	WorkerPackage WorkerPackage::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerPackage> WorkerPackage::Derived() { return ::Udm::DerivedAttr< WorkerPackage>(impl); }
	::Udm::ArchetypeAttr< WorkerPackage> WorkerPackage::Archetype() const { return ::Udm::ArchetypeAttr< WorkerPackage>(impl); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackage> WorkerPackage::WorkerPackage_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackage>(impl, meta_WorkerPackage_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> WorkerPackage::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackageBase> WorkerPackage::WorkerPackageBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackageBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerPackage> WorkerPackage::WorkerPackage_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerPackage>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::WorkerFile> WorkerPackage::WorkerFile_parent() const { return ::Udm::ParentAttr< ::CQML::WorkerFile>(impl, meta_WorkerFile_parent); }
	::Udm::ParentAttr< ::CQML::WorkerPackage> WorkerPackage::WorkerPackage_parent() const { return ::Udm::ParentAttr< ::CQML::WorkerPackage>(impl, meta_WorkerPackage_parent); }
	::Udm::ParentAttr< ::CQML::WorkerPackageBase> WorkerPackage::parent() const { return ::Udm::ParentAttr< ::CQML::WorkerPackageBase>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerPackage::Accept(Visitor &v) { v.Visit_WorkerPackage(*this); }

	::Uml::Class WorkerPackage::meta;
	::Uml::CompositionChildRole WorkerPackage::meta_WorkerPackage_children;
	::Uml::CompositionParentRole WorkerPackage::meta_WorkerFile_parent;
	::Uml::CompositionParentRole WorkerPackage::meta_WorkerPackage_parent;

	WorkerType::WorkerType() {}
	WorkerType::WorkerType(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	WorkerType::WorkerType(const WorkerType &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	WorkerType::WorkerType(WorkerType &&master) : MgaObject(master) {};

	WorkerType WorkerType::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerType& WorkerType::operator=(WorkerType &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerType WorkerType::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerType WorkerType::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerType WorkerType::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerType> WorkerType::Instances() { return ::Udm::InstantiatedAttr< WorkerType>(impl); }
	WorkerType WorkerType::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerType> WorkerType::Derived() { return ::Udm::DerivedAttr< WorkerType>(impl); }
	::Udm::ArchetypeAttr< WorkerType> WorkerType::Archetype() const { return ::Udm::ArchetypeAttr< WorkerType>(impl); }
	::Udm::PointerAttr< Worker> WorkerType::ref() const { return ::Udm::PointerAttr< Worker>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Component> WorkerType::Component_parent() const { return ::Udm::ParentAttr< ::CQML::Component>(impl, meta_Component_parent); }
	::Udm::ParentAttr< ::CQML::Component> WorkerType::parent() const { return ::Udm::ParentAttr< ::CQML::Component>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerType::Accept(Visitor &v) { v.Visit_WorkerType(*this); }

	::Uml::Class WorkerType::meta;
	::Uml::AssociationRole WorkerType::meta_ref;
	::Uml::CompositionParentRole WorkerType::meta_Component_parent;

	Variable::Variable() {}
	Variable::Variable(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Variable::Variable(const Variable &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Variable::Variable(Variable &&master) : MgaObject(master) {};

	Variable Variable::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Variable& Variable::operator=(Variable &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Variable Variable::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Variable Variable::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Variable Variable::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Variable> Variable::Instances() { return ::Udm::InstantiatedAttr< Variable>(impl); }
	Variable Variable::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Variable> Variable::Derived() { return ::Udm::DerivedAttr< Variable>(impl); }
	::Udm::ArchetypeAttr< Variable> Variable::Archetype() const { return ::Udm::ArchetypeAttr< Variable>(impl); }
	::Udm::StringAttr Variable::InitialValue() const { return ::Udm::StringAttr(impl, meta_InitialValue); }
	::Udm::PointerAttr< PredefinedType> Variable::ref() const { return ::Udm::PointerAttr< PredefinedType>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Variable::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Variable::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void Variable::Accept(Visitor &v) { v.Visit_Variable(*this); }

	::Uml::Class Variable::meta;
	::Uml::Attribute Variable::meta_InitialValue;
	::Uml::AssociationRole Variable::meta_ref;
	::Uml::CompositionParentRole Variable::meta_BehaviorModel_parent;

	BehaviorModel::BehaviorModel() {}
	BehaviorModel::BehaviorModel(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BehaviorModel::BehaviorModel(const BehaviorModel &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BehaviorModel::BehaviorModel(BehaviorModel &&master) : MgaObject(master) {};

	BehaviorModel BehaviorModel::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BehaviorModel& BehaviorModel::operator=(BehaviorModel &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BehaviorModel BehaviorModel::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BehaviorModel BehaviorModel::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BehaviorModel BehaviorModel::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BehaviorModel> BehaviorModel::Instances() { return ::Udm::InstantiatedAttr< BehaviorModel>(impl); }
	BehaviorModel BehaviorModel::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BehaviorModel> BehaviorModel::Derived() { return ::Udm::DerivedAttr< BehaviorModel>(impl); }
	::Udm::ArchetypeAttr< BehaviorModel> BehaviorModel::Archetype() const { return ::Udm::ArchetypeAttr< BehaviorModel>(impl); }
	::Udm::ChildrenAttr< ::CQML::Variable> BehaviorModel::Variable_children() const { return ::Udm::ChildrenAttr< ::CQML::Variable>(impl, meta_Variable_children); }
	::Udm::ChildrenAttr< ::CQML::TerminalTransition> BehaviorModel::TerminalTransition_children() const { return ::Udm::ChildrenAttr< ::CQML::TerminalTransition>(impl, meta_TerminalTransition_children); }
	::Udm::ChildrenAttr< ::CQML::Terminal> BehaviorModel::Terminal_children() const { return ::Udm::ChildrenAttr< ::CQML::Terminal>(impl, meta_Terminal_children); }
	::Udm::ChildrenAttr< ::CQML::TerminalEffect> BehaviorModel::TerminalEffect_children() const { return ::Udm::ChildrenAttr< ::CQML::TerminalEffect>(impl, meta_TerminalEffect_children); }
	::Udm::ChildrenAttr< ::CQML::StateBase> BehaviorModel::StateBase_children() const { return ::Udm::ChildrenAttr< ::CQML::StateBase>(impl, meta_StateBase_children); }
	::Udm::ChildrenAttr< ::CQML::BranchTransition> BehaviorModel::BranchTransition_children() const { return ::Udm::ChildrenAttr< ::CQML::BranchTransition>(impl, meta_BranchTransition_children); }
	::Udm::ChildrenAttr< ::CQML::Transition> BehaviorModel::Transition_children() const { return ::Udm::ChildrenAttr< ::CQML::Transition>(impl, meta_Transition_children); }
	::Udm::ChildrenAttr< ::CQML::LoopTransition> BehaviorModel::LoopTransition_children() const { return ::Udm::ChildrenAttr< ::CQML::LoopTransition>(impl, meta_LoopTransition_children); }
	::Udm::ChildrenAttr< ::CQML::Finish> BehaviorModel::Finish_children() const { return ::Udm::ChildrenAttr< ::CQML::Finish>(impl, meta_Finish_children); }
	::Udm::ChildrenAttr< ::CQML::BehaviorInputAction> BehaviorModel::BehaviorInputAction_children() const { return ::Udm::ChildrenAttr< ::CQML::BehaviorInputAction>(impl, meta_BehaviorInputAction_children); }
	::Udm::ChildrenAttr< ::CQML::ActionBase> BehaviorModel::ActionBase_children() const { return ::Udm::ChildrenAttr< ::CQML::ActionBase>(impl, meta_ActionBase_children); }
	::Udm::ChildrenAttr< ::CQML::InputEffect> BehaviorModel::InputEffect_children() const { return ::Udm::ChildrenAttr< ::CQML::InputEffect>(impl, meta_InputEffect_children); }
	::Udm::ChildrenAttr< ::CQML::Effect> BehaviorModel::Effect_children() const { return ::Udm::ChildrenAttr< ::CQML::Effect>(impl, meta_Effect_children); }
	::Udm::ChildrenAttr< ::CQML::QueryInputAction> BehaviorModel::QueryInputAction_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryInputAction>(impl, meta_QueryInputAction_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> BehaviorModel::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Variable> BehaviorModel::Variable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Variable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BehaviorInputAction> BehaviorModel::BehaviorInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BehaviorInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InputAction> BehaviorModel::InputAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MultiInputAction> BehaviorModel::MultiInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MultiInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Action> BehaviorModel::Action_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Action>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ActionBase> BehaviorModel::ActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OutputAction> BehaviorModel::OutputAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OutputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Finish> BehaviorModel::Finish_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Finish>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QueryAction> BehaviorModel::QueryAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QueryInputAction> BehaviorModel::QueryInputAction_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QueryInputAction>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Transition> BehaviorModel::Transition_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Transition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::State> BehaviorModel::State_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::State>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::StateBase> BehaviorModel::StateBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::StateBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BranchState> BehaviorModel::BranchState_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BranchState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BranchTransition> BehaviorModel::BranchTransition_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BranchTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LoopState> BehaviorModel::LoopState_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LoopState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DoWhileState> BehaviorModel::DoWhileState_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DoWhileState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ForState> BehaviorModel::ForState_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ForState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WhileState> BehaviorModel::WhileState_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WhileState>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LoopTransition> BehaviorModel::LoopTransition_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LoopTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Terminal> BehaviorModel::Terminal_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Terminal>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TerminalTransition> BehaviorModel::TerminalTransition_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TerminalTransition>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Effect> BehaviorModel::Effect_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Effect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EffectBase> BehaviorModel::EffectBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EffectBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InputEffect> BehaviorModel::InputEffect_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InputEffect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TerminalEffect> BehaviorModel::TerminalEffect_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TerminalEffect>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> BehaviorModel::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BehaviorModel::meta;
	::Uml::CompositionChildRole BehaviorModel::meta_Variable_children;
	::Uml::CompositionChildRole BehaviorModel::meta_TerminalTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Terminal_children;
	::Uml::CompositionChildRole BehaviorModel::meta_TerminalEffect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_StateBase_children;
	::Uml::CompositionChildRole BehaviorModel::meta_BranchTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Transition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_LoopTransition_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Finish_children;
	::Uml::CompositionChildRole BehaviorModel::meta_BehaviorInputAction_children;
	::Uml::CompositionChildRole BehaviorModel::meta_ActionBase_children;
	::Uml::CompositionChildRole BehaviorModel::meta_InputEffect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_Effect_children;
	::Uml::CompositionChildRole BehaviorModel::meta_QueryInputAction_children;

	BehaviorInputAction::BehaviorInputAction() {}
	BehaviorInputAction::BehaviorInputAction(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BehaviorInputAction::BehaviorInputAction(const BehaviorInputAction &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BehaviorInputAction::BehaviorInputAction(BehaviorInputAction &&master) : MgaObject(master) {};

	BehaviorInputAction BehaviorInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BehaviorInputAction& BehaviorInputAction::operator=(BehaviorInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BehaviorInputAction BehaviorInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BehaviorInputAction BehaviorInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BehaviorInputAction BehaviorInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BehaviorInputAction> BehaviorInputAction::Instances() { return ::Udm::InstantiatedAttr< BehaviorInputAction>(impl); }
	BehaviorInputAction BehaviorInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BehaviorInputAction> BehaviorInputAction::Derived() { return ::Udm::DerivedAttr< BehaviorInputAction>(impl); }
	::Udm::ArchetypeAttr< BehaviorInputAction> BehaviorInputAction::Archetype() const { return ::Udm::ArchetypeAttr< BehaviorInputAction>(impl); }
	::Udm::AClassPointerAttr< InputEffect, StateBase> BehaviorInputAction::dstInputEffect() const { return ::Udm::AClassPointerAttr< InputEffect, StateBase>(impl, meta_dstInputEffect, meta_dstInputEffect_rev); }
	::Udm::AClassPointerAttr< Finish, StateBase> BehaviorInputAction::srcFinish() const { return ::Udm::AClassPointerAttr< Finish, StateBase>(impl, meta_srcFinish, meta_srcFinish_rev); }
	::Udm::ChildrenAttr< ::CQML::Property> BehaviorInputAction::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> BehaviorInputAction::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> BehaviorInputAction::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> BehaviorInputAction::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> BehaviorInputAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class BehaviorInputAction::meta;
	::Uml::AssociationRole BehaviorInputAction::meta_dstInputEffect;
	::Uml::AssociationRole BehaviorInputAction::meta_dstInputEffect_rev;
	::Uml::AssociationRole BehaviorInputAction::meta_srcFinish;
	::Uml::AssociationRole BehaviorInputAction::meta_srcFinish_rev;
	::Uml::CompositionChildRole BehaviorInputAction::meta_Property_children;
	::Uml::CompositionParentRole BehaviorInputAction::meta_BehaviorModel_parent;

	InputAction::InputAction() {}
	InputAction::InputAction(::Udm::ObjectImpl *impl) : BehaviorInputAction(impl) {}
	InputAction::InputAction(const InputAction &master) : BehaviorInputAction(master) {}

#ifdef UDM_RVALUE
	InputAction::InputAction(InputAction &&master) : BehaviorInputAction(master) {};

	InputAction InputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InputAction& InputAction::operator=(InputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InputAction InputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InputAction InputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InputAction InputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InputAction> InputAction::Instances() { return ::Udm::InstantiatedAttr< InputAction>(impl); }
	InputAction InputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InputAction> InputAction::Derived() { return ::Udm::DerivedAttr< InputAction>(impl); }
	::Udm::ArchetypeAttr< InputAction> InputAction::Archetype() const { return ::Udm::ArchetypeAttr< InputAction>(impl); }
	::Udm::AClassPointerAttr< Input, SingleInputBase> InputAction::srcInput() const { return ::Udm::AClassPointerAttr< Input, SingleInputBase>(impl, meta_srcInput, meta_srcInput_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> InputAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void InputAction::Accept(Visitor &v) { v.Visit_InputAction(*this); }

	::Uml::Class InputAction::meta;
	::Uml::AssociationRole InputAction::meta_srcInput;
	::Uml::AssociationRole InputAction::meta_srcInput_rev;

	MultiInputAction::MultiInputAction() {}
	MultiInputAction::MultiInputAction(::Udm::ObjectImpl *impl) : BehaviorInputAction(impl) {}
	MultiInputAction::MultiInputAction(const MultiInputAction &master) : BehaviorInputAction(master) {}

#ifdef UDM_RVALUE
	MultiInputAction::MultiInputAction(MultiInputAction &&master) : BehaviorInputAction(master) {};

	MultiInputAction MultiInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInputAction& MultiInputAction::operator=(MultiInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInputAction MultiInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInputAction MultiInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInputAction MultiInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInputAction> MultiInputAction::Instances() { return ::Udm::InstantiatedAttr< MultiInputAction>(impl); }
	MultiInputAction MultiInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInputAction> MultiInputAction::Derived() { return ::Udm::DerivedAttr< MultiInputAction>(impl); }
	::Udm::ArchetypeAttr< MultiInputAction> MultiInputAction::Archetype() const { return ::Udm::ArchetypeAttr< MultiInputAction>(impl); }
	::Udm::AClassPointerAttr< MultiInput, MultiInputBase> MultiInputAction::srcMultiInput() const { return ::Udm::AClassPointerAttr< MultiInput, MultiInputBase>(impl, meta_srcMultiInput, meta_srcMultiInput_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> MultiInputAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void MultiInputAction::Accept(Visitor &v) { v.Visit_MultiInputAction(*this); }

	::Uml::Class MultiInputAction::meta;
	::Uml::AssociationRole MultiInputAction::meta_srcMultiInput;
	::Uml::AssociationRole MultiInputAction::meta_srcMultiInput_rev;

	Action::Action() {}
	Action::Action(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	Action::Action(const Action &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	Action::Action(Action &&master) : ActionBase(master) {};

	Action Action::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Action& Action::operator=(Action &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Action Action::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Action Action::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Action Action::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Action> Action::Instances() { return ::Udm::InstantiatedAttr< Action>(impl); }
	Action Action::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Action> Action::Derived() { return ::Udm::DerivedAttr< Action>(impl); }
	::Udm::ArchetypeAttr< Action> Action::Archetype() const { return ::Udm::ArchetypeAttr< Action>(impl); }
	::Udm::IntegerAttr Action::Duration() const { return ::Udm::IntegerAttr(impl, meta_Duration); }
	::Udm::BooleanAttr Action::LogAction() const { return ::Udm::BooleanAttr(impl, meta_LogAction); }
	::Udm::ParentAttr< ::CQML::Worker> Action::Worker_parent() const { return ::Udm::ParentAttr< ::CQML::Worker>(impl, meta_Worker_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Action::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Action::Accept(Visitor &v) { v.Visit_Action(*this); }

	::Uml::Class Action::meta;
	::Uml::Attribute Action::meta_Duration;
	::Uml::Attribute Action::meta_LogAction;
	::Uml::CompositionParentRole Action::meta_Worker_parent;

	ActionBase::ActionBase() {}
	ActionBase::ActionBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ActionBase::ActionBase(const ActionBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ActionBase::ActionBase(ActionBase &&master) : MgaObject(master) {};

	ActionBase ActionBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ActionBase& ActionBase::operator=(ActionBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ActionBase ActionBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ActionBase ActionBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ActionBase ActionBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ActionBase> ActionBase::Instances() { return ::Udm::InstantiatedAttr< ActionBase>(impl); }
	ActionBase ActionBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ActionBase> ActionBase::Derived() { return ::Udm::DerivedAttr< ActionBase>(impl); }
	::Udm::ArchetypeAttr< ActionBase> ActionBase::Archetype() const { return ::Udm::ArchetypeAttr< ActionBase>(impl); }
	::Udm::AClassPointerAttr< Effect, StateBase> ActionBase::dstEffect() const { return ::Udm::AClassPointerAttr< Effect, StateBase>(impl, meta_dstEffect, meta_dstEffect_rev); }
	::Udm::AClassPointerAttr< Transition, State> ActionBase::srcTransition() const { return ::Udm::AClassPointerAttr< Transition, State>(impl, meta_srcTransition, meta_srcTransition_rev); }
	::Udm::AClassPointerAttr< BranchTransition, BranchState> ActionBase::srcBranchTransition() const { return ::Udm::AClassPointerAttr< BranchTransition, BranchState>(impl, meta_srcBranchTransition, meta_srcBranchTransition_rev); }
	::Udm::AClassPointerAttr< LoopTransition, LoopState> ActionBase::srcLoopTransition() const { return ::Udm::AClassPointerAttr< LoopTransition, LoopState>(impl, meta_srcLoopTransition, meta_srcLoopTransition_rev); }
	::Udm::ChildrenAttr< ::CQML::Property> ActionBase::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ActionBase::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> ActionBase::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> ActionBase::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ActionBase::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ActionBase::meta;
	::Uml::AssociationRole ActionBase::meta_dstEffect;
	::Uml::AssociationRole ActionBase::meta_dstEffect_rev;
	::Uml::AssociationRole ActionBase::meta_srcTransition;
	::Uml::AssociationRole ActionBase::meta_srcTransition_rev;
	::Uml::AssociationRole ActionBase::meta_srcBranchTransition;
	::Uml::AssociationRole ActionBase::meta_srcBranchTransition_rev;
	::Uml::AssociationRole ActionBase::meta_srcLoopTransition;
	::Uml::AssociationRole ActionBase::meta_srcLoopTransition_rev;
	::Uml::CompositionChildRole ActionBase::meta_Property_children;
	::Uml::CompositionParentRole ActionBase::meta_BehaviorModel_parent;

	OutputAction::OutputAction() {}
	OutputAction::OutputAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	OutputAction::OutputAction(const OutputAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	OutputAction::OutputAction(OutputAction &&master) : ActionBase(master) {};

	OutputAction OutputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OutputAction& OutputAction::operator=(OutputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OutputAction OutputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OutputAction OutputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OutputAction OutputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OutputAction> OutputAction::Instances() { return ::Udm::InstantiatedAttr< OutputAction>(impl); }
	OutputAction OutputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OutputAction> OutputAction::Derived() { return ::Udm::DerivedAttr< OutputAction>(impl); }
	::Udm::ArchetypeAttr< OutputAction> OutputAction::Archetype() const { return ::Udm::ArchetypeAttr< OutputAction>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> OutputAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void OutputAction::Accept(Visitor &v) { v.Visit_OutputAction(*this); }

	::Uml::Class OutputAction::meta;

	Finish::Finish() {}
	Finish::Finish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Finish::Finish(const Finish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Finish::Finish(Finish &&master) : MgaObject(master) {};

	Finish Finish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Finish& Finish::operator=(Finish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Finish Finish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Finish Finish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Finish Finish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Finish> Finish::Instances() { return ::Udm::InstantiatedAttr< Finish>(impl); }
	Finish Finish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Finish> Finish::Derived() { return ::Udm::DerivedAttr< Finish>(impl); }
	::Udm::ArchetypeAttr< Finish> Finish::Archetype() const { return ::Udm::ArchetypeAttr< Finish>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Finish::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Finish::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::StateBase> Finish::srcFinish_end() const { return ::Udm::AssocEndAttr< ::CQML::StateBase>(impl, meta_srcFinish_end_); }
	::Udm::AssocEndAttr< ::CQML::BehaviorInputAction> Finish::dstFinish_end() const { return ::Udm::AssocEndAttr< ::CQML::BehaviorInputAction>(impl, meta_dstFinish_end_); }
	void Finish::Accept(Visitor &v) { v.Visit_Finish(*this); }

	::Uml::Class Finish::meta;
	::Uml::CompositionParentRole Finish::meta_BehaviorModel_parent;
	::Uml::AssociationRole Finish::meta_srcFinish_end_;
	::Uml::AssociationRole Finish::meta_dstFinish_end_;

	QueryAction::QueryAction() {}
	QueryAction::QueryAction(::Udm::ObjectImpl *impl) : ActionBase(impl) {}
	QueryAction::QueryAction(const QueryAction &master) : ActionBase(master) {}

#ifdef UDM_RVALUE
	QueryAction::QueryAction(QueryAction &&master) : ActionBase(master) {};

	QueryAction QueryAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryAction& QueryAction::operator=(QueryAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryAction QueryAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryAction QueryAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryAction QueryAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryAction> QueryAction::Instances() { return ::Udm::InstantiatedAttr< QueryAction>(impl); }
	QueryAction QueryAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryAction> QueryAction::Derived() { return ::Udm::DerivedAttr< QueryAction>(impl); }
	::Udm::ArchetypeAttr< QueryAction> QueryAction::Archetype() const { return ::Udm::ArchetypeAttr< QueryAction>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> QueryAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void QueryAction::Accept(Visitor &v) { v.Visit_QueryAction(*this); }

	::Uml::Class QueryAction::meta;

	QueryInputAction::QueryInputAction() {}
	QueryInputAction::QueryInputAction(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInputAction::QueryInputAction(const QueryInputAction &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInputAction::QueryInputAction(QueryInputAction &&master) : MgaObject(master) {};

	QueryInputAction QueryInputAction::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInputAction& QueryInputAction::operator=(QueryInputAction &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInputAction QueryInputAction::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInputAction QueryInputAction::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInputAction QueryInputAction::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInputAction> QueryInputAction::Instances() { return ::Udm::InstantiatedAttr< QueryInputAction>(impl); }
	QueryInputAction QueryInputAction::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInputAction> QueryInputAction::Derived() { return ::Udm::DerivedAttr< QueryInputAction>(impl); }
	::Udm::ArchetypeAttr< QueryInputAction> QueryInputAction::Archetype() const { return ::Udm::ArchetypeAttr< QueryInputAction>(impl); }
	::Udm::AClassPointerAttr< QueryInput, QueryInputBase> QueryInputAction::srcQueryInput() const { return ::Udm::AClassPointerAttr< QueryInput, QueryInputBase>(impl, meta_srcQueryInput, meta_srcQueryInput_rev); }
	::Udm::ChildrenAttr< ::CQML::Property> QueryInputAction::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> QueryInputAction::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> QueryInputAction::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> QueryInputAction::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> QueryInputAction::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void QueryInputAction::Accept(Visitor &v) { v.Visit_QueryInputAction(*this); }

	::Uml::Class QueryInputAction::meta;
	::Uml::AssociationRole QueryInputAction::meta_srcQueryInput;
	::Uml::AssociationRole QueryInputAction::meta_srcQueryInput_rev;
	::Uml::CompositionChildRole QueryInputAction::meta_Property_children;
	::Uml::CompositionParentRole QueryInputAction::meta_BehaviorModel_parent;

	Environment::Environment() {}
	Environment::Environment(::Udm::ObjectImpl *impl) : MultiInputBase(impl), MgaObject(impl) {}
	Environment::Environment(const Environment &master) : MultiInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	Environment::Environment(Environment &&master) : MultiInputBase(master), MgaObject(master) {};

	Environment Environment::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Environment& Environment::operator=(Environment &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Environment Environment::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Environment Environment::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Environment Environment::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Environment> Environment::Instances() { return ::Udm::InstantiatedAttr< Environment>(impl); }
	Environment Environment::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Environment> Environment::Derived() { return ::Udm::DerivedAttr< Environment>(impl); }
	::Udm::ArchetypeAttr< Environment> Environment::Archetype() const { return ::Udm::ArchetypeAttr< Environment>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> Environment::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> Environment::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void Environment::Accept(Visitor &v) { v.Visit_Environment(*this); }

	::Uml::Class Environment::meta;
	::Uml::CompositionParentRole Environment::meta_TopLevelBehavior_parent;

	PeriodicEvent::PeriodicEvent() {}
	PeriodicEvent::PeriodicEvent(::Udm::ObjectImpl *impl) : SingleInputBase(impl), MgaObject(impl) {}
	PeriodicEvent::PeriodicEvent(const PeriodicEvent &master) : SingleInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PeriodicEvent::PeriodicEvent(PeriodicEvent &&master) : SingleInputBase(master), MgaObject(master) {};

	PeriodicEvent PeriodicEvent::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PeriodicEvent& PeriodicEvent::operator=(PeriodicEvent &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PeriodicEvent PeriodicEvent::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PeriodicEvent PeriodicEvent::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PeriodicEvent PeriodicEvent::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PeriodicEvent> PeriodicEvent::Instances() { return ::Udm::InstantiatedAttr< PeriodicEvent>(impl); }
	PeriodicEvent PeriodicEvent::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PeriodicEvent> PeriodicEvent::Derived() { return ::Udm::DerivedAttr< PeriodicEvent>(impl); }
	::Udm::ArchetypeAttr< PeriodicEvent> PeriodicEvent::Archetype() const { return ::Udm::ArchetypeAttr< PeriodicEvent>(impl); }
	::Udm::StringAttr PeriodicEvent::Hertz() const { return ::Udm::StringAttr(impl, meta_Hertz); }
	::Udm::StringAttr PeriodicEvent::Distribution() const { return ::Udm::StringAttr(impl, meta_Distribution); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> PeriodicEvent::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> PeriodicEvent::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void PeriodicEvent::Accept(Visitor &v) { v.Visit_PeriodicEvent(*this); }

	::Uml::Class PeriodicEvent::meta;
	::Uml::Attribute PeriodicEvent::meta_Hertz;
	::Uml::Attribute PeriodicEvent::meta_Distribution;
	::Uml::CompositionParentRole PeriodicEvent::meta_TopLevelBehavior_parent;

	ApplicationTask::ApplicationTask() {}
	ApplicationTask::ApplicationTask(::Udm::ObjectImpl *impl) : SingleInputBase(impl), MgaObject(impl) {}
	ApplicationTask::ApplicationTask(const ApplicationTask &master) : SingleInputBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ApplicationTask::ApplicationTask(ApplicationTask &&master) : SingleInputBase(master), MgaObject(master) {};

	ApplicationTask ApplicationTask::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ApplicationTask& ApplicationTask::operator=(ApplicationTask &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ApplicationTask ApplicationTask::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ApplicationTask ApplicationTask::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ApplicationTask ApplicationTask::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ApplicationTask> ApplicationTask::Instances() { return ::Udm::InstantiatedAttr< ApplicationTask>(impl); }
	ApplicationTask ApplicationTask::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ApplicationTask> ApplicationTask::Derived() { return ::Udm::DerivedAttr< ApplicationTask>(impl); }
	::Udm::ArchetypeAttr< ApplicationTask> ApplicationTask::Archetype() const { return ::Udm::ArchetypeAttr< ApplicationTask>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> ApplicationTask::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> ApplicationTask::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	void ApplicationTask::Accept(Visitor &v) { v.Visit_ApplicationTask(*this); }

	::Uml::Class ApplicationTask::meta;
	::Uml::CompositionParentRole ApplicationTask::meta_TopLevelBehavior_parent;

	Input::Input() {}
	Input::Input(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Input::Input(const Input &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Input::Input(Input &&master) : MgaObject(master) {};

	Input Input::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Input& Input::operator=(Input &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Input Input::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Input Input::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Input Input::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Input> Input::Instances() { return ::Udm::InstantiatedAttr< Input>(impl); }
	Input Input::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Input> Input::Derived() { return ::Udm::DerivedAttr< Input>(impl); }
	::Udm::ArchetypeAttr< Input> Input::Archetype() const { return ::Udm::ArchetypeAttr< Input>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> Input::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> Input::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::SingleInputBase> Input::srcInput_end() const { return ::Udm::AssocEndAttr< ::CQML::SingleInputBase>(impl, meta_srcInput_end_); }
	::Udm::AssocEndAttr< ::CQML::InputAction> Input::dstInput_end() const { return ::Udm::AssocEndAttr< ::CQML::InputAction>(impl, meta_dstInput_end_); }
	void Input::Accept(Visitor &v) { v.Visit_Input(*this); }

	::Uml::Class Input::meta;
	::Uml::CompositionParentRole Input::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole Input::meta_srcInput_end_;
	::Uml::AssociationRole Input::meta_dstInput_end_;

	MultiInput::MultiInput() {}
	MultiInput::MultiInput(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MultiInput::MultiInput(const MultiInput &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MultiInput::MultiInput(MultiInput &&master) : MgaObject(master) {};

	MultiInput MultiInput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MultiInput& MultiInput::operator=(MultiInput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MultiInput MultiInput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MultiInput MultiInput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MultiInput MultiInput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MultiInput> MultiInput::Instances() { return ::Udm::InstantiatedAttr< MultiInput>(impl); }
	MultiInput MultiInput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MultiInput> MultiInput::Derived() { return ::Udm::DerivedAttr< MultiInput>(impl); }
	::Udm::ArchetypeAttr< MultiInput> MultiInput::Archetype() const { return ::Udm::ArchetypeAttr< MultiInput>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> MultiInput::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> MultiInput::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::MultiInputBase> MultiInput::srcMultiInput_end() const { return ::Udm::AssocEndAttr< ::CQML::MultiInputBase>(impl, meta_srcMultiInput_end_); }
	::Udm::AssocEndAttr< ::CQML::MultiInputAction> MultiInput::dstMultiInput_end() const { return ::Udm::AssocEndAttr< ::CQML::MultiInputAction>(impl, meta_dstMultiInput_end_); }
	void MultiInput::Accept(Visitor &v) { v.Visit_MultiInput(*this); }

	::Uml::Class MultiInput::meta;
	::Uml::CompositionParentRole MultiInput::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole MultiInput::meta_srcMultiInput_end_;
	::Uml::AssociationRole MultiInput::meta_dstMultiInput_end_;

	QueryInput::QueryInput() {}
	QueryInput::QueryInput(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QueryInput::QueryInput(const QueryInput &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QueryInput::QueryInput(QueryInput &&master) : MgaObject(master) {};

	QueryInput QueryInput::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QueryInput& QueryInput::operator=(QueryInput &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QueryInput QueryInput::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QueryInput QueryInput::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QueryInput QueryInput::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QueryInput> QueryInput::Instances() { return ::Udm::InstantiatedAttr< QueryInput>(impl); }
	QueryInput QueryInput::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QueryInput> QueryInput::Derived() { return ::Udm::DerivedAttr< QueryInput>(impl); }
	::Udm::ArchetypeAttr< QueryInput> QueryInput::Archetype() const { return ::Udm::ArchetypeAttr< QueryInput>(impl); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> QueryInput::TopLevelBehavior_parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, meta_TopLevelBehavior_parent); }
	::Udm::ParentAttr< ::CQML::TopLevelBehavior> QueryInput::parent() const { return ::Udm::ParentAttr< ::CQML::TopLevelBehavior>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::QueryInputBase> QueryInput::srcQueryInput_end() const { return ::Udm::AssocEndAttr< ::CQML::QueryInputBase>(impl, meta_srcQueryInput_end_); }
	::Udm::AssocEndAttr< ::CQML::QueryInputAction> QueryInput::dstQueryInput_end() const { return ::Udm::AssocEndAttr< ::CQML::QueryInputAction>(impl, meta_dstQueryInput_end_); }
	void QueryInput::Accept(Visitor &v) { v.Visit_QueryInput(*this); }

	::Uml::Class QueryInput::meta;
	::Uml::CompositionParentRole QueryInput::meta_TopLevelBehavior_parent;
	::Uml::AssociationRole QueryInput::meta_srcQueryInput_end_;
	::Uml::AssociationRole QueryInput::meta_dstQueryInput_end_;

	Transition::Transition() {}
	Transition::Transition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Transition::Transition(const Transition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Transition::Transition(Transition &&master) : MgaObject(master) {};

	Transition Transition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Transition& Transition::operator=(Transition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Transition Transition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Transition Transition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Transition Transition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Transition> Transition::Instances() { return ::Udm::InstantiatedAttr< Transition>(impl); }
	Transition Transition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Transition> Transition::Derived() { return ::Udm::DerivedAttr< Transition>(impl); }
	::Udm::ArchetypeAttr< Transition> Transition::Archetype() const { return ::Udm::ArchetypeAttr< Transition>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Transition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Transition::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::State> Transition::srcTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::State>(impl, meta_srcTransition_end_); }
	::Udm::AssocEndAttr< ::CQML::ActionBase> Transition::dstTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::ActionBase>(impl, meta_dstTransition_end_); }
	void Transition::Accept(Visitor &v) { v.Visit_Transition(*this); }

	::Uml::Class Transition::meta;
	::Uml::CompositionParentRole Transition::meta_BehaviorModel_parent;
	::Uml::AssociationRole Transition::meta_srcTransition_end_;
	::Uml::AssociationRole Transition::meta_dstTransition_end_;

	State::State() {}
	State::State(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	State::State(const State &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	State::State(State &&master) : StateBase(master) {};

	State State::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	State& State::operator=(State &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	State State::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	State State::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	State State::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< State> State::Instances() { return ::Udm::InstantiatedAttr< State>(impl); }
	State State::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< State> State::Derived() { return ::Udm::DerivedAttr< State>(impl); }
	::Udm::ArchetypeAttr< State> State::Archetype() const { return ::Udm::ArchetypeAttr< State>(impl); }
	::Udm::AClassPointerAttr< Transition, ActionBase> State::dstTransition() const { return ::Udm::AClassPointerAttr< Transition, ActionBase>(impl, meta_dstTransition, meta_dstTransition_rev); }
	::Udm::AClassPointerAttr< TerminalTransition, Terminal> State::dstTerminalTransition() const { return ::Udm::AClassPointerAttr< TerminalTransition, Terminal>(impl, meta_dstTerminalTransition, meta_dstTerminalTransition_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> State::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void State::Accept(Visitor &v) { v.Visit_State(*this); }

	::Uml::Class State::meta;
	::Uml::AssociationRole State::meta_dstTransition;
	::Uml::AssociationRole State::meta_dstTransition_rev;
	::Uml::AssociationRole State::meta_dstTerminalTransition;
	::Uml::AssociationRole State::meta_dstTerminalTransition_rev;

	StateBase::StateBase() {}
	StateBase::StateBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	StateBase::StateBase(const StateBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	StateBase::StateBase(StateBase &&master) : MgaObject(master) {};

	StateBase StateBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	StateBase& StateBase::operator=(StateBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	StateBase StateBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	StateBase StateBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	StateBase StateBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< StateBase> StateBase::Instances() { return ::Udm::InstantiatedAttr< StateBase>(impl); }
	StateBase StateBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< StateBase> StateBase::Derived() { return ::Udm::DerivedAttr< StateBase>(impl); }
	::Udm::ArchetypeAttr< StateBase> StateBase::Archetype() const { return ::Udm::ArchetypeAttr< StateBase>(impl); }
	::Udm::AClassAssocAttr< InputEffect, BehaviorInputAction> StateBase::srcInputEffect() const { return ::Udm::AClassAssocAttr< InputEffect, BehaviorInputAction>(impl, meta_srcInputEffect, meta_srcInputEffect_rev); }
	::Udm::AClassAssocAttr< Effect, ActionBase> StateBase::srcEffect() const { return ::Udm::AClassAssocAttr< Effect, ActionBase>(impl, meta_srcEffect, meta_srcEffect_rev); }
	::Udm::AClassAssocAttr< Finish, BehaviorInputAction> StateBase::dstFinish() const { return ::Udm::AClassAssocAttr< Finish, BehaviorInputAction>(impl, meta_dstFinish, meta_dstFinish_rev); }
	::Udm::AClassPointerAttr< TerminalEffect, Terminal> StateBase::srcTerminalEffect() const { return ::Udm::AClassPointerAttr< TerminalEffect, Terminal>(impl, meta_srcTerminalEffect, meta_srcTerminalEffect_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> StateBase::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> StateBase::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class StateBase::meta;
	::Uml::AssociationRole StateBase::meta_srcInputEffect;
	::Uml::AssociationRole StateBase::meta_srcInputEffect_rev;
	::Uml::AssociationRole StateBase::meta_srcEffect;
	::Uml::AssociationRole StateBase::meta_srcEffect_rev;
	::Uml::AssociationRole StateBase::meta_dstFinish;
	::Uml::AssociationRole StateBase::meta_dstFinish_rev;
	::Uml::AssociationRole StateBase::meta_srcTerminalEffect;
	::Uml::AssociationRole StateBase::meta_srcTerminalEffect_rev;
	::Uml::CompositionParentRole StateBase::meta_BehaviorModel_parent;

	BranchState::BranchState() {}
	BranchState::BranchState(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	BranchState::BranchState(const BranchState &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	BranchState::BranchState(BranchState &&master) : StateBase(master) {};

	BranchState BranchState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BranchState& BranchState::operator=(BranchState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BranchState BranchState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BranchState BranchState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BranchState BranchState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BranchState> BranchState::Instances() { return ::Udm::InstantiatedAttr< BranchState>(impl); }
	BranchState BranchState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BranchState> BranchState::Derived() { return ::Udm::DerivedAttr< BranchState>(impl); }
	::Udm::ArchetypeAttr< BranchState> BranchState::Archetype() const { return ::Udm::ArchetypeAttr< BranchState>(impl); }
	::Udm::AClassAssocAttr< BranchTransition, ActionBase> BranchState::dstBranchTransition() const { return ::Udm::AClassAssocAttr< BranchTransition, ActionBase>(impl, meta_dstBranchTransition, meta_dstBranchTransition_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> BranchState::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void BranchState::Accept(Visitor &v) { v.Visit_BranchState(*this); }

	::Uml::Class BranchState::meta;
	::Uml::AssociationRole BranchState::meta_dstBranchTransition;
	::Uml::AssociationRole BranchState::meta_dstBranchTransition_rev;

	BranchTransition::BranchTransition() {}
	BranchTransition::BranchTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	BranchTransition::BranchTransition(const BranchTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	BranchTransition::BranchTransition(BranchTransition &&master) : MgaObject(master) {};

	BranchTransition BranchTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	BranchTransition& BranchTransition::operator=(BranchTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	BranchTransition BranchTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	BranchTransition BranchTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	BranchTransition BranchTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< BranchTransition> BranchTransition::Instances() { return ::Udm::InstantiatedAttr< BranchTransition>(impl); }
	BranchTransition BranchTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< BranchTransition> BranchTransition::Derived() { return ::Udm::DerivedAttr< BranchTransition>(impl); }
	::Udm::ArchetypeAttr< BranchTransition> BranchTransition::Archetype() const { return ::Udm::ArchetypeAttr< BranchTransition>(impl); }
	::Udm::StringAttr BranchTransition::Condition() const { return ::Udm::StringAttr(impl, meta_Condition); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> BranchTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> BranchTransition::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::BranchState> BranchTransition::srcBranchTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::BranchState>(impl, meta_srcBranchTransition_end_); }
	::Udm::AssocEndAttr< ::CQML::ActionBase> BranchTransition::dstBranchTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::ActionBase>(impl, meta_dstBranchTransition_end_); }
	void BranchTransition::Accept(Visitor &v) { v.Visit_BranchTransition(*this); }

	::Uml::Class BranchTransition::meta;
	::Uml::Attribute BranchTransition::meta_Condition;
	::Uml::CompositionParentRole BranchTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole BranchTransition::meta_srcBranchTransition_end_;
	::Uml::AssociationRole BranchTransition::meta_dstBranchTransition_end_;

	LoopState::LoopState() {}
	LoopState::LoopState(::Udm::ObjectImpl *impl) : StateBase(impl) {}
	LoopState::LoopState(const LoopState &master) : StateBase(master) {}

#ifdef UDM_RVALUE
	LoopState::LoopState(LoopState &&master) : StateBase(master) {};

	LoopState LoopState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LoopState& LoopState::operator=(LoopState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LoopState LoopState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LoopState LoopState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LoopState LoopState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LoopState> LoopState::Instances() { return ::Udm::InstantiatedAttr< LoopState>(impl); }
	LoopState LoopState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LoopState> LoopState::Derived() { return ::Udm::DerivedAttr< LoopState>(impl); }
	::Udm::ArchetypeAttr< LoopState> LoopState::Archetype() const { return ::Udm::ArchetypeAttr< LoopState>(impl); }
	::Udm::StringAttr LoopState::LoopingCondition() const { return ::Udm::StringAttr(impl, meta_LoopingCondition); }
	::Udm::AClassPointerAttr< LoopTransition, ActionBase> LoopState::dstLoopTransition() const { return ::Udm::AClassPointerAttr< LoopTransition, ActionBase>(impl, meta_dstLoopTransition, meta_dstLoopTransition_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> LoopState::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class LoopState::meta;
	::Uml::Attribute LoopState::meta_LoopingCondition;
	::Uml::AssociationRole LoopState::meta_dstLoopTransition;
	::Uml::AssociationRole LoopState::meta_dstLoopTransition_rev;

	DoWhileState::DoWhileState() {}
	DoWhileState::DoWhileState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	DoWhileState::DoWhileState(const DoWhileState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	DoWhileState::DoWhileState(DoWhileState &&master) : LoopState(master) {};

	DoWhileState DoWhileState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DoWhileState& DoWhileState::operator=(DoWhileState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DoWhileState DoWhileState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DoWhileState DoWhileState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DoWhileState DoWhileState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DoWhileState> DoWhileState::Instances() { return ::Udm::InstantiatedAttr< DoWhileState>(impl); }
	DoWhileState DoWhileState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DoWhileState> DoWhileState::Derived() { return ::Udm::DerivedAttr< DoWhileState>(impl); }
	::Udm::ArchetypeAttr< DoWhileState> DoWhileState::Archetype() const { return ::Udm::ArchetypeAttr< DoWhileState>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> DoWhileState::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void DoWhileState::Accept(Visitor &v) { v.Visit_DoWhileState(*this); }

	::Uml::Class DoWhileState::meta;

	ForState::ForState() {}
	ForState::ForState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	ForState::ForState(const ForState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	ForState::ForState(ForState &&master) : LoopState(master) {};

	ForState ForState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ForState& ForState::operator=(ForState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ForState ForState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ForState ForState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ForState ForState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ForState> ForState::Instances() { return ::Udm::InstantiatedAttr< ForState>(impl); }
	ForState ForState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ForState> ForState::Derived() { return ::Udm::DerivedAttr< ForState>(impl); }
	::Udm::ArchetypeAttr< ForState> ForState::Archetype() const { return ::Udm::ArchetypeAttr< ForState>(impl); }
	::Udm::StringAttr ForState::InitialCondition() const { return ::Udm::StringAttr(impl, meta_InitialCondition); }
	::Udm::StringAttr ForState::IncrementExpr() const { return ::Udm::StringAttr(impl, meta_IncrementExpr); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> ForState::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void ForState::Accept(Visitor &v) { v.Visit_ForState(*this); }

	::Uml::Class ForState::meta;
	::Uml::Attribute ForState::meta_InitialCondition;
	::Uml::Attribute ForState::meta_IncrementExpr;

	WhileState::WhileState() {}
	WhileState::WhileState(::Udm::ObjectImpl *impl) : LoopState(impl) {}
	WhileState::WhileState(const WhileState &master) : LoopState(master) {}

#ifdef UDM_RVALUE
	WhileState::WhileState(WhileState &&master) : LoopState(master) {};

	WhileState WhileState::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WhileState& WhileState::operator=(WhileState &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WhileState WhileState::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WhileState WhileState::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WhileState WhileState::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WhileState> WhileState::Instances() { return ::Udm::InstantiatedAttr< WhileState>(impl); }
	WhileState WhileState::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WhileState> WhileState::Derived() { return ::Udm::DerivedAttr< WhileState>(impl); }
	::Udm::ArchetypeAttr< WhileState> WhileState::Archetype() const { return ::Udm::ArchetypeAttr< WhileState>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> WhileState::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void WhileState::Accept(Visitor &v) { v.Visit_WhileState(*this); }

	::Uml::Class WhileState::meta;

	LoopTransition::LoopTransition() {}
	LoopTransition::LoopTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LoopTransition::LoopTransition(const LoopTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LoopTransition::LoopTransition(LoopTransition &&master) : MgaObject(master) {};

	LoopTransition LoopTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LoopTransition& LoopTransition::operator=(LoopTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LoopTransition LoopTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LoopTransition LoopTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LoopTransition LoopTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LoopTransition> LoopTransition::Instances() { return ::Udm::InstantiatedAttr< LoopTransition>(impl); }
	LoopTransition LoopTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LoopTransition> LoopTransition::Derived() { return ::Udm::DerivedAttr< LoopTransition>(impl); }
	::Udm::ArchetypeAttr< LoopTransition> LoopTransition::Archetype() const { return ::Udm::ArchetypeAttr< LoopTransition>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> LoopTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> LoopTransition::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::LoopState> LoopTransition::srcLoopTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::LoopState>(impl, meta_srcLoopTransition_end_); }
	::Udm::AssocEndAttr< ::CQML::ActionBase> LoopTransition::dstLoopTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::ActionBase>(impl, meta_dstLoopTransition_end_); }
	void LoopTransition::Accept(Visitor &v) { v.Visit_LoopTransition(*this); }

	::Uml::Class LoopTransition::meta;
	::Uml::CompositionParentRole LoopTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole LoopTransition::meta_srcLoopTransition_end_;
	::Uml::AssociationRole LoopTransition::meta_dstLoopTransition_end_;

	Terminal::Terminal() {}
	Terminal::Terminal(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Terminal::Terminal(const Terminal &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Terminal::Terminal(Terminal &&master) : MgaObject(master) {};

	Terminal Terminal::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Terminal& Terminal::operator=(Terminal &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Terminal Terminal::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Terminal Terminal::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Terminal Terminal::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Terminal> Terminal::Instances() { return ::Udm::InstantiatedAttr< Terminal>(impl); }
	Terminal Terminal::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Terminal> Terminal::Derived() { return ::Udm::DerivedAttr< Terminal>(impl); }
	::Udm::ArchetypeAttr< Terminal> Terminal::Archetype() const { return ::Udm::ArchetypeAttr< Terminal>(impl); }
	::Udm::AClassAssocAttr< TerminalTransition, State> Terminal::srcTerminalTransition() const { return ::Udm::AClassAssocAttr< TerminalTransition, State>(impl, meta_srcTerminalTransition, meta_srcTerminalTransition_rev); }
	::Udm::AClassPointerAttr< TerminalEffect, StateBase> Terminal::dstTerminalEffect() const { return ::Udm::AClassPointerAttr< TerminalEffect, StateBase>(impl, meta_dstTerminalEffect, meta_dstTerminalEffect_rev); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Terminal::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Terminal::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	void Terminal::Accept(Visitor &v) { v.Visit_Terminal(*this); }

	::Uml::Class Terminal::meta;
	::Uml::AssociationRole Terminal::meta_srcTerminalTransition;
	::Uml::AssociationRole Terminal::meta_srcTerminalTransition_rev;
	::Uml::AssociationRole Terminal::meta_dstTerminalEffect;
	::Uml::AssociationRole Terminal::meta_dstTerminalEffect_rev;
	::Uml::CompositionParentRole Terminal::meta_BehaviorModel_parent;

	TerminalTransition::TerminalTransition() {}
	TerminalTransition::TerminalTransition(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TerminalTransition::TerminalTransition(const TerminalTransition &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TerminalTransition::TerminalTransition(TerminalTransition &&master) : MgaObject(master) {};

	TerminalTransition TerminalTransition::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TerminalTransition& TerminalTransition::operator=(TerminalTransition &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TerminalTransition TerminalTransition::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TerminalTransition TerminalTransition::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TerminalTransition TerminalTransition::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TerminalTransition> TerminalTransition::Instances() { return ::Udm::InstantiatedAttr< TerminalTransition>(impl); }
	TerminalTransition TerminalTransition::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TerminalTransition> TerminalTransition::Derived() { return ::Udm::DerivedAttr< TerminalTransition>(impl); }
	::Udm::ArchetypeAttr< TerminalTransition> TerminalTransition::Archetype() const { return ::Udm::ArchetypeAttr< TerminalTransition>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> TerminalTransition::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> TerminalTransition::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::State> TerminalTransition::srcTerminalTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::State>(impl, meta_srcTerminalTransition_end_); }
	::Udm::AssocEndAttr< ::CQML::Terminal> TerminalTransition::dstTerminalTransition_end() const { return ::Udm::AssocEndAttr< ::CQML::Terminal>(impl, meta_dstTerminalTransition_end_); }
	void TerminalTransition::Accept(Visitor &v) { v.Visit_TerminalTransition(*this); }

	::Uml::Class TerminalTransition::meta;
	::Uml::CompositionParentRole TerminalTransition::meta_BehaviorModel_parent;
	::Uml::AssociationRole TerminalTransition::meta_srcTerminalTransition_end_;
	::Uml::AssociationRole TerminalTransition::meta_dstTerminalTransition_end_;

	Effect::Effect() {}
	Effect::Effect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	Effect::Effect(const Effect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	Effect::Effect(Effect &&master) : EffectBase(master) {};

	Effect Effect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Effect& Effect::operator=(Effect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Effect Effect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Effect Effect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Effect Effect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Effect> Effect::Instances() { return ::Udm::InstantiatedAttr< Effect>(impl); }
	Effect Effect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Effect> Effect::Derived() { return ::Udm::DerivedAttr< Effect>(impl); }
	::Udm::ArchetypeAttr< Effect> Effect::Archetype() const { return ::Udm::ArchetypeAttr< Effect>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Effect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> Effect::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ActionBase> Effect::srcEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::ActionBase>(impl, meta_srcEffect_end_); }
	::Udm::AssocEndAttr< ::CQML::StateBase> Effect::dstEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::StateBase>(impl, meta_dstEffect_end_); }
	void Effect::Accept(Visitor &v) { v.Visit_Effect(*this); }

	::Uml::Class Effect::meta;
	::Uml::CompositionParentRole Effect::meta_BehaviorModel_parent;
	::Uml::AssociationRole Effect::meta_srcEffect_end_;
	::Uml::AssociationRole Effect::meta_dstEffect_end_;

	EffectBase::EffectBase() {}
	EffectBase::EffectBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EffectBase::EffectBase(const EffectBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EffectBase::EffectBase(EffectBase &&master) : MgaObject(master) {};

	EffectBase EffectBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EffectBase& EffectBase::operator=(EffectBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EffectBase EffectBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EffectBase EffectBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EffectBase EffectBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EffectBase> EffectBase::Instances() { return ::Udm::InstantiatedAttr< EffectBase>(impl); }
	EffectBase EffectBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EffectBase> EffectBase::Derived() { return ::Udm::DerivedAttr< EffectBase>(impl); }
	::Udm::ArchetypeAttr< EffectBase> EffectBase::Archetype() const { return ::Udm::ArchetypeAttr< EffectBase>(impl); }
	::Udm::StringAttr EffectBase::Postcondition() const { return ::Udm::StringAttr(impl, meta_Postcondition); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> EffectBase::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class EffectBase::meta;
	::Uml::Attribute EffectBase::meta_Postcondition;

	InputEffect::InputEffect() {}
	InputEffect::InputEffect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	InputEffect::InputEffect(const InputEffect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	InputEffect::InputEffect(InputEffect &&master) : EffectBase(master) {};

	InputEffect InputEffect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InputEffect& InputEffect::operator=(InputEffect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InputEffect InputEffect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InputEffect InputEffect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InputEffect InputEffect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InputEffect> InputEffect::Instances() { return ::Udm::InstantiatedAttr< InputEffect>(impl); }
	InputEffect InputEffect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InputEffect> InputEffect::Derived() { return ::Udm::DerivedAttr< InputEffect>(impl); }
	::Udm::ArchetypeAttr< InputEffect> InputEffect::Archetype() const { return ::Udm::ArchetypeAttr< InputEffect>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> InputEffect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> InputEffect::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::BehaviorInputAction> InputEffect::srcInputEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::BehaviorInputAction>(impl, meta_srcInputEffect_end_); }
	::Udm::AssocEndAttr< ::CQML::StateBase> InputEffect::dstInputEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::StateBase>(impl, meta_dstInputEffect_end_); }
	void InputEffect::Accept(Visitor &v) { v.Visit_InputEffect(*this); }

	::Uml::Class InputEffect::meta;
	::Uml::CompositionParentRole InputEffect::meta_BehaviorModel_parent;
	::Uml::AssociationRole InputEffect::meta_srcInputEffect_end_;
	::Uml::AssociationRole InputEffect::meta_dstInputEffect_end_;

	TerminalEffect::TerminalEffect() {}
	TerminalEffect::TerminalEffect(::Udm::ObjectImpl *impl) : EffectBase(impl) {}
	TerminalEffect::TerminalEffect(const TerminalEffect &master) : EffectBase(master) {}

#ifdef UDM_RVALUE
	TerminalEffect::TerminalEffect(TerminalEffect &&master) : EffectBase(master) {};

	TerminalEffect TerminalEffect::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TerminalEffect& TerminalEffect::operator=(TerminalEffect &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TerminalEffect TerminalEffect::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TerminalEffect TerminalEffect::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TerminalEffect TerminalEffect::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TerminalEffect> TerminalEffect::Instances() { return ::Udm::InstantiatedAttr< TerminalEffect>(impl); }
	TerminalEffect TerminalEffect::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TerminalEffect> TerminalEffect::Derived() { return ::Udm::DerivedAttr< TerminalEffect>(impl); }
	::Udm::ArchetypeAttr< TerminalEffect> TerminalEffect::Archetype() const { return ::Udm::ArchetypeAttr< TerminalEffect>(impl); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> TerminalEffect::BehaviorModel_parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, meta_BehaviorModel_parent); }
	::Udm::ParentAttr< ::CQML::BehaviorModel> TerminalEffect::parent() const { return ::Udm::ParentAttr< ::CQML::BehaviorModel>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Terminal> TerminalEffect::srcTerminalEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::Terminal>(impl, meta_srcTerminalEffect_end_); }
	::Udm::AssocEndAttr< ::CQML::StateBase> TerminalEffect::dstTerminalEffect_end() const { return ::Udm::AssocEndAttr< ::CQML::StateBase>(impl, meta_dstTerminalEffect_end_); }
	void TerminalEffect::Accept(Visitor &v) { v.Visit_TerminalEffect(*this); }

	::Uml::Class TerminalEffect::meta;
	::Uml::CompositionParentRole TerminalEffect::meta_BehaviorModel_parent;
	::Uml::AssociationRole TerminalEffect::meta_srcTerminalEffect_end_;
	::Uml::AssociationRole TerminalEffect::meta_dstTerminalEffect_end_;

	ComponentAssemblyQoSCharacteristic::ComponentAssemblyQoSCharacteristic() {}
	ComponentAssemblyQoSCharacteristic::ComponentAssemblyQoSCharacteristic(::Udm::ObjectImpl *impl) : QoSCharacteristicBase(impl), MgaObject(impl) {}
	ComponentAssemblyQoSCharacteristic::ComponentAssemblyQoSCharacteristic(const ComponentAssemblyQoSCharacteristic &master) : QoSCharacteristicBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblyQoSCharacteristic::ComponentAssemblyQoSCharacteristic(ComponentAssemblyQoSCharacteristic &&master) : QoSCharacteristicBase(master), MgaObject(master) {};

	ComponentAssemblyQoSCharacteristic ComponentAssemblyQoSCharacteristic::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblyQoSCharacteristic& ComponentAssemblyQoSCharacteristic::operator=(ComponentAssemblyQoSCharacteristic &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblyQoSCharacteristic ComponentAssemblyQoSCharacteristic::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblyQoSCharacteristic ComponentAssemblyQoSCharacteristic::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblyQoSCharacteristic ComponentAssemblyQoSCharacteristic::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblyQoSCharacteristic> ComponentAssemblyQoSCharacteristic::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblyQoSCharacteristic>(impl); }
	ComponentAssemblyQoSCharacteristic ComponentAssemblyQoSCharacteristic::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblyQoSCharacteristic> ComponentAssemblyQoSCharacteristic::Derived() { return ::Udm::DerivedAttr< ComponentAssemblyQoSCharacteristic>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblyQoSCharacteristic> ComponentAssemblyQoSCharacteristic::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblyQoSCharacteristic>(impl); }
	::Udm::AClassAssocAttr< ComponentAssemblyQoS, ComponentAssemblyBase> ComponentAssemblyQoSCharacteristic::srcComponentAssemblyQoS() const { return ::Udm::AClassAssocAttr< ComponentAssemblyQoS, ComponentAssemblyBase>(impl, meta_srcComponentAssemblyQoS, meta_srcComponentAssemblyQoS_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ComponentAssemblyQoSCharacteristic::AssemblyQoSComposition_ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_AssemblyQoSComposition_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssemblyQoSCharacteristic::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentAssemblyQoSCharacteristic::meta;
	::Uml::AssociationRole ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS;
	::Uml::AssociationRole ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS_rev;
	::Uml::CompositionParentRole ComponentAssemblyQoSCharacteristic::meta_AssemblyQoSComposition_ComponentImplementationContainer_parent;

	QoSCharacteristicBase::QoSCharacteristicBase() {}
	QoSCharacteristicBase::QoSCharacteristicBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QoSCharacteristicBase::QoSCharacteristicBase(const QoSCharacteristicBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QoSCharacteristicBase::QoSCharacteristicBase(QoSCharacteristicBase &&master) : MgaObject(master) {};

	QoSCharacteristicBase QoSCharacteristicBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QoSCharacteristicBase& QoSCharacteristicBase::operator=(QoSCharacteristicBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QoSCharacteristicBase QoSCharacteristicBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QoSCharacteristicBase QoSCharacteristicBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QoSCharacteristicBase QoSCharacteristicBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QoSCharacteristicBase> QoSCharacteristicBase::Instances() { return ::Udm::InstantiatedAttr< QoSCharacteristicBase>(impl); }
	QoSCharacteristicBase QoSCharacteristicBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QoSCharacteristicBase> QoSCharacteristicBase::Derived() { return ::Udm::DerivedAttr< QoSCharacteristicBase>(impl); }
	::Udm::ArchetypeAttr< QoSCharacteristicBase> QoSCharacteristicBase::Archetype() const { return ::Udm::ArchetypeAttr< QoSCharacteristicBase>(impl); }
	::Udm::AssocAttr< QoSCharRef> QoSCharacteristicBase::referedbyQoSCharRef() const { return ::Udm::AssocAttr< QoSCharRef>(impl, meta_referedbyQoSCharRef); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QoSCharacteristicBase::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::Udm::Object> QoSCharacteristicBase::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class QoSCharacteristicBase::meta;
	::Uml::AssociationRole QoSCharacteristicBase::meta_referedbyQoSCharRef;
	::Uml::CompositionParentRole QoSCharacteristicBase::meta_ComponentAssembly_parent;

	QoSCharRef::QoSCharRef() {}
	QoSCharRef::QoSCharRef(::Udm::ObjectImpl *impl) : ComponentAssemblyQoSCharacteristic(impl),ConnectionQoSCharacteristic(impl),ComponentQoSCharacteristic(impl),PortQoSCharacteristic(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	QoSCharRef::QoSCharRef(const QoSCharRef &master) : ComponentAssemblyQoSCharacteristic(master),ConnectionQoSCharacteristic(master),ComponentQoSCharacteristic(master),PortQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	QoSCharRef::QoSCharRef(QoSCharRef &&master) : ComponentAssemblyQoSCharacteristic(master),ConnectionQoSCharacteristic(master),ComponentQoSCharacteristic(master),PortQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {};

	QoSCharRef QoSCharRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QoSCharRef& QoSCharRef::operator=(QoSCharRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QoSCharRef QoSCharRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QoSCharRef QoSCharRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QoSCharRef QoSCharRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QoSCharRef> QoSCharRef::Instances() { return ::Udm::InstantiatedAttr< QoSCharRef>(impl); }
	QoSCharRef QoSCharRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QoSCharRef> QoSCharRef::Derived() { return ::Udm::DerivedAttr< QoSCharRef>(impl); }
	::Udm::ArchetypeAttr< QoSCharRef> QoSCharRef::Archetype() const { return ::Udm::ArchetypeAttr< QoSCharRef>(impl); }
	::Udm::PointerAttr< QoSCharacteristicBase> QoSCharRef::ref() const { return ::Udm::PointerAttr< QoSCharacteristicBase>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::MgaObject> QoSCharRef::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void QoSCharRef::Accept(Visitor &v) { v.Visit_QoSCharRef(*this); }

	::Uml::Class QoSCharRef::meta;
	::Uml::AssociationRole QoSCharRef::meta_ref;

	ComponentAssemblySecurityQoS::ComponentAssemblySecurityQoS() {}
	ComponentAssemblySecurityQoS::ComponentAssemblySecurityQoS(::Udm::ObjectImpl *impl) : ComponentAssemblyQoSCharacteristic(impl),SecurityQoS(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	ComponentAssemblySecurityQoS::ComponentAssemblySecurityQoS(const ComponentAssemblySecurityQoS &master) : ComponentAssemblyQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblySecurityQoS::ComponentAssemblySecurityQoS(ComponentAssemblySecurityQoS &&master) : ComponentAssemblyQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {};

	ComponentAssemblySecurityQoS ComponentAssemblySecurityQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblySecurityQoS& ComponentAssemblySecurityQoS::operator=(ComponentAssemblySecurityQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblySecurityQoS ComponentAssemblySecurityQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblySecurityQoS ComponentAssemblySecurityQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblySecurityQoS ComponentAssemblySecurityQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblySecurityQoS> ComponentAssemblySecurityQoS::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblySecurityQoS>(impl); }
	ComponentAssemblySecurityQoS ComponentAssemblySecurityQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblySecurityQoS> ComponentAssemblySecurityQoS::Derived() { return ::Udm::DerivedAttr< ComponentAssemblySecurityQoS>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblySecurityQoS> ComponentAssemblySecurityQoS::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblySecurityQoS>(impl); }
	::Udm::ChildrenAttr< ::CQML::AssemblyRuleRef> ComponentAssemblySecurityQoS::AssemblyRuleRef_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyRuleRef>(impl, meta_AssemblyRuleRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentAssemblySecurityQoS::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyRuleRef> ComponentAssemblySecurityQoS::AssemblyRuleRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyRuleRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssemblySecurityQoS::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAssemblySecurityQoS::Accept(Visitor &v) { v.Visit_ComponentAssemblySecurityQoS(*this); }

	::Uml::Class ComponentAssemblySecurityQoS::meta;
	::Uml::CompositionChildRole ComponentAssemblySecurityQoS::meta_AssemblyRuleRef_children;

	FailOverUnit::FailOverUnit() {}
	FailOverUnit::FailOverUnit(::Udm::ObjectImpl *impl) : ComponentAssemblyQoSCharacteristic(impl),ComponentQoSCharacteristic(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	FailOverUnit::FailOverUnit(const FailOverUnit &master) : ComponentAssemblyQoSCharacteristic(master),ComponentQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	FailOverUnit::FailOverUnit(FailOverUnit &&master) : ComponentAssemblyQoSCharacteristic(master),ComponentQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {};

	FailOverUnit FailOverUnit::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FailOverUnit& FailOverUnit::operator=(FailOverUnit &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FailOverUnit FailOverUnit::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FailOverUnit FailOverUnit::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FailOverUnit FailOverUnit::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FailOverUnit> FailOverUnit::Instances() { return ::Udm::InstantiatedAttr< FailOverUnit>(impl); }
	FailOverUnit FailOverUnit::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FailOverUnit> FailOverUnit::Derived() { return ::Udm::DerivedAttr< FailOverUnit>(impl); }
	::Udm::ArchetypeAttr< FailOverUnit> FailOverUnit::Archetype() const { return ::Udm::ArchetypeAttr< FailOverUnit>(impl); }
	::Udm::IntegerAttr FailOverUnit::Replica() const { return ::Udm::IntegerAttr(impl, meta_Replica); }
	::Udm::ChildrenAttr< ::CQML::MonitorableGroupAssociation> FailOverUnit::MonitorableGroupAssociation_children() const { return ::Udm::ChildrenAttr< ::CQML::MonitorableGroupAssociation>(impl, meta_MonitorableGroupAssociation_children); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> FailOverUnit::FTMonitorable_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, meta_FTMonitorable_children); }
	::Udm::ChildrenAttr< ::CQML::RepicaGroupConfiguration> FailOverUnit::RepicaGroupConfiguration_children() const { return ::Udm::ChildrenAttr< ::CQML::RepicaGroupConfiguration>(impl, meta_RepicaGroupConfiguration_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> FailOverUnit::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> FailOverUnit::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> FailOverUnit::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> FailOverUnit::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RepicaGroupConfiguration> FailOverUnit::RepicaGroupConfiguration_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RepicaGroupConfiguration>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MonitorableGroupAssociation> FailOverUnit::MonitorableGroupAssociation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MonitorableGroupAssociation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> FailOverUnit::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void FailOverUnit::Accept(Visitor &v) { v.Visit_FailOverUnit(*this); }

	::Uml::Class FailOverUnit::meta;
	::Uml::Attribute FailOverUnit::meta_Replica;
	::Uml::CompositionChildRole FailOverUnit::meta_MonitorableGroupAssociation_children;
	::Uml::CompositionChildRole FailOverUnit::meta_FTMonitorable_children;
	::Uml::CompositionChildRole FailOverUnit::meta_RepicaGroupConfiguration_children;

	ConnectionQoSCharacteristic::ConnectionQoSCharacteristic() {}
	ConnectionQoSCharacteristic::ConnectionQoSCharacteristic(::Udm::ObjectImpl *impl) : QoSCharacteristicBase(impl), MgaObject(impl) {}
	ConnectionQoSCharacteristic::ConnectionQoSCharacteristic(const ConnectionQoSCharacteristic &master) : QoSCharacteristicBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ConnectionQoSCharacteristic::ConnectionQoSCharacteristic(ConnectionQoSCharacteristic &&master) : QoSCharacteristicBase(master), MgaObject(master) {};

	ConnectionQoSCharacteristic ConnectionQoSCharacteristic::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConnectionQoSCharacteristic& ConnectionQoSCharacteristic::operator=(ConnectionQoSCharacteristic &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConnectionQoSCharacteristic ConnectionQoSCharacteristic::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConnectionQoSCharacteristic ConnectionQoSCharacteristic::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConnectionQoSCharacteristic ConnectionQoSCharacteristic::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConnectionQoSCharacteristic> ConnectionQoSCharacteristic::Instances() { return ::Udm::InstantiatedAttr< ConnectionQoSCharacteristic>(impl); }
	ConnectionQoSCharacteristic ConnectionQoSCharacteristic::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConnectionQoSCharacteristic> ConnectionQoSCharacteristic::Derived() { return ::Udm::DerivedAttr< ConnectionQoSCharacteristic>(impl); }
	::Udm::ArchetypeAttr< ConnectionQoSCharacteristic> ConnectionQoSCharacteristic::Archetype() const { return ::Udm::ArchetypeAttr< ConnectionQoSCharacteristic>(impl); }
	::Udm::AClassAssocAttr< QoSReq, QoSConnector> ConnectionQoSCharacteristic::srcQoSReq() const { return ::Udm::AClassAssocAttr< QoSReq, QoSConnector>(impl, meta_srcQoSReq, meta_srcQoSReq_rev); }
	::Udm::ParentAttr< ::Udm::Object> ConnectionQoSCharacteristic::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ConnectionQoSCharacteristic::meta;
	::Uml::AssociationRole ConnectionQoSCharacteristic::meta_srcQoSReq;
	::Uml::AssociationRole ConnectionQoSCharacteristic::meta_srcQoSReq_rev;

	CIAOEvents::CIAOEvents() {}
	CIAOEvents::CIAOEvents(::Udm::ObjectImpl *impl) : ConnectionQoSCharacteristic(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	CIAOEvents::CIAOEvents(const CIAOEvents &master) : ConnectionQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	CIAOEvents::CIAOEvents(CIAOEvents &&master) : ConnectionQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {};

	CIAOEvents CIAOEvents::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	CIAOEvents& CIAOEvents::operator=(CIAOEvents &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	CIAOEvents CIAOEvents::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	CIAOEvents CIAOEvents::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	CIAOEvents CIAOEvents::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< CIAOEvents> CIAOEvents::Instances() { return ::Udm::InstantiatedAttr< CIAOEvents>(impl); }
	CIAOEvents CIAOEvents::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< CIAOEvents> CIAOEvents::Derived() { return ::Udm::DerivedAttr< CIAOEvents>(impl); }
	::Udm::ArchetypeAttr< CIAOEvents> CIAOEvents::Archetype() const { return ::Udm::ArchetypeAttr< CIAOEvents>(impl); }
	::Udm::StringAttr CIAOEvents::id() const { return ::Udm::StringAttr(impl, meta_id); }
	::Udm::ChildrenAttr< ::CQML::SenderConnection> CIAOEvents::SenderConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::SenderConnection>(impl, meta_SenderConnection_children); }
	::Udm::ChildrenAttr< ::CQML::eventServiceConfiguration> CIAOEvents::eventServiceConfiguration_children() const { return ::Udm::ChildrenAttr< ::CQML::eventServiceConfiguration>(impl, meta_eventServiceConfiguration_children); }
	::Udm::ChildrenAttr< ::CQML::ReceiverConnection> CIAOEvents::ReceiverConnection_children() const { return ::Udm::ChildrenAttr< ::CQML::ReceiverConnection>(impl, meta_ReceiverConnection_children); }
	::Udm::ChildrenAttr< ::CQML::EventChannelCommunicationPoint> CIAOEvents::EventChannelCommunicationPoint_children() const { return ::Udm::ChildrenAttr< ::CQML::EventChannelCommunicationPoint>(impl, meta_EventChannelCommunicationPoint_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> CIAOEvents::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventChannelCommunicationPoint> CIAOEvents::EventChannelCommunicationPoint_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventChannelCommunicationPoint>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ReceiverConnection> CIAOEvents::ReceiverConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ReceiverConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::eventServiceConfiguration> CIAOEvents::eventServiceConfiguration_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::eventServiceConfiguration>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SenderConnection> CIAOEvents::SenderConnection_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SenderConnection>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> CIAOEvents::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::Udm::Object> CIAOEvents::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }
	void CIAOEvents::Accept(Visitor &v) { v.Visit_CIAOEvents(*this); }

	::Uml::Class CIAOEvents::meta;
	::Uml::Attribute CIAOEvents::meta_id;
	::Uml::CompositionChildRole CIAOEvents::meta_SenderConnection_children;
	::Uml::CompositionChildRole CIAOEvents::meta_eventServiceConfiguration_children;
	::Uml::CompositionChildRole CIAOEvents::meta_ReceiverConnection_children;
	::Uml::CompositionChildRole CIAOEvents::meta_EventChannelCommunicationPoint_children;
	::Uml::CompositionParentRole CIAOEvents::meta_RootFolder_parent;

	NetQoS::NetQoS() {}
	NetQoS::NetQoS(::Udm::ObjectImpl *impl) : ConnectionQoSCharacteristic(impl),PortQoSCharacteristic(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	NetQoS::NetQoS(const NetQoS &master) : ConnectionQoSCharacteristic(master),PortQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	NetQoS::NetQoS(NetQoS &&master) : ConnectionQoSCharacteristic(master),PortQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {};

	NetQoS NetQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	NetQoS& NetQoS::operator=(NetQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	NetQoS NetQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	NetQoS NetQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	NetQoS NetQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< NetQoS> NetQoS::Instances() { return ::Udm::InstantiatedAttr< NetQoS>(impl); }
	NetQoS NetQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< NetQoS> NetQoS::Derived() { return ::Udm::DerivedAttr< NetQoS>(impl); }
	::Udm::ArchetypeAttr< NetQoS> NetQoS::Archetype() const { return ::Udm::ArchetypeAttr< NetQoS>(impl); }
	::Udm::IntegerAttr NetQoS::fwdBW() const { return ::Udm::IntegerAttr(impl, meta_fwdBW); }
	::Udm::StringAttr NetQoS::quality() const { return ::Udm::StringAttr(impl, meta_quality); }
	::Udm::IntegerAttr NetQoS::revBW() const { return ::Udm::IntegerAttr(impl, meta_revBW); }
	::Udm::StringAttr NetQoS::admissionPriority() const { return ::Udm::StringAttr(impl, meta_admissionPriority); }
	::Udm::StringAttr NetQoS::custom() const { return ::Udm::StringAttr(impl, meta_custom); }
	::Udm::StringAttr NetQoS::NetPriorityModel() const { return ::Udm::StringAttr(impl, meta_NetPriorityModel); }
	::Udm::StringAttr NetQoS::rev_quality() const { return ::Udm::StringAttr(impl, meta_rev_quality); }
	::Udm::ParentAttr< ::CQML::MgaObject> NetQoS::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void NetQoS::Accept(Visitor &v) { v.Visit_NetQoS(*this); }

	::Uml::Class NetQoS::meta;
	::Uml::Attribute NetQoS::meta_fwdBW;
	::Uml::Attribute NetQoS::meta_quality;
	::Uml::Attribute NetQoS::meta_revBW;
	::Uml::Attribute NetQoS::meta_admissionPriority;
	::Uml::Attribute NetQoS::meta_custom;
	::Uml::Attribute NetQoS::meta_NetPriorityModel;
	::Uml::Attribute NetQoS::meta_rev_quality;

	DeploymentPlanQoS::DeploymentPlanQoS() {}
	DeploymentPlanQoS::DeploymentPlanQoS(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DeploymentPlanQoS::DeploymentPlanQoS(const DeploymentPlanQoS &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DeploymentPlanQoS::DeploymentPlanQoS(DeploymentPlanQoS &&master) : MgaObject(master) {};

	DeploymentPlanQoS DeploymentPlanQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlanQoS& DeploymentPlanQoS::operator=(DeploymentPlanQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlanQoS DeploymentPlanQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlanQoS DeploymentPlanQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlanQoS DeploymentPlanQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlanQoS> DeploymentPlanQoS::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlanQoS>(impl); }
	DeploymentPlanQoS DeploymentPlanQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlanQoS> DeploymentPlanQoS::Derived() { return ::Udm::DerivedAttr< DeploymentPlanQoS>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlanQoS> DeploymentPlanQoS::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlanQoS>(impl); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> DeploymentPlanQoS::DeploymentPlan_parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_parent); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> DeploymentPlanQoS::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class DeploymentPlanQoS::meta;
	::Uml::CompositionParentRole DeploymentPlanQoS::meta_DeploymentPlan_parent;

	DomainRiskGroupingRef::DomainRiskGroupingRef() {}
	DomainRiskGroupingRef::DomainRiskGroupingRef(::Udm::ObjectImpl *impl) : DeploymentPlanQoS(impl) {}
	DomainRiskGroupingRef::DomainRiskGroupingRef(const DomainRiskGroupingRef &master) : DeploymentPlanQoS(master) {}

#ifdef UDM_RVALUE
	DomainRiskGroupingRef::DomainRiskGroupingRef(DomainRiskGroupingRef &&master) : DeploymentPlanQoS(master) {};

	DomainRiskGroupingRef DomainRiskGroupingRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DomainRiskGroupingRef& DomainRiskGroupingRef::operator=(DomainRiskGroupingRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DomainRiskGroupingRef DomainRiskGroupingRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DomainRiskGroupingRef DomainRiskGroupingRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DomainRiskGroupingRef DomainRiskGroupingRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DomainRiskGroupingRef> DomainRiskGroupingRef::Instances() { return ::Udm::InstantiatedAttr< DomainRiskGroupingRef>(impl); }
	DomainRiskGroupingRef DomainRiskGroupingRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DomainRiskGroupingRef> DomainRiskGroupingRef::Derived() { return ::Udm::DerivedAttr< DomainRiskGroupingRef>(impl); }
	::Udm::ArchetypeAttr< DomainRiskGroupingRef> DomainRiskGroupingRef::Archetype() const { return ::Udm::ArchetypeAttr< DomainRiskGroupingRef>(impl); }
	::Udm::PointerAttr< DomainRiskGrouping> DomainRiskGroupingRef::ref() const { return ::Udm::PointerAttr< DomainRiskGrouping>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::DeploymentPlan> DomainRiskGroupingRef::parent() const { return ::Udm::ParentAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLPARENTROLE); }
	void DomainRiskGroupingRef::Accept(Visitor &v) { v.Visit_DomainRiskGroupingRef(*this); }

	::Uml::Class DomainRiskGroupingRef::meta;
	::Uml::AssociationRole DomainRiskGroupingRef::meta_ref;

	RecepInvoke::RecepInvoke() {}
	RecepInvoke::RecepInvoke(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RecepInvoke::RecepInvoke(const RecepInvoke &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RecepInvoke::RecepInvoke(RecepInvoke &&master) : MgaObject(master) {};

	RecepInvoke RecepInvoke::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RecepInvoke& RecepInvoke::operator=(RecepInvoke &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RecepInvoke RecepInvoke::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RecepInvoke RecepInvoke::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RecepInvoke RecepInvoke::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RecepInvoke> RecepInvoke::Instances() { return ::Udm::InstantiatedAttr< RecepInvoke>(impl); }
	RecepInvoke RecepInvoke::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RecepInvoke> RecepInvoke::Derived() { return ::Udm::DerivedAttr< RecepInvoke>(impl); }
	::Udm::ArchetypeAttr< RecepInvoke> RecepInvoke::Archetype() const { return ::Udm::ArchetypeAttr< RecepInvoke>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> RecepInvoke::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> RecepInvoke::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::RequiredRequestPort> RecepInvoke::srcRecepInvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRequestPort>(impl, meta_srcRecepInvoke_end_); }
	::Udm::AssocEndAttr< ::CQML::QoSConnector> RecepInvoke::dstRecepInvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::QoSConnector>(impl, meta_dstRecepInvoke_end_); }
	void RecepInvoke::Accept(Visitor &v) { v.Visit_RecepInvoke(*this); }

	::Uml::Class RecepInvoke::meta;
	::Uml::CompositionParentRole RecepInvoke::meta_ComponentAssembly_parent;
	::Uml::AssociationRole RecepInvoke::meta_srcRecepInvoke_end_;
	::Uml::AssociationRole RecepInvoke::meta_dstRecepInvoke_end_;

	ComponentAssemblyQoS::ComponentAssemblyQoS() {}
	ComponentAssemblyQoS::ComponentAssemblyQoS(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentAssemblyQoS::ComponentAssemblyQoS(const ComponentAssemblyQoS &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentAssemblyQoS::ComponentAssemblyQoS(ComponentAssemblyQoS &&master) : MgaObject(master) {};

	ComponentAssemblyQoS ComponentAssemblyQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAssemblyQoS& ComponentAssemblyQoS::operator=(ComponentAssemblyQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAssemblyQoS ComponentAssemblyQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAssemblyQoS ComponentAssemblyQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAssemblyQoS ComponentAssemblyQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAssemblyQoS> ComponentAssemblyQoS::Instances() { return ::Udm::InstantiatedAttr< ComponentAssemblyQoS>(impl); }
	ComponentAssemblyQoS ComponentAssemblyQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAssemblyQoS> ComponentAssemblyQoS::Derived() { return ::Udm::DerivedAttr< ComponentAssemblyQoS>(impl); }
	::Udm::ArchetypeAttr< ComponentAssemblyQoS> ComponentAssemblyQoS::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAssemblyQoS>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> ComponentAssemblyQoS::ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentAssemblyQoS::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> ComponentAssemblyQoS::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentAssemblyBase> ComponentAssemblyQoS::srcComponentAssemblyQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentAssemblyBase>(impl, meta_srcComponentAssemblyQoS_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentAssemblyQoSCharacteristic> ComponentAssemblyQoS::dstComponentAssemblyQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentAssemblyQoSCharacteristic>(impl, meta_dstComponentAssemblyQoS_end_); }
	void ComponentAssemblyQoS::Accept(Visitor &v) { v.Visit_ComponentAssemblyQoS(*this); }

	::Uml::Class ComponentAssemblyQoS::meta;
	::Uml::CompositionParentRole ComponentAssemblyQoS::meta_ComponentImplementationContainer_parent;
	::Uml::CompositionParentRole ComponentAssemblyQoS::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ComponentAssemblyQoS::meta_srcComponentAssemblyQoS_end_;
	::Uml::AssociationRole ComponentAssemblyQoS::meta_dstComponentAssemblyQoS_end_;

	ComponentQoSCharacteristic::ComponentQoSCharacteristic() {}
	ComponentQoSCharacteristic::ComponentQoSCharacteristic(::Udm::ObjectImpl *impl) : QoSCharacteristicBase(impl), MgaObject(impl) {}
	ComponentQoSCharacteristic::ComponentQoSCharacteristic(const ComponentQoSCharacteristic &master) : QoSCharacteristicBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentQoSCharacteristic::ComponentQoSCharacteristic(ComponentQoSCharacteristic &&master) : QoSCharacteristicBase(master), MgaObject(master) {};

	ComponentQoSCharacteristic ComponentQoSCharacteristic::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentQoSCharacteristic& ComponentQoSCharacteristic::operator=(ComponentQoSCharacteristic &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentQoSCharacteristic ComponentQoSCharacteristic::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentQoSCharacteristic ComponentQoSCharacteristic::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentQoSCharacteristic ComponentQoSCharacteristic::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentQoSCharacteristic> ComponentQoSCharacteristic::Instances() { return ::Udm::InstantiatedAttr< ComponentQoSCharacteristic>(impl); }
	ComponentQoSCharacteristic ComponentQoSCharacteristic::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentQoSCharacteristic> ComponentQoSCharacteristic::Derived() { return ::Udm::DerivedAttr< ComponentQoSCharacteristic>(impl); }
	::Udm::ArchetypeAttr< ComponentQoSCharacteristic> ComponentQoSCharacteristic::Archetype() const { return ::Udm::ArchetypeAttr< ComponentQoSCharacteristic>(impl); }
	::Udm::AClassAssocAttr< ComponentQoS, ComponentBase> ComponentQoSCharacteristic::srcComponentQoS() const { return ::Udm::AClassAssocAttr< ComponentQoS, ComponentBase>(impl, meta_srcComponentQoS, meta_srcComponentQoS_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentQoSCharacteristic::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class ComponentQoSCharacteristic::meta;
	::Uml::AssociationRole ComponentQoSCharacteristic::meta_srcComponentQoS;
	::Uml::AssociationRole ComponentQoSCharacteristic::meta_srcComponentQoS_rev;

	PortQoSCharacteristic::PortQoSCharacteristic() {}
	PortQoSCharacteristic::PortQoSCharacteristic(::Udm::ObjectImpl *impl) : QoSCharacteristicBase(impl), MgaObject(impl) {}
	PortQoSCharacteristic::PortQoSCharacteristic(const PortQoSCharacteristic &master) : QoSCharacteristicBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	PortQoSCharacteristic::PortQoSCharacteristic(PortQoSCharacteristic &&master) : QoSCharacteristicBase(master), MgaObject(master) {};

	PortQoSCharacteristic PortQoSCharacteristic::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortQoSCharacteristic& PortQoSCharacteristic::operator=(PortQoSCharacteristic &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortQoSCharacteristic PortQoSCharacteristic::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortQoSCharacteristic PortQoSCharacteristic::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortQoSCharacteristic PortQoSCharacteristic::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortQoSCharacteristic> PortQoSCharacteristic::Instances() { return ::Udm::InstantiatedAttr< PortQoSCharacteristic>(impl); }
	PortQoSCharacteristic PortQoSCharacteristic::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortQoSCharacteristic> PortQoSCharacteristic::Derived() { return ::Udm::DerivedAttr< PortQoSCharacteristic>(impl); }
	::Udm::ArchetypeAttr< PortQoSCharacteristic> PortQoSCharacteristic::Archetype() const { return ::Udm::ArchetypeAttr< PortQoSCharacteristic>(impl); }
	::Udm::AClassAssocAttr< PortQoS, Port> PortQoSCharacteristic::srcPortQoS() const { return ::Udm::AClassAssocAttr< PortQoS, Port>(impl, meta_srcPortQoS, meta_srcPortQoS_rev); }
	::Udm::ParentAttr< ::CQML::ComponentImplementationContainer> PortQoSCharacteristic::PortQoSComposition_ComponentImplementationContainer_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentImplementationContainer>(impl, meta_PortQoSComposition_ComponentImplementationContainer_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> PortQoSCharacteristic::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class PortQoSCharacteristic::meta;
	::Uml::AssociationRole PortQoSCharacteristic::meta_srcPortQoS;
	::Uml::AssociationRole PortQoSCharacteristic::meta_srcPortQoS_rev;
	::Uml::CompositionParentRole PortQoSCharacteristic::meta_PortQoSComposition_ComponentImplementationContainer_parent;

	PortQoS::PortQoS() {}
	PortQoS::PortQoS(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PortQoS::PortQoS(const PortQoS &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PortQoS::PortQoS(PortQoS &&master) : MgaObject(master) {};

	PortQoS PortQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortQoS& PortQoS::operator=(PortQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortQoS PortQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortQoS PortQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortQoS PortQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortQoS> PortQoS::Instances() { return ::Udm::InstantiatedAttr< PortQoS>(impl); }
	PortQoS PortQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortQoS> PortQoS::Derived() { return ::Udm::DerivedAttr< PortQoS>(impl); }
	::Udm::ArchetypeAttr< PortQoS> PortQoS::Archetype() const { return ::Udm::ArchetypeAttr< PortQoS>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> PortQoS::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> PortQoS::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Port> PortQoS::srcPortQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::Port>(impl, meta_srcPortQoS_end_); }
	::Udm::AssocEndAttr< ::CQML::PortQoSCharacteristic> PortQoS::dstPortQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::PortQoSCharacteristic>(impl, meta_dstPortQoS_end_); }
	void PortQoS::Accept(Visitor &v) { v.Visit_PortQoS(*this); }

	::Uml::Class PortQoS::meta;
	::Uml::CompositionParentRole PortQoS::meta_ComponentAssembly_parent;
	::Uml::AssociationRole PortQoS::meta_srcPortQoS_end_;
	::Uml::AssociationRole PortQoS::meta_dstPortQoS_end_;

	FacetInvoke::FacetInvoke() {}
	FacetInvoke::FacetInvoke(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FacetInvoke::FacetInvoke(const FacetInvoke &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FacetInvoke::FacetInvoke(FacetInvoke &&master) : MgaObject(master) {};

	FacetInvoke FacetInvoke::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FacetInvoke& FacetInvoke::operator=(FacetInvoke &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FacetInvoke FacetInvoke::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FacetInvoke FacetInvoke::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FacetInvoke FacetInvoke::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FacetInvoke> FacetInvoke::Instances() { return ::Udm::InstantiatedAttr< FacetInvoke>(impl); }
	FacetInvoke FacetInvoke::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FacetInvoke> FacetInvoke::Derived() { return ::Udm::DerivedAttr< FacetInvoke>(impl); }
	::Udm::ArchetypeAttr< FacetInvoke> FacetInvoke::Archetype() const { return ::Udm::ArchetypeAttr< FacetInvoke>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> FacetInvoke::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> FacetInvoke::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::QoSConnector> FacetInvoke::srcFacetInvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::QoSConnector>(impl, meta_srcFacetInvoke_end_); }
	::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort> FacetInvoke::dstFacetInvoke_end() const { return ::Udm::AssocEndAttr< ::CQML::ProvidedRequestPort>(impl, meta_dstFacetInvoke_end_); }
	void FacetInvoke::Accept(Visitor &v) { v.Visit_FacetInvoke(*this); }

	::Uml::Class FacetInvoke::meta;
	::Uml::CompositionParentRole FacetInvoke::meta_ComponentAssembly_parent;
	::Uml::AssociationRole FacetInvoke::meta_srcFacetInvoke_end_;
	::Uml::AssociationRole FacetInvoke::meta_dstFacetInvoke_end_;

	QoSReq::QoSReq() {}
	QoSReq::QoSReq(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QoSReq::QoSReq(const QoSReq &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QoSReq::QoSReq(QoSReq &&master) : MgaObject(master) {};

	QoSReq QoSReq::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QoSReq& QoSReq::operator=(QoSReq &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QoSReq QoSReq::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QoSReq QoSReq::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QoSReq QoSReq::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QoSReq> QoSReq::Instances() { return ::Udm::InstantiatedAttr< QoSReq>(impl); }
	QoSReq QoSReq::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QoSReq> QoSReq::Derived() { return ::Udm::DerivedAttr< QoSReq>(impl); }
	::Udm::ArchetypeAttr< QoSReq> QoSReq::Archetype() const { return ::Udm::ArchetypeAttr< QoSReq>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QoSReq::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QoSReq::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::QoSConnector> QoSReq::srcQoSReq_end() const { return ::Udm::AssocEndAttr< ::CQML::QoSConnector>(impl, meta_srcQoSReq_end_); }
	::Udm::AssocEndAttr< ::CQML::ConnectionQoSCharacteristic> QoSReq::dstQoSReq_end() const { return ::Udm::AssocEndAttr< ::CQML::ConnectionQoSCharacteristic>(impl, meta_dstQoSReq_end_); }
	void QoSReq::Accept(Visitor &v) { v.Visit_QoSReq(*this); }

	::Uml::Class QoSReq::meta;
	::Uml::CompositionParentRole QoSReq::meta_ComponentAssembly_parent;
	::Uml::AssociationRole QoSReq::meta_srcQoSReq_end_;
	::Uml::AssociationRole QoSReq::meta_dstQoSReq_end_;

	EventSourcePublish::EventSourcePublish() {}
	EventSourcePublish::EventSourcePublish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSourcePublish::EventSourcePublish(const EventSourcePublish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSourcePublish::EventSourcePublish(EventSourcePublish &&master) : MgaObject(master) {};

	EventSourcePublish EventSourcePublish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSourcePublish& EventSourcePublish::operator=(EventSourcePublish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSourcePublish EventSourcePublish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSourcePublish EventSourcePublish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSourcePublish EventSourcePublish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSourcePublish> EventSourcePublish::Instances() { return ::Udm::InstantiatedAttr< EventSourcePublish>(impl); }
	EventSourcePublish EventSourcePublish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSourcePublish> EventSourcePublish::Derived() { return ::Udm::DerivedAttr< EventSourcePublish>(impl); }
	::Udm::ArchetypeAttr< EventSourcePublish> EventSourcePublish::Archetype() const { return ::Udm::ArchetypeAttr< EventSourcePublish>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSourcePublish::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSourcePublish::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OutEventPort> EventSourcePublish::srcEventSourcePublish_end() const { return ::Udm::AssocEndAttr< ::CQML::OutEventPort>(impl, meta_srcEventSourcePublish_end_); }
	::Udm::AssocEndAttr< ::CQML::QoSConnector> EventSourcePublish::dstEventSourcePublish_end() const { return ::Udm::AssocEndAttr< ::CQML::QoSConnector>(impl, meta_dstEventSourcePublish_end_); }
	void EventSourcePublish::Accept(Visitor &v) { v.Visit_EventSourcePublish(*this); }

	::Uml::Class EventSourcePublish::meta;
	::Uml::CompositionParentRole EventSourcePublish::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSourcePublish::meta_srcEventSourcePublish_end_;
	::Uml::AssociationRole EventSourcePublish::meta_dstEventSourcePublish_end_;

	ComponentQoS::ComponentQoS() {}
	ComponentQoS::ComponentQoS(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentQoS::ComponentQoS(const ComponentQoS &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentQoS::ComponentQoS(ComponentQoS &&master) : MgaObject(master) {};

	ComponentQoS ComponentQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentQoS& ComponentQoS::operator=(ComponentQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentQoS ComponentQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentQoS ComponentQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentQoS ComponentQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentQoS> ComponentQoS::Instances() { return ::Udm::InstantiatedAttr< ComponentQoS>(impl); }
	ComponentQoS ComponentQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentQoS> ComponentQoS::Derived() { return ::Udm::DerivedAttr< ComponentQoS>(impl); }
	::Udm::ArchetypeAttr< ComponentQoS> ComponentQoS::Archetype() const { return ::Udm::ArchetypeAttr< ComponentQoS>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentQoS::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentQoS::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentBase> ComponentQoS::srcComponentQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentBase>(impl, meta_srcComponentQoS_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentQoSCharacteristic> ComponentQoS::dstComponentQoS_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentQoSCharacteristic>(impl, meta_dstComponentQoS_end_); }
	void ComponentQoS::Accept(Visitor &v) { v.Visit_ComponentQoS(*this); }

	::Uml::Class ComponentQoS::meta;
	::Uml::CompositionParentRole ComponentQoS::meta_ComponentAssembly_parent;
	::Uml::AssociationRole ComponentQoS::meta_srcComponentQoS_end_;
	::Uml::AssociationRole ComponentQoS::meta_dstComponentQoS_end_;

	EventSinkPublish::EventSinkPublish() {}
	EventSinkPublish::EventSinkPublish(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSinkPublish::EventSinkPublish(const EventSinkPublish &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSinkPublish::EventSinkPublish(EventSinkPublish &&master) : MgaObject(master) {};

	EventSinkPublish EventSinkPublish::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSinkPublish& EventSinkPublish::operator=(EventSinkPublish &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSinkPublish EventSinkPublish::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSinkPublish EventSinkPublish::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSinkPublish EventSinkPublish::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSinkPublish> EventSinkPublish::Instances() { return ::Udm::InstantiatedAttr< EventSinkPublish>(impl); }
	EventSinkPublish EventSinkPublish::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSinkPublish> EventSinkPublish::Derived() { return ::Udm::DerivedAttr< EventSinkPublish>(impl); }
	::Udm::ArchetypeAttr< EventSinkPublish> EventSinkPublish::Archetype() const { return ::Udm::ArchetypeAttr< EventSinkPublish>(impl); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSinkPublish::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> EventSinkPublish::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::QoSConnector> EventSinkPublish::srcEventSinkPublish_end() const { return ::Udm::AssocEndAttr< ::CQML::QoSConnector>(impl, meta_srcEventSinkPublish_end_); }
	::Udm::AssocEndAttr< ::CQML::InEventPort> EventSinkPublish::dstEventSinkPublish_end() const { return ::Udm::AssocEndAttr< ::CQML::InEventPort>(impl, meta_dstEventSinkPublish_end_); }
	void EventSinkPublish::Accept(Visitor &v) { v.Visit_EventSinkPublish(*this); }

	::Uml::Class EventSinkPublish::meta;
	::Uml::CompositionParentRole EventSinkPublish::meta_ComponentAssembly_parent;
	::Uml::AssociationRole EventSinkPublish::meta_srcEventSinkPublish_end_;
	::Uml::AssociationRole EventSinkPublish::meta_dstEventSinkPublish_end_;

	QoSConnector::QoSConnector() {}
	QoSConnector::QoSConnector(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	QoSConnector::QoSConnector(const QoSConnector &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	QoSConnector::QoSConnector(QoSConnector &&master) : MgaObject(master) {};

	QoSConnector QoSConnector::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	QoSConnector& QoSConnector::operator=(QoSConnector &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	QoSConnector QoSConnector::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	QoSConnector QoSConnector::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	QoSConnector QoSConnector::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< QoSConnector> QoSConnector::Instances() { return ::Udm::InstantiatedAttr< QoSConnector>(impl); }
	QoSConnector QoSConnector::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< QoSConnector> QoSConnector::Derived() { return ::Udm::DerivedAttr< QoSConnector>(impl); }
	::Udm::ArchetypeAttr< QoSConnector> QoSConnector::Archetype() const { return ::Udm::ArchetypeAttr< QoSConnector>(impl); }
	::Udm::AClassPointerAttr< EventSourcePublish, OutEventPort> QoSConnector::srcEventSourcePublish() const { return ::Udm::AClassPointerAttr< EventSourcePublish, OutEventPort>(impl, meta_srcEventSourcePublish, meta_srcEventSourcePublish_rev); }
	::Udm::AClassPointerAttr< RecepInvoke, RequiredRequestPort> QoSConnector::srcRecepInvoke() const { return ::Udm::AClassPointerAttr< RecepInvoke, RequiredRequestPort>(impl, meta_srcRecepInvoke, meta_srcRecepInvoke_rev); }
	::Udm::AClassAssocAttr< QoSReq, ConnectionQoSCharacteristic> QoSConnector::dstQoSReq() const { return ::Udm::AClassAssocAttr< QoSReq, ConnectionQoSCharacteristic>(impl, meta_dstQoSReq, meta_dstQoSReq_rev); }
	::Udm::AClassAssocAttr< EventSinkPublish, InEventPort> QoSConnector::dstEventSinkPublish() const { return ::Udm::AClassAssocAttr< EventSinkPublish, InEventPort>(impl, meta_dstEventSinkPublish, meta_dstEventSinkPublish_rev); }
	::Udm::AClassPointerAttr< FacetInvoke, ProvidedRequestPort> QoSConnector::dstFacetInvoke() const { return ::Udm::AClassPointerAttr< FacetInvoke, ProvidedRequestPort>(impl, meta_dstFacetInvoke, meta_dstFacetInvoke_rev); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QoSConnector::ComponentAssembly_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, meta_ComponentAssembly_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> QoSConnector::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void QoSConnector::Accept(Visitor &v) { v.Visit_QoSConnector(*this); }

	::Uml::Class QoSConnector::meta;
	::Uml::AssociationRole QoSConnector::meta_srcEventSourcePublish;
	::Uml::AssociationRole QoSConnector::meta_srcEventSourcePublish_rev;
	::Uml::AssociationRole QoSConnector::meta_srcRecepInvoke;
	::Uml::AssociationRole QoSConnector::meta_srcRecepInvoke_rev;
	::Uml::AssociationRole QoSConnector::meta_dstQoSReq;
	::Uml::AssociationRole QoSConnector::meta_dstQoSReq_rev;
	::Uml::AssociationRole QoSConnector::meta_dstEventSinkPublish;
	::Uml::AssociationRole QoSConnector::meta_dstEventSinkPublish_rev;
	::Uml::AssociationRole QoSConnector::meta_dstFacetInvoke;
	::Uml::AssociationRole QoSConnector::meta_dstFacetInvoke_rev;
	::Uml::CompositionParentRole QoSConnector::meta_ComponentAssembly_parent;

	ComponentSecurityQoS::ComponentSecurityQoS() {}
	ComponentSecurityQoS::ComponentSecurityQoS(::Udm::ObjectImpl *impl) : ComponentQoSCharacteristic(impl),SecurityQoS(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	ComponentSecurityQoS::ComponentSecurityQoS(const ComponentSecurityQoS &master) : ComponentQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	ComponentSecurityQoS::ComponentSecurityQoS(ComponentSecurityQoS &&master) : ComponentQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {};

	ComponentSecurityQoS ComponentSecurityQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentSecurityQoS& ComponentSecurityQoS::operator=(ComponentSecurityQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentSecurityQoS ComponentSecurityQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentSecurityQoS ComponentSecurityQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentSecurityQoS ComponentSecurityQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentSecurityQoS> ComponentSecurityQoS::Instances() { return ::Udm::InstantiatedAttr< ComponentSecurityQoS>(impl); }
	ComponentSecurityQoS ComponentSecurityQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentSecurityQoS> ComponentSecurityQoS::Derived() { return ::Udm::DerivedAttr< ComponentSecurityQoS>(impl); }
	::Udm::ArchetypeAttr< ComponentSecurityQoS> ComponentSecurityQoS::Archetype() const { return ::Udm::ArchetypeAttr< ComponentSecurityQoS>(impl); }
	::Udm::ChildrenAttr< ::CQML::ComponentRuleRef> ComponentSecurityQoS::ComponentRuleRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRuleRef>(impl, meta_ComponentRuleRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentSecurityQoS::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRuleRef> ComponentSecurityQoS::ComponentRuleRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRuleRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> ComponentSecurityQoS::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentSecurityQoS::Accept(Visitor &v) { v.Visit_ComponentSecurityQoS(*this); }

	::Uml::Class ComponentSecurityQoS::meta;
	::Uml::CompositionChildRole ComponentSecurityQoS::meta_ComponentRuleRef_children;

	RealTimeConfiguration::RealTimeConfiguration() {}
	RealTimeConfiguration::RealTimeConfiguration(::Udm::ObjectImpl *impl) : ComponentQoSCharacteristic(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	RealTimeConfiguration::RealTimeConfiguration(const RealTimeConfiguration &master) : ComponentQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	RealTimeConfiguration::RealTimeConfiguration(RealTimeConfiguration &&master) : ComponentQoSCharacteristic(master), MgaObject(master), QoSCharacteristicBase(master) {};

	RealTimeConfiguration RealTimeConfiguration::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RealTimeConfiguration& RealTimeConfiguration::operator=(RealTimeConfiguration &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RealTimeConfiguration RealTimeConfiguration::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RealTimeConfiguration RealTimeConfiguration::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RealTimeConfiguration RealTimeConfiguration::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RealTimeConfiguration> RealTimeConfiguration::Instances() { return ::Udm::InstantiatedAttr< RealTimeConfiguration>(impl); }
	RealTimeConfiguration RealTimeConfiguration::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RealTimeConfiguration> RealTimeConfiguration::Derived() { return ::Udm::DerivedAttr< RealTimeConfiguration>(impl); }
	::Udm::ArchetypeAttr< RealTimeConfiguration> RealTimeConfiguration::Archetype() const { return ::Udm::ArchetypeAttr< RealTimeConfiguration>(impl); }
	::Udm::ChildrenAttr< ::CQML::PriorityBands> RealTimeConfiguration::PriorityBands_children() const { return ::Udm::ChildrenAttr< ::CQML::PriorityBands>(impl, meta_PriorityBands_children); }
	::Udm::ChildAttr< ::CQML::PriorityModelPolicy> RealTimeConfiguration::PriorityModelPolicy_child() const { return ::Udm::ChildAttr< ::CQML::PriorityModelPolicy>(impl, meta_PriorityModelPolicy_child); }
	::Udm::ChildrenAttr< ::CQML::Lane> RealTimeConfiguration::Lane_children() const { return ::Udm::ChildrenAttr< ::CQML::Lane>(impl, meta_Lane_children); }
	::Udm::ChildAttr< ::CQML::ThreadPool> RealTimeConfiguration::ThreadPool_child() const { return ::Udm::ChildAttr< ::CQML::ThreadPool>(impl, meta_ThreadPool_child); }
	::Udm::ChildrenAttr< ::CQML::PolicyPerThreadPool> RealTimeConfiguration::PolicyPerThreadPool_children() const { return ::Udm::ChildrenAttr< ::CQML::PolicyPerThreadPool>(impl, meta_PolicyPerThreadPool_children); }
	::Udm::ChildAttr< ::CQML::EnvironmentConf> RealTimeConfiguration::EnvironmentConf_child() const { return ::Udm::ChildAttr< ::CQML::EnvironmentConf>(impl, meta_EnvironmentConf_child); }
	::Udm::ChildrenAttr< ::CQML::LanePerThreadPool> RealTimeConfiguration::LanePerThreadPool_children() const { return ::Udm::ChildrenAttr< ::CQML::LanePerThreadPool>(impl, meta_LanePerThreadPool_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RealTimeConfiguration::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PriorityBands> RealTimeConfiguration::PriorityBands_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PriorityBands>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LanePerThreadPool> RealTimeConfiguration::LanePerThreadPool_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LanePerThreadPool>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ThreadPool> RealTimeConfiguration::ThreadPool_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ThreadPool>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EnvironmentConf> RealTimeConfiguration::EnvironmentConf_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EnvironmentConf>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PolicyPerThreadPool> RealTimeConfiguration::PolicyPerThreadPool_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PolicyPerThreadPool>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Lane> RealTimeConfiguration::Lane_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Lane>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PriorityModelPolicy> RealTimeConfiguration::PriorityModelPolicy_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PriorityModelPolicy>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::ComponentAssembly> RealTimeConfiguration::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssembly>(impl, ::Udm::NULLPARENTROLE); }
	void RealTimeConfiguration::Accept(Visitor &v) { v.Visit_RealTimeConfiguration(*this); }

	::Uml::Class RealTimeConfiguration::meta;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_PriorityBands_children;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_PriorityModelPolicy_child;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_Lane_children;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_ThreadPool_child;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_PolicyPerThreadPool_children;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_EnvironmentConf_child;
	::Uml::CompositionChildRole RealTimeConfiguration::meta_LanePerThreadPool_children;

	PortSecurityQoS::PortSecurityQoS() {}
	PortSecurityQoS::PortSecurityQoS(::Udm::ObjectImpl *impl) : PortQoSCharacteristic(impl),SecurityQoS(impl), MgaObject(impl), QoSCharacteristicBase(impl) {}
	PortSecurityQoS::PortSecurityQoS(const PortSecurityQoS &master) : PortQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {}

#ifdef UDM_RVALUE
	PortSecurityQoS::PortSecurityQoS(PortSecurityQoS &&master) : PortQoSCharacteristic(master),SecurityQoS(master), MgaObject(master), QoSCharacteristicBase(master) {};

	PortSecurityQoS PortSecurityQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortSecurityQoS& PortSecurityQoS::operator=(PortSecurityQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortSecurityQoS PortSecurityQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortSecurityQoS PortSecurityQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortSecurityQoS PortSecurityQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortSecurityQoS> PortSecurityQoS::Instances() { return ::Udm::InstantiatedAttr< PortSecurityQoS>(impl); }
	PortSecurityQoS PortSecurityQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortSecurityQoS> PortSecurityQoS::Derived() { return ::Udm::DerivedAttr< PortSecurityQoS>(impl); }
	::Udm::ArchetypeAttr< PortSecurityQoS> PortSecurityQoS::Archetype() const { return ::Udm::ArchetypeAttr< PortSecurityQoS>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> PortSecurityQoS::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void PortSecurityQoS::Accept(Visitor &v) { v.Visit_PortSecurityQoS(*this); }

	::Uml::Class PortSecurityQoS::meta;

	PriorityBands::PriorityBands() {}
	PriorityBands::PriorityBands(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PriorityBands::PriorityBands(const PriorityBands &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PriorityBands::PriorityBands(PriorityBands &&master) : MgaObject(master) {};

	PriorityBands PriorityBands::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PriorityBands& PriorityBands::operator=(PriorityBands &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PriorityBands PriorityBands::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PriorityBands PriorityBands::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PriorityBands PriorityBands::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PriorityBands> PriorityBands::Instances() { return ::Udm::InstantiatedAttr< PriorityBands>(impl); }
	PriorityBands PriorityBands::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PriorityBands> PriorityBands::Derived() { return ::Udm::DerivedAttr< PriorityBands>(impl); }
	::Udm::ArchetypeAttr< PriorityBands> PriorityBands::Archetype() const { return ::Udm::ArchetypeAttr< PriorityBands>(impl); }
	::Udm::IntegerAttr PriorityBands::high() const { return ::Udm::IntegerAttr(impl, meta_high); }
	::Udm::IntegerAttr PriorityBands::low() const { return ::Udm::IntegerAttr(impl, meta_low); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PriorityBands::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PriorityBands::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void PriorityBands::Accept(Visitor &v) { v.Visit_PriorityBands(*this); }

	::Uml::Class PriorityBands::meta;
	::Uml::Attribute PriorityBands::meta_high;
	::Uml::Attribute PriorityBands::meta_low;
	::Uml::CompositionParentRole PriorityBands::meta_RealTimeConfiguration_parent;

	LanePerThreadPool::LanePerThreadPool() {}
	LanePerThreadPool::LanePerThreadPool(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	LanePerThreadPool::LanePerThreadPool(const LanePerThreadPool &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	LanePerThreadPool::LanePerThreadPool(LanePerThreadPool &&master) : MgaObject(master) {};

	LanePerThreadPool LanePerThreadPool::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	LanePerThreadPool& LanePerThreadPool::operator=(LanePerThreadPool &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	LanePerThreadPool LanePerThreadPool::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	LanePerThreadPool LanePerThreadPool::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	LanePerThreadPool LanePerThreadPool::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< LanePerThreadPool> LanePerThreadPool::Instances() { return ::Udm::InstantiatedAttr< LanePerThreadPool>(impl); }
	LanePerThreadPool LanePerThreadPool::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< LanePerThreadPool> LanePerThreadPool::Derived() { return ::Udm::DerivedAttr< LanePerThreadPool>(impl); }
	::Udm::ArchetypeAttr< LanePerThreadPool> LanePerThreadPool::Archetype() const { return ::Udm::ArchetypeAttr< LanePerThreadPool>(impl); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> LanePerThreadPool::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> LanePerThreadPool::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Lane> LanePerThreadPool::srcLanePerThreadPool_end() const { return ::Udm::AssocEndAttr< ::CQML::Lane>(impl, meta_srcLanePerThreadPool_end_); }
	::Udm::AssocEndAttr< ::CQML::ThreadPool> LanePerThreadPool::dstLanePerThreadPool_end() const { return ::Udm::AssocEndAttr< ::CQML::ThreadPool>(impl, meta_dstLanePerThreadPool_end_); }
	void LanePerThreadPool::Accept(Visitor &v) { v.Visit_LanePerThreadPool(*this); }

	::Uml::Class LanePerThreadPool::meta;
	::Uml::CompositionParentRole LanePerThreadPool::meta_RealTimeConfiguration_parent;
	::Uml::AssociationRole LanePerThreadPool::meta_srcLanePerThreadPool_end_;
	::Uml::AssociationRole LanePerThreadPool::meta_dstLanePerThreadPool_end_;

	ThreadPool::ThreadPool() {}
	ThreadPool::ThreadPool(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ThreadPool::ThreadPool(const ThreadPool &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ThreadPool::ThreadPool(ThreadPool &&master) : MgaObject(master) {};

	ThreadPool ThreadPool::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ThreadPool& ThreadPool::operator=(ThreadPool &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ThreadPool ThreadPool::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ThreadPool ThreadPool::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ThreadPool ThreadPool::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ThreadPool> ThreadPool::Instances() { return ::Udm::InstantiatedAttr< ThreadPool>(impl); }
	ThreadPool ThreadPool::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ThreadPool> ThreadPool::Derived() { return ::Udm::DerivedAttr< ThreadPool>(impl); }
	::Udm::ArchetypeAttr< ThreadPool> ThreadPool::Archetype() const { return ::Udm::ArchetypeAttr< ThreadPool>(impl); }
	::Udm::BooleanAttr ThreadPool::allow_request_buffering() const { return ::Udm::BooleanAttr(impl, meta_allow_request_buffering); }
	::Udm::IntegerAttr ThreadPool::max_buffered_requests() const { return ::Udm::IntegerAttr(impl, meta_max_buffered_requests); }
	::Udm::IntegerAttr ThreadPool::max_buffer_size() const { return ::Udm::IntegerAttr(impl, meta_max_buffer_size); }
	::Udm::BooleanAttr ThreadPool::allow_borrowing() const { return ::Udm::BooleanAttr(impl, meta_allow_borrowing); }
	::Udm::IntegerAttr ThreadPool::stacksize() const { return ::Udm::IntegerAttr(impl, meta_stacksize); }
	::Udm::AClassAssocAttr< LanePerThreadPool, Lane> ThreadPool::srcLanePerThreadPool() const { return ::Udm::AClassAssocAttr< LanePerThreadPool, Lane>(impl, meta_srcLanePerThreadPool, meta_srcLanePerThreadPool_rev); }
	::Udm::AClassAssocAttr< PolicyPerThreadPool, PriorityModelPolicy> ThreadPool::srcPolicyPerThreadPool() const { return ::Udm::AClassAssocAttr< PolicyPerThreadPool, PriorityModelPolicy>(impl, meta_srcPolicyPerThreadPool, meta_srcPolicyPerThreadPool_rev); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> ThreadPool::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> ThreadPool::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void ThreadPool::Accept(Visitor &v) { v.Visit_ThreadPool(*this); }

	::Uml::Class ThreadPool::meta;
	::Uml::Attribute ThreadPool::meta_allow_request_buffering;
	::Uml::Attribute ThreadPool::meta_max_buffered_requests;
	::Uml::Attribute ThreadPool::meta_max_buffer_size;
	::Uml::Attribute ThreadPool::meta_allow_borrowing;
	::Uml::Attribute ThreadPool::meta_stacksize;
	::Uml::AssociationRole ThreadPool::meta_srcLanePerThreadPool;
	::Uml::AssociationRole ThreadPool::meta_srcLanePerThreadPool_rev;
	::Uml::AssociationRole ThreadPool::meta_srcPolicyPerThreadPool;
	::Uml::AssociationRole ThreadPool::meta_srcPolicyPerThreadPool_rev;
	::Uml::CompositionParentRole ThreadPool::meta_RealTimeConfiguration_parent;

	EnvironmentConf::EnvironmentConf() {}
	EnvironmentConf::EnvironmentConf(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EnvironmentConf::EnvironmentConf(const EnvironmentConf &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EnvironmentConf::EnvironmentConf(EnvironmentConf &&master) : MgaObject(master) {};

	EnvironmentConf EnvironmentConf::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EnvironmentConf& EnvironmentConf::operator=(EnvironmentConf &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EnvironmentConf EnvironmentConf::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EnvironmentConf EnvironmentConf::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EnvironmentConf EnvironmentConf::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EnvironmentConf> EnvironmentConf::Instances() { return ::Udm::InstantiatedAttr< EnvironmentConf>(impl); }
	EnvironmentConf EnvironmentConf::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EnvironmentConf> EnvironmentConf::Derived() { return ::Udm::DerivedAttr< EnvironmentConf>(impl); }
	::Udm::ArchetypeAttr< EnvironmentConf> EnvironmentConf::Archetype() const { return ::Udm::ArchetypeAttr< EnvironmentConf>(impl); }
	::Udm::StringAttr EnvironmentConf::SvcConf() const { return ::Udm::StringAttr(impl, meta_SvcConf); }
	::Udm::StringAttr EnvironmentConf::CmdLineOptions() const { return ::Udm::StringAttr(impl, meta_CmdLineOptions); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> EnvironmentConf::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> EnvironmentConf::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void EnvironmentConf::Accept(Visitor &v) { v.Visit_EnvironmentConf(*this); }

	::Uml::Class EnvironmentConf::meta;
	::Uml::Attribute EnvironmentConf::meta_SvcConf;
	::Uml::Attribute EnvironmentConf::meta_CmdLineOptions;
	::Uml::CompositionParentRole EnvironmentConf::meta_RealTimeConfiguration_parent;

	PolicyPerThreadPool::PolicyPerThreadPool() {}
	PolicyPerThreadPool::PolicyPerThreadPool(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PolicyPerThreadPool::PolicyPerThreadPool(const PolicyPerThreadPool &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PolicyPerThreadPool::PolicyPerThreadPool(PolicyPerThreadPool &&master) : MgaObject(master) {};

	PolicyPerThreadPool PolicyPerThreadPool::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PolicyPerThreadPool& PolicyPerThreadPool::operator=(PolicyPerThreadPool &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PolicyPerThreadPool PolicyPerThreadPool::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PolicyPerThreadPool PolicyPerThreadPool::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PolicyPerThreadPool PolicyPerThreadPool::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PolicyPerThreadPool> PolicyPerThreadPool::Instances() { return ::Udm::InstantiatedAttr< PolicyPerThreadPool>(impl); }
	PolicyPerThreadPool PolicyPerThreadPool::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PolicyPerThreadPool> PolicyPerThreadPool::Derived() { return ::Udm::DerivedAttr< PolicyPerThreadPool>(impl); }
	::Udm::ArchetypeAttr< PolicyPerThreadPool> PolicyPerThreadPool::Archetype() const { return ::Udm::ArchetypeAttr< PolicyPerThreadPool>(impl); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PolicyPerThreadPool::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PolicyPerThreadPool::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PriorityModelPolicy> PolicyPerThreadPool::srcPolicyPerThreadPool_end() const { return ::Udm::AssocEndAttr< ::CQML::PriorityModelPolicy>(impl, meta_srcPolicyPerThreadPool_end_); }
	::Udm::AssocEndAttr< ::CQML::ThreadPool> PolicyPerThreadPool::dstPolicyPerThreadPool_end() const { return ::Udm::AssocEndAttr< ::CQML::ThreadPool>(impl, meta_dstPolicyPerThreadPool_end_); }
	void PolicyPerThreadPool::Accept(Visitor &v) { v.Visit_PolicyPerThreadPool(*this); }

	::Uml::Class PolicyPerThreadPool::meta;
	::Uml::CompositionParentRole PolicyPerThreadPool::meta_RealTimeConfiguration_parent;
	::Uml::AssociationRole PolicyPerThreadPool::meta_srcPolicyPerThreadPool_end_;
	::Uml::AssociationRole PolicyPerThreadPool::meta_dstPolicyPerThreadPool_end_;

	Lane::Lane() {}
	Lane::Lane(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Lane::Lane(const Lane &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Lane::Lane(Lane &&master) : MgaObject(master) {};

	Lane Lane::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Lane& Lane::operator=(Lane &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Lane Lane::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Lane Lane::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Lane Lane::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Lane> Lane::Instances() { return ::Udm::InstantiatedAttr< Lane>(impl); }
	Lane Lane::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Lane> Lane::Derived() { return ::Udm::DerivedAttr< Lane>(impl); }
	::Udm::ArchetypeAttr< Lane> Lane::Archetype() const { return ::Udm::ArchetypeAttr< Lane>(impl); }
	::Udm::IntegerAttr Lane::lane_priority() const { return ::Udm::IntegerAttr(impl, meta_lane_priority); }
	::Udm::IntegerAttr Lane::static_threads() const { return ::Udm::IntegerAttr(impl, meta_static_threads); }
	::Udm::IntegerAttr Lane::dynamic_threads() const { return ::Udm::IntegerAttr(impl, meta_dynamic_threads); }
	::Udm::AClassPointerAttr< LanePerThreadPool, ThreadPool> Lane::dstLanePerThreadPool() const { return ::Udm::AClassPointerAttr< LanePerThreadPool, ThreadPool>(impl, meta_dstLanePerThreadPool, meta_dstLanePerThreadPool_rev); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> Lane::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> Lane::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void Lane::Accept(Visitor &v) { v.Visit_Lane(*this); }

	::Uml::Class Lane::meta;
	::Uml::Attribute Lane::meta_lane_priority;
	::Uml::Attribute Lane::meta_static_threads;
	::Uml::Attribute Lane::meta_dynamic_threads;
	::Uml::AssociationRole Lane::meta_dstLanePerThreadPool;
	::Uml::AssociationRole Lane::meta_dstLanePerThreadPool_rev;
	::Uml::CompositionParentRole Lane::meta_RealTimeConfiguration_parent;

	PriorityModelPolicy::PriorityModelPolicy() {}
	PriorityModelPolicy::PriorityModelPolicy(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PriorityModelPolicy::PriorityModelPolicy(const PriorityModelPolicy &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PriorityModelPolicy::PriorityModelPolicy(PriorityModelPolicy &&master) : MgaObject(master) {};

	PriorityModelPolicy PriorityModelPolicy::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PriorityModelPolicy& PriorityModelPolicy::operator=(PriorityModelPolicy &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PriorityModelPolicy PriorityModelPolicy::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PriorityModelPolicy PriorityModelPolicy::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PriorityModelPolicy PriorityModelPolicy::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PriorityModelPolicy> PriorityModelPolicy::Instances() { return ::Udm::InstantiatedAttr< PriorityModelPolicy>(impl); }
	PriorityModelPolicy PriorityModelPolicy::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PriorityModelPolicy> PriorityModelPolicy::Derived() { return ::Udm::DerivedAttr< PriorityModelPolicy>(impl); }
	::Udm::ArchetypeAttr< PriorityModelPolicy> PriorityModelPolicy::Archetype() const { return ::Udm::ArchetypeAttr< PriorityModelPolicy>(impl); }
	::Udm::IntegerAttr PriorityModelPolicy::priority_value() const { return ::Udm::IntegerAttr(impl, meta_priority_value); }
	::Udm::StringAttr PriorityModelPolicy::priority_model() const { return ::Udm::StringAttr(impl, meta_priority_model); }
	::Udm::AClassAssocAttr< PolicyPerThreadPool, ThreadPool> PriorityModelPolicy::dstPolicyPerThreadPool() const { return ::Udm::AClassAssocAttr< PolicyPerThreadPool, ThreadPool>(impl, meta_dstPolicyPerThreadPool, meta_dstPolicyPerThreadPool_rev); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PriorityModelPolicy::RealTimeConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, meta_RealTimeConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::RealTimeConfiguration> PriorityModelPolicy::parent() const { return ::Udm::ParentAttr< ::CQML::RealTimeConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void PriorityModelPolicy::Accept(Visitor &v) { v.Visit_PriorityModelPolicy(*this); }

	::Uml::Class PriorityModelPolicy::meta;
	::Uml::Attribute PriorityModelPolicy::meta_priority_value;
	::Uml::Attribute PriorityModelPolicy::meta_priority_model;
	::Uml::AssociationRole PriorityModelPolicy::meta_dstPolicyPerThreadPool;
	::Uml::AssociationRole PriorityModelPolicy::meta_dstPolicyPerThreadPool_rev;
	::Uml::CompositionParentRole PriorityModelPolicy::meta_RealTimeConfiguration_parent;

	Destructible::Destructible() {}
	Destructible::Destructible(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Destructible::Destructible(const Destructible &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Destructible::Destructible(Destructible &&master) : MgaObject(master) {};

	Destructible Destructible::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Destructible& Destructible::operator=(Destructible &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Destructible Destructible::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Destructible Destructible::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Destructible Destructible::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Destructible> Destructible::Instances() { return ::Udm::InstantiatedAttr< Destructible>(impl); }
	Destructible Destructible::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Destructible> Destructible::Derived() { return ::Udm::DerivedAttr< Destructible>(impl); }
	::Udm::ArchetypeAttr< Destructible> Destructible::Archetype() const { return ::Udm::ArchetypeAttr< Destructible>(impl); }
	::Udm::RealAttr Destructible::Metric() const { return ::Udm::RealAttr(impl, meta_Metric); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> Destructible::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Destructible::meta;
	::Uml::Attribute Destructible::meta_Metric;

	RootRiskGroup::RootRiskGroup() {}
	RootRiskGroup::RootRiskGroup(::Udm::ObjectImpl *impl) : Destructible(impl) {}
	RootRiskGroup::RootRiskGroup(const RootRiskGroup &master) : Destructible(master) {}

#ifdef UDM_RVALUE
	RootRiskGroup::RootRiskGroup(RootRiskGroup &&master) : Destructible(master) {};

	RootRiskGroup RootRiskGroup::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RootRiskGroup& RootRiskGroup::operator=(RootRiskGroup &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RootRiskGroup RootRiskGroup::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RootRiskGroup RootRiskGroup::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RootRiskGroup RootRiskGroup::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RootRiskGroup> RootRiskGroup::Instances() { return ::Udm::InstantiatedAttr< RootRiskGroup>(impl); }
	RootRiskGroup RootRiskGroup::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RootRiskGroup> RootRiskGroup::Derived() { return ::Udm::DerivedAttr< RootRiskGroup>(impl); }
	::Udm::ArchetypeAttr< RootRiskGroup> RootRiskGroup::Archetype() const { return ::Udm::ArchetypeAttr< RootRiskGroup>(impl); }
	::Udm::AClassAssocAttr< RootRiskAssociation, SRGBase> RootRiskGroup::dstRootRiskAssociation() const { return ::Udm::AClassAssocAttr< RootRiskAssociation, SRGBase>(impl, meta_dstRootRiskAssociation, meta_dstRootRiskAssociation_rev); }
	::Udm::ChildrenAttr< ::CQML::SharedResourceReference> RootRiskGroup::SharedResourceReference_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResourceReference>(impl, meta_SharedResourceReference_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RootRiskGroup::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SharedResourceReference> RootRiskGroup::SharedResourceReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResourceReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> RootRiskGroup::DomainRiskGrouping_parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, meta_DomainRiskGrouping_parent); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> RootRiskGroup::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }
	void RootRiskGroup::Accept(Visitor &v) { v.Visit_RootRiskGroup(*this); }

	::Uml::Class RootRiskGroup::meta;
	::Uml::AssociationRole RootRiskGroup::meta_dstRootRiskAssociation;
	::Uml::AssociationRole RootRiskGroup::meta_dstRootRiskAssociation_rev;
	::Uml::CompositionChildRole RootRiskGroup::meta_SharedResourceReference_children;
	::Uml::CompositionParentRole RootRiskGroup::meta_DomainRiskGrouping_parent;

	SRGBase::SRGBase() {}
	SRGBase::SRGBase(::Udm::ObjectImpl *impl) : Destructible(impl) {}
	SRGBase::SRGBase(const SRGBase &master) : Destructible(master) {}

#ifdef UDM_RVALUE
	SRGBase::SRGBase(SRGBase &&master) : Destructible(master) {};

	SRGBase SRGBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SRGBase& SRGBase::operator=(SRGBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SRGBase SRGBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SRGBase SRGBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SRGBase SRGBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SRGBase> SRGBase::Instances() { return ::Udm::InstantiatedAttr< SRGBase>(impl); }
	SRGBase SRGBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SRGBase> SRGBase::Derived() { return ::Udm::DerivedAttr< SRGBase>(impl); }
	::Udm::ArchetypeAttr< SRGBase> SRGBase::Archetype() const { return ::Udm::ArchetypeAttr< SRGBase>(impl); }
	::Udm::AClassPointerAttr< RootRiskAssociation, RootRiskGroup> SRGBase::srcRootRiskAssociation() const { return ::Udm::AClassPointerAttr< RootRiskAssociation, RootRiskGroup>(impl, meta_srcRootRiskAssociation, meta_srcRootRiskAssociation_rev); }
	::Udm::AClassPointerAttr< SRGRiskAssociation, SharedRiskGroup> SRGBase::srcSRGRiskAssociation() const { return ::Udm::AClassPointerAttr< SRGRiskAssociation, SharedRiskGroup>(impl, meta_srcSRGRiskAssociation, meta_srcSRGRiskAssociation_rev); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> SRGBase::DomainRiskGrouping_parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, meta_DomainRiskGrouping_parent); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> SRGBase::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SRGBase::meta;
	::Uml::AssociationRole SRGBase::meta_srcRootRiskAssociation;
	::Uml::AssociationRole SRGBase::meta_srcRootRiskAssociation_rev;
	::Uml::AssociationRole SRGBase::meta_srcSRGRiskAssociation;
	::Uml::AssociationRole SRGBase::meta_srcSRGRiskAssociation_rev;
	::Uml::CompositionParentRole SRGBase::meta_DomainRiskGrouping_parent;

	DeploymentPlanRef::DeploymentPlanRef() {}
	DeploymentPlanRef::DeploymentPlanRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DeploymentPlanRef::DeploymentPlanRef(const DeploymentPlanRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DeploymentPlanRef::DeploymentPlanRef(DeploymentPlanRef &&master) : MgaObject(master) {};

	DeploymentPlanRef DeploymentPlanRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlanRef& DeploymentPlanRef::operator=(DeploymentPlanRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlanRef DeploymentPlanRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlanRef DeploymentPlanRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlanRef DeploymentPlanRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlanRef> DeploymentPlanRef::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlanRef>(impl); }
	DeploymentPlanRef DeploymentPlanRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlanRef> DeploymentPlanRef::Derived() { return ::Udm::DerivedAttr< DeploymentPlanRef>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlanRef> DeploymentPlanRef::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlanRef>(impl); }
	::Udm::AClassPointerAttr< FTDeployDepends, DomainRiskGrouping> DeploymentPlanRef::dstFTDeployDepends() const { return ::Udm::AClassPointerAttr< FTDeployDepends, DomainRiskGrouping>(impl, meta_dstFTDeployDepends, meta_dstFTDeployDepends_rev); }
	::Udm::PointerAttr< DeploymentPlan> DeploymentPlanRef::ref() const { return ::Udm::PointerAttr< DeploymentPlan>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::FTDeployment> DeploymentPlanRef::FTDeployment_parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, meta_FTDeployment_parent); }
	::Udm::ParentAttr< ::CQML::FTDeployment> DeploymentPlanRef::parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, ::Udm::NULLPARENTROLE); }
	void DeploymentPlanRef::Accept(Visitor &v) { v.Visit_DeploymentPlanRef(*this); }

	::Uml::Class DeploymentPlanRef::meta;
	::Uml::AssociationRole DeploymentPlanRef::meta_dstFTDeployDepends;
	::Uml::AssociationRole DeploymentPlanRef::meta_dstFTDeployDepends_rev;
	::Uml::AssociationRole DeploymentPlanRef::meta_ref;
	::Uml::CompositionParentRole DeploymentPlanRef::meta_FTDeployment_parent;

	SRGRiskAssociation::SRGRiskAssociation() {}
	SRGRiskAssociation::SRGRiskAssociation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SRGRiskAssociation::SRGRiskAssociation(const SRGRiskAssociation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SRGRiskAssociation::SRGRiskAssociation(SRGRiskAssociation &&master) : MgaObject(master) {};

	SRGRiskAssociation SRGRiskAssociation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SRGRiskAssociation& SRGRiskAssociation::operator=(SRGRiskAssociation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SRGRiskAssociation SRGRiskAssociation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SRGRiskAssociation SRGRiskAssociation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SRGRiskAssociation SRGRiskAssociation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SRGRiskAssociation> SRGRiskAssociation::Instances() { return ::Udm::InstantiatedAttr< SRGRiskAssociation>(impl); }
	SRGRiskAssociation SRGRiskAssociation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SRGRiskAssociation> SRGRiskAssociation::Derived() { return ::Udm::DerivedAttr< SRGRiskAssociation>(impl); }
	::Udm::ArchetypeAttr< SRGRiskAssociation> SRGRiskAssociation::Archetype() const { return ::Udm::ArchetypeAttr< SRGRiskAssociation>(impl); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> SRGRiskAssociation::DomainRiskGrouping_parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, meta_DomainRiskGrouping_parent); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> SRGRiskAssociation::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::SharedRiskGroup> SRGRiskAssociation::srcSRGRiskAssociation_end() const { return ::Udm::AssocEndAttr< ::CQML::SharedRiskGroup>(impl, meta_srcSRGRiskAssociation_end_); }
	::Udm::AssocEndAttr< ::CQML::SRGBase> SRGRiskAssociation::dstSRGRiskAssociation_end() const { return ::Udm::AssocEndAttr< ::CQML::SRGBase>(impl, meta_dstSRGRiskAssociation_end_); }
	void SRGRiskAssociation::Accept(Visitor &v) { v.Visit_SRGRiskAssociation(*this); }

	::Uml::Class SRGRiskAssociation::meta;
	::Uml::CompositionParentRole SRGRiskAssociation::meta_DomainRiskGrouping_parent;
	::Uml::AssociationRole SRGRiskAssociation::meta_srcSRGRiskAssociation_end_;
	::Uml::AssociationRole SRGRiskAssociation::meta_dstSRGRiskAssociation_end_;

	RepicaGroupConfiguration::RepicaGroupConfiguration() {}
	RepicaGroupConfiguration::RepicaGroupConfiguration(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RepicaGroupConfiguration::RepicaGroupConfiguration(const RepicaGroupConfiguration &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RepicaGroupConfiguration::RepicaGroupConfiguration(RepicaGroupConfiguration &&master) : MgaObject(master) {};

	RepicaGroupConfiguration RepicaGroupConfiguration::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RepicaGroupConfiguration& RepicaGroupConfiguration::operator=(RepicaGroupConfiguration &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RepicaGroupConfiguration RepicaGroupConfiguration::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RepicaGroupConfiguration RepicaGroupConfiguration::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RepicaGroupConfiguration RepicaGroupConfiguration::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RepicaGroupConfiguration> RepicaGroupConfiguration::Instances() { return ::Udm::InstantiatedAttr< RepicaGroupConfiguration>(impl); }
	RepicaGroupConfiguration RepicaGroupConfiguration::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RepicaGroupConfiguration> RepicaGroupConfiguration::Derived() { return ::Udm::DerivedAttr< RepicaGroupConfiguration>(impl); }
	::Udm::ArchetypeAttr< RepicaGroupConfiguration> RepicaGroupConfiguration::Archetype() const { return ::Udm::ArchetypeAttr< RepicaGroupConfiguration>(impl); }
	::Udm::StringAttr RepicaGroupConfiguration::ReplicationStyle() const { return ::Udm::StringAttr(impl, meta_ReplicationStyle); }
	::Udm::AClassPointerAttr< MonitorableGroupAssociation, FTMonitorable> RepicaGroupConfiguration::srcMonitorable2RepG() const { return ::Udm::AClassPointerAttr< MonitorableGroupAssociation, FTMonitorable>(impl, meta_srcMonitorable2RepG, meta_srcMonitorable2RepG_rev); }
	::Udm::ChildrenAttr< ::CQML::Property> RepicaGroupConfiguration::Property_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, meta_Property_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RepicaGroupConfiguration::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Property> RepicaGroupConfiguration::Property_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Property>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::FailOverUnit> RepicaGroupConfiguration::FailOverUnit_parent() const { return ::Udm::ParentAttr< ::CQML::FailOverUnit>(impl, meta_FailOverUnit_parent); }
	::Udm::ParentAttr< ::CQML::FailOverUnit> RepicaGroupConfiguration::parent() const { return ::Udm::ParentAttr< ::CQML::FailOverUnit>(impl, ::Udm::NULLPARENTROLE); }
	void RepicaGroupConfiguration::Accept(Visitor &v) { v.Visit_RepicaGroupConfiguration(*this); }

	::Uml::Class RepicaGroupConfiguration::meta;
	::Uml::Attribute RepicaGroupConfiguration::meta_ReplicationStyle;
	::Uml::AssociationRole RepicaGroupConfiguration::meta_srcMonitorable2RepG;
	::Uml::AssociationRole RepicaGroupConfiguration::meta_srcMonitorable2RepG_rev;
	::Uml::CompositionChildRole RepicaGroupConfiguration::meta_Property_children;
	::Uml::CompositionParentRole RepicaGroupConfiguration::meta_FailOverUnit_parent;

	DomainRiskGrouping::DomainRiskGrouping() {}
	DomainRiskGrouping::DomainRiskGrouping(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	DomainRiskGrouping::DomainRiskGrouping(const DomainRiskGrouping &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	DomainRiskGrouping::DomainRiskGrouping(DomainRiskGrouping &&master) : MgaObject(master) {};

	DomainRiskGrouping DomainRiskGrouping::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DomainRiskGrouping& DomainRiskGrouping::operator=(DomainRiskGrouping &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DomainRiskGrouping DomainRiskGrouping::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DomainRiskGrouping DomainRiskGrouping::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DomainRiskGrouping DomainRiskGrouping::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DomainRiskGrouping> DomainRiskGrouping::Instances() { return ::Udm::InstantiatedAttr< DomainRiskGrouping>(impl); }
	DomainRiskGrouping DomainRiskGrouping::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DomainRiskGrouping> DomainRiskGrouping::Derived() { return ::Udm::DerivedAttr< DomainRiskGrouping>(impl); }
	::Udm::ArchetypeAttr< DomainRiskGrouping> DomainRiskGrouping::Archetype() const { return ::Udm::ArchetypeAttr< DomainRiskGrouping>(impl); }
	::Udm::AClassAssocAttr< FTDeployDepends, DeploymentPlanRef> DomainRiskGrouping::srcFTDeployDepends() const { return ::Udm::AClassAssocAttr< FTDeployDepends, DeploymentPlanRef>(impl, meta_srcFTDeployDepends, meta_srcFTDeployDepends_rev); }
	::Udm::AssocAttr< DomainRiskGroupingRef> DomainRiskGrouping::referedbyDomainRiskGroupingRef() const { return ::Udm::AssocAttr< DomainRiskGroupingRef>(impl, meta_referedbyDomainRiskGroupingRef); }
	::Udm::ChildrenAttr< ::CQML::RootRiskAssociation> DomainRiskGrouping::RootRiskAssociation_children() const { return ::Udm::ChildrenAttr< ::CQML::RootRiskAssociation>(impl, meta_RootRiskAssociation_children); }
	::Udm::ChildrenAttr< ::CQML::SRGRiskAssociation> DomainRiskGrouping::SRGRiskAssociation_children() const { return ::Udm::ChildrenAttr< ::CQML::SRGRiskAssociation>(impl, meta_SRGRiskAssociation_children); }
	::Udm::ChildrenAttr< ::CQML::SRGBase> DomainRiskGrouping::SRGBase_children() const { return ::Udm::ChildrenAttr< ::CQML::SRGBase>(impl, meta_SRGBase_children); }
	::Udm::ChildAttr< ::CQML::RootRiskGroup> DomainRiskGrouping::RootRiskGroup_child() const { return ::Udm::ChildAttr< ::CQML::RootRiskGroup>(impl, meta_RootRiskGroup_child); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> DomainRiskGrouping::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Destructible> DomainRiskGrouping::Destructible_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Destructible>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RootRiskGroup> DomainRiskGrouping::RootRiskGroup_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RootRiskGroup>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SRGBase> DomainRiskGrouping::SRGBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SRGBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SRGRiskAssociation> DomainRiskGrouping::SRGRiskAssociation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SRGRiskAssociation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RootRiskAssociation> DomainRiskGrouping::RootRiskAssociation_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RootRiskAssociation>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SharedRiskGroup> DomainRiskGrouping::SharedRiskGroup_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedRiskGroup>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::HostReference> DomainRiskGrouping::HostReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::HostReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::FTDeployment> DomainRiskGrouping::FTDeployment_parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, meta_FTDeployment_parent); }
	::Udm::ParentAttr< ::CQML::FTDeployment> DomainRiskGrouping::parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, ::Udm::NULLPARENTROLE); }
	void DomainRiskGrouping::Accept(Visitor &v) { v.Visit_DomainRiskGrouping(*this); }

	::Uml::Class DomainRiskGrouping::meta;
	::Uml::AssociationRole DomainRiskGrouping::meta_srcFTDeployDepends;
	::Uml::AssociationRole DomainRiskGrouping::meta_srcFTDeployDepends_rev;
	::Uml::AssociationRole DomainRiskGrouping::meta_referedbyDomainRiskGroupingRef;
	::Uml::CompositionChildRole DomainRiskGrouping::meta_RootRiskAssociation_children;
	::Uml::CompositionChildRole DomainRiskGrouping::meta_SRGRiskAssociation_children;
	::Uml::CompositionChildRole DomainRiskGrouping::meta_SRGBase_children;
	::Uml::CompositionChildRole DomainRiskGrouping::meta_RootRiskGroup_child;
	::Uml::CompositionParentRole DomainRiskGrouping::meta_FTDeployment_parent;

	RootRiskAssociation::RootRiskAssociation() {}
	RootRiskAssociation::RootRiskAssociation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RootRiskAssociation::RootRiskAssociation(const RootRiskAssociation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RootRiskAssociation::RootRiskAssociation(RootRiskAssociation &&master) : MgaObject(master) {};

	RootRiskAssociation RootRiskAssociation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RootRiskAssociation& RootRiskAssociation::operator=(RootRiskAssociation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RootRiskAssociation RootRiskAssociation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RootRiskAssociation RootRiskAssociation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RootRiskAssociation RootRiskAssociation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RootRiskAssociation> RootRiskAssociation::Instances() { return ::Udm::InstantiatedAttr< RootRiskAssociation>(impl); }
	RootRiskAssociation RootRiskAssociation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RootRiskAssociation> RootRiskAssociation::Derived() { return ::Udm::DerivedAttr< RootRiskAssociation>(impl); }
	::Udm::ArchetypeAttr< RootRiskAssociation> RootRiskAssociation::Archetype() const { return ::Udm::ArchetypeAttr< RootRiskAssociation>(impl); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> RootRiskAssociation::DomainRiskGrouping_parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, meta_DomainRiskGrouping_parent); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> RootRiskAssociation::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::RootRiskGroup> RootRiskAssociation::srcRootRiskAssociation_end() const { return ::Udm::AssocEndAttr< ::CQML::RootRiskGroup>(impl, meta_srcRootRiskAssociation_end_); }
	::Udm::AssocEndAttr< ::CQML::SRGBase> RootRiskAssociation::dstRootRiskAssociation_end() const { return ::Udm::AssocEndAttr< ::CQML::SRGBase>(impl, meta_dstRootRiskAssociation_end_); }
	void RootRiskAssociation::Accept(Visitor &v) { v.Visit_RootRiskAssociation(*this); }

	::Uml::Class RootRiskAssociation::meta;
	::Uml::CompositionParentRole RootRiskAssociation::meta_DomainRiskGrouping_parent;
	::Uml::AssociationRole RootRiskAssociation::meta_srcRootRiskAssociation_end_;
	::Uml::AssociationRole RootRiskAssociation::meta_dstRootRiskAssociation_end_;

	SharedRiskGroup::SharedRiskGroup() {}
	SharedRiskGroup::SharedRiskGroup(::Udm::ObjectImpl *impl) : SRGBase(impl) {}
	SharedRiskGroup::SharedRiskGroup(const SharedRiskGroup &master) : SRGBase(master) {}

#ifdef UDM_RVALUE
	SharedRiskGroup::SharedRiskGroup(SharedRiskGroup &&master) : SRGBase(master) {};

	SharedRiskGroup SharedRiskGroup::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SharedRiskGroup& SharedRiskGroup::operator=(SharedRiskGroup &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SharedRiskGroup SharedRiskGroup::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SharedRiskGroup SharedRiskGroup::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SharedRiskGroup SharedRiskGroup::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SharedRiskGroup> SharedRiskGroup::Instances() { return ::Udm::InstantiatedAttr< SharedRiskGroup>(impl); }
	SharedRiskGroup SharedRiskGroup::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SharedRiskGroup> SharedRiskGroup::Derived() { return ::Udm::DerivedAttr< SharedRiskGroup>(impl); }
	::Udm::ArchetypeAttr< SharedRiskGroup> SharedRiskGroup::Archetype() const { return ::Udm::ArchetypeAttr< SharedRiskGroup>(impl); }
	::Udm::AClassAssocAttr< SRGRiskAssociation, SRGBase> SharedRiskGroup::dstSRGRiskAssociation() const { return ::Udm::AClassAssocAttr< SRGRiskAssociation, SRGBase>(impl, meta_dstSRGRiskAssociation, meta_dstSRGRiskAssociation_rev); }
	::Udm::ChildrenAttr< ::CQML::SharedResourceReference> SharedRiskGroup::SharedResourceReference_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResourceReference>(impl, meta_SharedResourceReference_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SharedRiskGroup::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SharedResourceReference> SharedRiskGroup::SharedResourceReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SharedResourceReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> SharedRiskGroup::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }
	void SharedRiskGroup::Accept(Visitor &v) { v.Visit_SharedRiskGroup(*this); }

	::Uml::Class SharedRiskGroup::meta;
	::Uml::AssociationRole SharedRiskGroup::meta_dstSRGRiskAssociation;
	::Uml::AssociationRole SharedRiskGroup::meta_dstSRGRiskAssociation_rev;
	::Uml::CompositionChildRole SharedRiskGroup::meta_SharedResourceReference_children;

	MonitorableGroupAssociation::MonitorableGroupAssociation() {}
	MonitorableGroupAssociation::MonitorableGroupAssociation(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	MonitorableGroupAssociation::MonitorableGroupAssociation(const MonitorableGroupAssociation &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	MonitorableGroupAssociation::MonitorableGroupAssociation(MonitorableGroupAssociation &&master) : MgaObject(master) {};

	MonitorableGroupAssociation MonitorableGroupAssociation::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	MonitorableGroupAssociation& MonitorableGroupAssociation::operator=(MonitorableGroupAssociation &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	MonitorableGroupAssociation MonitorableGroupAssociation::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	MonitorableGroupAssociation MonitorableGroupAssociation::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	MonitorableGroupAssociation MonitorableGroupAssociation::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< MonitorableGroupAssociation> MonitorableGroupAssociation::Instances() { return ::Udm::InstantiatedAttr< MonitorableGroupAssociation>(impl); }
	MonitorableGroupAssociation MonitorableGroupAssociation::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< MonitorableGroupAssociation> MonitorableGroupAssociation::Derived() { return ::Udm::DerivedAttr< MonitorableGroupAssociation>(impl); }
	::Udm::ArchetypeAttr< MonitorableGroupAssociation> MonitorableGroupAssociation::Archetype() const { return ::Udm::ArchetypeAttr< MonitorableGroupAssociation>(impl); }
	::Udm::ParentAttr< ::CQML::FailOverUnit> MonitorableGroupAssociation::FailOverUnit_parent() const { return ::Udm::ParentAttr< ::CQML::FailOverUnit>(impl, meta_FailOverUnit_parent); }
	::Udm::ParentAttr< ::CQML::FailOverUnit> MonitorableGroupAssociation::parent() const { return ::Udm::ParentAttr< ::CQML::FailOverUnit>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::FTMonitorable> MonitorableGroupAssociation::srcMonitorable2RepG_end() const { return ::Udm::AssocEndAttr< ::CQML::FTMonitorable>(impl, meta_srcMonitorable2RepG_end_); }
	::Udm::AssocEndAttr< ::CQML::RepicaGroupConfiguration> MonitorableGroupAssociation::dstMonitorable2RepG_end() const { return ::Udm::AssocEndAttr< ::CQML::RepicaGroupConfiguration>(impl, meta_dstMonitorable2RepG_end_); }
	void MonitorableGroupAssociation::Accept(Visitor &v) { v.Visit_MonitorableGroupAssociation(*this); }

	::Uml::Class MonitorableGroupAssociation::meta;
	::Uml::CompositionParentRole MonitorableGroupAssociation::meta_FailOverUnit_parent;
	::Uml::AssociationRole MonitorableGroupAssociation::meta_srcMonitorable2RepG_end_;
	::Uml::AssociationRole MonitorableGroupAssociation::meta_dstMonitorable2RepG_end_;

	SharedResourceReference::SharedResourceReference() {}
	SharedResourceReference::SharedResourceReference(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SharedResourceReference::SharedResourceReference(const SharedResourceReference &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SharedResourceReference::SharedResourceReference(SharedResourceReference &&master) : MgaObject(master) {};

	SharedResourceReference SharedResourceReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SharedResourceReference& SharedResourceReference::operator=(SharedResourceReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SharedResourceReference SharedResourceReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SharedResourceReference SharedResourceReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SharedResourceReference SharedResourceReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SharedResourceReference> SharedResourceReference::Instances() { return ::Udm::InstantiatedAttr< SharedResourceReference>(impl); }
	SharedResourceReference SharedResourceReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SharedResourceReference> SharedResourceReference::Derived() { return ::Udm::DerivedAttr< SharedResourceReference>(impl); }
	::Udm::ArchetypeAttr< SharedResourceReference> SharedResourceReference::Archetype() const { return ::Udm::ArchetypeAttr< SharedResourceReference>(impl); }
	::Udm::PointerAttr< SharedResource> SharedResourceReference::ref() const { return ::Udm::PointerAttr< SharedResource>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::RootRiskGroup> SharedResourceReference::RootRiskGroup_parent() const { return ::Udm::ParentAttr< ::CQML::RootRiskGroup>(impl, meta_RootRiskGroup_parent); }
	::Udm::ParentAttr< ::CQML::SharedRiskGroup> SharedResourceReference::SharedRiskGroup_parent() const { return ::Udm::ParentAttr< ::CQML::SharedRiskGroup>(impl, meta_SharedRiskGroup_parent); }
	::Udm::ParentAttr< ::CQML::Destructible> SharedResourceReference::parent() const { return ::Udm::ParentAttr< ::CQML::Destructible>(impl, ::Udm::NULLPARENTROLE); }
	void SharedResourceReference::Accept(Visitor &v) { v.Visit_SharedResourceReference(*this); }

	::Uml::Class SharedResourceReference::meta;
	::Uml::AssociationRole SharedResourceReference::meta_ref;
	::Uml::CompositionParentRole SharedResourceReference::meta_RootRiskGroup_parent;
	::Uml::CompositionParentRole SharedResourceReference::meta_SharedRiskGroup_parent;

	FTDeployDepends::FTDeployDepends() {}
	FTDeployDepends::FTDeployDepends(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FTDeployDepends::FTDeployDepends(const FTDeployDepends &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FTDeployDepends::FTDeployDepends(FTDeployDepends &&master) : MgaObject(master) {};

	FTDeployDepends FTDeployDepends::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FTDeployDepends& FTDeployDepends::operator=(FTDeployDepends &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FTDeployDepends FTDeployDepends::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FTDeployDepends FTDeployDepends::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FTDeployDepends FTDeployDepends::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FTDeployDepends> FTDeployDepends::Instances() { return ::Udm::InstantiatedAttr< FTDeployDepends>(impl); }
	FTDeployDepends FTDeployDepends::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FTDeployDepends> FTDeployDepends::Derived() { return ::Udm::DerivedAttr< FTDeployDepends>(impl); }
	::Udm::ArchetypeAttr< FTDeployDepends> FTDeployDepends::Archetype() const { return ::Udm::ArchetypeAttr< FTDeployDepends>(impl); }
	::Udm::ParentAttr< ::CQML::FTDeployment> FTDeployDepends::FTDeployment_parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, meta_FTDeployment_parent); }
	::Udm::ParentAttr< ::CQML::FTDeployment> FTDeployDepends::parent() const { return ::Udm::ParentAttr< ::CQML::FTDeployment>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::DeploymentPlanRef> FTDeployDepends::srcFTDeployDepends_end() const { return ::Udm::AssocEndAttr< ::CQML::DeploymentPlanRef>(impl, meta_srcFTDeployDepends_end_); }
	::Udm::AssocEndAttr< ::CQML::DomainRiskGrouping> FTDeployDepends::dstFTDeployDepends_end() const { return ::Udm::AssocEndAttr< ::CQML::DomainRiskGrouping>(impl, meta_dstFTDeployDepends_end_); }
	void FTDeployDepends::Accept(Visitor &v) { v.Visit_FTDeployDepends(*this); }

	::Uml::Class FTDeployDepends::meta;
	::Uml::CompositionParentRole FTDeployDepends::meta_FTDeployment_parent;
	::Uml::AssociationRole FTDeployDepends::meta_srcFTDeployDepends_end_;
	::Uml::AssociationRole FTDeployDepends::meta_dstFTDeployDepends_end_;

	HostReference::HostReference() {}
	HostReference::HostReference(::Udm::ObjectImpl *impl) : SRGBase(impl) {}
	HostReference::HostReference(const HostReference &master) : SRGBase(master) {}

#ifdef UDM_RVALUE
	HostReference::HostReference(HostReference &&master) : SRGBase(master) {};

	HostReference HostReference::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	HostReference& HostReference::operator=(HostReference &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	HostReference HostReference::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	HostReference HostReference::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	HostReference HostReference::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< HostReference> HostReference::Instances() { return ::Udm::InstantiatedAttr< HostReference>(impl); }
	HostReference HostReference::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< HostReference> HostReference::Derived() { return ::Udm::DerivedAttr< HostReference>(impl); }
	::Udm::ArchetypeAttr< HostReference> HostReference::Archetype() const { return ::Udm::ArchetypeAttr< HostReference>(impl); }
	::Udm::PointerAttr< Node> HostReference::ref() const { return ::Udm::PointerAttr< Node>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::DomainRiskGrouping> HostReference::parent() const { return ::Udm::ParentAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLPARENTROLE); }
	void HostReference::Accept(Visitor &v) { v.Visit_HostReference(*this); }

	::Uml::Class HostReference::meta;
	::Uml::AssociationRole HostReference::meta_ref;

	FTDeployment::FTDeployment() {}
	FTDeployment::FTDeployment(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	FTDeployment::FTDeployment(const FTDeployment &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	FTDeployment::FTDeployment(FTDeployment &&master) : MgaObject(master) {};

	FTDeployment FTDeployment::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	FTDeployment& FTDeployment::operator=(FTDeployment &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	FTDeployment FTDeployment::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	FTDeployment FTDeployment::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	FTDeployment FTDeployment::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< FTDeployment> FTDeployment::Instances() { return ::Udm::InstantiatedAttr< FTDeployment>(impl); }
	FTDeployment FTDeployment::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< FTDeployment> FTDeployment::Derived() { return ::Udm::DerivedAttr< FTDeployment>(impl); }
	::Udm::ArchetypeAttr< FTDeployment> FTDeployment::Archetype() const { return ::Udm::ArchetypeAttr< FTDeployment>(impl); }
	::Udm::ChildrenAttr< ::CQML::FTDeployDepends> FTDeployment::FTDeployDepends_children() const { return ::Udm::ChildrenAttr< ::CQML::FTDeployDepends>(impl, meta_FTDeployDepends_children); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlanRef> FTDeployment::DeploymentPlanRef_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlanRef>(impl, meta_DeploymentPlanRef_children); }
	::Udm::ChildrenAttr< ::CQML::DomainRiskGrouping> FTDeployment::DomainRiskGrouping_children() const { return ::Udm::ChildrenAttr< ::CQML::DomainRiskGrouping>(impl, meta_DomainRiskGrouping_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> FTDeployment::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlanRef> FTDeployment::DeploymentPlanRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlanRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DomainRiskGrouping> FTDeployment::DomainRiskGrouping_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DomainRiskGrouping>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTDeployDepends> FTDeployment::FTDeployDepends_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTDeployDepends>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> FTDeployment::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> FTDeployment::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void FTDeployment::Accept(Visitor &v) { v.Visit_FTDeployment(*this); }

	::Uml::Class FTDeployment::meta;
	::Uml::CompositionChildRole FTDeployment::meta_FTDeployDepends_children;
	::Uml::CompositionChildRole FTDeployment::meta_DeploymentPlanRef_children;
	::Uml::CompositionChildRole FTDeployment::meta_DomainRiskGrouping_children;
	::Uml::CompositionParentRole FTDeployment::meta_RootFolder_parent;

	EventChannelCommunicationPoint::EventChannelCommunicationPoint() {}
	EventChannelCommunicationPoint::EventChannelCommunicationPoint(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventChannelCommunicationPoint::EventChannelCommunicationPoint(const EventChannelCommunicationPoint &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventChannelCommunicationPoint::EventChannelCommunicationPoint(EventChannelCommunicationPoint &&master) : MgaObject(master) {};

	EventChannelCommunicationPoint EventChannelCommunicationPoint::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventChannelCommunicationPoint& EventChannelCommunicationPoint::operator=(EventChannelCommunicationPoint &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventChannelCommunicationPoint EventChannelCommunicationPoint::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventChannelCommunicationPoint EventChannelCommunicationPoint::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventChannelCommunicationPoint EventChannelCommunicationPoint::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventChannelCommunicationPoint> EventChannelCommunicationPoint::Instances() { return ::Udm::InstantiatedAttr< EventChannelCommunicationPoint>(impl); }
	EventChannelCommunicationPoint EventChannelCommunicationPoint::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventChannelCommunicationPoint> EventChannelCommunicationPoint::Derived() { return ::Udm::DerivedAttr< EventChannelCommunicationPoint>(impl); }
	::Udm::ArchetypeAttr< EventChannelCommunicationPoint> EventChannelCommunicationPoint::Archetype() const { return ::Udm::ArchetypeAttr< EventChannelCommunicationPoint>(impl); }
	::Udm::BooleanAttr EventChannelCommunicationPoint::udp() const { return ::Udm::BooleanAttr(impl, meta_udp); }
	::Udm::BooleanAttr EventChannelCommunicationPoint::is_multicast() const { return ::Udm::BooleanAttr(impl, meta_is_multicast); }
	::Udm::IntegerAttr EventChannelCommunicationPoint::port() const { return ::Udm::IntegerAttr(impl, meta_port); }
	::Udm::StringAttr EventChannelCommunicationPoint::address() const { return ::Udm::StringAttr(impl, meta_address); }
	::Udm::AClassAssocAttr< ReceiverConnection, eventServiceConfiguration> EventChannelCommunicationPoint::dstReceiverConnection() const { return ::Udm::AClassAssocAttr< ReceiverConnection, eventServiceConfiguration>(impl, meta_dstReceiverConnection, meta_dstReceiverConnection_rev); }
	::Udm::AClassAssocAttr< SenderConnection, eventServiceConfiguration> EventChannelCommunicationPoint::srcSenderConnection() const { return ::Udm::AClassAssocAttr< SenderConnection, eventServiceConfiguration>(impl, meta_srcSenderConnection, meta_srcSenderConnection_rev); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> EventChannelCommunicationPoint::CIAOEvents_parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, meta_CIAOEvents_parent); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> EventChannelCommunicationPoint::parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLPARENTROLE); }
	void EventChannelCommunicationPoint::Accept(Visitor &v) { v.Visit_EventChannelCommunicationPoint(*this); }

	::Uml::Class EventChannelCommunicationPoint::meta;
	::Uml::Attribute EventChannelCommunicationPoint::meta_udp;
	::Uml::Attribute EventChannelCommunicationPoint::meta_is_multicast;
	::Uml::Attribute EventChannelCommunicationPoint::meta_port;
	::Uml::Attribute EventChannelCommunicationPoint::meta_address;
	::Uml::AssociationRole EventChannelCommunicationPoint::meta_dstReceiverConnection;
	::Uml::AssociationRole EventChannelCommunicationPoint::meta_dstReceiverConnection_rev;
	::Uml::AssociationRole EventChannelCommunicationPoint::meta_srcSenderConnection;
	::Uml::AssociationRole EventChannelCommunicationPoint::meta_srcSenderConnection_rev;
	::Uml::CompositionParentRole EventChannelCommunicationPoint::meta_CIAOEvents_parent;

	ReceiverConnection::ReceiverConnection() {}
	ReceiverConnection::ReceiverConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ReceiverConnection::ReceiverConnection(const ReceiverConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ReceiverConnection::ReceiverConnection(ReceiverConnection &&master) : MgaObject(master) {};

	ReceiverConnection ReceiverConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ReceiverConnection& ReceiverConnection::operator=(ReceiverConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ReceiverConnection ReceiverConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ReceiverConnection ReceiverConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ReceiverConnection ReceiverConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ReceiverConnection> ReceiverConnection::Instances() { return ::Udm::InstantiatedAttr< ReceiverConnection>(impl); }
	ReceiverConnection ReceiverConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ReceiverConnection> ReceiverConnection::Derived() { return ::Udm::DerivedAttr< ReceiverConnection>(impl); }
	::Udm::ArchetypeAttr< ReceiverConnection> ReceiverConnection::Archetype() const { return ::Udm::ArchetypeAttr< ReceiverConnection>(impl); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> ReceiverConnection::CIAOEvents_parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, meta_CIAOEvents_parent); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> ReceiverConnection::parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::EventChannelCommunicationPoint> ReceiverConnection::srcReceiverConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::EventChannelCommunicationPoint>(impl, meta_srcReceiverConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::eventServiceConfiguration> ReceiverConnection::dstReceiverConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::eventServiceConfiguration>(impl, meta_dstReceiverConnection_end_); }
	void ReceiverConnection::Accept(Visitor &v) { v.Visit_ReceiverConnection(*this); }

	::Uml::Class ReceiverConnection::meta;
	::Uml::CompositionParentRole ReceiverConnection::meta_CIAOEvents_parent;
	::Uml::AssociationRole ReceiverConnection::meta_srcReceiverConnection_end_;
	::Uml::AssociationRole ReceiverConnection::meta_dstReceiverConnection_end_;

	ConsumerBehavior::ConsumerBehavior() {}
	ConsumerBehavior::ConsumerBehavior(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ConsumerBehavior::ConsumerBehavior(const ConsumerBehavior &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ConsumerBehavior::ConsumerBehavior(ConsumerBehavior &&master) : MgaObject(master) {};

	ConsumerBehavior ConsumerBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ConsumerBehavior& ConsumerBehavior::operator=(ConsumerBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ConsumerBehavior ConsumerBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ConsumerBehavior ConsumerBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ConsumerBehavior ConsumerBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ConsumerBehavior> ConsumerBehavior::Instances() { return ::Udm::InstantiatedAttr< ConsumerBehavior>(impl); }
	ConsumerBehavior ConsumerBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ConsumerBehavior> ConsumerBehavior::Derived() { return ::Udm::DerivedAttr< ConsumerBehavior>(impl); }
	::Udm::ArchetypeAttr< ConsumerBehavior> ConsumerBehavior::Archetype() const { return ::Udm::ArchetypeAttr< ConsumerBehavior>(impl); }
	::Udm::StringAttr ConsumerBehavior::ECProxyPushConsumerCollectionSynch() const { return ::Udm::StringAttr(impl, meta_ECProxyPushConsumerCollectionSynch); }
	::Udm::StringAttr ConsumerBehavior::ECConsumerControl() const { return ::Udm::StringAttr(impl, meta_ECConsumerControl); }
	::Udm::StringAttr ConsumerBehavior::ECConsumerLock() const { return ::Udm::StringAttr(impl, meta_ECConsumerLock); }
	::Udm::IntegerAttr ConsumerBehavior::ECConsumerControlPeriod() const { return ::Udm::IntegerAttr(impl, meta_ECConsumerControlPeriod); }
	::Udm::StringAttr ConsumerBehavior::ECProxyPushConsumerCollectionFlag() const { return ::Udm::StringAttr(impl, meta_ECProxyPushConsumerCollectionFlag); }
	::Udm::StringAttr ConsumerBehavior::ECProxyPushConsumerCollectionIterator() const { return ::Udm::StringAttr(impl, meta_ECProxyPushConsumerCollectionIterator); }
	::Udm::StringAttr ConsumerBehavior::ECFiltering() const { return ::Udm::StringAttr(impl, meta_ECFiltering); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> ConsumerBehavior::eventServiceConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, meta_eventServiceConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> ConsumerBehavior::parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void ConsumerBehavior::Accept(Visitor &v) { v.Visit_ConsumerBehavior(*this); }

	::Uml::Class ConsumerBehavior::meta;
	::Uml::Attribute ConsumerBehavior::meta_ECProxyPushConsumerCollectionSynch;
	::Uml::Attribute ConsumerBehavior::meta_ECConsumerControl;
	::Uml::Attribute ConsumerBehavior::meta_ECConsumerLock;
	::Uml::Attribute ConsumerBehavior::meta_ECConsumerControlPeriod;
	::Uml::Attribute ConsumerBehavior::meta_ECProxyPushConsumerCollectionFlag;
	::Uml::Attribute ConsumerBehavior::meta_ECProxyPushConsumerCollectionIterator;
	::Uml::Attribute ConsumerBehavior::meta_ECFiltering;
	::Uml::CompositionParentRole ConsumerBehavior::meta_eventServiceConfiguration_parent;

	Filter::Filter() {}
	Filter::Filter(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Filter::Filter(const Filter &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Filter::Filter(Filter &&master) : MgaObject(master) {};

	Filter Filter::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Filter& Filter::operator=(Filter &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Filter Filter::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Filter Filter::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Filter Filter::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Filter> Filter::Instances() { return ::Udm::InstantiatedAttr< Filter>(impl); }
	Filter Filter::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Filter> Filter::Derived() { return ::Udm::DerivedAttr< Filter>(impl); }
	::Udm::ArchetypeAttr< Filter> Filter::Archetype() const { return ::Udm::ArchetypeAttr< Filter>(impl); }
	::Udm::StringAttr Filter::filter_id() const { return ::Udm::StringAttr(impl, meta_filter_id); }
	::Udm::StringAttr Filter::filter_type() const { return ::Udm::StringAttr(impl, meta_filter_type); }
	::Udm::ChildrenAttr< ::CQML::EventSourcePort> Filter::EventSourcePort_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourcePort>(impl, meta_EventSourcePort_children); }
	::Udm::ChildrenAttr< ::CQML::EventSource> Filter::EventSource_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSource>(impl, meta_EventSource_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Filter::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSource> Filter::EventSource_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSource>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventSourcePort> Filter::EventSourcePort_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventSourcePort>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> Filter::eventServiceConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, meta_eventServiceConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> Filter::parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void Filter::Accept(Visitor &v) { v.Visit_Filter(*this); }

	::Uml::Class Filter::meta;
	::Uml::Attribute Filter::meta_filter_id;
	::Uml::Attribute Filter::meta_filter_type;
	::Uml::CompositionChildRole Filter::meta_EventSourcePort_children;
	::Uml::CompositionChildRole Filter::meta_EventSource_children;
	::Uml::CompositionParentRole Filter::meta_eventServiceConfiguration_parent;

	EventSource::EventSource() {}
	EventSource::EventSource(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSource::EventSource(const EventSource &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSource::EventSource(EventSource &&master) : MgaObject(master) {};

	EventSource EventSource::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSource& EventSource::operator=(EventSource &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSource EventSource::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSource EventSource::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSource EventSource::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSource> EventSource::Instances() { return ::Udm::InstantiatedAttr< EventSource>(impl); }
	EventSource EventSource::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSource> EventSource::Derived() { return ::Udm::DerivedAttr< EventSource>(impl); }
	::Udm::ArchetypeAttr< EventSource> EventSource::Archetype() const { return ::Udm::ArchetypeAttr< EventSource>(impl); }
	::Udm::ParentAttr< ::CQML::Filter> EventSource::Filter_parent() const { return ::Udm::ParentAttr< ::CQML::Filter>(impl, meta_Filter_parent); }
	::Udm::ParentAttr< ::CQML::Filter> EventSource::parent() const { return ::Udm::ParentAttr< ::CQML::Filter>(impl, ::Udm::NULLPARENTROLE); }
	void EventSource::Accept(Visitor &v) { v.Visit_EventSource(*this); }

	::Uml::Class EventSource::meta;
	::Uml::CompositionParentRole EventSource::meta_Filter_parent;

	SupplierBehavior::SupplierBehavior() {}
	SupplierBehavior::SupplierBehavior(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SupplierBehavior::SupplierBehavior(const SupplierBehavior &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SupplierBehavior::SupplierBehavior(SupplierBehavior &&master) : MgaObject(master) {};

	SupplierBehavior SupplierBehavior::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SupplierBehavior& SupplierBehavior::operator=(SupplierBehavior &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SupplierBehavior SupplierBehavior::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SupplierBehavior SupplierBehavior::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SupplierBehavior SupplierBehavior::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SupplierBehavior> SupplierBehavior::Instances() { return ::Udm::InstantiatedAttr< SupplierBehavior>(impl); }
	SupplierBehavior SupplierBehavior::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SupplierBehavior> SupplierBehavior::Derived() { return ::Udm::DerivedAttr< SupplierBehavior>(impl); }
	::Udm::ArchetypeAttr< SupplierBehavior> SupplierBehavior::Archetype() const { return ::Udm::ArchetypeAttr< SupplierBehavior>(impl); }
	::Udm::StringAttr SupplierBehavior::ECProxySupplierLock() const { return ::Udm::StringAttr(impl, meta_ECProxySupplierLock); }
	::Udm::StringAttr SupplierBehavior::ECSupplierControl() const { return ::Udm::StringAttr(impl, meta_ECSupplierControl); }
	::Udm::IntegerAttr SupplierBehavior::ECSupplierControlPeriod() const { return ::Udm::IntegerAttr(impl, meta_ECSupplierControlPeriod); }
	::Udm::StringAttr SupplierBehavior::ECProxyPushSupplierCollectionFlag() const { return ::Udm::StringAttr(impl, meta_ECProxyPushSupplierCollectionFlag); }
	::Udm::StringAttr SupplierBehavior::ECProxyPushSupplierCollectionIterator() const { return ::Udm::StringAttr(impl, meta_ECProxyPushSupplierCollectionIterator); }
	::Udm::StringAttr SupplierBehavior::ECProxyPushSupplierCollectionSynch() const { return ::Udm::StringAttr(impl, meta_ECProxyPushSupplierCollectionSynch); }
	::Udm::StringAttr SupplierBehavior::ECSupplierFiltering() const { return ::Udm::StringAttr(impl, meta_ECSupplierFiltering); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> SupplierBehavior::eventServiceConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, meta_eventServiceConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> SupplierBehavior::parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void SupplierBehavior::Accept(Visitor &v) { v.Visit_SupplierBehavior(*this); }

	::Uml::Class SupplierBehavior::meta;
	::Uml::Attribute SupplierBehavior::meta_ECProxySupplierLock;
	::Uml::Attribute SupplierBehavior::meta_ECSupplierControl;
	::Uml::Attribute SupplierBehavior::meta_ECSupplierControlPeriod;
	::Uml::Attribute SupplierBehavior::meta_ECProxyPushSupplierCollectionFlag;
	::Uml::Attribute SupplierBehavior::meta_ECProxyPushSupplierCollectionIterator;
	::Uml::Attribute SupplierBehavior::meta_ECProxyPushSupplierCollectionSynch;
	::Uml::Attribute SupplierBehavior::meta_ECSupplierFiltering;
	::Uml::CompositionParentRole SupplierBehavior::meta_eventServiceConfiguration_parent;

	eventServiceConfiguration::eventServiceConfiguration() {}
	eventServiceConfiguration::eventServiceConfiguration(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	eventServiceConfiguration::eventServiceConfiguration(const eventServiceConfiguration &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	eventServiceConfiguration::eventServiceConfiguration(eventServiceConfiguration &&master) : MgaObject(master) {};

	eventServiceConfiguration eventServiceConfiguration::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	eventServiceConfiguration& eventServiceConfiguration::operator=(eventServiceConfiguration &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	eventServiceConfiguration eventServiceConfiguration::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	eventServiceConfiguration eventServiceConfiguration::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	eventServiceConfiguration eventServiceConfiguration::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< eventServiceConfiguration> eventServiceConfiguration::Instances() { return ::Udm::InstantiatedAttr< eventServiceConfiguration>(impl); }
	eventServiceConfiguration eventServiceConfiguration::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< eventServiceConfiguration> eventServiceConfiguration::Derived() { return ::Udm::DerivedAttr< eventServiceConfiguration>(impl); }
	::Udm::ArchetypeAttr< eventServiceConfiguration> eventServiceConfiguration::Archetype() const { return ::Udm::ArchetypeAttr< eventServiceConfiguration>(impl); }
	::Udm::StringAttr eventServiceConfiguration::type() const { return ::Udm::StringAttr(impl, meta_type); }
	::Udm::StringAttr eventServiceConfiguration::svc_cfg_file() const { return ::Udm::StringAttr(impl, meta_svc_cfg_file); }
	::Udm::StringAttr eventServiceConfiguration::node() const { return ::Udm::StringAttr(impl, meta_node); }
	::Udm::StringAttr eventServiceConfiguration::configuration_id() const { return ::Udm::StringAttr(impl, meta_configuration_id); }
	::Udm::AClassAssocAttr< ReceiverConnection, EventChannelCommunicationPoint> eventServiceConfiguration::srcReceiverConnection() const { return ::Udm::AClassAssocAttr< ReceiverConnection, EventChannelCommunicationPoint>(impl, meta_srcReceiverConnection, meta_srcReceiverConnection_rev); }
	::Udm::AClassAssocAttr< SenderConnection, EventChannelCommunicationPoint> eventServiceConfiguration::dstSenderConnection() const { return ::Udm::AClassAssocAttr< SenderConnection, EventChannelCommunicationPoint>(impl, meta_dstSenderConnection, meta_dstSenderConnection_rev); }
	::Udm::ChildAttr< ::CQML::ConsumerBehavior> eventServiceConfiguration::ConsumerBehavior_child() const { return ::Udm::ChildAttr< ::CQML::ConsumerBehavior>(impl, meta_ConsumerBehavior_child); }
	::Udm::ChildAttr< ::CQML::EventChannelFactory> eventServiceConfiguration::EventChannelFactory_child() const { return ::Udm::ChildAttr< ::CQML::EventChannelFactory>(impl, meta_EventChannelFactory_child); }
	::Udm::ChildAttr< ::CQML::SupplierBehavior> eventServiceConfiguration::SupplierBehavior_child() const { return ::Udm::ChildAttr< ::CQML::SupplierBehavior>(impl, meta_SupplierBehavior_child); }
	::Udm::ChildrenAttr< ::CQML::Filter> eventServiceConfiguration::Filter_children() const { return ::Udm::ChildrenAttr< ::CQML::Filter>(impl, meta_Filter_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> eventServiceConfiguration::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConsumerBehavior> eventServiceConfiguration::ConsumerBehavior_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConsumerBehavior>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Filter> eventServiceConfiguration::Filter_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Filter>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SupplierBehavior> eventServiceConfiguration::SupplierBehavior_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SupplierBehavior>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::EventChannelFactory> eventServiceConfiguration::EventChannelFactory_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::EventChannelFactory>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> eventServiceConfiguration::CIAOEvents_parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, meta_CIAOEvents_parent); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> eventServiceConfiguration::parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLPARENTROLE); }
	void eventServiceConfiguration::Accept(Visitor &v) { v.Visit_eventServiceConfiguration(*this); }

	::Uml::Class eventServiceConfiguration::meta;
	::Uml::Attribute eventServiceConfiguration::meta_type;
	::Uml::Attribute eventServiceConfiguration::meta_svc_cfg_file;
	::Uml::Attribute eventServiceConfiguration::meta_node;
	::Uml::Attribute eventServiceConfiguration::meta_configuration_id;
	::Uml::AssociationRole eventServiceConfiguration::meta_srcReceiverConnection;
	::Uml::AssociationRole eventServiceConfiguration::meta_srcReceiverConnection_rev;
	::Uml::AssociationRole eventServiceConfiguration::meta_dstSenderConnection;
	::Uml::AssociationRole eventServiceConfiguration::meta_dstSenderConnection_rev;
	::Uml::CompositionChildRole eventServiceConfiguration::meta_ConsumerBehavior_child;
	::Uml::CompositionChildRole eventServiceConfiguration::meta_EventChannelFactory_child;
	::Uml::CompositionChildRole eventServiceConfiguration::meta_SupplierBehavior_child;
	::Uml::CompositionChildRole eventServiceConfiguration::meta_Filter_children;
	::Uml::CompositionParentRole eventServiceConfiguration::meta_CIAOEvents_parent;

	EventChannelFactory::EventChannelFactory() {}
	EventChannelFactory::EventChannelFactory(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventChannelFactory::EventChannelFactory(const EventChannelFactory &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventChannelFactory::EventChannelFactory(EventChannelFactory &&master) : MgaObject(master) {};

	EventChannelFactory EventChannelFactory::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventChannelFactory& EventChannelFactory::operator=(EventChannelFactory &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventChannelFactory EventChannelFactory::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventChannelFactory EventChannelFactory::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventChannelFactory EventChannelFactory::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventChannelFactory> EventChannelFactory::Instances() { return ::Udm::InstantiatedAttr< EventChannelFactory>(impl); }
	EventChannelFactory EventChannelFactory::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventChannelFactory> EventChannelFactory::Derived() { return ::Udm::DerivedAttr< EventChannelFactory>(impl); }
	::Udm::ArchetypeAttr< EventChannelFactory> EventChannelFactory::Archetype() const { return ::Udm::ArchetypeAttr< EventChannelFactory>(impl); }
	::Udm::IntegerAttr EventChannelFactory::ECDispatchingThreads() const { return ::Udm::IntegerAttr(impl, meta_ECDispatchingThreads); }
	::Udm::StringAttr EventChannelFactory::ECUseORBId() const { return ::Udm::StringAttr(impl, meta_ECUseORBId); }
	::Udm::StringAttr EventChannelFactory::ECTimeout() const { return ::Udm::StringAttr(impl, meta_ECTimeout); }
	::Udm::StringAttr EventChannelFactory::ECDispatching() const { return ::Udm::StringAttr(impl, meta_ECDispatching); }
	::Udm::StringAttr EventChannelFactory::ECObserver() const { return ::Udm::StringAttr(impl, meta_ECObserver); }
	::Udm::StringAttr EventChannelFactory::ECScheduling() const { return ::Udm::StringAttr(impl, meta_ECScheduling); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> EventChannelFactory::eventServiceConfiguration_parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, meta_eventServiceConfiguration_parent); }
	::Udm::ParentAttr< ::CQML::eventServiceConfiguration> EventChannelFactory::parent() const { return ::Udm::ParentAttr< ::CQML::eventServiceConfiguration>(impl, ::Udm::NULLPARENTROLE); }
	void EventChannelFactory::Accept(Visitor &v) { v.Visit_EventChannelFactory(*this); }

	::Uml::Class EventChannelFactory::meta;
	::Uml::Attribute EventChannelFactory::meta_ECDispatchingThreads;
	::Uml::Attribute EventChannelFactory::meta_ECUseORBId;
	::Uml::Attribute EventChannelFactory::meta_ECTimeout;
	::Uml::Attribute EventChannelFactory::meta_ECDispatching;
	::Uml::Attribute EventChannelFactory::meta_ECObserver;
	::Uml::Attribute EventChannelFactory::meta_ECScheduling;
	::Uml::CompositionParentRole EventChannelFactory::meta_eventServiceConfiguration_parent;

	EventSourcePort::EventSourcePort() {}
	EventSourcePort::EventSourcePort(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	EventSourcePort::EventSourcePort(const EventSourcePort &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	EventSourcePort::EventSourcePort(EventSourcePort &&master) : MgaObject(master) {};

	EventSourcePort EventSourcePort::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	EventSourcePort& EventSourcePort::operator=(EventSourcePort &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	EventSourcePort EventSourcePort::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	EventSourcePort EventSourcePort::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	EventSourcePort EventSourcePort::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< EventSourcePort> EventSourcePort::Instances() { return ::Udm::InstantiatedAttr< EventSourcePort>(impl); }
	EventSourcePort EventSourcePort::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< EventSourcePort> EventSourcePort::Derived() { return ::Udm::DerivedAttr< EventSourcePort>(impl); }
	::Udm::ArchetypeAttr< EventSourcePort> EventSourcePort::Archetype() const { return ::Udm::ArchetypeAttr< EventSourcePort>(impl); }
	::Udm::PointerAttr< OutEventPort> EventSourcePort::ref() const { return ::Udm::PointerAttr< OutEventPort>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Filter> EventSourcePort::Filter_parent() const { return ::Udm::ParentAttr< ::CQML::Filter>(impl, meta_Filter_parent); }
	::Udm::ParentAttr< ::CQML::Filter> EventSourcePort::parent() const { return ::Udm::ParentAttr< ::CQML::Filter>(impl, ::Udm::NULLPARENTROLE); }
	void EventSourcePort::Accept(Visitor &v) { v.Visit_EventSourcePort(*this); }

	::Uml::Class EventSourcePort::meta;
	::Uml::AssociationRole EventSourcePort::meta_ref;
	::Uml::CompositionParentRole EventSourcePort::meta_Filter_parent;

	SenderConnection::SenderConnection() {}
	SenderConnection::SenderConnection(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SenderConnection::SenderConnection(const SenderConnection &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SenderConnection::SenderConnection(SenderConnection &&master) : MgaObject(master) {};

	SenderConnection SenderConnection::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SenderConnection& SenderConnection::operator=(SenderConnection &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SenderConnection SenderConnection::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SenderConnection SenderConnection::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SenderConnection SenderConnection::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SenderConnection> SenderConnection::Instances() { return ::Udm::InstantiatedAttr< SenderConnection>(impl); }
	SenderConnection SenderConnection::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SenderConnection> SenderConnection::Derived() { return ::Udm::DerivedAttr< SenderConnection>(impl); }
	::Udm::ArchetypeAttr< SenderConnection> SenderConnection::Archetype() const { return ::Udm::ArchetypeAttr< SenderConnection>(impl); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> SenderConnection::CIAOEvents_parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, meta_CIAOEvents_parent); }
	::Udm::ParentAttr< ::CQML::CIAOEvents> SenderConnection::parent() const { return ::Udm::ParentAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::eventServiceConfiguration> SenderConnection::srcSenderConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::eventServiceConfiguration>(impl, meta_srcSenderConnection_end_); }
	::Udm::AssocEndAttr< ::CQML::EventChannelCommunicationPoint> SenderConnection::dstSenderConnection_end() const { return ::Udm::AssocEndAttr< ::CQML::EventChannelCommunicationPoint>(impl, meta_dstSenderConnection_end_); }
	void SenderConnection::Accept(Visitor &v) { v.Visit_SenderConnection(*this); }

	::Uml::Class SenderConnection::meta;
	::Uml::CompositionParentRole SenderConnection::meta_CIAOEvents_parent;
	::Uml::AssociationRole SenderConnection::meta_srcSenderConnection_end_;
	::Uml::AssociationRole SenderConnection::meta_dstSenderConnection_end_;

	SecurityQoS::SecurityQoS() {}
	SecurityQoS::SecurityQoS(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SecurityQoS::SecurityQoS(const SecurityQoS &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SecurityQoS::SecurityQoS(SecurityQoS &&master) : MgaObject(master) {};

	SecurityQoS SecurityQoS::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SecurityQoS& SecurityQoS::operator=(SecurityQoS &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SecurityQoS SecurityQoS::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SecurityQoS SecurityQoS::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SecurityQoS SecurityQoS::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SecurityQoS> SecurityQoS::Instances() { return ::Udm::InstantiatedAttr< SecurityQoS>(impl); }
	SecurityQoS SecurityQoS::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SecurityQoS> SecurityQoS::Derived() { return ::Udm::DerivedAttr< SecurityQoS>(impl); }
	::Udm::ArchetypeAttr< SecurityQoS> SecurityQoS::Archetype() const { return ::Udm::ArchetypeAttr< SecurityQoS>(impl); }
	::Udm::StringAttr SecurityQoS::IntegrityLevel() const { return ::Udm::StringAttr(impl, meta_IntegrityLevel); }
	::Udm::BooleanAttr SecurityQoS::Authentication() const { return ::Udm::BooleanAttr(impl, meta_Authentication); }
	::Udm::StringAttr SecurityQoS::AuditLevel() const { return ::Udm::StringAttr(impl, meta_AuditLevel); }
	::Udm::StringAttr SecurityQoS::ConfidentialityLevel() const { return ::Udm::StringAttr(impl, meta_ConfidentialityLevel); }
	::Udm::StringAttr SecurityQoS::SecurityLevel() const { return ::Udm::StringAttr(impl, meta_SecurityLevel); }
	::Udm::BooleanAttr SecurityQoS::NonRepudiation() const { return ::Udm::BooleanAttr(impl, meta_NonRepudiation); }
	::Udm::StringAttr SecurityQoS::SecurityPolicy() const { return ::Udm::StringAttr(impl, meta_SecurityPolicy); }
	::Udm::StringAttr SecurityQoS::DelegationPolicy() const { return ::Udm::StringAttr(impl, meta_DelegationPolicy); }
	::Udm::ChildrenAttr< ::CQML::PortRuleRef> SecurityQoS::PortRuleRef_children() const { return ::Udm::ChildrenAttr< ::CQML::PortRuleRef>(impl, meta_PortRuleRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SecurityQoS::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortRuleRef> SecurityQoS::PortRuleRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortRuleRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::Udm::Object> SecurityQoS::parent() const { return ::Udm::ParentAttr< ::Udm::Object>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class SecurityQoS::meta;
	::Uml::Attribute SecurityQoS::meta_IntegrityLevel;
	::Uml::Attribute SecurityQoS::meta_Authentication;
	::Uml::Attribute SecurityQoS::meta_AuditLevel;
	::Uml::Attribute SecurityQoS::meta_ConfidentialityLevel;
	::Uml::Attribute SecurityQoS::meta_SecurityLevel;
	::Uml::Attribute SecurityQoS::meta_NonRepudiation;
	::Uml::Attribute SecurityQoS::meta_SecurityPolicy;
	::Uml::Attribute SecurityQoS::meta_DelegationPolicy;
	::Uml::CompositionChildRole SecurityQoS::meta_PortRuleRef_children;

	PortRuleRef::PortRuleRef() {}
	PortRuleRef::PortRuleRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PortRuleRef::PortRuleRef(const PortRuleRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PortRuleRef::PortRuleRef(PortRuleRef &&master) : MgaObject(master) {};

	PortRuleRef PortRuleRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortRuleRef& PortRuleRef::operator=(PortRuleRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortRuleRef PortRuleRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortRuleRef PortRuleRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortRuleRef PortRuleRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortRuleRef> PortRuleRef::Instances() { return ::Udm::InstantiatedAttr< PortRuleRef>(impl); }
	PortRuleRef PortRuleRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortRuleRef> PortRuleRef::Derived() { return ::Udm::DerivedAttr< PortRuleRef>(impl); }
	::Udm::ArchetypeAttr< PortRuleRef> PortRuleRef::Archetype() const { return ::Udm::ArchetypeAttr< PortRuleRef>(impl); }
	::Udm::PointerAttr< PortRule> PortRuleRef::ref() const { return ::Udm::PointerAttr< PortRule>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::SecurityQoS> PortRuleRef::SecurityQoS_parent() const { return ::Udm::ParentAttr< ::CQML::SecurityQoS>(impl, meta_SecurityQoS_parent); }
	::Udm::ParentAttr< ::CQML::SecurityQoS> PortRuleRef::parent() const { return ::Udm::ParentAttr< ::CQML::SecurityQoS>(impl, ::Udm::NULLPARENTROLE); }
	void PortRuleRef::Accept(Visitor &v) { v.Visit_PortRuleRef(*this); }

	::Uml::Class PortRuleRef::meta;
	::Uml::AssociationRole PortRuleRef::meta_ref;
	::Uml::CompositionParentRole PortRuleRef::meta_SecurityQoS_parent;

	AssemblyRuleRef::AssemblyRuleRef() {}
	AssemblyRuleRef::AssemblyRuleRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyRuleRef::AssemblyRuleRef(const AssemblyRuleRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyRuleRef::AssemblyRuleRef(AssemblyRuleRef &&master) : MgaObject(master) {};

	AssemblyRuleRef AssemblyRuleRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyRuleRef& AssemblyRuleRef::operator=(AssemblyRuleRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyRuleRef AssemblyRuleRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyRuleRef AssemblyRuleRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyRuleRef AssemblyRuleRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyRuleRef> AssemblyRuleRef::Instances() { return ::Udm::InstantiatedAttr< AssemblyRuleRef>(impl); }
	AssemblyRuleRef AssemblyRuleRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyRuleRef> AssemblyRuleRef::Derived() { return ::Udm::DerivedAttr< AssemblyRuleRef>(impl); }
	::Udm::ArchetypeAttr< AssemblyRuleRef> AssemblyRuleRef::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyRuleRef>(impl); }
	::Udm::PointerAttr< AssemblyRule> AssemblyRuleRef::ref() const { return ::Udm::PointerAttr< AssemblyRule>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ComponentAssemblySecurityQoS> AssemblyRuleRef::ComponentAssemblySecurityQoS_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssemblySecurityQoS>(impl, meta_ComponentAssemblySecurityQoS_parent); }
	::Udm::ParentAttr< ::CQML::ComponentAssemblySecurityQoS> AssemblyRuleRef::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentAssemblySecurityQoS>(impl, ::Udm::NULLPARENTROLE); }
	void AssemblyRuleRef::Accept(Visitor &v) { v.Visit_AssemblyRuleRef(*this); }

	::Uml::Class AssemblyRuleRef::meta;
	::Uml::AssociationRole AssemblyRuleRef::meta_ref;
	::Uml::CompositionParentRole AssemblyRuleRef::meta_ComponentAssemblySecurityQoS_parent;

	ComponentRuleRef::ComponentRuleRef() {}
	ComponentRuleRef::ComponentRuleRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentRuleRef::ComponentRuleRef(const ComponentRuleRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentRuleRef::ComponentRuleRef(ComponentRuleRef &&master) : MgaObject(master) {};

	ComponentRuleRef ComponentRuleRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentRuleRef& ComponentRuleRef::operator=(ComponentRuleRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentRuleRef ComponentRuleRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentRuleRef ComponentRuleRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentRuleRef ComponentRuleRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentRuleRef> ComponentRuleRef::Instances() { return ::Udm::InstantiatedAttr< ComponentRuleRef>(impl); }
	ComponentRuleRef ComponentRuleRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentRuleRef> ComponentRuleRef::Derived() { return ::Udm::DerivedAttr< ComponentRuleRef>(impl); }
	::Udm::ArchetypeAttr< ComponentRuleRef> ComponentRuleRef::Archetype() const { return ::Udm::ArchetypeAttr< ComponentRuleRef>(impl); }
	::Udm::PointerAttr< ComponentRule> ComponentRuleRef::ref() const { return ::Udm::PointerAttr< ComponentRule>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::ComponentSecurityQoS> ComponentRuleRef::ComponentSecurityQoS_parent() const { return ::Udm::ParentAttr< ::CQML::ComponentSecurityQoS>(impl, meta_ComponentSecurityQoS_parent); }
	::Udm::ParentAttr< ::CQML::ComponentSecurityQoS> ComponentRuleRef::parent() const { return ::Udm::ParentAttr< ::CQML::ComponentSecurityQoS>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentRuleRef::Accept(Visitor &v) { v.Visit_ComponentRuleRef(*this); }

	::Uml::Class ComponentRuleRef::meta;
	::Uml::AssociationRole ComponentRuleRef::meta_ref;
	::Uml::CompositionParentRole ComponentRuleRef::meta_ComponentSecurityQoS_parent;

	Policy::Policy() {}
	Policy::Policy(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Policy::Policy(const Policy &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Policy::Policy(Policy &&master) : MgaObject(master) {};

	Policy Policy::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Policy& Policy::operator=(Policy &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Policy Policy::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Policy Policy::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Policy Policy::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Policy> Policy::Instances() { return ::Udm::InstantiatedAttr< Policy>(impl); }
	Policy Policy::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Policy> Policy::Derived() { return ::Udm::DerivedAttr< Policy>(impl); }
	::Udm::ArchetypeAttr< Policy> Policy::Archetype() const { return ::Udm::ArchetypeAttr< Policy>(impl); }
	::Udm::ChildrenAttr< ::CQML::OnInterfaceConn> Policy::OnInterfaceConn_children() const { return ::Udm::ChildrenAttr< ::CQML::OnInterfaceConn>(impl, meta_OnInterfaceConn_children); }
	::Udm::ChildrenAttr< ::CQML::AssemblyAccessConn> Policy::AssemblyAccessConn_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyAccessConn>(impl, meta_AssemblyAccessConn_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeRef> Policy::AttributeRef_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeRef>(impl, meta_AttributeRef_children); }
	::Udm::ChildrenAttr< ::CQML::SecuredPathConn> Policy::SecuredPathConn_children() const { return ::Udm::ChildrenAttr< ::CQML::SecuredPathConn>(impl, meta_SecuredPathConn_children); }
	::Udm::ChildrenAttr< ::CQML::OperationInvokeConn> Policy::OperationInvokeConn_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationInvokeConn>(impl, meta_OperationInvokeConn_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> Policy::ComponentAssemblyReference_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, meta_ComponentAssemblyReference_children); }
	::Udm::ChildrenAttr< ::CQML::OnAssemblyConn> Policy::OnAssemblyConn_children() const { return ::Udm::ChildrenAttr< ::CQML::OnAssemblyConn>(impl, meta_OnAssemblyConn_children); }
	::Udm::ChildrenAttr< ::CQML::AttributeManipulateConn> Policy::AttributeManipulateConn_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeManipulateConn>(impl, meta_AttributeManipulateConn_children); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> Policy::ResourceActionBase_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, meta_ResourceActionBase_children); }
	::Udm::ChildrenAttr< ::CQML::RuleBase> Policy::RuleBase_children() const { return ::Udm::ChildrenAttr< ::CQML::RuleBase>(impl, meta_RuleBase_children); }
	::Udm::ChildrenAttr< ::CQML::PathRef> Policy::PathRef_children() const { return ::Udm::ChildrenAttr< ::CQML::PathRef>(impl, meta_PathRef_children); }
	::Udm::ChildrenAttr< ::CQML::ObjectAccessConn> Policy::ObjectAccessConn_children() const { return ::Udm::ChildrenAttr< ::CQML::ObjectAccessConn>(impl, meta_ObjectAccessConn_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAccessConn> Policy::ComponentAccessConn_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAccessConn>(impl, meta_ComponentAccessConn_children); }
	::Udm::ChildrenAttr< ::CQML::InitiatorRoleRef> Policy::InitiatorRoleRef_children() const { return ::Udm::ChildrenAttr< ::CQML::InitiatorRoleRef>(impl, meta_InitiatorRoleRef_children); }
	::Udm::ChildrenAttr< ::CQML::OnComponentConn> Policy::OnComponentConn_children() const { return ::Udm::ChildrenAttr< ::CQML::OnComponentConn>(impl, meta_OnComponentConn_children); }
	::Udm::ChildrenAttr< ::CQML::TargetObjectRef> Policy::TargetObjectRef_children() const { return ::Udm::ChildrenAttr< ::CQML::TargetObjectRef>(impl, meta_TargetObjectRef_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Policy::ComponentRef_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, meta_ComponentRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Policy::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Manageable> Policy::Manageable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Manageable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBase> Policy::ComponentBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRef> Policy::ComponentRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CollocationGroupMember> Policy::CollocationGroupMember_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CollocationGroupMember>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTMonitorable> Policy::FTMonitorable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTMonitorable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference> Policy::ComponentAssemblyReference_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyReference>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationRef> Policy::OperationRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> Policy::ResourceActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAssemblyBase> Policy::ComponentAssemblyBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAssemblyBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyAccessConn> Policy::AssemblyAccessConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyAccessConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ObjectAccessConn> Policy::ObjectAccessConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ObjectAccessConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TargetObjectRef> Policy::TargetObjectRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TargetObjectRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeRef> Policy::AttributeRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RuleBase> Policy::RuleBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RuleBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PortRule> Policy::PortRule_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PortRule>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AssemblyRule> Policy::AssemblyRule_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AssemblyRule>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentRule> Policy::ComponentRule_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentRule>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OnInterfaceConn> Policy::OnInterfaceConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OnInterfaceConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationSet> Policy::OperationSet_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationSet>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAccessConn> Policy::ComponentAccessConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAccessConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InitiatorRoleRef> Policy::InitiatorRoleRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InitiatorRoleRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::AttributeManipulateConn> Policy::AttributeManipulateConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::AttributeManipulateConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SecuredPathConn> Policy::SecuredPathConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SecuredPathConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OnAssemblyConn> Policy::OnAssemblyConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OnAssemblyConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PathRef> Policy::PathRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PathRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationInvokeConn> Policy::OperationInvokeConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationInvokeConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RequiredRights> Policy::RequiredRights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RequiredRights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OnComponentConn> Policy::OnComponentConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OnComponentConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::PolicySet> Policy::PolicySet_parent() const { return ::Udm::ParentAttr< ::CQML::PolicySet>(impl, meta_PolicySet_parent); }
	::Udm::ParentAttr< ::CQML::PolicySet> Policy::parent() const { return ::Udm::ParentAttr< ::CQML::PolicySet>(impl, ::Udm::NULLPARENTROLE); }
	void Policy::Accept(Visitor &v) { v.Visit_Policy(*this); }

	::Uml::Class Policy::meta;
	::Uml::CompositionChildRole Policy::meta_OnInterfaceConn_children;
	::Uml::CompositionChildRole Policy::meta_AssemblyAccessConn_children;
	::Uml::CompositionChildRole Policy::meta_AttributeRef_children;
	::Uml::CompositionChildRole Policy::meta_SecuredPathConn_children;
	::Uml::CompositionChildRole Policy::meta_OperationInvokeConn_children;
	::Uml::CompositionChildRole Policy::meta_ComponentAssemblyReference_children;
	::Uml::CompositionChildRole Policy::meta_OnAssemblyConn_children;
	::Uml::CompositionChildRole Policy::meta_AttributeManipulateConn_children;
	::Uml::CompositionChildRole Policy::meta_ResourceActionBase_children;
	::Uml::CompositionChildRole Policy::meta_RuleBase_children;
	::Uml::CompositionChildRole Policy::meta_PathRef_children;
	::Uml::CompositionChildRole Policy::meta_ObjectAccessConn_children;
	::Uml::CompositionChildRole Policy::meta_ComponentAccessConn_children;
	::Uml::CompositionChildRole Policy::meta_InitiatorRoleRef_children;
	::Uml::CompositionChildRole Policy::meta_OnComponentConn_children;
	::Uml::CompositionChildRole Policy::meta_TargetObjectRef_children;
	::Uml::CompositionChildRole Policy::meta_ComponentRef_children;
	::Uml::CompositionParentRole Policy::meta_PolicySet_parent;

	PolicySet::PolicySet() {}
	PolicySet::PolicySet(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PolicySet::PolicySet(const PolicySet &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PolicySet::PolicySet(PolicySet &&master) : MgaObject(master) {};

	PolicySet PolicySet::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PolicySet& PolicySet::operator=(PolicySet &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PolicySet PolicySet::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PolicySet PolicySet::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PolicySet PolicySet::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PolicySet> PolicySet::Instances() { return ::Udm::InstantiatedAttr< PolicySet>(impl); }
	PolicySet PolicySet::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PolicySet> PolicySet::Derived() { return ::Udm::DerivedAttr< PolicySet>(impl); }
	::Udm::ArchetypeAttr< PolicySet> PolicySet::Archetype() const { return ::Udm::ArchetypeAttr< PolicySet>(impl); }
	::Udm::ChildrenAttr< ::CQML::Policy> PolicySet::Policy_children() const { return ::Udm::ChildrenAttr< ::CQML::Policy>(impl, meta_Policy_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PolicySet::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Policy> PolicySet::Policy_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Policy>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Security> PolicySet::Security_parent() const { return ::Udm::ParentAttr< ::CQML::Security>(impl, meta_Security_parent); }
	::Udm::ParentAttr< ::CQML::Security> PolicySet::parent() const { return ::Udm::ParentAttr< ::CQML::Security>(impl, ::Udm::NULLPARENTROLE); }
	void PolicySet::Accept(Visitor &v) { v.Visit_PolicySet(*this); }

	::Uml::Class PolicySet::meta;
	::Uml::CompositionChildRole PolicySet::meta_Policy_children;
	::Uml::CompositionParentRole PolicySet::meta_Security_parent;

	AssemblyAccessConn::AssemblyAccessConn() {}
	AssemblyAccessConn::AssemblyAccessConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AssemblyAccessConn::AssemblyAccessConn(const AssemblyAccessConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AssemblyAccessConn::AssemblyAccessConn(AssemblyAccessConn &&master) : MgaObject(master) {};

	AssemblyAccessConn AssemblyAccessConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyAccessConn& AssemblyAccessConn::operator=(AssemblyAccessConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyAccessConn AssemblyAccessConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyAccessConn AssemblyAccessConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyAccessConn AssemblyAccessConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyAccessConn> AssemblyAccessConn::Instances() { return ::Udm::InstantiatedAttr< AssemblyAccessConn>(impl); }
	AssemblyAccessConn AssemblyAccessConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyAccessConn> AssemblyAccessConn::Derived() { return ::Udm::DerivedAttr< AssemblyAccessConn>(impl); }
	::Udm::ArchetypeAttr< AssemblyAccessConn> AssemblyAccessConn::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyAccessConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> AssemblyAccessConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> AssemblyAccessConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef> AssemblyAccessConn::srcAssemblyAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef>(impl, meta_srcAssemblyAccessConn_end_); }
	::Udm::AssocEndAttr< ::CQML::AssemblyRule> AssemblyAccessConn::dstAssemblyAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::AssemblyRule>(impl, meta_dstAssemblyAccessConn_end_); }
	void AssemblyAccessConn::Accept(Visitor &v) { v.Visit_AssemblyAccessConn(*this); }

	::Uml::Class AssemblyAccessConn::meta;
	::Uml::CompositionParentRole AssemblyAccessConn::meta_Policy_parent;
	::Uml::AssociationRole AssemblyAccessConn::meta_srcAssemblyAccessConn_end_;
	::Uml::AssociationRole AssemblyAccessConn::meta_dstAssemblyAccessConn_end_;

	ObjectAccessConn::ObjectAccessConn() {}
	ObjectAccessConn::ObjectAccessConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ObjectAccessConn::ObjectAccessConn(const ObjectAccessConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ObjectAccessConn::ObjectAccessConn(ObjectAccessConn &&master) : MgaObject(master) {};

	ObjectAccessConn ObjectAccessConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ObjectAccessConn& ObjectAccessConn::operator=(ObjectAccessConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ObjectAccessConn ObjectAccessConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ObjectAccessConn ObjectAccessConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ObjectAccessConn ObjectAccessConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ObjectAccessConn> ObjectAccessConn::Instances() { return ::Udm::InstantiatedAttr< ObjectAccessConn>(impl); }
	ObjectAccessConn ObjectAccessConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ObjectAccessConn> ObjectAccessConn::Derived() { return ::Udm::DerivedAttr< ObjectAccessConn>(impl); }
	::Udm::ArchetypeAttr< ObjectAccessConn> ObjectAccessConn::Archetype() const { return ::Udm::ArchetypeAttr< ObjectAccessConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> ObjectAccessConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> ObjectAccessConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef> ObjectAccessConn::srcObjectAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef>(impl, meta_srcObjectAccessConn_end_); }
	::Udm::AssocEndAttr< ::CQML::PortRule> ObjectAccessConn::dstObjectAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::PortRule>(impl, meta_dstObjectAccessConn_end_); }
	void ObjectAccessConn::Accept(Visitor &v) { v.Visit_ObjectAccessConn(*this); }

	::Uml::Class ObjectAccessConn::meta;
	::Uml::CompositionParentRole ObjectAccessConn::meta_Policy_parent;
	::Uml::AssociationRole ObjectAccessConn::meta_srcObjectAccessConn_end_;
	::Uml::AssociationRole ObjectAccessConn::meta_dstObjectAccessConn_end_;

	TargetObjectRef::TargetObjectRef() {}
	TargetObjectRef::TargetObjectRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	TargetObjectRef::TargetObjectRef(const TargetObjectRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	TargetObjectRef::TargetObjectRef(TargetObjectRef &&master) : MgaObject(master) {};

	TargetObjectRef TargetObjectRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TargetObjectRef& TargetObjectRef::operator=(TargetObjectRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TargetObjectRef TargetObjectRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TargetObjectRef TargetObjectRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TargetObjectRef TargetObjectRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TargetObjectRef> TargetObjectRef::Instances() { return ::Udm::InstantiatedAttr< TargetObjectRef>(impl); }
	TargetObjectRef TargetObjectRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TargetObjectRef> TargetObjectRef::Derived() { return ::Udm::DerivedAttr< TargetObjectRef>(impl); }
	::Udm::ArchetypeAttr< TargetObjectRef> TargetObjectRef::Archetype() const { return ::Udm::ArchetypeAttr< TargetObjectRef>(impl); }
	::Udm::PointerAttr< ::CQML::Object> TargetObjectRef::ref() const { return ::Udm::PointerAttr< ::CQML::Object>(impl, meta_ref); }
	::Udm::AClassAssocAttr< OnInterfaceConn, PortRule> TargetObjectRef::srcOnInterfaceConn() const { return ::Udm::AClassAssocAttr< OnInterfaceConn, PortRule>(impl, meta_srcOnInterfaceConn, meta_srcOnInterfaceConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> TargetObjectRef::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> TargetObjectRef::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void TargetObjectRef::Accept(Visitor &v) { v.Visit_TargetObjectRef(*this); }

	::Uml::Class TargetObjectRef::meta;
	::Uml::AssociationRole TargetObjectRef::meta_ref;
	::Uml::AssociationRole TargetObjectRef::meta_srcOnInterfaceConn;
	::Uml::AssociationRole TargetObjectRef::meta_srcOnInterfaceConn_rev;
	::Uml::CompositionParentRole TargetObjectRef::meta_Policy_parent;

	AttributeRef::AttributeRef() {}
	AttributeRef::AttributeRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeRef::AttributeRef(const AttributeRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeRef::AttributeRef(AttributeRef &&master) : MgaObject(master) {};

	AttributeRef AttributeRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeRef& AttributeRef::operator=(AttributeRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeRef AttributeRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeRef AttributeRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeRef AttributeRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeRef> AttributeRef::Instances() { return ::Udm::InstantiatedAttr< AttributeRef>(impl); }
	AttributeRef AttributeRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeRef> AttributeRef::Derived() { return ::Udm::DerivedAttr< AttributeRef>(impl); }
	::Udm::ArchetypeAttr< AttributeRef> AttributeRef::Archetype() const { return ::Udm::ArchetypeAttr< AttributeRef>(impl); }
	::Udm::PointerAttr< ReadonlyAttribute> AttributeRef::ref() const { return ::Udm::PointerAttr< ReadonlyAttribute>(impl, meta_ref); }
	::Udm::AClassAssocAttr< AttributeManipulateConn, ComponentRule> AttributeRef::srcAttributeManipulateConn() const { return ::Udm::AClassAssocAttr< AttributeManipulateConn, ComponentRule>(impl, meta_srcAttributeManipulateConn, meta_srcAttributeManipulateConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> AttributeRef::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> AttributeRef::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void AttributeRef::Accept(Visitor &v) { v.Visit_AttributeRef(*this); }

	::Uml::Class AttributeRef::meta;
	::Uml::AssociationRole AttributeRef::meta_ref;
	::Uml::AssociationRole AttributeRef::meta_srcAttributeManipulateConn;
	::Uml::AssociationRole AttributeRef::meta_srcAttributeManipulateConn_rev;
	::Uml::CompositionParentRole AttributeRef::meta_Policy_parent;

	RuleBase::RuleBase() {}
	RuleBase::RuleBase(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RuleBase::RuleBase(const RuleBase &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RuleBase::RuleBase(RuleBase &&master) : MgaObject(master) {};

	RuleBase RuleBase::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RuleBase& RuleBase::operator=(RuleBase &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RuleBase RuleBase::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RuleBase RuleBase::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RuleBase RuleBase::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RuleBase> RuleBase::Instances() { return ::Udm::InstantiatedAttr< RuleBase>(impl); }
	RuleBase RuleBase::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RuleBase> RuleBase::Derived() { return ::Udm::DerivedAttr< RuleBase>(impl); }
	::Udm::ArchetypeAttr< RuleBase> RuleBase::Archetype() const { return ::Udm::ArchetypeAttr< RuleBase>(impl); }
	::Udm::BooleanAttr RuleBase::allow() const { return ::Udm::BooleanAttr(impl, meta_allow); }
	::Udm::ParentAttr< ::CQML::Policy> RuleBase::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> RuleBase::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class RuleBase::meta;
	::Uml::Attribute RuleBase::meta_allow;
	::Uml::CompositionParentRole RuleBase::meta_Policy_parent;

	PortRule::PortRule() {}
	PortRule::PortRule(::Udm::ObjectImpl *impl) : RuleBase(impl) {}
	PortRule::PortRule(const PortRule &master) : RuleBase(master) {}

#ifdef UDM_RVALUE
	PortRule::PortRule(PortRule &&master) : RuleBase(master) {};

	PortRule PortRule::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PortRule& PortRule::operator=(PortRule &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PortRule PortRule::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PortRule PortRule::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PortRule PortRule::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PortRule> PortRule::Instances() { return ::Udm::InstantiatedAttr< PortRule>(impl); }
	PortRule PortRule::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PortRule> PortRule::Derived() { return ::Udm::DerivedAttr< PortRule>(impl); }
	::Udm::ArchetypeAttr< PortRule> PortRule::Archetype() const { return ::Udm::ArchetypeAttr< PortRule>(impl); }
	::Udm::AssocAttr< PortRuleRef> PortRule::referedbyPortRuleRef() const { return ::Udm::AssocAttr< PortRuleRef>(impl, meta_referedbyPortRuleRef); }
	::Udm::AClassPointerAttr< ObjectAccessConn, InitiatorRoleRef> PortRule::srcObjectAccessConn() const { return ::Udm::AClassPointerAttr< ObjectAccessConn, InitiatorRoleRef>(impl, meta_srcObjectAccessConn, meta_srcObjectAccessConn_rev); }
	::Udm::AClassPointerAttr< OperationInvokeConn, ResourceActionBase> PortRule::dstOperationInvokeConn() const { return ::Udm::AClassPointerAttr< OperationInvokeConn, ResourceActionBase>(impl, meta_dstOperationInvokeConn, meta_dstOperationInvokeConn_rev); }
	::Udm::AClassPointerAttr< OnInterfaceConn, TargetObjectRef> PortRule::dstOnInterfaceConn() const { return ::Udm::AClassPointerAttr< OnInterfaceConn, TargetObjectRef>(impl, meta_dstOnInterfaceConn, meta_dstOnInterfaceConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> PortRule::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void PortRule::Accept(Visitor &v) { v.Visit_PortRule(*this); }

	::Uml::Class PortRule::meta;
	::Uml::AssociationRole PortRule::meta_referedbyPortRuleRef;
	::Uml::AssociationRole PortRule::meta_srcObjectAccessConn;
	::Uml::AssociationRole PortRule::meta_srcObjectAccessConn_rev;
	::Uml::AssociationRole PortRule::meta_dstOperationInvokeConn;
	::Uml::AssociationRole PortRule::meta_dstOperationInvokeConn_rev;
	::Uml::AssociationRole PortRule::meta_dstOnInterfaceConn;
	::Uml::AssociationRole PortRule::meta_dstOnInterfaceConn_rev;

	AssemblyRule::AssemblyRule() {}
	AssemblyRule::AssemblyRule(::Udm::ObjectImpl *impl) : RuleBase(impl) {}
	AssemblyRule::AssemblyRule(const AssemblyRule &master) : RuleBase(master) {}

#ifdef UDM_RVALUE
	AssemblyRule::AssemblyRule(AssemblyRule &&master) : RuleBase(master) {};

	AssemblyRule AssemblyRule::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AssemblyRule& AssemblyRule::operator=(AssemblyRule &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AssemblyRule AssemblyRule::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AssemblyRule AssemblyRule::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AssemblyRule AssemblyRule::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AssemblyRule> AssemblyRule::Instances() { return ::Udm::InstantiatedAttr< AssemblyRule>(impl); }
	AssemblyRule AssemblyRule::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AssemblyRule> AssemblyRule::Derived() { return ::Udm::DerivedAttr< AssemblyRule>(impl); }
	::Udm::ArchetypeAttr< AssemblyRule> AssemblyRule::Archetype() const { return ::Udm::ArchetypeAttr< AssemblyRule>(impl); }
	::Udm::AssocAttr< AssemblyRuleRef> AssemblyRule::referedbyAssemblyRuleRef() const { return ::Udm::AssocAttr< AssemblyRuleRef>(impl, meta_referedbyAssemblyRuleRef); }
	::Udm::AClassPointerAttr< AssemblyAccessConn, InitiatorRoleRef> AssemblyRule::srcAssemblyAccessConn() const { return ::Udm::AClassPointerAttr< AssemblyAccessConn, InitiatorRoleRef>(impl, meta_srcAssemblyAccessConn, meta_srcAssemblyAccessConn_rev); }
	::Udm::AClassPointerAttr< OnAssemblyConn, ComponentAssemblyReference> AssemblyRule::dstOnAssemblyConn() const { return ::Udm::AClassPointerAttr< OnAssemblyConn, ComponentAssemblyReference>(impl, meta_dstOnAssemblyConn, meta_dstOnAssemblyConn_rev); }
	::Udm::AClassPointerAttr< SecuredPathConn, PathRef> AssemblyRule::dstSecuredPathConn() const { return ::Udm::AClassPointerAttr< SecuredPathConn, PathRef>(impl, meta_dstSecuredPathConn, meta_dstSecuredPathConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> AssemblyRule::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void AssemblyRule::Accept(Visitor &v) { v.Visit_AssemblyRule(*this); }

	::Uml::Class AssemblyRule::meta;
	::Uml::AssociationRole AssemblyRule::meta_referedbyAssemblyRuleRef;
	::Uml::AssociationRole AssemblyRule::meta_srcAssemblyAccessConn;
	::Uml::AssociationRole AssemblyRule::meta_srcAssemblyAccessConn_rev;
	::Uml::AssociationRole AssemblyRule::meta_dstOnAssemblyConn;
	::Uml::AssociationRole AssemblyRule::meta_dstOnAssemblyConn_rev;
	::Uml::AssociationRole AssemblyRule::meta_dstSecuredPathConn;
	::Uml::AssociationRole AssemblyRule::meta_dstSecuredPathConn_rev;

	ComponentRule::ComponentRule() {}
	ComponentRule::ComponentRule(::Udm::ObjectImpl *impl) : RuleBase(impl) {}
	ComponentRule::ComponentRule(const ComponentRule &master) : RuleBase(master) {}

#ifdef UDM_RVALUE
	ComponentRule::ComponentRule(ComponentRule &&master) : RuleBase(master) {};

	ComponentRule ComponentRule::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentRule& ComponentRule::operator=(ComponentRule &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentRule ComponentRule::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentRule ComponentRule::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentRule ComponentRule::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentRule> ComponentRule::Instances() { return ::Udm::InstantiatedAttr< ComponentRule>(impl); }
	ComponentRule ComponentRule::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentRule> ComponentRule::Derived() { return ::Udm::DerivedAttr< ComponentRule>(impl); }
	::Udm::ArchetypeAttr< ComponentRule> ComponentRule::Archetype() const { return ::Udm::ArchetypeAttr< ComponentRule>(impl); }
	::Udm::AssocAttr< ComponentRuleRef> ComponentRule::referedbyComponentRuleRef() const { return ::Udm::AssocAttr< ComponentRuleRef>(impl, meta_referedbyComponentRuleRef); }
	::Udm::AClassPointerAttr< ComponentAccessConn, InitiatorRoleRef> ComponentRule::srcComponentAccessConn() const { return ::Udm::AClassPointerAttr< ComponentAccessConn, InitiatorRoleRef>(impl, meta_srcComponentAccessConn, meta_srcComponentAccessConn_rev); }
	::Udm::AClassPointerAttr< OnComponentConn, ComponentRef> ComponentRule::dstOnComponentConn() const { return ::Udm::AClassPointerAttr< OnComponentConn, ComponentRef>(impl, meta_dstOnComponentConn, meta_dstOnComponentConn_rev); }
	::Udm::AClassPointerAttr< AttributeManipulateConn, AttributeRef> ComponentRule::dstAttributeManipulateConn() const { return ::Udm::AClassPointerAttr< AttributeManipulateConn, AttributeRef>(impl, meta_dstAttributeManipulateConn, meta_dstAttributeManipulateConn_rev); }
	::Udm::ParentAttr< ::CQML::Policy> ComponentRule::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentRule::Accept(Visitor &v) { v.Visit_ComponentRule(*this); }

	::Uml::Class ComponentRule::meta;
	::Uml::AssociationRole ComponentRule::meta_referedbyComponentRuleRef;
	::Uml::AssociationRole ComponentRule::meta_srcComponentAccessConn;
	::Uml::AssociationRole ComponentRule::meta_srcComponentAccessConn_rev;
	::Uml::AssociationRole ComponentRule::meta_dstOnComponentConn;
	::Uml::AssociationRole ComponentRule::meta_dstOnComponentConn_rev;
	::Uml::AssociationRole ComponentRule::meta_dstAttributeManipulateConn;
	::Uml::AssociationRole ComponentRule::meta_dstAttributeManipulateConn_rev;

	OnInterfaceConn::OnInterfaceConn() {}
	OnInterfaceConn::OnInterfaceConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OnInterfaceConn::OnInterfaceConn(const OnInterfaceConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OnInterfaceConn::OnInterfaceConn(OnInterfaceConn &&master) : MgaObject(master) {};

	OnInterfaceConn OnInterfaceConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OnInterfaceConn& OnInterfaceConn::operator=(OnInterfaceConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OnInterfaceConn OnInterfaceConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OnInterfaceConn OnInterfaceConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OnInterfaceConn OnInterfaceConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OnInterfaceConn> OnInterfaceConn::Instances() { return ::Udm::InstantiatedAttr< OnInterfaceConn>(impl); }
	OnInterfaceConn OnInterfaceConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OnInterfaceConn> OnInterfaceConn::Derived() { return ::Udm::DerivedAttr< OnInterfaceConn>(impl); }
	::Udm::ArchetypeAttr< OnInterfaceConn> OnInterfaceConn::Archetype() const { return ::Udm::ArchetypeAttr< OnInterfaceConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> OnInterfaceConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> OnInterfaceConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PortRule> OnInterfaceConn::srcOnInterfaceConn_end() const { return ::Udm::AssocEndAttr< ::CQML::PortRule>(impl, meta_srcOnInterfaceConn_end_); }
	::Udm::AssocEndAttr< ::CQML::TargetObjectRef> OnInterfaceConn::dstOnInterfaceConn_end() const { return ::Udm::AssocEndAttr< ::CQML::TargetObjectRef>(impl, meta_dstOnInterfaceConn_end_); }
	void OnInterfaceConn::Accept(Visitor &v) { v.Visit_OnInterfaceConn(*this); }

	::Uml::Class OnInterfaceConn::meta;
	::Uml::CompositionParentRole OnInterfaceConn::meta_Policy_parent;
	::Uml::AssociationRole OnInterfaceConn::meta_srcOnInterfaceConn_end_;
	::Uml::AssociationRole OnInterfaceConn::meta_dstOnInterfaceConn_end_;

	OperationSet::OperationSet() {}
	OperationSet::OperationSet(::Udm::ObjectImpl *impl) : ResourceActionBase(impl), MgaObject(impl) {}
	OperationSet::OperationSet(const OperationSet &master) : ResourceActionBase(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationSet::OperationSet(OperationSet &&master) : ResourceActionBase(master), MgaObject(master) {};

	OperationSet OperationSet::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationSet& OperationSet::operator=(OperationSet &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationSet OperationSet::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationSet OperationSet::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationSet OperationSet::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationSet> OperationSet::Instances() { return ::Udm::InstantiatedAttr< OperationSet>(impl); }
	OperationSet OperationSet::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationSet> OperationSet::Derived() { return ::Udm::DerivedAttr< OperationSet>(impl); }
	::Udm::ArchetypeAttr< OperationSet> OperationSet::Archetype() const { return ::Udm::ArchetypeAttr< OperationSet>(impl); }
	::Udm::ChildrenAttr< ::CQML::OperationRef> OperationSet::OperationRef_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationRef>(impl, meta_OperationRef_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> OperationSet::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::OperationRef> OperationSet::OperationRef_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::OperationRef>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ResourceActionBase> OperationSet::ResourceActionBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ResourceActionBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Policy> OperationSet::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void OperationSet::Accept(Visitor &v) { v.Visit_OperationSet(*this); }

	::Uml::Class OperationSet::meta;
	::Uml::CompositionChildRole OperationSet::meta_OperationRef_children;

	ComponentAccessConn::ComponentAccessConn() {}
	ComponentAccessConn::ComponentAccessConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	ComponentAccessConn::ComponentAccessConn(const ComponentAccessConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	ComponentAccessConn::ComponentAccessConn(ComponentAccessConn &&master) : MgaObject(master) {};

	ComponentAccessConn ComponentAccessConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAccessConn& ComponentAccessConn::operator=(ComponentAccessConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAccessConn ComponentAccessConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAccessConn ComponentAccessConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAccessConn ComponentAccessConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAccessConn> ComponentAccessConn::Instances() { return ::Udm::InstantiatedAttr< ComponentAccessConn>(impl); }
	ComponentAccessConn ComponentAccessConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAccessConn> ComponentAccessConn::Derived() { return ::Udm::DerivedAttr< ComponentAccessConn>(impl); }
	::Udm::ArchetypeAttr< ComponentAccessConn> ComponentAccessConn::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAccessConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> ComponentAccessConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> ComponentAccessConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef> ComponentAccessConn::srcComponentAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::InitiatorRoleRef>(impl, meta_srcComponentAccessConn_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentRule> ComponentAccessConn::dstComponentAccessConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRule>(impl, meta_dstComponentAccessConn_end_); }
	void ComponentAccessConn::Accept(Visitor &v) { v.Visit_ComponentAccessConn(*this); }

	::Uml::Class ComponentAccessConn::meta;
	::Uml::CompositionParentRole ComponentAccessConn::meta_Policy_parent;
	::Uml::AssociationRole ComponentAccessConn::meta_srcComponentAccessConn_end_;
	::Uml::AssociationRole ComponentAccessConn::meta_dstComponentAccessConn_end_;

	InitiatorRoleRef::InitiatorRoleRef() {}
	InitiatorRoleRef::InitiatorRoleRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InitiatorRoleRef::InitiatorRoleRef(const InitiatorRoleRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InitiatorRoleRef::InitiatorRoleRef(InitiatorRoleRef &&master) : MgaObject(master) {};

	InitiatorRoleRef InitiatorRoleRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InitiatorRoleRef& InitiatorRoleRef::operator=(InitiatorRoleRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InitiatorRoleRef InitiatorRoleRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InitiatorRoleRef InitiatorRoleRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InitiatorRoleRef InitiatorRoleRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InitiatorRoleRef> InitiatorRoleRef::Instances() { return ::Udm::InstantiatedAttr< InitiatorRoleRef>(impl); }
	InitiatorRoleRef InitiatorRoleRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InitiatorRoleRef> InitiatorRoleRef::Derived() { return ::Udm::DerivedAttr< InitiatorRoleRef>(impl); }
	::Udm::ArchetypeAttr< InitiatorRoleRef> InitiatorRoleRef::Archetype() const { return ::Udm::ArchetypeAttr< InitiatorRoleRef>(impl); }
	::Udm::AClassAssocAttr< ObjectAccessConn, PortRule> InitiatorRoleRef::dstObjectAccessConn() const { return ::Udm::AClassAssocAttr< ObjectAccessConn, PortRule>(impl, meta_dstObjectAccessConn, meta_dstObjectAccessConn_rev); }
	::Udm::AClassAssocAttr< AssemblyAccessConn, AssemblyRule> InitiatorRoleRef::dstAssemblyAccessConn() const { return ::Udm::AClassAssocAttr< AssemblyAccessConn, AssemblyRule>(impl, meta_dstAssemblyAccessConn, meta_dstAssemblyAccessConn_rev); }
	::Udm::AClassAssocAttr< ComponentAccessConn, ComponentRule> InitiatorRoleRef::dstComponentAccessConn() const { return ::Udm::AClassAssocAttr< ComponentAccessConn, ComponentRule>(impl, meta_dstComponentAccessConn, meta_dstComponentAccessConn_rev); }
	::Udm::PointerAttr< Role> InitiatorRoleRef::ref() const { return ::Udm::PointerAttr< Role>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Policy> InitiatorRoleRef::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> InitiatorRoleRef::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void InitiatorRoleRef::Accept(Visitor &v) { v.Visit_InitiatorRoleRef(*this); }

	::Uml::Class InitiatorRoleRef::meta;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstObjectAccessConn;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstObjectAccessConn_rev;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstAssemblyAccessConn;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstAssemblyAccessConn_rev;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstComponentAccessConn;
	::Uml::AssociationRole InitiatorRoleRef::meta_dstComponentAccessConn_rev;
	::Uml::AssociationRole InitiatorRoleRef::meta_ref;
	::Uml::CompositionParentRole InitiatorRoleRef::meta_Policy_parent;

	AttributeManipulateConn::AttributeManipulateConn() {}
	AttributeManipulateConn::AttributeManipulateConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	AttributeManipulateConn::AttributeManipulateConn(const AttributeManipulateConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	AttributeManipulateConn::AttributeManipulateConn(AttributeManipulateConn &&master) : MgaObject(master) {};

	AttributeManipulateConn AttributeManipulateConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	AttributeManipulateConn& AttributeManipulateConn::operator=(AttributeManipulateConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	AttributeManipulateConn AttributeManipulateConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	AttributeManipulateConn AttributeManipulateConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	AttributeManipulateConn AttributeManipulateConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< AttributeManipulateConn> AttributeManipulateConn::Instances() { return ::Udm::InstantiatedAttr< AttributeManipulateConn>(impl); }
	AttributeManipulateConn AttributeManipulateConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< AttributeManipulateConn> AttributeManipulateConn::Derived() { return ::Udm::DerivedAttr< AttributeManipulateConn>(impl); }
	::Udm::ArchetypeAttr< AttributeManipulateConn> AttributeManipulateConn::Archetype() const { return ::Udm::ArchetypeAttr< AttributeManipulateConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> AttributeManipulateConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> AttributeManipulateConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentRule> AttributeManipulateConn::srcAttributeManipulateConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRule>(impl, meta_srcAttributeManipulateConn_end_); }
	::Udm::AssocEndAttr< ::CQML::AttributeRef> AttributeManipulateConn::dstAttributeManipulateConn_end() const { return ::Udm::AssocEndAttr< ::CQML::AttributeRef>(impl, meta_dstAttributeManipulateConn_end_); }
	void AttributeManipulateConn::Accept(Visitor &v) { v.Visit_AttributeManipulateConn(*this); }

	::Uml::Class AttributeManipulateConn::meta;
	::Uml::CompositionParentRole AttributeManipulateConn::meta_Policy_parent;
	::Uml::AssociationRole AttributeManipulateConn::meta_srcAttributeManipulateConn_end_;
	::Uml::AssociationRole AttributeManipulateConn::meta_dstAttributeManipulateConn_end_;

	SecuredPathConn::SecuredPathConn() {}
	SecuredPathConn::SecuredPathConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SecuredPathConn::SecuredPathConn(const SecuredPathConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SecuredPathConn::SecuredPathConn(SecuredPathConn &&master) : MgaObject(master) {};

	SecuredPathConn SecuredPathConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SecuredPathConn& SecuredPathConn::operator=(SecuredPathConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SecuredPathConn SecuredPathConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SecuredPathConn SecuredPathConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SecuredPathConn SecuredPathConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SecuredPathConn> SecuredPathConn::Instances() { return ::Udm::InstantiatedAttr< SecuredPathConn>(impl); }
	SecuredPathConn SecuredPathConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SecuredPathConn> SecuredPathConn::Derived() { return ::Udm::DerivedAttr< SecuredPathConn>(impl); }
	::Udm::ArchetypeAttr< SecuredPathConn> SecuredPathConn::Archetype() const { return ::Udm::ArchetypeAttr< SecuredPathConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> SecuredPathConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> SecuredPathConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::AssemblyRule> SecuredPathConn::srcSecuredPathConn_end() const { return ::Udm::AssocEndAttr< ::CQML::AssemblyRule>(impl, meta_srcSecuredPathConn_end_); }
	::Udm::AssocEndAttr< ::CQML::PathRef> SecuredPathConn::dstSecuredPathConn_end() const { return ::Udm::AssocEndAttr< ::CQML::PathRef>(impl, meta_dstSecuredPathConn_end_); }
	void SecuredPathConn::Accept(Visitor &v) { v.Visit_SecuredPathConn(*this); }

	::Uml::Class SecuredPathConn::meta;
	::Uml::CompositionParentRole SecuredPathConn::meta_Policy_parent;
	::Uml::AssociationRole SecuredPathConn::meta_srcSecuredPathConn_end_;
	::Uml::AssociationRole SecuredPathConn::meta_dstSecuredPathConn_end_;

	OnAssemblyConn::OnAssemblyConn() {}
	OnAssemblyConn::OnAssemblyConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OnAssemblyConn::OnAssemblyConn(const OnAssemblyConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OnAssemblyConn::OnAssemblyConn(OnAssemblyConn &&master) : MgaObject(master) {};

	OnAssemblyConn OnAssemblyConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OnAssemblyConn& OnAssemblyConn::operator=(OnAssemblyConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OnAssemblyConn OnAssemblyConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OnAssemblyConn OnAssemblyConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OnAssemblyConn OnAssemblyConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OnAssemblyConn> OnAssemblyConn::Instances() { return ::Udm::InstantiatedAttr< OnAssemblyConn>(impl); }
	OnAssemblyConn OnAssemblyConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OnAssemblyConn> OnAssemblyConn::Derived() { return ::Udm::DerivedAttr< OnAssemblyConn>(impl); }
	::Udm::ArchetypeAttr< OnAssemblyConn> OnAssemblyConn::Archetype() const { return ::Udm::ArchetypeAttr< OnAssemblyConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> OnAssemblyConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> OnAssemblyConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::AssemblyRule> OnAssemblyConn::srcOnAssemblyConn_end() const { return ::Udm::AssocEndAttr< ::CQML::AssemblyRule>(impl, meta_srcOnAssemblyConn_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentAssemblyReference> OnAssemblyConn::dstOnAssemblyConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentAssemblyReference>(impl, meta_dstOnAssemblyConn_end_); }
	void OnAssemblyConn::Accept(Visitor &v) { v.Visit_OnAssemblyConn(*this); }

	::Uml::Class OnAssemblyConn::meta;
	::Uml::CompositionParentRole OnAssemblyConn::meta_Policy_parent;
	::Uml::AssociationRole OnAssemblyConn::meta_srcOnAssemblyConn_end_;
	::Uml::AssociationRole OnAssemblyConn::meta_dstOnAssemblyConn_end_;

	PathRef::PathRef() {}
	PathRef::PathRef(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	PathRef::PathRef(const PathRef &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	PathRef::PathRef(PathRef &&master) : MgaObject(master) {};

	PathRef PathRef::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathRef& PathRef::operator=(PathRef &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathRef PathRef::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathRef PathRef::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathRef PathRef::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathRef> PathRef::Instances() { return ::Udm::InstantiatedAttr< PathRef>(impl); }
	PathRef PathRef::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathRef> PathRef::Derived() { return ::Udm::DerivedAttr< PathRef>(impl); }
	::Udm::ArchetypeAttr< PathRef> PathRef::Archetype() const { return ::Udm::ArchetypeAttr< PathRef>(impl); }
	::Udm::AClassAssocAttr< SecuredPathConn, AssemblyRule> PathRef::srcSecuredPathConn() const { return ::Udm::AClassAssocAttr< SecuredPathConn, AssemblyRule>(impl, meta_srcSecuredPathConn, meta_srcSecuredPathConn_rev); }
	::Udm::PointerAttr< Path> PathRef::ref() const { return ::Udm::PointerAttr< Path>(impl, meta_ref); }
	::Udm::ParentAttr< ::CQML::Policy> PathRef::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> PathRef::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	void PathRef::Accept(Visitor &v) { v.Visit_PathRef(*this); }

	::Uml::Class PathRef::meta;
	::Uml::AssociationRole PathRef::meta_srcSecuredPathConn;
	::Uml::AssociationRole PathRef::meta_srcSecuredPathConn_rev;
	::Uml::AssociationRole PathRef::meta_ref;
	::Uml::CompositionParentRole PathRef::meta_Policy_parent;

	OperationInvokeConn::OperationInvokeConn() {}
	OperationInvokeConn::OperationInvokeConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OperationInvokeConn::OperationInvokeConn(const OperationInvokeConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationInvokeConn::OperationInvokeConn(OperationInvokeConn &&master) : MgaObject(master) {};

	OperationInvokeConn OperationInvokeConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationInvokeConn& OperationInvokeConn::operator=(OperationInvokeConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationInvokeConn OperationInvokeConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationInvokeConn OperationInvokeConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationInvokeConn OperationInvokeConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationInvokeConn> OperationInvokeConn::Instances() { return ::Udm::InstantiatedAttr< OperationInvokeConn>(impl); }
	OperationInvokeConn OperationInvokeConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationInvokeConn> OperationInvokeConn::Derived() { return ::Udm::DerivedAttr< OperationInvokeConn>(impl); }
	::Udm::ArchetypeAttr< OperationInvokeConn> OperationInvokeConn::Archetype() const { return ::Udm::ArchetypeAttr< OperationInvokeConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> OperationInvokeConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> OperationInvokeConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::PortRule> OperationInvokeConn::srcOperationInvokeConn_end() const { return ::Udm::AssocEndAttr< ::CQML::PortRule>(impl, meta_srcOperationInvokeConn_end_); }
	::Udm::AssocEndAttr< ::CQML::ResourceActionBase> OperationInvokeConn::dstOperationInvokeConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ResourceActionBase>(impl, meta_dstOperationInvokeConn_end_); }
	void OperationInvokeConn::Accept(Visitor &v) { v.Visit_OperationInvokeConn(*this); }

	::Uml::Class OperationInvokeConn::meta;
	::Uml::CompositionParentRole OperationInvokeConn::meta_Policy_parent;
	::Uml::AssociationRole OperationInvokeConn::meta_srcOperationInvokeConn_end_;
	::Uml::AssociationRole OperationInvokeConn::meta_dstOperationInvokeConn_end_;

	RequiredRights::RequiredRights() {}
	RequiredRights::RequiredRights(::Udm::ObjectImpl *impl) : ResourceActionBase(impl),Rights(impl), MgaObject(impl) {}
	RequiredRights::RequiredRights(const RequiredRights &master) : ResourceActionBase(master),Rights(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	RequiredRights::RequiredRights(RequiredRights &&master) : ResourceActionBase(master),Rights(master), MgaObject(master) {};

	RequiredRights RequiredRights::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RequiredRights& RequiredRights::operator=(RequiredRights &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RequiredRights RequiredRights::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RequiredRights RequiredRights::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RequiredRights RequiredRights::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RequiredRights> RequiredRights::Instances() { return ::Udm::InstantiatedAttr< RequiredRights>(impl); }
	RequiredRights RequiredRights::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RequiredRights> RequiredRights::Derived() { return ::Udm::DerivedAttr< RequiredRights>(impl); }
	::Udm::ArchetypeAttr< RequiredRights> RequiredRights::Archetype() const { return ::Udm::ArchetypeAttr< RequiredRights>(impl); }
	::Udm::StringAttr RequiredRights::combinator() const { return ::Udm::StringAttr(impl, meta_combinator); }
	::Udm::AClassAssocAttr< InterfaceClassificationConn, ::CQML::Object> RequiredRights::srcInterfaceClassificationConn() const { return ::Udm::AClassAssocAttr< InterfaceClassificationConn, ::CQML::Object>(impl, meta_srcInterfaceClassificationConn, meta_srcInterfaceClassificationConn_rev); }
	::Udm::AClassAssocAttr< OperationClassificationConn, OperationBase> RequiredRights::srcOperationClassificationConn() const { return ::Udm::AClassAssocAttr< OperationClassificationConn, OperationBase>(impl, meta_srcOperationClassificationConn, meta_srcOperationClassificationConn_rev); }
	::Udm::ParentAttr< ::CQML::Package> RequiredRights::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::HasOperations> RequiredRights::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> RequiredRights::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void RequiredRights::Accept(Visitor &v) { v.Visit_RequiredRights(*this); }

	::Uml::Class RequiredRights::meta;
	::Uml::Attribute RequiredRights::meta_combinator;
	::Uml::AssociationRole RequiredRights::meta_srcInterfaceClassificationConn;
	::Uml::AssociationRole RequiredRights::meta_srcInterfaceClassificationConn_rev;
	::Uml::AssociationRole RequiredRights::meta_srcOperationClassificationConn;
	::Uml::AssociationRole RequiredRights::meta_srcOperationClassificationConn_rev;
	::Uml::CompositionParentRole RequiredRights::meta_Package_parent;
	::Uml::CompositionParentRole RequiredRights::meta_HasOperations_parent;

	OnComponentConn::OnComponentConn() {}
	OnComponentConn::OnComponentConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OnComponentConn::OnComponentConn(const OnComponentConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OnComponentConn::OnComponentConn(OnComponentConn &&master) : MgaObject(master) {};

	OnComponentConn OnComponentConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OnComponentConn& OnComponentConn::operator=(OnComponentConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OnComponentConn OnComponentConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OnComponentConn OnComponentConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OnComponentConn OnComponentConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OnComponentConn> OnComponentConn::Instances() { return ::Udm::InstantiatedAttr< OnComponentConn>(impl); }
	OnComponentConn OnComponentConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OnComponentConn> OnComponentConn::Derived() { return ::Udm::DerivedAttr< OnComponentConn>(impl); }
	::Udm::ArchetypeAttr< OnComponentConn> OnComponentConn::Archetype() const { return ::Udm::ArchetypeAttr< OnComponentConn>(impl); }
	::Udm::ParentAttr< ::CQML::Policy> OnComponentConn::Policy_parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, meta_Policy_parent); }
	::Udm::ParentAttr< ::CQML::Policy> OnComponentConn::parent() const { return ::Udm::ParentAttr< ::CQML::Policy>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::ComponentRule> OnComponentConn::srcOnComponentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRule>(impl, meta_srcOnComponentConn_end_); }
	::Udm::AssocEndAttr< ::CQML::ComponentRef> OnComponentConn::dstOnComponentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::ComponentRef>(impl, meta_dstOnComponentConn_end_); }
	void OnComponentConn::Accept(Visitor &v) { v.Visit_OnComponentConn(*this); }

	::Uml::Class OnComponentConn::meta;
	::Uml::CompositionParentRole OnComponentConn::meta_Policy_parent;
	::Uml::AssociationRole OnComponentConn::meta_srcOnComponentConn_end_;
	::Uml::AssociationRole OnComponentConn::meta_dstOnComponentConn_end_;

	Rights::Rights() {}
	Rights::Rights(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Rights::Rights(const Rights &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Rights::Rights(Rights &&master) : MgaObject(master) {};

	Rights Rights::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Rights& Rights::operator=(Rights &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Rights Rights::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Rights Rights::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Rights Rights::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Rights> Rights::Instances() { return ::Udm::InstantiatedAttr< Rights>(impl); }
	Rights Rights::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Rights> Rights::Derived() { return ::Udm::DerivedAttr< Rights>(impl); }
	::Udm::ArchetypeAttr< Rights> Rights::Archetype() const { return ::Udm::ArchetypeAttr< Rights>(impl); }
	::Udm::BooleanAttr Rights::get() const { return ::Udm::BooleanAttr(impl, meta_get); }
	::Udm::StringAttr Rights::family() const { return ::Udm::StringAttr(impl, meta_family); }
	::Udm::BooleanAttr Rights::set() const { return ::Udm::BooleanAttr(impl, meta_set); }
	::Udm::BooleanAttr Rights::use() const { return ::Udm::BooleanAttr(impl, meta_use); }
	::Udm::BooleanAttr Rights::manage() const { return ::Udm::BooleanAttr(impl, meta_manage); }
	::Udm::ParentAttr< ::CQML::MgaObject> Rights::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Rights::meta;
	::Uml::Attribute Rights::meta_get;
	::Uml::Attribute Rights::meta_family;
	::Uml::Attribute Rights::meta_set;
	::Uml::Attribute Rights::meta_use;
	::Uml::Attribute Rights::meta_manage;

	RoleAssignmentConn::RoleAssignmentConn() {}
	RoleAssignmentConn::RoleAssignmentConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RoleAssignmentConn::RoleAssignmentConn(const RoleAssignmentConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RoleAssignmentConn::RoleAssignmentConn(RoleAssignmentConn &&master) : MgaObject(master) {};

	RoleAssignmentConn RoleAssignmentConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RoleAssignmentConn& RoleAssignmentConn::operator=(RoleAssignmentConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RoleAssignmentConn RoleAssignmentConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RoleAssignmentConn RoleAssignmentConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RoleAssignmentConn RoleAssignmentConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RoleAssignmentConn> RoleAssignmentConn::Instances() { return ::Udm::InstantiatedAttr< RoleAssignmentConn>(impl); }
	RoleAssignmentConn RoleAssignmentConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RoleAssignmentConn> RoleAssignmentConn::Derived() { return ::Udm::DerivedAttr< RoleAssignmentConn>(impl); }
	::Udm::ArchetypeAttr< RoleAssignmentConn> RoleAssignmentConn::Archetype() const { return ::Udm::ArchetypeAttr< RoleAssignmentConn>(impl); }
	::Udm::ParentAttr< ::CQML::RBAC> RoleAssignmentConn::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> RoleAssignmentConn::parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Subject> RoleAssignmentConn::srcRoleAssignmentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::Subject>(impl, meta_srcRoleAssignmentConn_end_); }
	::Udm::AssocEndAttr< ::CQML::Role> RoleAssignmentConn::dstRoleAssignmentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::Role>(impl, meta_dstRoleAssignmentConn_end_); }
	void RoleAssignmentConn::Accept(Visitor &v) { v.Visit_RoleAssignmentConn(*this); }

	::Uml::Class RoleAssignmentConn::meta;
	::Uml::CompositionParentRole RoleAssignmentConn::meta_RBAC_parent;
	::Uml::AssociationRole RoleAssignmentConn::meta_srcRoleAssignmentConn_end_;
	::Uml::AssociationRole RoleAssignmentConn::meta_dstRoleAssignmentConn_end_;

	Group::Group() {}
	Group::Group(::Udm::ObjectImpl *impl) : Subject(impl) {}
	Group::Group(const Group &master) : Subject(master) {}

#ifdef UDM_RVALUE
	Group::Group(Group &&master) : Subject(master) {};

	Group Group::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Group& Group::operator=(Group &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Group Group::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Group Group::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Group Group::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Group> Group::Instances() { return ::Udm::InstantiatedAttr< Group>(impl); }
	Group Group::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Group> Group::Derived() { return ::Udm::DerivedAttr< Group>(impl); }
	::Udm::ArchetypeAttr< Group> Group::Archetype() const { return ::Udm::ArchetypeAttr< Group>(impl); }
	::Udm::ChildrenAttr< ::CQML::Subject> Group::Subject_children() const { return ::Udm::ChildrenAttr< ::CQML::Subject>(impl, meta_Subject_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Group::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Group> Group::Group_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Group>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Subject> Group::Subject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Subject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::User> Group::User_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::User>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::MgaObject> Group::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Group::Accept(Visitor &v) { v.Visit_Group(*this); }

	::Uml::Class Group::meta;
	::Uml::CompositionChildRole Group::meta_Subject_children;

	Subject::Subject() {}
	Subject::Subject(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Subject::Subject(const Subject &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Subject::Subject(Subject &&master) : MgaObject(master) {};

	Subject Subject::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Subject& Subject::operator=(Subject &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Subject Subject::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Subject Subject::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Subject Subject::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Subject> Subject::Instances() { return ::Udm::InstantiatedAttr< Subject>(impl); }
	Subject Subject::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Subject> Subject::Derived() { return ::Udm::DerivedAttr< Subject>(impl); }
	::Udm::ArchetypeAttr< Subject> Subject::Archetype() const { return ::Udm::ArchetypeAttr< Subject>(impl); }
	::Udm::StringAttr Subject::principal() const { return ::Udm::StringAttr(impl, meta_principal); }
	::Udm::AClassAssocAttr< RoleAssignmentConn, Role> Subject::dstRoleAssignmentConn() const { return ::Udm::AClassAssocAttr< RoleAssignmentConn, Role>(impl, meta_dstRoleAssignmentConn, meta_dstRoleAssignmentConn_rev); }
	::Udm::ParentAttr< ::CQML::Group> Subject::Group_parent() const { return ::Udm::ParentAttr< ::CQML::Group>(impl, meta_Group_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> Subject::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Subject::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }

	::Uml::Class Subject::meta;
	::Uml::Attribute Subject::meta_principal;
	::Uml::AssociationRole Subject::meta_dstRoleAssignmentConn;
	::Uml::AssociationRole Subject::meta_dstRoleAssignmentConn_rev;
	::Uml::CompositionParentRole Subject::meta_Group_parent;
	::Uml::CompositionParentRole Subject::meta_RBAC_parent;

	Realm::Realm() {}
	Realm::Realm(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Realm::Realm(const Realm &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Realm::Realm(Realm &&master) : MgaObject(master) {};

	Realm Realm::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Realm& Realm::operator=(Realm &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Realm Realm::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Realm Realm::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Realm Realm::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Realm> Realm::Instances() { return ::Udm::InstantiatedAttr< Realm>(impl); }
	Realm Realm::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Realm> Realm::Derived() { return ::Udm::DerivedAttr< Realm>(impl); }
	::Udm::ArchetypeAttr< Realm> Realm::Archetype() const { return ::Udm::ArchetypeAttr< Realm>(impl); }
	::Udm::ChildrenAttr< ::CQML::Role> Realm::Role_children() const { return ::Udm::ChildrenAttr< ::CQML::Role>(impl, meta_Role_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Realm::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Role> Realm::Role_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Role>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::SecurityDomain> Realm::SecurityDomain_parent() const { return ::Udm::ParentAttr< ::CQML::SecurityDomain>(impl, meta_SecurityDomain_parent); }
	::Udm::ParentAttr< ::CQML::SecurityDomain> Realm::parent() const { return ::Udm::ParentAttr< ::CQML::SecurityDomain>(impl, ::Udm::NULLPARENTROLE); }
	void Realm::Accept(Visitor &v) { v.Visit_Realm(*this); }

	::Uml::Class Realm::meta;
	::Uml::CompositionChildRole Realm::meta_Role_children;
	::Uml::CompositionParentRole Realm::meta_SecurityDomain_parent;

	SecurityDomain::SecurityDomain() {}
	SecurityDomain::SecurityDomain(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	SecurityDomain::SecurityDomain(const SecurityDomain &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	SecurityDomain::SecurityDomain(SecurityDomain &&master) : MgaObject(master) {};

	SecurityDomain SecurityDomain::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	SecurityDomain& SecurityDomain::operator=(SecurityDomain &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	SecurityDomain SecurityDomain::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	SecurityDomain SecurityDomain::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	SecurityDomain SecurityDomain::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< SecurityDomain> SecurityDomain::Instances() { return ::Udm::InstantiatedAttr< SecurityDomain>(impl); }
	SecurityDomain SecurityDomain::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< SecurityDomain> SecurityDomain::Derived() { return ::Udm::DerivedAttr< SecurityDomain>(impl); }
	::Udm::ArchetypeAttr< SecurityDomain> SecurityDomain::Archetype() const { return ::Udm::ArchetypeAttr< SecurityDomain>(impl); }
	::Udm::ChildrenAttr< ::CQML::Realm> SecurityDomain::Realm_children() const { return ::Udm::ChildrenAttr< ::CQML::Realm>(impl, meta_Realm_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> SecurityDomain::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Realm> SecurityDomain::Realm_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Realm>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RBAC> SecurityDomain::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> SecurityDomain::parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, ::Udm::NULLPARENTROLE); }
	void SecurityDomain::Accept(Visitor &v) { v.Visit_SecurityDomain(*this); }

	::Uml::Class SecurityDomain::meta;
	::Uml::CompositionChildRole SecurityDomain::meta_Realm_children;
	::Uml::CompositionParentRole SecurityDomain::meta_RBAC_parent;

	User::User() {}
	User::User(::Udm::ObjectImpl *impl) : Subject(impl) {}
	User::User(const User &master) : Subject(master) {}

#ifdef UDM_RVALUE
	User::User(User &&master) : Subject(master) {};

	User User::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	User& User::operator=(User &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	User User::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	User User::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	User User::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< User> User::Instances() { return ::Udm::InstantiatedAttr< User>(impl); }
	User User::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< User> User::Derived() { return ::Udm::DerivedAttr< User>(impl); }
	::Udm::ArchetypeAttr< User> User::Archetype() const { return ::Udm::ArchetypeAttr< User>(impl); }
	::Udm::ParentAttr< ::CQML::MgaObject> User::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void User::Accept(Visitor &v) { v.Visit_User(*this); }

	::Uml::Class User::meta;

	InterfaceClassificationConn::InterfaceClassificationConn() {}
	InterfaceClassificationConn::InterfaceClassificationConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	InterfaceClassificationConn::InterfaceClassificationConn(const InterfaceClassificationConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	InterfaceClassificationConn::InterfaceClassificationConn(InterfaceClassificationConn &&master) : MgaObject(master) {};

	InterfaceClassificationConn InterfaceClassificationConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InterfaceClassificationConn& InterfaceClassificationConn::operator=(InterfaceClassificationConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InterfaceClassificationConn InterfaceClassificationConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InterfaceClassificationConn InterfaceClassificationConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InterfaceClassificationConn InterfaceClassificationConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InterfaceClassificationConn> InterfaceClassificationConn::Instances() { return ::Udm::InstantiatedAttr< InterfaceClassificationConn>(impl); }
	InterfaceClassificationConn InterfaceClassificationConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InterfaceClassificationConn> InterfaceClassificationConn::Derived() { return ::Udm::DerivedAttr< InterfaceClassificationConn>(impl); }
	::Udm::ArchetypeAttr< InterfaceClassificationConn> InterfaceClassificationConn::Archetype() const { return ::Udm::ArchetypeAttr< InterfaceClassificationConn>(impl); }
	::Udm::ParentAttr< ::CQML::Package> InterfaceClassificationConn::Package_parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, meta_Package_parent); }
	::Udm::ParentAttr< ::CQML::Package> InterfaceClassificationConn::parent() const { return ::Udm::ParentAttr< ::CQML::Package>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Object> InterfaceClassificationConn::srcInterfaceClassificationConn_end() const { return ::Udm::AssocEndAttr< ::CQML::Object>(impl, meta_srcInterfaceClassificationConn_end_); }
	::Udm::AssocEndAttr< ::CQML::RequiredRights> InterfaceClassificationConn::dstInterfaceClassificationConn_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRights>(impl, meta_dstInterfaceClassificationConn_end_); }
	void InterfaceClassificationConn::Accept(Visitor &v) { v.Visit_InterfaceClassificationConn(*this); }

	::Uml::Class InterfaceClassificationConn::meta;
	::Uml::CompositionParentRole InterfaceClassificationConn::meta_Package_parent;
	::Uml::AssociationRole InterfaceClassificationConn::meta_srcInterfaceClassificationConn_end_;
	::Uml::AssociationRole InterfaceClassificationConn::meta_dstInterfaceClassificationConn_end_;

	OperationClassificationConn::OperationClassificationConn() {}
	OperationClassificationConn::OperationClassificationConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	OperationClassificationConn::OperationClassificationConn(const OperationClassificationConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	OperationClassificationConn::OperationClassificationConn(OperationClassificationConn &&master) : MgaObject(master) {};

	OperationClassificationConn OperationClassificationConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	OperationClassificationConn& OperationClassificationConn::operator=(OperationClassificationConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	OperationClassificationConn OperationClassificationConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	OperationClassificationConn OperationClassificationConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	OperationClassificationConn OperationClassificationConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< OperationClassificationConn> OperationClassificationConn::Instances() { return ::Udm::InstantiatedAttr< OperationClassificationConn>(impl); }
	OperationClassificationConn OperationClassificationConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< OperationClassificationConn> OperationClassificationConn::Derived() { return ::Udm::DerivedAttr< OperationClassificationConn>(impl); }
	::Udm::ArchetypeAttr< OperationClassificationConn> OperationClassificationConn::Archetype() const { return ::Udm::ArchetypeAttr< OperationClassificationConn>(impl); }
	::Udm::ParentAttr< ::CQML::HasOperations> OperationClassificationConn::HasOperations_parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, meta_HasOperations_parent); }
	::Udm::ParentAttr< ::CQML::HasOperations> OperationClassificationConn::parent() const { return ::Udm::ParentAttr< ::CQML::HasOperations>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::OperationBase> OperationClassificationConn::srcOperationClassificationConn_end() const { return ::Udm::AssocEndAttr< ::CQML::OperationBase>(impl, meta_srcOperationClassificationConn_end_); }
	::Udm::AssocEndAttr< ::CQML::RequiredRights> OperationClassificationConn::dstOperationClassificationConn_end() const { return ::Udm::AssocEndAttr< ::CQML::RequiredRights>(impl, meta_dstOperationClassificationConn_end_); }
	void OperationClassificationConn::Accept(Visitor &v) { v.Visit_OperationClassificationConn(*this); }

	::Uml::Class OperationClassificationConn::meta;
	::Uml::CompositionParentRole OperationClassificationConn::meta_HasOperations_parent;
	::Uml::AssociationRole OperationClassificationConn::meta_srcOperationClassificationConn_end_;
	::Uml::AssociationRole OperationClassificationConn::meta_dstOperationClassificationConn_end_;

	RightsAssignmentConn::RightsAssignmentConn() {}
	RightsAssignmentConn::RightsAssignmentConn(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RightsAssignmentConn::RightsAssignmentConn(const RightsAssignmentConn &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RightsAssignmentConn::RightsAssignmentConn(RightsAssignmentConn &&master) : MgaObject(master) {};

	RightsAssignmentConn RightsAssignmentConn::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RightsAssignmentConn& RightsAssignmentConn::operator=(RightsAssignmentConn &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RightsAssignmentConn RightsAssignmentConn::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RightsAssignmentConn RightsAssignmentConn::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RightsAssignmentConn RightsAssignmentConn::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RightsAssignmentConn> RightsAssignmentConn::Instances() { return ::Udm::InstantiatedAttr< RightsAssignmentConn>(impl); }
	RightsAssignmentConn RightsAssignmentConn::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RightsAssignmentConn> RightsAssignmentConn::Derived() { return ::Udm::DerivedAttr< RightsAssignmentConn>(impl); }
	::Udm::ArchetypeAttr< RightsAssignmentConn> RightsAssignmentConn::Archetype() const { return ::Udm::ArchetypeAttr< RightsAssignmentConn>(impl); }
	::Udm::ParentAttr< ::CQML::RBAC> RightsAssignmentConn::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> RightsAssignmentConn::parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, ::Udm::NULLPARENTROLE); }
	::Udm::AssocEndAttr< ::CQML::Role> RightsAssignmentConn::srcRightsAssignmentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::Role>(impl, meta_srcRightsAssignmentConn_end_); }
	::Udm::AssocEndAttr< ::CQML::GrantedRights> RightsAssignmentConn::dstRightsAssignmentConn_end() const { return ::Udm::AssocEndAttr< ::CQML::GrantedRights>(impl, meta_dstRightsAssignmentConn_end_); }
	void RightsAssignmentConn::Accept(Visitor &v) { v.Visit_RightsAssignmentConn(*this); }

	::Uml::Class RightsAssignmentConn::meta;
	::Uml::CompositionParentRole RightsAssignmentConn::meta_RBAC_parent;
	::Uml::AssociationRole RightsAssignmentConn::meta_srcRightsAssignmentConn_end_;
	::Uml::AssociationRole RightsAssignmentConn::meta_dstRightsAssignmentConn_end_;

	GrantedRights::GrantedRights() {}
	GrantedRights::GrantedRights(::Udm::ObjectImpl *impl) : Rights(impl), MgaObject(impl) {}
	GrantedRights::GrantedRights(const GrantedRights &master) : Rights(master), MgaObject(master) {}

#ifdef UDM_RVALUE
	GrantedRights::GrantedRights(GrantedRights &&master) : Rights(master), MgaObject(master) {};

	GrantedRights GrantedRights::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	GrantedRights& GrantedRights::operator=(GrantedRights &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	GrantedRights GrantedRights::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	GrantedRights GrantedRights::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	GrantedRights GrantedRights::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< GrantedRights> GrantedRights::Instances() { return ::Udm::InstantiatedAttr< GrantedRights>(impl); }
	GrantedRights GrantedRights::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< GrantedRights> GrantedRights::Derived() { return ::Udm::DerivedAttr< GrantedRights>(impl); }
	::Udm::ArchetypeAttr< GrantedRights> GrantedRights::Archetype() const { return ::Udm::ArchetypeAttr< GrantedRights>(impl); }
	::Udm::AClassAssocAttr< RightsAssignmentConn, Role> GrantedRights::srcRightsAssignmentConn() const { return ::Udm::AClassAssocAttr< RightsAssignmentConn, Role>(impl, meta_srcRightsAssignmentConn, meta_srcRightsAssignmentConn_rev); }
	::Udm::ParentAttr< ::CQML::RBAC> GrantedRights::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> GrantedRights::parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, ::Udm::NULLPARENTROLE); }
	void GrantedRights::Accept(Visitor &v) { v.Visit_GrantedRights(*this); }

	::Uml::Class GrantedRights::meta;
	::Uml::AssociationRole GrantedRights::meta_srcRightsAssignmentConn;
	::Uml::AssociationRole GrantedRights::meta_srcRightsAssignmentConn_rev;
	::Uml::CompositionParentRole GrantedRights::meta_RBAC_parent;

	RBAC::RBAC() {}
	RBAC::RBAC(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	RBAC::RBAC(const RBAC &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	RBAC::RBAC(RBAC &&master) : MgaObject(master) {};

	RBAC RBAC::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RBAC& RBAC::operator=(RBAC &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RBAC RBAC::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RBAC RBAC::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RBAC RBAC::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RBAC> RBAC::Instances() { return ::Udm::InstantiatedAttr< RBAC>(impl); }
	RBAC RBAC::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RBAC> RBAC::Derived() { return ::Udm::DerivedAttr< RBAC>(impl); }
	::Udm::ArchetypeAttr< RBAC> RBAC::Archetype() const { return ::Udm::ArchetypeAttr< RBAC>(impl); }
	::Udm::ChildrenAttr< ::CQML::Role> RBAC::Role_children() const { return ::Udm::ChildrenAttr< ::CQML::Role>(impl, meta_Role_children); }
	::Udm::ChildrenAttr< ::CQML::RightsAssignmentConn> RBAC::RightsAssignmentConn_children() const { return ::Udm::ChildrenAttr< ::CQML::RightsAssignmentConn>(impl, meta_RightsAssignmentConn_children); }
	::Udm::ChildrenAttr< ::CQML::RoleAssignmentConn> RBAC::RoleAssignmentConn_children() const { return ::Udm::ChildrenAttr< ::CQML::RoleAssignmentConn>(impl, meta_RoleAssignmentConn_children); }
	::Udm::ChildrenAttr< ::CQML::Subject> RBAC::Subject_children() const { return ::Udm::ChildrenAttr< ::CQML::Subject>(impl, meta_Subject_children); }
	::Udm::ChildrenAttr< ::CQML::GrantedRights> RBAC::GrantedRights_children() const { return ::Udm::ChildrenAttr< ::CQML::GrantedRights>(impl, meta_GrantedRights_children); }
	::Udm::ChildrenAttr< ::CQML::SecurityDomain> RBAC::SecurityDomain_children() const { return ::Udm::ChildrenAttr< ::CQML::SecurityDomain>(impl, meta_SecurityDomain_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RBAC::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Rights> RBAC::Rights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Rights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RoleAssignmentConn> RBAC::RoleAssignmentConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RoleAssignmentConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Group> RBAC::Group_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Group>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Subject> RBAC::Subject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Subject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::SecurityDomain> RBAC::SecurityDomain_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::SecurityDomain>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::User> RBAC::User_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::User>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RightsAssignmentConn> RBAC::RightsAssignmentConn_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RightsAssignmentConn>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GrantedRights> RBAC::GrantedRights_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GrantedRights>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Role> RBAC::Role_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Role>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::Security> RBAC::Security_parent() const { return ::Udm::ParentAttr< ::CQML::Security>(impl, meta_Security_parent); }
	::Udm::ParentAttr< ::CQML::Security> RBAC::parent() const { return ::Udm::ParentAttr< ::CQML::Security>(impl, ::Udm::NULLPARENTROLE); }
	void RBAC::Accept(Visitor &v) { v.Visit_RBAC(*this); }

	::Uml::Class RBAC::meta;
	::Uml::CompositionChildRole RBAC::meta_Role_children;
	::Uml::CompositionChildRole RBAC::meta_RightsAssignmentConn_children;
	::Uml::CompositionChildRole RBAC::meta_RoleAssignmentConn_children;
	::Uml::CompositionChildRole RBAC::meta_Subject_children;
	::Uml::CompositionChildRole RBAC::meta_GrantedRights_children;
	::Uml::CompositionChildRole RBAC::meta_SecurityDomain_children;
	::Uml::CompositionParentRole RBAC::meta_Security_parent;

	Security::Security() {}
	Security::Security(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Security::Security(const Security &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Security::Security(Security &&master) : MgaObject(master) {};

	Security Security::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Security& Security::operator=(Security &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Security Security::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Security Security::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Security Security::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Security> Security::Instances() { return ::Udm::InstantiatedAttr< Security>(impl); }
	Security Security::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Security> Security::Derived() { return ::Udm::DerivedAttr< Security>(impl); }
	::Udm::ArchetypeAttr< Security> Security::Archetype() const { return ::Udm::ArchetypeAttr< Security>(impl); }
	::Udm::ChildrenAttr< ::CQML::RBAC> Security::RBAC_children() const { return ::Udm::ChildrenAttr< ::CQML::RBAC>(impl, meta_RBAC_children); }
	::Udm::ChildrenAttr< ::CQML::PolicySet> Security::PolicySet_children() const { return ::Udm::ChildrenAttr< ::CQML::PolicySet>(impl, meta_PolicySet_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Security::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PolicySet> Security::PolicySet_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PolicySet>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RBAC> Security::RBAC_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RBAC>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> Security::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> Security::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void Security::Accept(Visitor &v) { v.Visit_Security(*this); }

	::Uml::Class Security::meta;
	::Uml::CompositionChildRole Security::meta_RBAC_children;
	::Uml::CompositionChildRole Security::meta_PolicySet_children;
	::Uml::CompositionParentRole Security::meta_RootFolder_parent;

	Role::Role() {}
	Role::Role(::Udm::ObjectImpl *impl) : MgaObject(impl) {}
	Role::Role(const Role &master) : MgaObject(master) {}

#ifdef UDM_RVALUE
	Role::Role(Role &&master) : MgaObject(master) {};

	Role Role::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Role& Role::operator=(Role &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Role Role::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Role Role::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Role Role::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Role> Role::Instances() { return ::Udm::InstantiatedAttr< Role>(impl); }
	Role Role::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Role> Role::Derived() { return ::Udm::DerivedAttr< Role>(impl); }
	::Udm::ArchetypeAttr< Role> Role::Archetype() const { return ::Udm::ArchetypeAttr< Role>(impl); }
	::Udm::AssocAttr< InitiatorRoleRef> Role::referedbyInitiatorRoleRef() const { return ::Udm::AssocAttr< InitiatorRoleRef>(impl, meta_referedbyInitiatorRoleRef); }
	::Udm::AClassAssocAttr< RoleAssignmentConn, Subject> Role::srcRoleAssignmentConn() const { return ::Udm::AClassAssocAttr< RoleAssignmentConn, Subject>(impl, meta_srcRoleAssignmentConn, meta_srcRoleAssignmentConn_rev); }
	::Udm::AClassPointerAttr< RightsAssignmentConn, GrantedRights> Role::dstRightsAssignmentConn() const { return ::Udm::AClassPointerAttr< RightsAssignmentConn, GrantedRights>(impl, meta_dstRightsAssignmentConn, meta_dstRightsAssignmentConn_rev); }
	::Udm::ParentAttr< ::CQML::Realm> Role::Realm_parent() const { return ::Udm::ParentAttr< ::CQML::Realm>(impl, meta_Realm_parent); }
	::Udm::ParentAttr< ::CQML::RBAC> Role::RBAC_parent() const { return ::Udm::ParentAttr< ::CQML::RBAC>(impl, meta_RBAC_parent); }
	::Udm::ParentAttr< ::CQML::MgaObject> Role::parent() const { return ::Udm::ParentAttr< ::CQML::MgaObject>(impl, ::Udm::NULLPARENTROLE); }
	void Role::Accept(Visitor &v) { v.Visit_Role(*this); }

	::Uml::Class Role::meta;
	::Uml::AssociationRole Role::meta_referedbyInitiatorRoleRef;
	::Uml::AssociationRole Role::meta_srcRoleAssignmentConn;
	::Uml::AssociationRole Role::meta_srcRoleAssignmentConn_rev;
	::Uml::AssociationRole Role::meta_dstRightsAssignmentConn;
	::Uml::AssociationRole Role::meta_dstRightsAssignmentConn_rev;
	::Uml::CompositionParentRole Role::meta_Realm_parent;
	::Uml::CompositionParentRole Role::meta_RBAC_parent;

	ComponentBuild::ComponentBuild() {}
	ComponentBuild::ComponentBuild(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentBuild::ComponentBuild(const ComponentBuild &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentBuild::ComponentBuild(ComponentBuild &&master) : UDM_OBJECT(master) {};

	ComponentBuild ComponentBuild::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentBuild& ComponentBuild::operator=(ComponentBuild &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentBuild ComponentBuild::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentBuild ComponentBuild::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentBuild ComponentBuild::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentBuild> ComponentBuild::Instances() { return ::Udm::InstantiatedAttr< ComponentBuild>(impl); }
	ComponentBuild ComponentBuild::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentBuild> ComponentBuild::Derived() { return ::Udm::DerivedAttr< ComponentBuild>(impl); }
	::Udm::ArchetypeAttr< ComponentBuild> ComponentBuild::Archetype() const { return ::Udm::ArchetypeAttr< ComponentBuild>(impl); }
	::Udm::StringAttr ComponentBuild::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::MPC> ComponentBuild::MPC_children() const { return ::Udm::ChildrenAttr< ::CQML::MPC>(impl, meta_MPC_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentBuild::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MPC> ComponentBuild::MPC_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MPC>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentBuild::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentBuild::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentBuild::Accept(Visitor &v) { v.Visit_ComponentBuild(*this); }

	::Uml::Class ComponentBuild::meta;
	::Uml::Attribute ComponentBuild::meta_name;
	::Uml::CompositionChildRole ComponentBuild::meta_MPC_children;
	::Uml::CompositionParentRole ComponentBuild::meta_RootFolder_parent;

	InterfaceDefinitions::InterfaceDefinitions() {}
	InterfaceDefinitions::InterfaceDefinitions(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	InterfaceDefinitions::InterfaceDefinitions(const InterfaceDefinitions &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	InterfaceDefinitions::InterfaceDefinitions(InterfaceDefinitions &&master) : UDM_OBJECT(master) {};

	InterfaceDefinitions InterfaceDefinitions::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	InterfaceDefinitions& InterfaceDefinitions::operator=(InterfaceDefinitions &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	InterfaceDefinitions InterfaceDefinitions::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	InterfaceDefinitions InterfaceDefinitions::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	InterfaceDefinitions InterfaceDefinitions::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< InterfaceDefinitions> InterfaceDefinitions::Instances() { return ::Udm::InstantiatedAttr< InterfaceDefinitions>(impl); }
	InterfaceDefinitions InterfaceDefinitions::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< InterfaceDefinitions> InterfaceDefinitions::Derived() { return ::Udm::DerivedAttr< InterfaceDefinitions>(impl); }
	::Udm::ArchetypeAttr< InterfaceDefinitions> InterfaceDefinitions::Archetype() const { return ::Udm::ArchetypeAttr< InterfaceDefinitions>(impl); }
	::Udm::StringAttr InterfaceDefinitions::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::File> InterfaceDefinitions::File_children() const { return ::Udm::ChildrenAttr< ::CQML::File>(impl, meta_File_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> InterfaceDefinitions::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Prefixable> InterfaceDefinitions::Prefixable_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Prefixable>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::File> InterfaceDefinitions::File_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::File>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> InterfaceDefinitions::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> InterfaceDefinitions::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void InterfaceDefinitions::Accept(Visitor &v) { v.Visit_InterfaceDefinitions(*this); }

	::Uml::Class InterfaceDefinitions::meta;
	::Uml::Attribute InterfaceDefinitions::meta_name;
	::Uml::CompositionChildRole InterfaceDefinitions::meta_File_children;
	::Uml::CompositionParentRole InterfaceDefinitions::meta_RootFolder_parent;

	PredefinedTypes::PredefinedTypes() {}
	PredefinedTypes::PredefinedTypes(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PredefinedTypes::PredefinedTypes(const PredefinedTypes &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PredefinedTypes::PredefinedTypes(PredefinedTypes &&master) : UDM_OBJECT(master) {};

	PredefinedTypes PredefinedTypes::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PredefinedTypes& PredefinedTypes::operator=(PredefinedTypes &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PredefinedTypes PredefinedTypes::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PredefinedTypes PredefinedTypes::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PredefinedTypes PredefinedTypes::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PredefinedTypes> PredefinedTypes::Instances() { return ::Udm::InstantiatedAttr< PredefinedTypes>(impl); }
	PredefinedTypes PredefinedTypes::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PredefinedTypes> PredefinedTypes::Derived() { return ::Udm::DerivedAttr< PredefinedTypes>(impl); }
	::Udm::ArchetypeAttr< PredefinedTypes> PredefinedTypes::Archetype() const { return ::Udm::ArchetypeAttr< PredefinedTypes>(impl); }
	::Udm::StringAttr PredefinedTypes::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::PredefinedType> PredefinedTypes::PredefinedType_children() const { return ::Udm::ChildrenAttr< ::CQML::PredefinedType>(impl, meta_PredefinedType_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PredefinedTypes::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConstantType> PredefinedTypes::ConstantType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConstantType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PredefinedType> PredefinedTypes::PredefinedType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PredefinedType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::MemberType> PredefinedTypes::MemberType_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MemberType>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Boolean> PredefinedTypes::Boolean_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Boolean>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Byte> PredefinedTypes::Byte_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Byte>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ShortInteger> PredefinedTypes::ShortInteger_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ShortInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::LongInteger> PredefinedTypes::LongInteger_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::LongInteger>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RealNumber> PredefinedTypes::RealNumber_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RealNumber>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::String> PredefinedTypes::String_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::String>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GenericObject> PredefinedTypes::GenericObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GenericObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GenericValueObject> PredefinedTypes::GenericValueObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GenericValueObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::GenericValue> PredefinedTypes::GenericValue_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::GenericValue>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TypeEncoding> PredefinedTypes::TypeEncoding_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TypeEncoding>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TypeKind> PredefinedTypes::TypeKind_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TypeKind>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> PredefinedTypes::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> PredefinedTypes::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PredefinedTypes::Accept(Visitor &v) { v.Visit_PredefinedTypes(*this); }

	::Uml::Class PredefinedTypes::meta;
	::Uml::Attribute PredefinedTypes::meta_name;
	::Uml::CompositionChildRole PredefinedTypes::meta_PredefinedType_children;
	::Uml::CompositionParentRole PredefinedTypes::meta_RootFolder_parent;

	Targets::Targets() {}
	Targets::Targets(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	Targets::Targets(const Targets &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	Targets::Targets(Targets &&master) : UDM_OBJECT(master) {};

	Targets Targets::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	Targets& Targets::operator=(Targets &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	Targets Targets::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	Targets Targets::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	Targets Targets::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< Targets> Targets::Instances() { return ::Udm::InstantiatedAttr< Targets>(impl); }
	Targets Targets::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< Targets> Targets::Derived() { return ::Udm::DerivedAttr< Targets>(impl); }
	::Udm::ArchetypeAttr< Targets> Targets::Archetype() const { return ::Udm::ArchetypeAttr< Targets>(impl); }
	::Udm::StringAttr Targets::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::Domain> Targets::Domain_children() const { return ::Udm::ChildrenAttr< ::CQML::Domain>(impl, meta_Domain_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> Targets::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Domain> Targets::Domain_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Domain>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> Targets::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> Targets::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void Targets::Accept(Visitor &v) { v.Visit_Targets(*this); }

	::Uml::Class Targets::meta;
	::Uml::Attribute Targets::meta_name;
	::Uml::CompositionChildRole Targets::meta_Domain_children;
	::Uml::CompositionParentRole Targets::meta_RootFolder_parent;

	ComponentPackages::ComponentPackages() {}
	ComponentPackages::ComponentPackages(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentPackages::ComponentPackages(const ComponentPackages &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentPackages::ComponentPackages(ComponentPackages &&master) : UDM_OBJECT(master) {};

	ComponentPackages ComponentPackages::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentPackages& ComponentPackages::operator=(ComponentPackages &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentPackages ComponentPackages::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentPackages ComponentPackages::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentPackages ComponentPackages::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentPackages> ComponentPackages::Instances() { return ::Udm::InstantiatedAttr< ComponentPackages>(impl); }
	ComponentPackages ComponentPackages::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentPackages> ComponentPackages::Derived() { return ::Udm::DerivedAttr< ComponentPackages>(impl); }
	::Udm::ArchetypeAttr< ComponentPackages> ComponentPackages::Archetype() const { return ::Udm::ArchetypeAttr< ComponentPackages>(impl); }
	::Udm::StringAttr ComponentPackages::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::PackageContainer> ComponentPackages::PackageContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageContainer>(impl, meta_PackageContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentPackages::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageContainer> ComponentPackages::PackageContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentPackages::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentPackages::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentPackages::Accept(Visitor &v) { v.Visit_ComponentPackages(*this); }

	::Uml::Class ComponentPackages::meta;
	::Uml::Attribute ComponentPackages::meta_name;
	::Uml::CompositionChildRole ComponentPackages::meta_PackageContainer_children;
	::Uml::CompositionParentRole ComponentPackages::meta_RootFolder_parent;

	TopLevelPackages::TopLevelPackages() {}
	TopLevelPackages::TopLevelPackages(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	TopLevelPackages::TopLevelPackages(const TopLevelPackages &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	TopLevelPackages::TopLevelPackages(TopLevelPackages &&master) : UDM_OBJECT(master) {};

	TopLevelPackages TopLevelPackages::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	TopLevelPackages& TopLevelPackages::operator=(TopLevelPackages &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	TopLevelPackages TopLevelPackages::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	TopLevelPackages TopLevelPackages::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	TopLevelPackages TopLevelPackages::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< TopLevelPackages> TopLevelPackages::Instances() { return ::Udm::InstantiatedAttr< TopLevelPackages>(impl); }
	TopLevelPackages TopLevelPackages::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< TopLevelPackages> TopLevelPackages::Derived() { return ::Udm::DerivedAttr< TopLevelPackages>(impl); }
	::Udm::ArchetypeAttr< TopLevelPackages> TopLevelPackages::Archetype() const { return ::Udm::ArchetypeAttr< TopLevelPackages>(impl); }
	::Udm::StringAttr TopLevelPackages::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::TopLevelPackageContainer> TopLevelPackages::TopLevelPackageContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelPackageContainer>(impl, meta_TopLevelPackageContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> TopLevelPackages::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TopLevelPackageContainer> TopLevelPackages::TopLevelPackageContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelPackageContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> TopLevelPackages::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> TopLevelPackages::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void TopLevelPackages::Accept(Visitor &v) { v.Visit_TopLevelPackages(*this); }

	::Uml::Class TopLevelPackages::meta;
	::Uml::Attribute TopLevelPackages::meta_name;
	::Uml::CompositionChildRole TopLevelPackages::meta_TopLevelPackageContainer_children;
	::Uml::CompositionParentRole TopLevelPackages::meta_RootFolder_parent;

	ComponentTypes::ComponentTypes() {}
	ComponentTypes::ComponentTypes(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentTypes::ComponentTypes(const ComponentTypes &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentTypes::ComponentTypes(ComponentTypes &&master) : UDM_OBJECT(master) {};

	ComponentTypes ComponentTypes::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentTypes& ComponentTypes::operator=(ComponentTypes &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentTypes ComponentTypes::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentTypes ComponentTypes::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentTypes ComponentTypes::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentTypes> ComponentTypes::Instances() { return ::Udm::InstantiatedAttr< ComponentTypes>(impl); }
	ComponentTypes ComponentTypes::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentTypes> ComponentTypes::Derived() { return ::Udm::DerivedAttr< ComponentTypes>(impl); }
	::Udm::ArchetypeAttr< ComponentTypes> ComponentTypes::Archetype() const { return ::Udm::ArchetypeAttr< ComponentTypes>(impl); }
	::Udm::StringAttr ComponentTypes::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::ComponentContainer> ComponentTypes::ComponentContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentContainer>(impl, meta_ComponentContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentTypes::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentContainer> ComponentTypes::ComponentContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentTypes::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentTypes::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentTypes::Accept(Visitor &v) { v.Visit_ComponentTypes(*this); }

	::Uml::Class ComponentTypes::meta;
	::Uml::Attribute ComponentTypes::meta_name;
	::Uml::CompositionChildRole ComponentTypes::meta_ComponentContainer_children;
	::Uml::CompositionParentRole ComponentTypes::meta_RootFolder_parent;

	ImplementationArtifacts::ImplementationArtifacts() {}
	ImplementationArtifacts::ImplementationArtifacts(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ImplementationArtifacts::ImplementationArtifacts(const ImplementationArtifacts &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ImplementationArtifacts::ImplementationArtifacts(ImplementationArtifacts &&master) : UDM_OBJECT(master) {};

	ImplementationArtifacts ImplementationArtifacts::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ImplementationArtifacts& ImplementationArtifacts::operator=(ImplementationArtifacts &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ImplementationArtifacts ImplementationArtifacts::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ImplementationArtifacts ImplementationArtifacts::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ImplementationArtifacts ImplementationArtifacts::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ImplementationArtifacts> ImplementationArtifacts::Instances() { return ::Udm::InstantiatedAttr< ImplementationArtifacts>(impl); }
	ImplementationArtifacts ImplementationArtifacts::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ImplementationArtifacts> ImplementationArtifacts::Derived() { return ::Udm::DerivedAttr< ImplementationArtifacts>(impl); }
	::Udm::ArchetypeAttr< ImplementationArtifacts> ImplementationArtifacts::Archetype() const { return ::Udm::ArchetypeAttr< ImplementationArtifacts>(impl); }
	::Udm::StringAttr ImplementationArtifacts::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::ArtifactContainer> ImplementationArtifacts::ArtifactContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactContainer>(impl, meta_ArtifactContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ImplementationArtifacts::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ArtifactContainer> ImplementationArtifacts::ArtifactContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ArtifactContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ImplementationArtifacts::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ImplementationArtifacts::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ImplementationArtifacts::Accept(Visitor &v) { v.Visit_ImplementationArtifacts(*this); }

	::Uml::Class ImplementationArtifacts::meta;
	::Uml::Attribute ImplementationArtifacts::meta_name;
	::Uml::CompositionChildRole ImplementationArtifacts::meta_ArtifactContainer_children;
	::Uml::CompositionParentRole ImplementationArtifacts::meta_RootFolder_parent;

	PackageConfigurations::PackageConfigurations() {}
	PackageConfigurations::PackageConfigurations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PackageConfigurations::PackageConfigurations(const PackageConfigurations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PackageConfigurations::PackageConfigurations(PackageConfigurations &&master) : UDM_OBJECT(master) {};

	PackageConfigurations PackageConfigurations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PackageConfigurations& PackageConfigurations::operator=(PackageConfigurations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PackageConfigurations PackageConfigurations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PackageConfigurations PackageConfigurations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PackageConfigurations PackageConfigurations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PackageConfigurations> PackageConfigurations::Instances() { return ::Udm::InstantiatedAttr< PackageConfigurations>(impl); }
	PackageConfigurations PackageConfigurations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PackageConfigurations> PackageConfigurations::Derived() { return ::Udm::DerivedAttr< PackageConfigurations>(impl); }
	::Udm::ArchetypeAttr< PackageConfigurations> PackageConfigurations::Archetype() const { return ::Udm::ArchetypeAttr< PackageConfigurations>(impl); }
	::Udm::StringAttr PackageConfigurations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigurationContainer> PackageConfigurations::PackageConfigurationContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigurationContainer>(impl, meta_PackageConfigurationContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PackageConfigurations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigurationContainer> PackageConfigurations::PackageConfigurationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigurationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> PackageConfigurations::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> PackageConfigurations::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PackageConfigurations::Accept(Visitor &v) { v.Visit_PackageConfigurations(*this); }

	::Uml::Class PackageConfigurations::meta;
	::Uml::Attribute PackageConfigurations::meta_name;
	::Uml::CompositionChildRole PackageConfigurations::meta_PackageConfigurationContainer_children;
	::Uml::CompositionParentRole PackageConfigurations::meta_RootFolder_parent;

	ComponentImplementations::ComponentImplementations() {}
	ComponentImplementations::ComponentImplementations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentImplementations::ComponentImplementations(const ComponentImplementations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentImplementations::ComponentImplementations(ComponentImplementations &&master) : UDM_OBJECT(master) {};

	ComponentImplementations ComponentImplementations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentImplementations& ComponentImplementations::operator=(ComponentImplementations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentImplementations ComponentImplementations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentImplementations ComponentImplementations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentImplementations ComponentImplementations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentImplementations> ComponentImplementations::Instances() { return ::Udm::InstantiatedAttr< ComponentImplementations>(impl); }
	ComponentImplementations ComponentImplementations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentImplementations> ComponentImplementations::Derived() { return ::Udm::DerivedAttr< ComponentImplementations>(impl); }
	::Udm::ArchetypeAttr< ComponentImplementations> ComponentImplementations::Archetype() const { return ::Udm::ArchetypeAttr< ComponentImplementations>(impl); }
	::Udm::StringAttr ComponentImplementations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationContainer> ComponentImplementations::ComponentImplementationContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationContainer>(impl, meta_ComponentImplementationContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentImplementations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementationContainer> ComponentImplementations::ComponentImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationContainer> ComponentImplementations::ImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentImplementations::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentImplementations::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentImplementations::Accept(Visitor &v) { v.Visit_ComponentImplementations(*this); }

	::Uml::Class ComponentImplementations::meta;
	::Uml::Attribute ComponentImplementations::meta_name;
	::Uml::CompositionChildRole ComponentImplementations::meta_ComponentImplementationContainer_children;
	::Uml::CompositionParentRole ComponentImplementations::meta_RootFolder_parent;

	DeploymentPlans::DeploymentPlans() {}
	DeploymentPlans::DeploymentPlans(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	DeploymentPlans::DeploymentPlans(const DeploymentPlans &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	DeploymentPlans::DeploymentPlans(DeploymentPlans &&master) : UDM_OBJECT(master) {};

	DeploymentPlans DeploymentPlans::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	DeploymentPlans& DeploymentPlans::operator=(DeploymentPlans &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	DeploymentPlans DeploymentPlans::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	DeploymentPlans DeploymentPlans::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	DeploymentPlans DeploymentPlans::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< DeploymentPlans> DeploymentPlans::Instances() { return ::Udm::InstantiatedAttr< DeploymentPlans>(impl); }
	DeploymentPlans DeploymentPlans::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< DeploymentPlans> DeploymentPlans::Derived() { return ::Udm::DerivedAttr< DeploymentPlans>(impl); }
	::Udm::ArchetypeAttr< DeploymentPlans> DeploymentPlans::Archetype() const { return ::Udm::ArchetypeAttr< DeploymentPlans>(impl); }
	::Udm::StringAttr DeploymentPlans::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlan> DeploymentPlans::DeploymentPlan_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlan>(impl, meta_DeploymentPlan_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> DeploymentPlans::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlan> DeploymentPlans::DeploymentPlan_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlan>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> DeploymentPlans::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> DeploymentPlans::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void DeploymentPlans::Accept(Visitor &v) { v.Visit_DeploymentPlans(*this); }

	::Uml::Class DeploymentPlans::meta;
	::Uml::Attribute DeploymentPlans::meta_name;
	::Uml::CompositionChildRole DeploymentPlans::meta_DeploymentPlan_children;
	::Uml::CompositionParentRole DeploymentPlans::meta_RootFolder_parent;

	ComponentAnalyses::ComponentAnalyses() {}
	ComponentAnalyses::ComponentAnalyses(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentAnalyses::ComponentAnalyses(const ComponentAnalyses &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentAnalyses::ComponentAnalyses(ComponentAnalyses &&master) : UDM_OBJECT(master) {};

	ComponentAnalyses ComponentAnalyses::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentAnalyses& ComponentAnalyses::operator=(ComponentAnalyses &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentAnalyses ComponentAnalyses::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentAnalyses ComponentAnalyses::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentAnalyses ComponentAnalyses::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentAnalyses> ComponentAnalyses::Instances() { return ::Udm::InstantiatedAttr< ComponentAnalyses>(impl); }
	ComponentAnalyses ComponentAnalyses::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentAnalyses> ComponentAnalyses::Derived() { return ::Udm::DerivedAttr< ComponentAnalyses>(impl); }
	::Udm::ArchetypeAttr< ComponentAnalyses> ComponentAnalyses::Archetype() const { return ::Udm::ArchetypeAttr< ComponentAnalyses>(impl); }
	::Udm::StringAttr ComponentAnalyses::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkAnalysis> ComponentAnalyses::BenchmarkAnalysis_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkAnalysis>(impl, meta_BenchmarkAnalysis_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentAnalyses::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::BenchmarkAnalysis> ComponentAnalyses::BenchmarkAnalysis_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::BenchmarkAnalysis>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentAnalyses::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentAnalyses::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentAnalyses::Accept(Visitor &v) { v.Visit_ComponentAnalyses(*this); }

	::Uml::Class ComponentAnalyses::meta;
	::Uml::Attribute ComponentAnalyses::meta_name;
	::Uml::CompositionChildRole ComponentAnalyses::meta_BenchmarkAnalysis_children;
	::Uml::CompositionParentRole ComponentAnalyses::meta_RootFolder_parent;

	PathDiagrams::PathDiagrams() {}
	PathDiagrams::PathDiagrams(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	PathDiagrams::PathDiagrams(const PathDiagrams &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	PathDiagrams::PathDiagrams(PathDiagrams &&master) : UDM_OBJECT(master) {};

	PathDiagrams PathDiagrams::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	PathDiagrams& PathDiagrams::operator=(PathDiagrams &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	PathDiagrams PathDiagrams::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	PathDiagrams PathDiagrams::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	PathDiagrams PathDiagrams::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< PathDiagrams> PathDiagrams::Instances() { return ::Udm::InstantiatedAttr< PathDiagrams>(impl); }
	PathDiagrams PathDiagrams::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< PathDiagrams> PathDiagrams::Derived() { return ::Udm::DerivedAttr< PathDiagrams>(impl); }
	::Udm::ArchetypeAttr< PathDiagrams> PathDiagrams::Archetype() const { return ::Udm::ArchetypeAttr< PathDiagrams>(impl); }
	::Udm::StringAttr PathDiagrams::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::Paths> PathDiagrams::Paths_children() const { return ::Udm::ChildrenAttr< ::CQML::Paths>(impl, meta_Paths_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> PathDiagrams::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Paths> PathDiagrams::Paths_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Paths>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> PathDiagrams::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> PathDiagrams::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void PathDiagrams::Accept(Visitor &v) { v.Visit_PathDiagrams(*this); }

	::Uml::Class PathDiagrams::meta;
	::Uml::Attribute PathDiagrams::meta_name;
	::Uml::CompositionChildRole PathDiagrams::meta_Paths_children;
	::Uml::CompositionParentRole PathDiagrams::meta_RootFolder_parent;

	ComponentFactoryImplementations::ComponentFactoryImplementations() {}
	ComponentFactoryImplementations::ComponentFactoryImplementations(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	ComponentFactoryImplementations::ComponentFactoryImplementations(const ComponentFactoryImplementations &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	ComponentFactoryImplementations::ComponentFactoryImplementations(ComponentFactoryImplementations &&master) : UDM_OBJECT(master) {};

	ComponentFactoryImplementations ComponentFactoryImplementations::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	ComponentFactoryImplementations& ComponentFactoryImplementations::operator=(ComponentFactoryImplementations &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	ComponentFactoryImplementations ComponentFactoryImplementations::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	ComponentFactoryImplementations ComponentFactoryImplementations::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	ComponentFactoryImplementations ComponentFactoryImplementations::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Instances() { return ::Udm::InstantiatedAttr< ComponentFactoryImplementations>(impl); }
	ComponentFactoryImplementations ComponentFactoryImplementations::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Derived() { return ::Udm::DerivedAttr< ComponentFactoryImplementations>(impl); }
	::Udm::ArchetypeAttr< ComponentFactoryImplementations> ComponentFactoryImplementations::Archetype() const { return ::Udm::ArchetypeAttr< ComponentFactoryImplementations>(impl); }
	::Udm::StringAttr ComponentFactoryImplementations::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementationContainer> ComponentFactoryImplementations::ComponentFactoryImplementationContainer_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementationContainer>(impl, meta_ComponentFactoryImplementationContainer_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> ComponentFactoryImplementations::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationContainer> ComponentFactoryImplementations::ImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementationContainer> ComponentFactoryImplementations::ComponentFactoryImplementationContainer_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementationContainer>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentFactoryImplementations::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> ComponentFactoryImplementations::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void ComponentFactoryImplementations::Accept(Visitor &v) { v.Visit_ComponentFactoryImplementations(*this); }

	::Uml::Class ComponentFactoryImplementations::meta;
	::Uml::Attribute ComponentFactoryImplementations::meta_name;
	::Uml::CompositionChildRole ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children;
	::Uml::CompositionParentRole ComponentFactoryImplementations::meta_RootFolder_parent;

	WorkerLibraries::WorkerLibraries() {}
	WorkerLibraries::WorkerLibraries(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	WorkerLibraries::WorkerLibraries(const WorkerLibraries &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	WorkerLibraries::WorkerLibraries(WorkerLibraries &&master) : UDM_OBJECT(master) {};

	WorkerLibraries WorkerLibraries::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	WorkerLibraries& WorkerLibraries::operator=(WorkerLibraries &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	WorkerLibraries WorkerLibraries::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	WorkerLibraries WorkerLibraries::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	WorkerLibraries WorkerLibraries::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< WorkerLibraries> WorkerLibraries::Instances() { return ::Udm::InstantiatedAttr< WorkerLibraries>(impl); }
	WorkerLibraries WorkerLibraries::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< WorkerLibraries> WorkerLibraries::Derived() { return ::Udm::DerivedAttr< WorkerLibraries>(impl); }
	::Udm::ArchetypeAttr< WorkerLibraries> WorkerLibraries::Archetype() const { return ::Udm::ArchetypeAttr< WorkerLibraries>(impl); }
	::Udm::StringAttr WorkerLibraries::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::WorkerLibrary> WorkerLibraries::WorkerLibrary_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerLibrary>(impl, meta_WorkerLibrary_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> WorkerLibraries::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerLibrary> WorkerLibraries::WorkerLibrary_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerLibrary>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> WorkerLibraries::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> WorkerLibraries::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void WorkerLibraries::Accept(Visitor &v) { v.Visit_WorkerLibraries(*this); }

	::Uml::Class WorkerLibraries::meta;
	::Uml::Attribute WorkerLibraries::meta_name;
	::Uml::CompositionChildRole WorkerLibraries::meta_WorkerLibrary_children;
	::Uml::CompositionParentRole WorkerLibraries::meta_RootFolder_parent;

	RootFolder::RootFolder() {}
	RootFolder::RootFolder(::Udm::ObjectImpl *impl) : UDM_OBJECT(impl) {}
	RootFolder::RootFolder(const RootFolder &master) : UDM_OBJECT(master) {}

#ifdef UDM_RVALUE
	RootFolder::RootFolder(RootFolder &&master) : UDM_OBJECT(master) {};

	RootFolder RootFolder::Cast(::Udm::Object &&a) { return __Cast(std::move(a), meta); };
	RootFolder& RootFolder::operator=(RootFolder &&a) { ::Udm::Object::operator =(std::move(a)); return *this; };

#endif
	RootFolder RootFolder::Cast(const ::Udm::Object &a) { return __Cast(a, meta); }
	RootFolder RootFolder::Create(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role); }
	RootFolder RootFolder::CreateInstance(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl); }
	::Udm::InstantiatedAttr< RootFolder> RootFolder::Instances() { return ::Udm::InstantiatedAttr< RootFolder>(impl); }
	RootFolder RootFolder::CreateDerived(const ::Udm::Object &parent, const ::Uml::CompositionChildRole &role) { return __Create(meta, parent, role, impl, true); }
	::Udm::DerivedAttr< RootFolder> RootFolder::Derived() { return ::Udm::DerivedAttr< RootFolder>(impl); }
	::Udm::ArchetypeAttr< RootFolder> RootFolder::Archetype() const { return ::Udm::ArchetypeAttr< RootFolder>(impl); }
	::Udm::StringAttr RootFolder::name() const { return ::Udm::StringAttr(impl, meta_name); }
	::Udm::ChildrenAttr< ::CQML::FTDeployment> RootFolder::FTDeployment_children() const { return ::Udm::ChildrenAttr< ::CQML::FTDeployment>(impl, meta_FTDeployment_children); }
	::Udm::ChildrenAttr< ::CQML::CIAOEvents> RootFolder::CIAOEvents_children() const { return ::Udm::ChildrenAttr< ::CQML::CIAOEvents>(impl, meta_CIAOEvents_children); }
	::Udm::ChildrenAttr< ::CQML::Security> RootFolder::Security_children() const { return ::Udm::ChildrenAttr< ::CQML::Security>(impl, meta_Security_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentBuild> RootFolder::ComponentBuild_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBuild>(impl, meta_ComponentBuild_children); }
	::Udm::ChildrenAttr< ::CQML::InterfaceDefinitions> RootFolder::InterfaceDefinitions_children() const { return ::Udm::ChildrenAttr< ::CQML::InterfaceDefinitions>(impl, meta_InterfaceDefinitions_children); }
	::Udm::ChildrenAttr< ::CQML::PredefinedTypes> RootFolder::PredefinedTypes_children() const { return ::Udm::ChildrenAttr< ::CQML::PredefinedTypes>(impl, meta_PredefinedTypes_children); }
	::Udm::ChildrenAttr< ::CQML::Targets> RootFolder::Targets_children() const { return ::Udm::ChildrenAttr< ::CQML::Targets>(impl, meta_Targets_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackages> RootFolder::ComponentPackages_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackages>(impl, meta_ComponentPackages_children); }
	::Udm::ChildrenAttr< ::CQML::TopLevelPackages> RootFolder::TopLevelPackages_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelPackages>(impl, meta_TopLevelPackages_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentTypes> RootFolder::ComponentTypes_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentTypes>(impl, meta_ComponentTypes_children); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifacts> RootFolder::ImplementationArtifacts_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifacts>(impl, meta_ImplementationArtifacts_children); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigurations> RootFolder::PackageConfigurations_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigurations>(impl, meta_PackageConfigurations_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementations> RootFolder::ComponentImplementations_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementations>(impl, meta_ComponentImplementations_children); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlans> RootFolder::DeploymentPlans_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlans>(impl, meta_DeploymentPlans_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentAnalyses> RootFolder::ComponentAnalyses_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAnalyses>(impl, meta_ComponentAnalyses_children); }
	::Udm::ChildrenAttr< ::CQML::PathDiagrams> RootFolder::PathDiagrams_children() const { return ::Udm::ChildrenAttr< ::CQML::PathDiagrams>(impl, meta_PathDiagrams_children); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementations> RootFolder::ComponentFactoryImplementations_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementations>(impl, meta_ComponentFactoryImplementations_children); }
	::Udm::ChildrenAttr< ::CQML::WorkerLibraries> RootFolder::WorkerLibraries_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerLibraries>(impl, meta_WorkerLibraries_children); }
	::Udm::ChildrenAttr< ::CQML::RootFolder> RootFolder::RootFolder_children() const { return ::Udm::ChildrenAttr< ::CQML::RootFolder>(impl, meta_RootFolder_children); }
	::Udm::ChildrenAttr< ::CQML::MgaObject> RootFolder::MgaObject_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::MgaObject>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase> RootFolder::QoSCharacteristicBase_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::QoSCharacteristicBase>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ConnectionQoSCharacteristic> RootFolder::ConnectionQoSCharacteristic_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ConnectionQoSCharacteristic>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::CIAOEvents> RootFolder::CIAOEvents_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::CIAOEvents>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::FTDeployment> RootFolder::FTDeployment_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::FTDeployment>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Security> RootFolder::Security_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Security>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentBuild> RootFolder::ComponentBuild_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentBuild>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::InterfaceDefinitions> RootFolder::InterfaceDefinitions_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::InterfaceDefinitions>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PredefinedTypes> RootFolder::PredefinedTypes_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PredefinedTypes>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::Targets> RootFolder::Targets_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::Targets>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentPackages> RootFolder::ComponentPackages_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentPackages>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::TopLevelPackages> RootFolder::TopLevelPackages_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::TopLevelPackages>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentTypes> RootFolder::ComponentTypes_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentTypes>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ImplementationArtifacts> RootFolder::ImplementationArtifacts_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ImplementationArtifacts>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PackageConfigurations> RootFolder::PackageConfigurations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PackageConfigurations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentImplementations> RootFolder::ComponentImplementations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentImplementations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::DeploymentPlans> RootFolder::DeploymentPlans_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::DeploymentPlans>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentAnalyses> RootFolder::ComponentAnalyses_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentAnalyses>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::PathDiagrams> RootFolder::PathDiagrams_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::PathDiagrams>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementations> RootFolder::ComponentFactoryImplementations_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::ComponentFactoryImplementations>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::WorkerLibraries> RootFolder::WorkerLibraries_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::WorkerLibraries>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ChildrenAttr< ::CQML::RootFolder> RootFolder::RootFolder_kind_children() const { return ::Udm::ChildrenAttr< ::CQML::RootFolder>(impl, ::Udm::NULLCHILDROLE); }
	::Udm::ParentAttr< ::CQML::RootFolder> RootFolder::RootFolder_parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, meta_RootFolder_parent); }
	::Udm::ParentAttr< ::CQML::RootFolder> RootFolder::parent() const { return ::Udm::ParentAttr< ::CQML::RootFolder>(impl, ::Udm::NULLPARENTROLE); }
	void RootFolder::Accept(Visitor &v) { v.Visit_RootFolder(*this); }

	::Uml::Class RootFolder::meta;
	::Uml::Attribute RootFolder::meta_name;
	::Uml::CompositionChildRole RootFolder::meta_FTDeployment_children;
	::Uml::CompositionChildRole RootFolder::meta_CIAOEvents_children;
	::Uml::CompositionChildRole RootFolder::meta_Security_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentBuild_children;
	::Uml::CompositionChildRole RootFolder::meta_InterfaceDefinitions_children;
	::Uml::CompositionChildRole RootFolder::meta_PredefinedTypes_children;
	::Uml::CompositionChildRole RootFolder::meta_Targets_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentPackages_children;
	::Uml::CompositionChildRole RootFolder::meta_TopLevelPackages_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentTypes_children;
	::Uml::CompositionChildRole RootFolder::meta_ImplementationArtifacts_children;
	::Uml::CompositionChildRole RootFolder::meta_PackageConfigurations_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentImplementations_children;
	::Uml::CompositionChildRole RootFolder::meta_DeploymentPlans_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentAnalyses_children;
	::Uml::CompositionChildRole RootFolder::meta_PathDiagrams_children;
	::Uml::CompositionChildRole RootFolder::meta_ComponentFactoryImplementations_children;
	::Uml::CompositionChildRole RootFolder::meta_WorkerLibraries_children;
	::Uml::CompositionChildRole RootFolder::meta_RootFolder_children;
	::Uml::CompositionParentRole RootFolder::meta_RootFolder_parent;

	::Uml::Diagram meta;

	void CreateMeta() {
		// classes, with attributes, constraints and constraint definitions
		Action::meta = ::Uml::Class::Create(meta);
		Action::meta_Duration = ::Uml::Attribute::Create(Action::meta);
		Action::meta_LogAction = ::Uml::Attribute::Create(Action::meta);

		ActionBase::meta = ::Uml::Class::Create(meta);

		Aggregate::meta = ::Uml::Class::Create(meta);

		Alias::meta = ::Uml::Class::Create(meta);

		ApplicationTask::meta = ::Uml::Class::Create(meta);

		ArtifactContainer::meta = ::Uml::Class::Create(meta);

		ArtifactDependency::meta = ::Uml::Class::Create(meta);

		ArtifactDependsOn::meta = ::Uml::Class::Create(meta);

		ArtifactDeployRequirement::meta = ::Uml::Class::Create(meta);

		ArtifactExecParameter::meta = ::Uml::Class::Create(meta);

		ArtifactInfoProperty::meta = ::Uml::Class::Create(meta);

		AssemblyAccessConn::meta = ::Uml::Class::Create(meta);

		AssemblyConfigProperty::meta = ::Uml::Class::Create(meta);

		AssemblyDeployRequirement::meta = ::Uml::Class::Create(meta);

		AssemblyRule::meta = ::Uml::Class::Create(meta);

		AssemblyRuleRef::meta = ::Uml::Class::Create(meta);

		AssemblyselectRequirement::meta = ::Uml::Class::Create(meta);

		Attribute::meta = ::Uml::Class::Create(meta);

		AttributeDelegate::meta = ::Uml::Class::Create(meta);

		AttributeManipulateConn::meta = ::Uml::Class::Create(meta);

		AttributeMapping::meta = ::Uml::Class::Create(meta);

		AttributeMappingDelegate::meta = ::Uml::Class::Create(meta);

		AttributeMappingValue::meta = ::Uml::Class::Create(meta);

		AttributeMember::meta = ::Uml::Class::Create(meta);

		AttributeRef::meta = ::Uml::Class::Create(meta);

		AttributeValue::meta = ::Uml::Class::Create(meta);

		Average::meta = ::Uml::Class::Create(meta);

		BehaviorInputAction::meta = ::Uml::Class::Create(meta);

		BehaviorModel::meta = ::Uml::Class::Create(meta);

		BenchmarkAnalysis::meta = ::Uml::Class::Create(meta);

		BenchmarkCharacteristics::meta = ::Uml::Class::Create(meta);

		BenchmarkType::meta = ::Uml::Class::Create(meta);

		Boolean::meta = ::Uml::Class::Create(meta);

		Boxed::meta = ::Uml::Class::Create(meta);

		BranchState::meta = ::Uml::Class::Create(meta);

		BranchTransition::meta = ::Uml::Class::Create(meta);
		BranchTransition::meta_Condition = ::Uml::Attribute::Create(BranchTransition::meta);

		Bridge::meta = ::Uml::Class::Create(meta);
		Bridge::meta_label = ::Uml::Attribute::Create(Bridge::meta);

		BridgeConnection::meta = ::Uml::Class::Create(meta);

		Byte::meta = ::Uml::Class::Create(meta);

		CIAOEvents::meta = ::Uml::Class::Create(meta);
		CIAOEvents::meta_id = ::Uml::Attribute::Create(CIAOEvents::meta);

		Capability::meta = ::Uml::Class::Create(meta);

		Collection::meta = ::Uml::Class::Create(meta);
		Collection::meta_bound = ::Uml::Attribute::Create(Collection::meta);

		CollocationGroup::meta = ::Uml::Class::Create(meta);

		CollocationGroupMember::meta = ::Uml::Class::Create(meta);

		CommonPortAttrs::meta = ::Uml::Class::Create(meta);
		CommonPortAttrs::meta_exclusiveUser = ::Uml::Attribute::Create(CommonPortAttrs::meta);
		CommonPortAttrs::meta_exclusiveProvider = ::Uml::Attribute::Create(CommonPortAttrs::meta);
		CommonPortAttrs::meta_optional = ::Uml::Attribute::Create(CommonPortAttrs::meta);

		CompRef::meta = ::Uml::Class::Create(meta);

		Component::meta = ::Uml::Class::Create(meta);
		Component::meta_label = ::Uml::Attribute::Create(Component::meta);
		Component::meta_UUID = ::Uml::Attribute::Create(Component::meta);

		ComponentAccessConn::meta = ::Uml::Class::Create(meta);

		ComponentAnalyses::meta = ::Uml::Class::Create(meta);
		ComponentAnalyses::meta_name = ::Uml::Attribute::Create(ComponentAnalyses::meta);

		ComponentAssembly::meta = ::Uml::Class::Create(meta);

		ComponentAssemblyBase::meta = ::Uml::Class::Create(meta);

		ComponentAssemblyQoS::meta = ::Uml::Class::Create(meta);

		ComponentAssemblyQoSCharacteristic::meta = ::Uml::Class::Create(meta);

		ComponentAssemblyReference::meta = ::Uml::Class::Create(meta);

		ComponentAssemblySecurityQoS::meta = ::Uml::Class::Create(meta);

		ComponentBase::meta = ::Uml::Class::Create(meta);

		ComponentBuild::meta = ::Uml::Class::Create(meta);
		ComponentBuild::meta_name = ::Uml::Attribute::Create(ComponentBuild::meta);

		ComponentConfigProperty::meta = ::Uml::Class::Create(meta);

		ComponentContainer::meta = ::Uml::Class::Create(meta);

		ComponentFactory::meta = ::Uml::Class::Create(meta);

		ComponentFactoryImplementationContainer::meta = ::Uml::Class::Create(meta);

		ComponentFactoryImplementations::meta = ::Uml::Class::Create(meta);
		ComponentFactoryImplementations::meta_name = ::Uml::Attribute::Create(ComponentFactoryImplementations::meta);

		ComponentFactoryInstance::meta = ::Uml::Class::Create(meta);

		ComponentFactoryRef::meta = ::Uml::Class::Create(meta);

		ComponentImplementation::meta = ::Uml::Class::Create(meta);

		ComponentImplementationArtifact::meta = ::Uml::Class::Create(meta);

		ComponentImplementationContainer::meta = ::Uml::Class::Create(meta);

		ComponentImplementationReference::meta = ::Uml::Class::Create(meta);

		ComponentImplementations::meta = ::Uml::Class::Create(meta);
		ComponentImplementations::meta_name = ::Uml::Attribute::Create(ComponentImplementations::meta);

		ComponentInfoProperty::meta = ::Uml::Class::Create(meta);

		ComponentLib::meta = ::Uml::Class::Create(meta);
		ComponentLib::meta_sharedname = ::Uml::Attribute::Create(ComponentLib::meta);
		ComponentLib::meta_ORBServices = ::Uml::Attribute::Create(ComponentLib::meta);
		ComponentLib::meta_libraryexport = ::Uml::Attribute::Create(ComponentLib::meta);

		ComponentOperation::meta = ::Uml::Class::Create(meta);

		ComponentPackage::meta = ::Uml::Class::Create(meta);
		ComponentPackage::meta_label = ::Uml::Attribute::Create(ComponentPackage::meta);
		ComponentPackage::meta_UUID = ::Uml::Attribute::Create(ComponentPackage::meta);

		ComponentPackageReference::meta = ::Uml::Class::Create(meta);
		ComponentPackageReference::meta_requiredName = ::Uml::Attribute::Create(ComponentPackageReference::meta);
		ComponentPackageReference::meta_requiredType = ::Uml::Attribute::Create(ComponentPackageReference::meta);
		ComponentPackageReference::meta_requiredUUID = ::Uml::Attribute::Create(ComponentPackageReference::meta);

		ComponentPackages::meta = ::Uml::Class::Create(meta);
		ComponentPackages::meta_name = ::Uml::Attribute::Create(ComponentPackages::meta);

		ComponentProperty::meta = ::Uml::Class::Create(meta);

		ComponentPropertyDescription::meta = ::Uml::Class::Create(meta);

		ComponentQoS::meta = ::Uml::Class::Create(meta);

		ComponentQoSCharacteristic::meta = ::Uml::Class::Create(meta);

		ComponentRef::meta = ::Uml::Class::Create(meta);

		ComponentRule::meta = ::Uml::Class::Create(meta);

		ComponentRuleRef::meta = ::Uml::Class::Create(meta);

		ComponentSecurityQoS::meta = ::Uml::Class::Create(meta);

		ComponentServantArtifact::meta = ::Uml::Class::Create(meta);

		ComponentTypes::meta = ::Uml::Class::Create(meta);
		ComponentTypes::meta_name = ::Uml::Attribute::Create(ComponentTypes::meta);

		ConfigProperty::meta = ::Uml::Class::Create(meta);

		ConnectedComponent::meta = ::Uml::Class::Create(meta);

		ConnectionQoSCharacteristic::meta = ::Uml::Class::Create(meta);

		Constant::meta = ::Uml::Class::Create(meta);
		Constant::meta_value = ::Uml::Attribute::Create(Constant::meta);

		ConstantType::meta = ::Uml::Class::Create(meta);

		ConsumerBehavior::meta = ::Uml::Class::Create(meta);
		ConsumerBehavior::meta_ECProxyPushConsumerCollectionSynch = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECConsumerControl = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECConsumerLock = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECConsumerControlPeriod = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECProxyPushConsumerCollectionFlag = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECProxyPushConsumerCollectionIterator = ::Uml::Attribute::Create(ConsumerBehavior::meta);
		ConsumerBehavior::meta_ECFiltering = ::Uml::Attribute::Create(ConsumerBehavior::meta);

		CriticalPath::meta = ::Uml::Class::Create(meta);

		DataAnalysisBase::meta = ::Uml::Class::Create(meta);

		DataType::meta = ::Uml::Class::Create(meta);

		DeploymentPlan::meta = ::Uml::Class::Create(meta);
		DeploymentPlan::meta_label = ::Uml::Attribute::Create(DeploymentPlan::meta);
		DeploymentPlan::meta_UUID = ::Uml::Attribute::Create(DeploymentPlan::meta);

		DeploymentPlanQoS::meta = ::Uml::Class::Create(meta);

		DeploymentPlanRef::meta = ::Uml::Class::Create(meta);

		DeploymentPlans::meta = ::Uml::Class::Create(meta);
		DeploymentPlans::meta_name = ::Uml::Attribute::Create(DeploymentPlans::meta);

		Deploys::meta = ::Uml::Class::Create(meta);

		Destructible::meta = ::Uml::Class::Create(meta);
		Destructible::meta_Metric = ::Uml::Attribute::Create(Destructible::meta);

		Discriminator::meta = ::Uml::Class::Create(meta);

		DisplayNode::meta = ::Uml::Class::Create(meta);

		DoWhileState::meta = ::Uml::Class::Create(meta);

		Domain::meta = ::Uml::Class::Create(meta);
		Domain::meta_UUID = ::Uml::Attribute::Create(Domain::meta);
		Domain::meta_label = ::Uml::Attribute::Create(Domain::meta);

		DomainRiskGrouping::meta = ::Uml::Class::Create(meta);

		DomainRiskGroupingRef::meta = ::Uml::Class::Create(meta);

		DstEdge::meta = ::Uml::Class::Create(meta);

		ECBehavior::meta = ::Uml::Class::Create(meta);
		ECBehavior::meta_DispatchingMultithreadingLevel = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_MultithreadedSupplier = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_MultithreadedConsumer = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_DisconnectDanglingConnections = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_ConsumerBasedFiltering = ::Uml::Attribute::Create(ECBehavior::meta);
		ECBehavior::meta_SupplierBasedFiltering = ::Uml::Attribute::Create(ECBehavior::meta);

		ECRequirements::meta = ::Uml::Class::Create(meta);
		ECRequirements::meta_ConfigureRTQoS = ::Uml::Attribute::Create(ECRequirements::meta);

		ECRole::meta = ::Uml::Class::Create(meta);
		ECRole::meta_ECFilterType = ::Uml::Attribute::Create(ECRole::meta);
		ECRole::meta_rolekind = ::Uml::Attribute::Create(ECRole::meta);

		Edge::meta = ::Uml::Class::Create(meta);

		EdgeProperty::meta = ::Uml::Class::Create(meta);

		Effect::meta = ::Uml::Class::Create(meta);

		EffectBase::meta = ::Uml::Class::Create(meta);
		EffectBase::meta_Postcondition = ::Uml::Attribute::Create(EffectBase::meta);

		Enum::meta = ::Uml::Class::Create(meta);

		EnumValue::meta = ::Uml::Class::Create(meta);

		Environment::meta = ::Uml::Class::Create(meta);

		EnvironmentConf::meta = ::Uml::Class::Create(meta);
		EnvironmentConf::meta_SvcConf = ::Uml::Attribute::Create(EnvironmentConf::meta);
		EnvironmentConf::meta_CmdLineOptions = ::Uml::Attribute::Create(EnvironmentConf::meta);

		Event::meta = ::Uml::Class::Create(meta);

		EventChannelCommunicationPoint::meta = ::Uml::Class::Create(meta);
		EventChannelCommunicationPoint::meta_udp = ::Uml::Attribute::Create(EventChannelCommunicationPoint::meta);
		EventChannelCommunicationPoint::meta_is_multicast = ::Uml::Attribute::Create(EventChannelCommunicationPoint::meta);
		EventChannelCommunicationPoint::meta_port = ::Uml::Attribute::Create(EventChannelCommunicationPoint::meta);
		EventChannelCommunicationPoint::meta_address = ::Uml::Attribute::Create(EventChannelCommunicationPoint::meta);

		EventChannelFactory::meta = ::Uml::Class::Create(meta);
		EventChannelFactory::meta_ECDispatchingThreads = ::Uml::Attribute::Create(EventChannelFactory::meta);
		EventChannelFactory::meta_ECUseORBId = ::Uml::Attribute::Create(EventChannelFactory::meta);
		EventChannelFactory::meta_ECTimeout = ::Uml::Attribute::Create(EventChannelFactory::meta);
		EventChannelFactory::meta_ECDispatching = ::Uml::Attribute::Create(EventChannelFactory::meta);
		EventChannelFactory::meta_ECObserver = ::Uml::Attribute::Create(EventChannelFactory::meta);
		EventChannelFactory::meta_ECScheduling = ::Uml::Attribute::Create(EventChannelFactory::meta);

		EventRef::meta = ::Uml::Class::Create(meta);

		EventSinkDelegate::meta = ::Uml::Class::Create(meta);

		EventSinkPublish::meta = ::Uml::Class::Create(meta);

		EventSource::meta = ::Uml::Class::Create(meta);

		EventSourceDelegate::meta = ::Uml::Class::Create(meta);

		EventSourcePort::meta = ::Uml::Class::Create(meta);

		EventSourcePublish::meta = ::Uml::Class::Create(meta);

		Exception::meta = ::Uml::Class::Create(meta);

		ExceptionRef::meta = ::Uml::Class::Create(meta);

		ExecutorProject::meta = ::Uml::Class::Create(meta);

		ExtResourceConn::meta = ::Uml::Class::Create(meta);

		ExternalDelegate::meta = ::Uml::Class::Create(meta);

		ExternalPortReference::meta = ::Uml::Class::Create(meta);
		ExternalPortReference::meta_location = ::Uml::Attribute::Create(ExternalPortReference::meta);
		ExternalPortReference::meta_label = ::Uml::Attribute::Create(ExternalPortReference::meta);

		ExternalPortReferenceType::meta = ::Uml::Class::Create(meta);

		ExternalResources::meta = ::Uml::Class::Create(meta);

		FTDeployDepends::meta = ::Uml::Class::Create(meta);

		FTDeployment::meta = ::Uml::Class::Create(meta);

		FTMonitorable::meta = ::Uml::Class::Create(meta);

		FacetDelegate::meta = ::Uml::Class::Create(meta);

		FacetInvoke::meta = ::Uml::Class::Create(meta);

		FactoryOperation::meta = ::Uml::Class::Create(meta);

		FailOverUnit::meta = ::Uml::Class::Create(meta);
		FailOverUnit::meta_Replica = ::Uml::Attribute::Create(FailOverUnit::meta);

		File::meta = ::Uml::Class::Create(meta);
		File::meta_path = ::Uml::Attribute::Create(File::meta);

		FileRef::meta = ::Uml::Class::Create(meta);

		Filter::meta = ::Uml::Class::Create(meta);
		Filter::meta_filter_id = ::Uml::Attribute::Create(Filter::meta);
		Filter::meta_filter_type = ::Uml::Attribute::Create(Filter::meta);

		Finish::meta = ::Uml::Class::Create(meta);

		FixedIterationBenchmarks::meta = ::Uml::Class::Create(meta);
		FixedIterationBenchmarks::meta_benchmarkIterations = ::Uml::Attribute::Create(FixedIterationBenchmarks::meta);

		ForState::meta = ::Uml::Class::Create(meta);
		ForState::meta_InitialCondition = ::Uml::Attribute::Create(ForState::meta);
		ForState::meta_IncrementExpr = ::Uml::Attribute::Create(ForState::meta);

		GenericObject::meta = ::Uml::Class::Create(meta);

		GenericValue::meta = ::Uml::Class::Create(meta);

		GenericValueObject::meta = ::Uml::Class::Create(meta);

		GetException::meta = ::Uml::Class::Create(meta);

		GrantedRights::meta = ::Uml::Class::Create(meta);

		GraphVertex::meta = ::Uml::Class::Create(meta);

		Group::meta = ::Uml::Class::Create(meta);

		HasExceptions::meta = ::Uml::Class::Create(meta);

		HasOperations::meta = ::Uml::Class::Create(meta);

		HostReference::meta = ::Uml::Class::Create(meta);

		Implemenation::meta = ::Uml::Class::Create(meta);
		Implemenation::meta_label = ::Uml::Attribute::Create(Implemenation::meta);
		Implemenation::meta_UUID = ::Uml::Attribute::Create(Implemenation::meta);

		Implementation::meta = ::Uml::Class::Create(meta);

		ImplementationArtifact::meta = ::Uml::Class::Create(meta);
		ImplementationArtifact::meta_artifactVersion = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_architecture = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_configuration = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_operatingSystem = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_location = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_UUID = ::Uml::Attribute::Create(ImplementationArtifact::meta);
		ImplementationArtifact::meta_label = ::Uml::Attribute::Create(ImplementationArtifact::meta);

		ImplementationArtifactReference::meta = ::Uml::Class::Create(meta);

		ImplementationArtifacts::meta = ::Uml::Class::Create(meta);
		ImplementationArtifacts::meta_name = ::Uml::Attribute::Create(ImplementationArtifacts::meta);

		ImplementationCapability::meta = ::Uml::Class::Create(meta);

		ImplementationContainer::meta = ::Uml::Class::Create(meta);

		ImplementationDependency::meta = ::Uml::Class::Create(meta);
		ImplementationDependency::meta_requiredType = ::Uml::Attribute::Create(ImplementationDependency::meta);

		ImplementationDependsOn::meta = ::Uml::Class::Create(meta);

		ImplementationRequirement::meta = ::Uml::Class::Create(meta);
		ImplementationRequirement::meta_ResourceUsageKind = ::Uml::Attribute::Create(ImplementationRequirement::meta);
		ImplementationRequirement::meta_resourcePort = ::Uml::Attribute::Create(ImplementationRequirement::meta);
		ImplementationRequirement::meta_componentPort = ::Uml::Attribute::Create(ImplementationRequirement::meta);

		Implements::meta = ::Uml::Class::Create(meta);

		InEventPort::meta = ::Uml::Class::Create(meta);

		InParameter::meta = ::Uml::Class::Create(meta);

		InfoProperty::meta = ::Uml::Class::Create(meta);

		Inheritable::meta = ::Uml::Class::Create(meta);

		Inherits::meta = ::Uml::Class::Create(meta);

		InitiatorRoleRef::meta = ::Uml::Class::Create(meta);

		InoutParameter::meta = ::Uml::Class::Create(meta);

		Input::meta = ::Uml::Class::Create(meta);

		InputAction::meta = ::Uml::Class::Create(meta);

		InputEffect::meta = ::Uml::Class::Create(meta);

		InstanceMapping::meta = ::Uml::Class::Create(meta);

		Interconnect::meta = ::Uml::Class::Create(meta);
		Interconnect::meta_label = ::Uml::Attribute::Create(Interconnect::meta);

		InterconnectConnection::meta = ::Uml::Class::Create(meta);

		InterfaceClassificationConn::meta = ::Uml::Class::Create(meta);

		InterfaceDefinitions::meta = ::Uml::Class::Create(meta);
		InterfaceDefinitions::meta_name = ::Uml::Attribute::Create(InterfaceDefinitions::meta);

		InvokePortBase::meta = ::Uml::Class::Create(meta);

		Jitter::meta = ::Uml::Class::Create(meta);

		Label::meta = ::Uml::Class::Create(meta);

		LabelConnection::meta = ::Uml::Class::Create(meta);

		Lane::meta = ::Uml::Class::Create(meta);
		Lane::meta_lane_priority = ::Uml::Attribute::Create(Lane::meta);
		Lane::meta_static_threads = ::Uml::Attribute::Create(Lane::meta);
		Lane::meta_dynamic_threads = ::Uml::Attribute::Create(Lane::meta);

		LanePerThreadPool::meta = ::Uml::Class::Create(meta);

		Latency::meta = ::Uml::Class::Create(meta);

		LongInteger::meta = ::Uml::Class::Create(meta);

		LookupKey::meta = ::Uml::Class::Create(meta);

		LookupOperation::meta = ::Uml::Class::Create(meta);

		LoopState::meta = ::Uml::Class::Create(meta);
		LoopState::meta_LoopingCondition = ::Uml::Attribute::Create(LoopState::meta);

		LoopTransition::meta = ::Uml::Class::Create(meta);

		MPC::meta = ::Uml::Class::Create(meta);

		MakeMemberPrivate::meta = ::Uml::Class::Create(meta);

		Manageable::meta = ::Uml::Class::Create(meta);

		ManagesComponent::meta = ::Uml::Class::Create(meta);

		Maximum::meta = ::Uml::Class::Create(meta);

		Member::meta = ::Uml::Class::Create(meta);

		MemberType::meta = ::Uml::Class::Create(meta);

		MetricConnection::meta = ::Uml::Class::Create(meta);

		MetricsBase::meta = ::Uml::Class::Create(meta);
		MetricsBase::meta_rate = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_resolution = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_priority = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_iterations = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_warmup = ::Uml::Attribute::Create(MetricsBase::meta);
		MetricsBase::meta_fileName = ::Uml::Attribute::Create(MetricsBase::meta);

		MgaObject::meta = ::Uml::Class::Create(meta);
		MgaObject::meta_position = ::Uml::Attribute::Create(MgaObject::meta);
		MgaObject::meta_name = ::Uml::Attribute::Create(MgaObject::meta);

		Minimum::meta = ::Uml::Class::Create(meta);

		MonitorableGroupAssociation::meta = ::Uml::Class::Create(meta);

		MonolithDeployRequirement::meta = ::Uml::Class::Create(meta);

		MonolithExecParameter::meta = ::Uml::Class::Create(meta);

		MonolithicImplementation::meta = ::Uml::Class::Create(meta);
		MonolithicImplementation::meta_defaultVersion = ::Uml::Attribute::Create(MonolithicImplementation::meta);

		MonolithicImplementationBase::meta = ::Uml::Class::Create(meta);

		MonolithprimaryArtifact::meta = ::Uml::Class::Create(meta);

		MultiInput::meta = ::Uml::Class::Create(meta);

		MultiInputAction::meta = ::Uml::Class::Create(meta);

		MultiInputBase::meta = ::Uml::Class::Create(meta);

		MultiOutputBase::meta = ::Uml::Class::Create(meta);

		MultipleServiceRequests::meta = ::Uml::Class::Create(meta);
		MultipleServiceRequests::meta_buffer_service_requests = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_maximum_simultaneous_service_level = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_simultaneous_service_execution = ::Uml::Attribute::Create(MultipleServiceRequests::meta);
		MultipleServiceRequests::meta_minimum_simultaneous_service_level = ::Uml::Attribute::Create(MultipleServiceRequests::meta);

		NamedType::meta = ::Uml::Class::Create(meta);

		NetQoS::meta = ::Uml::Class::Create(meta);
		NetQoS::meta_fwdBW = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_quality = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_revBW = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_admissionPriority = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_custom = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_NetPriorityModel = ::Uml::Attribute::Create(NetQoS::meta);
		NetQoS::meta_rev_quality = ::Uml::Attribute::Create(NetQoS::meta);

		NoInheritable::meta = ::Uml::Class::Create(meta);

		Node::meta = ::Uml::Class::Create(meta);
		Node::meta_operatingSystem = ::Uml::Attribute::Create(Node::meta);
		Node::meta_architecture = ::Uml::Attribute::Create(Node::meta);
		Node::meta_label = ::Uml::Attribute::Create(Node::meta);

		NodeReference::meta = ::Uml::Class::Create(meta);

		Object::meta = ::Uml::Class::Create(meta);
		Object::meta_abstract = ::Uml::Attribute::Create(Object::meta);
		Object::meta_local = ::Uml::Attribute::Create(Object::meta);

		ObjectAccessConn::meta = ::Uml::Class::Create(meta);

		ObjectByValue::meta = ::Uml::Class::Create(meta);
		ObjectByValue::meta_abstract = ::Uml::Attribute::Create(ObjectByValue::meta);

		OnAssemblyConn::meta = ::Uml::Class::Create(meta);

		OnComponentConn::meta = ::Uml::Class::Create(meta);

		OnInterfaceConn::meta = ::Uml::Class::Create(meta);

		OnewayOperation::meta = ::Uml::Class::Create(meta);

		OperationBase::meta = ::Uml::Class::Create(meta);

		OperationClassificationConn::meta = ::Uml::Class::Create(meta);

		OperationInvokeConn::meta = ::Uml::Class::Create(meta);

		OperationRef::meta = ::Uml::Class::Create(meta);

		OperationSet::meta = ::Uml::Class::Create(meta);

		OutEventPort::meta = ::Uml::Class::Create(meta);
		OutEventPort::meta_single_destination = ::Uml::Attribute::Create(OutEventPort::meta);
		OutEventPort::meta_out_event_port_type = ::Uml::Attribute::Create(OutEventPort::meta);

		OutParameter::meta = ::Uml::Class::Create(meta);

		OutputAction::meta = ::Uml::Class::Create(meta);

		Package::meta = ::Uml::Class::Create(meta);

		PackageConfBasePackage::meta = ::Uml::Class::Create(meta);

		PackageConfConfigProperty::meta = ::Uml::Class::Create(meta);

		PackageConfReference::meta = ::Uml::Class::Create(meta);

		PackageConfSelectRequirement::meta = ::Uml::Class::Create(meta);

		PackageConfSpecializedConfig::meta = ::Uml::Class::Create(meta);

		PackageConfigProperty::meta = ::Uml::Class::Create(meta);

		PackageConfiguration::meta = ::Uml::Class::Create(meta);
		PackageConfiguration::meta_label = ::Uml::Attribute::Create(PackageConfiguration::meta);
		PackageConfiguration::meta_UUID = ::Uml::Attribute::Create(PackageConfiguration::meta);

		PackageConfigurationContainer::meta = ::Uml::Class::Create(meta);

		PackageConfigurationReference::meta = ::Uml::Class::Create(meta);

		PackageConfigurations::meta = ::Uml::Class::Create(meta);
		PackageConfigurations::meta_name = ::Uml::Attribute::Create(PackageConfigurations::meta);

		PackageContainer::meta = ::Uml::Class::Create(meta);

		PackageInfoProperty::meta = ::Uml::Class::Create(meta);

		PackageInterface::meta = ::Uml::Class::Create(meta);

		ParameterType::meta = ::Uml::Class::Create(meta);

		Path::meta = ::Uml::Class::Create(meta);

		PathDiagrams::meta = ::Uml::Class::Create(meta);
		PathDiagrams::meta_name = ::Uml::Attribute::Create(PathDiagrams::meta);

		PathProperty::meta = ::Uml::Class::Create(meta);

		PathRef::meta = ::Uml::Class::Create(meta);

		PathReference::meta = ::Uml::Class::Create(meta);

		Paths::meta = ::Uml::Class::Create(meta);

		PeriodicBenchmarks::meta = ::Uml::Class::Create(meta);
		PeriodicBenchmarks::meta_timeperiod = ::Uml::Attribute::Create(PeriodicBenchmarks::meta);

		PeriodicEvent::meta = ::Uml::Class::Create(meta);
		PeriodicEvent::meta_Hertz = ::Uml::Attribute::Create(PeriodicEvent::meta);
		PeriodicEvent::meta_Distribution = ::Uml::Attribute::Create(PeriodicEvent::meta);

		Policy::meta = ::Uml::Class::Create(meta);

		PolicyPerThreadPool::meta = ::Uml::Class::Create(meta);

		PolicySet::meta = ::Uml::Class::Create(meta);

		Port::meta = ::Uml::Class::Create(meta);

		PortQoS::meta = ::Uml::Class::Create(meta);

		PortQoSCharacteristic::meta = ::Uml::Class::Create(meta);

		PortRule::meta = ::Uml::Class::Create(meta);

		PortRuleRef::meta = ::Uml::Class::Create(meta);

		PortSecurityQoS::meta = ::Uml::Class::Create(meta);

		PredefinedType::meta = ::Uml::Class::Create(meta);

		PredefinedTypes::meta = ::Uml::Class::Create(meta);
		PredefinedTypes::meta_name = ::Uml::Attribute::Create(PredefinedTypes::meta);

		Prefixable::meta = ::Uml::Class::Create(meta);
		Prefixable::meta_PrefixTag = ::Uml::Attribute::Create(Prefixable::meta);

		PriorityBands::meta = ::Uml::Class::Create(meta);
		PriorityBands::meta_high = ::Uml::Attribute::Create(PriorityBands::meta);
		PriorityBands::meta_low = ::Uml::Attribute::Create(PriorityBands::meta);

		PriorityModelPolicy::meta = ::Uml::Class::Create(meta);
		PriorityModelPolicy::meta_priority_value = ::Uml::Attribute::Create(PriorityModelPolicy::meta);
		PriorityModelPolicy::meta_priority_model = ::Uml::Attribute::Create(PriorityModelPolicy::meta);

		PrivateFlag::meta = ::Uml::Class::Create(meta);

		Project::meta = ::Uml::Class::Create(meta);

		Property::meta = ::Uml::Class::Create(meta);
		Property::meta_DataValue = ::Uml::Attribute::Create(Property::meta);

		Provideable::meta = ::Uml::Class::Create(meta);

		ProvidedRequestPort::meta = ::Uml::Class::Create(meta);

		PublishConnector::meta = ::Uml::Class::Create(meta);

		QoSCharRef::meta = ::Uml::Class::Create(meta);

		QoSCharacteristicBase::meta = ::Uml::Class::Create(meta);

		QoSConnector::meta = ::Uml::Class::Create(meta);

		QoSReq::meta = ::Uml::Class::Create(meta);

		QueryAction::meta = ::Uml::Class::Create(meta);

		QueryInput::meta = ::Uml::Class::Create(meta);

		QueryInputAction::meta = ::Uml::Class::Create(meta);

		QueryInputBase::meta = ::Uml::Class::Create(meta);

		RBAC::meta = ::Uml::Class::Create(meta);

		RTRequirements::meta = ::Uml::Class::Create(meta);

		ReadonlyAttribute::meta = ::Uml::Class::Create(meta);

		RealNumber::meta = ::Uml::Class::Create(meta);

		RealTimeConfiguration::meta = ::Uml::Class::Create(meta);

		Realm::meta = ::Uml::Class::Create(meta);

		ReceiverConnection::meta = ::Uml::Class::Create(meta);

		RecepInvoke::meta = ::Uml::Class::Create(meta);

		ReceptacleDelegate::meta = ::Uml::Class::Create(meta);

		RepicaGroupConfiguration::meta = ::Uml::Class::Create(meta);
		RepicaGroupConfiguration::meta_ReplicationStyle = ::Uml::Attribute::Create(RepicaGroupConfiguration::meta);

		RequiredRequestPort::meta = ::Uml::Class::Create(meta);
		RequiredRequestPort::meta_multiple_connections = ::Uml::Attribute::Create(RequiredRequestPort::meta);

		RequiredRights::meta = ::Uml::Class::Create(meta);
		RequiredRights::meta_combinator = ::Uml::Attribute::Create(RequiredRights::meta);

		Requirement::meta = ::Uml::Class::Create(meta);

		RequirementBase::meta = ::Uml::Class::Create(meta);
		RequirementBase::meta_resourceType = ::Uml::Attribute::Create(RequirementBase::meta);

		RequirementSatisfier::meta = ::Uml::Class::Create(meta);
		RequirementSatisfier::meta_resourceType = ::Uml::Attribute::Create(RequirementSatisfier::meta);

		Resource::meta = ::Uml::Class::Create(meta);

		ResourceActionBase::meta = ::Uml::Class::Create(meta);

		ReturnType::meta = ::Uml::Class::Create(meta);

		Rights::meta = ::Uml::Class::Create(meta);
		Rights::meta_get = ::Uml::Attribute::Create(Rights::meta);
		Rights::meta_family = ::Uml::Attribute::Create(Rights::meta);
		Rights::meta_set = ::Uml::Attribute::Create(Rights::meta);
		Rights::meta_use = ::Uml::Attribute::Create(Rights::meta);
		Rights::meta_manage = ::Uml::Attribute::Create(Rights::meta);

		RightsAssignmentConn::meta = ::Uml::Class::Create(meta);

		Role::meta = ::Uml::Class::Create(meta);

		RoleAssignmentConn::meta = ::Uml::Class::Create(meta);

		RootFolder::meta = ::Uml::Class::Create(meta);
		RootFolder::meta_name = ::Uml::Attribute::Create(RootFolder::meta);

		RootRiskAssociation::meta = ::Uml::Class::Create(meta);

		RootRiskGroup::meta = ::Uml::Class::Create(meta);

		RuleBase::meta = ::Uml::Class::Create(meta);
		RuleBase::meta_allow = ::Uml::Attribute::Create(RuleBase::meta);

		SRGBase::meta = ::Uml::Class::Create(meta);

		SRGRiskAssociation::meta = ::Uml::Class::Create(meta);

		SatisfierProperty::meta = ::Uml::Class::Create(meta);
		SatisfierProperty::meta_DataValue = ::Uml::Attribute::Create(SatisfierProperty::meta);
		SatisfierProperty::meta_dynamic = ::Uml::Attribute::Create(SatisfierProperty::meta);
		SatisfierProperty::meta_SatisfierPropertyKind = ::Uml::Attribute::Create(SatisfierProperty::meta);

		SecuredPathConn::meta = ::Uml::Class::Create(meta);

		Security::meta = ::Uml::Class::Create(meta);

		SecurityDomain::meta = ::Uml::Class::Create(meta);

		SecurityQoS::meta = ::Uml::Class::Create(meta);
		SecurityQoS::meta_IntegrityLevel = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_Authentication = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_AuditLevel = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_ConfidentialityLevel = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_SecurityLevel = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_NonRepudiation = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_SecurityPolicy = ::Uml::Attribute::Create(SecurityQoS::meta);
		SecurityQoS::meta_DelegationPolicy = ::Uml::Attribute::Create(SecurityQoS::meta);

		SenderConnection::meta = ::Uml::Class::Create(meta);

		ServantProject::meta = ::Uml::Class::Create(meta);

		ServiceConsumer::meta = ::Uml::Class::Create(meta);
		ServiceConsumer::meta_prioritize_service_invocations = ::Uml::Attribute::Create(ServiceConsumer::meta);

		ServiceLevels::meta = ::Uml::Class::Create(meta);
		ServiceLevels::meta_varying_service_levels = ::Uml::Attribute::Create(ServiceLevels::meta);

		ServiceProvider::meta = ::Uml::Class::Create(meta);
		ServiceProvider::meta_fixed_prioirty_service_execution = ::Uml::Attribute::Create(ServiceProvider::meta);

		SetException::meta = ::Uml::Class::Create(meta);

		SharedComponentReference::meta = ::Uml::Class::Create(meta);

		SharedResource::meta = ::Uml::Class::Create(meta);

		SharedResourceReference::meta = ::Uml::Class::Create(meta);

		SharedRiskGroup::meta = ::Uml::Class::Create(meta);

		Shares::meta = ::Uml::Class::Create(meta);

		ShortInteger::meta = ::Uml::Class::Create(meta);

		SingleInputBase::meta = ::Uml::Class::Create(meta);

		SingleOutputBase::meta = ::Uml::Class::Create(meta);

		SrcEdge::meta = ::Uml::Class::Create(meta);

		State::meta = ::Uml::Class::Create(meta);

		StateBase::meta = ::Uml::Class::Create(meta);

		String::meta = ::Uml::Class::Create(meta);

		StubProject::meta = ::Uml::Class::Create(meta);

		Subject::meta = ::Uml::Class::Create(meta);
		Subject::meta_principal = ::Uml::Attribute::Create(Subject::meta);

		SupplierBehavior::meta = ::Uml::Class::Create(meta);
		SupplierBehavior::meta_ECProxySupplierLock = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECSupplierControl = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECSupplierControlPeriod = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECProxyPushSupplierCollectionFlag = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECProxyPushSupplierCollectionIterator = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECProxyPushSupplierCollectionSynch = ::Uml::Attribute::Create(SupplierBehavior::meta);
		SupplierBehavior::meta_ECSupplierFiltering = ::Uml::Attribute::Create(SupplierBehavior::meta);

		Supports::meta = ::Uml::Class::Create(meta);

		SupportsDelegate::meta = ::Uml::Class::Create(meta);

		SupportsInterfaces::meta = ::Uml::Class::Create(meta);

		SwitchedAggregate::meta = ::Uml::Class::Create(meta);

		Taggable::meta = ::Uml::Class::Create(meta);
		Taggable::meta_VersionTag = ::Uml::Attribute::Create(Taggable::meta);
		Taggable::meta_SpecifyIdTag = ::Uml::Attribute::Create(Taggable::meta);

		TargetObjectRef::meta = ::Uml::Class::Create(meta);

		Targets::meta = ::Uml::Class::Create(meta);
		Targets::meta_name = ::Uml::Attribute::Create(Targets::meta);

		Task::meta = ::Uml::Class::Create(meta);

		TaskSet::meta = ::Uml::Class::Create(meta);
		TaskSet::meta_priority = ::Uml::Attribute::Create(TaskSet::meta);
		TaskSet::meta_rate = ::Uml::Attribute::Create(TaskSet::meta);

		Terminal::meta = ::Uml::Class::Create(meta);

		TerminalEffect::meta = ::Uml::Class::Create(meta);

		TerminalTransition::meta = ::Uml::Class::Create(meta);

		ThreadPool::meta = ::Uml::Class::Create(meta);
		ThreadPool::meta_allow_request_buffering = ::Uml::Attribute::Create(ThreadPool::meta);
		ThreadPool::meta_max_buffered_requests = ::Uml::Attribute::Create(ThreadPool::meta);
		ThreadPool::meta_max_buffer_size = ::Uml::Attribute::Create(ThreadPool::meta);
		ThreadPool::meta_allow_borrowing = ::Uml::Attribute::Create(ThreadPool::meta);
		ThreadPool::meta_stacksize = ::Uml::Attribute::Create(ThreadPool::meta);

		Throughput::meta = ::Uml::Class::Create(meta);

		TimeProbe::meta = ::Uml::Class::Create(meta);

		TimerConnection::meta = ::Uml::Class::Create(meta);

		TimerEventSinkConn::meta = ::Uml::Class::Create(meta);

		TopLevelBehavior::meta = ::Uml::Class::Create(meta);

		TopLevelPackage::meta = ::Uml::Class::Create(meta);

		TopLevelPackageContainer::meta = ::Uml::Class::Create(meta);

		TopLevelPackages::meta = ::Uml::Class::Create(meta);
		TopLevelPackages::meta_name = ::Uml::Attribute::Create(TopLevelPackages::meta);

		Transition::meta = ::Uml::Class::Create(meta);

		TriggerBenchmarks::meta = ::Uml::Class::Create(meta);

		TwowayOperation::meta = ::Uml::Class::Create(meta);

		TypeEncoding::meta = ::Uml::Class::Create(meta);

		TypeKind::meta = ::Uml::Class::Create(meta);

		User::meta = ::Uml::Class::Create(meta);

		ValueObject::meta = ::Uml::Class::Create(meta);

		Variable::meta = ::Uml::Class::Create(meta);
		Variable::meta_InitialValue = ::Uml::Attribute::Create(Variable::meta);

		WhileState::meta = ::Uml::Class::Create(meta);

		WorkLoadOperationConnection::meta = ::Uml::Class::Create(meta);

		Worker::meta = ::Uml::Class::Create(meta);
		Worker::meta_Abstract = ::Uml::Attribute::Create(Worker::meta);

		WorkerFile::meta = ::Uml::Class::Create(meta);
		WorkerFile::meta_Location = ::Uml::Attribute::Create(WorkerFile::meta);

		WorkerLibraries::meta = ::Uml::Class::Create(meta);
		WorkerLibraries::meta_name = ::Uml::Attribute::Create(WorkerLibraries::meta);

		WorkerLibrary::meta = ::Uml::Class::Create(meta);
		WorkerLibrary::meta_Location = ::Uml::Attribute::Create(WorkerLibrary::meta);

		WorkerPackage::meta = ::Uml::Class::Create(meta);

		WorkerPackageBase::meta = ::Uml::Class::Create(meta);

		WorkerType::meta = ::Uml::Class::Create(meta);

		WorkloadCharacteristics::meta = ::Uml::Class::Create(meta);

		Workspaces::meta = ::Uml::Class::Create(meta);

		deliverTo::meta = ::Uml::Class::Create(meta);

		emit::meta = ::Uml::Class::Create(meta);

		eventServiceConfiguration::meta = ::Uml::Class::Create(meta);
		eventServiceConfiguration::meta_type = ::Uml::Attribute::Create(eventServiceConfiguration::meta);
		eventServiceConfiguration::meta_svc_cfg_file = ::Uml::Attribute::Create(eventServiceConfiguration::meta);
		eventServiceConfiguration::meta_node = ::Uml::Attribute::Create(eventServiceConfiguration::meta);
		eventServiceConfiguration::meta_configuration_id = ::Uml::Attribute::Create(eventServiceConfiguration::meta);

		invoke::meta = ::Uml::Class::Create(meta);

		package::meta = ::Uml::Class::Create(meta);

		publish::meta = ::Uml::Class::Create(meta);

	}

	void InitMeta() {
		// classes, with attributes, constraints and constraint definitions
		::Uml::InitClassProps(Action::meta, "Action", false, "Model", NULL);
		::Uml::InitAttributeProps(Action::meta_Duration, "Duration", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> Action_LogAction_dva;
		Action_LogAction_dva.push_back("false");
		::Uml::InitAttributeProps(Action::meta_LogAction, "LogAction", "Boolean", false, false, 1, 1, false, "public", Action_LogAction_dva);

		::Uml::InitClassProps(ActionBase::meta, "ActionBase", true, "Model", NULL);

		::Uml::InitClassProps(Aggregate::meta, "Aggregate", false, "Model", NULL);

		::Uml::InitClassProps(Alias::meta, "Alias", false, "Reference", NULL);

		::Uml::InitClassProps(ApplicationTask::meta, "ApplicationTask", false, "Atom", NULL);

		::Uml::InitClassProps(ArtifactContainer::meta, "ArtifactContainer", false, "Model", NULL);

		::Uml::InitClassProps(ArtifactDependency::meta, "ArtifactDependency", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactDependsOn::meta, "ArtifactDependsOn", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactDeployRequirement::meta, "ArtifactDeployRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactExecParameter::meta, "ArtifactExecParameter", false, "Connection", NULL);

		::Uml::InitClassProps(ArtifactInfoProperty::meta, "ArtifactInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyAccessConn::meta, "AssemblyAccessConn", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyConfigProperty::meta, "AssemblyConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyDeployRequirement::meta, "AssemblyDeployRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(AssemblyRule::meta, "AssemblyRule", false, "Atom", NULL);

		::Uml::InitClassProps(AssemblyRuleRef::meta, "AssemblyRuleRef", false, "Reference", NULL);

		::Uml::InitClassProps(AssemblyselectRequirement::meta, "AssemblyselectRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(Attribute::meta, "Attribute", false, "Model", NULL);

		::Uml::InitClassProps(AttributeDelegate::meta, "AttributeDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeManipulateConn::meta, "AttributeManipulateConn", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeMapping::meta, "AttributeMapping", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeMappingDelegate::meta, "AttributeMappingDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeMappingValue::meta, "AttributeMappingValue", false, "Connection", NULL);

		::Uml::InitClassProps(AttributeMember::meta, "AttributeMember", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeRef::meta, "AttributeRef", false, "Reference", NULL);

		::Uml::InitClassProps(AttributeValue::meta, "AttributeValue", false, "Connection", NULL);

		::Uml::InitClassProps(Average::meta, "Average", false, "Atom", NULL);

		::Uml::InitClassProps(BehaviorInputAction::meta, "BehaviorInputAction", true, "Model", NULL);

		::Uml::InitClassProps(BehaviorModel::meta, "BehaviorModel", true, "Model", NULL);

		::Uml::InitClassProps(BenchmarkAnalysis::meta, "BenchmarkAnalysis", false, "Model", NULL);

		::Uml::InitClassProps(BenchmarkCharacteristics::meta, "BenchmarkCharacteristics", false, "Connection", NULL);

		::Uml::InitClassProps(BenchmarkType::meta, "BenchmarkType", true, "FCO", NULL);

		::Uml::InitClassProps(Boolean::meta, "Boolean", false, "Atom", NULL);

		::Uml::InitClassProps(Boxed::meta, "Boxed", false, "Reference", NULL);

		::Uml::InitClassProps(BranchState::meta, "BranchState", false, "Atom", NULL);

		::Uml::InitClassProps(BranchTransition::meta, "BranchTransition", false, "Connection", NULL);
		::Uml::InitAttributeProps(BranchTransition::meta_Condition, "Condition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Bridge::meta, "Bridge", false, "Model", NULL);
		::Uml::InitAttributeProps(Bridge::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(BridgeConnection::meta, "BridgeConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Byte::meta, "Byte", false, "Atom", NULL);

		::Uml::InitClassProps(CIAOEvents::meta, "CIAOEvents", false, "Model", NULL);
		::Uml::InitAttributeProps(CIAOEvents::meta_id, "id", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Capability::meta, "Capability", false, "Model", NULL);

		::Uml::InitClassProps(Collection::meta, "Collection", false, "Reference", NULL);
		::Uml::InitAttributeProps(Collection::meta_bound, "bound", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(CollocationGroup::meta, "CollocationGroup", false, "Set", NULL);

		::Uml::InitClassProps(CollocationGroupMember::meta, "CollocationGroupMember", true, "FCO", NULL);

		::Uml::InitClassProps(CommonPortAttrs::meta, "CommonPortAttrs", true, "FCO", NULL);
		vector<string> CommonPortAttrs_exclusiveUser_dva;
		CommonPortAttrs_exclusiveUser_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_exclusiveUser, "exclusiveUser", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_exclusiveUser_dva);
		vector<string> CommonPortAttrs_exclusiveProvider_dva;
		CommonPortAttrs_exclusiveProvider_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_exclusiveProvider, "exclusiveProvider", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_exclusiveProvider_dva);
		vector<string> CommonPortAttrs_optional_dva;
		CommonPortAttrs_optional_dva.push_back("false");
		::Uml::InitAttributeProps(CommonPortAttrs::meta_optional, "optional", "Boolean", false, false, 1, 1, false, "public", CommonPortAttrs_optional_dva);

		::Uml::InitClassProps(CompRef::meta, "CompRef", false, "Reference", NULL);

		::Uml::InitClassProps(Component::meta, "Component", false, "Model", NULL);
		::Uml::InitAttributeProps(Component::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Component::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentAccessConn::meta, "ComponentAccessConn", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentAnalyses::meta, "ComponentAnalyses", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentAnalyses::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentAssembly::meta, "ComponentAssembly", false, "Model", NULL);

		::Uml::InitClassProps(ComponentAssemblyBase::meta, "ComponentAssemblyBase", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentAssemblyQoS::meta, "ComponentAssemblyQoS", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentAssemblyQoSCharacteristic::meta, "ComponentAssemblyQoSCharacteristic", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentAssemblyReference::meta, "ComponentAssemblyReference", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentAssemblySecurityQoS::meta, "ComponentAssemblySecurityQoS", false, "Model", NULL);

		::Uml::InitClassProps(ComponentBase::meta, "ComponentBase", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentBuild::meta, "ComponentBuild", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentBuild::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentConfigProperty::meta, "ComponentConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentContainer::meta, "ComponentContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactory::meta, "ComponentFactory", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactoryImplementationContainer::meta, "ComponentFactoryImplementationContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentFactoryImplementations::meta, "ComponentFactoryImplementations", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentFactoryImplementations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentFactoryInstance::meta, "ComponentFactoryInstance", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentFactoryRef::meta, "ComponentFactoryRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentImplementation::meta, "ComponentImplementation", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentImplementationArtifact::meta, "ComponentImplementationArtifact", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentImplementationContainer::meta, "ComponentImplementationContainer", false, "Model", NULL);

		::Uml::InitClassProps(ComponentImplementationReference::meta, "ComponentImplementationReference", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentImplementations::meta, "ComponentImplementations", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentImplementations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentInfoProperty::meta, "ComponentInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentLib::meta, "ComponentLib", true, "FCO", NULL);
		::Uml::InitAttributeProps(ComponentLib::meta_sharedname, "sharedname", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentLib::meta_ORBServices, "ORBServices", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentLib::meta_libraryexport, "libraryexport", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentOperation::meta, "ComponentOperation", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentPackage::meta, "ComponentPackage", false, "Atom", NULL);
		::Uml::InitAttributeProps(ComponentPackage::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackage::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentPackageReference::meta, "ComponentPackageReference", false, "Reference", NULL);
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredName, "requiredName", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredType, "requiredType", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ComponentPackageReference::meta_requiredUUID, "requiredUUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentPackages::meta, "ComponentPackages", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentPackages::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ComponentProperty::meta, "ComponentProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentPropertyDescription::meta, "ComponentPropertyDescription", false, "Model", NULL);

		::Uml::InitClassProps(ComponentQoS::meta, "ComponentQoS", false, "Connection", NULL);

		::Uml::InitClassProps(ComponentQoSCharacteristic::meta, "ComponentQoSCharacteristic", true, "FCO", NULL);

		::Uml::InitClassProps(ComponentRef::meta, "ComponentRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentRule::meta, "ComponentRule", false, "Atom", NULL);

		::Uml::InitClassProps(ComponentRuleRef::meta, "ComponentRuleRef", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentSecurityQoS::meta, "ComponentSecurityQoS", false, "Model", NULL);

		::Uml::InitClassProps(ComponentServantArtifact::meta, "ComponentServantArtifact", false, "Reference", NULL);

		::Uml::InitClassProps(ComponentTypes::meta, "ComponentTypes", false, "Folder", NULL);
		::Uml::InitAttributeProps(ComponentTypes::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConfigProperty::meta, "ConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(ConnectedComponent::meta, "ConnectedComponent", false, "Model", NULL);

		::Uml::InitClassProps(ConnectionQoSCharacteristic::meta, "ConnectionQoSCharacteristic", true, "FCO", NULL);

		::Uml::InitClassProps(Constant::meta, "Constant", false, "Reference", NULL);
		::Uml::InitAttributeProps(Constant::meta_value, "value", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ConstantType::meta, "ConstantType", true, "FCO", NULL);

		::Uml::InitClassProps(ConsumerBehavior::meta, "ConsumerBehavior", false, "Atom", NULL);
		vector<string> ConsumerBehavior_ECProxyPushConsumerCollectionSynch_dva;
		ConsumerBehavior_ECProxyPushConsumerCollectionSynch_dva.push_back("mt");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECProxyPushConsumerCollectionSynch, "ECProxyPushConsumerCollectionSynch", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECProxyPushConsumerCollectionSynch_dva);
		vector<string> ConsumerBehavior_ECConsumerControl_dva;
		ConsumerBehavior_ECConsumerControl_dva.push_back("null");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECConsumerControl, "ECConsumerControl", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECConsumerControl_dva);
		vector<string> ConsumerBehavior_ECConsumerLock_dva;
		ConsumerBehavior_ECConsumerLock_dva.push_back("thread");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECConsumerLock, "ECConsumerLock", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECConsumerLock_dva);
		vector<string> ConsumerBehavior_ECConsumerControlPeriod_dva;
		ConsumerBehavior_ECConsumerControlPeriod_dva.push_back("5000000");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECConsumerControlPeriod, "ECConsumerControlPeriod", "Integer", false, false, 1, 1, false, "public", ConsumerBehavior_ECConsumerControlPeriod_dva);
		vector<string> ConsumerBehavior_ECProxyPushConsumerCollectionFlag_dva;
		ConsumerBehavior_ECProxyPushConsumerCollectionFlag_dva.push_back("list");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECProxyPushConsumerCollectionFlag, "ECProxyPushConsumerCollectionFlag", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECProxyPushConsumerCollectionFlag_dva);
		vector<string> ConsumerBehavior_ECProxyPushConsumerCollectionIterator_dva;
		ConsumerBehavior_ECProxyPushConsumerCollectionIterator_dva.push_back("immediate");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECProxyPushConsumerCollectionIterator, "ECProxyPushConsumerCollectionIterator", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECProxyPushConsumerCollectionIterator_dva);
		vector<string> ConsumerBehavior_ECFiltering_dva;
		ConsumerBehavior_ECFiltering_dva.push_back("basic");
		::Uml::InitAttributeProps(ConsumerBehavior::meta_ECFiltering, "ECFiltering", "String", false, false, 1, 1, false, "public", ConsumerBehavior_ECFiltering_dva);

		::Uml::InitClassProps(CriticalPath::meta, "CriticalPath", false, "Connection", NULL);

		::Uml::InitClassProps(DataAnalysisBase::meta, "DataAnalysisBase", true, "FCO", NULL);

		::Uml::InitClassProps(DataType::meta, "DataType", false, "Reference", NULL);

		::Uml::InitClassProps(DeploymentPlan::meta, "DeploymentPlan", false, "Model", NULL);
		::Uml::InitAttributeProps(DeploymentPlan::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(DeploymentPlan::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(DeploymentPlanQoS::meta, "DeploymentPlanQoS", true, "FCO", NULL);

		::Uml::InitClassProps(DeploymentPlanRef::meta, "DeploymentPlanRef", false, "Reference", NULL);

		::Uml::InitClassProps(DeploymentPlans::meta, "DeploymentPlans", false, "Folder", NULL);
		::Uml::InitAttributeProps(DeploymentPlans::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Deploys::meta, "Deploys", false, "Connection", NULL);

		::Uml::InitClassProps(Destructible::meta, "Destructible", true, "FCO", NULL);
		vector<string> Destructible_Metric_dva;
		Destructible_Metric_dva.push_back("0.00");
		::Uml::InitAttributeProps(Destructible::meta_Metric, "Metric", "Real", false, false, 1, 1, false, "public", Destructible_Metric_dva);

		::Uml::InitClassProps(Discriminator::meta, "Discriminator", false, "Reference", NULL);

		::Uml::InitClassProps(DisplayNode::meta, "DisplayNode", false, "Atom", NULL);

		::Uml::InitClassProps(DoWhileState::meta, "DoWhileState", false, "Atom", NULL);

		::Uml::InitClassProps(Domain::meta, "Domain", false, "Model", NULL);
		::Uml::InitAttributeProps(Domain::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Domain::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(DomainRiskGrouping::meta, "DomainRiskGrouping", false, "Model", NULL);

		::Uml::InitClassProps(DomainRiskGroupingRef::meta, "DomainRiskGroupingRef", false, "Reference", NULL);

		::Uml::InitClassProps(DstEdge::meta, "DstEdge", false, "Connection", NULL);

		::Uml::InitClassProps(ECBehavior::meta, "ECBehavior", false, "Atom", NULL);
		::Uml::InitAttributeProps(ECBehavior::meta_DispatchingMultithreadingLevel, "DispatchingMultithreadingLevel", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> ECBehavior_MultithreadedSupplier_dva;
		ECBehavior_MultithreadedSupplier_dva.push_back("false");
		::Uml::InitAttributeProps(ECBehavior::meta_MultithreadedSupplier, "MultithreadedSupplier", "Boolean", false, false, 1, 1, false, "public", ECBehavior_MultithreadedSupplier_dva);
		vector<string> ECBehavior_MultithreadedConsumer_dva;
		ECBehavior_MultithreadedConsumer_dva.push_back("false");
		::Uml::InitAttributeProps(ECBehavior::meta_MultithreadedConsumer, "MultithreadedConsumer", "Boolean", false, false, 1, 1, false, "public", ECBehavior_MultithreadedConsumer_dva);
		vector<string> ECBehavior_DisconnectDanglingConnections_dva;
		ECBehavior_DisconnectDanglingConnections_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_DisconnectDanglingConnections, "DisconnectDanglingConnections", "Boolean", false, false, 1, 1, false, "public", ECBehavior_DisconnectDanglingConnections_dva);
		vector<string> ECBehavior_ConsumerBasedFiltering_dva;
		ECBehavior_ConsumerBasedFiltering_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_ConsumerBasedFiltering, "ConsumerBasedFiltering", "Boolean", false, false, 1, 1, false, "public", ECBehavior_ConsumerBasedFiltering_dva);
		vector<string> ECBehavior_SupplierBasedFiltering_dva;
		ECBehavior_SupplierBasedFiltering_dva.push_back("true");
		::Uml::InitAttributeProps(ECBehavior::meta_SupplierBasedFiltering, "SupplierBasedFiltering", "Boolean", false, false, 1, 1, false, "public", ECBehavior_SupplierBasedFiltering_dva);

		::Uml::InitClassProps(ECRequirements::meta, "ECRequirements", false, "Model", NULL);
		vector<string> ECRequirements_ConfigureRTQoS_dva;
		ECRequirements_ConfigureRTQoS_dva.push_back("true");
		::Uml::InitAttributeProps(ECRequirements::meta_ConfigureRTQoS, "ConfigureRTQoS", "Boolean", false, false, 1, 1, false, "public", ECRequirements_ConfigureRTQoS_dva);

		::Uml::InitClassProps(ECRole::meta, "ECRole", false, "Atom", NULL);
		vector<string> ECRole_ECFilterType_dva;
		ECRole_ECFilterType_dva.push_back("DISJUNCTION");
		::Uml::InitAttributeProps(ECRole::meta_ECFilterType, "ECFilterType", "String", false, false, 1, 1, false, "public", ECRole_ECFilterType_dva);
		vector<string> ECRole_rolekind_dva;
		ECRole_rolekind_dva.push_back("CONSUMER");
		::Uml::InitAttributeProps(ECRole::meta_rolekind, "rolekind", "String", false, false, 1, 1, false, "public", ECRole_rolekind_dva);

		::Uml::InitClassProps(Edge::meta, "Edge", false, "Atom", NULL);

		::Uml::InitClassProps(EdgeProperty::meta, "EdgeProperty", false, "Connection", NULL);

		::Uml::InitClassProps(Effect::meta, "Effect", false, "Connection", NULL);

		::Uml::InitClassProps(EffectBase::meta, "EffectBase", true, "Connection", NULL);
		::Uml::InitAttributeProps(EffectBase::meta_Postcondition, "Postcondition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Enum::meta, "Enum", false, "Model", NULL);

		::Uml::InitClassProps(EnumValue::meta, "EnumValue", false, "Atom", NULL);

		::Uml::InitClassProps(Environment::meta, "Environment", false, "Atom", NULL);

		::Uml::InitClassProps(EnvironmentConf::meta, "EnvironmentConf", false, "Atom", NULL);
		::Uml::InitAttributeProps(EnvironmentConf::meta_SvcConf, "SvcConf", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(EnvironmentConf::meta_CmdLineOptions, "CmdLineOptions", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Event::meta, "Event", false, "Model", NULL);

		::Uml::InitClassProps(EventChannelCommunicationPoint::meta, "EventChannelCommunicationPoint", false, "Atom", NULL);
		vector<string> EventChannelCommunicationPoint_udp_dva;
		EventChannelCommunicationPoint_udp_dva.push_back("false");
		::Uml::InitAttributeProps(EventChannelCommunicationPoint::meta_udp, "udp", "Boolean", false, false, 1, 1, false, "public", EventChannelCommunicationPoint_udp_dva);
		vector<string> EventChannelCommunicationPoint_is_multicast_dva;
		EventChannelCommunicationPoint_is_multicast_dva.push_back("false");
		::Uml::InitAttributeProps(EventChannelCommunicationPoint::meta_is_multicast, "is_multicast", "Boolean", false, false, 1, 1, false, "public", EventChannelCommunicationPoint_is_multicast_dva);
		::Uml::InitAttributeProps(EventChannelCommunicationPoint::meta_port, "port", "Integer", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(EventChannelCommunicationPoint::meta_address, "address", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(EventChannelFactory::meta, "EventChannelFactory", false, "Atom", NULL);
		vector<string> EventChannelFactory_ECDispatchingThreads_dva;
		EventChannelFactory_ECDispatchingThreads_dva.push_back("1");
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECDispatchingThreads, "ECDispatchingThreads", "Integer", false, false, 1, 1, false, "public", EventChannelFactory_ECDispatchingThreads_dva);
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECUseORBId, "ECUseORBId", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> EventChannelFactory_ECTimeout_dva;
		EventChannelFactory_ECTimeout_dva.push_back("reactive");
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECTimeout, "ECTimeout", "String", false, false, 1, 1, false, "public", EventChannelFactory_ECTimeout_dva);
		vector<string> EventChannelFactory_ECDispatching_dva;
		EventChannelFactory_ECDispatching_dva.push_back("reactive");
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECDispatching, "ECDispatching", "String", false, false, 1, 1, false, "public", EventChannelFactory_ECDispatching_dva);
		vector<string> EventChannelFactory_ECObserver_dva;
		EventChannelFactory_ECObserver_dva.push_back("null");
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECObserver, "ECObserver", "String", false, false, 1, 1, false, "public", EventChannelFactory_ECObserver_dva);
		vector<string> EventChannelFactory_ECScheduling_dva;
		EventChannelFactory_ECScheduling_dva.push_back("null");
		::Uml::InitAttributeProps(EventChannelFactory::meta_ECScheduling, "ECScheduling", "String", false, false, 1, 1, false, "public", EventChannelFactory_ECScheduling_dva);

		::Uml::InitClassProps(EventRef::meta, "EventRef", false, "Reference", NULL);

		::Uml::InitClassProps(EventSinkDelegate::meta, "EventSinkDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(EventSinkPublish::meta, "EventSinkPublish", false, "Connection", NULL);

		::Uml::InitClassProps(EventSource::meta, "EventSource", false, "Atom", NULL);

		::Uml::InitClassProps(EventSourceDelegate::meta, "EventSourceDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(EventSourcePort::meta, "EventSourcePort", false, "Reference", NULL);

		::Uml::InitClassProps(EventSourcePublish::meta, "EventSourcePublish", false, "Connection", NULL);

		::Uml::InitClassProps(Exception::meta, "Exception", false, "Model", NULL);

		::Uml::InitClassProps(ExceptionRef::meta, "ExceptionRef", false, "Reference", NULL);

		::Uml::InitClassProps(ExecutorProject::meta, "ExecutorProject", false, "Model", NULL);

		::Uml::InitClassProps(ExtResourceConn::meta, "ExtResourceConn", false, "Connection", NULL);

		::Uml::InitClassProps(ExternalDelegate::meta, "ExternalDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(ExternalPortReference::meta, "ExternalPortReference", false, "Reference", NULL);
		::Uml::InitAttributeProps(ExternalPortReference::meta_location, "location", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ExternalPortReference::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ExternalPortReferenceType::meta, "ExternalPortReferenceType", true, "FCO", NULL);

		::Uml::InitClassProps(ExternalResources::meta, "ExternalResources", false, "Reference", NULL);

		::Uml::InitClassProps(FTDeployDepends::meta, "FTDeployDepends", false, "Connection", NULL);

		::Uml::InitClassProps(FTDeployment::meta, "FTDeployment", false, "Model", NULL);

		::Uml::InitClassProps(FTMonitorable::meta, "FTMonitorable", true, "FCO", NULL);

		::Uml::InitClassProps(FacetDelegate::meta, "FacetDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(FacetInvoke::meta, "FacetInvoke", false, "Connection", NULL);

		::Uml::InitClassProps(FactoryOperation::meta, "FactoryOperation", false, "Model", NULL);

		::Uml::InitClassProps(FailOverUnit::meta, "FailOverUnit", false, "Model", NULL);
		vector<string> FailOverUnit_Replica_dva;
		FailOverUnit_Replica_dva.push_back("0");
		::Uml::InitAttributeProps(FailOverUnit::meta_Replica, "Replica", "Integer", false, false, 1, 1, false, "public", FailOverUnit_Replica_dva);

		::Uml::InitClassProps(File::meta, "File", false, "Model", NULL);
		::Uml::InitAttributeProps(File::meta_path, "path", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(FileRef::meta, "FileRef", false, "Reference", NULL);

		::Uml::InitClassProps(Filter::meta, "Filter", false, "Model", NULL);
		::Uml::InitAttributeProps(Filter::meta_filter_id, "filter_id", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> Filter_filter_type_dva;
		Filter_filter_type_dva.push_back("DISJUNCTION");
		::Uml::InitAttributeProps(Filter::meta_filter_type, "filter_type", "String", false, false, 1, 1, false, "public", Filter_filter_type_dva);

		::Uml::InitClassProps(Finish::meta, "Finish", false, "Connection", NULL);

		::Uml::InitClassProps(FixedIterationBenchmarks::meta, "FixedIterationBenchmarks", false, "Atom", NULL);
		::Uml::InitAttributeProps(FixedIterationBenchmarks::meta_benchmarkIterations, "benchmarkIterations", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ForState::meta, "ForState", false, "Atom", NULL);
		::Uml::InitAttributeProps(ForState::meta_InitialCondition, "InitialCondition", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ForState::meta_IncrementExpr, "IncrementExpr", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(GenericObject::meta, "GenericObject", false, "Atom", NULL);

		::Uml::InitClassProps(GenericValue::meta, "GenericValue", false, "Atom", NULL);

		::Uml::InitClassProps(GenericValueObject::meta, "GenericValueObject", false, "Atom", NULL);

		::Uml::InitClassProps(GetException::meta, "GetException", false, "Reference", NULL);

		::Uml::InitClassProps(GrantedRights::meta, "GrantedRights", false, "Atom", NULL);

		::Uml::InitClassProps(GraphVertex::meta, "GraphVertex", true, "FCO", NULL);

		::Uml::InitClassProps(Group::meta, "Group", false, "Model", NULL);

		::Uml::InitClassProps(HasExceptions::meta, "HasExceptions", true, "Model", NULL);

		::Uml::InitClassProps(HasOperations::meta, "HasOperations", true, "Model", NULL);

		::Uml::InitClassProps(HostReference::meta, "HostReference", false, "Reference", NULL);

		::Uml::InitClassProps(Implemenation::meta, "Implemenation", true, "FCO", NULL);
		::Uml::InitAttributeProps(Implemenation::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Implemenation::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Implementation::meta, "Implementation", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationArtifact::meta, "ImplementationArtifact", false, "Atom", NULL);
		vector<string> ImplementationArtifact_artifactVersion_dva;
		ImplementationArtifact_artifactVersion_dva.push_back("0.0.0.0");
		::Uml::InitAttributeProps(ImplementationArtifact::meta_artifactVersion, "artifactVersion", "String", false, false, 1, 1, false, "public", ImplementationArtifact_artifactVersion_dva);
		::Uml::InitAttributeProps(ImplementationArtifact::meta_architecture, "architecture", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_configuration, "configuration", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_operatingSystem, "operatingSystem", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_location, "location", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationArtifact::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationArtifactReference::meta, "ImplementationArtifactReference", false, "Reference", NULL);

		::Uml::InitClassProps(ImplementationArtifacts::meta, "ImplementationArtifacts", false, "Folder", NULL);
		::Uml::InitAttributeProps(ImplementationArtifacts::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationCapability::meta, "ImplementationCapability", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationContainer::meta, "ImplementationContainer", true, "Model", NULL);

		::Uml::InitClassProps(ImplementationDependency::meta, "ImplementationDependency", false, "Atom", NULL);
		::Uml::InitAttributeProps(ImplementationDependency::meta_requiredType, "requiredType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(ImplementationDependsOn::meta, "ImplementationDependsOn", false, "Connection", NULL);

		::Uml::InitClassProps(ImplementationRequirement::meta, "ImplementationRequirement", false, "Model", NULL);
		vector<string> ImplementationRequirement_ResourceUsageKind_dva;
		ImplementationRequirement_ResourceUsageKind_dva.push_back("None");
		::Uml::InitAttributeProps(ImplementationRequirement::meta_ResourceUsageKind, "ResourceUsageKind", "String", false, false, 1, 1, false, "public", ImplementationRequirement_ResourceUsageKind_dva);
		::Uml::InitAttributeProps(ImplementationRequirement::meta_resourcePort, "resourcePort", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(ImplementationRequirement::meta_componentPort, "componentPort", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Implements::meta, "Implements", false, "Connection", NULL);

		::Uml::InitClassProps(InEventPort::meta, "InEventPort", false, "Reference", NULL);

		::Uml::InitClassProps(InParameter::meta, "InParameter", false, "Reference", NULL);

		::Uml::InitClassProps(InfoProperty::meta, "InfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(Inheritable::meta, "Inheritable", true, "Model", NULL);

		::Uml::InitClassProps(Inherits::meta, "Inherits", false, "Reference", NULL);

		::Uml::InitClassProps(InitiatorRoleRef::meta, "InitiatorRoleRef", false, "Reference", NULL);

		::Uml::InitClassProps(InoutParameter::meta, "InoutParameter", false, "Reference", NULL);

		::Uml::InitClassProps(Input::meta, "Input", false, "Connection", NULL);

		::Uml::InitClassProps(InputAction::meta, "InputAction", false, "Model", NULL);

		::Uml::InitClassProps(InputEffect::meta, "InputEffect", false, "Connection", NULL);

		::Uml::InitClassProps(InstanceMapping::meta, "InstanceMapping", false, "Connection", NULL);

		::Uml::InitClassProps(Interconnect::meta, "Interconnect", false, "Model", NULL);
		::Uml::InitAttributeProps(Interconnect::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(InterconnectConnection::meta, "InterconnectConnection", false, "Connection", NULL);

		::Uml::InitClassProps(InterfaceClassificationConn::meta, "InterfaceClassificationConn", false, "Connection", NULL);

		::Uml::InitClassProps(InterfaceDefinitions::meta, "InterfaceDefinitions", false, "Folder", NULL);
		::Uml::InitAttributeProps(InterfaceDefinitions::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(InvokePortBase::meta, "InvokePortBase", true, "FCO", NULL);

		::Uml::InitClassProps(Jitter::meta, "Jitter", false, "Atom", NULL);

		::Uml::InitClassProps(Label::meta, "Label", false, "Atom", NULL);

		::Uml::InitClassProps(LabelConnection::meta, "LabelConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Lane::meta, "Lane", false, "Atom", NULL);
		vector<string> Lane_lane_priority_dva;
		Lane_lane_priority_dva.push_back("0");
		::Uml::InitAttributeProps(Lane::meta_lane_priority, "lane_priority", "Integer", false, false, 1, 1, false, "public", Lane_lane_priority_dva);
		vector<string> Lane_static_threads_dva;
		Lane_static_threads_dva.push_back("1");
		::Uml::InitAttributeProps(Lane::meta_static_threads, "static_threads", "Integer", false, false, 1, 1, false, "public", Lane_static_threads_dva);
		vector<string> Lane_dynamic_threads_dva;
		Lane_dynamic_threads_dva.push_back("0");
		::Uml::InitAttributeProps(Lane::meta_dynamic_threads, "dynamic_threads", "Integer", false, false, 1, 1, false, "public", Lane_dynamic_threads_dva);

		::Uml::InitClassProps(LanePerThreadPool::meta, "LanePerThreadPool", false, "Connection", NULL);

		::Uml::InitClassProps(Latency::meta, "Latency", false, "Model", NULL);

		::Uml::InitClassProps(LongInteger::meta, "LongInteger", false, "Atom", NULL);

		::Uml::InitClassProps(LookupKey::meta, "LookupKey", false, "Reference", NULL);

		::Uml::InitClassProps(LookupOperation::meta, "LookupOperation", false, "Model", NULL);

		::Uml::InitClassProps(LoopState::meta, "LoopState", true, "Atom", NULL);
		::Uml::InitAttributeProps(LoopState::meta_LoopingCondition, "LoopingCondition", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(LoopTransition::meta, "LoopTransition", false, "Connection", NULL);

		::Uml::InitClassProps(MPC::meta, "MPC", false, "Model", NULL);

		::Uml::InitClassProps(MakeMemberPrivate::meta, "MakeMemberPrivate", false, "Connection", NULL);

		::Uml::InitClassProps(Manageable::meta, "Manageable", true, "FCO", NULL);

		::Uml::InitClassProps(ManagesComponent::meta, "ManagesComponent", false, "Connection", NULL);

		::Uml::InitClassProps(Maximum::meta, "Maximum", false, "Atom", NULL);

		::Uml::InitClassProps(Member::meta, "Member", false, "Reference", NULL);

		::Uml::InitClassProps(MemberType::meta, "MemberType", true, "FCO", NULL);

		::Uml::InitClassProps(MetricConnection::meta, "MetricConnection", false, "Connection", NULL);

		::Uml::InitClassProps(MetricsBase::meta, "MetricsBase", true, "Model", NULL);
		vector<string> MetricsBase_rate_dva;
		MetricsBase_rate_dva.push_back("-1");
		::Uml::InitAttributeProps(MetricsBase::meta_rate, "rate", "Integer", false, false, 1, 1, false, "public", MetricsBase_rate_dva);
		vector<string> MetricsBase_resolution_dva;
		MetricsBase_resolution_dva.push_back("microseconds");
		::Uml::InitAttributeProps(MetricsBase::meta_resolution, "resolution", "String", false, false, 1, 1, false, "public", MetricsBase_resolution_dva);
		vector<string> MetricsBase_priority_dva;
		MetricsBase_priority_dva.push_back("-1");
		::Uml::InitAttributeProps(MetricsBase::meta_priority, "priority", "Integer", false, false, 1, 1, false, "public", MetricsBase_priority_dva);
		::Uml::InitAttributeProps(MetricsBase::meta_iterations, "iterations", "Integer", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MetricsBase::meta_warmup, "warmup", "Integer", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MetricsBase::meta_fileName, "fileName", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(MgaObject::meta, "MgaObject", true, NULL, NULL);
		::Uml::InitAttributeProps(MgaObject::meta_position, "position", "String", false, false, 0, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(MgaObject::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Minimum::meta, "Minimum", false, "Atom", NULL);

		::Uml::InitClassProps(MonitorableGroupAssociation::meta, "MonitorableGroupAssociation", false, "Connection", NULL);

		::Uml::InitClassProps(MonolithDeployRequirement::meta, "MonolithDeployRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(MonolithExecParameter::meta, "MonolithExecParameter", false, "Connection", NULL);

		::Uml::InitClassProps(MonolithicImplementation::meta, "MonolithicImplementation", false, "Atom", NULL);
		vector<string> MonolithicImplementation_defaultVersion_dva;
		MonolithicImplementation_defaultVersion_dva.push_back("0.0.0.0");
		::Uml::InitAttributeProps(MonolithicImplementation::meta_defaultVersion, "defaultVersion", "String", false, false, 1, 1, false, "public", MonolithicImplementation_defaultVersion_dva);

		::Uml::InitClassProps(MonolithicImplementationBase::meta, "MonolithicImplementationBase", true, "FCO", NULL);

		::Uml::InitClassProps(MonolithprimaryArtifact::meta, "MonolithprimaryArtifact", false, "Connection", NULL);

		::Uml::InitClassProps(MultiInput::meta, "MultiInput", false, "Connection", NULL);

		::Uml::InitClassProps(MultiInputAction::meta, "MultiInputAction", false, "Model", NULL);

		::Uml::InitClassProps(MultiInputBase::meta, "MultiInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(MultiOutputBase::meta, "MultiOutputBase", true, "FCO", NULL);

		::Uml::InitClassProps(MultipleServiceRequests::meta, "MultipleServiceRequests", false, "Atom", NULL);
		vector<string> MultipleServiceRequests_buffer_service_requests_dva;
		MultipleServiceRequests_buffer_service_requests_dva.push_back("true");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_buffer_service_requests, "buffer_service_requests", "Boolean", false, false, 1, 1, false, "public", MultipleServiceRequests_buffer_service_requests_dva);
		vector<string> MultipleServiceRequests_maximum_simultaneous_service_level_dva;
		MultipleServiceRequests_maximum_simultaneous_service_level_dva.push_back("127");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_maximum_simultaneous_service_level, "maximum_simultaneous_service_level", "Integer", false, false, 1, 1, false, "public", MultipleServiceRequests_maximum_simultaneous_service_level_dva);
		vector<string> MultipleServiceRequests_simultaneous_service_execution_dva;
		MultipleServiceRequests_simultaneous_service_execution_dva.push_back("true");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_simultaneous_service_execution, "simultaneous_service_execution", "Boolean", false, false, 1, 1, false, "public", MultipleServiceRequests_simultaneous_service_execution_dva);
		vector<string> MultipleServiceRequests_minimum_simultaneous_service_level_dva;
		MultipleServiceRequests_minimum_simultaneous_service_level_dva.push_back("2");
		::Uml::InitAttributeProps(MultipleServiceRequests::meta_minimum_simultaneous_service_level, "minimum_simultaneous_service_level", "Integer", false, false, 1, 1, false, "public", MultipleServiceRequests_minimum_simultaneous_service_level_dva);

		::Uml::InitClassProps(NamedType::meta, "NamedType", true, "FCO", NULL);

		::Uml::InitClassProps(NetQoS::meta, "NetQoS", false, "Atom", NULL);
		::Uml::InitAttributeProps(NetQoS::meta_fwdBW, "fwdBW", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> NetQoS_quality_dva;
		NetQoS_quality_dva.push_back("BEST_EFFORT");
		::Uml::InitAttributeProps(NetQoS::meta_quality, "quality", "String", false, false, 1, 1, false, "public", NetQoS_quality_dva);
		::Uml::InitAttributeProps(NetQoS::meta_revBW, "revBW", "Integer", false, false, 1, 1, false, "public", vector<string>());
		vector<string> NetQoS_admissionPriority_dva;
		NetQoS_admissionPriority_dva.push_back("NORMAL");
		::Uml::InitAttributeProps(NetQoS::meta_admissionPriority, "admissionPriority", "String", false, false, 1, 1, false, "public", NetQoS_admissionPriority_dva);
		::Uml::InitAttributeProps(NetQoS::meta_custom, "custom", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> NetQoS_NetPriorityModel_dva;
		NetQoS_NetPriorityModel_dva.push_back("CLIENT_PROPAGATED");
		::Uml::InitAttributeProps(NetQoS::meta_NetPriorityModel, "NetPriorityModel", "String", false, false, 1, 1, false, "public", NetQoS_NetPriorityModel_dva);
		vector<string> NetQoS_rev_quality_dva;
		NetQoS_rev_quality_dva.push_back("BEST_EFFORT");
		::Uml::InitAttributeProps(NetQoS::meta_rev_quality, "rev_quality", "String", false, false, 1, 1, false, "public", NetQoS_rev_quality_dva);

		::Uml::InitClassProps(NoInheritable::meta, "NoInheritable", true, "FCO", NULL);

		::Uml::InitClassProps(Node::meta, "Node", false, "Model", NULL);
		::Uml::InitAttributeProps(Node::meta_operatingSystem, "operatingSystem", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Node::meta_architecture, "architecture", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Node::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(NodeReference::meta, "NodeReference", false, "Reference", NULL);

		::Uml::InitClassProps(Object::meta, "Object", false, "Model", NULL);
		vector<string> Object_abstract_dva;
		Object_abstract_dva.push_back("false");
		::Uml::InitAttributeProps(Object::meta_abstract, "abstract", "Boolean", false, false, 1, 1, false, "public", Object_abstract_dva);
		vector<string> Object_local_dva;
		Object_local_dva.push_back("false");
		::Uml::InitAttributeProps(Object::meta_local, "local", "Boolean", false, false, 1, 1, false, "public", Object_local_dva);

		::Uml::InitClassProps(ObjectAccessConn::meta, "ObjectAccessConn", false, "Connection", NULL);

		::Uml::InitClassProps(ObjectByValue::meta, "ObjectByValue", true, "Model", NULL);
		vector<string> ObjectByValue_abstract_dva;
		ObjectByValue_abstract_dva.push_back("false");
		::Uml::InitAttributeProps(ObjectByValue::meta_abstract, "abstract", "Boolean", false, false, 1, 1, false, "public", ObjectByValue_abstract_dva);

		::Uml::InitClassProps(OnAssemblyConn::meta, "OnAssemblyConn", false, "Connection", NULL);

		::Uml::InitClassProps(OnComponentConn::meta, "OnComponentConn", false, "Connection", NULL);

		::Uml::InitClassProps(OnInterfaceConn::meta, "OnInterfaceConn", false, "Connection", NULL);

		::Uml::InitClassProps(OnewayOperation::meta, "OnewayOperation", false, "Model", NULL);

		::Uml::InitClassProps(OperationBase::meta, "OperationBase", true, "Model", NULL);

		::Uml::InitClassProps(OperationClassificationConn::meta, "OperationClassificationConn", false, "Connection", NULL);

		::Uml::InitClassProps(OperationInvokeConn::meta, "OperationInvokeConn", false, "Connection", NULL);

		::Uml::InitClassProps(OperationRef::meta, "OperationRef", false, "Reference", NULL);

		::Uml::InitClassProps(OperationSet::meta, "OperationSet", false, "Model", NULL);

		::Uml::InitClassProps(OutEventPort::meta, "OutEventPort", false, "Reference", NULL);
		vector<string> OutEventPort_single_destination_dva;
		OutEventPort_single_destination_dva.push_back("false");
		::Uml::InitAttributeProps(OutEventPort::meta_single_destination, "single_destination", "Boolean", false, false, 1, 1, false, "public", OutEventPort_single_destination_dva);
		vector<string> OutEventPort_out_event_port_type_dva;
		OutEventPort_out_event_port_type_dva.push_back("DirectConnect");
		::Uml::InitAttributeProps(OutEventPort::meta_out_event_port_type, "out_event_port_type", "String", false, false, 1, 1, false, "public", OutEventPort_out_event_port_type_dva);

		::Uml::InitClassProps(OutParameter::meta, "OutParameter", false, "Reference", NULL);

		::Uml::InitClassProps(OutputAction::meta, "OutputAction", false, "Model", NULL);

		::Uml::InitClassProps(Package::meta, "Package", false, "Model", NULL);

		::Uml::InitClassProps(PackageConfBasePackage::meta, "PackageConfBasePackage", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfConfigProperty::meta, "PackageConfConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfReference::meta, "PackageConfReference", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfSelectRequirement::meta, "PackageConfSelectRequirement", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfSpecializedConfig::meta, "PackageConfSpecializedConfig", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfigProperty::meta, "PackageConfigProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageConfiguration::meta, "PackageConfiguration", false, "Atom", NULL);
		::Uml::InitAttributeProps(PackageConfiguration::meta_label, "label", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(PackageConfiguration::meta_UUID, "UUID", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PackageConfigurationContainer::meta, "PackageConfigurationContainer", false, "Model", NULL);

		::Uml::InitClassProps(PackageConfigurationReference::meta, "PackageConfigurationReference", false, "Reference", NULL);

		::Uml::InitClassProps(PackageConfigurations::meta, "PackageConfigurations", false, "Folder", NULL);
		::Uml::InitAttributeProps(PackageConfigurations::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PackageContainer::meta, "PackageContainer", false, "Model", NULL);

		::Uml::InitClassProps(PackageInfoProperty::meta, "PackageInfoProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PackageInterface::meta, "PackageInterface", false, "Connection", NULL);

		::Uml::InitClassProps(ParameterType::meta, "ParameterType", true, "Reference", NULL);

		::Uml::InitClassProps(Path::meta, "Path", false, "Model", NULL);

		::Uml::InitClassProps(PathDiagrams::meta, "PathDiagrams", false, "Folder", NULL);
		::Uml::InitAttributeProps(PathDiagrams::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PathProperty::meta, "PathProperty", false, "Connection", NULL);

		::Uml::InitClassProps(PathRef::meta, "PathRef", false, "Reference", NULL);

		::Uml::InitClassProps(PathReference::meta, "PathReference", false, "Reference", NULL);

		::Uml::InitClassProps(Paths::meta, "Paths", false, "Model", NULL);

		::Uml::InitClassProps(PeriodicBenchmarks::meta, "PeriodicBenchmarks", false, "Atom", NULL);
		::Uml::InitAttributeProps(PeriodicBenchmarks::meta_timeperiod, "timeperiod", "Integer", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PeriodicEvent::meta, "PeriodicEvent", false, "Atom", NULL);
		vector<string> PeriodicEvent_Hertz_dva;
		PeriodicEvent_Hertz_dva.push_back("10");
		::Uml::InitAttributeProps(PeriodicEvent::meta_Hertz, "Hertz", "String", false, false, 1, 1, false, "public", PeriodicEvent_Hertz_dva);
		vector<string> PeriodicEvent_Distribution_dva;
		PeriodicEvent_Distribution_dva.push_back("Constant");
		::Uml::InitAttributeProps(PeriodicEvent::meta_Distribution, "Distribution", "String", false, false, 1, 1, false, "public", PeriodicEvent_Distribution_dva);

		::Uml::InitClassProps(Policy::meta, "Policy", false, "Model", NULL);

		::Uml::InitClassProps(PolicyPerThreadPool::meta, "PolicyPerThreadPool", false, "Connection", NULL);

		::Uml::InitClassProps(PolicySet::meta, "PolicySet", false, "Model", NULL);

		::Uml::InitClassProps(Port::meta, "Port", true, "FCO", NULL);

		::Uml::InitClassProps(PortQoS::meta, "PortQoS", false, "Connection", NULL);

		::Uml::InitClassProps(PortQoSCharacteristic::meta, "PortQoSCharacteristic", true, "FCO", NULL);

		::Uml::InitClassProps(PortRule::meta, "PortRule", false, "Atom", NULL);

		::Uml::InitClassProps(PortRuleRef::meta, "PortRuleRef", false, "Reference", NULL);

		::Uml::InitClassProps(PortSecurityQoS::meta, "PortSecurityQoS", false, "Model", NULL);

		::Uml::InitClassProps(PredefinedType::meta, "PredefinedType", true, "FCO", NULL);

		::Uml::InitClassProps(PredefinedTypes::meta, "PredefinedTypes", false, "Folder", NULL);
		::Uml::InitAttributeProps(PredefinedTypes::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Prefixable::meta, "Prefixable", true, "Model", NULL);
		::Uml::InitAttributeProps(Prefixable::meta_PrefixTag, "PrefixTag", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(PriorityBands::meta, "PriorityBands", false, "Atom", NULL);
		vector<string> PriorityBands_high_dva;
		PriorityBands_high_dva.push_back("0");
		::Uml::InitAttributeProps(PriorityBands::meta_high, "high", "Integer", false, false, 1, 1, false, "public", PriorityBands_high_dva);
		vector<string> PriorityBands_low_dva;
		PriorityBands_low_dva.push_back("0");
		::Uml::InitAttributeProps(PriorityBands::meta_low, "low", "Integer", false, false, 1, 1, false, "public", PriorityBands_low_dva);

		::Uml::InitClassProps(PriorityModelPolicy::meta, "PriorityModelPolicy", false, "Atom", NULL);
		vector<string> PriorityModelPolicy_priority_value_dva;
		PriorityModelPolicy_priority_value_dva.push_back("0");
		::Uml::InitAttributeProps(PriorityModelPolicy::meta_priority_value, "priority_value", "Integer", false, false, 1, 1, false, "public", PriorityModelPolicy_priority_value_dva);
		vector<string> PriorityModelPolicy_priority_model_dva;
		PriorityModelPolicy_priority_model_dva.push_back("CLIENT_PROPAGATED");
		::Uml::InitAttributeProps(PriorityModelPolicy::meta_priority_model, "priority_model", "String", false, false, 1, 1, false, "public", PriorityModelPolicy_priority_model_dva);

		::Uml::InitClassProps(PrivateFlag::meta, "PrivateFlag", false, "Atom", NULL);

		::Uml::InitClassProps(Project::meta, "Project", false, "Model", NULL);

		::Uml::InitClassProps(Property::meta, "Property", false, "Model", NULL);
		::Uml::InitAttributeProps(Property::meta_DataValue, "DataValue", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Provideable::meta, "Provideable", true, "FCO", NULL);

		::Uml::InitClassProps(ProvidedRequestPort::meta, "ProvidedRequestPort", false, "Reference", NULL);

		::Uml::InitClassProps(PublishConnector::meta, "PublishConnector", false, "Atom", NULL);

		::Uml::InitClassProps(QoSCharRef::meta, "QoSCharRef", false, "Reference", NULL);

		::Uml::InitClassProps(QoSCharacteristicBase::meta, "QoSCharacteristicBase", true, "FCO", NULL);

		::Uml::InitClassProps(QoSConnector::meta, "QoSConnector", false, "Atom", NULL);

		::Uml::InitClassProps(QoSReq::meta, "QoSReq", false, "Connection", NULL);

		::Uml::InitClassProps(QueryAction::meta, "QueryAction", false, "Model", NULL);

		::Uml::InitClassProps(QueryInput::meta, "QueryInput", false, "Connection", NULL);

		::Uml::InitClassProps(QueryInputAction::meta, "QueryInputAction", false, "Model", NULL);

		::Uml::InitClassProps(QueryInputBase::meta, "QueryInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(RBAC::meta, "RBAC", false, "Model", NULL);

		::Uml::InitClassProps(RTRequirements::meta, "RTRequirements", false, "Model", NULL);

		::Uml::InitClassProps(ReadonlyAttribute::meta, "ReadonlyAttribute", false, "Model", NULL);

		::Uml::InitClassProps(RealNumber::meta, "RealNumber", false, "Atom", NULL);

		::Uml::InitClassProps(RealTimeConfiguration::meta, "RealTimeConfiguration", false, "Model", NULL);

		::Uml::InitClassProps(Realm::meta, "Realm", false, "Model", NULL);

		::Uml::InitClassProps(ReceiverConnection::meta, "ReceiverConnection", false, "Connection", NULL);

		::Uml::InitClassProps(RecepInvoke::meta, "RecepInvoke", false, "Connection", NULL);

		::Uml::InitClassProps(ReceptacleDelegate::meta, "ReceptacleDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(RepicaGroupConfiguration::meta, "RepicaGroupConfiguration", false, "Model", NULL);
		vector<string> RepicaGroupConfiguration_ReplicationStyle_dva;
		RepicaGroupConfiguration_ReplicationStyle_dva.push_back("Active");
		::Uml::InitAttributeProps(RepicaGroupConfiguration::meta_ReplicationStyle, "ReplicationStyle", "String", false, false, 1, 1, false, "public", RepicaGroupConfiguration_ReplicationStyle_dva);

		::Uml::InitClassProps(RequiredRequestPort::meta, "RequiredRequestPort", false, "Reference", NULL);
		vector<string> RequiredRequestPort_multiple_connections_dva;
		RequiredRequestPort_multiple_connections_dva.push_back("false");
		::Uml::InitAttributeProps(RequiredRequestPort::meta_multiple_connections, "multiple_connections", "Boolean", false, false, 1, 1, false, "public", RequiredRequestPort_multiple_connections_dva);

		::Uml::InitClassProps(RequiredRights::meta, "RequiredRights", false, "Atom", NULL);
		vector<string> RequiredRights_combinator_dva;
		RequiredRights_combinator_dva.push_back("All");
		::Uml::InitAttributeProps(RequiredRights::meta_combinator, "combinator", "String", false, false, 1, 1, false, "public", RequiredRights_combinator_dva);

		::Uml::InitClassProps(Requirement::meta, "Requirement", false, "Model", NULL);

		::Uml::InitClassProps(RequirementBase::meta, "RequirementBase", true, "Model", NULL);
		::Uml::InitAttributeProps(RequirementBase::meta_resourceType, "resourceType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(RequirementSatisfier::meta, "RequirementSatisfier", true, "Model", NULL);
		::Uml::InitAttributeProps(RequirementSatisfier::meta_resourceType, "resourceType", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Resource::meta, "Resource", false, "Model", NULL);

		::Uml::InitClassProps(ResourceActionBase::meta, "ResourceActionBase", true, "FCO", NULL);

		::Uml::InitClassProps(ReturnType::meta, "ReturnType", false, "Reference", NULL);

		::Uml::InitClassProps(Rights::meta, "Rights", true, "FCO", NULL);
		vector<string> Rights_get_dva;
		Rights_get_dva.push_back("false");
		::Uml::InitAttributeProps(Rights::meta_get, "get", "Boolean", false, false, 1, 1, false, "public", Rights_get_dva);
		vector<string> Rights_family_dva;
		Rights_family_dva.push_back("corba");
		::Uml::InitAttributeProps(Rights::meta_family, "family", "String", false, false, 1, 1, false, "public", Rights_family_dva);
		vector<string> Rights_set_dva;
		Rights_set_dva.push_back("false");
		::Uml::InitAttributeProps(Rights::meta_set, "set", "Boolean", false, false, 1, 1, false, "public", Rights_set_dva);
		vector<string> Rights_use_dva;
		Rights_use_dva.push_back("false");
		::Uml::InitAttributeProps(Rights::meta_use, "use", "Boolean", false, false, 1, 1, false, "public", Rights_use_dva);
		vector<string> Rights_manage_dva;
		Rights_manage_dva.push_back("false");
		::Uml::InitAttributeProps(Rights::meta_manage, "manage", "Boolean", false, false, 1, 1, false, "public", Rights_manage_dva);

		::Uml::InitClassProps(RightsAssignmentConn::meta, "RightsAssignmentConn", false, "Connection", NULL);

		::Uml::InitClassProps(Role::meta, "Role", false, "Atom", NULL);

		::Uml::InitClassProps(RoleAssignmentConn::meta, "RoleAssignmentConn", false, "Connection", NULL);

		::Uml::InitClassProps(RootFolder::meta, "RootFolder", false, "Folder", NULL);
		::Uml::InitAttributeProps(RootFolder::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(RootRiskAssociation::meta, "RootRiskAssociation", false, "Connection", NULL);

		::Uml::InitClassProps(RootRiskGroup::meta, "RootRiskGroup", false, "Model", NULL);

		::Uml::InitClassProps(RuleBase::meta, "RuleBase", true, "FCO", NULL);
		vector<string> RuleBase_allow_dva;
		RuleBase_allow_dva.push_back("false");
		::Uml::InitAttributeProps(RuleBase::meta_allow, "allow", "Boolean", false, false, 1, 1, false, "public", RuleBase_allow_dva);

		::Uml::InitClassProps(SRGBase::meta, "SRGBase", true, "FCO", NULL);

		::Uml::InitClassProps(SRGRiskAssociation::meta, "SRGRiskAssociation", false, "Connection", NULL);

		::Uml::InitClassProps(SatisfierProperty::meta, "SatisfierProperty", false, "Model", NULL);
		::Uml::InitAttributeProps(SatisfierProperty::meta_DataValue, "DataValue", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> SatisfierProperty_dynamic_dva;
		SatisfierProperty_dynamic_dva.push_back("false");
		::Uml::InitAttributeProps(SatisfierProperty::meta_dynamic, "dynamic", "Boolean", false, false, 1, 1, false, "public", SatisfierProperty_dynamic_dva);
		vector<string> SatisfierProperty_SatisfierPropertyKind_dva;
		SatisfierProperty_SatisfierPropertyKind_dva.push_back("Quantity");
		::Uml::InitAttributeProps(SatisfierProperty::meta_SatisfierPropertyKind, "SatisfierPropertyKind", "String", false, false, 1, 1, false, "public", SatisfierProperty_SatisfierPropertyKind_dva);

		::Uml::InitClassProps(SecuredPathConn::meta, "SecuredPathConn", false, "Connection", NULL);

		::Uml::InitClassProps(Security::meta, "Security", false, "Model", NULL);

		::Uml::InitClassProps(SecurityDomain::meta, "SecurityDomain", false, "Model", NULL);

		::Uml::InitClassProps(SecurityQoS::meta, "SecurityQoS", true, "Model", NULL);
		vector<string> SecurityQoS_IntegrityLevel_dva;
		SecurityQoS_IntegrityLevel_dva.push_back("one");
		::Uml::InitAttributeProps(SecurityQoS::meta_IntegrityLevel, "IntegrityLevel", "String", false, false, 1, 1, false, "public", SecurityQoS_IntegrityLevel_dva);
		vector<string> SecurityQoS_Authentication_dva;
		SecurityQoS_Authentication_dva.push_back("false");
		::Uml::InitAttributeProps(SecurityQoS::meta_Authentication, "Authentication", "Boolean", false, false, 1, 1, false, "public", SecurityQoS_Authentication_dva);
		vector<string> SecurityQoS_AuditLevel_dva;
		SecurityQoS_AuditLevel_dva.push_back("one");
		::Uml::InitAttributeProps(SecurityQoS::meta_AuditLevel, "AuditLevel", "String", false, false, 1, 1, false, "public", SecurityQoS_AuditLevel_dva);
		vector<string> SecurityQoS_ConfidentialityLevel_dva;
		SecurityQoS_ConfidentialityLevel_dva.push_back("one");
		::Uml::InitAttributeProps(SecurityQoS::meta_ConfidentialityLevel, "ConfidentialityLevel", "String", false, false, 1, 1, false, "public", SecurityQoS_ConfidentialityLevel_dva);
		vector<string> SecurityQoS_SecurityLevel_dva;
		SecurityQoS_SecurityLevel_dva.push_back("one");
		::Uml::InitAttributeProps(SecurityQoS::meta_SecurityLevel, "SecurityLevel", "String", false, false, 1, 1, false, "public", SecurityQoS_SecurityLevel_dva);
		vector<string> SecurityQoS_NonRepudiation_dva;
		SecurityQoS_NonRepudiation_dva.push_back("false");
		::Uml::InitAttributeProps(SecurityQoS::meta_NonRepudiation, "NonRepudiation", "Boolean", false, false, 1, 1, false, "public", SecurityQoS_NonRepudiation_dva);
		vector<string> SecurityQoS_SecurityPolicy_dva;
		SecurityQoS_SecurityPolicy_dva.push_back("SecureInvocationPolicy");
		::Uml::InitAttributeProps(SecurityQoS::meta_SecurityPolicy, "SecurityPolicy", "String", false, false, 1, 1, false, "public", SecurityQoS_SecurityPolicy_dva);
		vector<string> SecurityQoS_DelegationPolicy_dva;
		SecurityQoS_DelegationPolicy_dva.push_back("None");
		::Uml::InitAttributeProps(SecurityQoS::meta_DelegationPolicy, "DelegationPolicy", "String", false, false, 1, 1, false, "public", SecurityQoS_DelegationPolicy_dva);

		::Uml::InitClassProps(SenderConnection::meta, "SenderConnection", false, "Connection", NULL);

		::Uml::InitClassProps(ServantProject::meta, "ServantProject", false, "Model", NULL);

		::Uml::InitClassProps(ServiceConsumer::meta, "ServiceConsumer", false, "Atom", NULL);
		vector<string> ServiceConsumer_prioritize_service_invocations_dva;
		ServiceConsumer_prioritize_service_invocations_dva.push_back("true");
		::Uml::InitAttributeProps(ServiceConsumer::meta_prioritize_service_invocations, "prioritize_service_invocations", "Boolean", false, false, 1, 1, false, "public", ServiceConsumer_prioritize_service_invocations_dva);

		::Uml::InitClassProps(ServiceLevels::meta, "ServiceLevels", false, "Atom", NULL);
		vector<string> ServiceLevels_varying_service_levels_dva;
		ServiceLevels_varying_service_levels_dva.push_back("true");
		::Uml::InitAttributeProps(ServiceLevels::meta_varying_service_levels, "varying_service_levels", "Boolean", false, false, 1, 1, false, "public", ServiceLevels_varying_service_levels_dva);

		::Uml::InitClassProps(ServiceProvider::meta, "ServiceProvider", false, "Model", NULL);
		vector<string> ServiceProvider_fixed_prioirty_service_execution_dva;
		ServiceProvider_fixed_prioirty_service_execution_dva.push_back("false");
		::Uml::InitAttributeProps(ServiceProvider::meta_fixed_prioirty_service_execution, "fixed_prioirty_service_execution", "Boolean", false, false, 1, 1, false, "public", ServiceProvider_fixed_prioirty_service_execution_dva);

		::Uml::InitClassProps(SetException::meta, "SetException", false, "Reference", NULL);

		::Uml::InitClassProps(SharedComponentReference::meta, "SharedComponentReference", false, "Reference", NULL);

		::Uml::InitClassProps(SharedResource::meta, "SharedResource", false, "Model", NULL);

		::Uml::InitClassProps(SharedResourceReference::meta, "SharedResourceReference", false, "Reference", NULL);

		::Uml::InitClassProps(SharedRiskGroup::meta, "SharedRiskGroup", false, "Model", NULL);

		::Uml::InitClassProps(Shares::meta, "Shares", false, "Connection", NULL);

		::Uml::InitClassProps(ShortInteger::meta, "ShortInteger", false, "Atom", NULL);

		::Uml::InitClassProps(SingleInputBase::meta, "SingleInputBase", true, "FCO", NULL);

		::Uml::InitClassProps(SingleOutputBase::meta, "SingleOutputBase", true, "FCO", NULL);

		::Uml::InitClassProps(SrcEdge::meta, "SrcEdge", false, "Connection", NULL);

		::Uml::InitClassProps(State::meta, "State", false, "Atom", NULL);

		::Uml::InitClassProps(StateBase::meta, "StateBase", true, "Atom", NULL);

		::Uml::InitClassProps(String::meta, "String", false, "Atom", NULL);

		::Uml::InitClassProps(StubProject::meta, "StubProject", false, "Model", NULL);

		::Uml::InitClassProps(Subject::meta, "Subject", true, "FCO", NULL);
		::Uml::InitAttributeProps(Subject::meta_principal, "principal", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(SupplierBehavior::meta, "SupplierBehavior", false, "Atom", NULL);
		vector<string> SupplierBehavior_ECProxySupplierLock_dva;
		SupplierBehavior_ECProxySupplierLock_dva.push_back("thread");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECProxySupplierLock, "ECProxySupplierLock", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECProxySupplierLock_dva);
		vector<string> SupplierBehavior_ECSupplierControl_dva;
		SupplierBehavior_ECSupplierControl_dva.push_back("null");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECSupplierControl, "ECSupplierControl", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECSupplierControl_dva);
		vector<string> SupplierBehavior_ECSupplierControlPeriod_dva;
		SupplierBehavior_ECSupplierControlPeriod_dva.push_back("5000000");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECSupplierControlPeriod, "ECSupplierControlPeriod", "Integer", false, false, 1, 1, false, "public", SupplierBehavior_ECSupplierControlPeriod_dva);
		vector<string> SupplierBehavior_ECProxyPushSupplierCollectionFlag_dva;
		SupplierBehavior_ECProxyPushSupplierCollectionFlag_dva.push_back("list");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECProxyPushSupplierCollectionFlag, "ECProxyPushSupplierCollectionFlag", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECProxyPushSupplierCollectionFlag_dva);
		vector<string> SupplierBehavior_ECProxyPushSupplierCollectionIterator_dva;
		SupplierBehavior_ECProxyPushSupplierCollectionIterator_dva.push_back("immediate");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECProxyPushSupplierCollectionIterator, "ECProxyPushSupplierCollectionIterator", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECProxyPushSupplierCollectionIterator_dva);
		vector<string> SupplierBehavior_ECProxyPushSupplierCollectionSynch_dva;
		SupplierBehavior_ECProxyPushSupplierCollectionSynch_dva.push_back("mt");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECProxyPushSupplierCollectionSynch, "ECProxyPushSupplierCollectionSynch", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECProxyPushSupplierCollectionSynch_dva);
		vector<string> SupplierBehavior_ECSupplierFiltering_dva;
		SupplierBehavior_ECSupplierFiltering_dva.push_back("per-supplier");
		::Uml::InitAttributeProps(SupplierBehavior::meta_ECSupplierFiltering, "ECSupplierFiltering", "String", false, false, 1, 1, false, "public", SupplierBehavior_ECSupplierFiltering_dva);

		::Uml::InitClassProps(Supports::meta, "Supports", false, "Reference", NULL);

		::Uml::InitClassProps(SupportsDelegate::meta, "SupportsDelegate", false, "Connection", NULL);

		::Uml::InitClassProps(SupportsInterfaces::meta, "SupportsInterfaces", true, "Model", NULL);

		::Uml::InitClassProps(SwitchedAggregate::meta, "SwitchedAggregate", false, "Model", NULL);

		::Uml::InitClassProps(Taggable::meta, "Taggable", true, "FCO", NULL);
		::Uml::InitAttributeProps(Taggable::meta_VersionTag, "VersionTag", "String", false, false, 1, 1, false, "public", vector<string>());
		::Uml::InitAttributeProps(Taggable::meta_SpecifyIdTag, "SpecifyIdTag", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(TargetObjectRef::meta, "TargetObjectRef", false, "Reference", NULL);

		::Uml::InitClassProps(Targets::meta, "Targets", false, "Folder", NULL);
		::Uml::InitAttributeProps(Targets::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Task::meta, "Task", false, "Atom", NULL);

		::Uml::InitClassProps(TaskSet::meta, "TaskSet", false, "Set", NULL);
		vector<string> TaskSet_priority_dva;
		TaskSet_priority_dva.push_back("-1");
		::Uml::InitAttributeProps(TaskSet::meta_priority, "priority", "Integer", false, false, 1, 1, false, "public", TaskSet_priority_dva);
		vector<string> TaskSet_rate_dva;
		TaskSet_rate_dva.push_back("-1");
		::Uml::InitAttributeProps(TaskSet::meta_rate, "rate", "Integer", false, false, 1, 1, false, "public", TaskSet_rate_dva);

		::Uml::InitClassProps(Terminal::meta, "Terminal", false, "Atom", NULL);

		::Uml::InitClassProps(TerminalEffect::meta, "TerminalEffect", false, "Connection", NULL);

		::Uml::InitClassProps(TerminalTransition::meta, "TerminalTransition", false, "Connection", NULL);

		::Uml::InitClassProps(ThreadPool::meta, "ThreadPool", false, "Atom", NULL);
		vector<string> ThreadPool_allow_request_buffering_dva;
		ThreadPool_allow_request_buffering_dva.push_back("false");
		::Uml::InitAttributeProps(ThreadPool::meta_allow_request_buffering, "allow_request_buffering", "Boolean", false, false, 1, 1, false, "public", ThreadPool_allow_request_buffering_dva);
		vector<string> ThreadPool_max_buffered_requests_dva;
		ThreadPool_max_buffered_requests_dva.push_back("0");
		::Uml::InitAttributeProps(ThreadPool::meta_max_buffered_requests, "max_buffered_requests", "Integer", false, false, 1, 1, false, "public", ThreadPool_max_buffered_requests_dva);
		vector<string> ThreadPool_max_buffer_size_dva;
		ThreadPool_max_buffer_size_dva.push_back("0");
		::Uml::InitAttributeProps(ThreadPool::meta_max_buffer_size, "max_buffer_size", "Integer", false, false, 1, 1, false, "public", ThreadPool_max_buffer_size_dva);
		vector<string> ThreadPool_allow_borrowing_dva;
		ThreadPool_allow_borrowing_dva.push_back("false");
		::Uml::InitAttributeProps(ThreadPool::meta_allow_borrowing, "allow_borrowing", "Boolean", false, false, 1, 1, false, "public", ThreadPool_allow_borrowing_dva);
		vector<string> ThreadPool_stacksize_dva;
		ThreadPool_stacksize_dva.push_back("0");
		::Uml::InitAttributeProps(ThreadPool::meta_stacksize, "stacksize", "Integer", false, false, 1, 1, false, "public", ThreadPool_stacksize_dva);

		::Uml::InitClassProps(Throughput::meta, "Throughput", false, "Model", NULL);

		::Uml::InitClassProps(TimeProbe::meta, "TimeProbe", false, "Atom", NULL);

		::Uml::InitClassProps(TimerConnection::meta, "TimerConnection", false, "Connection", NULL);

		::Uml::InitClassProps(TimerEventSinkConn::meta, "TimerEventSinkConn", false, "Connection", NULL);

		::Uml::InitClassProps(TopLevelBehavior::meta, "TopLevelBehavior", true, "Model", NULL);

		::Uml::InitClassProps(TopLevelPackage::meta, "TopLevelPackage", false, "Atom", NULL);

		::Uml::InitClassProps(TopLevelPackageContainer::meta, "TopLevelPackageContainer", false, "Model", NULL);

		::Uml::InitClassProps(TopLevelPackages::meta, "TopLevelPackages", false, "Folder", NULL);
		::Uml::InitAttributeProps(TopLevelPackages::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(Transition::meta, "Transition", false, "Connection", NULL);

		::Uml::InitClassProps(TriggerBenchmarks::meta, "TriggerBenchmarks", false, "Atom", NULL);

		::Uml::InitClassProps(TwowayOperation::meta, "TwowayOperation", false, "Model", NULL);

		::Uml::InitClassProps(TypeEncoding::meta, "TypeEncoding", false, "Atom", NULL);

		::Uml::InitClassProps(TypeKind::meta, "TypeKind", false, "Atom", NULL);

		::Uml::InitClassProps(User::meta, "User", false, "Atom", NULL);

		::Uml::InitClassProps(ValueObject::meta, "ValueObject", false, "Model", NULL);

		::Uml::InitClassProps(Variable::meta, "Variable", false, "Reference", NULL);
		::Uml::InitAttributeProps(Variable::meta_InitialValue, "InitialValue", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WhileState::meta, "WhileState", false, "Atom", NULL);

		::Uml::InitClassProps(WorkLoadOperationConnection::meta, "WorkLoadOperationConnection", false, "Connection", NULL);

		::Uml::InitClassProps(Worker::meta, "Worker", false, "Model", NULL);
		vector<string> Worker_Abstract_dva;
		Worker_Abstract_dva.push_back("false");
		::Uml::InitAttributeProps(Worker::meta_Abstract, "Abstract", "Boolean", false, false, 1, 1, false, "public", Worker_Abstract_dva);

		::Uml::InitClassProps(WorkerFile::meta, "WorkerFile", false, "Model", NULL);
		::Uml::InitAttributeProps(WorkerFile::meta_Location, "Location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerLibraries::meta, "WorkerLibraries", false, "Folder", NULL);
		::Uml::InitAttributeProps(WorkerLibraries::meta_name, "name", "String", false, false, 0, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerLibrary::meta, "WorkerLibrary", false, "Model", NULL);
		::Uml::InitAttributeProps(WorkerLibrary::meta_Location, "Location", "String", false, false, 1, 1, false, "public", vector<string>());

		::Uml::InitClassProps(WorkerPackage::meta, "WorkerPackage", false, "Model", NULL);

		::Uml::InitClassProps(WorkerPackageBase::meta, "WorkerPackageBase", true, "Model", NULL);

		::Uml::InitClassProps(WorkerType::meta, "WorkerType", false, "Reference", NULL);

		::Uml::InitClassProps(WorkloadCharacteristics::meta, "WorkloadCharacteristics", false, "Connection", NULL);

		::Uml::InitClassProps(Workspaces::meta, "Workspaces", false, "Set", NULL);

		::Uml::InitClassProps(deliverTo::meta, "deliverTo", false, "Connection", NULL);

		::Uml::InitClassProps(emit::meta, "emit", false, "Connection", NULL);

		::Uml::InitClassProps(eventServiceConfiguration::meta, "eventServiceConfiguration", false, "Model", NULL);
		vector<string> eventServiceConfiguration_type_dva;
		eventServiceConfiguration_type_dva.push_back("RTEC");
		::Uml::InitAttributeProps(eventServiceConfiguration::meta_type, "type", "String", false, false, 1, 1, false, "public", eventServiceConfiguration_type_dva);
		vector<string> eventServiceConfiguration_svc_cfg_file_dva;
		eventServiceConfiguration_svc_cfg_file_dva.push_back("svc.conf");
		::Uml::InitAttributeProps(eventServiceConfiguration::meta_svc_cfg_file, "svc_cfg_file", "String", false, false, 1, 1, false, "public", eventServiceConfiguration_svc_cfg_file_dva);
		::Uml::InitAttributeProps(eventServiceConfiguration::meta_node, "node", "String", false, false, 1, 1, false, "public", vector<string>());
		vector<string> eventServiceConfiguration_configuration_id_dva;
		eventServiceConfiguration_configuration_id_dva.push_back("es_configuration-01");
		::Uml::InitAttributeProps(eventServiceConfiguration::meta_configuration_id, "configuration_id", "String", false, false, 1, 1, false, "public", eventServiceConfiguration_configuration_id_dva);

		::Uml::InitClassProps(invoke::meta, "invoke", false, "Connection", NULL);

		::Uml::InitClassProps(package::meta, "package", false, "Connection", NULL);

		::Uml::InitClassProps(publish::meta, "publish", false, "Connection", NULL);

		// associations
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ExtResourceConn");
			ComponentLib::meta_dstExtResourceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentLib::meta_dstExtResourceConn, "dstExtResourceConn", true, false, 0, -1);
			ExternalResources::meta_srcExtResourceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalResources::meta_srcExtResourceConn, "srcExtResourceConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "LabelConnection");
			Member::meta_dstLabelConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_dstLabelConnection, "dstLabelConnection", true, false, 0, -1);
			Label::meta_srcLabelConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Label::meta_srcLabelConnection, "srcLabelConnection", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MakeMemberPrivate");
			Member::meta_dstMakeMemberPrivate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_dstMakeMemberPrivate, "dstMakeMemberPrivate", true, false, 0, 1);
			PrivateFlag::meta_srcMakeMemberPrivate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PrivateFlag::meta_srcMakeMemberPrivate, "srcMakeMemberPrivate", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InterfaceClassificationConn");
			::CQML::Object::meta_dstInterfaceClassificationConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(::CQML::Object::meta_dstInterfaceClassificationConn, "dstInterfaceClassificationConn", true, false, 0, 1);
			RequiredRights::meta_srcInterfaceClassificationConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRights::meta_srcInterfaceClassificationConn, "srcInterfaceClassificationConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SupportsDelegate");
			Supports::meta_dstSupportsDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Supports::meta_dstSupportsDelegate, "dstSupportsDelegate", true, false, 0, -1);
			ProvidedRequestPort::meta_srcSupportsDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_srcSupportsDelegate, "srcSupportsDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeValue");
			ReadonlyAttribute::meta_dstAttributeValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReadonlyAttribute::meta_dstAttributeValue, "dstAttributeValue", true, false, 0, 1);
			Property::meta_srcAttributeValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAttributeValue, "srcAttributeValue", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "OperationClassificationConn");
			OperationBase::meta_dstOperationClassificationConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationBase::meta_dstOperationClassificationConn, "dstOperationClassificationConn", true, false, 0, 1);
			RequiredRights::meta_srcOperationClassificationConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRights::meta_srcOperationClassificationConn, "srcOperationClassificationConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyselectRequirement");
			Component::meta_dstAssemblyselectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_dstAssemblyselectRequirement, "dstAssemblyselectRequirement", true, false, 0, -1);
			Requirement::meta_srcAssemblyselectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcAssemblyselectRequirement, "srcAssemblyselectRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyConfigProperty");
			Component::meta_dstAssemblyConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_dstAssemblyConfigProperty, "dstAssemblyConfigProperty", true, false, 0, -1);
			Property::meta_srcAssemblyConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAssemblyConfigProperty, "srcAssemblyConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSourcePublish");
			OutEventPort::meta_dstEventSourcePublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_dstEventSourcePublish, "dstEventSourcePublish", true, false, 0, -1);
			QoSConnector::meta_srcEventSourcePublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSConnector::meta_srcEventSourcePublish, "srcEventSourcePublish", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "publish");
			OutEventPort::meta_dstpublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_dstpublish, "dstpublish", true, false, 0, -1);
			PublishConnector::meta_srcpublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PublishConnector::meta_srcpublish, "srcpublish", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "emit");
			OutEventPort::meta_dstemit = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_dstemit, "dstemit", true, false, 0, 1);
			InEventPort::meta_srcemit = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_srcemit, "srcemit", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSourceDelegate");
			OutEventPort::meta_dstEventSourceDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_dstEventSourceDelegate, "dstEventSourceDelegate", true, false, 0, -1);
			OutEventPort::meta_srcEventSourceDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_srcEventSourceDelegate, "srcEventSourceDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "FacetDelegate");
			ProvidedRequestPort::meta_dstFacetDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_dstFacetDelegate, "dstFacetDelegate", true, false, 0, -1);
			ProvidedRequestPort::meta_srcFacetDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_srcFacetDelegate, "srcFacetDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "RecepInvoke");
			RequiredRequestPort::meta_dstRecepInvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_dstRecepInvoke, "dstRecepInvoke", true, false, 0, -1);
			QoSConnector::meta_srcRecepInvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSConnector::meta_srcRecepInvoke, "srcRecepInvoke", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "invoke");
			RequiredRequestPort::meta_dstinvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_dstinvoke, "dstinvoke", true, false, 0, -1);
			InvokePortBase::meta_srcinvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InvokePortBase::meta_srcinvoke, "srcinvoke", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ReceptacleDelegate");
			RequiredRequestPort::meta_dstReceptacleDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_dstReceptacleDelegate, "dstReceptacleDelegate", true, false, 0, -1);
			RequiredRequestPort::meta_srcReceptacleDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_srcReceptacleDelegate, "srcReceptacleDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSinkDelegate");
			InEventPort::meta_dstEventSinkDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_dstEventSinkDelegate, "dstEventSinkDelegate", true, false, 0, -1);
			InEventPort::meta_srcEventSinkDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_srcEventSinkDelegate, "srcEventSinkDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PortQoS");
			Port::meta_dstPortQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Port::meta_dstPortQoS, "dstPortQoS", true, false, 0, -1);
			PortQoSCharacteristic::meta_srcPortQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortQoSCharacteristic::meta_srcPortQoS, "srcPortQoS", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentProperty");
			ComponentRef::meta_dstComponentProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentProperty, "dstComponentProperty", true, false, 0, -1);
			ComponentPropertyDescription::meta_srcComponentProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPropertyDescription::meta_srcComponentProperty, "srcComponentProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentConfigProperty");
			ComponentRef::meta_dstComponentConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentConfigProperty, "dstComponentConfigProperty", true, false, 0, -1);
			Property::meta_srcComponentConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcComponentConfigProperty, "srcComponentConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentInfoProperty");
			ComponentRef::meta_dstComponentInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_dstComponentInfoProperty, "dstComponentInfoProperty", true, false, 0, -1);
			Property::meta_srcComponentInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcComponentInfoProperty, "srcComponentInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ManagesComponent");
			ComponentFactory::meta_dstManagesComponent = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactory::meta_dstManagesComponent, "dstManagesComponent", true, false, 1, 1);
			Manageable::meta_srcManagesComponent = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Manageable::meta_srcManagesComponent, "srcManagesComponent", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EdgeProperty");
			Property::meta_dstPropertyConnector = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_dstPropertyConnector, "dstPropertyConnector", true, false, 0, -1);
			Edge::meta_srcPropertyConnector = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_srcPropertyConnector, "srcPropertyConnector", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageInterface");
			ComponentPackage::meta_dstPackageInterface = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageInterface, "dstPackageInterface", true, false, 0, 1);
			ComponentRef::meta_srcPackageInterface = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcPackageInterface, "srcPackageInterface", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Implementation");
			ComponentPackage::meta_dstImplementation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstImplementation, "dstImplementation", true, false, 1, -1);
			ComponentImplementationReference::meta_srcImplementation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationReference::meta_srcImplementation, "srcImplementation", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfigProperty");
			ComponentPackage::meta_dstPackageConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageConfigProperty, "dstPackageConfigProperty", true, false, 0, -1);
			Property::meta_srcPackageConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageConfigProperty, "srcPackageConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageInfoProperty");
			ComponentPackage::meta_dstPackageInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_dstPackageInfoProperty, "dstPackageInfoProperty", true, false, 0, -1);
			Property::meta_srcPackageInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageInfoProperty, "srcPackageInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "package");
			TopLevelPackage::meta_dstpackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TopLevelPackage::meta_dstpackage, "dstpackage", true, false, 1, 1);
			PackageConfigurationReference::meta_srcpackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_srcpackage, "srcpackage", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDependsOn");
			ImplementationArtifact::meta_dstArtifactDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDependsOn, "dstArtifactDependsOn", true, false, 0, -1);
			ImplementationArtifactReference::meta_srcArtifactDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_srcArtifactDependsOn, "srcArtifactDependsOn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDeployRequirement");
			ImplementationArtifact::meta_dstArtifactDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDeployRequirement, "dstArtifactDeployRequirement", true, false, 0, -1);
			Requirement::meta_srcArtifactDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcArtifactDeployRequirement, "srcArtifactDeployRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactExecParameter");
			ImplementationArtifact::meta_dstArtifactExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactExecParameter, "dstArtifactExecParameter", true, false, 0, -1);
			Property::meta_srcArtifactExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcArtifactExecParameter, "srcArtifactExecParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactInfoProperty");
			ImplementationArtifact::meta_dstArtifactInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactInfoProperty, "dstArtifactInfoProperty", true, false, 0, -1);
			Property::meta_srcArtifactInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcArtifactInfoProperty, "srcArtifactInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ArtifactDependency");
			ImplementationArtifact::meta_dstArtifactDependency = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_dstArtifactDependency, "dstArtifactDependency", true, false, 0, -1);
			ImplementationArtifact::meta_srcArtifactDependency = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_srcArtifactDependency, "srcArtifactDependency", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfBasePackage");
			PackageConfiguration::meta_dstPackageConfBasePackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfBasePackage, "dstPackageConfBasePackage", true, false, 0, 1);
			ComponentPackage::meta_srcPackageConfBasePackage = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_srcPackageConfBasePackage, "srcPackageConfBasePackage", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfReference");
			PackageConfiguration::meta_dstPackageConfReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfReference, "dstPackageConfReference", true, false, 0, 1);
			ComponentPackageReference::meta_srcPackageConfReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackageReference::meta_srcPackageConfReference, "srcPackageConfReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfSelectRequirement");
			PackageConfiguration::meta_dstPackageConfSelectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfSelectRequirement, "dstPackageConfSelectRequirement", true, false, 0, -1);
			Requirement::meta_srcPackageConfSelectRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcPackageConfSelectRequirement, "srcPackageConfSelectRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfConfigProperty");
			PackageConfiguration::meta_dstPackageConfConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfConfigProperty, "dstPackageConfConfigProperty", true, false, 0, -1);
			Property::meta_srcPackageConfConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPackageConfConfigProperty, "srcPackageConfConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PackageConfSpecializedConfig");
			PackageConfiguration::meta_dstPackageConfSpecializedConfig = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_dstPackageConfSpecializedConfig, "dstPackageConfSpecializedConfig", true, false, 0, 1);
			PackageConfigurationReference::meta_srcPackageConfSpecializedConfig = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_srcPackageConfSpecializedConfig, "srcPackageConfSpecializedConfig", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ImplementationCapability");
			ComponentImplementation::meta_dstImplementationCapability = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplementationCapability, "dstImplementationCapability", true, false, 0, -1);
			Capability::meta_srcImplementationCapability = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Capability::meta_srcImplementationCapability, "srcImplementationCapability", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ImplementationDependsOn");
			ComponentImplementation::meta_dstImplementationDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplementationDependsOn, "dstImplementationDependsOn", true, false, 0, -1);
			ImplementationDependency::meta_srcImplementationDependsOn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationDependency::meta_srcImplementationDependsOn, "srcImplementationDependsOn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Implements");
			ComponentImplementation::meta_dstImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_dstImplements, "dstImplements", true, false, 0, 1);
			ComponentRef::meta_srcImplements = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcImplements, "srcImplements", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "deliverTo");
			PublishConnector::meta_dstdeliverTo = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PublishConnector::meta_dstdeliverTo, "dstdeliverTo", true, false, 0, -1);
			InEventPort::meta_srcdeliverTo = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_srcdeliverTo, "srcdeliverTo", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyDeployRequirement");
			PublishConnector::meta_dstAssemblyDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PublishConnector::meta_dstAssemblyDeployRequirement, "dstAssemblyDeployRequirement", true, false, 0, -1);
			Requirement::meta_srcAssemblyDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Requirement::meta_srcAssemblyDeployRequirement, "srcAssemblyDeployRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeDelegate");
			AttributeMapping::meta_dstAttributeDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeDelegate, "dstAttributeDelegate", true, false, 0, -1);
			ReadonlyAttribute::meta_srcAttributeDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReadonlyAttribute::meta_srcAttributeDelegate, "srcAttributeDelegate", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeMappingValue");
			AttributeMapping::meta_dstAttributeMappingValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeMappingValue, "dstAttributeMappingValue", true, false, 0, 1);
			Property::meta_srcAttributeMappingValue = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcAttributeMappingValue, "srcAttributeMappingValue", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeMappingDelegate");
			AttributeMapping::meta_dstAttributeMappingDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_dstAttributeMappingDelegate, "dstAttributeMappingDelegate", true, false, 0, -1);
			AttributeMapping::meta_srcAttributeMappingDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_srcAttributeMappingDelegate, "srcAttributeMappingDelegate", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InstanceMapping");
			CollocationGroup::meta_dstInstanceMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroup::meta_dstInstanceMapping, "dstInstanceMapping", true, false, 0, -1);
			NodeReference::meta_srcInstanceMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NodeReference::meta_srcInstanceMapping, "srcInstanceMapping", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Deploys");
			ComponentFactoryRef::meta_dstDeploys = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryRef::meta_dstDeploys, "dstDeploys", true, false, 0, -1);
			ComponentRef::meta_srcDeploys = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcDeploys, "srcDeploys", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BridgeConnection");
			Interconnect::meta_dstBridgeConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Interconnect::meta_dstBridgeConnection, "dstBridgeConnection", true, false, 0, -1);
			Bridge::meta_srcBridgeConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Bridge::meta_srcBridgeConnection, "srcBridgeConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Shares");
			Node::meta_dstShares = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_dstShares, "dstShares", true, false, 0, -1);
			SharedResource::meta_srcShares = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedResource::meta_srcShares, "srcShares", true, false, 1, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InterconnectConnection");
			Node::meta_dstInterconnectConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_dstInterconnectConnection, "dstInterconnectConnection", true, false, 0, -1);
			Interconnect::meta_srcInterconnectConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Interconnect::meta_srcInterconnectConnection, "srcInterconnectConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "WorkloadCharacteristics");
			MetricsBase::meta_dstWorkloadCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_dstWorkloadCharacteristics, "dstWorkloadCharacteristics", true, false, 0, 1);
			TaskSet::meta_srcWorkloadCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TaskSet::meta_srcWorkloadCharacteristics, "srcWorkloadCharacteristics", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MetricConnection");
			OperationRef::meta_dstMetricConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstMetricConnection, "dstMetricConnection", true, false, 0, 1);
			MetricsBase::meta_srcMetricConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_srcMetricConnection, "srcMetricConnection", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TimerConnection");
			OperationRef::meta_dstTimerConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstTimerConnection, "dstTimerConnection", true, false, 0, 1);
			TimeProbe::meta_srcTimerConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TimeProbe::meta_srcTimerConnection, "srcTimerConnection", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentOperation");
			OperationRef::meta_dstComponentOperation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstComponentOperation, "dstComponentOperation", true, false, 0, 1);
			CompRef::meta_srcComponentOperation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CompRef::meta_srcComponentOperation, "srcComponentOperation", true, false, 1, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "WorkLoadOperationConnection");
			OperationRef::meta_dstWorkLoadOperationConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_dstWorkLoadOperationConnection, "dstWorkLoadOperationConnection", true, false, 0, 1);
			Task::meta_srcWorkLoadOperationConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Task::meta_srcWorkLoadOperationConnection, "srcWorkLoadOperationConnection", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TimerEventSinkConn");
			EventRef::meta_dstTimerEventSinkConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventRef::meta_dstTimerEventSinkConn, "dstTimerEventSinkConn", true, false, 0, -1);
			TimeProbe::meta_srcTimerEventSinkConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TimeProbe::meta_srcTimerEventSinkConn, "srcTimerEventSinkConn", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BenchmarkCharacteristics");
			BenchmarkType::meta_dstBenchmarkCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BenchmarkType::meta_dstBenchmarkCharacteristics, "dstBenchmarkCharacteristics", true, false, 0, 1);
			MetricsBase::meta_srcBenchmarkCharacteristics = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MetricsBase::meta_srcBenchmarkCharacteristics, "srcBenchmarkCharacteristics", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PathProperty");
			Path::meta_dstPathProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Path::meta_dstPathProperty, "dstPathProperty", true, false, 0, -1);
			Property::meta_srcPathProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcPathProperty, "srcPathProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "DstEdge");
			GraphVertex::meta_dstDstEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GraphVertex::meta_dstDstEdge, "dstDstEdge", true, false, 0, 1);
			Edge::meta_srcDstEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_srcDstEdge, "srcDstEdge", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SrcEdge");
			Edge::meta_dstSrcEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Edge::meta_dstSrcEdge, "dstSrcEdge", true, false, 0, 1);
			GraphVertex::meta_srcSrcEdge = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GraphVertex::meta_srcSrcEdge, "srcSrcEdge", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "CriticalPath");
			ComponentAssembly::meta_dstCriticalPath = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssembly::meta_dstCriticalPath, "dstCriticalPath", true, false, 0, 1);
			PathReference::meta_srcCriticalPath = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathReference::meta_srcCriticalPath, "srcCriticalPath", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ExternalDelegate");
			ExternalPortReference::meta_dstExternalDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalPortReference::meta_dstExternalDelegate, "dstExternalDelegate", true, false, 0, -1);
			Port::meta_srcExternalDelegate = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Port::meta_srcExternalDelegate, "srcExternalDelegate", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ConfigProperty");
			Implemenation::meta_dstConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Implemenation::meta_dstConfigProperty, "dstConfigProperty", true, false, 0, -1);
			Property::meta_srcConfigProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcConfigProperty, "srcConfigProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InfoProperty");
			Implemenation::meta_dstInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Implemenation::meta_dstInfoProperty, "dstInfoProperty", true, false, 0, -1);
			Property::meta_srcInfoProperty = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcInfoProperty, "srcInfoProperty", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithDeployRequirement");
			MonolithicImplementationBase::meta_dstMonolithDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithDeployRequirement, "dstMonolithDeployRequirement", true, false, 0, -1);
			ImplementationRequirement::meta_srcMonolithDeployRequirement = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationRequirement::meta_srcMonolithDeployRequirement, "srcMonolithDeployRequirement", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithExecParameter");
			MonolithicImplementationBase::meta_dstMonolithExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithExecParameter, "dstMonolithExecParameter", true, false, 0, -1);
			Property::meta_srcMonolithExecParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Property::meta_srcMonolithExecParameter, "srcMonolithExecParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonolithprimaryArtifact");
			MonolithicImplementationBase::meta_dstMonolithprimaryArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MonolithicImplementationBase::meta_dstMonolithprimaryArtifact, "dstMonolithprimaryArtifact", true, false, 0, -1);
			ImplementationArtifactReference::meta_srcMonolithprimaryArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_srcMonolithprimaryArtifact, "srcMonolithprimaryArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "InputEffect");
			BehaviorInputAction::meta_dstInputEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BehaviorInputAction::meta_dstInputEffect, "dstInputEffect", true, false, 0, 1);
			StateBase::meta_srcInputEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcInputEffect, "srcInputEffect", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Effect");
			ActionBase::meta_dstEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_dstEffect, "dstEffect", true, false, 0, 1);
			StateBase::meta_srcEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcEffect, "srcEffect", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Input");
			SingleInputBase::meta_dstInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SingleInputBase::meta_dstInput, "dstInput", true, false, 0, 1);
			InputAction::meta_srcInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InputAction::meta_srcInput, "srcInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MultiInput");
			MultiInputBase::meta_dstMultiInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MultiInputBase::meta_dstMultiInput, "dstMultiInput", true, false, 0, -1);
			MultiInputAction::meta_srcMultiInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MultiInputAction::meta_srcMultiInput, "srcMultiInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "QueryInput");
			QueryInputBase::meta_dstQueryInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QueryInputBase::meta_dstQueryInput, "dstQueryInput", true, false, 0, 1);
			QueryInputAction::meta_srcQueryInput = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QueryInputAction::meta_srcQueryInput, "srcQueryInput", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Transition");
			State::meta_dstTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(State::meta_dstTransition, "dstTransition", true, false, 0, 1);
			ActionBase::meta_srcTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcTransition, "srcTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TerminalTransition");
			State::meta_dstTerminalTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(State::meta_dstTerminalTransition, "dstTerminalTransition", true, false, 0, 1);
			Terminal::meta_srcTerminalTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Terminal::meta_srcTerminalTransition, "srcTerminalTransition", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "BranchTransition");
			BranchState::meta_dstBranchTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BranchState::meta_dstBranchTransition, "dstBranchTransition", true, false, 0, -1);
			ActionBase::meta_srcBranchTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcBranchTransition, "srcBranchTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "Finish");
			StateBase::meta_dstFinish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_dstFinish, "dstFinish", true, false, 0, -1);
			BehaviorInputAction::meta_srcFinish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(BehaviorInputAction::meta_srcFinish, "srcFinish", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "LoopTransition");
			LoopState::meta_dstLoopTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(LoopState::meta_dstLoopTransition, "dstLoopTransition", true, false, 0, 1);
			ActionBase::meta_srcLoopTransition = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ActionBase::meta_srcLoopTransition, "srcLoopTransition", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "TerminalEffect");
			Terminal::meta_dstTerminalEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Terminal::meta_dstTerminalEffect, "dstTerminalEffect", true, false, 0, 1);
			StateBase::meta_srcTerminalEffect = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(StateBase::meta_srcTerminalEffect, "srcTerminalEffect", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentAssemblyQoS");
			ComponentAssemblyBase::meta_dstComponentAssemblyQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssemblyBase::meta_dstComponentAssemblyQoS, "dstComponentAssemblyQoS", true, false, 0, -1);
			ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS, "srcComponentAssemblyQoS", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "QoSReq");
			QoSConnector::meta_dstQoSReq = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSConnector::meta_dstQoSReq, "dstQoSReq", true, false, 0, -1);
			ConnectionQoSCharacteristic::meta_srcQoSReq = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConnectionQoSCharacteristic::meta_srcQoSReq, "srcQoSReq", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "EventSinkPublish");
			QoSConnector::meta_dstEventSinkPublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSConnector::meta_dstEventSinkPublish, "dstEventSinkPublish", true, false, 0, -1);
			InEventPort::meta_srcEventSinkPublish = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_srcEventSinkPublish, "srcEventSinkPublish", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "FacetInvoke");
			QoSConnector::meta_dstFacetInvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSConnector::meta_dstFacetInvoke, "dstFacetInvoke", true, false, 0, 1);
			ProvidedRequestPort::meta_srcFacetInvoke = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_srcFacetInvoke, "srcFacetInvoke", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentQoS");
			ComponentBase::meta_dstComponentQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentBase::meta_dstComponentQoS, "dstComponentQoS", true, false, 0, -1);
			ComponentQoSCharacteristic::meta_srcComponentQoS = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentQoSCharacteristic::meta_srcComponentQoS, "srcComponentQoS", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "LanePerThreadPool");
			Lane::meta_dstLanePerThreadPool = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Lane::meta_dstLanePerThreadPool, "dstLanePerThreadPool", true, false, 0, 1);
			ThreadPool::meta_srcLanePerThreadPool = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ThreadPool::meta_srcLanePerThreadPool, "srcLanePerThreadPool", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "PolicyPerThreadPool");
			PriorityModelPolicy::meta_dstPolicyPerThreadPool = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PriorityModelPolicy::meta_dstPolicyPerThreadPool, "dstPolicyPerThreadPool", true, false, 0, -1);
			ThreadPool::meta_srcPolicyPerThreadPool = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ThreadPool::meta_srcPolicyPerThreadPool, "srcPolicyPerThreadPool", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "FTDeployDepends");
			DeploymentPlanRef::meta_dstFTDeployDepends = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DeploymentPlanRef::meta_dstFTDeployDepends, "dstFTDeployDepends", true, false, 0, 1);
			DomainRiskGrouping::meta_srcFTDeployDepends = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DomainRiskGrouping::meta_srcFTDeployDepends, "srcFTDeployDepends", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "RootRiskAssociation");
			RootRiskGroup::meta_dstRootRiskAssociation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RootRiskGroup::meta_dstRootRiskAssociation, "dstRootRiskAssociation", true, false, 0, -1);
			SRGBase::meta_srcRootRiskAssociation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SRGBase::meta_srcRootRiskAssociation, "srcRootRiskAssociation", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SRGRiskAssociation");
			SharedRiskGroup::meta_dstSRGRiskAssociation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedRiskGroup::meta_dstSRGRiskAssociation, "dstSRGRiskAssociation", true, false, 0, -1);
			SRGBase::meta_srcSRGRiskAssociation = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SRGBase::meta_srcSRGRiskAssociation, "srcSRGRiskAssociation", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "MonitorableGroupAssociation");
			FTMonitorable::meta_dstMonitorable2RepG = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(FTMonitorable::meta_dstMonitorable2RepG, "dstMonitorable2RepG", true, false, 0, 1);
			RepicaGroupConfiguration::meta_srcMonitorable2RepG = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RepicaGroupConfiguration::meta_srcMonitorable2RepG, "srcMonitorable2RepG", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ReceiverConnection");
			EventChannelCommunicationPoint::meta_dstReceiverConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventChannelCommunicationPoint::meta_dstReceiverConnection, "dstReceiverConnection", true, false, 0, -1);
			eventServiceConfiguration::meta_srcReceiverConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(eventServiceConfiguration::meta_srcReceiverConnection, "srcReceiverConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SenderConnection");
			eventServiceConfiguration::meta_dstSenderConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(eventServiceConfiguration::meta_dstSenderConnection, "dstSenderConnection", true, false, 0, -1);
			EventChannelCommunicationPoint::meta_srcSenderConnection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventChannelCommunicationPoint::meta_srcSenderConnection, "srcSenderConnection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ObjectAccessConn");
			InitiatorRoleRef::meta_dstObjectAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InitiatorRoleRef::meta_dstObjectAccessConn, "dstObjectAccessConn", true, false, 0, -1);
			PortRule::meta_srcObjectAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortRule::meta_srcObjectAccessConn, "srcObjectAccessConn", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AssemblyAccessConn");
			InitiatorRoleRef::meta_dstAssemblyAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InitiatorRoleRef::meta_dstAssemblyAccessConn, "dstAssemblyAccessConn", true, false, 0, -1);
			AssemblyRule::meta_srcAssemblyAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyRule::meta_srcAssemblyAccessConn, "srcAssemblyAccessConn", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "ComponentAccessConn");
			InitiatorRoleRef::meta_dstComponentAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InitiatorRoleRef::meta_dstComponentAccessConn, "dstComponentAccessConn", true, false, 0, -1);
			ComponentRule::meta_srcComponentAccessConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRule::meta_srcComponentAccessConn, "srcComponentAccessConn", true, false, 0, 1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "OnAssemblyConn");
			AssemblyRule::meta_dstOnAssemblyConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyRule::meta_dstOnAssemblyConn, "dstOnAssemblyConn", true, false, 0, 1);
			ComponentAssemblyReference::meta_srcOnAssemblyConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssemblyReference::meta_srcOnAssemblyConn, "srcOnAssemblyConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "SecuredPathConn");
			AssemblyRule::meta_dstSecuredPathConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyRule::meta_dstSecuredPathConn, "dstSecuredPathConn", true, false, 0, 1);
			PathRef::meta_srcSecuredPathConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathRef::meta_srcSecuredPathConn, "srcSecuredPathConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "OnComponentConn");
			ComponentRule::meta_dstOnComponentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRule::meta_dstOnComponentConn, "dstOnComponentConn", true, false, 0, 1);
			ComponentRef::meta_srcOnComponentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_srcOnComponentConn, "srcOnComponentConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "AttributeManipulateConn");
			ComponentRule::meta_dstAttributeManipulateConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRule::meta_dstAttributeManipulateConn, "dstAttributeManipulateConn", true, false, 0, 1);
			AttributeRef::meta_srcAttributeManipulateConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeRef::meta_srcAttributeManipulateConn, "srcAttributeManipulateConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "OperationInvokeConn");
			PortRule::meta_dstOperationInvokeConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortRule::meta_dstOperationInvokeConn, "dstOperationInvokeConn", true, false, 0, 1);
			ResourceActionBase::meta_srcOperationInvokeConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ResourceActionBase::meta_srcOperationInvokeConn, "srcOperationInvokeConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "OnInterfaceConn");
			PortRule::meta_dstOnInterfaceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortRule::meta_dstOnInterfaceConn, "dstOnInterfaceConn", true, false, 0, 1);
			TargetObjectRef::meta_srcOnInterfaceConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TargetObjectRef::meta_srcOnInterfaceConn, "srcOnInterfaceConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "RoleAssignmentConn");
			Subject::meta_dstRoleAssignmentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Subject::meta_dstRoleAssignmentConn, "dstRoleAssignmentConn", true, false, 0, -1);
			Role::meta_srcRoleAssignmentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Role::meta_srcRoleAssignmentConn, "srcRoleAssignmentConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "RightsAssignmentConn");
			Role::meta_dstRightsAssignmentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Role::meta_dstRightsAssignmentConn, "dstRightsAssignmentConn", true, false, 0, 1);
			GrantedRights::meta_srcRightsAssignmentConn = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GrantedRights::meta_srcRightsAssignmentConn, "srcRightsAssignmentConn", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Project::meta_setWorkspace = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Project::meta_setWorkspace, "setWorkspace", true, false, 0, -1);
			Workspaces::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Workspaces::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExternalResources::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalResources::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyExternalResources = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyExternalResources, "referedbyExternalResources", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			FileRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(FileRef::meta_ref, "ref", true, false, 0, 1);
			File::meta_referedbyFileRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(File::meta_referedbyFileRef, "referedbyFileRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExceptionRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExceptionRef::meta_ref, "ref", true, false, 0, 1);
			Exception::meta_referedbyExceptionRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Exception::meta_referedbyExceptionRef, "referedbyExceptionRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SetException::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SetException::meta_ref, "ref", true, false, 0, 1);
			Exception::meta_referedbySetException = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Exception::meta_referedbySetException, "referedbySetException", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			GetException::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(GetException::meta_ref, "ref", true, false, 0, 1);
			Exception::meta_referedbyGetException = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Exception::meta_referedbyGetException, "referedbyGetException", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Constant::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Constant::meta_ref, "ref", true, false, 0, 1);
			ConstantType::meta_referedbyConstant = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConstantType::meta_referedbyConstant, "referedbyConstant", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Discriminator::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Discriminator::meta_ref, "ref", true, false, 0, 1);
			ConstantType::meta_referedbyDiscriminator = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ConstantType::meta_referedbyDiscriminator, "referedbyDiscriminator", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Variable::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Variable::meta_ref, "ref", true, false, 0, 1);
			PredefinedType::meta_referedbyVariable = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PredefinedType::meta_referedbyVariable, "referedbyVariable", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Collection::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Collection::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyCollection = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyCollection, "referedbyCollection", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Alias::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Alias::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyAlias = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyAlias, "referedbyAlias", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Boxed::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Boxed::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyBoxed = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyBoxed, "referedbyBoxed", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Member::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Member::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyMember, "referedbyMember", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeMember::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMember::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyAttributeMember = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyAttributeMember, "referedbyAttributeMember", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InParameter::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InParameter::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyInParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyInParameter, "referedbyInParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OutParameter::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutParameter::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyOutParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyOutParameter, "referedbyOutParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ReturnType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReturnType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyReturnType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyReturnType, "referedbyReturnType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ParameterType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ParameterType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyParameterType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyParameterType, "referedbyParameterType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InoutParameter::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InoutParameter::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyInoutParameter = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyInoutParameter, "referedbyInoutParameter", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			DataType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DataType::meta_ref, "ref", true, false, 0, 1);
			MemberType::meta_referedbyDataType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(MemberType::meta_referedbyDataType, "referedbyDataType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ProvidedRequestPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ProvidedRequestPort::meta_ref, "ref", true, false, 0, 1);
			Provideable::meta_referedbyProvidedRequestPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Provideable::meta_referedbyProvidedRequestPort, "referedbyProvidedRequestPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			RequiredRequestPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(RequiredRequestPort::meta_ref, "ref", true, false, 0, 1);
			Provideable::meta_referedbyRequiredRequestPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Provideable::meta_referedbyRequiredRequestPort, "referedbyRequiredRequestPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Inherits::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Inherits::meta_ref, "ref", true, false, 0, 1);
			Inheritable::meta_referedbyInherits = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Inheritable::meta_referedbyInherits, "referedbyInherits", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_ref, "ref", true, false, 0, 1);
			Component::meta_referedbyComponentRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_referedbyComponentRef, "referedbyComponentRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			CompRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CompRef::meta_ref, "ref", true, false, 0, 1);
			Component::meta_referedbyCompRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Component::meta_referedbyCompRef, "referedbyCompRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Supports::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Supports::meta_ref, "ref", true, false, 0, 1);
			::CQML::Object::meta_referedbySupports = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(::CQML::Object::meta_referedbySupports, "referedbySupports", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			TargetObjectRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TargetObjectRef::meta_ref, "ref", true, false, 0, 1);
			::CQML::Object::meta_referedbyTargetObjectRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(::CQML::Object::meta_referedbyTargetObjectRef, "referedbyTargetObjectRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OutEventPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_ref, "ref", true, false, 0, 1);
			Event::meta_referedbyOutEventPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Event::meta_referedbyOutEventPort, "referedbyOutEventPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InEventPort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InEventPort::meta_ref, "ref", true, false, 0, 1);
			Event::meta_referedbyInEventPort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Event::meta_referedbyInEventPort, "referedbyInEventPort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			EventRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventRef::meta_ref, "ref", true, false, 0, 1);
			Event::meta_referedbyEventRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Event::meta_referedbyEventRef, "referedbyEventRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ExternalPortReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalPortReference::meta_ref, "ref", true, false, 0, 1);
			ExternalPortReferenceType::meta_referedbyExternalPortReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ExternalPortReferenceType::meta_referedbyExternalPortReference, "referedbyExternalPortReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			LookupKey::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(LookupKey::meta_ref, "ref", true, false, 0, 1);
			ValueObject::meta_referedbyLookupKey = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ValueObject::meta_referedbyLookupKey, "referedbyLookupKey", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentFactoryInstance::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryInstance::meta_ref, "ref", true, false, 0, 1);
			ComponentFactory::meta_referedbyComponentFactoryInstance = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactory::meta_referedbyComponentFactoryInstance, "referedbyComponentFactoryInstance", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeMapping::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeMapping::meta_ref, "ref", true, false, 0, 1);
			ReadonlyAttribute::meta_referedbyAttributeMapping = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReadonlyAttribute::meta_referedbyAttributeMapping, "referedbyAttributeMapping", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AttributeRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AttributeRef::meta_ref, "ref", true, false, 0, 1);
			ReadonlyAttribute::meta_referedbyAttributeRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ReadonlyAttribute::meta_referedbyAttributeRef, "referedbyAttributeRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			OperationRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationRef::meta_ref, "ref", true, false, 0, 1);
			OperationBase::meta_referedbyOperationRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OperationBase::meta_referedbyOperationRef, "referedbyOperationRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			EventSourcePort::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(EventSourcePort::meta_ref, "ref", true, false, 0, 1);
			OutEventPort::meta_referedbyEventSourcePort = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(OutEventPort::meta_referedbyEventSourcePort, "referedbyEventSourcePort", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SharedComponentReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedComponentReference::meta_ref, "ref", true, false, 0, 1);
			ComponentRef::meta_referedbySharedComponentReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRef::meta_referedbySharedComponentReference, "referedbySharedComponentReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			CollocationGroupMember::meta_setCollocationGroup = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroupMember::meta_setCollocationGroup, "setCollocationGroup", true, false, 0, -1);
			CollocationGroup::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(CollocationGroup::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			SharedResourceReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedResourceReference::meta_ref, "ref", true, false, 0, 1);
			SharedResource::meta_referedbySharedResourceReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(SharedResource::meta_referedbySharedResourceReference, "referedbySharedResourceReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentPackageReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackageReference::meta_ref, "ref", true, false, 0, 1);
			ComponentPackage::meta_referedbyComponentPackageReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentPackage::meta_referedbyComponentPackageReference, "referedbyComponentPackageReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ImplementationArtifactReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifactReference::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyImplementationArtifactReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyImplementationArtifactReference, "referedbyImplementationArtifactReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentServantArtifact::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentServantArtifact::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyComponentServantArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyComponentServantArtifact, "referedbyComponentServantArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentImplementationArtifact::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationArtifact::meta_ref, "ref", true, false, 0, 1);
			ImplementationArtifact::meta_referedbyComponentImplemenationArtifact = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ImplementationArtifact::meta_referedbyComponentImplemenationArtifact, "referedbyComponentImplemenationArtifact", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PackageConfigurationReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfigurationReference::meta_ref, "ref", true, false, 0, 1);
			PackageConfiguration::meta_referedbyPackageConfigurationReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PackageConfiguration::meta_referedbyPackageConfigurationReference, "referedbyPackageConfigurationReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentImplementationReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementationReference::meta_ref, "ref", true, false, 0, 1);
			ComponentImplementation::meta_referedbyComponentImplementationReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentImplementation::meta_referedbyComponentImplementationReference, "referedbyComponentImplementationReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentAssemblyReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssemblyReference::meta_ref, "ref", true, false, 0, 1);
			ComponentAssembly::meta_referedbyComponentAssemblyReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentAssembly::meta_referedbyComponentAssemblyReference, "referedbyComponentAssemblyReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			DeploymentPlanRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DeploymentPlanRef::meta_ref, "ref", true, false, 0, 1);
			DeploymentPlan::meta_referedbyDeploymentPlanReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DeploymentPlan::meta_referedbyDeploymentPlanReference, "referedbyDeploymentPlanReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentFactoryRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryRef::meta_ref, "ref", true, false, 0, 1);
			ComponentFactoryInstance::meta_referedbyComponentFactoryRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentFactoryInstance::meta_referedbyComponentFactoryRef, "referedbyComponentFactoryRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			NodeReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(NodeReference::meta_ref, "ref", true, false, 0, 1);
			Node::meta_referedbyNodeReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_referedbyNodeReference, "referedbyNodeReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			HostReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(HostReference::meta_ref, "ref", true, false, 0, 1);
			Node::meta_referedbyHostReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Node::meta_referedbyHostReference, "referedbyHostReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			Task::meta_setTaskSet = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Task::meta_setTaskSet, "setTaskSet", true, false, 0, -1);
			TaskSet::meta_members = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(TaskSet::meta_members, "members", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PathReference::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathReference::meta_ref, "ref", true, false, 0, 1);
			Path::meta_referedbyPathReference = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Path::meta_referedbyPathReference, "referedbyPathReference", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PathRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PathRef::meta_ref, "ref", true, false, 0, 1);
			Path::meta_referedbyPathRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Path::meta_referedbyPathRef, "referedbyPathRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			WorkerType::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(WorkerType::meta_ref, "ref", true, false, 0, 1);
			Worker::meta_referedbyWorkerType = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Worker::meta_referedbyWorkerType, "referedbyWorkerType", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			QoSCharRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSCharRef::meta_ref, "ref", true, false, 0, 1);
			QoSCharacteristicBase::meta_referedbyQoSCharRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(QoSCharacteristicBase::meta_referedbyQoSCharRef, "referedbyQoSCharRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			DomainRiskGroupingRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DomainRiskGroupingRef::meta_ref, "ref", true, false, 0, 1);
			DomainRiskGrouping::meta_referedbyDomainRiskGroupingRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(DomainRiskGrouping::meta_referedbyDomainRiskGroupingRef, "referedbyDomainRiskGroupingRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			PortRuleRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortRuleRef::meta_ref, "ref", true, false, 0, 1);
			PortRule::meta_referedbyPortRuleRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(PortRule::meta_referedbyPortRuleRef, "referedbyPortRuleRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			AssemblyRuleRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyRuleRef::meta_ref, "ref", true, false, 0, 1);
			AssemblyRule::meta_referedbyAssemblyRuleRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(AssemblyRule::meta_referedbyAssemblyRuleRef, "referedbyAssemblyRuleRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			ComponentRuleRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRuleRef::meta_ref, "ref", true, false, 0, 1);
			ComponentRule::meta_referedbyComponentRuleRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(ComponentRule::meta_referedbyComponentRuleRef, "referedbyComponentRuleRef", true, false, 0, -1);

		}
		{
			::Uml::Association ass = ::Uml::Association::Create(meta);
			::Uml::InitAssociationProps(ass, "");
			InitiatorRoleRef::meta_ref = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(InitiatorRoleRef::meta_ref, "ref", true, false, 0, 1);
			Role::meta_referedbyInitiatorRoleRef = ::Uml::AssociationRole::Create(ass);
			::Uml::InitAssociationRoleProps(Role::meta_referedbyInitiatorRoleRef, "referedbyInitiatorRoleRef", true, false, 0, -1);

		}

		// compositions
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalResources::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalResources::meta_Project_parent, "Project_parent", true);
			Project::meta_ExternalResources_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ExternalResources_children, "ExternalResources", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExtResourceConn::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExtResourceConn::meta_Project_parent, "Project_parent", true);
			Project::meta_ExtResourceConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ExtResourceConn_children, "ExtResourceConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentLib::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentLib::meta_Project_parent, "Project_parent", true);
			Project::meta_ComponentLib_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ComponentLib_children, "ComponentLib", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifact::meta_Project_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifact::meta_Project_parent, "Project_parent", true);
			Project::meta_ImplementationArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Project::meta_ImplementationArtifact_children, "ImplementationArtifact", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_StubProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_StubProject_parent, "StubProject_parent", true);
			StubProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(StubProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_StubProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_StubProject_parent, "StubProject_parent", true);
			StubProject::meta_FileRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(StubProject::meta_FileRef_child, "FileRef", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ServantProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ServantProject_parent, "ServantProject_parent", true);
			ServantProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServantProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_ServantProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_ServantProject_parent, "ServantProject_parent", true);
			ServantProject::meta_FileRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServantProject::meta_FileRef_child, "FileRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ExecutorProject_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ExecutorProject_parent, "ExecutorProject_parent", true);
			ExecutorProject::meta_ImplementationArtifactReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ExecutorProject::meta_ImplementationArtifactReference_child, "ImplementationArtifactReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Workspaces::meta_MPC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Workspaces::meta_MPC_parent, "MPC_parent", true);
			MPC::meta_Workspaces_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MPC::meta_Workspaces_children, "Workspaces", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Project::meta_MPC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Project::meta_MPC_parent, "MPC_parent", true);
			MPC::meta_Project_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MPC::meta_Project_children, "Project", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Package::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Package::meta_Package_parent, "Package_parent", true);
			Package::meta_Package_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Package_children, "Package", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_Package_parent, "Package_parent", true);
			Package::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_Package_parent, "Package_parent", true);
			Package::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NamedType::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NamedType::meta_Package_parent, "Package_parent", true);
			Package::meta_NamedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_NamedType_children, "NamedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_Package_parent, "Package_parent", true);
			Package::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ManagesComponent::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ManagesComponent::meta_Package_parent, "Package_parent", true);
			Package::meta_ManagesComponent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_ManagesComponent_children, "ManagesComponent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RequiredRights::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RequiredRights::meta_Package_parent, "Package_parent", true);
			Package::meta_RequiredRights_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_RequiredRights_children, "RequiredRights", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InterfaceClassificationConn::meta_Package_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InterfaceClassificationConn::meta_Package_parent, "Package_parent", true);
			Package::meta_InterfaceClassificationConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Package::meta_InterfaceClassificationConn_children, "InterfaceClassificationConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Package::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Package::meta_File_parent, "File_parent", true);
			File::meta_Package_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Package_children, "Package", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_File_parent, "File_parent", true);
			File::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FileRef::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FileRef::meta_File_parent, "File_parent", true);
			File::meta_FileRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_FileRef_children, "FileRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_File_parent, "File_parent", true);
			File::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NamedType::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NamedType::meta_File_parent, "File_parent", true);
			File::meta_NamedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_NamedType_children, "NamedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_File_parent, "File_parent", true);
			File::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ManagesComponent::meta_File_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ManagesComponent::meta_File_parent, "File_parent", true);
			File::meta_ManagesComponent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(File::meta_ManagesComponent_children, "ManagesComponent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_Exception_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_Exception_parent, "Exception_parent", true);
			Exception::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Exception::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EnumValue::meta_Enum_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EnumValue::meta_Enum_parent, "Enum_parent", true);
			Enum::meta_EnumValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Enum::meta_EnumValue_children, "EnumValue", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_Aggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_Aggregate_parent, "Aggregate_parent", true);
			Aggregate::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Aggregate::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LabelConnection::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LabelConnection::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_LabelConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_LabelConnection_children, "LabelConnection", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Label::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Label::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Label_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Label_children, "Label", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Discriminator::meta_SwitchedAggregate_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Discriminator::meta_SwitchedAggregate_parent, "SwitchedAggregate_parent", true);
			SwitchedAggregate::meta_Discriminator_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SwitchedAggregate::meta_Discriminator_child, "Discriminator", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Inherits::meta_Inheritable_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Inherits::meta_Inheritable_parent, "Inheritable_parent", true);
			Inheritable::meta_Inherits_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Inheritable::meta_Inherits_children, "Inherits", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_Inheritable_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_Inheritable_parent, "Inheritable_parent", true);
			Inheritable::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Inheritable::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Port::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Port::meta_Component_parent, "Component_parent", true);
			Component::meta_Port_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_Port_children, "Port", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReadonlyAttribute::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReadonlyAttribute::meta_Component_parent, "Component_parent", true);
			Component::meta_ReadonlyAttribute_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_ReadonlyAttribute_children, "ReadonlyAttribute", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerType::meta_Component_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerType::meta_Component_parent, "Component_parent", true);
			Component::meta_WorkerType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Component::meta_WorkerType_children, "WorkerType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OnewayOperation::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OnewayOperation::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_OnewayOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_OnewayOperation_children, "OnewayOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TwowayOperation::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TwowayOperation::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_TwowayOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_TwowayOperation_children, "TwowayOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Exception::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Exception::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_Exception_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_Exception_children, "Exception", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Constant::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Constant::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_Constant_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_Constant_children, "Constant", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NoInheritable::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NoInheritable::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_NoInheritable_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_NoInheritable_children, "NoInheritable", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RequiredRights::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RequiredRights::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_RequiredRights_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_RequiredRights_children, "RequiredRights", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationClassificationConn::meta_HasOperations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationClassificationConn::meta_HasOperations_parent, "HasOperations_parent", true);
			HasOperations::meta_OperationClassificationConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasOperations::meta_OperationClassificationConn_children, "OperationClassificationConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FactoryOperation::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FactoryOperation::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_FactoryOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_FactoryOperation_children, "FactoryOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PrivateFlag::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PrivateFlag::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_PrivateFlag_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_PrivateFlag_children, "PrivateFlag", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MakeMemberPrivate::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MakeMemberPrivate::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_MakeMemberPrivate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_MakeMemberPrivate_children, "MakeMemberPrivate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Member::meta_ObjectByValue_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Member::meta_ObjectByValue_parent, "ObjectByValue_parent", true);
			ObjectByValue::meta_Member_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ObjectByValue::meta_Member_children, "Member", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FactoryOperation::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FactoryOperation::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_FactoryOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_FactoryOperation_children, "FactoryOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LookupKey::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LookupKey::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_LookupKey_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_LookupKey_child, "LookupKey", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LookupOperation::meta_ComponentFactory_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LookupOperation::meta_ComponentFactory_parent, "ComponentFactory_parent", true);
			ComponentFactory::meta_LookupOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactory::meta_LookupOperation_children, "LookupOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Supports::meta_SupportsInterfaces_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Supports::meta_SupportsInterfaces_parent, "SupportsInterfaces_parent", true);
			SupportsInterfaces::meta_Supports_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SupportsInterfaces::meta_Supports_children, "Supports", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			GetException::meta_ReadonlyAttribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(GetException::meta_ReadonlyAttribute_parent, "ReadonlyAttribute_parent", true);
			ReadonlyAttribute::meta_GetException_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ReadonlyAttribute::meta_GetException_children, "GetException", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMember::meta_ReadonlyAttribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMember::meta_ReadonlyAttribute_parent, "ReadonlyAttribute_parent", true);
			ReadonlyAttribute::meta_AttributeMember_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ReadonlyAttribute::meta_AttributeMember_child, "AttributeMember", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SetException::meta_Attribute_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SetException::meta_Attribute_parent, "Attribute_parent", true);
			Attribute::meta_SetException_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Attribute::meta_SetException_children, "SetException", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InParameter::meta_OperationBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InParameter::meta_OperationBase_parent, "OperationBase_parent", true);
			OperationBase::meta_InParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(OperationBase::meta_InParameter_children, "InParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExceptionRef::meta_HasExceptions_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExceptionRef::meta_HasExceptions_parent, "HasExceptions_parent", true);
			HasExceptions::meta_ExceptionRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(HasExceptions::meta_ExceptionRef_children, "ExceptionRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InoutParameter::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InoutParameter::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_InoutParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_InoutParameter_children, "InoutParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OutParameter::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OutParameter::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_OutParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_OutParameter_children, "OutParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReturnType::meta_TwowayOperation_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReturnType::meta_TwowayOperation_parent, "TwowayOperation_parent", true);
			TwowayOperation::meta_ReturnType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TwowayOperation::meta_ReturnType_child, "ReturnType", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MultiInput::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MultiInput::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_MultiInput_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_MultiInput_children, "MultiInput", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Input::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Input::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_Input_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_Input_children, "Input", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QueryInput::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QueryInput::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_QueryInput_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_QueryInput_children, "QueryInput", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PeriodicEvent::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PeriodicEvent::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_PeriodicEvent_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_PeriodicEvent_children, "PeriodicEvent", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ApplicationTask::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ApplicationTask::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_ApplicationTask_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_ApplicationTask_children, "ApplicationTask", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Environment::meta_TopLevelBehavior_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Environment::meta_TopLevelBehavior_parent, "TopLevelBehavior_parent", true);
			TopLevelBehavior::meta_Environment_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelBehavior::meta_Environment_child, "Environment", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InterconnectConnection::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InterconnectConnection::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_InterconnectConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_InterconnectConnection_children, "InterconnectConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Interconnect::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Interconnect::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Interconnect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Interconnect_children, "Interconnect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Node::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Node::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Node_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Node_children, "Node", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BridgeConnection::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BridgeConnection::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_BridgeConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_BridgeConnection_children, "BridgeConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Bridge::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Bridge::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Bridge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Bridge_children, "Bridge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SharedResource::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SharedResource::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_SharedResource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_SharedResource_children, "SharedResource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Shares::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Shares::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Shares_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Shares_children, "Shares", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Domain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Domain_parent, "Domain_parent", true);
			Domain::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Domain::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_RequirementBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_RequirementBase_parent, "RequirementBase_parent", true);
			RequirementBase::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RequirementBase::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ECBehavior::meta_ECRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ECBehavior::meta_ECRequirements_parent, "ECRequirements_parent", true);
			ECRequirements::meta_ECBehavior_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ECRequirements::meta_ECBehavior_child, "ECBehavior", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ECRole::meta_ECRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ECRole::meta_ECRequirements_parent, "ECRequirements_parent", true);
			ECRequirements::meta_ECRole_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ECRequirements::meta_ECRole_children, "ECRole", true, 2, 2);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceProvider::meta_RTRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceProvider::meta_RTRequirements_parent, "RTRequirements_parent", true);
			RTRequirements::meta_ServiceProvider_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RTRequirements::meta_ServiceProvider_child, "ServiceProvider", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceConsumer::meta_RTRequirements_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceConsumer::meta_RTRequirements_parent, "RTRequirements_parent", true);
			RTRequirements::meta_ServiceConsumer_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RTRequirements::meta_ServiceConsumer_child, "ServiceConsumer", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataType::meta_Property_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataType::meta_Property_parent, "Property_parent", true);
			Property::meta_DataType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Property::meta_DataType_child, "DataType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataType::meta_SatisfierProperty_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataType::meta_SatisfierProperty_parent, "SatisfierProperty_parent", true);
			SatisfierProperty::meta_DataType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SatisfierProperty::meta_DataType_child, "DataType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SatisfierProperty::meta_RequirementSatisfier_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SatisfierProperty::meta_RequirementSatisfier_parent, "RequirementSatisfier_parent", true);
			RequirementSatisfier::meta_SatisfierProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RequirementSatisfier::meta_SatisfierProperty_children, "SatisfierProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageInterface::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageInterface::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageInterface_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageInterface_child, "PackageInterface", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Implementation::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Implementation::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_Implementation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_Implementation_children, "Implementation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementationReference::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementationReference::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentImplementationReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentImplementationReference_children, "ComponentImplementationReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigProperty::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigProperty::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageConfigProperty_children, "PackageConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageInfoProperty::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageInfoProperty::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_PackageInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_PackageInfoProperty_children, "PackageInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_PackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_PackageContainer_parent, "PackageContainer_parent", true);
			PackageContainer::meta_ComponentPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageContainer::meta_ComponentPackage_child, "ComponentPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurationReference::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurationReference::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_PackageConfigurationReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_PackageConfigurationReference_child, "PackageConfigurationReference", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackage::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackage::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_TopLevelPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_TopLevelPackage_child, "TopLevelPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			package::meta_TopLevelPackageContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(package::meta_TopLevelPackageContainer_parent, "TopLevelPackageContainer_parent", true);
			TopLevelPackageContainer::meta_package_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackageContainer::meta_package_child, "package", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataType::meta_ComponentPropertyDescription_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataType::meta_ComponentPropertyDescription_parent, "ComponentPropertyDescription_parent", true);
			ComponentPropertyDescription::meta_DataType_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentPropertyDescription::meta_DataType_child, "DataType", true, 1, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentConfigProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentConfigProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentConfigProperty_children, "ComponentConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentInfoProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentInfoProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentInfoProperty_children, "ComponentInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentProperty::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentProperty::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentProperty_children, "ComponentProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPropertyDescription::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPropertyDescription::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentPropertyDescription_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentPropertyDescription_children, "ComponentPropertyDescription", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_ComponentContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_ComponentContainer_parent, "ComponentContainer_parent", true);
			ComponentContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDependsOn::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDependsOn::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDependsOn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDependsOn_children, "ArtifactDependsOn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ImplementationArtifactReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ImplementationArtifactReference_children, "ImplementationArtifactReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDeployRequirement::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDeployRequirement::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDeployRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDeployRequirement_children, "ArtifactDeployRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactExecParameter::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactExecParameter::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactExecParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactExecParameter_children, "ArtifactExecParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactInfoProperty::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactInfoProperty::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactInfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactInfoProperty_children, "ArtifactInfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifact::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifact::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ImplementationArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ImplementationArtifact_children, "ImplementationArtifact", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactDependency::meta_ArtifactContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactDependency::meta_ArtifactContainer_parent, "ArtifactContainer_parent", true);
			ArtifactContainer::meta_ArtifactDependency_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ArtifactContainer::meta_ArtifactDependency_children, "ArtifactDependency", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfBasePackage::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfBasePackage::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfBasePackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfBasePackage_child, "PackageConfBasePackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfReference::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfReference::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfReference_child, "PackageConfReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_ComponentPackage_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_ComponentPackage_child, "ComponentPackage", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackageReference::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackageReference::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_ComponentPackageReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_ComponentPackageReference_child, "ComponentPackageReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfConfigProperty::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfConfigProperty::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfConfigProperty_children, "PackageConfConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfSelectRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfSelectRequirement_children, "PackageConfSelectRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child, "PackageConfSpecializedConfig", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfiguration::meta_PackageConfigurationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfiguration::meta_PackageConfigurationContainer_parent, "PackageConfigurationContainer_parent", true);
			PackageConfigurationContainer::meta_PackageConfiguration_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurationContainer::meta_PackageConfiguration_children, "PackageConfiguration", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackage::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackage::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentPackage_children, "ComponentPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackageReference::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackageReference::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentPackageReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentPackageReference_children, "ComponentPackageReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Requirement::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Requirement::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Requirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Requirement_children, "Requirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Component::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Component::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_Component_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_Component_children, "Component", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssembly::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssembly::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentAssembly_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentAssembly_children, "ComponentAssembly", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ProvidedRequestPort::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ProvidedRequestPort::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ProvidedRequestPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ProvidedRequestPort_children, "ProvidedRequestPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RequiredRequestPort::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RequiredRequestPort::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_RequiredRequestPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_RequiredRequestPort_children, "RequiredRequestPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InEventPort::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InEventPort::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_InEventPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_InEventPort_children, "InEventPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OutEventPort::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OutEventPort::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_OutEventPort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_OutEventPort_children, "OutEventPort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			emit::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(emit::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_emit_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_emit_children, "emit", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSourceDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSourceDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSourceDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSourceDelegate_children, "EventSourceDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSinkDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSinkDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSinkDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSinkDelegate_children, "EventSinkDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			deliverTo::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(deliverTo::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_deliverTo_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_deliverTo_children, "deliverTo", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			publish::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(publish::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_publish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_publish_children, "publish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyReference::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyReference::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentAssemblyReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentAssemblyReference_children, "ComponentAssemblyReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyselectRequirement::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyselectRequirement::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AssemblyselectRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AssemblyselectRequirement_children, "AssemblyselectRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeValue::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeValue::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeValue_children, "AttributeValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeDelegate_children, "AttributeDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMappingValue::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMappingValue::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMappingValue_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMappingValue_children, "AttributeMappingValue", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyConfigProperty::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyConfigProperty::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AssemblyConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AssemblyConfigProperty_children, "AssemblyConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FacetDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FacetDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_FacetDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_FacetDelegate_children, "FacetDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			invoke::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(invoke::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_invoke_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_invoke_children, "invoke", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReceptacleDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReceptacleDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ReceptacleDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ReceptacleDelegate_children, "ReceptacleDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMappingDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMappingDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMappingDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMappingDelegate_children, "AttributeMappingDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExternalDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExternalDelegate_children, "ExternalDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeMapping::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeMapping::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AttributeMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AttributeMapping_children, "AttributeMapping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PublishConnector::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PublishConnector::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_PublishConnector_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_PublishConnector_children, "PublishConnector", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ExternalPortReference::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ExternalPortReference::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ExternalPortReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ExternalPortReference_children, "ExternalPortReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SupportsDelegate::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SupportsDelegate::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_SupportsDelegate_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_SupportsDelegate_children, "SupportsDelegate", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyDeployRequirement::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyDeployRequirement::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_AssemblyDeployRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_AssemblyDeployRequirement_children, "AssemblyDeployRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QoSConnector::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QoSConnector::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_QoSConnector_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_QoSConnector_children, "QoSConnector", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PortQoS::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PortQoS::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_PortQoS_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_PortQoS_children, "PortQoS", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QoSReq::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QoSReq::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_QoSReq_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_QoSReq_children, "QoSReq", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RecepInvoke::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RecepInvoke::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_RecepInvoke_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_RecepInvoke_children, "RecepInvoke", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FacetInvoke::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FacetInvoke::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_FacetInvoke_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_FacetInvoke_children, "FacetInvoke", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSourcePublish::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSourcePublish::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSourcePublish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSourcePublish_children, "EventSourcePublish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentQoS::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentQoS::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentQoS_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentQoS_children, "ComponentQoS", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyQoS::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyQoS::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_ComponentAssemblyQoS_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_ComponentAssemblyQoS_children, "ComponentAssemblyQoS", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QoSCharacteristicBase::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QoSCharacteristicBase::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_QoSCharacteristicBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_QoSCharacteristicBase_children, "QoSCharacteristicBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSinkPublish::meta_ComponentAssembly_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSinkPublish::meta_ComponentAssembly_parent, "ComponentAssembly_parent", true);
			ComponentAssembly::meta_EventSinkPublish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssembly::meta_EventSinkPublish_children, "EventSinkPublish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationDependsOn::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationDependsOn::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationDependsOn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationDependsOn_children, "ImplementationDependsOn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Implements::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Implements::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_Implements_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_Implements_child, "Implements", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ComponentRef_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ComponentRef_child, "ComponentRef", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationDependency::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationDependency::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationDependency_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationDependency_children, "ImplementationDependency", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationCapability::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationCapability::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ImplementationCapability_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ImplementationCapability_children, "ImplementationCapability", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Capability::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Capability::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_Capability_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_Capability_children, "Capability", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CriticalPath::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CriticalPath::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_CriticalPath_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_CriticalPath_children, "CriticalPath", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathReference::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathReference::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_PathReference_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_PathReference_child, "PathReference", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementation::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementation::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ComponentImplementation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ComponentImplementation_children, "ComponentImplementation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyQoSCharacteristic::meta_AssemblyQoSComposition_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyQoSCharacteristic::meta_AssemblyQoSComposition_ComponentImplementationContainer_parent, "AssemblyQoSComposition_ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_AssemblyQoSComposition = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_AssemblyQoSComposition, "AssemblyQoSComposition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PortQoSCharacteristic::meta_PortQoSComposition_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PortQoSCharacteristic::meta_PortQoSComposition_ComponentImplementationContainer_parent, "PortQoSComposition_ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_PortQoSComposition = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_PortQoSComposition, "PortQoSComposition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyQoS::meta_ComponentImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyQoS::meta_ComponentImplementationContainer_parent, "ComponentImplementationContainer_parent", true);
			ComponentImplementationContainer::meta_ComponentAssemblyQoS_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementationContainer::meta_ComponentAssemblyQoS_children, "ComponentAssemblyQoS", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InfoProperty::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InfoProperty::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_InfoProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_InfoProperty_children, "InfoProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConfigProperty::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConfigProperty::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ConfigProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ConfigProperty_children, "ConfigProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithprimaryArtifact::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithprimaryArtifact::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithprimaryArtifact_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithprimaryArtifact_children, "MonolithprimaryArtifact", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithDeployRequirement::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithDeployRequirement::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithDeployRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithDeployRequirement_children, "MonolithDeployRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonolithExecParameter::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonolithExecParameter::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_MonolithExecParameter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_MonolithExecParameter_children, "MonolithExecParameter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifactReference::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifactReference::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ImplementationArtifactReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ImplementationArtifactReference_children, "ImplementationArtifactReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationRequirement::meta_ImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationRequirement::meta_ImplementationContainer_parent, "ImplementationContainer_parent", true);
			ImplementationContainer::meta_ImplementationRequirement_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationContainer::meta_ImplementationRequirement_children, "ImplementationRequirement", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			NodeReference::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(NodeReference::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_NodeReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_NodeReference_children, "NodeReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InstanceMapping::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InstanceMapping::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_InstanceMapping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_InstanceMapping_children, "InstanceMapping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CollocationGroup::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CollocationGroup::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_CollocationGroup_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_CollocationGroup_children, "CollocationGroup", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Deploys::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Deploys::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_Deploys_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_Deploys_children, "Deploys", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CollocationGroupMember::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CollocationGroupMember::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_CollocationGroupMember_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_CollocationGroupMember_children, "CollocationGroupMember", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlanQoS::meta_DeploymentPlan_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlanQoS::meta_DeploymentPlan_parent, "DeploymentPlan_parent", true);
			DeploymentPlan::meta_DeploymentPlanQoS_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlan::meta_DeploymentPlanQoS_children, "DeploymentPlanQoS", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Bridge_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Bridge_parent, "Bridge_parent", true);
			Bridge::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Bridge::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Interconnect_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Interconnect_parent, "Interconnect_parent", true);
			Interconnect::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Interconnect::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Resource::meta_Node_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Resource::meta_Node_parent, "Node_parent", true);
			Node::meta_Resource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Node::meta_Resource_children, "Resource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataAnalysisBase::meta_MetricsBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataAnalysisBase::meta_MetricsBase_parent, "MetricsBase_parent", true);
			MetricsBase::meta_DataAnalysisBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(MetricsBase::meta_DataAnalysisBase_children, "DataAnalysisBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_OperationBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_OperationBase_children, "OperationBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimerConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimerConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimerConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimerConnection_children, "TimerConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MetricConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MetricConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_MetricConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_MetricConnection_children, "MetricConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DataAnalysisBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DataAnalysisBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_DataAnalysisBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_DataAnalysisBase_children, "DataAnalysisBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MetricsBase::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MetricsBase::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_MetricsBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_MetricsBase_children, "MetricsBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimeProbe::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimeProbe::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimeProbe_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimeProbe_children, "TimeProbe", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_OperationRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_OperationRef_children, "OperationRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_EventRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_EventRef_children, "EventRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Event::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Event::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_Event_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_Event_children, "Event", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TimerEventSinkConn::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TimerEventSinkConn::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TimerEventSinkConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TimerEventSinkConn_children, "TimerEventSinkConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TaskSet::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TaskSet::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_TaskSet_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_TaskSet_children, "TaskSet", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Task::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Task::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_Task_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_Task_children, "Task", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkloadCharacteristics::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkloadCharacteristics::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_WorkloadCharacteristics_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_WorkloadCharacteristics_children, "WorkloadCharacteristics", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentOperation::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentOperation::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_ComponentOperation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_ComponentOperation_children, "ComponentOperation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CompRef::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CompRef::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_CompRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_CompRef_children, "CompRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_WorkLoadOperationConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_WorkLoadOperationConnection_children, "WorkLoadOperationConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkType::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkType::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_BenchmarkType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_BenchmarkType_children, "BenchmarkType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent, "BenchmarkAnalysis_parent", true);
			BenchmarkAnalysis::meta_BenchmarkCharacteristics_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BenchmarkAnalysis::meta_BenchmarkCharacteristics_children, "BenchmarkCharacteristics", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DstEdge::meta_ConnectedComponent_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DstEdge::meta_ConnectedComponent_parent, "ConnectedComponent_parent", true);
			ConnectedComponent::meta_DstEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectedComponent::meta_DstEdge_children, "DstEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Port::meta_ConnectedComponent_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Port::meta_ConnectedComponent_parent, "ConnectedComponent_parent", true);
			ConnectedComponent::meta_Port_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ConnectedComponent::meta_Port_children, "Port", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DstEdge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DstEdge::meta_Path_parent, "Path_parent", true);
			Path::meta_DstEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_DstEdge_children, "DstEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_Path_parent, "Path_parent", true);
			Path::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SrcEdge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SrcEdge::meta_Path_parent, "Path_parent", true);
			Path::meta_SrcEdge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_SrcEdge_children, "SrcEdge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EdgeProperty::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EdgeProperty::meta_Path_parent, "Path_parent", true);
			Path::meta_EdgeProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_EdgeProperty_children, "EdgeProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Edge::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Edge::meta_Path_parent, "Path_parent", true);
			Path::meta_Edge_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_Edge_children, "Edge", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Path_parent, "Path_parent", true);
			Path::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			GraphVertex::meta_Path_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(GraphVertex::meta_Path_parent, "Path_parent", true);
			Path::meta_GraphVertex_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Path::meta_GraphVertex_children, "GraphVertex", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Path::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Path::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_Path_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_Path_children, "Path", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathProperty::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathProperty::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_PathProperty_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_PathProperty_children, "PathProperty", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_Paths_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_Paths_parent, "Paths_parent", true);
			Paths::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Paths::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MultipleServiceRequests::meta_ServiceProvider_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MultipleServiceRequests::meta_ServiceProvider_parent, "ServiceProvider_parent", true);
			ServiceProvider::meta_MultipleServiceRequests_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServiceProvider::meta_MultipleServiceRequests_child, "MultipleServiceRequests", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ServiceLevels::meta_ServiceProvider_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ServiceLevels::meta_ServiceProvider_parent, "ServiceProvider_parent", true);
			ServiceProvider::meta_ServiceLevels_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ServiceProvider::meta_ServiceLevels_child, "ServiceLevels", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent, "ComponentFactoryImplementationContainer_parent", true);
			ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children, "ComponentFactoryInstance", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerFile::meta_WorkerLibrary_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerFile::meta_WorkerLibrary_parent, "WorkerLibrary_parent", true);
			WorkerLibrary::meta_WorkerFile_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerLibrary::meta_WorkerFile_children, "WorkerFile", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Action::meta_Worker_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Action::meta_Worker_parent, "Worker_parent", true);
			Worker::meta_Action_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Worker::meta_Action_children, "Action", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerPackage::meta_WorkerFile_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerPackage::meta_WorkerFile_parent, "WorkerFile_parent", true);
			WorkerFile::meta_WorkerPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerFile::meta_WorkerPackage_children, "WorkerPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Worker::meta_WorkerPackageBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Worker::meta_WorkerPackageBase_parent, "WorkerPackageBase_parent", true);
			WorkerPackageBase::meta_Worker_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerPackageBase::meta_Worker_children, "Worker", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerPackage::meta_WorkerPackage_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerPackage::meta_WorkerPackage_parent, "WorkerPackage_parent", true);
			WorkerPackage::meta_WorkerPackage_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerPackage::meta_WorkerPackage_children, "WorkerPackage", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Variable::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Variable::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Variable_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Variable_children, "Variable", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TerminalTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TerminalTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_TerminalTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_TerminalTransition_children, "TerminalTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Terminal::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Terminal::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Terminal_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Terminal_children, "Terminal", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TerminalEffect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TerminalEffect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_TerminalEffect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_TerminalEffect_children, "TerminalEffect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			StateBase::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(StateBase::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_StateBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_StateBase_children, "StateBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BranchTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BranchTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_BranchTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_BranchTransition_children, "BranchTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Transition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Transition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Transition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Transition_children, "Transition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LoopTransition::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LoopTransition::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_LoopTransition_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_LoopTransition_children, "LoopTransition", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Finish::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Finish::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Finish_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Finish_children, "Finish", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BehaviorInputAction::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BehaviorInputAction::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_BehaviorInputAction_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_BehaviorInputAction_children, "BehaviorInputAction", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ActionBase::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ActionBase::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_ActionBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_ActionBase_children, "ActionBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InputEffect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InputEffect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_InputEffect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_InputEffect_children, "InputEffect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Effect::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Effect::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_Effect_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_Effect_children, "Effect", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			QueryInputAction::meta_BehaviorModel_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(QueryInputAction::meta_BehaviorModel_parent, "BehaviorModel_parent", true);
			BehaviorModel::meta_QueryInputAction_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorModel::meta_QueryInputAction_children, "QueryInputAction", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_BehaviorInputAction_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_BehaviorInputAction_parent, "BehaviorInputAction_parent", true);
			BehaviorInputAction::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(BehaviorInputAction::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_ActionBase_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_ActionBase_parent, "ActionBase_parent", true);
			ActionBase::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ActionBase::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_QueryInputAction_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_QueryInputAction_parent, "QueryInputAction_parent", true);
			QueryInputAction::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(QueryInputAction::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyRuleRef::meta_ComponentAssemblySecurityQoS_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyRuleRef::meta_ComponentAssemblySecurityQoS_parent, "ComponentAssemblySecurityQoS_parent", true);
			ComponentAssemblySecurityQoS::meta_AssemblyRuleRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAssemblySecurityQoS::meta_AssemblyRuleRef_children, "AssemblyRuleRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MonitorableGroupAssociation::meta_FailOverUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MonitorableGroupAssociation::meta_FailOverUnit_parent, "FailOverUnit_parent", true);
			FailOverUnit::meta_MonitorableGroupAssociation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FailOverUnit::meta_MonitorableGroupAssociation_children, "MonitorableGroupAssociation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FTMonitorable::meta_FailOverUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FTMonitorable::meta_FailOverUnit_parent, "FailOverUnit_parent", true);
			FailOverUnit::meta_FTMonitorable_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FailOverUnit::meta_FTMonitorable_children, "FTMonitorable", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RepicaGroupConfiguration::meta_FailOverUnit_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RepicaGroupConfiguration::meta_FailOverUnit_parent, "FailOverUnit_parent", true);
			FailOverUnit::meta_RepicaGroupConfiguration_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FailOverUnit::meta_RepicaGroupConfiguration_children, "RepicaGroupConfiguration", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SenderConnection::meta_CIAOEvents_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SenderConnection::meta_CIAOEvents_parent, "CIAOEvents_parent", true);
			CIAOEvents::meta_SenderConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(CIAOEvents::meta_SenderConnection_children, "SenderConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			eventServiceConfiguration::meta_CIAOEvents_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(eventServiceConfiguration::meta_CIAOEvents_parent, "CIAOEvents_parent", true);
			CIAOEvents::meta_eventServiceConfiguration_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(CIAOEvents::meta_eventServiceConfiguration_children, "eventServiceConfiguration", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ReceiverConnection::meta_CIAOEvents_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ReceiverConnection::meta_CIAOEvents_parent, "CIAOEvents_parent", true);
			CIAOEvents::meta_ReceiverConnection_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(CIAOEvents::meta_ReceiverConnection_children, "ReceiverConnection", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventChannelCommunicationPoint::meta_CIAOEvents_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventChannelCommunicationPoint::meta_CIAOEvents_parent, "CIAOEvents_parent", true);
			CIAOEvents::meta_EventChannelCommunicationPoint_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(CIAOEvents::meta_EventChannelCommunicationPoint_children, "EventChannelCommunicationPoint", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRuleRef::meta_ComponentSecurityQoS_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRuleRef::meta_ComponentSecurityQoS_parent, "ComponentSecurityQoS_parent", true);
			ComponentSecurityQoS::meta_ComponentRuleRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentSecurityQoS::meta_ComponentRuleRef_children, "ComponentRuleRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PriorityBands::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PriorityBands::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_PriorityBands_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_PriorityBands_children, "PriorityBands", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PriorityModelPolicy::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PriorityModelPolicy::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_PriorityModelPolicy_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_PriorityModelPolicy_child, "PriorityModelPolicy", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Lane::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Lane::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_Lane_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_Lane_children, "Lane", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ThreadPool::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ThreadPool::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_ThreadPool_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_ThreadPool_child, "ThreadPool", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PolicyPerThreadPool::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PolicyPerThreadPool::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_PolicyPerThreadPool_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_PolicyPerThreadPool_children, "PolicyPerThreadPool", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EnvironmentConf::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EnvironmentConf::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_EnvironmentConf_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_EnvironmentConf_child, "EnvironmentConf", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			LanePerThreadPool::meta_RealTimeConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(LanePerThreadPool::meta_RealTimeConfiguration_parent, "RealTimeConfiguration_parent", true);
			RealTimeConfiguration::meta_LanePerThreadPool_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RealTimeConfiguration::meta_LanePerThreadPool_children, "LanePerThreadPool", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SharedResourceReference::meta_RootRiskGroup_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SharedResourceReference::meta_RootRiskGroup_parent, "RootRiskGroup_parent", true);
			RootRiskGroup::meta_SharedResourceReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootRiskGroup::meta_SharedResourceReference_children, "SharedResourceReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Property::meta_RepicaGroupConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Property::meta_RepicaGroupConfiguration_parent, "RepicaGroupConfiguration_parent", true);
			RepicaGroupConfiguration::meta_Property_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RepicaGroupConfiguration::meta_Property_children, "Property", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RootRiskAssociation::meta_DomainRiskGrouping_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RootRiskAssociation::meta_DomainRiskGrouping_parent, "DomainRiskGrouping_parent", true);
			DomainRiskGrouping::meta_RootRiskAssociation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DomainRiskGrouping::meta_RootRiskAssociation_children, "RootRiskAssociation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SRGRiskAssociation::meta_DomainRiskGrouping_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SRGRiskAssociation::meta_DomainRiskGrouping_parent, "DomainRiskGrouping_parent", true);
			DomainRiskGrouping::meta_SRGRiskAssociation_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DomainRiskGrouping::meta_SRGRiskAssociation_children, "SRGRiskAssociation", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SRGBase::meta_DomainRiskGrouping_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SRGBase::meta_DomainRiskGrouping_parent, "DomainRiskGrouping_parent", true);
			DomainRiskGrouping::meta_SRGBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DomainRiskGrouping::meta_SRGBase_children, "SRGBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RootRiskGroup::meta_DomainRiskGrouping_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RootRiskGroup::meta_DomainRiskGrouping_parent, "DomainRiskGrouping_parent", true);
			DomainRiskGrouping::meta_RootRiskGroup_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DomainRiskGrouping::meta_RootRiskGroup_child, "RootRiskGroup", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SharedResourceReference::meta_SharedRiskGroup_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SharedResourceReference::meta_SharedRiskGroup_parent, "SharedRiskGroup_parent", true);
			SharedRiskGroup::meta_SharedResourceReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SharedRiskGroup::meta_SharedResourceReference_children, "SharedResourceReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FTDeployDepends::meta_FTDeployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FTDeployDepends::meta_FTDeployment_parent, "FTDeployment_parent", true);
			FTDeployment::meta_FTDeployDepends_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FTDeployment::meta_FTDeployDepends_children, "FTDeployDepends", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlanRef::meta_FTDeployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlanRef::meta_FTDeployment_parent, "FTDeployment_parent", true);
			FTDeployment::meta_DeploymentPlanRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FTDeployment::meta_DeploymentPlanRef_children, "DeploymentPlanRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DomainRiskGrouping::meta_FTDeployment_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DomainRiskGrouping::meta_FTDeployment_parent, "FTDeployment_parent", true);
			FTDeployment::meta_DomainRiskGrouping_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(FTDeployment::meta_DomainRiskGrouping_children, "DomainRiskGrouping", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSourcePort::meta_Filter_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSourcePort::meta_Filter_parent, "Filter_parent", true);
			Filter::meta_EventSourcePort_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Filter::meta_EventSourcePort_children, "EventSourcePort", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventSource::meta_Filter_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventSource::meta_Filter_parent, "Filter_parent", true);
			Filter::meta_EventSource_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Filter::meta_EventSource_children, "EventSource", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ConsumerBehavior::meta_eventServiceConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ConsumerBehavior::meta_eventServiceConfiguration_parent, "eventServiceConfiguration_parent", true);
			eventServiceConfiguration::meta_ConsumerBehavior_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(eventServiceConfiguration::meta_ConsumerBehavior_child, "ConsumerBehavior", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			EventChannelFactory::meta_eventServiceConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(EventChannelFactory::meta_eventServiceConfiguration_parent, "eventServiceConfiguration_parent", true);
			eventServiceConfiguration::meta_EventChannelFactory_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(eventServiceConfiguration::meta_EventChannelFactory_child, "EventChannelFactory", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SupplierBehavior::meta_eventServiceConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SupplierBehavior::meta_eventServiceConfiguration_parent, "eventServiceConfiguration_parent", true);
			eventServiceConfiguration::meta_SupplierBehavior_child = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(eventServiceConfiguration::meta_SupplierBehavior_child, "SupplierBehavior", true, 0, 1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Filter::meta_eventServiceConfiguration_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Filter::meta_eventServiceConfiguration_parent, "eventServiceConfiguration_parent", true);
			eventServiceConfiguration::meta_Filter_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(eventServiceConfiguration::meta_Filter_children, "Filter", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PortRuleRef::meta_SecurityQoS_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PortRuleRef::meta_SecurityQoS_parent, "SecurityQoS_parent", true);
			SecurityQoS::meta_PortRuleRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SecurityQoS::meta_PortRuleRef_children, "PortRuleRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OnInterfaceConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OnInterfaceConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_OnInterfaceConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_OnInterfaceConn_children, "OnInterfaceConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AssemblyAccessConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AssemblyAccessConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_AssemblyAccessConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_AssemblyAccessConn_children, "AssemblyAccessConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeRef::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeRef::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_AttributeRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_AttributeRef_children, "AttributeRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SecuredPathConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SecuredPathConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_SecuredPathConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_SecuredPathConn_children, "SecuredPathConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationInvokeConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationInvokeConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_OperationInvokeConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_OperationInvokeConn_children, "OperationInvokeConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAssemblyReference::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAssemblyReference::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_ComponentAssemblyReference_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_ComponentAssemblyReference_children, "ComponentAssemblyReference", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OnAssemblyConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OnAssemblyConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_OnAssemblyConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_OnAssemblyConn_children, "OnAssemblyConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			AttributeManipulateConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(AttributeManipulateConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_AttributeManipulateConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_AttributeManipulateConn_children, "AttributeManipulateConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ResourceActionBase::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ResourceActionBase::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_ResourceActionBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_ResourceActionBase_children, "ResourceActionBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RuleBase::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RuleBase::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_RuleBase_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_RuleBase_children, "RuleBase", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathRef::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathRef::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_PathRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_PathRef_children, "PathRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ObjectAccessConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ObjectAccessConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_ObjectAccessConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_ObjectAccessConn_children, "ObjectAccessConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAccessConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAccessConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_ComponentAccessConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_ComponentAccessConn_children, "ComponentAccessConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InitiatorRoleRef::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InitiatorRoleRef::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_InitiatorRoleRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_InitiatorRoleRef_children, "InitiatorRoleRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OnComponentConn::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OnComponentConn::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_OnComponentConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_OnComponentConn_children, "OnComponentConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TargetObjectRef::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TargetObjectRef::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_TargetObjectRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_TargetObjectRef_children, "TargetObjectRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentRef::meta_Policy_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentRef::meta_Policy_parent, "Policy_parent", true);
			Policy::meta_ComponentRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Policy::meta_ComponentRef_children, "ComponentRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Policy::meta_PolicySet_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Policy::meta_PolicySet_parent, "PolicySet_parent", true);
			PolicySet::meta_Policy_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PolicySet::meta_Policy_children, "Policy", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			OperationRef::meta_OperationSet_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(OperationRef::meta_OperationSet_parent, "OperationSet_parent", true);
			OperationSet::meta_OperationRef_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(OperationSet::meta_OperationRef_children, "OperationRef", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Subject::meta_Group_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Subject::meta_Group_parent, "Group_parent", true);
			Group::meta_Subject_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Group::meta_Subject_children, "Subject", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Role::meta_Realm_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Role::meta_Realm_parent, "Realm_parent", true);
			Realm::meta_Role_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Realm::meta_Role_children, "Role", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Realm::meta_SecurityDomain_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Realm::meta_SecurityDomain_parent, "SecurityDomain_parent", true);
			SecurityDomain::meta_Realm_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(SecurityDomain::meta_Realm_children, "Realm", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Role::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Role::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_Role_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_Role_children, "Role", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RightsAssignmentConn::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RightsAssignmentConn::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_RightsAssignmentConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_RightsAssignmentConn_children, "RightsAssignmentConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RoleAssignmentConn::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RoleAssignmentConn::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_RoleAssignmentConn_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_RoleAssignmentConn_children, "RoleAssignmentConn", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Subject::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Subject::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_Subject_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_Subject_children, "Subject", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			GrantedRights::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(GrantedRights::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_GrantedRights_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_GrantedRights_children, "GrantedRights", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			SecurityDomain::meta_RBAC_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(SecurityDomain::meta_RBAC_parent, "RBAC_parent", true);
			RBAC::meta_SecurityDomain_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RBAC::meta_SecurityDomain_children, "SecurityDomain", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RBAC::meta_Security_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RBAC::meta_Security_parent, "Security_parent", true);
			Security::meta_RBAC_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Security::meta_RBAC_children, "RBAC", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PolicySet::meta_Security_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PolicySet::meta_Security_parent, "Security_parent", true);
			Security::meta_PolicySet_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Security::meta_PolicySet_children, "PolicySet", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			MPC::meta_ComponentBuild_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(MPC::meta_ComponentBuild_parent, "ComponentBuild_parent", true);
			ComponentBuild::meta_MPC_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentBuild::meta_MPC_children, "MPC", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			File::meta_InterfaceDefinitions_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(File::meta_InterfaceDefinitions_parent, "InterfaceDefinitions_parent", true);
			InterfaceDefinitions::meta_File_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(InterfaceDefinitions::meta_File_children, "File", true, 1, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PredefinedType::meta_PredefinedTypes_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PredefinedType::meta_PredefinedTypes_parent, "PredefinedTypes_parent", true);
			PredefinedTypes::meta_PredefinedType_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PredefinedTypes::meta_PredefinedType_children, "PredefinedType", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Domain::meta_Targets_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Domain::meta_Targets_parent, "Targets_parent", true);
			Targets::meta_Domain_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(Targets::meta_Domain_children, "Domain", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageContainer::meta_ComponentPackages_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageContainer::meta_ComponentPackages_parent, "ComponentPackages_parent", true);
			ComponentPackages::meta_PackageContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentPackages::meta_PackageContainer_children, "PackageContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackageContainer::meta_TopLevelPackages_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackageContainer::meta_TopLevelPackages_parent, "TopLevelPackages_parent", true);
			TopLevelPackages::meta_TopLevelPackageContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(TopLevelPackages::meta_TopLevelPackageContainer_children, "TopLevelPackageContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentContainer::meta_ComponentTypes_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentContainer::meta_ComponentTypes_parent, "ComponentTypes_parent", true);
			ComponentTypes::meta_ComponentContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentTypes::meta_ComponentContainer_children, "ComponentContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ArtifactContainer::meta_ImplementationArtifacts_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ArtifactContainer::meta_ImplementationArtifacts_parent, "ImplementationArtifacts_parent", true);
			ImplementationArtifacts::meta_ArtifactContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ImplementationArtifacts::meta_ArtifactContainer_children, "ArtifactContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurationContainer::meta_PackageConfigurations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurationContainer::meta_PackageConfigurations_parent, "PackageConfigurations_parent", true);
			PackageConfigurations::meta_PackageConfigurationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PackageConfigurations::meta_PackageConfigurationContainer_children, "PackageConfigurationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementationContainer::meta_ComponentImplementations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementationContainer::meta_ComponentImplementations_parent, "ComponentImplementations_parent", true);
			ComponentImplementations::meta_ComponentImplementationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentImplementations::meta_ComponentImplementationContainer_children, "ComponentImplementationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlan::meta_DeploymentPlans_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlan::meta_DeploymentPlans_parent, "DeploymentPlans_parent", true);
			DeploymentPlans::meta_DeploymentPlan_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(DeploymentPlans::meta_DeploymentPlan_children, "DeploymentPlan", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			BenchmarkAnalysis::meta_ComponentAnalyses_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(BenchmarkAnalysis::meta_ComponentAnalyses_parent, "ComponentAnalyses_parent", true);
			ComponentAnalyses::meta_BenchmarkAnalysis_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentAnalyses::meta_BenchmarkAnalysis_children, "BenchmarkAnalysis", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Paths::meta_PathDiagrams_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Paths::meta_PathDiagrams_parent, "PathDiagrams_parent", true);
			PathDiagrams::meta_Paths_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(PathDiagrams::meta_Paths_children, "Paths", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent, "ComponentFactoryImplementations_parent", true);
			ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children, "ComponentFactoryImplementationContainer", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerLibrary::meta_WorkerLibraries_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerLibrary::meta_WorkerLibraries_parent, "WorkerLibraries_parent", true);
			WorkerLibraries::meta_WorkerLibrary_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(WorkerLibraries::meta_WorkerLibrary_children, "WorkerLibrary", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			FTDeployment::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(FTDeployment::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_FTDeployment_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_FTDeployment_children, "FTDeployment", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			CIAOEvents::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(CIAOEvents::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_CIAOEvents_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_CIAOEvents_children, "CIAOEvents", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Security::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Security::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_Security_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_Security_children, "Security", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentBuild::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentBuild::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentBuild_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentBuild_children, "ComponentBuild", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			InterfaceDefinitions::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(InterfaceDefinitions::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_InterfaceDefinitions_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_InterfaceDefinitions_children, "InterfaceDefinitions", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PredefinedTypes::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PredefinedTypes::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PredefinedTypes_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PredefinedTypes_children, "PredefinedTypes", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			Targets::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(Targets::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_Targets_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_Targets_children, "Targets", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentPackages::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentPackages::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentPackages_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentPackages_children, "ComponentPackages", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			TopLevelPackages::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(TopLevelPackages::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_TopLevelPackages_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_TopLevelPackages_children, "TopLevelPackages", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentTypes::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentTypes::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentTypes_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentTypes_children, "ComponentTypes", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ImplementationArtifacts::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ImplementationArtifacts::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ImplementationArtifacts_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ImplementationArtifacts_children, "ImplementationArtifacts", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PackageConfigurations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PackageConfigurations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PackageConfigurations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PackageConfigurations_children, "PackageConfigurations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentImplementations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentImplementations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentImplementations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentImplementations_children, "ComponentImplementations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			DeploymentPlans::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(DeploymentPlans::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_DeploymentPlans_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_DeploymentPlans_children, "DeploymentPlans", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentAnalyses::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentAnalyses::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentAnalyses_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentAnalyses_children, "ComponentAnalyses", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			PathDiagrams::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(PathDiagrams::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_PathDiagrams_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_PathDiagrams_children, "PathDiagrams", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			ComponentFactoryImplementations::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(ComponentFactoryImplementations::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_ComponentFactoryImplementations_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_ComponentFactoryImplementations_children, "ComponentFactoryImplementations", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			WorkerLibraries::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(WorkerLibraries::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_WorkerLibraries_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_WorkerLibraries_children, "WorkerLibraries", true, 0, -1);

		}
		{
			::Uml::Composition comp = ::Uml::Composition::Create(meta);
			::Uml::InitCompositionProps(comp, "", false);
			RootFolder::meta_RootFolder_parent = ::Uml::CompositionParentRole::Create(comp);
			::Uml::InitCompositionParentRoleProps(RootFolder::meta_RootFolder_parent, "RootFolder_parent", true);
			RootFolder::meta_RootFolder_children = ::Uml::CompositionChildRole::Create(comp);
			::Uml::InitCompositionChildRoleProps(RootFolder::meta_RootFolder_children, "RootFolder", true, 0, -1);

		}

	}

	void InitMetaLinks() {
		Worker::meta_Action_children.target() = Action::meta;

		ActionBase::meta_dstEffect.target() = StateBase::meta;
		ActionBase::meta_srcTransition.target() = State::meta;
		ActionBase::meta_srcBranchTransition.target() = BranchState::meta;
		ActionBase::meta_srcLoopTransition.target() = LoopState::meta;
		Property::meta_ActionBase_parent.target() = ActionBase::meta;
		BehaviorModel::meta_ActionBase_children.target() = ActionBase::meta;
		ActionBase::meta.subTypes() += Action::meta;
		ActionBase::meta.subTypes() += OutputAction::meta;
		ActionBase::meta.subTypes() += QueryAction::meta;

		Member::meta_Aggregate_parent.target() = Aggregate::meta;

		Alias::meta_ref.target() = MemberType::meta;

		TopLevelBehavior::meta_ApplicationTask_children.target() = ApplicationTask::meta;

		ArtifactDependsOn::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifactReference::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactDeployRequirement::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		Requirement::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactExecParameter::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactInfoProperty::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		Property::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifact::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ArtifactDependency::meta_ArtifactContainer_parent.target() = ArtifactContainer::meta;
		ImplementationArtifacts::meta_ArtifactContainer_children.target() = ArtifactContainer::meta;

		ArtifactContainer::meta_ArtifactDependency_children.target() = ArtifactDependency::meta;
		ArtifactDependency::meta.association() = ImplementationArtifact::meta_dstArtifactDependency.parent();
		ArtifactDependency::meta_dstArtifactDependency_end_ = ImplementationArtifact::meta_srcArtifactDependency_rev = ImplementationArtifact::meta_dstArtifactDependency;
		ArtifactDependency::meta_srcArtifactDependency_end_ = ImplementationArtifact::meta_dstArtifactDependency_rev = ImplementationArtifact::meta_srcArtifactDependency;

		ArtifactContainer::meta_ArtifactDependsOn_children.target() = ArtifactDependsOn::meta;
		ArtifactDependsOn::meta.association() = ImplementationArtifact::meta_dstArtifactDependsOn.parent();
		ArtifactDependsOn::meta_dstArtifactDependsOn_end_ = ImplementationArtifactReference::meta_srcArtifactDependsOn_rev = ImplementationArtifact::meta_dstArtifactDependsOn;
		ArtifactDependsOn::meta_srcArtifactDependsOn_end_ = ImplementationArtifact::meta_dstArtifactDependsOn_rev = ImplementationArtifactReference::meta_srcArtifactDependsOn;

		ArtifactContainer::meta_ArtifactDeployRequirement_children.target() = ArtifactDeployRequirement::meta;
		ArtifactDeployRequirement::meta.association() = ImplementationArtifact::meta_dstArtifactDeployRequirement.parent();
		ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_ = Requirement::meta_srcArtifactDeployRequirement_rev = ImplementationArtifact::meta_dstArtifactDeployRequirement;
		ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_ = ImplementationArtifact::meta_dstArtifactDeployRequirement_rev = Requirement::meta_srcArtifactDeployRequirement;

		ArtifactContainer::meta_ArtifactExecParameter_children.target() = ArtifactExecParameter::meta;
		ArtifactExecParameter::meta.association() = ImplementationArtifact::meta_dstArtifactExecParameter.parent();
		ArtifactExecParameter::meta_dstArtifactExecParameter_end_ = Property::meta_srcArtifactExecParameter_rev = ImplementationArtifact::meta_dstArtifactExecParameter;
		ArtifactExecParameter::meta_srcArtifactExecParameter_end_ = ImplementationArtifact::meta_dstArtifactExecParameter_rev = Property::meta_srcArtifactExecParameter;

		ArtifactContainer::meta_ArtifactInfoProperty_children.target() = ArtifactInfoProperty::meta;
		ArtifactInfoProperty::meta.association() = ImplementationArtifact::meta_dstArtifactInfoProperty.parent();
		ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_ = Property::meta_srcArtifactInfoProperty_rev = ImplementationArtifact::meta_dstArtifactInfoProperty;
		ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_ = ImplementationArtifact::meta_dstArtifactInfoProperty_rev = Property::meta_srcArtifactInfoProperty;

		Policy::meta_AssemblyAccessConn_children.target() = AssemblyAccessConn::meta;
		AssemblyAccessConn::meta.association() = InitiatorRoleRef::meta_dstAssemblyAccessConn.parent();
		AssemblyAccessConn::meta_dstAssemblyAccessConn_end_ = AssemblyRule::meta_srcAssemblyAccessConn_rev = InitiatorRoleRef::meta_dstAssemblyAccessConn;
		AssemblyAccessConn::meta_srcAssemblyAccessConn_end_ = InitiatorRoleRef::meta_dstAssemblyAccessConn_rev = AssemblyRule::meta_srcAssemblyAccessConn;

		ComponentAssembly::meta_AssemblyConfigProperty_children.target() = AssemblyConfigProperty::meta;
		AssemblyConfigProperty::meta.association() = Component::meta_dstAssemblyConfigProperty.parent();
		AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_ = Property::meta_srcAssemblyConfigProperty_rev = Component::meta_dstAssemblyConfigProperty;
		AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_ = Component::meta_dstAssemblyConfigProperty_rev = Property::meta_srcAssemblyConfigProperty;

		ComponentAssembly::meta_AssemblyDeployRequirement_children.target() = AssemblyDeployRequirement::meta;
		AssemblyDeployRequirement::meta.association() = PublishConnector::meta_dstAssemblyDeployRequirement.parent();
		AssemblyDeployRequirement::meta_dstAssemblyDeployRequirement_end_ = Requirement::meta_srcAssemblyDeployRequirement_rev = PublishConnector::meta_dstAssemblyDeployRequirement;
		AssemblyDeployRequirement::meta_srcAssemblyDeployRequirement_end_ = PublishConnector::meta_dstAssemblyDeployRequirement_rev = Requirement::meta_srcAssemblyDeployRequirement;

		AssemblyRule::meta_referedbyAssemblyRuleRef.target() = AssemblyRuleRef::meta;
		AssemblyRule::meta_srcAssemblyAccessConn.target() = InitiatorRoleRef::meta;
		AssemblyRule::meta_dstOnAssemblyConn.target() = ComponentAssemblyReference::meta;
		AssemblyRule::meta_dstSecuredPathConn.target() = PathRef::meta;

		AssemblyRuleRef::meta_ref.target() = AssemblyRule::meta;
		ComponentAssemblySecurityQoS::meta_AssemblyRuleRef_children.target() = AssemblyRuleRef::meta;

		ComponentAssembly::meta_AssemblyselectRequirement_children.target() = AssemblyselectRequirement::meta;
		AssemblyselectRequirement::meta.association() = Component::meta_dstAssemblyselectRequirement.parent();
		AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_ = Requirement::meta_srcAssemblyselectRequirement_rev = Component::meta_dstAssemblyselectRequirement;
		AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_ = Component::meta_dstAssemblyselectRequirement_rev = Requirement::meta_srcAssemblyselectRequirement;

		SetException::meta_Attribute_parent.target() = Attribute::meta;

		ComponentAssembly::meta_AttributeDelegate_children.target() = AttributeDelegate::meta;
		AttributeDelegate::meta.association() = AttributeMapping::meta_dstAttributeDelegate.parent();
		AttributeDelegate::meta_dstAttributeDelegate_end_ = ReadonlyAttribute::meta_srcAttributeDelegate_rev = AttributeMapping::meta_dstAttributeDelegate;
		AttributeDelegate::meta_srcAttributeDelegate_end_ = AttributeMapping::meta_dstAttributeDelegate_rev = ReadonlyAttribute::meta_srcAttributeDelegate;

		Policy::meta_AttributeManipulateConn_children.target() = AttributeManipulateConn::meta;
		AttributeManipulateConn::meta.association() = ComponentRule::meta_dstAttributeManipulateConn.parent();
		AttributeManipulateConn::meta_dstAttributeManipulateConn_end_ = AttributeRef::meta_srcAttributeManipulateConn_rev = ComponentRule::meta_dstAttributeManipulateConn;
		AttributeManipulateConn::meta_srcAttributeManipulateConn_end_ = ComponentRule::meta_dstAttributeManipulateConn_rev = AttributeRef::meta_srcAttributeManipulateConn;

		AttributeMapping::meta_dstAttributeDelegate.target() = ReadonlyAttribute::meta;
		AttributeMapping::meta_dstAttributeMappingValue.target() = Property::meta;
		AttributeMapping::meta_dstAttributeMappingDelegate.target() = AttributeMapping::meta;
		AttributeMapping::meta_srcAttributeMappingDelegate.target() = AttributeMapping::meta;
		AttributeMapping::meta_ref.target() = ReadonlyAttribute::meta;
		ComponentAssembly::meta_AttributeMapping_children.target() = AttributeMapping::meta;

		ComponentAssembly::meta_AttributeMappingDelegate_children.target() = AttributeMappingDelegate::meta;
		AttributeMappingDelegate::meta.association() = AttributeMapping::meta_dstAttributeMappingDelegate.parent();
		AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_ = AttributeMapping::meta_srcAttributeMappingDelegate_rev = AttributeMapping::meta_dstAttributeMappingDelegate;
		AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_ = AttributeMapping::meta_dstAttributeMappingDelegate_rev = AttributeMapping::meta_srcAttributeMappingDelegate;

		ComponentAssembly::meta_AttributeMappingValue_children.target() = AttributeMappingValue::meta;
		AttributeMappingValue::meta.association() = AttributeMapping::meta_dstAttributeMappingValue.parent();
		AttributeMappingValue::meta_dstAttributeMappingValue_end_ = Property::meta_srcAttributeMappingValue_rev = AttributeMapping::meta_dstAttributeMappingValue;
		AttributeMappingValue::meta_srcAttributeMappingValue_end_ = AttributeMapping::meta_dstAttributeMappingValue_rev = Property::meta_srcAttributeMappingValue;

		AttributeMember::meta_ref.target() = MemberType::meta;
		ReadonlyAttribute::meta_AttributeMember_child.target() = AttributeMember::meta;

		AttributeRef::meta_ref.target() = ReadonlyAttribute::meta;
		AttributeRef::meta_srcAttributeManipulateConn.target() = ComponentRule::meta;
		Policy::meta_AttributeRef_children.target() = AttributeRef::meta;

		ComponentAssembly::meta_AttributeValue_children.target() = AttributeValue::meta;
		AttributeValue::meta.association() = ReadonlyAttribute::meta_dstAttributeValue.parent();
		AttributeValue::meta_dstAttributeValue_end_ = Property::meta_srcAttributeValue_rev = ReadonlyAttribute::meta_dstAttributeValue;
		AttributeValue::meta_srcAttributeValue_end_ = ReadonlyAttribute::meta_dstAttributeValue_rev = Property::meta_srcAttributeValue;

		BehaviorInputAction::meta_dstInputEffect.target() = StateBase::meta;
		BehaviorInputAction::meta_srcFinish.target() = StateBase::meta;
		Property::meta_BehaviorInputAction_parent.target() = BehaviorInputAction::meta;
		BehaviorModel::meta_BehaviorInputAction_children.target() = BehaviorInputAction::meta;
		BehaviorInputAction::meta.subTypes() += InputAction::meta;
		BehaviorInputAction::meta.subTypes() += MultiInputAction::meta;

		Variable::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		TerminalTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Terminal::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		TerminalEffect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		StateBase::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BranchTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Transition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		LoopTransition::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Finish::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BehaviorInputAction::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		ActionBase::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		InputEffect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		Effect::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		QueryInputAction::meta_BehaviorModel_parent.target() = BehaviorModel::meta;
		BehaviorModel::meta.subTypes() += TopLevelBehavior::meta;

		OperationBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimerConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		MetricConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		DataAnalysisBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		MetricsBase::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimeProbe::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		OperationRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		EventRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		Event::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TimerEventSinkConn::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		TaskSet::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		Task::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		WorkloadCharacteristics::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		ComponentOperation::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		CompRef::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		BenchmarkType::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent.target() = BenchmarkAnalysis::meta;
		ComponentAnalyses::meta_BenchmarkAnalysis_children.target() = BenchmarkAnalysis::meta;

		BenchmarkAnalysis::meta_BenchmarkCharacteristics_children.target() = BenchmarkCharacteristics::meta;
		BenchmarkCharacteristics::meta.association() = BenchmarkType::meta_dstBenchmarkCharacteristics.parent();
		BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_ = MetricsBase::meta_srcBenchmarkCharacteristics_rev = BenchmarkType::meta_dstBenchmarkCharacteristics;
		BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_ = BenchmarkType::meta_dstBenchmarkCharacteristics_rev = MetricsBase::meta_srcBenchmarkCharacteristics;

		BenchmarkType::meta_dstBenchmarkCharacteristics.target() = MetricsBase::meta;
		BenchmarkAnalysis::meta_BenchmarkType_children.target() = BenchmarkType::meta;
		BenchmarkType::meta.subTypes() += TriggerBenchmarks::meta;
		BenchmarkType::meta.subTypes() += PeriodicBenchmarks::meta;
		BenchmarkType::meta.subTypes() += FixedIterationBenchmarks::meta;

		Boxed::meta_ref.target() = MemberType::meta;

		BranchState::meta_dstBranchTransition.target() = ActionBase::meta;

		BehaviorModel::meta_BranchTransition_children.target() = BranchTransition::meta;
		BranchTransition::meta.association() = BranchState::meta_dstBranchTransition.parent();
		BranchTransition::meta_dstBranchTransition_end_ = ActionBase::meta_srcBranchTransition_rev = BranchState::meta_dstBranchTransition;
		BranchTransition::meta_srcBranchTransition_end_ = BranchState::meta_dstBranchTransition_rev = ActionBase::meta_srcBranchTransition;

		Bridge::meta_srcBridgeConnection.target() = Interconnect::meta;
		Resource::meta_Bridge_parent.target() = Bridge::meta;
		Domain::meta_Bridge_children.target() = Bridge::meta;

		Domain::meta_BridgeConnection_children.target() = BridgeConnection::meta;
		BridgeConnection::meta.association() = Interconnect::meta_dstBridgeConnection.parent();
		BridgeConnection::meta_dstBridgeConnection_end_ = Bridge::meta_srcBridgeConnection_rev = Interconnect::meta_dstBridgeConnection;
		BridgeConnection::meta_srcBridgeConnection_end_ = Interconnect::meta_dstBridgeConnection_rev = Bridge::meta_srcBridgeConnection;

		SenderConnection::meta_CIAOEvents_parent.target() = CIAOEvents::meta;
		eventServiceConfiguration::meta_CIAOEvents_parent.target() = CIAOEvents::meta;
		ReceiverConnection::meta_CIAOEvents_parent.target() = CIAOEvents::meta;
		EventChannelCommunicationPoint::meta_CIAOEvents_parent.target() = CIAOEvents::meta;
		RootFolder::meta_CIAOEvents_children.target() = CIAOEvents::meta;

		Capability::meta_srcImplementationCapability.target() = ComponentImplementation::meta;
		ComponentImplementationContainer::meta_Capability_children.target() = Capability::meta;

		Collection::meta_ref.target() = MemberType::meta;

		CollocationGroup::meta_dstInstanceMapping.target() = NodeReference::meta;
		CollocationGroup::meta_members.target() = CollocationGroupMember::meta;
		DeploymentPlan::meta_CollocationGroup_children.target() = CollocationGroup::meta;

		CollocationGroupMember::meta_setCollocationGroup.target() = CollocationGroup::meta;
		DeploymentPlan::meta_CollocationGroupMember_children.target() = CollocationGroupMember::meta;
		CollocationGroupMember::meta.subTypes() += ComponentRef::meta;
		CollocationGroupMember::meta.subTypes() += SharedComponentReference::meta;
		CollocationGroupMember::meta.subTypes() += ComponentFactoryRef::meta;
		CollocationGroupMember::meta.subTypes() += ComponentAssemblyReference::meta;

		CommonPortAttrs::meta.subTypes() += Port::meta;

		CompRef::meta_srcComponentOperation.target() = OperationRef::meta;
		CompRef::meta_ref.target() = Component::meta;
		BenchmarkAnalysis::meta_CompRef_children.target() = CompRef::meta;

		Component::meta_dstAssemblyselectRequirement.target() = Requirement::meta;
		Component::meta_dstAssemblyConfigProperty.target() = Property::meta;
		Component::meta_referedbyComponentRef.target() = ComponentRef::meta;
		Component::meta_referedbyCompRef.target() = CompRef::meta;
		Port::meta_Component_parent.target() = Component::meta;
		ReadonlyAttribute::meta_Component_parent.target() = Component::meta;
		WorkerType::meta_Component_parent.target() = Component::meta;
		ComponentAssembly::meta_Component_children.target() = Component::meta;

		Policy::meta_ComponentAccessConn_children.target() = ComponentAccessConn::meta;
		ComponentAccessConn::meta.association() = InitiatorRoleRef::meta_dstComponentAccessConn.parent();
		ComponentAccessConn::meta_dstComponentAccessConn_end_ = ComponentRule::meta_srcComponentAccessConn_rev = InitiatorRoleRef::meta_dstComponentAccessConn;
		ComponentAccessConn::meta_srcComponentAccessConn_end_ = InitiatorRoleRef::meta_dstComponentAccessConn_rev = ComponentRule::meta_srcComponentAccessConn;

		BenchmarkAnalysis::meta_ComponentAnalyses_parent.target() = ComponentAnalyses::meta;
		RootFolder::meta_ComponentAnalyses_children.target() = ComponentAnalyses::meta;

		ComponentAssembly::meta_dstCriticalPath.target() = PathReference::meta;
		ComponentAssembly::meta_referedbyComponentAssemblyReference.target() = ComponentAssemblyReference::meta;
		ComponentPackage::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Property::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentPackageReference::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Requirement::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		Component::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssembly::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ProvidedRequestPort::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		RequiredRequestPort::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		InEventPort::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		OutEventPort::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		emit::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSourceDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSinkDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		deliverTo::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		publish::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssemblyReference::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentRef::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AssemblyselectRequirement::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeValue::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMappingValue::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AssemblyConfigProperty::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		FacetDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		invoke::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ReceptacleDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMappingDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExternalDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AttributeMapping::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		PublishConnector::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ExternalPortReference::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		SupportsDelegate::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		AssemblyDeployRequirement::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		QoSConnector::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		PortQoS::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		QoSReq::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		RecepInvoke::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		FacetInvoke::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSourcePublish::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentQoS::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssemblyQoS::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		QoSCharacteristicBase::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		EventSinkPublish::meta_ComponentAssembly_parent.target() = ComponentAssembly::meta;
		ComponentAssembly::meta_ComponentAssembly_children.target() = ComponentAssembly::meta;

		ComponentAssemblyBase::meta_dstComponentAssemblyQoS.target() = ComponentAssemblyQoSCharacteristic::meta;
		ComponentAssemblyBase::meta.subTypes() += ComponentAssembly::meta;
		ComponentAssemblyBase::meta.subTypes() += ComponentAssemblyReference::meta;

		ComponentImplementationContainer::meta_ComponentAssemblyQoS_children.target() = ComponentAssemblyQoS::meta;
		ComponentAssembly::meta_ComponentAssemblyQoS_children.target() = ComponentAssemblyQoS::meta;
		ComponentAssemblyQoS::meta.association() = ComponentAssemblyBase::meta_dstComponentAssemblyQoS.parent();
		ComponentAssemblyQoS::meta_dstComponentAssemblyQoS_end_ = ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS_rev = ComponentAssemblyBase::meta_dstComponentAssemblyQoS;
		ComponentAssemblyQoS::meta_srcComponentAssemblyQoS_end_ = ComponentAssemblyBase::meta_dstComponentAssemblyQoS_rev = ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS;

		ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS.target() = ComponentAssemblyBase::meta;
		ComponentImplementationContainer::meta_AssemblyQoSComposition.target() = ComponentAssemblyQoSCharacteristic::meta;
		ComponentAssemblyQoSCharacteristic::meta.subTypes() += QoSCharRef::meta;
		ComponentAssemblyQoSCharacteristic::meta.subTypes() += ComponentAssemblySecurityQoS::meta;
		ComponentAssemblyQoSCharacteristic::meta.subTypes() += FailOverUnit::meta;

		ComponentAssemblyReference::meta_ref.target() = ComponentAssembly::meta;
		ComponentAssemblyReference::meta_srcOnAssemblyConn.target() = AssemblyRule::meta;
		ComponentAssembly::meta_ComponentAssemblyReference_children.target() = ComponentAssemblyReference::meta;
		Policy::meta_ComponentAssemblyReference_children.target() = ComponentAssemblyReference::meta;

		AssemblyRuleRef::meta_ComponentAssemblySecurityQoS_parent.target() = ComponentAssemblySecurityQoS::meta;

		ComponentBase::meta_dstComponentQoS.target() = ComponentQoSCharacteristic::meta;
		ComponentBase::meta.subTypes() += Component::meta;
		ComponentBase::meta.subTypes() += ComponentRef::meta;

		MPC::meta_ComponentBuild_parent.target() = ComponentBuild::meta;
		RootFolder::meta_ComponentBuild_children.target() = ComponentBuild::meta;

		ComponentContainer::meta_ComponentConfigProperty_children.target() = ComponentConfigProperty::meta;
		ComponentConfigProperty::meta.association() = ComponentRef::meta_dstComponentConfigProperty.parent();
		ComponentConfigProperty::meta_dstComponentConfigProperty_end_ = Property::meta_srcComponentConfigProperty_rev = ComponentRef::meta_dstComponentConfigProperty;
		ComponentConfigProperty::meta_srcComponentConfigProperty_end_ = ComponentRef::meta_dstComponentConfigProperty_rev = Property::meta_srcComponentConfigProperty;

		Property::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentConfigProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentInfoProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentProperty::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentPropertyDescription::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentRef::meta_ComponentContainer_parent.target() = ComponentContainer::meta;
		ComponentTypes::meta_ComponentContainer_children.target() = ComponentContainer::meta;

		ComponentFactory::meta_dstManagesComponent.target() = Manageable::meta;
		ComponentFactory::meta_referedbyComponentFactoryInstance.target() = ComponentFactoryInstance::meta;
		FactoryOperation::meta_ComponentFactory_parent.target() = ComponentFactory::meta;
		LookupKey::meta_ComponentFactory_parent.target() = ComponentFactory::meta;
		LookupOperation::meta_ComponentFactory_parent.target() = ComponentFactory::meta;

		ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent.target() = ComponentFactoryImplementationContainer::meta;
		ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children.target() = ComponentFactoryImplementationContainer::meta;

		ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent.target() = ComponentFactoryImplementations::meta;
		RootFolder::meta_ComponentFactoryImplementations_children.target() = ComponentFactoryImplementations::meta;

		ComponentFactoryInstance::meta_referedbyComponentFactoryRef.target() = ComponentFactoryRef::meta;
		ComponentFactoryInstance::meta_ref.target() = ComponentFactory::meta;
		ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children.target() = ComponentFactoryInstance::meta;

		ComponentFactoryRef::meta_dstDeploys.target() = ComponentRef::meta;
		ComponentFactoryRef::meta_ref.target() = ComponentFactoryInstance::meta;

		ComponentImplementation::meta_referedbyComponentImplementationReference.target() = ComponentImplementationReference::meta;
		ComponentImplementation::meta_dstImplementationCapability.target() = Capability::meta;
		ComponentImplementation::meta_dstImplementationDependsOn.target() = ImplementationDependency::meta;
		ComponentImplementation::meta_dstImplements.target() = ComponentRef::meta;
		ComponentImplementationContainer::meta_ComponentImplementation_children.target() = ComponentImplementation::meta;
		ComponentImplementation::meta.subTypes() += ComponentAssembly::meta;
		ComponentImplementation::meta.subTypes() += MonolithicImplementation::meta;

		ComponentImplementationArtifact::meta_ref.target() = ImplementationArtifact::meta;

		ImplementationDependsOn::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		Implements::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentRef::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ImplementationDependency::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ImplementationCapability::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		Capability::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		CriticalPath::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		PathReference::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentImplementation::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentAssemblyQoSCharacteristic::meta_AssemblyQoSComposition_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		PortQoSCharacteristic::meta_PortQoSComposition_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentAssemblyQoS::meta_ComponentImplementationContainer_parent.target() = ComponentImplementationContainer::meta;
		ComponentImplementations::meta_ComponentImplementationContainer_children.target() = ComponentImplementationContainer::meta;

		ComponentImplementationReference::meta_srcImplementation.target() = ComponentPackage::meta;
		ComponentImplementationReference::meta_ref.target() = ComponentImplementation::meta;
		PackageContainer::meta_ComponentImplementationReference_children.target() = ComponentImplementationReference::meta;

		ComponentImplementationContainer::meta_ComponentImplementations_parent.target() = ComponentImplementations::meta;
		RootFolder::meta_ComponentImplementations_children.target() = ComponentImplementations::meta;

		ComponentContainer::meta_ComponentInfoProperty_children.target() = ComponentInfoProperty::meta;
		ComponentInfoProperty::meta.association() = ComponentRef::meta_dstComponentInfoProperty.parent();
		ComponentInfoProperty::meta_dstComponentInfoProperty_end_ = Property::meta_srcComponentInfoProperty_rev = ComponentRef::meta_dstComponentInfoProperty;
		ComponentInfoProperty::meta_srcComponentInfoProperty_end_ = ComponentRef::meta_dstComponentInfoProperty_rev = Property::meta_srcComponentInfoProperty;

		ComponentLib::meta_dstExtResourceConn.target() = ExternalResources::meta;
		Project::meta_ComponentLib_children.target() = ComponentLib::meta;
		ComponentLib::meta.subTypes() += StubProject::meta;
		ComponentLib::meta.subTypes() += ServantProject::meta;
		ComponentLib::meta.subTypes() += ExecutorProject::meta;

		BenchmarkAnalysis::meta_ComponentOperation_children.target() = ComponentOperation::meta;
		ComponentOperation::meta.association() = OperationRef::meta_dstComponentOperation.parent();
		ComponentOperation::meta_dstComponentOperation_end_ = CompRef::meta_srcComponentOperation_rev = OperationRef::meta_dstComponentOperation;
		ComponentOperation::meta_srcComponentOperation_end_ = OperationRef::meta_dstComponentOperation_rev = CompRef::meta_srcComponentOperation;

		ComponentPackage::meta_dstPackageInterface.target() = ComponentRef::meta;
		ComponentPackage::meta_dstImplementation.target() = ComponentImplementationReference::meta;
		ComponentPackage::meta_dstPackageConfigProperty.target() = Property::meta;
		ComponentPackage::meta_dstPackageInfoProperty.target() = Property::meta;
		ComponentPackage::meta_referedbyComponentPackageReference.target() = ComponentPackageReference::meta;
		ComponentPackage::meta_srcPackageConfBasePackage.target() = PackageConfiguration::meta;
		PackageContainer::meta_ComponentPackage_child.target() = ComponentPackage::meta;
		PackageConfigurationContainer::meta_ComponentPackage_child.target() = ComponentPackage::meta;
		ComponentAssembly::meta_ComponentPackage_children.target() = ComponentPackage::meta;

		ComponentPackageReference::meta_ref.target() = ComponentPackage::meta;
		ComponentPackageReference::meta_srcPackageConfReference.target() = PackageConfiguration::meta;
		PackageConfigurationContainer::meta_ComponentPackageReference_child.target() = ComponentPackageReference::meta;
		ComponentAssembly::meta_ComponentPackageReference_children.target() = ComponentPackageReference::meta;

		PackageContainer::meta_ComponentPackages_parent.target() = ComponentPackages::meta;
		RootFolder::meta_ComponentPackages_children.target() = ComponentPackages::meta;

		ComponentContainer::meta_ComponentProperty_children.target() = ComponentProperty::meta;
		ComponentProperty::meta.association() = ComponentRef::meta_dstComponentProperty.parent();
		ComponentProperty::meta_dstComponentProperty_end_ = ComponentPropertyDescription::meta_srcComponentProperty_rev = ComponentRef::meta_dstComponentProperty;
		ComponentProperty::meta_srcComponentProperty_end_ = ComponentRef::meta_dstComponentProperty_rev = ComponentPropertyDescription::meta_srcComponentProperty;

		ComponentPropertyDescription::meta_srcComponentProperty.target() = ComponentRef::meta;
		DataType::meta_ComponentPropertyDescription_parent.target() = ComponentPropertyDescription::meta;
		ComponentContainer::meta_ComponentPropertyDescription_children.target() = ComponentPropertyDescription::meta;

		ComponentAssembly::meta_ComponentQoS_children.target() = ComponentQoS::meta;
		ComponentQoS::meta.association() = ComponentBase::meta_dstComponentQoS.parent();
		ComponentQoS::meta_dstComponentQoS_end_ = ComponentQoSCharacteristic::meta_srcComponentQoS_rev = ComponentBase::meta_dstComponentQoS;
		ComponentQoS::meta_srcComponentQoS_end_ = ComponentBase::meta_dstComponentQoS_rev = ComponentQoSCharacteristic::meta_srcComponentQoS;

		ComponentQoSCharacteristic::meta_srcComponentQoS.target() = ComponentBase::meta;
		ComponentQoSCharacteristic::meta.subTypes() += QoSCharRef::meta;
		ComponentQoSCharacteristic::meta.subTypes() += FailOverUnit::meta;
		ComponentQoSCharacteristic::meta.subTypes() += ComponentSecurityQoS::meta;
		ComponentQoSCharacteristic::meta.subTypes() += RealTimeConfiguration::meta;

		ComponentRef::meta_ref.target() = Component::meta;
		ComponentRef::meta_dstComponentProperty.target() = ComponentPropertyDescription::meta;
		ComponentRef::meta_dstComponentConfigProperty.target() = Property::meta;
		ComponentRef::meta_dstComponentInfoProperty.target() = Property::meta;
		ComponentRef::meta_srcPackageInterface.target() = ComponentPackage::meta;
		ComponentRef::meta_srcImplements.target() = ComponentImplementation::meta;
		ComponentRef::meta_referedbySharedComponentReference.target() = SharedComponentReference::meta;
		ComponentRef::meta_srcDeploys.target() = ComponentFactoryRef::meta;
		ComponentRef::meta_srcOnComponentConn.target() = ComponentRule::meta;
		Package::meta_ComponentRef_children.target() = ComponentRef::meta;
		File::meta_ComponentRef_children.target() = ComponentRef::meta;
		PackageContainer::meta_ComponentRef_child.target() = ComponentRef::meta;
		ComponentContainer::meta_ComponentRef_child.target() = ComponentRef::meta;
		ComponentImplementationContainer::meta_ComponentRef_child.target() = ComponentRef::meta;
		Path::meta_ComponentRef_children.target() = ComponentRef::meta;
		ComponentAssembly::meta_ComponentRef_children.target() = ComponentRef::meta;
		Policy::meta_ComponentRef_children.target() = ComponentRef::meta;

		ComponentRule::meta_referedbyComponentRuleRef.target() = ComponentRuleRef::meta;
		ComponentRule::meta_srcComponentAccessConn.target() = InitiatorRoleRef::meta;
		ComponentRule::meta_dstOnComponentConn.target() = ComponentRef::meta;
		ComponentRule::meta_dstAttributeManipulateConn.target() = AttributeRef::meta;

		ComponentRuleRef::meta_ref.target() = ComponentRule::meta;
		ComponentSecurityQoS::meta_ComponentRuleRef_children.target() = ComponentRuleRef::meta;

		ComponentRuleRef::meta_ComponentSecurityQoS_parent.target() = ComponentSecurityQoS::meta;

		ComponentServantArtifact::meta_ref.target() = ImplementationArtifact::meta;

		ComponentContainer::meta_ComponentTypes_parent.target() = ComponentTypes::meta;
		RootFolder::meta_ComponentTypes_children.target() = ComponentTypes::meta;

		ImplementationContainer::meta_ConfigProperty_children.target() = ConfigProperty::meta;
		ConfigProperty::meta.association() = Implemenation::meta_dstConfigProperty.parent();
		ConfigProperty::meta_dstConfigProperty_end_ = Property::meta_srcConfigProperty_rev = Implemenation::meta_dstConfigProperty;
		ConfigProperty::meta_srcConfigProperty_end_ = Implemenation::meta_dstConfigProperty_rev = Property::meta_srcConfigProperty;

		DstEdge::meta_ConnectedComponent_parent.target() = ConnectedComponent::meta;
		Port::meta_ConnectedComponent_parent.target() = ConnectedComponent::meta;

		ConnectionQoSCharacteristic::meta_srcQoSReq.target() = QoSConnector::meta;
		ConnectionQoSCharacteristic::meta.subTypes() += QoSCharRef::meta;
		ConnectionQoSCharacteristic::meta.subTypes() += CIAOEvents::meta;
		ConnectionQoSCharacteristic::meta.subTypes() += NetQoS::meta;

		Constant::meta_ref.target() = ConstantType::meta;
		Package::meta_Constant_children.target() = Constant::meta;
		File::meta_Constant_children.target() = Constant::meta;
		HasOperations::meta_Constant_children.target() = Constant::meta;

		ConstantType::meta_referedbyConstant.target() = Constant::meta;
		ConstantType::meta_referedbyDiscriminator.target() = Discriminator::meta;
		ConstantType::meta.subTypes() += PredefinedType::meta;
		ConstantType::meta.subTypes() += Enum::meta;

		eventServiceConfiguration::meta_ConsumerBehavior_child.target() = ConsumerBehavior::meta;

		ComponentImplementationContainer::meta_CriticalPath_children.target() = CriticalPath::meta;
		CriticalPath::meta.association() = ComponentAssembly::meta_dstCriticalPath.parent();
		CriticalPath::meta_dstCriticalPath_end_ = PathReference::meta_srcCriticalPath_rev = ComponentAssembly::meta_dstCriticalPath;
		CriticalPath::meta_srcCriticalPath_end_ = ComponentAssembly::meta_dstCriticalPath_rev = PathReference::meta_srcCriticalPath;

		BenchmarkAnalysis::meta_DataAnalysisBase_children.target() = DataAnalysisBase::meta;
		MetricsBase::meta_DataAnalysisBase_children.target() = DataAnalysisBase::meta;
		DataAnalysisBase::meta.subTypes() += Average::meta;
		DataAnalysisBase::meta.subTypes() += Minimum::meta;
		DataAnalysisBase::meta.subTypes() += Maximum::meta;
		DataAnalysisBase::meta.subTypes() += Jitter::meta;

		DataType::meta_ref.target() = MemberType::meta;
		Property::meta_DataType_child.target() = DataType::meta;
		SatisfierProperty::meta_DataType_child.target() = DataType::meta;
		ComponentPropertyDescription::meta_DataType_child.target() = DataType::meta;

		DeploymentPlan::meta_referedbyDeploymentPlanReference.target() = DeploymentPlanRef::meta;
		NodeReference::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		InstanceMapping::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		CollocationGroup::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		Property::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		Deploys::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		CollocationGroupMember::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		DeploymentPlanQoS::meta_DeploymentPlan_parent.target() = DeploymentPlan::meta;
		DeploymentPlans::meta_DeploymentPlan_children.target() = DeploymentPlan::meta;

		DeploymentPlan::meta_DeploymentPlanQoS_children.target() = DeploymentPlanQoS::meta;
		DeploymentPlanQoS::meta.subTypes() += DomainRiskGroupingRef::meta;

		DeploymentPlanRef::meta_dstFTDeployDepends.target() = DomainRiskGrouping::meta;
		DeploymentPlanRef::meta_ref.target() = DeploymentPlan::meta;
		FTDeployment::meta_DeploymentPlanRef_children.target() = DeploymentPlanRef::meta;

		DeploymentPlan::meta_DeploymentPlans_parent.target() = DeploymentPlans::meta;
		RootFolder::meta_DeploymentPlans_children.target() = DeploymentPlans::meta;

		DeploymentPlan::meta_Deploys_children.target() = Deploys::meta;
		Deploys::meta.association() = ComponentFactoryRef::meta_dstDeploys.parent();
		Deploys::meta_dstDeploys_end_ = ComponentRef::meta_srcDeploys_rev = ComponentFactoryRef::meta_dstDeploys;
		Deploys::meta_srcDeploys_end_ = ComponentFactoryRef::meta_dstDeploys_rev = ComponentRef::meta_srcDeploys;

		Destructible::meta.subTypes() += RootRiskGroup::meta;
		Destructible::meta.subTypes() += SRGBase::meta;

		Discriminator::meta_ref.target() = ConstantType::meta;
		SwitchedAggregate::meta_Discriminator_child.target() = Discriminator::meta;

		InterconnectConnection::meta_Domain_parent.target() = Domain::meta;
		Interconnect::meta_Domain_parent.target() = Domain::meta;
		Node::meta_Domain_parent.target() = Domain::meta;
		BridgeConnection::meta_Domain_parent.target() = Domain::meta;
		Bridge::meta_Domain_parent.target() = Domain::meta;
		SharedResource::meta_Domain_parent.target() = Domain::meta;
		Shares::meta_Domain_parent.target() = Domain::meta;
		Property::meta_Domain_parent.target() = Domain::meta;
		Targets::meta_Domain_children.target() = Domain::meta;

		DomainRiskGrouping::meta_srcFTDeployDepends.target() = DeploymentPlanRef::meta;
		DomainRiskGrouping::meta_referedbyDomainRiskGroupingRef.target() = DomainRiskGroupingRef::meta;
		RootRiskAssociation::meta_DomainRiskGrouping_parent.target() = DomainRiskGrouping::meta;
		SRGRiskAssociation::meta_DomainRiskGrouping_parent.target() = DomainRiskGrouping::meta;
		SRGBase::meta_DomainRiskGrouping_parent.target() = DomainRiskGrouping::meta;
		RootRiskGroup::meta_DomainRiskGrouping_parent.target() = DomainRiskGrouping::meta;
		FTDeployment::meta_DomainRiskGrouping_children.target() = DomainRiskGrouping::meta;

		DomainRiskGroupingRef::meta_ref.target() = DomainRiskGrouping::meta;

		ConnectedComponent::meta_DstEdge_children.target() = DstEdge::meta;
		Path::meta_DstEdge_children.target() = DstEdge::meta;
		DstEdge::meta.association() = GraphVertex::meta_dstDstEdge.parent();
		DstEdge::meta_dstDstEdge_end_ = Edge::meta_srcDstEdge_rev = GraphVertex::meta_dstDstEdge;
		DstEdge::meta_srcDstEdge_end_ = GraphVertex::meta_dstDstEdge_rev = Edge::meta_srcDstEdge;

		ECRequirements::meta_ECBehavior_child.target() = ECBehavior::meta;

		ECBehavior::meta_ECRequirements_parent.target() = ECRequirements::meta;
		ECRole::meta_ECRequirements_parent.target() = ECRequirements::meta;

		ECRequirements::meta_ECRole_children.target() = ECRole::meta;

		Edge::meta_srcPropertyConnector.target() = Property::meta;
		Edge::meta_srcDstEdge.target() = GraphVertex::meta;
		Edge::meta_dstSrcEdge.target() = GraphVertex::meta;
		Path::meta_Edge_children.target() = Edge::meta;

		Path::meta_EdgeProperty_children.target() = EdgeProperty::meta;
		EdgeProperty::meta.association() = Property::meta_dstPropertyConnector.parent();
		EdgeProperty::meta_dstPropertyConnector_end_ = Edge::meta_srcPropertyConnector_rev = Property::meta_dstPropertyConnector;
		EdgeProperty::meta_srcPropertyConnector_end_ = Property::meta_dstPropertyConnector_rev = Edge::meta_srcPropertyConnector;

		BehaviorModel::meta_Effect_children.target() = Effect::meta;
		Effect::meta.association() = ActionBase::meta_dstEffect.parent();
		Effect::meta_dstEffect_end_ = StateBase::meta_srcEffect_rev = ActionBase::meta_dstEffect;
		Effect::meta_srcEffect_end_ = ActionBase::meta_dstEffect_rev = StateBase::meta_srcEffect;

		EffectBase::meta.subTypes() += Effect::meta;
		EffectBase::meta.subTypes() += InputEffect::meta;
		EffectBase::meta.subTypes() += TerminalEffect::meta;

		EnumValue::meta_Enum_parent.target() = Enum::meta;

		Enum::meta_EnumValue_children.target() = EnumValue::meta;

		TopLevelBehavior::meta_Environment_child.target() = Environment::meta;

		RealTimeConfiguration::meta_EnvironmentConf_child.target() = EnvironmentConf::meta;

		Event::meta_referedbyOutEventPort.target() = OutEventPort::meta;
		Event::meta_referedbyInEventPort.target() = InEventPort::meta;
		Event::meta_referedbyEventRef.target() = EventRef::meta;
		BenchmarkAnalysis::meta_Event_children.target() = Event::meta;

		EventChannelCommunicationPoint::meta_dstReceiverConnection.target() = eventServiceConfiguration::meta;
		EventChannelCommunicationPoint::meta_srcSenderConnection.target() = eventServiceConfiguration::meta;
		CIAOEvents::meta_EventChannelCommunicationPoint_children.target() = EventChannelCommunicationPoint::meta;

		eventServiceConfiguration::meta_EventChannelFactory_child.target() = EventChannelFactory::meta;

		EventRef::meta_dstTimerEventSinkConn.target() = TimeProbe::meta;
		EventRef::meta_ref.target() = Event::meta;
		BenchmarkAnalysis::meta_EventRef_children.target() = EventRef::meta;

		ComponentAssembly::meta_EventSinkDelegate_children.target() = EventSinkDelegate::meta;
		EventSinkDelegate::meta.association() = InEventPort::meta_dstEventSinkDelegate.parent();
		EventSinkDelegate::meta_dstEventSinkDelegate_end_ = InEventPort::meta_srcEventSinkDelegate_rev = InEventPort::meta_dstEventSinkDelegate;
		EventSinkDelegate::meta_srcEventSinkDelegate_end_ = InEventPort::meta_dstEventSinkDelegate_rev = InEventPort::meta_srcEventSinkDelegate;

		ComponentAssembly::meta_EventSinkPublish_children.target() = EventSinkPublish::meta;
		EventSinkPublish::meta.association() = QoSConnector::meta_dstEventSinkPublish.parent();
		EventSinkPublish::meta_dstEventSinkPublish_end_ = InEventPort::meta_srcEventSinkPublish_rev = QoSConnector::meta_dstEventSinkPublish;
		EventSinkPublish::meta_srcEventSinkPublish_end_ = QoSConnector::meta_dstEventSinkPublish_rev = InEventPort::meta_srcEventSinkPublish;

		Filter::meta_EventSource_children.target() = EventSource::meta;

		ComponentAssembly::meta_EventSourceDelegate_children.target() = EventSourceDelegate::meta;
		EventSourceDelegate::meta.association() = OutEventPort::meta_dstEventSourceDelegate.parent();
		EventSourceDelegate::meta_dstEventSourceDelegate_end_ = OutEventPort::meta_srcEventSourceDelegate_rev = OutEventPort::meta_dstEventSourceDelegate;
		EventSourceDelegate::meta_srcEventSourceDelegate_end_ = OutEventPort::meta_dstEventSourceDelegate_rev = OutEventPort::meta_srcEventSourceDelegate;

		EventSourcePort::meta_ref.target() = OutEventPort::meta;
		Filter::meta_EventSourcePort_children.target() = EventSourcePort::meta;

		ComponentAssembly::meta_EventSourcePublish_children.target() = EventSourcePublish::meta;
		EventSourcePublish::meta.association() = OutEventPort::meta_dstEventSourcePublish.parent();
		EventSourcePublish::meta_dstEventSourcePublish_end_ = QoSConnector::meta_srcEventSourcePublish_rev = OutEventPort::meta_dstEventSourcePublish;
		EventSourcePublish::meta_srcEventSourcePublish_end_ = OutEventPort::meta_dstEventSourcePublish_rev = QoSConnector::meta_srcEventSourcePublish;

		Exception::meta_referedbyExceptionRef.target() = ExceptionRef::meta;
		Exception::meta_referedbySetException.target() = SetException::meta;
		Exception::meta_referedbyGetException.target() = GetException::meta;
		Member::meta_Exception_parent.target() = Exception::meta;
		Package::meta_Exception_children.target() = Exception::meta;
		File::meta_Exception_children.target() = Exception::meta;
		HasOperations::meta_Exception_children.target() = Exception::meta;

		ExceptionRef::meta_ref.target() = Exception::meta;
		HasExceptions::meta_ExceptionRef_children.target() = ExceptionRef::meta;

		ImplementationArtifactReference::meta_ExecutorProject_parent.target() = ExecutorProject::meta;

		Project::meta_ExtResourceConn_children.target() = ExtResourceConn::meta;
		ExtResourceConn::meta.association() = ComponentLib::meta_dstExtResourceConn.parent();
		ExtResourceConn::meta_dstExtResourceConn_end_ = ExternalResources::meta_srcExtResourceConn_rev = ComponentLib::meta_dstExtResourceConn;
		ExtResourceConn::meta_srcExtResourceConn_end_ = ComponentLib::meta_dstExtResourceConn_rev = ExternalResources::meta_srcExtResourceConn;

		ComponentAssembly::meta_ExternalDelegate_children.target() = ExternalDelegate::meta;
		ExternalDelegate::meta.association() = ExternalPortReference::meta_dstExternalDelegate.parent();
		ExternalDelegate::meta_dstExternalDelegate_end_ = Port::meta_srcExternalDelegate_rev = ExternalPortReference::meta_dstExternalDelegate;
		ExternalDelegate::meta_srcExternalDelegate_end_ = ExternalPortReference::meta_dstExternalDelegate_rev = Port::meta_srcExternalDelegate;

		ExternalPortReference::meta_ref.target() = ExternalPortReferenceType::meta;
		ExternalPortReference::meta_dstExternalDelegate.target() = Port::meta;
		ComponentAssembly::meta_ExternalPortReference_children.target() = ExternalPortReference::meta;

		ExternalPortReferenceType::meta_referedbyExternalPortReference.target() = ExternalPortReference::meta;
		ExternalPortReferenceType::meta.subTypes() += Provideable::meta;
		ExternalPortReferenceType::meta.subTypes() += Event::meta;

		ExternalResources::meta_ref.target() = ImplementationArtifact::meta;
		ExternalResources::meta_srcExtResourceConn.target() = ComponentLib::meta;
		Project::meta_ExternalResources_children.target() = ExternalResources::meta;

		FTDeployment::meta_FTDeployDepends_children.target() = FTDeployDepends::meta;
		FTDeployDepends::meta.association() = DeploymentPlanRef::meta_dstFTDeployDepends.parent();
		FTDeployDepends::meta_dstFTDeployDepends_end_ = DomainRiskGrouping::meta_srcFTDeployDepends_rev = DeploymentPlanRef::meta_dstFTDeployDepends;
		FTDeployDepends::meta_srcFTDeployDepends_end_ = DeploymentPlanRef::meta_dstFTDeployDepends_rev = DomainRiskGrouping::meta_srcFTDeployDepends;

		FTDeployDepends::meta_FTDeployment_parent.target() = FTDeployment::meta;
		DeploymentPlanRef::meta_FTDeployment_parent.target() = FTDeployment::meta;
		DomainRiskGrouping::meta_FTDeployment_parent.target() = FTDeployment::meta;
		RootFolder::meta_FTDeployment_children.target() = FTDeployment::meta;

		FTMonitorable::meta_dstMonitorable2RepG.target() = RepicaGroupConfiguration::meta;
		FailOverUnit::meta_FTMonitorable_children.target() = FTMonitorable::meta;
		FTMonitorable::meta.subTypes() += ComponentRef::meta;
		FTMonitorable::meta.subTypes() += ComponentAssemblyReference::meta;

		ComponentAssembly::meta_FacetDelegate_children.target() = FacetDelegate::meta;
		FacetDelegate::meta.association() = ProvidedRequestPort::meta_dstFacetDelegate.parent();
		FacetDelegate::meta_dstFacetDelegate_end_ = ProvidedRequestPort::meta_srcFacetDelegate_rev = ProvidedRequestPort::meta_dstFacetDelegate;
		FacetDelegate::meta_srcFacetDelegate_end_ = ProvidedRequestPort::meta_dstFacetDelegate_rev = ProvidedRequestPort::meta_srcFacetDelegate;

		ComponentAssembly::meta_FacetInvoke_children.target() = FacetInvoke::meta;
		FacetInvoke::meta.association() = QoSConnector::meta_dstFacetInvoke.parent();
		FacetInvoke::meta_dstFacetInvoke_end_ = ProvidedRequestPort::meta_srcFacetInvoke_rev = QoSConnector::meta_dstFacetInvoke;
		FacetInvoke::meta_srcFacetInvoke_end_ = QoSConnector::meta_dstFacetInvoke_rev = ProvidedRequestPort::meta_srcFacetInvoke;

		ObjectByValue::meta_FactoryOperation_children.target() = FactoryOperation::meta;
		ComponentFactory::meta_FactoryOperation_children.target() = FactoryOperation::meta;

		MonitorableGroupAssociation::meta_FailOverUnit_parent.target() = FailOverUnit::meta;
		FTMonitorable::meta_FailOverUnit_parent.target() = FailOverUnit::meta;
		RepicaGroupConfiguration::meta_FailOverUnit_parent.target() = FailOverUnit::meta;

		File::meta_referedbyFileRef.target() = FileRef::meta;
		Package::meta_File_parent.target() = File::meta;
		Exception::meta_File_parent.target() = File::meta;
		FileRef::meta_File_parent.target() = File::meta;
		Constant::meta_File_parent.target() = File::meta;
		NamedType::meta_File_parent.target() = File::meta;
		ComponentRef::meta_File_parent.target() = File::meta;
		ManagesComponent::meta_File_parent.target() = File::meta;
		InterfaceDefinitions::meta_File_children.target() = File::meta;

		FileRef::meta_ref.target() = File::meta;
		StubProject::meta_FileRef_child.target() = FileRef::meta;
		ServantProject::meta_FileRef_child.target() = FileRef::meta;
		File::meta_FileRef_children.target() = FileRef::meta;

		EventSourcePort::meta_Filter_parent.target() = Filter::meta;
		EventSource::meta_Filter_parent.target() = Filter::meta;
		eventServiceConfiguration::meta_Filter_children.target() = Filter::meta;

		BehaviorModel::meta_Finish_children.target() = Finish::meta;
		Finish::meta.association() = StateBase::meta_dstFinish.parent();
		Finish::meta_dstFinish_end_ = BehaviorInputAction::meta_srcFinish_rev = StateBase::meta_dstFinish;
		Finish::meta_srcFinish_end_ = StateBase::meta_dstFinish_rev = BehaviorInputAction::meta_srcFinish;

		GetException::meta_ref.target() = Exception::meta;
		ReadonlyAttribute::meta_GetException_children.target() = GetException::meta;

		GrantedRights::meta_srcRightsAssignmentConn.target() = Role::meta;
		RBAC::meta_GrantedRights_children.target() = GrantedRights::meta;

		GraphVertex::meta_dstDstEdge.target() = Edge::meta;
		GraphVertex::meta_srcSrcEdge.target() = Edge::meta;
		Path::meta_GraphVertex_children.target() = GraphVertex::meta;
		GraphVertex::meta.subTypes() += Port::meta;
		GraphVertex::meta.subTypes() += ConnectedComponent::meta;
		GraphVertex::meta.subTypes() += DisplayNode::meta;

		Subject::meta_Group_parent.target() = Group::meta;

		ExceptionRef::meta_HasExceptions_parent.target() = HasExceptions::meta;
		HasExceptions::meta.subTypes() += FactoryOperation::meta;
		HasExceptions::meta.subTypes() += LookupOperation::meta;
		HasExceptions::meta.subTypes() += TwowayOperation::meta;

		OnewayOperation::meta_HasOperations_parent.target() = HasOperations::meta;
		TwowayOperation::meta_HasOperations_parent.target() = HasOperations::meta;
		Exception::meta_HasOperations_parent.target() = HasOperations::meta;
		Constant::meta_HasOperations_parent.target() = HasOperations::meta;
		NoInheritable::meta_HasOperations_parent.target() = HasOperations::meta;
		RequiredRights::meta_HasOperations_parent.target() = HasOperations::meta;
		OperationClassificationConn::meta_HasOperations_parent.target() = HasOperations::meta;
		HasOperations::meta.subTypes() += ::CQML::Object::meta;
		HasOperations::meta.subTypes() += ObjectByValue::meta;
		HasOperations::meta.subTypes() += ComponentFactory::meta;

		HostReference::meta_ref.target() = Node::meta;

		Implemenation::meta_dstConfigProperty.target() = Property::meta;
		Implemenation::meta_dstInfoProperty.target() = Property::meta;
		Implemenation::meta.subTypes() += ComponentImplementation::meta;
		Implemenation::meta.subTypes() += MonolithicImplementationBase::meta;

		PackageContainer::meta_Implementation_children.target() = Implementation::meta;
		Implementation::meta.association() = ComponentPackage::meta_dstImplementation.parent();
		Implementation::meta_dstImplementation_end_ = ComponentImplementationReference::meta_srcImplementation_rev = ComponentPackage::meta_dstImplementation;
		Implementation::meta_srcImplementation_end_ = ComponentPackage::meta_dstImplementation_rev = ComponentImplementationReference::meta_srcImplementation;

		ImplementationArtifact::meta_referedbyExternalResources.target() = ExternalResources::meta;
		ImplementationArtifact::meta_referedbyImplementationArtifactReference.target() = ImplementationArtifactReference::meta;
		ImplementationArtifact::meta_dstArtifactDependsOn.target() = ImplementationArtifactReference::meta;
		ImplementationArtifact::meta_dstArtifactDeployRequirement.target() = Requirement::meta;
		ImplementationArtifact::meta_dstArtifactExecParameter.target() = Property::meta;
		ImplementationArtifact::meta_dstArtifactInfoProperty.target() = Property::meta;
		ImplementationArtifact::meta_dstArtifactDependency.target() = ImplementationArtifact::meta;
		ImplementationArtifact::meta_srcArtifactDependency.target() = ImplementationArtifact::meta;
		ImplementationArtifact::meta_referedbyComponentServantArtifact.target() = ComponentServantArtifact::meta;
		ImplementationArtifact::meta_referedbyComponentImplemenationArtifact.target() = ComponentImplementationArtifact::meta;
		Project::meta_ImplementationArtifact_children.target() = ImplementationArtifact::meta;
		ArtifactContainer::meta_ImplementationArtifact_children.target() = ImplementationArtifact::meta;

		ImplementationArtifactReference::meta_ref.target() = ImplementationArtifact::meta;
		ImplementationArtifactReference::meta_srcArtifactDependsOn.target() = ImplementationArtifact::meta;
		ImplementationArtifactReference::meta_srcMonolithprimaryArtifact.target() = MonolithicImplementationBase::meta;
		StubProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		ServantProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		ExecutorProject::meta_ImplementationArtifactReference_child.target() = ImplementationArtifactReference::meta;
		ArtifactContainer::meta_ImplementationArtifactReference_children.target() = ImplementationArtifactReference::meta;
		ImplementationContainer::meta_ImplementationArtifactReference_children.target() = ImplementationArtifactReference::meta;
		ImplementationArtifactReference::meta.subTypes() += ComponentServantArtifact::meta;
		ImplementationArtifactReference::meta.subTypes() += ComponentImplementationArtifact::meta;

		ArtifactContainer::meta_ImplementationArtifacts_parent.target() = ImplementationArtifacts::meta;
		RootFolder::meta_ImplementationArtifacts_children.target() = ImplementationArtifacts::meta;

		ComponentImplementationContainer::meta_ImplementationCapability_children.target() = ImplementationCapability::meta;
		ImplementationCapability::meta.association() = ComponentImplementation::meta_dstImplementationCapability.parent();
		ImplementationCapability::meta_dstImplementationCapability_end_ = Capability::meta_srcImplementationCapability_rev = ComponentImplementation::meta_dstImplementationCapability;
		ImplementationCapability::meta_srcImplementationCapability_end_ = ComponentImplementation::meta_dstImplementationCapability_rev = Capability::meta_srcImplementationCapability;

		InfoProperty::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ConfigProperty::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		Property::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithprimaryArtifact::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithDeployRequirement::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		MonolithExecParameter::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationArtifactReference::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationRequirement::meta_ImplementationContainer_parent.target() = ImplementationContainer::meta;
		ImplementationContainer::meta.subTypes() += ComponentImplementationContainer::meta;
		ImplementationContainer::meta.subTypes() += ComponentFactoryImplementationContainer::meta;

		ImplementationDependency::meta_srcImplementationDependsOn.target() = ComponentImplementation::meta;
		ComponentImplementationContainer::meta_ImplementationDependency_children.target() = ImplementationDependency::meta;

		ComponentImplementationContainer::meta_ImplementationDependsOn_children.target() = ImplementationDependsOn::meta;
		ImplementationDependsOn::meta.association() = ComponentImplementation::meta_dstImplementationDependsOn.parent();
		ImplementationDependsOn::meta_dstImplementationDependsOn_end_ = ImplementationDependency::meta_srcImplementationDependsOn_rev = ComponentImplementation::meta_dstImplementationDependsOn;
		ImplementationDependsOn::meta_srcImplementationDependsOn_end_ = ComponentImplementation::meta_dstImplementationDependsOn_rev = ImplementationDependency::meta_srcImplementationDependsOn;

		ImplementationRequirement::meta_srcMonolithDeployRequirement.target() = MonolithicImplementationBase::meta;
		ImplementationContainer::meta_ImplementationRequirement_children.target() = ImplementationRequirement::meta;

		ComponentImplementationContainer::meta_Implements_child.target() = Implements::meta;
		Implements::meta.association() = ComponentImplementation::meta_dstImplements.parent();
		Implements::meta_dstImplements_end_ = ComponentRef::meta_srcImplements_rev = ComponentImplementation::meta_dstImplements;
		Implements::meta_srcImplements_end_ = ComponentImplementation::meta_dstImplements_rev = ComponentRef::meta_srcImplements;

		InEventPort::meta_srcemit.target() = OutEventPort::meta;
		InEventPort::meta_ref.target() = Event::meta;
		InEventPort::meta_dstEventSinkDelegate.target() = InEventPort::meta;
		InEventPort::meta_srcEventSinkDelegate.target() = InEventPort::meta;
		InEventPort::meta_srcdeliverTo.target() = PublishConnector::meta;
		InEventPort::meta_srcEventSinkPublish.target() = QoSConnector::meta;
		ComponentAssembly::meta_InEventPort_children.target() = InEventPort::meta;

		InParameter::meta_ref.target() = MemberType::meta;
		OperationBase::meta_InParameter_children.target() = InParameter::meta;

		ImplementationContainer::meta_InfoProperty_children.target() = InfoProperty::meta;
		InfoProperty::meta.association() = Implemenation::meta_dstInfoProperty.parent();
		InfoProperty::meta_dstInfoProperty_end_ = Property::meta_srcInfoProperty_rev = Implemenation::meta_dstInfoProperty;
		InfoProperty::meta_srcInfoProperty_end_ = Implemenation::meta_dstInfoProperty_rev = Property::meta_srcInfoProperty;

		Inheritable::meta_referedbyInherits.target() = Inherits::meta;
		Inherits::meta_Inheritable_parent.target() = Inheritable::meta;
		ReadonlyAttribute::meta_Inheritable_parent.target() = Inheritable::meta;
		Inheritable::meta.subTypes() += HasOperations::meta;

		Inherits::meta_ref.target() = Inheritable::meta;
		Inheritable::meta_Inherits_children.target() = Inherits::meta;

		InitiatorRoleRef::meta_dstObjectAccessConn.target() = PortRule::meta;
		InitiatorRoleRef::meta_dstAssemblyAccessConn.target() = AssemblyRule::meta;
		InitiatorRoleRef::meta_dstComponentAccessConn.target() = ComponentRule::meta;
		InitiatorRoleRef::meta_ref.target() = Role::meta;
		Policy::meta_InitiatorRoleRef_children.target() = InitiatorRoleRef::meta;

		InoutParameter::meta_ref.target() = MemberType::meta;
		TwowayOperation::meta_InoutParameter_children.target() = InoutParameter::meta;

		TopLevelBehavior::meta_Input_children.target() = Input::meta;
		Input::meta.association() = SingleInputBase::meta_dstInput.parent();
		Input::meta_dstInput_end_ = InputAction::meta_srcInput_rev = SingleInputBase::meta_dstInput;
		Input::meta_srcInput_end_ = SingleInputBase::meta_dstInput_rev = InputAction::meta_srcInput;

		InputAction::meta_srcInput.target() = SingleInputBase::meta;

		BehaviorModel::meta_InputEffect_children.target() = InputEffect::meta;
		InputEffect::meta.association() = BehaviorInputAction::meta_dstInputEffect.parent();
		InputEffect::meta_dstInputEffect_end_ = StateBase::meta_srcInputEffect_rev = BehaviorInputAction::meta_dstInputEffect;
		InputEffect::meta_srcInputEffect_end_ = BehaviorInputAction::meta_dstInputEffect_rev = StateBase::meta_srcInputEffect;

		DeploymentPlan::meta_InstanceMapping_children.target() = InstanceMapping::meta;
		InstanceMapping::meta.association() = CollocationGroup::meta_dstInstanceMapping.parent();
		InstanceMapping::meta_dstInstanceMapping_end_ = NodeReference::meta_srcInstanceMapping_rev = CollocationGroup::meta_dstInstanceMapping;
		InstanceMapping::meta_srcInstanceMapping_end_ = CollocationGroup::meta_dstInstanceMapping_rev = NodeReference::meta_srcInstanceMapping;

		Interconnect::meta_dstBridgeConnection.target() = Bridge::meta;
		Interconnect::meta_srcInterconnectConnection.target() = Node::meta;
		Resource::meta_Interconnect_parent.target() = Interconnect::meta;
		Domain::meta_Interconnect_children.target() = Interconnect::meta;

		Domain::meta_InterconnectConnection_children.target() = InterconnectConnection::meta;
		InterconnectConnection::meta.association() = Node::meta_dstInterconnectConnection.parent();
		InterconnectConnection::meta_dstInterconnectConnection_end_ = Interconnect::meta_srcInterconnectConnection_rev = Node::meta_dstInterconnectConnection;
		InterconnectConnection::meta_srcInterconnectConnection_end_ = Node::meta_dstInterconnectConnection_rev = Interconnect::meta_srcInterconnectConnection;

		Package::meta_InterfaceClassificationConn_children.target() = InterfaceClassificationConn::meta;
		InterfaceClassificationConn::meta.association() = ::CQML::Object::meta_dstInterfaceClassificationConn.parent();
		InterfaceClassificationConn::meta_dstInterfaceClassificationConn_end_ = RequiredRights::meta_srcInterfaceClassificationConn_rev = ::CQML::Object::meta_dstInterfaceClassificationConn;
		InterfaceClassificationConn::meta_srcInterfaceClassificationConn_end_ = ::CQML::Object::meta_dstInterfaceClassificationConn_rev = RequiredRights::meta_srcInterfaceClassificationConn;

		File::meta_InterfaceDefinitions_parent.target() = InterfaceDefinitions::meta;
		RootFolder::meta_InterfaceDefinitions_children.target() = InterfaceDefinitions::meta;

		InvokePortBase::meta_srcinvoke.target() = RequiredRequestPort::meta;
		InvokePortBase::meta.subTypes() += Supports::meta;
		InvokePortBase::meta.subTypes() += ProvidedRequestPort::meta;

		Label::meta_srcLabelConnection.target() = Member::meta;
		SwitchedAggregate::meta_Label_children.target() = Label::meta;

		SwitchedAggregate::meta_LabelConnection_children.target() = LabelConnection::meta;
		LabelConnection::meta.association() = Member::meta_dstLabelConnection.parent();
		LabelConnection::meta_dstLabelConnection_end_ = Label::meta_srcLabelConnection_rev = Member::meta_dstLabelConnection;
		LabelConnection::meta_srcLabelConnection_end_ = Member::meta_dstLabelConnection_rev = Label::meta_srcLabelConnection;

		Lane::meta_dstLanePerThreadPool.target() = ThreadPool::meta;
		RealTimeConfiguration::meta_Lane_children.target() = Lane::meta;

		RealTimeConfiguration::meta_LanePerThreadPool_children.target() = LanePerThreadPool::meta;
		LanePerThreadPool::meta.association() = Lane::meta_dstLanePerThreadPool.parent();
		LanePerThreadPool::meta_dstLanePerThreadPool_end_ = ThreadPool::meta_srcLanePerThreadPool_rev = Lane::meta_dstLanePerThreadPool;
		LanePerThreadPool::meta_srcLanePerThreadPool_end_ = Lane::meta_dstLanePerThreadPool_rev = ThreadPool::meta_srcLanePerThreadPool;

		LookupKey::meta_ref.target() = ValueObject::meta;
		ComponentFactory::meta_LookupKey_child.target() = LookupKey::meta;

		ComponentFactory::meta_LookupOperation_children.target() = LookupOperation::meta;

		LoopState::meta_dstLoopTransition.target() = ActionBase::meta;
		LoopState::meta.subTypes() += DoWhileState::meta;
		LoopState::meta.subTypes() += ForState::meta;
		LoopState::meta.subTypes() += WhileState::meta;

		BehaviorModel::meta_LoopTransition_children.target() = LoopTransition::meta;
		LoopTransition::meta.association() = LoopState::meta_dstLoopTransition.parent();
		LoopTransition::meta_dstLoopTransition_end_ = ActionBase::meta_srcLoopTransition_rev = LoopState::meta_dstLoopTransition;
		LoopTransition::meta_srcLoopTransition_end_ = LoopState::meta_dstLoopTransition_rev = ActionBase::meta_srcLoopTransition;

		Workspaces::meta_MPC_parent.target() = MPC::meta;
		Project::meta_MPC_parent.target() = MPC::meta;
		ComponentBuild::meta_MPC_children.target() = MPC::meta;

		ObjectByValue::meta_MakeMemberPrivate_children.target() = MakeMemberPrivate::meta;
		MakeMemberPrivate::meta.association() = Member::meta_dstMakeMemberPrivate.parent();
		MakeMemberPrivate::meta_dstMakeMemberPrivate_end_ = PrivateFlag::meta_srcMakeMemberPrivate_rev = Member::meta_dstMakeMemberPrivate;
		MakeMemberPrivate::meta_srcMakeMemberPrivate_end_ = Member::meta_dstMakeMemberPrivate_rev = PrivateFlag::meta_srcMakeMemberPrivate;

		Manageable::meta_srcManagesComponent.target() = ComponentFactory::meta;
		Manageable::meta.subTypes() += Component::meta;
		Manageable::meta.subTypes() += ComponentRef::meta;

		Package::meta_ManagesComponent_children.target() = ManagesComponent::meta;
		File::meta_ManagesComponent_children.target() = ManagesComponent::meta;
		ManagesComponent::meta.association() = ComponentFactory::meta_dstManagesComponent.parent();
		ManagesComponent::meta_dstManagesComponent_end_ = Manageable::meta_srcManagesComponent_rev = ComponentFactory::meta_dstManagesComponent;
		ManagesComponent::meta_srcManagesComponent_end_ = ComponentFactory::meta_dstManagesComponent_rev = Manageable::meta_srcManagesComponent;

		Member::meta_dstLabelConnection.target() = Label::meta;
		Member::meta_ref.target() = MemberType::meta;
		Member::meta_dstMakeMemberPrivate.target() = PrivateFlag::meta;
		Exception::meta_Member_children.target() = Member::meta;
		Aggregate::meta_Member_children.target() = Member::meta;
		SwitchedAggregate::meta_Member_children.target() = Member::meta;
		ObjectByValue::meta_Member_children.target() = Member::meta;

		MemberType::meta_referedbyCollection.target() = Collection::meta;
		MemberType::meta_referedbyAlias.target() = Alias::meta;
		MemberType::meta_referedbyBoxed.target() = Boxed::meta;
		MemberType::meta_referedbyMember.target() = Member::meta;
		MemberType::meta_referedbyAttributeMember.target() = AttributeMember::meta;
		MemberType::meta_referedbyInParameter.target() = InParameter::meta;
		MemberType::meta_referedbyOutParameter.target() = OutParameter::meta;
		MemberType::meta_referedbyReturnType.target() = ReturnType::meta;
		MemberType::meta_referedbyParameterType.target() = ParameterType::meta;
		MemberType::meta_referedbyInoutParameter.target() = InoutParameter::meta;
		MemberType::meta_referedbyDataType.target() = DataType::meta;
		MemberType::meta.subTypes() += PredefinedType::meta;
		MemberType::meta.subTypes() += NamedType::meta;

		BenchmarkAnalysis::meta_MetricConnection_children.target() = MetricConnection::meta;
		MetricConnection::meta.association() = OperationRef::meta_dstMetricConnection.parent();
		MetricConnection::meta_dstMetricConnection_end_ = MetricsBase::meta_srcMetricConnection_rev = OperationRef::meta_dstMetricConnection;
		MetricConnection::meta_srcMetricConnection_end_ = OperationRef::meta_dstMetricConnection_rev = MetricsBase::meta_srcMetricConnection;

		MetricsBase::meta_dstWorkloadCharacteristics.target() = TaskSet::meta;
		MetricsBase::meta_srcMetricConnection.target() = OperationRef::meta;
		MetricsBase::meta_srcBenchmarkCharacteristics.target() = BenchmarkType::meta;
		DataAnalysisBase::meta_MetricsBase_parent.target() = MetricsBase::meta;
		BenchmarkAnalysis::meta_MetricsBase_children.target() = MetricsBase::meta;
		MetricsBase::meta.subTypes() += Latency::meta;
		MetricsBase::meta.subTypes() += Throughput::meta;

		MgaObject::meta.subTypes() += Project::meta;
		MgaObject::meta.subTypes() += ExternalResources::meta;
		MgaObject::meta.subTypes() += ExtResourceConn::meta;
		MgaObject::meta.subTypes() += ComponentLib::meta;
		MgaObject::meta.subTypes() += MPC::meta;
		MgaObject::meta.subTypes() += Workspaces::meta;
		MgaObject::meta.subTypes() += Prefixable::meta;
		MgaObject::meta.subTypes() += Taggable::meta;
		MgaObject::meta.subTypes() += ExceptionRef::meta;
		MgaObject::meta.subTypes() += FileRef::meta;
		MgaObject::meta.subTypes() += ConstantType::meta;
		MgaObject::meta.subTypes() += MemberType::meta;
		MgaObject::meta.subTypes() += EnumValue::meta;
		MgaObject::meta.subTypes() += Label::meta;
		MgaObject::meta.subTypes() += LabelConnection::meta;
		MgaObject::meta.subTypes() += Discriminator::meta;
		MgaObject::meta.subTypes() += Member::meta;
		MgaObject::meta.subTypes() += Inherits::meta;
		MgaObject::meta.subTypes() += ExternalPortReferenceType::meta;
		MgaObject::meta.subTypes() += SupportsInterfaces::meta;
		MgaObject::meta.subTypes() += InvokePortBase::meta;
		MgaObject::meta.subTypes() += LookupKey::meta;
		MgaObject::meta.subTypes() += SetException::meta;
		MgaObject::meta.subTypes() += GetException::meta;
		MgaObject::meta.subTypes() += PrivateFlag::meta;
		MgaObject::meta.subTypes() += MakeMemberPrivate::meta;
		MgaObject::meta.subTypes() += AttributeMember::meta;
		MgaObject::meta.subTypes() += ParameterType::meta;
		MgaObject::meta.subTypes() += ReturnType::meta;
		MgaObject::meta.subTypes() += Manageable::meta;
		MgaObject::meta.subTypes() += ComponentBase::meta;
		MgaObject::meta.subTypes() += SingleOutputBase::meta;
		MgaObject::meta.subTypes() += MultiInputBase::meta;
		MgaObject::meta.subTypes() += MultiOutputBase::meta;
		MgaObject::meta.subTypes() += SingleInputBase::meta;
		MgaObject::meta.subTypes() += QueryInputBase::meta;
		MgaObject::meta.subTypes() += CommonPortAttrs::meta;
		MgaObject::meta.subTypes() += GraphVertex::meta;
		MgaObject::meta.subTypes() += CollocationGroupMember::meta;
		MgaObject::meta.subTypes() += FTMonitorable::meta;
		MgaObject::meta.subTypes() += ManagesComponent::meta;
		MgaObject::meta.subTypes() += Domain::meta;
		MgaObject::meta.subTypes() += Shares::meta;
		MgaObject::meta.subTypes() += InterconnectConnection::meta;
		MgaObject::meta.subTypes() += BridgeConnection::meta;
		MgaObject::meta.subTypes() += RequirementBase::meta;
		MgaObject::meta.subTypes() += ImplementationDependency::meta;
		MgaObject::meta.subTypes() += Property::meta;
		MgaObject::meta.subTypes() += SatisfierProperty::meta;
		MgaObject::meta.subTypes() += RequirementSatisfier::meta;
		MgaObject::meta.subTypes() += DataType::meta;
		MgaObject::meta.subTypes() += PackageInterface::meta;
		MgaObject::meta.subTypes() += Implementation::meta;
		MgaObject::meta.subTypes() += PackageContainer::meta;
		MgaObject::meta.subTypes() += PackageConfigProperty::meta;
		MgaObject::meta.subTypes() += PackageInfoProperty::meta;
		MgaObject::meta.subTypes() += ComponentPackage::meta;
		MgaObject::meta.subTypes() += ComponentPackageReference::meta;
		MgaObject::meta.subTypes() += TopLevelPackageContainer::meta;
		MgaObject::meta.subTypes() += TopLevelPackage::meta;
		MgaObject::meta.subTypes() += package::meta;
		MgaObject::meta.subTypes() += ComponentPropertyDescription::meta;
		MgaObject::meta.subTypes() += ComponentProperty::meta;
		MgaObject::meta.subTypes() += ComponentContainer::meta;
		MgaObject::meta.subTypes() += ComponentConfigProperty::meta;
		MgaObject::meta.subTypes() += ComponentInfoProperty::meta;
		MgaObject::meta.subTypes() += ImplementationArtifactReference::meta;
		MgaObject::meta.subTypes() += ArtifactDependsOn::meta;
		MgaObject::meta.subTypes() += ArtifactDeployRequirement::meta;
		MgaObject::meta.subTypes() += ArtifactContainer::meta;
		MgaObject::meta.subTypes() += ArtifactExecParameter::meta;
		MgaObject::meta.subTypes() += ArtifactInfoProperty::meta;
		MgaObject::meta.subTypes() += ImplementationArtifact::meta;
		MgaObject::meta.subTypes() += ArtifactDependency::meta;
		MgaObject::meta.subTypes() += PackageConfBasePackage::meta;
		MgaObject::meta.subTypes() += PackageConfReference::meta;
		MgaObject::meta.subTypes() += PackageConfigurationReference::meta;
		MgaObject::meta.subTypes() += PackageConfigurationContainer::meta;
		MgaObject::meta.subTypes() += PackageConfConfigProperty::meta;
		MgaObject::meta.subTypes() += PackageConfSelectRequirement::meta;
		MgaObject::meta.subTypes() += PackageConfSpecializedConfig::meta;
		MgaObject::meta.subTypes() += PackageConfiguration::meta;
		MgaObject::meta.subTypes() += ImplementationCapability::meta;
		MgaObject::meta.subTypes() += ImplementationDependsOn::meta;
		MgaObject::meta.subTypes() += Implements::meta;
		MgaObject::meta.subTypes() += ComponentImplementationReference::meta;
		MgaObject::meta.subTypes() += Implemenation::meta;
		MgaObject::meta.subTypes() += ImplementationContainer::meta;
		MgaObject::meta.subTypes() += CriticalPath::meta;
		MgaObject::meta.subTypes() += invoke::meta;
		MgaObject::meta.subTypes() += AssemblyselectRequirement::meta;
		MgaObject::meta.subTypes() += AssemblyConfigProperty::meta;
		MgaObject::meta.subTypes() += PublishConnector::meta;
		MgaObject::meta.subTypes() += publish::meta;
		MgaObject::meta.subTypes() += deliverTo::meta;
		MgaObject::meta.subTypes() += AssemblyDeployRequirement::meta;
		MgaObject::meta.subTypes() += emit::meta;
		MgaObject::meta.subTypes() += ReceptacleDelegate::meta;
		MgaObject::meta.subTypes() += FacetDelegate::meta;
		MgaObject::meta.subTypes() += EventSourceDelegate::meta;
		MgaObject::meta.subTypes() += EventSinkDelegate::meta;
		MgaObject::meta.subTypes() += ExternalDelegate::meta;
		MgaObject::meta.subTypes() += AttributeValue::meta;
		MgaObject::meta.subTypes() += AttributeDelegate::meta;
		MgaObject::meta.subTypes() += AttributeMapping::meta;
		MgaObject::meta.subTypes() += AttributeMappingValue::meta;
		MgaObject::meta.subTypes() += AttributeMappingDelegate::meta;
		MgaObject::meta.subTypes() += SupportsDelegate::meta;
		MgaObject::meta.subTypes() += DeploymentPlan::meta;
		MgaObject::meta.subTypes() += InstanceMapping::meta;
		MgaObject::meta.subTypes() += CollocationGroup::meta;
		MgaObject::meta.subTypes() += Deploys::meta;
		MgaObject::meta.subTypes() += Bridge::meta;
		MgaObject::meta.subTypes() += Interconnect::meta;
		MgaObject::meta.subTypes() += Node::meta;
		MgaObject::meta.subTypes() += NodeReference::meta;
		MgaObject::meta.subTypes() += MetricConnection::meta;
		MgaObject::meta.subTypes() += DataAnalysisBase::meta;
		MgaObject::meta.subTypes() += TimeProbe::meta;
		MgaObject::meta.subTypes() += TimerConnection::meta;
		MgaObject::meta.subTypes() += MetricsBase::meta;
		MgaObject::meta.subTypes() += BenchmarkAnalysis::meta;
		MgaObject::meta.subTypes() += ResourceActionBase::meta;
		MgaObject::meta.subTypes() += EventRef::meta;
		MgaObject::meta.subTypes() += TimerEventSinkConn::meta;
		MgaObject::meta.subTypes() += TaskSet::meta;
		MgaObject::meta.subTypes() += Task::meta;
		MgaObject::meta.subTypes() += WorkloadCharacteristics::meta;
		MgaObject::meta.subTypes() += ComponentOperation::meta;
		MgaObject::meta.subTypes() += CompRef::meta;
		MgaObject::meta.subTypes() += WorkLoadOperationConnection::meta;
		MgaObject::meta.subTypes() += BenchmarkType::meta;
		MgaObject::meta.subTypes() += BenchmarkCharacteristics::meta;
		MgaObject::meta.subTypes() += Path::meta;
		MgaObject::meta.subTypes() += DstEdge::meta;
		MgaObject::meta.subTypes() += SrcEdge::meta;
		MgaObject::meta.subTypes() += EdgeProperty::meta;
		MgaObject::meta.subTypes() += Edge::meta;
		MgaObject::meta.subTypes() += Paths::meta;
		MgaObject::meta.subTypes() += PathProperty::meta;
		MgaObject::meta.subTypes() += PathReference::meta;
		MgaObject::meta.subTypes() += ComponentAssemblyBase::meta;
		MgaObject::meta.subTypes() += ExternalPortReference::meta;
		MgaObject::meta.subTypes() += ECBehavior::meta;
		MgaObject::meta.subTypes() += ECRole::meta;
		MgaObject::meta.subTypes() += ServiceProvider::meta;
		MgaObject::meta.subTypes() += MultipleServiceRequests::meta;
		MgaObject::meta.subTypes() += ServiceLevels::meta;
		MgaObject::meta.subTypes() += ServiceConsumer::meta;
		MgaObject::meta.subTypes() += ConfigProperty::meta;
		MgaObject::meta.subTypes() += InfoProperty::meta;
		MgaObject::meta.subTypes() += MonolithprimaryArtifact::meta;
		MgaObject::meta.subTypes() += MonolithDeployRequirement::meta;
		MgaObject::meta.subTypes() += MonolithExecParameter::meta;
		MgaObject::meta.subTypes() += WorkerLibrary::meta;
		MgaObject::meta.subTypes() += Worker::meta;
		MgaObject::meta.subTypes() += WorkerPackageBase::meta;
		MgaObject::meta.subTypes() += WorkerType::meta;
		MgaObject::meta.subTypes() += Variable::meta;
		MgaObject::meta.subTypes() += BehaviorModel::meta;
		MgaObject::meta.subTypes() += BehaviorInputAction::meta;
		MgaObject::meta.subTypes() += ActionBase::meta;
		MgaObject::meta.subTypes() += Finish::meta;
		MgaObject::meta.subTypes() += QueryInputAction::meta;
		MgaObject::meta.subTypes() += Input::meta;
		MgaObject::meta.subTypes() += MultiInput::meta;
		MgaObject::meta.subTypes() += QueryInput::meta;
		MgaObject::meta.subTypes() += Transition::meta;
		MgaObject::meta.subTypes() += StateBase::meta;
		MgaObject::meta.subTypes() += BranchTransition::meta;
		MgaObject::meta.subTypes() += LoopTransition::meta;
		MgaObject::meta.subTypes() += Terminal::meta;
		MgaObject::meta.subTypes() += TerminalTransition::meta;
		MgaObject::meta.subTypes() += EffectBase::meta;
		MgaObject::meta.subTypes() += QoSCharacteristicBase::meta;
		MgaObject::meta.subTypes() += DeploymentPlanQoS::meta;
		MgaObject::meta.subTypes() += RecepInvoke::meta;
		MgaObject::meta.subTypes() += ComponentAssemblyQoS::meta;
		MgaObject::meta.subTypes() += PortQoS::meta;
		MgaObject::meta.subTypes() += FacetInvoke::meta;
		MgaObject::meta.subTypes() += QoSReq::meta;
		MgaObject::meta.subTypes() += EventSourcePublish::meta;
		MgaObject::meta.subTypes() += ComponentQoS::meta;
		MgaObject::meta.subTypes() += EventSinkPublish::meta;
		MgaObject::meta.subTypes() += QoSConnector::meta;
		MgaObject::meta.subTypes() += PriorityBands::meta;
		MgaObject::meta.subTypes() += LanePerThreadPool::meta;
		MgaObject::meta.subTypes() += ThreadPool::meta;
		MgaObject::meta.subTypes() += EnvironmentConf::meta;
		MgaObject::meta.subTypes() += PolicyPerThreadPool::meta;
		MgaObject::meta.subTypes() += Lane::meta;
		MgaObject::meta.subTypes() += PriorityModelPolicy::meta;
		MgaObject::meta.subTypes() += Destructible::meta;
		MgaObject::meta.subTypes() += DeploymentPlanRef::meta;
		MgaObject::meta.subTypes() += SRGRiskAssociation::meta;
		MgaObject::meta.subTypes() += RepicaGroupConfiguration::meta;
		MgaObject::meta.subTypes() += DomainRiskGrouping::meta;
		MgaObject::meta.subTypes() += RootRiskAssociation::meta;
		MgaObject::meta.subTypes() += MonitorableGroupAssociation::meta;
		MgaObject::meta.subTypes() += SharedResourceReference::meta;
		MgaObject::meta.subTypes() += FTDeployDepends::meta;
		MgaObject::meta.subTypes() += FTDeployment::meta;
		MgaObject::meta.subTypes() += EventChannelCommunicationPoint::meta;
		MgaObject::meta.subTypes() += ReceiverConnection::meta;
		MgaObject::meta.subTypes() += ConsumerBehavior::meta;
		MgaObject::meta.subTypes() += Filter::meta;
		MgaObject::meta.subTypes() += EventSource::meta;
		MgaObject::meta.subTypes() += SupplierBehavior::meta;
		MgaObject::meta.subTypes() += eventServiceConfiguration::meta;
		MgaObject::meta.subTypes() += EventChannelFactory::meta;
		MgaObject::meta.subTypes() += EventSourcePort::meta;
		MgaObject::meta.subTypes() += SenderConnection::meta;
		MgaObject::meta.subTypes() += SecurityQoS::meta;
		MgaObject::meta.subTypes() += PortRuleRef::meta;
		MgaObject::meta.subTypes() += AssemblyRuleRef::meta;
		MgaObject::meta.subTypes() += ComponentRuleRef::meta;
		MgaObject::meta.subTypes() += Policy::meta;
		MgaObject::meta.subTypes() += PolicySet::meta;
		MgaObject::meta.subTypes() += AssemblyAccessConn::meta;
		MgaObject::meta.subTypes() += ObjectAccessConn::meta;
		MgaObject::meta.subTypes() += TargetObjectRef::meta;
		MgaObject::meta.subTypes() += AttributeRef::meta;
		MgaObject::meta.subTypes() += RuleBase::meta;
		MgaObject::meta.subTypes() += OnInterfaceConn::meta;
		MgaObject::meta.subTypes() += ComponentAccessConn::meta;
		MgaObject::meta.subTypes() += InitiatorRoleRef::meta;
		MgaObject::meta.subTypes() += AttributeManipulateConn::meta;
		MgaObject::meta.subTypes() += SecuredPathConn::meta;
		MgaObject::meta.subTypes() += OnAssemblyConn::meta;
		MgaObject::meta.subTypes() += PathRef::meta;
		MgaObject::meta.subTypes() += OperationInvokeConn::meta;
		MgaObject::meta.subTypes() += OnComponentConn::meta;
		MgaObject::meta.subTypes() += Rights::meta;
		MgaObject::meta.subTypes() += RoleAssignmentConn::meta;
		MgaObject::meta.subTypes() += Subject::meta;
		MgaObject::meta.subTypes() += Realm::meta;
		MgaObject::meta.subTypes() += SecurityDomain::meta;
		MgaObject::meta.subTypes() += InterfaceClassificationConn::meta;
		MgaObject::meta.subTypes() += OperationClassificationConn::meta;
		MgaObject::meta.subTypes() += RightsAssignmentConn::meta;
		MgaObject::meta.subTypes() += RBAC::meta;
		MgaObject::meta.subTypes() += Security::meta;
		MgaObject::meta.subTypes() += Role::meta;

		FailOverUnit::meta_MonitorableGroupAssociation_children.target() = MonitorableGroupAssociation::meta;
		MonitorableGroupAssociation::meta.association() = FTMonitorable::meta_dstMonitorable2RepG.parent();
		MonitorableGroupAssociation::meta_dstMonitorable2RepG_end_ = RepicaGroupConfiguration::meta_srcMonitorable2RepG_rev = FTMonitorable::meta_dstMonitorable2RepG;
		MonitorableGroupAssociation::meta_srcMonitorable2RepG_end_ = FTMonitorable::meta_dstMonitorable2RepG_rev = RepicaGroupConfiguration::meta_srcMonitorable2RepG;

		ImplementationContainer::meta_MonolithDeployRequirement_children.target() = MonolithDeployRequirement::meta;
		MonolithDeployRequirement::meta.association() = MonolithicImplementationBase::meta_dstMonolithDeployRequirement.parent();
		MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_ = ImplementationRequirement::meta_srcMonolithDeployRequirement_rev = MonolithicImplementationBase::meta_dstMonolithDeployRequirement;
		MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_ = MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev = ImplementationRequirement::meta_srcMonolithDeployRequirement;

		ImplementationContainer::meta_MonolithExecParameter_children.target() = MonolithExecParameter::meta;
		MonolithExecParameter::meta.association() = MonolithicImplementationBase::meta_dstMonolithExecParameter.parent();
		MonolithExecParameter::meta_dstMonolithExecParameter_end_ = Property::meta_srcMonolithExecParameter_rev = MonolithicImplementationBase::meta_dstMonolithExecParameter;
		MonolithExecParameter::meta_srcMonolithExecParameter_end_ = MonolithicImplementationBase::meta_dstMonolithExecParameter_rev = Property::meta_srcMonolithExecParameter;

		MonolithicImplementationBase::meta_dstMonolithDeployRequirement.target() = ImplementationRequirement::meta;
		MonolithicImplementationBase::meta_dstMonolithExecParameter.target() = Property::meta;
		MonolithicImplementationBase::meta_dstMonolithprimaryArtifact.target() = ImplementationArtifactReference::meta;
		MonolithicImplementationBase::meta.subTypes() += MonolithicImplementation::meta;
		MonolithicImplementationBase::meta.subTypes() += ComponentFactoryInstance::meta;

		ImplementationContainer::meta_MonolithprimaryArtifact_children.target() = MonolithprimaryArtifact::meta;
		MonolithprimaryArtifact::meta.association() = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact.parent();
		MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_ = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;
		MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_ = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;

		TopLevelBehavior::meta_MultiInput_children.target() = MultiInput::meta;
		MultiInput::meta.association() = MultiInputBase::meta_dstMultiInput.parent();
		MultiInput::meta_dstMultiInput_end_ = MultiInputAction::meta_srcMultiInput_rev = MultiInputBase::meta_dstMultiInput;
		MultiInput::meta_srcMultiInput_end_ = MultiInputBase::meta_dstMultiInput_rev = MultiInputAction::meta_srcMultiInput;

		MultiInputAction::meta_srcMultiInput.target() = MultiInputBase::meta;

		MultiInputBase::meta_dstMultiInput.target() = MultiInputAction::meta;
		MultiInputBase::meta.subTypes() += ProvidedRequestPort::meta;
		MultiInputBase::meta.subTypes() += Environment::meta;

		MultiOutputBase::meta.subTypes() += RequiredRequestPort::meta;

		ServiceProvider::meta_MultipleServiceRequests_child.target() = MultipleServiceRequests::meta;

		Package::meta_NamedType_children.target() = NamedType::meta;
		File::meta_NamedType_children.target() = NamedType::meta;
		NamedType::meta.subTypes() += NoInheritable::meta;
		NamedType::meta.subTypes() += Inheritable::meta;
		NamedType::meta.subTypes() += Boxed::meta;
		NamedType::meta.subTypes() += Component::meta;

		HasOperations::meta_NoInheritable_children.target() = NoInheritable::meta;
		NoInheritable::meta.subTypes() += Enum::meta;
		NoInheritable::meta.subTypes() += Aggregate::meta;
		NoInheritable::meta.subTypes() += SwitchedAggregate::meta;
		NoInheritable::meta.subTypes() += Collection::meta;
		NoInheritable::meta.subTypes() += Alias::meta;

		Node::meta_dstShares.target() = SharedResource::meta;
		Node::meta_dstInterconnectConnection.target() = Interconnect::meta;
		Node::meta_referedbyNodeReference.target() = NodeReference::meta;
		Node::meta_referedbyHostReference.target() = HostReference::meta;
		Resource::meta_Node_parent.target() = Node::meta;
		Domain::meta_Node_children.target() = Node::meta;

		NodeReference::meta_srcInstanceMapping.target() = CollocationGroup::meta;
		NodeReference::meta_ref.target() = Node::meta;
		DeploymentPlan::meta_NodeReference_children.target() = NodeReference::meta;

		::CQML::Object::meta_dstInterfaceClassificationConn.target() = RequiredRights::meta;
		::CQML::Object::meta_referedbySupports.target() = Supports::meta;
		::CQML::Object::meta_referedbyTargetObjectRef.target() = TargetObjectRef::meta;

		Policy::meta_ObjectAccessConn_children.target() = ObjectAccessConn::meta;
		ObjectAccessConn::meta.association() = InitiatorRoleRef::meta_dstObjectAccessConn.parent();
		ObjectAccessConn::meta_dstObjectAccessConn_end_ = PortRule::meta_srcObjectAccessConn_rev = InitiatorRoleRef::meta_dstObjectAccessConn;
		ObjectAccessConn::meta_srcObjectAccessConn_end_ = InitiatorRoleRef::meta_dstObjectAccessConn_rev = PortRule::meta_srcObjectAccessConn;

		FactoryOperation::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		PrivateFlag::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		MakeMemberPrivate::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		Member::meta_ObjectByValue_parent.target() = ObjectByValue::meta;
		ObjectByValue::meta.subTypes() += Event::meta;
		ObjectByValue::meta.subTypes() += ValueObject::meta;

		Policy::meta_OnAssemblyConn_children.target() = OnAssemblyConn::meta;
		OnAssemblyConn::meta.association() = AssemblyRule::meta_dstOnAssemblyConn.parent();
		OnAssemblyConn::meta_dstOnAssemblyConn_end_ = ComponentAssemblyReference::meta_srcOnAssemblyConn_rev = AssemblyRule::meta_dstOnAssemblyConn;
		OnAssemblyConn::meta_srcOnAssemblyConn_end_ = AssemblyRule::meta_dstOnAssemblyConn_rev = ComponentAssemblyReference::meta_srcOnAssemblyConn;

		Policy::meta_OnComponentConn_children.target() = OnComponentConn::meta;
		OnComponentConn::meta.association() = ComponentRule::meta_dstOnComponentConn.parent();
		OnComponentConn::meta_dstOnComponentConn_end_ = ComponentRef::meta_srcOnComponentConn_rev = ComponentRule::meta_dstOnComponentConn;
		OnComponentConn::meta_srcOnComponentConn_end_ = ComponentRule::meta_dstOnComponentConn_rev = ComponentRef::meta_srcOnComponentConn;

		Policy::meta_OnInterfaceConn_children.target() = OnInterfaceConn::meta;
		OnInterfaceConn::meta.association() = PortRule::meta_dstOnInterfaceConn.parent();
		OnInterfaceConn::meta_dstOnInterfaceConn_end_ = TargetObjectRef::meta_srcOnInterfaceConn_rev = PortRule::meta_dstOnInterfaceConn;
		OnInterfaceConn::meta_srcOnInterfaceConn_end_ = PortRule::meta_dstOnInterfaceConn_rev = TargetObjectRef::meta_srcOnInterfaceConn;

		HasOperations::meta_OnewayOperation_children.target() = OnewayOperation::meta;

		OperationBase::meta_dstOperationClassificationConn.target() = RequiredRights::meta;
		OperationBase::meta_referedbyOperationRef.target() = OperationRef::meta;
		InParameter::meta_OperationBase_parent.target() = OperationBase::meta;
		BenchmarkAnalysis::meta_OperationBase_children.target() = OperationBase::meta;
		OperationBase::meta.subTypes() += HasExceptions::meta;
		OperationBase::meta.subTypes() += OnewayOperation::meta;

		HasOperations::meta_OperationClassificationConn_children.target() = OperationClassificationConn::meta;
		OperationClassificationConn::meta.association() = OperationBase::meta_dstOperationClassificationConn.parent();
		OperationClassificationConn::meta_dstOperationClassificationConn_end_ = RequiredRights::meta_srcOperationClassificationConn_rev = OperationBase::meta_dstOperationClassificationConn;
		OperationClassificationConn::meta_srcOperationClassificationConn_end_ = OperationBase::meta_dstOperationClassificationConn_rev = RequiredRights::meta_srcOperationClassificationConn;

		Policy::meta_OperationInvokeConn_children.target() = OperationInvokeConn::meta;
		OperationInvokeConn::meta.association() = PortRule::meta_dstOperationInvokeConn.parent();
		OperationInvokeConn::meta_dstOperationInvokeConn_end_ = ResourceActionBase::meta_srcOperationInvokeConn_rev = PortRule::meta_dstOperationInvokeConn;
		OperationInvokeConn::meta_srcOperationInvokeConn_end_ = PortRule::meta_dstOperationInvokeConn_rev = ResourceActionBase::meta_srcOperationInvokeConn;

		OperationRef::meta_dstMetricConnection.target() = MetricsBase::meta;
		OperationRef::meta_dstTimerConnection.target() = TimeProbe::meta;
		OperationRef::meta_dstComponentOperation.target() = CompRef::meta;
		OperationRef::meta_dstWorkLoadOperationConnection.target() = Task::meta;
		OperationRef::meta_ref.target() = OperationBase::meta;
		BenchmarkAnalysis::meta_OperationRef_children.target() = OperationRef::meta;
		OperationSet::meta_OperationRef_children.target() = OperationRef::meta;

		OperationRef::meta_OperationSet_parent.target() = OperationSet::meta;

		OutEventPort::meta_ref.target() = Event::meta;
		OutEventPort::meta_dstEventSourcePublish.target() = QoSConnector::meta;
		OutEventPort::meta_dstpublish.target() = PublishConnector::meta;
		OutEventPort::meta_dstemit.target() = InEventPort::meta;
		OutEventPort::meta_dstEventSourceDelegate.target() = OutEventPort::meta;
		OutEventPort::meta_srcEventSourceDelegate.target() = OutEventPort::meta;
		OutEventPort::meta_referedbyEventSourcePort.target() = EventSourcePort::meta;
		ComponentAssembly::meta_OutEventPort_children.target() = OutEventPort::meta;

		OutParameter::meta_ref.target() = MemberType::meta;
		TwowayOperation::meta_OutParameter_children.target() = OutParameter::meta;

		Package::meta_Package_parent.target() = Package::meta;
		Exception::meta_Package_parent.target() = Package::meta;
		Constant::meta_Package_parent.target() = Package::meta;
		NamedType::meta_Package_parent.target() = Package::meta;
		ComponentRef::meta_Package_parent.target() = Package::meta;
		ManagesComponent::meta_Package_parent.target() = Package::meta;
		RequiredRights::meta_Package_parent.target() = Package::meta;
		InterfaceClassificationConn::meta_Package_parent.target() = Package::meta;
		Package::meta_Package_children.target() = Package::meta;
		File::meta_Package_children.target() = Package::meta;

		PackageConfigurationContainer::meta_PackageConfBasePackage_child.target() = PackageConfBasePackage::meta;
		PackageConfBasePackage::meta.association() = PackageConfiguration::meta_dstPackageConfBasePackage.parent();
		PackageConfBasePackage::meta_dstPackageConfBasePackage_end_ = ComponentPackage::meta_srcPackageConfBasePackage_rev = PackageConfiguration::meta_dstPackageConfBasePackage;
		PackageConfBasePackage::meta_srcPackageConfBasePackage_end_ = PackageConfiguration::meta_dstPackageConfBasePackage_rev = ComponentPackage::meta_srcPackageConfBasePackage;

		PackageConfigurationContainer::meta_PackageConfConfigProperty_children.target() = PackageConfConfigProperty::meta;
		PackageConfConfigProperty::meta.association() = PackageConfiguration::meta_dstPackageConfConfigProperty.parent();
		PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_ = Property::meta_srcPackageConfConfigProperty_rev = PackageConfiguration::meta_dstPackageConfConfigProperty;
		PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_ = PackageConfiguration::meta_dstPackageConfConfigProperty_rev = Property::meta_srcPackageConfConfigProperty;

		PackageConfigurationContainer::meta_PackageConfReference_child.target() = PackageConfReference::meta;
		PackageConfReference::meta.association() = PackageConfiguration::meta_dstPackageConfReference.parent();
		PackageConfReference::meta_dstPackageConfReference_end_ = ComponentPackageReference::meta_srcPackageConfReference_rev = PackageConfiguration::meta_dstPackageConfReference;
		PackageConfReference::meta_srcPackageConfReference_end_ = PackageConfiguration::meta_dstPackageConfReference_rev = ComponentPackageReference::meta_srcPackageConfReference;

		PackageConfigurationContainer::meta_PackageConfSelectRequirement_children.target() = PackageConfSelectRequirement::meta;
		PackageConfSelectRequirement::meta.association() = PackageConfiguration::meta_dstPackageConfSelectRequirement.parent();
		PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_ = Requirement::meta_srcPackageConfSelectRequirement_rev = PackageConfiguration::meta_dstPackageConfSelectRequirement;
		PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_ = PackageConfiguration::meta_dstPackageConfSelectRequirement_rev = Requirement::meta_srcPackageConfSelectRequirement;

		PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child.target() = PackageConfSpecializedConfig::meta;
		PackageConfSpecializedConfig::meta.association() = PackageConfiguration::meta_dstPackageConfSpecializedConfig.parent();
		PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_ = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev = PackageConfiguration::meta_dstPackageConfSpecializedConfig;
		PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_ = PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;

		PackageContainer::meta_PackageConfigProperty_children.target() = PackageConfigProperty::meta;
		PackageConfigProperty::meta.association() = ComponentPackage::meta_dstPackageConfigProperty.parent();
		PackageConfigProperty::meta_dstPackageConfigProperty_end_ = Property::meta_srcPackageConfigProperty_rev = ComponentPackage::meta_dstPackageConfigProperty;
		PackageConfigProperty::meta_srcPackageConfigProperty_end_ = ComponentPackage::meta_dstPackageConfigProperty_rev = Property::meta_srcPackageConfigProperty;

		PackageConfiguration::meta_referedbyPackageConfigurationReference.target() = PackageConfigurationReference::meta;
		PackageConfiguration::meta_dstPackageConfBasePackage.target() = ComponentPackage::meta;
		PackageConfiguration::meta_dstPackageConfReference.target() = ComponentPackageReference::meta;
		PackageConfiguration::meta_dstPackageConfSelectRequirement.target() = Requirement::meta;
		PackageConfiguration::meta_dstPackageConfConfigProperty.target() = Property::meta;
		PackageConfiguration::meta_dstPackageConfSpecializedConfig.target() = PackageConfigurationReference::meta;
		PackageConfigurationContainer::meta_PackageConfiguration_children.target() = PackageConfiguration::meta;

		PackageConfBasePackage::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfReference::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		ComponentPackage::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		ComponentPackageReference::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfConfigProperty::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		Requirement::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		Property::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfiguration::meta_PackageConfigurationContainer_parent.target() = PackageConfigurationContainer::meta;
		PackageConfigurations::meta_PackageConfigurationContainer_children.target() = PackageConfigurationContainer::meta;

		PackageConfigurationReference::meta_srcpackage.target() = TopLevelPackage::meta;
		PackageConfigurationReference::meta_ref.target() = PackageConfiguration::meta;
		PackageConfigurationReference::meta_srcPackageConfSpecializedConfig.target() = PackageConfiguration::meta;
		TopLevelPackageContainer::meta_PackageConfigurationReference_child.target() = PackageConfigurationReference::meta;

		PackageConfigurationContainer::meta_PackageConfigurations_parent.target() = PackageConfigurations::meta;
		RootFolder::meta_PackageConfigurations_children.target() = PackageConfigurations::meta;

		PackageInterface::meta_PackageContainer_parent.target() = PackageContainer::meta;
		Implementation::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentImplementationReference::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentRef::meta_PackageContainer_parent.target() = PackageContainer::meta;
		PackageConfigProperty::meta_PackageContainer_parent.target() = PackageContainer::meta;
		Property::meta_PackageContainer_parent.target() = PackageContainer::meta;
		PackageInfoProperty::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentPackage::meta_PackageContainer_parent.target() = PackageContainer::meta;
		ComponentPackages::meta_PackageContainer_children.target() = PackageContainer::meta;

		PackageContainer::meta_PackageInfoProperty_children.target() = PackageInfoProperty::meta;
		PackageInfoProperty::meta.association() = ComponentPackage::meta_dstPackageInfoProperty.parent();
		PackageInfoProperty::meta_dstPackageInfoProperty_end_ = Property::meta_srcPackageInfoProperty_rev = ComponentPackage::meta_dstPackageInfoProperty;
		PackageInfoProperty::meta_srcPackageInfoProperty_end_ = ComponentPackage::meta_dstPackageInfoProperty_rev = Property::meta_srcPackageInfoProperty;

		PackageContainer::meta_PackageInterface_child.target() = PackageInterface::meta;
		PackageInterface::meta.association() = ComponentPackage::meta_dstPackageInterface.parent();
		PackageInterface::meta_dstPackageInterface_end_ = ComponentRef::meta_srcPackageInterface_rev = ComponentPackage::meta_dstPackageInterface;
		PackageInterface::meta_srcPackageInterface_end_ = ComponentPackage::meta_dstPackageInterface_rev = ComponentRef::meta_srcPackageInterface;

		ParameterType::meta_ref.target() = MemberType::meta;
		ParameterType::meta.subTypes() += InParameter::meta;
		ParameterType::meta.subTypes() += OutParameter::meta;
		ParameterType::meta.subTypes() += InoutParameter::meta;

		Path::meta_dstPathProperty.target() = Property::meta;
		Path::meta_referedbyPathReference.target() = PathReference::meta;
		Path::meta_referedbyPathRef.target() = PathRef::meta;
		DstEdge::meta_Path_parent.target() = Path::meta;
		ComponentRef::meta_Path_parent.target() = Path::meta;
		SrcEdge::meta_Path_parent.target() = Path::meta;
		EdgeProperty::meta_Path_parent.target() = Path::meta;
		Edge::meta_Path_parent.target() = Path::meta;
		Property::meta_Path_parent.target() = Path::meta;
		GraphVertex::meta_Path_parent.target() = Path::meta;
		Paths::meta_Path_children.target() = Path::meta;

		Paths::meta_PathDiagrams_parent.target() = PathDiagrams::meta;
		RootFolder::meta_PathDiagrams_children.target() = PathDiagrams::meta;

		Paths::meta_PathProperty_children.target() = PathProperty::meta;
		PathProperty::meta.association() = Path::meta_dstPathProperty.parent();
		PathProperty::meta_dstPathProperty_end_ = Property::meta_srcPathProperty_rev = Path::meta_dstPathProperty;
		PathProperty::meta_srcPathProperty_end_ = Path::meta_dstPathProperty_rev = Property::meta_srcPathProperty;

		PathRef::meta_srcSecuredPathConn.target() = AssemblyRule::meta;
		PathRef::meta_ref.target() = Path::meta;
		Policy::meta_PathRef_children.target() = PathRef::meta;

		PathReference::meta_ref.target() = Path::meta;
		PathReference::meta_srcCriticalPath.target() = ComponentAssembly::meta;
		ComponentImplementationContainer::meta_PathReference_child.target() = PathReference::meta;

		Path::meta_Paths_parent.target() = Paths::meta;
		PathProperty::meta_Paths_parent.target() = Paths::meta;
		Property::meta_Paths_parent.target() = Paths::meta;
		PathDiagrams::meta_Paths_children.target() = Paths::meta;

		TopLevelBehavior::meta_PeriodicEvent_children.target() = PeriodicEvent::meta;

		OnInterfaceConn::meta_Policy_parent.target() = Policy::meta;
		AssemblyAccessConn::meta_Policy_parent.target() = Policy::meta;
		AttributeRef::meta_Policy_parent.target() = Policy::meta;
		SecuredPathConn::meta_Policy_parent.target() = Policy::meta;
		OperationInvokeConn::meta_Policy_parent.target() = Policy::meta;
		ComponentAssemblyReference::meta_Policy_parent.target() = Policy::meta;
		OnAssemblyConn::meta_Policy_parent.target() = Policy::meta;
		AttributeManipulateConn::meta_Policy_parent.target() = Policy::meta;
		ResourceActionBase::meta_Policy_parent.target() = Policy::meta;
		RuleBase::meta_Policy_parent.target() = Policy::meta;
		PathRef::meta_Policy_parent.target() = Policy::meta;
		ObjectAccessConn::meta_Policy_parent.target() = Policy::meta;
		ComponentAccessConn::meta_Policy_parent.target() = Policy::meta;
		InitiatorRoleRef::meta_Policy_parent.target() = Policy::meta;
		OnComponentConn::meta_Policy_parent.target() = Policy::meta;
		TargetObjectRef::meta_Policy_parent.target() = Policy::meta;
		ComponentRef::meta_Policy_parent.target() = Policy::meta;
		PolicySet::meta_Policy_children.target() = Policy::meta;

		RealTimeConfiguration::meta_PolicyPerThreadPool_children.target() = PolicyPerThreadPool::meta;
		PolicyPerThreadPool::meta.association() = PriorityModelPolicy::meta_dstPolicyPerThreadPool.parent();
		PolicyPerThreadPool::meta_dstPolicyPerThreadPool_end_ = ThreadPool::meta_srcPolicyPerThreadPool_rev = PriorityModelPolicy::meta_dstPolicyPerThreadPool;
		PolicyPerThreadPool::meta_srcPolicyPerThreadPool_end_ = PriorityModelPolicy::meta_dstPolicyPerThreadPool_rev = ThreadPool::meta_srcPolicyPerThreadPool;

		Policy::meta_PolicySet_parent.target() = PolicySet::meta;
		Security::meta_PolicySet_children.target() = PolicySet::meta;

		Port::meta_dstPortQoS.target() = PortQoSCharacteristic::meta;
		Port::meta_srcExternalDelegate.target() = ExternalPortReference::meta;
		Component::meta_Port_children.target() = Port::meta;
		ConnectedComponent::meta_Port_children.target() = Port::meta;
		Port::meta.subTypes() += OutEventPort::meta;
		Port::meta.subTypes() += ProvidedRequestPort::meta;
		Port::meta.subTypes() += RequiredRequestPort::meta;
		Port::meta.subTypes() += InEventPort::meta;

		ComponentAssembly::meta_PortQoS_children.target() = PortQoS::meta;
		PortQoS::meta.association() = Port::meta_dstPortQoS.parent();
		PortQoS::meta_dstPortQoS_end_ = PortQoSCharacteristic::meta_srcPortQoS_rev = Port::meta_dstPortQoS;
		PortQoS::meta_srcPortQoS_end_ = Port::meta_dstPortQoS_rev = PortQoSCharacteristic::meta_srcPortQoS;

		PortQoSCharacteristic::meta_srcPortQoS.target() = Port::meta;
		ComponentImplementationContainer::meta_PortQoSComposition.target() = PortQoSCharacteristic::meta;
		PortQoSCharacteristic::meta.subTypes() += QoSCharRef::meta;
		PortQoSCharacteristic::meta.subTypes() += NetQoS::meta;
		PortQoSCharacteristic::meta.subTypes() += PortSecurityQoS::meta;

		PortRule::meta_referedbyPortRuleRef.target() = PortRuleRef::meta;
		PortRule::meta_srcObjectAccessConn.target() = InitiatorRoleRef::meta;
		PortRule::meta_dstOperationInvokeConn.target() = ResourceActionBase::meta;
		PortRule::meta_dstOnInterfaceConn.target() = TargetObjectRef::meta;

		PortRuleRef::meta_ref.target() = PortRule::meta;
		SecurityQoS::meta_PortRuleRef_children.target() = PortRuleRef::meta;

		PredefinedType::meta_referedbyVariable.target() = Variable::meta;
		PredefinedTypes::meta_PredefinedType_children.target() = PredefinedType::meta;
		PredefinedType::meta.subTypes() += Boolean::meta;
		PredefinedType::meta.subTypes() += Byte::meta;
		PredefinedType::meta.subTypes() += ShortInteger::meta;
		PredefinedType::meta.subTypes() += LongInteger::meta;
		PredefinedType::meta.subTypes() += RealNumber::meta;
		PredefinedType::meta.subTypes() += String::meta;
		PredefinedType::meta.subTypes() += GenericObject::meta;
		PredefinedType::meta.subTypes() += GenericValueObject::meta;
		PredefinedType::meta.subTypes() += GenericValue::meta;
		PredefinedType::meta.subTypes() += TypeEncoding::meta;
		PredefinedType::meta.subTypes() += TypeKind::meta;

		PredefinedType::meta_PredefinedTypes_parent.target() = PredefinedTypes::meta;
		RootFolder::meta_PredefinedTypes_children.target() = PredefinedTypes::meta;

		Prefixable::meta.subTypes() += Package::meta;
		Prefixable::meta.subTypes() += File::meta;
		Prefixable::meta.subTypes() += ::CQML::Object::meta;
		Prefixable::meta.subTypes() += ObjectByValue::meta;

		RealTimeConfiguration::meta_PriorityBands_children.target() = PriorityBands::meta;

		PriorityModelPolicy::meta_dstPolicyPerThreadPool.target() = ThreadPool::meta;
		RealTimeConfiguration::meta_PriorityModelPolicy_child.target() = PriorityModelPolicy::meta;

		PrivateFlag::meta_srcMakeMemberPrivate.target() = Member::meta;
		ObjectByValue::meta_PrivateFlag_children.target() = PrivateFlag::meta;

		Project::meta_setWorkspace.target() = Workspaces::meta;
		ExternalResources::meta_Project_parent.target() = Project::meta;
		ExtResourceConn::meta_Project_parent.target() = Project::meta;
		ComponentLib::meta_Project_parent.target() = Project::meta;
		ImplementationArtifact::meta_Project_parent.target() = Project::meta;
		MPC::meta_Project_children.target() = Project::meta;

		Property::meta_srcAttributeValue.target() = ReadonlyAttribute::meta;
		Property::meta_srcAssemblyConfigProperty.target() = Component::meta;
		Property::meta_srcComponentConfigProperty.target() = ComponentRef::meta;
		Property::meta_srcComponentInfoProperty.target() = ComponentRef::meta;
		Property::meta_dstPropertyConnector.target() = Edge::meta;
		Property::meta_srcPackageConfigProperty.target() = ComponentPackage::meta;
		Property::meta_srcPackageInfoProperty.target() = ComponentPackage::meta;
		Property::meta_srcArtifactExecParameter.target() = ImplementationArtifact::meta;
		Property::meta_srcArtifactInfoProperty.target() = ImplementationArtifact::meta;
		Property::meta_srcPackageConfConfigProperty.target() = PackageConfiguration::meta;
		Property::meta_srcAttributeMappingValue.target() = AttributeMapping::meta;
		Property::meta_srcPathProperty.target() = Path::meta;
		Property::meta_srcConfigProperty.target() = Implemenation::meta;
		Property::meta_srcInfoProperty.target() = Implemenation::meta;
		Property::meta_srcMonolithExecParameter.target() = MonolithicImplementationBase::meta;
		DataType::meta_Property_parent.target() = Property::meta;
		Domain::meta_Property_children.target() = Property::meta;
		RequirementBase::meta_Property_children.target() = Property::meta;
		PackageContainer::meta_Property_children.target() = Property::meta;
		ComponentContainer::meta_Property_children.target() = Property::meta;
		ArtifactContainer::meta_Property_children.target() = Property::meta;
		PackageConfigurationContainer::meta_Property_children.target() = Property::meta;
		DeploymentPlan::meta_Property_children.target() = Property::meta;
		Path::meta_Property_children.target() = Property::meta;
		Paths::meta_Property_children.target() = Property::meta;
		ComponentAssembly::meta_Property_children.target() = Property::meta;
		ImplementationContainer::meta_Property_children.target() = Property::meta;
		BehaviorInputAction::meta_Property_children.target() = Property::meta;
		ActionBase::meta_Property_children.target() = Property::meta;
		QueryInputAction::meta_Property_children.target() = Property::meta;
		RepicaGroupConfiguration::meta_Property_children.target() = Property::meta;

		Provideable::meta_referedbyProvidedRequestPort.target() = ProvidedRequestPort::meta;
		Provideable::meta_referedbyRequiredRequestPort.target() = RequiredRequestPort::meta;
		Provideable::meta.subTypes() += GenericObject::meta;
		Provideable::meta.subTypes() += ::CQML::Object::meta;

		ProvidedRequestPort::meta_srcSupportsDelegate.target() = Supports::meta;
		ProvidedRequestPort::meta_ref.target() = Provideable::meta;
		ProvidedRequestPort::meta_dstFacetDelegate.target() = ProvidedRequestPort::meta;
		ProvidedRequestPort::meta_srcFacetDelegate.target() = ProvidedRequestPort::meta;
		ProvidedRequestPort::meta_srcFacetInvoke.target() = QoSConnector::meta;
		ComponentAssembly::meta_ProvidedRequestPort_children.target() = ProvidedRequestPort::meta;

		PublishConnector::meta_srcpublish.target() = OutEventPort::meta;
		PublishConnector::meta_dstdeliverTo.target() = InEventPort::meta;
		PublishConnector::meta_dstAssemblyDeployRequirement.target() = Requirement::meta;
		ComponentAssembly::meta_PublishConnector_children.target() = PublishConnector::meta;

		QoSCharRef::meta_ref.target() = QoSCharacteristicBase::meta;

		QoSCharacteristicBase::meta_referedbyQoSCharRef.target() = QoSCharRef::meta;
		ComponentAssembly::meta_QoSCharacteristicBase_children.target() = QoSCharacteristicBase::meta;
		QoSCharacteristicBase::meta.subTypes() += ComponentAssemblyQoSCharacteristic::meta;
		QoSCharacteristicBase::meta.subTypes() += ConnectionQoSCharacteristic::meta;
		QoSCharacteristicBase::meta.subTypes() += ComponentQoSCharacteristic::meta;
		QoSCharacteristicBase::meta.subTypes() += PortQoSCharacteristic::meta;

		QoSConnector::meta_srcEventSourcePublish.target() = OutEventPort::meta;
		QoSConnector::meta_srcRecepInvoke.target() = RequiredRequestPort::meta;
		QoSConnector::meta_dstQoSReq.target() = ConnectionQoSCharacteristic::meta;
		QoSConnector::meta_dstEventSinkPublish.target() = InEventPort::meta;
		QoSConnector::meta_dstFacetInvoke.target() = ProvidedRequestPort::meta;
		ComponentAssembly::meta_QoSConnector_children.target() = QoSConnector::meta;

		ComponentAssembly::meta_QoSReq_children.target() = QoSReq::meta;
		QoSReq::meta.association() = QoSConnector::meta_dstQoSReq.parent();
		QoSReq::meta_dstQoSReq_end_ = ConnectionQoSCharacteristic::meta_srcQoSReq_rev = QoSConnector::meta_dstQoSReq;
		QoSReq::meta_srcQoSReq_end_ = QoSConnector::meta_dstQoSReq_rev = ConnectionQoSCharacteristic::meta_srcQoSReq;

		TopLevelBehavior::meta_QueryInput_children.target() = QueryInput::meta;
		QueryInput::meta.association() = QueryInputBase::meta_dstQueryInput.parent();
		QueryInput::meta_dstQueryInput_end_ = QueryInputAction::meta_srcQueryInput_rev = QueryInputBase::meta_dstQueryInput;
		QueryInput::meta_srcQueryInput_end_ = QueryInputBase::meta_dstQueryInput_rev = QueryInputAction::meta_srcQueryInput;

		QueryInputAction::meta_srcQueryInput.target() = QueryInputBase::meta;
		Property::meta_QueryInputAction_parent.target() = QueryInputAction::meta;
		BehaviorModel::meta_QueryInputAction_children.target() = QueryInputAction::meta;

		QueryInputBase::meta_dstQueryInput.target() = QueryInputAction::meta;
		QueryInputBase::meta.subTypes() += InEventPort::meta;

		Role::meta_RBAC_parent.target() = RBAC::meta;
		RightsAssignmentConn::meta_RBAC_parent.target() = RBAC::meta;
		RoleAssignmentConn::meta_RBAC_parent.target() = RBAC::meta;
		Subject::meta_RBAC_parent.target() = RBAC::meta;
		GrantedRights::meta_RBAC_parent.target() = RBAC::meta;
		SecurityDomain::meta_RBAC_parent.target() = RBAC::meta;
		Security::meta_RBAC_children.target() = RBAC::meta;

		ServiceProvider::meta_RTRequirements_parent.target() = RTRequirements::meta;
		ServiceConsumer::meta_RTRequirements_parent.target() = RTRequirements::meta;

		ReadonlyAttribute::meta_dstAttributeValue.target() = Property::meta;
		ReadonlyAttribute::meta_srcAttributeDelegate.target() = AttributeMapping::meta;
		ReadonlyAttribute::meta_referedbyAttributeMapping.target() = AttributeMapping::meta;
		ReadonlyAttribute::meta_referedbyAttributeRef.target() = AttributeRef::meta;
		GetException::meta_ReadonlyAttribute_parent.target() = ReadonlyAttribute::meta;
		AttributeMember::meta_ReadonlyAttribute_parent.target() = ReadonlyAttribute::meta;
		Inheritable::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		Component::meta_ReadonlyAttribute_children.target() = ReadonlyAttribute::meta;
		ReadonlyAttribute::meta.subTypes() += Attribute::meta;

		PriorityBands::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		PriorityModelPolicy::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		Lane::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		ThreadPool::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		PolicyPerThreadPool::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		EnvironmentConf::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;
		LanePerThreadPool::meta_RealTimeConfiguration_parent.target() = RealTimeConfiguration::meta;

		Role::meta_Realm_parent.target() = Realm::meta;
		SecurityDomain::meta_Realm_children.target() = Realm::meta;

		CIAOEvents::meta_ReceiverConnection_children.target() = ReceiverConnection::meta;
		ReceiverConnection::meta.association() = EventChannelCommunicationPoint::meta_dstReceiverConnection.parent();
		ReceiverConnection::meta_dstReceiverConnection_end_ = eventServiceConfiguration::meta_srcReceiverConnection_rev = EventChannelCommunicationPoint::meta_dstReceiverConnection;
		ReceiverConnection::meta_srcReceiverConnection_end_ = EventChannelCommunicationPoint::meta_dstReceiverConnection_rev = eventServiceConfiguration::meta_srcReceiverConnection;

		ComponentAssembly::meta_RecepInvoke_children.target() = RecepInvoke::meta;
		RecepInvoke::meta.association() = RequiredRequestPort::meta_dstRecepInvoke.parent();
		RecepInvoke::meta_dstRecepInvoke_end_ = QoSConnector::meta_srcRecepInvoke_rev = RequiredRequestPort::meta_dstRecepInvoke;
		RecepInvoke::meta_srcRecepInvoke_end_ = RequiredRequestPort::meta_dstRecepInvoke_rev = QoSConnector::meta_srcRecepInvoke;

		ComponentAssembly::meta_ReceptacleDelegate_children.target() = ReceptacleDelegate::meta;
		ReceptacleDelegate::meta.association() = RequiredRequestPort::meta_dstReceptacleDelegate.parent();
		ReceptacleDelegate::meta_dstReceptacleDelegate_end_ = RequiredRequestPort::meta_srcReceptacleDelegate_rev = RequiredRequestPort::meta_dstReceptacleDelegate;
		ReceptacleDelegate::meta_srcReceptacleDelegate_end_ = RequiredRequestPort::meta_dstReceptacleDelegate_rev = RequiredRequestPort::meta_srcReceptacleDelegate;

		RepicaGroupConfiguration::meta_srcMonitorable2RepG.target() = FTMonitorable::meta;
		Property::meta_RepicaGroupConfiguration_parent.target() = RepicaGroupConfiguration::meta;
		FailOverUnit::meta_RepicaGroupConfiguration_children.target() = RepicaGroupConfiguration::meta;

		RequiredRequestPort::meta_ref.target() = Provideable::meta;
		RequiredRequestPort::meta_dstRecepInvoke.target() = QoSConnector::meta;
		RequiredRequestPort::meta_dstinvoke.target() = InvokePortBase::meta;
		RequiredRequestPort::meta_dstReceptacleDelegate.target() = RequiredRequestPort::meta;
		RequiredRequestPort::meta_srcReceptacleDelegate.target() = RequiredRequestPort::meta;
		ComponentAssembly::meta_RequiredRequestPort_children.target() = RequiredRequestPort::meta;

		RequiredRights::meta_srcInterfaceClassificationConn.target() = ::CQML::Object::meta;
		RequiredRights::meta_srcOperationClassificationConn.target() = OperationBase::meta;
		Package::meta_RequiredRights_children.target() = RequiredRights::meta;
		HasOperations::meta_RequiredRights_children.target() = RequiredRights::meta;

		Requirement::meta_srcAssemblyselectRequirement.target() = Component::meta;
		Requirement::meta_srcArtifactDeployRequirement.target() = ImplementationArtifact::meta;
		Requirement::meta_srcPackageConfSelectRequirement.target() = PackageConfiguration::meta;
		Requirement::meta_srcAssemblyDeployRequirement.target() = PublishConnector::meta;
		ArtifactContainer::meta_Requirement_children.target() = Requirement::meta;
		PackageConfigurationContainer::meta_Requirement_children.target() = Requirement::meta;
		ComponentAssembly::meta_Requirement_children.target() = Requirement::meta;
		Requirement::meta.subTypes() += ECRequirements::meta;
		Requirement::meta.subTypes() += RTRequirements::meta;

		Property::meta_RequirementBase_parent.target() = RequirementBase::meta;
		RequirementBase::meta.subTypes() += Requirement::meta;
		RequirementBase::meta.subTypes() += ImplementationRequirement::meta;

		SatisfierProperty::meta_RequirementSatisfier_parent.target() = RequirementSatisfier::meta;
		RequirementSatisfier::meta.subTypes() += Capability::meta;
		RequirementSatisfier::meta.subTypes() += Resource::meta;
		RequirementSatisfier::meta.subTypes() += SharedResource::meta;

		Bridge::meta_Resource_children.target() = Resource::meta;
		Interconnect::meta_Resource_children.target() = Resource::meta;
		Node::meta_Resource_children.target() = Resource::meta;

		ResourceActionBase::meta_srcOperationInvokeConn.target() = PortRule::meta;
		Policy::meta_ResourceActionBase_children.target() = ResourceActionBase::meta;
		ResourceActionBase::meta.subTypes() += OperationRef::meta;
		ResourceActionBase::meta.subTypes() += OperationSet::meta;
		ResourceActionBase::meta.subTypes() += RequiredRights::meta;

		ReturnType::meta_ref.target() = MemberType::meta;
		TwowayOperation::meta_ReturnType_child.target() = ReturnType::meta;

		Rights::meta.subTypes() += RequiredRights::meta;
		Rights::meta.subTypes() += GrantedRights::meta;

		RBAC::meta_RightsAssignmentConn_children.target() = RightsAssignmentConn::meta;
		RightsAssignmentConn::meta.association() = Role::meta_dstRightsAssignmentConn.parent();
		RightsAssignmentConn::meta_dstRightsAssignmentConn_end_ = GrantedRights::meta_srcRightsAssignmentConn_rev = Role::meta_dstRightsAssignmentConn;
		RightsAssignmentConn::meta_srcRightsAssignmentConn_end_ = Role::meta_dstRightsAssignmentConn_rev = GrantedRights::meta_srcRightsAssignmentConn;

		Role::meta_referedbyInitiatorRoleRef.target() = InitiatorRoleRef::meta;
		Role::meta_srcRoleAssignmentConn.target() = Subject::meta;
		Role::meta_dstRightsAssignmentConn.target() = GrantedRights::meta;
		Realm::meta_Role_children.target() = Role::meta;
		RBAC::meta_Role_children.target() = Role::meta;

		RBAC::meta_RoleAssignmentConn_children.target() = RoleAssignmentConn::meta;
		RoleAssignmentConn::meta.association() = Subject::meta_dstRoleAssignmentConn.parent();
		RoleAssignmentConn::meta_dstRoleAssignmentConn_end_ = Role::meta_srcRoleAssignmentConn_rev = Subject::meta_dstRoleAssignmentConn;
		RoleAssignmentConn::meta_srcRoleAssignmentConn_end_ = Subject::meta_dstRoleAssignmentConn_rev = Role::meta_srcRoleAssignmentConn;

		FTDeployment::meta_RootFolder_parent.target() = RootFolder::meta;
		CIAOEvents::meta_RootFolder_parent.target() = RootFolder::meta;
		Security::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentBuild::meta_RootFolder_parent.target() = RootFolder::meta;
		InterfaceDefinitions::meta_RootFolder_parent.target() = RootFolder::meta;
		PredefinedTypes::meta_RootFolder_parent.target() = RootFolder::meta;
		Targets::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentPackages::meta_RootFolder_parent.target() = RootFolder::meta;
		TopLevelPackages::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentTypes::meta_RootFolder_parent.target() = RootFolder::meta;
		ImplementationArtifacts::meta_RootFolder_parent.target() = RootFolder::meta;
		PackageConfigurations::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentImplementations::meta_RootFolder_parent.target() = RootFolder::meta;
		DeploymentPlans::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentAnalyses::meta_RootFolder_parent.target() = RootFolder::meta;
		PathDiagrams::meta_RootFolder_parent.target() = RootFolder::meta;
		ComponentFactoryImplementations::meta_RootFolder_parent.target() = RootFolder::meta;
		WorkerLibraries::meta_RootFolder_parent.target() = RootFolder::meta;
		RootFolder::meta_RootFolder_parent.target() = RootFolder::meta;
		RootFolder::meta_RootFolder_children.target() = RootFolder::meta;

		DomainRiskGrouping::meta_RootRiskAssociation_children.target() = RootRiskAssociation::meta;
		RootRiskAssociation::meta.association() = RootRiskGroup::meta_dstRootRiskAssociation.parent();
		RootRiskAssociation::meta_dstRootRiskAssociation_end_ = SRGBase::meta_srcRootRiskAssociation_rev = RootRiskGroup::meta_dstRootRiskAssociation;
		RootRiskAssociation::meta_srcRootRiskAssociation_end_ = RootRiskGroup::meta_dstRootRiskAssociation_rev = SRGBase::meta_srcRootRiskAssociation;

		RootRiskGroup::meta_dstRootRiskAssociation.target() = SRGBase::meta;
		SharedResourceReference::meta_RootRiskGroup_parent.target() = RootRiskGroup::meta;
		DomainRiskGrouping::meta_RootRiskGroup_child.target() = RootRiskGroup::meta;

		Policy::meta_RuleBase_children.target() = RuleBase::meta;
		RuleBase::meta.subTypes() += PortRule::meta;
		RuleBase::meta.subTypes() += AssemblyRule::meta;
		RuleBase::meta.subTypes() += ComponentRule::meta;

		SRGBase::meta_srcRootRiskAssociation.target() = RootRiskGroup::meta;
		SRGBase::meta_srcSRGRiskAssociation.target() = SharedRiskGroup::meta;
		DomainRiskGrouping::meta_SRGBase_children.target() = SRGBase::meta;
		SRGBase::meta.subTypes() += SharedRiskGroup::meta;
		SRGBase::meta.subTypes() += HostReference::meta;

		DomainRiskGrouping::meta_SRGRiskAssociation_children.target() = SRGRiskAssociation::meta;
		SRGRiskAssociation::meta.association() = SharedRiskGroup::meta_dstSRGRiskAssociation.parent();
		SRGRiskAssociation::meta_dstSRGRiskAssociation_end_ = SRGBase::meta_srcSRGRiskAssociation_rev = SharedRiskGroup::meta_dstSRGRiskAssociation;
		SRGRiskAssociation::meta_srcSRGRiskAssociation_end_ = SharedRiskGroup::meta_dstSRGRiskAssociation_rev = SRGBase::meta_srcSRGRiskAssociation;

		DataType::meta_SatisfierProperty_parent.target() = SatisfierProperty::meta;
		RequirementSatisfier::meta_SatisfierProperty_children.target() = SatisfierProperty::meta;

		Policy::meta_SecuredPathConn_children.target() = SecuredPathConn::meta;
		SecuredPathConn::meta.association() = AssemblyRule::meta_dstSecuredPathConn.parent();
		SecuredPathConn::meta_dstSecuredPathConn_end_ = PathRef::meta_srcSecuredPathConn_rev = AssemblyRule::meta_dstSecuredPathConn;
		SecuredPathConn::meta_srcSecuredPathConn_end_ = AssemblyRule::meta_dstSecuredPathConn_rev = PathRef::meta_srcSecuredPathConn;

		RBAC::meta_Security_parent.target() = Security::meta;
		PolicySet::meta_Security_parent.target() = Security::meta;
		RootFolder::meta_Security_children.target() = Security::meta;

		Realm::meta_SecurityDomain_parent.target() = SecurityDomain::meta;
		RBAC::meta_SecurityDomain_children.target() = SecurityDomain::meta;

		PortRuleRef::meta_SecurityQoS_parent.target() = SecurityQoS::meta;
		SecurityQoS::meta.subTypes() += ComponentAssemblySecurityQoS::meta;
		SecurityQoS::meta.subTypes() += ComponentSecurityQoS::meta;
		SecurityQoS::meta.subTypes() += PortSecurityQoS::meta;

		CIAOEvents::meta_SenderConnection_children.target() = SenderConnection::meta;
		SenderConnection::meta.association() = eventServiceConfiguration::meta_dstSenderConnection.parent();
		SenderConnection::meta_dstSenderConnection_end_ = EventChannelCommunicationPoint::meta_srcSenderConnection_rev = eventServiceConfiguration::meta_dstSenderConnection;
		SenderConnection::meta_srcSenderConnection_end_ = eventServiceConfiguration::meta_dstSenderConnection_rev = EventChannelCommunicationPoint::meta_srcSenderConnection;

		ImplementationArtifactReference::meta_ServantProject_parent.target() = ServantProject::meta;
		FileRef::meta_ServantProject_parent.target() = ServantProject::meta;

		RTRequirements::meta_ServiceConsumer_child.target() = ServiceConsumer::meta;

		ServiceProvider::meta_ServiceLevels_child.target() = ServiceLevels::meta;

		MultipleServiceRequests::meta_ServiceProvider_parent.target() = ServiceProvider::meta;
		ServiceLevels::meta_ServiceProvider_parent.target() = ServiceProvider::meta;
		RTRequirements::meta_ServiceProvider_child.target() = ServiceProvider::meta;

		SetException::meta_ref.target() = Exception::meta;
		Attribute::meta_SetException_children.target() = SetException::meta;

		SharedComponentReference::meta_ref.target() = ComponentRef::meta;

		SharedResource::meta_srcShares.target() = Node::meta;
		SharedResource::meta_referedbySharedResourceReference.target() = SharedResourceReference::meta;
		Domain::meta_SharedResource_children.target() = SharedResource::meta;

		SharedResourceReference::meta_ref.target() = SharedResource::meta;
		RootRiskGroup::meta_SharedResourceReference_children.target() = SharedResourceReference::meta;
		SharedRiskGroup::meta_SharedResourceReference_children.target() = SharedResourceReference::meta;

		SharedRiskGroup::meta_dstSRGRiskAssociation.target() = SRGBase::meta;
		SharedResourceReference::meta_SharedRiskGroup_parent.target() = SharedRiskGroup::meta;

		Domain::meta_Shares_children.target() = Shares::meta;
		Shares::meta.association() = Node::meta_dstShares.parent();
		Shares::meta_dstShares_end_ = SharedResource::meta_srcShares_rev = Node::meta_dstShares;
		Shares::meta_srcShares_end_ = Node::meta_dstShares_rev = SharedResource::meta_srcShares;

		SingleInputBase::meta_dstInput.target() = InputAction::meta;
		SingleInputBase::meta.subTypes() += InEventPort::meta;
		SingleInputBase::meta.subTypes() += PeriodicEvent::meta;
		SingleInputBase::meta.subTypes() += ApplicationTask::meta;

		SingleOutputBase::meta.subTypes() += OutEventPort::meta;

		Path::meta_SrcEdge_children.target() = SrcEdge::meta;
		SrcEdge::meta.association() = Edge::meta_dstSrcEdge.parent();
		SrcEdge::meta_dstSrcEdge_end_ = GraphVertex::meta_srcSrcEdge_rev = Edge::meta_dstSrcEdge;
		SrcEdge::meta_srcSrcEdge_end_ = Edge::meta_dstSrcEdge_rev = GraphVertex::meta_srcSrcEdge;

		State::meta_dstTransition.target() = ActionBase::meta;
		State::meta_dstTerminalTransition.target() = Terminal::meta;

		StateBase::meta_srcInputEffect.target() = BehaviorInputAction::meta;
		StateBase::meta_srcEffect.target() = ActionBase::meta;
		StateBase::meta_dstFinish.target() = BehaviorInputAction::meta;
		StateBase::meta_srcTerminalEffect.target() = Terminal::meta;
		BehaviorModel::meta_StateBase_children.target() = StateBase::meta;
		StateBase::meta.subTypes() += State::meta;
		StateBase::meta.subTypes() += BranchState::meta;
		StateBase::meta.subTypes() += LoopState::meta;

		ImplementationArtifactReference::meta_StubProject_parent.target() = StubProject::meta;
		FileRef::meta_StubProject_parent.target() = StubProject::meta;

		Subject::meta_dstRoleAssignmentConn.target() = Role::meta;
		Group::meta_Subject_children.target() = Subject::meta;
		RBAC::meta_Subject_children.target() = Subject::meta;
		Subject::meta.subTypes() += Group::meta;
		Subject::meta.subTypes() += User::meta;

		eventServiceConfiguration::meta_SupplierBehavior_child.target() = SupplierBehavior::meta;

		Supports::meta_ref.target() = ::CQML::Object::meta;
		Supports::meta_dstSupportsDelegate.target() = ProvidedRequestPort::meta;
		SupportsInterfaces::meta_Supports_children.target() = Supports::meta;

		ComponentAssembly::meta_SupportsDelegate_children.target() = SupportsDelegate::meta;
		SupportsDelegate::meta.association() = Supports::meta_dstSupportsDelegate.parent();
		SupportsDelegate::meta_dstSupportsDelegate_end_ = ProvidedRequestPort::meta_srcSupportsDelegate_rev = Supports::meta_dstSupportsDelegate;
		SupportsDelegate::meta_srcSupportsDelegate_end_ = Supports::meta_dstSupportsDelegate_rev = ProvidedRequestPort::meta_srcSupportsDelegate;

		Supports::meta_SupportsInterfaces_parent.target() = SupportsInterfaces::meta;
		SupportsInterfaces::meta.subTypes() += Component::meta;
		SupportsInterfaces::meta.subTypes() += ObjectByValue::meta;
		SupportsInterfaces::meta.subTypes() += ComponentFactory::meta;

		LabelConnection::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Label::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Member::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;
		Discriminator::meta_SwitchedAggregate_parent.target() = SwitchedAggregate::meta;

		Taggable::meta.subTypes() += Package::meta;
		Taggable::meta.subTypes() += Exception::meta;
		Taggable::meta.subTypes() += Constant::meta;
		Taggable::meta.subTypes() += NamedType::meta;
		Taggable::meta.subTypes() += ReadonlyAttribute::meta;
		Taggable::meta.subTypes() += OperationBase::meta;
		Taggable::meta.subTypes() += Port::meta;

		TargetObjectRef::meta_ref.target() = ::CQML::Object::meta;
		TargetObjectRef::meta_srcOnInterfaceConn.target() = PortRule::meta;
		Policy::meta_TargetObjectRef_children.target() = TargetObjectRef::meta;

		Domain::meta_Targets_parent.target() = Targets::meta;
		RootFolder::meta_Targets_children.target() = Targets::meta;

		Task::meta_srcWorkLoadOperationConnection.target() = OperationRef::meta;
		Task::meta_setTaskSet.target() = TaskSet::meta;
		BenchmarkAnalysis::meta_Task_children.target() = Task::meta;

		TaskSet::meta_srcWorkloadCharacteristics.target() = MetricsBase::meta;
		TaskSet::meta_members.target() = Task::meta;
		BenchmarkAnalysis::meta_TaskSet_children.target() = TaskSet::meta;

		Terminal::meta_srcTerminalTransition.target() = State::meta;
		Terminal::meta_dstTerminalEffect.target() = StateBase::meta;
		BehaviorModel::meta_Terminal_children.target() = Terminal::meta;

		BehaviorModel::meta_TerminalEffect_children.target() = TerminalEffect::meta;
		TerminalEffect::meta.association() = Terminal::meta_dstTerminalEffect.parent();
		TerminalEffect::meta_dstTerminalEffect_end_ = StateBase::meta_srcTerminalEffect_rev = Terminal::meta_dstTerminalEffect;
		TerminalEffect::meta_srcTerminalEffect_end_ = Terminal::meta_dstTerminalEffect_rev = StateBase::meta_srcTerminalEffect;

		BehaviorModel::meta_TerminalTransition_children.target() = TerminalTransition::meta;
		TerminalTransition::meta.association() = State::meta_dstTerminalTransition.parent();
		TerminalTransition::meta_dstTerminalTransition_end_ = Terminal::meta_srcTerminalTransition_rev = State::meta_dstTerminalTransition;
		TerminalTransition::meta_srcTerminalTransition_end_ = State::meta_dstTerminalTransition_rev = Terminal::meta_srcTerminalTransition;

		ThreadPool::meta_srcLanePerThreadPool.target() = Lane::meta;
		ThreadPool::meta_srcPolicyPerThreadPool.target() = PriorityModelPolicy::meta;
		RealTimeConfiguration::meta_ThreadPool_child.target() = ThreadPool::meta;

		TimeProbe::meta_srcTimerConnection.target() = OperationRef::meta;
		TimeProbe::meta_srcTimerEventSinkConn.target() = EventRef::meta;
		BenchmarkAnalysis::meta_TimeProbe_children.target() = TimeProbe::meta;

		BenchmarkAnalysis::meta_TimerConnection_children.target() = TimerConnection::meta;
		TimerConnection::meta.association() = OperationRef::meta_dstTimerConnection.parent();
		TimerConnection::meta_dstTimerConnection_end_ = TimeProbe::meta_srcTimerConnection_rev = OperationRef::meta_dstTimerConnection;
		TimerConnection::meta_srcTimerConnection_end_ = OperationRef::meta_dstTimerConnection_rev = TimeProbe::meta_srcTimerConnection;

		BenchmarkAnalysis::meta_TimerEventSinkConn_children.target() = TimerEventSinkConn::meta;
		TimerEventSinkConn::meta.association() = EventRef::meta_dstTimerEventSinkConn.parent();
		TimerEventSinkConn::meta_dstTimerEventSinkConn_end_ = TimeProbe::meta_srcTimerEventSinkConn_rev = EventRef::meta_dstTimerEventSinkConn;
		TimerEventSinkConn::meta_srcTimerEventSinkConn_end_ = EventRef::meta_dstTimerEventSinkConn_rev = TimeProbe::meta_srcTimerEventSinkConn;

		MultiInput::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		Input::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		QueryInput::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		PeriodicEvent::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		ApplicationTask::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		Environment::meta_TopLevelBehavior_parent.target() = TopLevelBehavior::meta;
		TopLevelBehavior::meta.subTypes() += Component::meta;

		TopLevelPackage::meta_dstpackage.target() = PackageConfigurationReference::meta;
		TopLevelPackageContainer::meta_TopLevelPackage_child.target() = TopLevelPackage::meta;

		PackageConfigurationReference::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		TopLevelPackage::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		package::meta_TopLevelPackageContainer_parent.target() = TopLevelPackageContainer::meta;
		TopLevelPackages::meta_TopLevelPackageContainer_children.target() = TopLevelPackageContainer::meta;

		TopLevelPackageContainer::meta_TopLevelPackages_parent.target() = TopLevelPackages::meta;
		RootFolder::meta_TopLevelPackages_children.target() = TopLevelPackages::meta;

		BehaviorModel::meta_Transition_children.target() = Transition::meta;
		Transition::meta.association() = State::meta_dstTransition.parent();
		Transition::meta_dstTransition_end_ = ActionBase::meta_srcTransition_rev = State::meta_dstTransition;
		Transition::meta_srcTransition_end_ = State::meta_dstTransition_rev = ActionBase::meta_srcTransition;

		InoutParameter::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		OutParameter::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		ReturnType::meta_TwowayOperation_parent.target() = TwowayOperation::meta;
		HasOperations::meta_TwowayOperation_children.target() = TwowayOperation::meta;

		ValueObject::meta_referedbyLookupKey.target() = LookupKey::meta;

		Variable::meta_ref.target() = PredefinedType::meta;
		BehaviorModel::meta_Variable_children.target() = Variable::meta;

		BenchmarkAnalysis::meta_WorkLoadOperationConnection_children.target() = WorkLoadOperationConnection::meta;
		WorkLoadOperationConnection::meta.association() = OperationRef::meta_dstWorkLoadOperationConnection.parent();
		WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_ = Task::meta_srcWorkLoadOperationConnection_rev = OperationRef::meta_dstWorkLoadOperationConnection;
		WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_ = OperationRef::meta_dstWorkLoadOperationConnection_rev = Task::meta_srcWorkLoadOperationConnection;

		Worker::meta_referedbyWorkerType.target() = WorkerType::meta;
		Action::meta_Worker_parent.target() = Worker::meta;
		WorkerPackageBase::meta_Worker_children.target() = Worker::meta;

		WorkerPackage::meta_WorkerFile_parent.target() = WorkerFile::meta;
		WorkerLibrary::meta_WorkerFile_children.target() = WorkerFile::meta;

		WorkerLibrary::meta_WorkerLibraries_parent.target() = WorkerLibraries::meta;
		RootFolder::meta_WorkerLibraries_children.target() = WorkerLibraries::meta;

		WorkerFile::meta_WorkerLibrary_parent.target() = WorkerLibrary::meta;
		WorkerLibraries::meta_WorkerLibrary_children.target() = WorkerLibrary::meta;

		WorkerPackage::meta_WorkerPackage_parent.target() = WorkerPackage::meta;
		WorkerFile::meta_WorkerPackage_children.target() = WorkerPackage::meta;
		WorkerPackage::meta_WorkerPackage_children.target() = WorkerPackage::meta;

		Worker::meta_WorkerPackageBase_parent.target() = WorkerPackageBase::meta;
		WorkerPackageBase::meta.subTypes() += WorkerFile::meta;
		WorkerPackageBase::meta.subTypes() += WorkerPackage::meta;

		WorkerType::meta_ref.target() = Worker::meta;
		Component::meta_WorkerType_children.target() = WorkerType::meta;

		BenchmarkAnalysis::meta_WorkloadCharacteristics_children.target() = WorkloadCharacteristics::meta;
		WorkloadCharacteristics::meta.association() = MetricsBase::meta_dstWorkloadCharacteristics.parent();
		WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_ = TaskSet::meta_srcWorkloadCharacteristics_rev = MetricsBase::meta_dstWorkloadCharacteristics;
		WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_ = MetricsBase::meta_dstWorkloadCharacteristics_rev = TaskSet::meta_srcWorkloadCharacteristics;

		Workspaces::meta_members.target() = Project::meta;
		MPC::meta_Workspaces_children.target() = Workspaces::meta;

		ComponentAssembly::meta_deliverTo_children.target() = deliverTo::meta;
		deliverTo::meta.association() = PublishConnector::meta_dstdeliverTo.parent();
		deliverTo::meta_dstdeliverTo_end_ = InEventPort::meta_srcdeliverTo_rev = PublishConnector::meta_dstdeliverTo;
		deliverTo::meta_srcdeliverTo_end_ = PublishConnector::meta_dstdeliverTo_rev = InEventPort::meta_srcdeliverTo;

		ComponentAssembly::meta_emit_children.target() = emit::meta;
		emit::meta.association() = OutEventPort::meta_dstemit.parent();
		emit::meta_dstemit_end_ = InEventPort::meta_srcemit_rev = OutEventPort::meta_dstemit;
		emit::meta_srcemit_end_ = OutEventPort::meta_dstemit_rev = InEventPort::meta_srcemit;

		eventServiceConfiguration::meta_srcReceiverConnection.target() = EventChannelCommunicationPoint::meta;
		eventServiceConfiguration::meta_dstSenderConnection.target() = EventChannelCommunicationPoint::meta;
		ConsumerBehavior::meta_eventServiceConfiguration_parent.target() = eventServiceConfiguration::meta;
		EventChannelFactory::meta_eventServiceConfiguration_parent.target() = eventServiceConfiguration::meta;
		SupplierBehavior::meta_eventServiceConfiguration_parent.target() = eventServiceConfiguration::meta;
		Filter::meta_eventServiceConfiguration_parent.target() = eventServiceConfiguration::meta;
		CIAOEvents::meta_eventServiceConfiguration_children.target() = eventServiceConfiguration::meta;

		ComponentAssembly::meta_invoke_children.target() = invoke::meta;
		invoke::meta.association() = RequiredRequestPort::meta_dstinvoke.parent();
		invoke::meta_dstinvoke_end_ = InvokePortBase::meta_srcinvoke_rev = RequiredRequestPort::meta_dstinvoke;
		invoke::meta_srcinvoke_end_ = RequiredRequestPort::meta_dstinvoke_rev = InvokePortBase::meta_srcinvoke;

		TopLevelPackageContainer::meta_package_child.target() = package::meta;
		package::meta.association() = TopLevelPackage::meta_dstpackage.parent();
		package::meta_dstpackage_end_ = PackageConfigurationReference::meta_srcpackage_rev = TopLevelPackage::meta_dstpackage;
		package::meta_srcpackage_end_ = TopLevelPackage::meta_dstpackage_rev = PackageConfigurationReference::meta_srcpackage;

		ComponentAssembly::meta_publish_children.target() = publish::meta;
		publish::meta.association() = OutEventPort::meta_dstpublish.parent();
		publish::meta_dstpublish_end_ = PublishConnector::meta_srcpublish_rev = OutEventPort::meta_dstpublish;
		publish::meta_srcpublish_end_ = OutEventPort::meta_dstpublish_rev = PublishConnector::meta_srcpublish;

	}

	void InitMeta(const ::Uml::Diagram &parent) {
		// classes, with attributes, constraints and constraint definitions
		::Uml::SetClass(Action::meta, parent, "Action");
		::Uml::SetAttribute(Action::meta_Duration, Action::meta, "Duration");
		::Uml::SetAttribute(Action::meta_LogAction, Action::meta, "LogAction");

		::Uml::SetClass(ActionBase::meta, parent, "ActionBase");

		::Uml::SetClass(Aggregate::meta, parent, "Aggregate");

		::Uml::SetClass(Alias::meta, parent, "Alias");

		::Uml::SetClass(ApplicationTask::meta, parent, "ApplicationTask");

		::Uml::SetClass(ArtifactContainer::meta, parent, "ArtifactContainer");

		::Uml::SetClass(ArtifactDependency::meta, parent, "ArtifactDependency");

		::Uml::SetClass(ArtifactDependsOn::meta, parent, "ArtifactDependsOn");

		::Uml::SetClass(ArtifactDeployRequirement::meta, parent, "ArtifactDeployRequirement");

		::Uml::SetClass(ArtifactExecParameter::meta, parent, "ArtifactExecParameter");

		::Uml::SetClass(ArtifactInfoProperty::meta, parent, "ArtifactInfoProperty");

		::Uml::SetClass(AssemblyAccessConn::meta, parent, "AssemblyAccessConn");

		::Uml::SetClass(AssemblyConfigProperty::meta, parent, "AssemblyConfigProperty");

		::Uml::SetClass(AssemblyDeployRequirement::meta, parent, "AssemblyDeployRequirement");

		::Uml::SetClass(AssemblyRule::meta, parent, "AssemblyRule");

		::Uml::SetClass(AssemblyRuleRef::meta, parent, "AssemblyRuleRef");

		::Uml::SetClass(AssemblyselectRequirement::meta, parent, "AssemblyselectRequirement");

		::Uml::SetClass(Attribute::meta, parent, "Attribute");

		::Uml::SetClass(AttributeDelegate::meta, parent, "AttributeDelegate");

		::Uml::SetClass(AttributeManipulateConn::meta, parent, "AttributeManipulateConn");

		::Uml::SetClass(AttributeMapping::meta, parent, "AttributeMapping");

		::Uml::SetClass(AttributeMappingDelegate::meta, parent, "AttributeMappingDelegate");

		::Uml::SetClass(AttributeMappingValue::meta, parent, "AttributeMappingValue");

		::Uml::SetClass(AttributeMember::meta, parent, "AttributeMember");

		::Uml::SetClass(AttributeRef::meta, parent, "AttributeRef");

		::Uml::SetClass(AttributeValue::meta, parent, "AttributeValue");

		::Uml::SetClass(Average::meta, parent, "Average");

		::Uml::SetClass(BehaviorInputAction::meta, parent, "BehaviorInputAction");

		::Uml::SetClass(BehaviorModel::meta, parent, "BehaviorModel");

		::Uml::SetClass(BenchmarkAnalysis::meta, parent, "BenchmarkAnalysis");

		::Uml::SetClass(BenchmarkCharacteristics::meta, parent, "BenchmarkCharacteristics");

		::Uml::SetClass(BenchmarkType::meta, parent, "BenchmarkType");

		::Uml::SetClass(Boolean::meta, parent, "Boolean");

		::Uml::SetClass(Boxed::meta, parent, "Boxed");

		::Uml::SetClass(BranchState::meta, parent, "BranchState");

		::Uml::SetClass(BranchTransition::meta, parent, "BranchTransition");
		::Uml::SetAttribute(BranchTransition::meta_Condition, BranchTransition::meta, "Condition");

		::Uml::SetClass(Bridge::meta, parent, "Bridge");
		::Uml::SetAttribute(Bridge::meta_label, Bridge::meta, "label");

		::Uml::SetClass(BridgeConnection::meta, parent, "BridgeConnection");

		::Uml::SetClass(Byte::meta, parent, "Byte");

		::Uml::SetClass(CIAOEvents::meta, parent, "CIAOEvents");
		::Uml::SetAttribute(CIAOEvents::meta_id, CIAOEvents::meta, "id");

		::Uml::SetClass(Capability::meta, parent, "Capability");

		::Uml::SetClass(Collection::meta, parent, "Collection");
		::Uml::SetAttribute(Collection::meta_bound, Collection::meta, "bound");

		::Uml::SetClass(CollocationGroup::meta, parent, "CollocationGroup");

		::Uml::SetClass(CollocationGroupMember::meta, parent, "CollocationGroupMember");

		::Uml::SetClass(CommonPortAttrs::meta, parent, "CommonPortAttrs");
		::Uml::SetAttribute(CommonPortAttrs::meta_exclusiveUser, CommonPortAttrs::meta, "exclusiveUser");
		::Uml::SetAttribute(CommonPortAttrs::meta_exclusiveProvider, CommonPortAttrs::meta, "exclusiveProvider");
		::Uml::SetAttribute(CommonPortAttrs::meta_optional, CommonPortAttrs::meta, "optional");

		::Uml::SetClass(CompRef::meta, parent, "CompRef");

		::Uml::SetClass(Component::meta, parent, "Component");
		::Uml::SetAttribute(Component::meta_label, Component::meta, "label");
		::Uml::SetAttribute(Component::meta_UUID, Component::meta, "UUID");

		::Uml::SetClass(ComponentAccessConn::meta, parent, "ComponentAccessConn");

		::Uml::SetClass(ComponentAnalyses::meta, parent, "ComponentAnalyses");
		::Uml::SetAttribute(ComponentAnalyses::meta_name, ComponentAnalyses::meta, "name");

		::Uml::SetClass(ComponentAssembly::meta, parent, "ComponentAssembly");

		::Uml::SetClass(ComponentAssemblyBase::meta, parent, "ComponentAssemblyBase");

		::Uml::SetClass(ComponentAssemblyQoS::meta, parent, "ComponentAssemblyQoS");

		::Uml::SetClass(ComponentAssemblyQoSCharacteristic::meta, parent, "ComponentAssemblyQoSCharacteristic");

		::Uml::SetClass(ComponentAssemblyReference::meta, parent, "ComponentAssemblyReference");

		::Uml::SetClass(ComponentAssemblySecurityQoS::meta, parent, "ComponentAssemblySecurityQoS");

		::Uml::SetClass(ComponentBase::meta, parent, "ComponentBase");

		::Uml::SetClass(ComponentBuild::meta, parent, "ComponentBuild");
		::Uml::SetAttribute(ComponentBuild::meta_name, ComponentBuild::meta, "name");

		::Uml::SetClass(ComponentConfigProperty::meta, parent, "ComponentConfigProperty");

		::Uml::SetClass(ComponentContainer::meta, parent, "ComponentContainer");

		::Uml::SetClass(ComponentFactory::meta, parent, "ComponentFactory");

		::Uml::SetClass(ComponentFactoryImplementationContainer::meta, parent, "ComponentFactoryImplementationContainer");

		::Uml::SetClass(ComponentFactoryImplementations::meta, parent, "ComponentFactoryImplementations");
		::Uml::SetAttribute(ComponentFactoryImplementations::meta_name, ComponentFactoryImplementations::meta, "name");

		::Uml::SetClass(ComponentFactoryInstance::meta, parent, "ComponentFactoryInstance");

		::Uml::SetClass(ComponentFactoryRef::meta, parent, "ComponentFactoryRef");

		::Uml::SetClass(ComponentImplementation::meta, parent, "ComponentImplementation");

		::Uml::SetClass(ComponentImplementationArtifact::meta, parent, "ComponentImplementationArtifact");

		::Uml::SetClass(ComponentImplementationContainer::meta, parent, "ComponentImplementationContainer");

		::Uml::SetClass(ComponentImplementationReference::meta, parent, "ComponentImplementationReference");

		::Uml::SetClass(ComponentImplementations::meta, parent, "ComponentImplementations");
		::Uml::SetAttribute(ComponentImplementations::meta_name, ComponentImplementations::meta, "name");

		::Uml::SetClass(ComponentInfoProperty::meta, parent, "ComponentInfoProperty");

		::Uml::SetClass(ComponentLib::meta, parent, "ComponentLib");
		::Uml::SetAttribute(ComponentLib::meta_sharedname, ComponentLib::meta, "sharedname");
		::Uml::SetAttribute(ComponentLib::meta_ORBServices, ComponentLib::meta, "ORBServices");
		::Uml::SetAttribute(ComponentLib::meta_libraryexport, ComponentLib::meta, "libraryexport");

		::Uml::SetClass(ComponentOperation::meta, parent, "ComponentOperation");

		::Uml::SetClass(ComponentPackage::meta, parent, "ComponentPackage");
		::Uml::SetAttribute(ComponentPackage::meta_label, ComponentPackage::meta, "label");
		::Uml::SetAttribute(ComponentPackage::meta_UUID, ComponentPackage::meta, "UUID");

		::Uml::SetClass(ComponentPackageReference::meta, parent, "ComponentPackageReference");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredName, ComponentPackageReference::meta, "requiredName");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredType, ComponentPackageReference::meta, "requiredType");
		::Uml::SetAttribute(ComponentPackageReference::meta_requiredUUID, ComponentPackageReference::meta, "requiredUUID");

		::Uml::SetClass(ComponentPackages::meta, parent, "ComponentPackages");
		::Uml::SetAttribute(ComponentPackages::meta_name, ComponentPackages::meta, "name");

		::Uml::SetClass(ComponentProperty::meta, parent, "ComponentProperty");

		::Uml::SetClass(ComponentPropertyDescription::meta, parent, "ComponentPropertyDescription");

		::Uml::SetClass(ComponentQoS::meta, parent, "ComponentQoS");

		::Uml::SetClass(ComponentQoSCharacteristic::meta, parent, "ComponentQoSCharacteristic");

		::Uml::SetClass(ComponentRef::meta, parent, "ComponentRef");

		::Uml::SetClass(ComponentRule::meta, parent, "ComponentRule");

		::Uml::SetClass(ComponentRuleRef::meta, parent, "ComponentRuleRef");

		::Uml::SetClass(ComponentSecurityQoS::meta, parent, "ComponentSecurityQoS");

		::Uml::SetClass(ComponentServantArtifact::meta, parent, "ComponentServantArtifact");

		::Uml::SetClass(ComponentTypes::meta, parent, "ComponentTypes");
		::Uml::SetAttribute(ComponentTypes::meta_name, ComponentTypes::meta, "name");

		::Uml::SetClass(ConfigProperty::meta, parent, "ConfigProperty");

		::Uml::SetClass(ConnectedComponent::meta, parent, "ConnectedComponent");

		::Uml::SetClass(ConnectionQoSCharacteristic::meta, parent, "ConnectionQoSCharacteristic");

		::Uml::SetClass(Constant::meta, parent, "Constant");
		::Uml::SetAttribute(Constant::meta_value, Constant::meta, "value");

		::Uml::SetClass(ConstantType::meta, parent, "ConstantType");

		::Uml::SetClass(ConsumerBehavior::meta, parent, "ConsumerBehavior");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECProxyPushConsumerCollectionSynch, ConsumerBehavior::meta, "ECProxyPushConsumerCollectionSynch");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECConsumerControl, ConsumerBehavior::meta, "ECConsumerControl");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECConsumerLock, ConsumerBehavior::meta, "ECConsumerLock");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECConsumerControlPeriod, ConsumerBehavior::meta, "ECConsumerControlPeriod");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECProxyPushConsumerCollectionFlag, ConsumerBehavior::meta, "ECProxyPushConsumerCollectionFlag");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECProxyPushConsumerCollectionIterator, ConsumerBehavior::meta, "ECProxyPushConsumerCollectionIterator");
		::Uml::SetAttribute(ConsumerBehavior::meta_ECFiltering, ConsumerBehavior::meta, "ECFiltering");

		::Uml::SetClass(CriticalPath::meta, parent, "CriticalPath");

		::Uml::SetClass(DataAnalysisBase::meta, parent, "DataAnalysisBase");

		::Uml::SetClass(DataType::meta, parent, "DataType");

		::Uml::SetClass(DeploymentPlan::meta, parent, "DeploymentPlan");
		::Uml::SetAttribute(DeploymentPlan::meta_label, DeploymentPlan::meta, "label");
		::Uml::SetAttribute(DeploymentPlan::meta_UUID, DeploymentPlan::meta, "UUID");

		::Uml::SetClass(DeploymentPlanQoS::meta, parent, "DeploymentPlanQoS");

		::Uml::SetClass(DeploymentPlanRef::meta, parent, "DeploymentPlanRef");

		::Uml::SetClass(DeploymentPlans::meta, parent, "DeploymentPlans");
		::Uml::SetAttribute(DeploymentPlans::meta_name, DeploymentPlans::meta, "name");

		::Uml::SetClass(Deploys::meta, parent, "Deploys");

		::Uml::SetClass(Destructible::meta, parent, "Destructible");
		::Uml::SetAttribute(Destructible::meta_Metric, Destructible::meta, "Metric");

		::Uml::SetClass(Discriminator::meta, parent, "Discriminator");

		::Uml::SetClass(DisplayNode::meta, parent, "DisplayNode");

		::Uml::SetClass(DoWhileState::meta, parent, "DoWhileState");

		::Uml::SetClass(Domain::meta, parent, "Domain");
		::Uml::SetAttribute(Domain::meta_UUID, Domain::meta, "UUID");
		::Uml::SetAttribute(Domain::meta_label, Domain::meta, "label");

		::Uml::SetClass(DomainRiskGrouping::meta, parent, "DomainRiskGrouping");

		::Uml::SetClass(DomainRiskGroupingRef::meta, parent, "DomainRiskGroupingRef");

		::Uml::SetClass(DstEdge::meta, parent, "DstEdge");

		::Uml::SetClass(ECBehavior::meta, parent, "ECBehavior");
		::Uml::SetAttribute(ECBehavior::meta_DispatchingMultithreadingLevel, ECBehavior::meta, "DispatchingMultithreadingLevel");
		::Uml::SetAttribute(ECBehavior::meta_MultithreadedSupplier, ECBehavior::meta, "MultithreadedSupplier");
		::Uml::SetAttribute(ECBehavior::meta_MultithreadedConsumer, ECBehavior::meta, "MultithreadedConsumer");
		::Uml::SetAttribute(ECBehavior::meta_DisconnectDanglingConnections, ECBehavior::meta, "DisconnectDanglingConnections");
		::Uml::SetAttribute(ECBehavior::meta_ConsumerBasedFiltering, ECBehavior::meta, "ConsumerBasedFiltering");
		::Uml::SetAttribute(ECBehavior::meta_SupplierBasedFiltering, ECBehavior::meta, "SupplierBasedFiltering");

		::Uml::SetClass(ECRequirements::meta, parent, "ECRequirements");
		::Uml::SetAttribute(ECRequirements::meta_ConfigureRTQoS, ECRequirements::meta, "ConfigureRTQoS");

		::Uml::SetClass(ECRole::meta, parent, "ECRole");
		::Uml::SetAttribute(ECRole::meta_ECFilterType, ECRole::meta, "ECFilterType");
		::Uml::SetAttribute(ECRole::meta_rolekind, ECRole::meta, "rolekind");

		::Uml::SetClass(Edge::meta, parent, "Edge");

		::Uml::SetClass(EdgeProperty::meta, parent, "EdgeProperty");

		::Uml::SetClass(Effect::meta, parent, "Effect");

		::Uml::SetClass(EffectBase::meta, parent, "EffectBase");
		::Uml::SetAttribute(EffectBase::meta_Postcondition, EffectBase::meta, "Postcondition");

		::Uml::SetClass(Enum::meta, parent, "Enum");

		::Uml::SetClass(EnumValue::meta, parent, "EnumValue");

		::Uml::SetClass(Environment::meta, parent, "Environment");

		::Uml::SetClass(EnvironmentConf::meta, parent, "EnvironmentConf");
		::Uml::SetAttribute(EnvironmentConf::meta_SvcConf, EnvironmentConf::meta, "SvcConf");
		::Uml::SetAttribute(EnvironmentConf::meta_CmdLineOptions, EnvironmentConf::meta, "CmdLineOptions");

		::Uml::SetClass(Event::meta, parent, "Event");

		::Uml::SetClass(EventChannelCommunicationPoint::meta, parent, "EventChannelCommunicationPoint");
		::Uml::SetAttribute(EventChannelCommunicationPoint::meta_udp, EventChannelCommunicationPoint::meta, "udp");
		::Uml::SetAttribute(EventChannelCommunicationPoint::meta_is_multicast, EventChannelCommunicationPoint::meta, "is_multicast");
		::Uml::SetAttribute(EventChannelCommunicationPoint::meta_port, EventChannelCommunicationPoint::meta, "port");
		::Uml::SetAttribute(EventChannelCommunicationPoint::meta_address, EventChannelCommunicationPoint::meta, "address");

		::Uml::SetClass(EventChannelFactory::meta, parent, "EventChannelFactory");
		::Uml::SetAttribute(EventChannelFactory::meta_ECDispatchingThreads, EventChannelFactory::meta, "ECDispatchingThreads");
		::Uml::SetAttribute(EventChannelFactory::meta_ECUseORBId, EventChannelFactory::meta, "ECUseORBId");
		::Uml::SetAttribute(EventChannelFactory::meta_ECTimeout, EventChannelFactory::meta, "ECTimeout");
		::Uml::SetAttribute(EventChannelFactory::meta_ECDispatching, EventChannelFactory::meta, "ECDispatching");
		::Uml::SetAttribute(EventChannelFactory::meta_ECObserver, EventChannelFactory::meta, "ECObserver");
		::Uml::SetAttribute(EventChannelFactory::meta_ECScheduling, EventChannelFactory::meta, "ECScheduling");

		::Uml::SetClass(EventRef::meta, parent, "EventRef");

		::Uml::SetClass(EventSinkDelegate::meta, parent, "EventSinkDelegate");

		::Uml::SetClass(EventSinkPublish::meta, parent, "EventSinkPublish");

		::Uml::SetClass(EventSource::meta, parent, "EventSource");

		::Uml::SetClass(EventSourceDelegate::meta, parent, "EventSourceDelegate");

		::Uml::SetClass(EventSourcePort::meta, parent, "EventSourcePort");

		::Uml::SetClass(EventSourcePublish::meta, parent, "EventSourcePublish");

		::Uml::SetClass(Exception::meta, parent, "Exception");

		::Uml::SetClass(ExceptionRef::meta, parent, "ExceptionRef");

		::Uml::SetClass(ExecutorProject::meta, parent, "ExecutorProject");

		::Uml::SetClass(ExtResourceConn::meta, parent, "ExtResourceConn");

		::Uml::SetClass(ExternalDelegate::meta, parent, "ExternalDelegate");

		::Uml::SetClass(ExternalPortReference::meta, parent, "ExternalPortReference");
		::Uml::SetAttribute(ExternalPortReference::meta_location, ExternalPortReference::meta, "location");
		::Uml::SetAttribute(ExternalPortReference::meta_label, ExternalPortReference::meta, "label");

		::Uml::SetClass(ExternalPortReferenceType::meta, parent, "ExternalPortReferenceType");

		::Uml::SetClass(ExternalResources::meta, parent, "ExternalResources");

		::Uml::SetClass(FTDeployDepends::meta, parent, "FTDeployDepends");

		::Uml::SetClass(FTDeployment::meta, parent, "FTDeployment");

		::Uml::SetClass(FTMonitorable::meta, parent, "FTMonitorable");

		::Uml::SetClass(FacetDelegate::meta, parent, "FacetDelegate");

		::Uml::SetClass(FacetInvoke::meta, parent, "FacetInvoke");

		::Uml::SetClass(FactoryOperation::meta, parent, "FactoryOperation");

		::Uml::SetClass(FailOverUnit::meta, parent, "FailOverUnit");
		::Uml::SetAttribute(FailOverUnit::meta_Replica, FailOverUnit::meta, "Replica");

		::Uml::SetClass(File::meta, parent, "File");
		::Uml::SetAttribute(File::meta_path, File::meta, "path");

		::Uml::SetClass(FileRef::meta, parent, "FileRef");

		::Uml::SetClass(Filter::meta, parent, "Filter");
		::Uml::SetAttribute(Filter::meta_filter_id, Filter::meta, "filter_id");
		::Uml::SetAttribute(Filter::meta_filter_type, Filter::meta, "filter_type");

		::Uml::SetClass(Finish::meta, parent, "Finish");

		::Uml::SetClass(FixedIterationBenchmarks::meta, parent, "FixedIterationBenchmarks");
		::Uml::SetAttribute(FixedIterationBenchmarks::meta_benchmarkIterations, FixedIterationBenchmarks::meta, "benchmarkIterations");

		::Uml::SetClass(ForState::meta, parent, "ForState");
		::Uml::SetAttribute(ForState::meta_InitialCondition, ForState::meta, "InitialCondition");
		::Uml::SetAttribute(ForState::meta_IncrementExpr, ForState::meta, "IncrementExpr");

		::Uml::SetClass(GenericObject::meta, parent, "GenericObject");

		::Uml::SetClass(GenericValue::meta, parent, "GenericValue");

		::Uml::SetClass(GenericValueObject::meta, parent, "GenericValueObject");

		::Uml::SetClass(GetException::meta, parent, "GetException");

		::Uml::SetClass(GrantedRights::meta, parent, "GrantedRights");

		::Uml::SetClass(GraphVertex::meta, parent, "GraphVertex");

		::Uml::SetClass(Group::meta, parent, "Group");

		::Uml::SetClass(HasExceptions::meta, parent, "HasExceptions");

		::Uml::SetClass(HasOperations::meta, parent, "HasOperations");

		::Uml::SetClass(HostReference::meta, parent, "HostReference");

		::Uml::SetClass(Implemenation::meta, parent, "Implemenation");
		::Uml::SetAttribute(Implemenation::meta_label, Implemenation::meta, "label");
		::Uml::SetAttribute(Implemenation::meta_UUID, Implemenation::meta, "UUID");

		::Uml::SetClass(Implementation::meta, parent, "Implementation");

		::Uml::SetClass(ImplementationArtifact::meta, parent, "ImplementationArtifact");
		::Uml::SetAttribute(ImplementationArtifact::meta_artifactVersion, ImplementationArtifact::meta, "artifactVersion");
		::Uml::SetAttribute(ImplementationArtifact::meta_architecture, ImplementationArtifact::meta, "architecture");
		::Uml::SetAttribute(ImplementationArtifact::meta_configuration, ImplementationArtifact::meta, "configuration");
		::Uml::SetAttribute(ImplementationArtifact::meta_operatingSystem, ImplementationArtifact::meta, "operatingSystem");
		::Uml::SetAttribute(ImplementationArtifact::meta_location, ImplementationArtifact::meta, "location");
		::Uml::SetAttribute(ImplementationArtifact::meta_UUID, ImplementationArtifact::meta, "UUID");
		::Uml::SetAttribute(ImplementationArtifact::meta_label, ImplementationArtifact::meta, "label");

		::Uml::SetClass(ImplementationArtifactReference::meta, parent, "ImplementationArtifactReference");

		::Uml::SetClass(ImplementationArtifacts::meta, parent, "ImplementationArtifacts");
		::Uml::SetAttribute(ImplementationArtifacts::meta_name, ImplementationArtifacts::meta, "name");

		::Uml::SetClass(ImplementationCapability::meta, parent, "ImplementationCapability");

		::Uml::SetClass(ImplementationContainer::meta, parent, "ImplementationContainer");

		::Uml::SetClass(ImplementationDependency::meta, parent, "ImplementationDependency");
		::Uml::SetAttribute(ImplementationDependency::meta_requiredType, ImplementationDependency::meta, "requiredType");

		::Uml::SetClass(ImplementationDependsOn::meta, parent, "ImplementationDependsOn");

		::Uml::SetClass(ImplementationRequirement::meta, parent, "ImplementationRequirement");
		::Uml::SetAttribute(ImplementationRequirement::meta_ResourceUsageKind, ImplementationRequirement::meta, "ResourceUsageKind");
		::Uml::SetAttribute(ImplementationRequirement::meta_resourcePort, ImplementationRequirement::meta, "resourcePort");
		::Uml::SetAttribute(ImplementationRequirement::meta_componentPort, ImplementationRequirement::meta, "componentPort");

		::Uml::SetClass(Implements::meta, parent, "Implements");

		::Uml::SetClass(InEventPort::meta, parent, "InEventPort");

		::Uml::SetClass(InParameter::meta, parent, "InParameter");

		::Uml::SetClass(InfoProperty::meta, parent, "InfoProperty");

		::Uml::SetClass(Inheritable::meta, parent, "Inheritable");

		::Uml::SetClass(Inherits::meta, parent, "Inherits");

		::Uml::SetClass(InitiatorRoleRef::meta, parent, "InitiatorRoleRef");

		::Uml::SetClass(InoutParameter::meta, parent, "InoutParameter");

		::Uml::SetClass(Input::meta, parent, "Input");

		::Uml::SetClass(InputAction::meta, parent, "InputAction");

		::Uml::SetClass(InputEffect::meta, parent, "InputEffect");

		::Uml::SetClass(InstanceMapping::meta, parent, "InstanceMapping");

		::Uml::SetClass(Interconnect::meta, parent, "Interconnect");
		::Uml::SetAttribute(Interconnect::meta_label, Interconnect::meta, "label");

		::Uml::SetClass(InterconnectConnection::meta, parent, "InterconnectConnection");

		::Uml::SetClass(InterfaceClassificationConn::meta, parent, "InterfaceClassificationConn");

		::Uml::SetClass(InterfaceDefinitions::meta, parent, "InterfaceDefinitions");
		::Uml::SetAttribute(InterfaceDefinitions::meta_name, InterfaceDefinitions::meta, "name");

		::Uml::SetClass(InvokePortBase::meta, parent, "InvokePortBase");

		::Uml::SetClass(Jitter::meta, parent, "Jitter");

		::Uml::SetClass(Label::meta, parent, "Label");

		::Uml::SetClass(LabelConnection::meta, parent, "LabelConnection");

		::Uml::SetClass(Lane::meta, parent, "Lane");
		::Uml::SetAttribute(Lane::meta_lane_priority, Lane::meta, "lane_priority");
		::Uml::SetAttribute(Lane::meta_static_threads, Lane::meta, "static_threads");
		::Uml::SetAttribute(Lane::meta_dynamic_threads, Lane::meta, "dynamic_threads");

		::Uml::SetClass(LanePerThreadPool::meta, parent, "LanePerThreadPool");

		::Uml::SetClass(Latency::meta, parent, "Latency");

		::Uml::SetClass(LongInteger::meta, parent, "LongInteger");

		::Uml::SetClass(LookupKey::meta, parent, "LookupKey");

		::Uml::SetClass(LookupOperation::meta, parent, "LookupOperation");

		::Uml::SetClass(LoopState::meta, parent, "LoopState");
		::Uml::SetAttribute(LoopState::meta_LoopingCondition, LoopState::meta, "LoopingCondition");

		::Uml::SetClass(LoopTransition::meta, parent, "LoopTransition");

		::Uml::SetClass(MPC::meta, parent, "MPC");

		::Uml::SetClass(MakeMemberPrivate::meta, parent, "MakeMemberPrivate");

		::Uml::SetClass(Manageable::meta, parent, "Manageable");

		::Uml::SetClass(ManagesComponent::meta, parent, "ManagesComponent");

		::Uml::SetClass(Maximum::meta, parent, "Maximum");

		::Uml::SetClass(Member::meta, parent, "Member");

		::Uml::SetClass(MemberType::meta, parent, "MemberType");

		::Uml::SetClass(MetricConnection::meta, parent, "MetricConnection");

		::Uml::SetClass(MetricsBase::meta, parent, "MetricsBase");
		::Uml::SetAttribute(MetricsBase::meta_rate, MetricsBase::meta, "rate");
		::Uml::SetAttribute(MetricsBase::meta_resolution, MetricsBase::meta, "resolution");
		::Uml::SetAttribute(MetricsBase::meta_priority, MetricsBase::meta, "priority");
		::Uml::SetAttribute(MetricsBase::meta_iterations, MetricsBase::meta, "iterations");
		::Uml::SetAttribute(MetricsBase::meta_warmup, MetricsBase::meta, "warmup");
		::Uml::SetAttribute(MetricsBase::meta_fileName, MetricsBase::meta, "fileName");

		::Uml::SetClass(MgaObject::meta, parent, "MgaObject");
		::Uml::SetAttribute(MgaObject::meta_position, MgaObject::meta, "position");
		::Uml::SetAttribute(MgaObject::meta_name, MgaObject::meta, "name");

		::Uml::SetClass(Minimum::meta, parent, "Minimum");

		::Uml::SetClass(MonitorableGroupAssociation::meta, parent, "MonitorableGroupAssociation");

		::Uml::SetClass(MonolithDeployRequirement::meta, parent, "MonolithDeployRequirement");

		::Uml::SetClass(MonolithExecParameter::meta, parent, "MonolithExecParameter");

		::Uml::SetClass(MonolithicImplementation::meta, parent, "MonolithicImplementation");
		::Uml::SetAttribute(MonolithicImplementation::meta_defaultVersion, MonolithicImplementation::meta, "defaultVersion");

		::Uml::SetClass(MonolithicImplementationBase::meta, parent, "MonolithicImplementationBase");

		::Uml::SetClass(MonolithprimaryArtifact::meta, parent, "MonolithprimaryArtifact");

		::Uml::SetClass(MultiInput::meta, parent, "MultiInput");

		::Uml::SetClass(MultiInputAction::meta, parent, "MultiInputAction");

		::Uml::SetClass(MultiInputBase::meta, parent, "MultiInputBase");

		::Uml::SetClass(MultiOutputBase::meta, parent, "MultiOutputBase");

		::Uml::SetClass(MultipleServiceRequests::meta, parent, "MultipleServiceRequests");
		::Uml::SetAttribute(MultipleServiceRequests::meta_buffer_service_requests, MultipleServiceRequests::meta, "buffer_service_requests");
		::Uml::SetAttribute(MultipleServiceRequests::meta_maximum_simultaneous_service_level, MultipleServiceRequests::meta, "maximum_simultaneous_service_level");
		::Uml::SetAttribute(MultipleServiceRequests::meta_simultaneous_service_execution, MultipleServiceRequests::meta, "simultaneous_service_execution");
		::Uml::SetAttribute(MultipleServiceRequests::meta_minimum_simultaneous_service_level, MultipleServiceRequests::meta, "minimum_simultaneous_service_level");

		::Uml::SetClass(NamedType::meta, parent, "NamedType");

		::Uml::SetClass(NetQoS::meta, parent, "NetQoS");
		::Uml::SetAttribute(NetQoS::meta_fwdBW, NetQoS::meta, "fwdBW");
		::Uml::SetAttribute(NetQoS::meta_quality, NetQoS::meta, "quality");
		::Uml::SetAttribute(NetQoS::meta_revBW, NetQoS::meta, "revBW");
		::Uml::SetAttribute(NetQoS::meta_admissionPriority, NetQoS::meta, "admissionPriority");
		::Uml::SetAttribute(NetQoS::meta_custom, NetQoS::meta, "custom");
		::Uml::SetAttribute(NetQoS::meta_NetPriorityModel, NetQoS::meta, "NetPriorityModel");
		::Uml::SetAttribute(NetQoS::meta_rev_quality, NetQoS::meta, "rev_quality");

		::Uml::SetClass(NoInheritable::meta, parent, "NoInheritable");

		::Uml::SetClass(Node::meta, parent, "Node");
		::Uml::SetAttribute(Node::meta_operatingSystem, Node::meta, "operatingSystem");
		::Uml::SetAttribute(Node::meta_architecture, Node::meta, "architecture");
		::Uml::SetAttribute(Node::meta_label, Node::meta, "label");

		::Uml::SetClass(NodeReference::meta, parent, "NodeReference");

		::Uml::SetClass(Object::meta, parent, "Object");
		::Uml::SetAttribute(Object::meta_abstract, Object::meta, "abstract");
		::Uml::SetAttribute(Object::meta_local, Object::meta, "local");

		::Uml::SetClass(ObjectAccessConn::meta, parent, "ObjectAccessConn");

		::Uml::SetClass(ObjectByValue::meta, parent, "ObjectByValue");
		::Uml::SetAttribute(ObjectByValue::meta_abstract, ObjectByValue::meta, "abstract");

		::Uml::SetClass(OnAssemblyConn::meta, parent, "OnAssemblyConn");

		::Uml::SetClass(OnComponentConn::meta, parent, "OnComponentConn");

		::Uml::SetClass(OnInterfaceConn::meta, parent, "OnInterfaceConn");

		::Uml::SetClass(OnewayOperation::meta, parent, "OnewayOperation");

		::Uml::SetClass(OperationBase::meta, parent, "OperationBase");

		::Uml::SetClass(OperationClassificationConn::meta, parent, "OperationClassificationConn");

		::Uml::SetClass(OperationInvokeConn::meta, parent, "OperationInvokeConn");

		::Uml::SetClass(OperationRef::meta, parent, "OperationRef");

		::Uml::SetClass(OperationSet::meta, parent, "OperationSet");

		::Uml::SetClass(OutEventPort::meta, parent, "OutEventPort");
		::Uml::SetAttribute(OutEventPort::meta_single_destination, OutEventPort::meta, "single_destination");
		::Uml::SetAttribute(OutEventPort::meta_out_event_port_type, OutEventPort::meta, "out_event_port_type");

		::Uml::SetClass(OutParameter::meta, parent, "OutParameter");

		::Uml::SetClass(OutputAction::meta, parent, "OutputAction");

		::Uml::SetClass(Package::meta, parent, "Package");

		::Uml::SetClass(PackageConfBasePackage::meta, parent, "PackageConfBasePackage");

		::Uml::SetClass(PackageConfConfigProperty::meta, parent, "PackageConfConfigProperty");

		::Uml::SetClass(PackageConfReference::meta, parent, "PackageConfReference");

		::Uml::SetClass(PackageConfSelectRequirement::meta, parent, "PackageConfSelectRequirement");

		::Uml::SetClass(PackageConfSpecializedConfig::meta, parent, "PackageConfSpecializedConfig");

		::Uml::SetClass(PackageConfigProperty::meta, parent, "PackageConfigProperty");

		::Uml::SetClass(PackageConfiguration::meta, parent, "PackageConfiguration");
		::Uml::SetAttribute(PackageConfiguration::meta_label, PackageConfiguration::meta, "label");
		::Uml::SetAttribute(PackageConfiguration::meta_UUID, PackageConfiguration::meta, "UUID");

		::Uml::SetClass(PackageConfigurationContainer::meta, parent, "PackageConfigurationContainer");

		::Uml::SetClass(PackageConfigurationReference::meta, parent, "PackageConfigurationReference");

		::Uml::SetClass(PackageConfigurations::meta, parent, "PackageConfigurations");
		::Uml::SetAttribute(PackageConfigurations::meta_name, PackageConfigurations::meta, "name");

		::Uml::SetClass(PackageContainer::meta, parent, "PackageContainer");

		::Uml::SetClass(PackageInfoProperty::meta, parent, "PackageInfoProperty");

		::Uml::SetClass(PackageInterface::meta, parent, "PackageInterface");

		::Uml::SetClass(ParameterType::meta, parent, "ParameterType");

		::Uml::SetClass(Path::meta, parent, "Path");

		::Uml::SetClass(PathDiagrams::meta, parent, "PathDiagrams");
		::Uml::SetAttribute(PathDiagrams::meta_name, PathDiagrams::meta, "name");

		::Uml::SetClass(PathProperty::meta, parent, "PathProperty");

		::Uml::SetClass(PathRef::meta, parent, "PathRef");

		::Uml::SetClass(PathReference::meta, parent, "PathReference");

		::Uml::SetClass(Paths::meta, parent, "Paths");

		::Uml::SetClass(PeriodicBenchmarks::meta, parent, "PeriodicBenchmarks");
		::Uml::SetAttribute(PeriodicBenchmarks::meta_timeperiod, PeriodicBenchmarks::meta, "timeperiod");

		::Uml::SetClass(PeriodicEvent::meta, parent, "PeriodicEvent");
		::Uml::SetAttribute(PeriodicEvent::meta_Hertz, PeriodicEvent::meta, "Hertz");
		::Uml::SetAttribute(PeriodicEvent::meta_Distribution, PeriodicEvent::meta, "Distribution");

		::Uml::SetClass(Policy::meta, parent, "Policy");

		::Uml::SetClass(PolicyPerThreadPool::meta, parent, "PolicyPerThreadPool");

		::Uml::SetClass(PolicySet::meta, parent, "PolicySet");

		::Uml::SetClass(Port::meta, parent, "Port");

		::Uml::SetClass(PortQoS::meta, parent, "PortQoS");

		::Uml::SetClass(PortQoSCharacteristic::meta, parent, "PortQoSCharacteristic");

		::Uml::SetClass(PortRule::meta, parent, "PortRule");

		::Uml::SetClass(PortRuleRef::meta, parent, "PortRuleRef");

		::Uml::SetClass(PortSecurityQoS::meta, parent, "PortSecurityQoS");

		::Uml::SetClass(PredefinedType::meta, parent, "PredefinedType");

		::Uml::SetClass(PredefinedTypes::meta, parent, "PredefinedTypes");
		::Uml::SetAttribute(PredefinedTypes::meta_name, PredefinedTypes::meta, "name");

		::Uml::SetClass(Prefixable::meta, parent, "Prefixable");
		::Uml::SetAttribute(Prefixable::meta_PrefixTag, Prefixable::meta, "PrefixTag");

		::Uml::SetClass(PriorityBands::meta, parent, "PriorityBands");
		::Uml::SetAttribute(PriorityBands::meta_high, PriorityBands::meta, "high");
		::Uml::SetAttribute(PriorityBands::meta_low, PriorityBands::meta, "low");

		::Uml::SetClass(PriorityModelPolicy::meta, parent, "PriorityModelPolicy");
		::Uml::SetAttribute(PriorityModelPolicy::meta_priority_value, PriorityModelPolicy::meta, "priority_value");
		::Uml::SetAttribute(PriorityModelPolicy::meta_priority_model, PriorityModelPolicy::meta, "priority_model");

		::Uml::SetClass(PrivateFlag::meta, parent, "PrivateFlag");

		::Uml::SetClass(Project::meta, parent, "Project");

		::Uml::SetClass(Property::meta, parent, "Property");
		::Uml::SetAttribute(Property::meta_DataValue, Property::meta, "DataValue");

		::Uml::SetClass(Provideable::meta, parent, "Provideable");

		::Uml::SetClass(ProvidedRequestPort::meta, parent, "ProvidedRequestPort");

		::Uml::SetClass(PublishConnector::meta, parent, "PublishConnector");

		::Uml::SetClass(QoSCharRef::meta, parent, "QoSCharRef");

		::Uml::SetClass(QoSCharacteristicBase::meta, parent, "QoSCharacteristicBase");

		::Uml::SetClass(QoSConnector::meta, parent, "QoSConnector");

		::Uml::SetClass(QoSReq::meta, parent, "QoSReq");

		::Uml::SetClass(QueryAction::meta, parent, "QueryAction");

		::Uml::SetClass(QueryInput::meta, parent, "QueryInput");

		::Uml::SetClass(QueryInputAction::meta, parent, "QueryInputAction");

		::Uml::SetClass(QueryInputBase::meta, parent, "QueryInputBase");

		::Uml::SetClass(RBAC::meta, parent, "RBAC");

		::Uml::SetClass(RTRequirements::meta, parent, "RTRequirements");

		::Uml::SetClass(ReadonlyAttribute::meta, parent, "ReadonlyAttribute");

		::Uml::SetClass(RealNumber::meta, parent, "RealNumber");

		::Uml::SetClass(RealTimeConfiguration::meta, parent, "RealTimeConfiguration");

		::Uml::SetClass(Realm::meta, parent, "Realm");

		::Uml::SetClass(ReceiverConnection::meta, parent, "ReceiverConnection");

		::Uml::SetClass(RecepInvoke::meta, parent, "RecepInvoke");

		::Uml::SetClass(ReceptacleDelegate::meta, parent, "ReceptacleDelegate");

		::Uml::SetClass(RepicaGroupConfiguration::meta, parent, "RepicaGroupConfiguration");
		::Uml::SetAttribute(RepicaGroupConfiguration::meta_ReplicationStyle, RepicaGroupConfiguration::meta, "ReplicationStyle");

		::Uml::SetClass(RequiredRequestPort::meta, parent, "RequiredRequestPort");
		::Uml::SetAttribute(RequiredRequestPort::meta_multiple_connections, RequiredRequestPort::meta, "multiple_connections");

		::Uml::SetClass(RequiredRights::meta, parent, "RequiredRights");
		::Uml::SetAttribute(RequiredRights::meta_combinator, RequiredRights::meta, "combinator");

		::Uml::SetClass(Requirement::meta, parent, "Requirement");

		::Uml::SetClass(RequirementBase::meta, parent, "RequirementBase");
		::Uml::SetAttribute(RequirementBase::meta_resourceType, RequirementBase::meta, "resourceType");

		::Uml::SetClass(RequirementSatisfier::meta, parent, "RequirementSatisfier");
		::Uml::SetAttribute(RequirementSatisfier::meta_resourceType, RequirementSatisfier::meta, "resourceType");

		::Uml::SetClass(Resource::meta, parent, "Resource");

		::Uml::SetClass(ResourceActionBase::meta, parent, "ResourceActionBase");

		::Uml::SetClass(ReturnType::meta, parent, "ReturnType");

		::Uml::SetClass(Rights::meta, parent, "Rights");
		::Uml::SetAttribute(Rights::meta_get, Rights::meta, "get");
		::Uml::SetAttribute(Rights::meta_family, Rights::meta, "family");
		::Uml::SetAttribute(Rights::meta_set, Rights::meta, "set");
		::Uml::SetAttribute(Rights::meta_use, Rights::meta, "use");
		::Uml::SetAttribute(Rights::meta_manage, Rights::meta, "manage");

		::Uml::SetClass(RightsAssignmentConn::meta, parent, "RightsAssignmentConn");

		::Uml::SetClass(Role::meta, parent, "Role");

		::Uml::SetClass(RoleAssignmentConn::meta, parent, "RoleAssignmentConn");

		::Uml::SetClass(RootFolder::meta, parent, "RootFolder");
		::Uml::SetAttribute(RootFolder::meta_name, RootFolder::meta, "name");

		::Uml::SetClass(RootRiskAssociation::meta, parent, "RootRiskAssociation");

		::Uml::SetClass(RootRiskGroup::meta, parent, "RootRiskGroup");

		::Uml::SetClass(RuleBase::meta, parent, "RuleBase");
		::Uml::SetAttribute(RuleBase::meta_allow, RuleBase::meta, "allow");

		::Uml::SetClass(SRGBase::meta, parent, "SRGBase");

		::Uml::SetClass(SRGRiskAssociation::meta, parent, "SRGRiskAssociation");

		::Uml::SetClass(SatisfierProperty::meta, parent, "SatisfierProperty");
		::Uml::SetAttribute(SatisfierProperty::meta_DataValue, SatisfierProperty::meta, "DataValue");
		::Uml::SetAttribute(SatisfierProperty::meta_dynamic, SatisfierProperty::meta, "dynamic");
		::Uml::SetAttribute(SatisfierProperty::meta_SatisfierPropertyKind, SatisfierProperty::meta, "SatisfierPropertyKind");

		::Uml::SetClass(SecuredPathConn::meta, parent, "SecuredPathConn");

		::Uml::SetClass(Security::meta, parent, "Security");

		::Uml::SetClass(SecurityDomain::meta, parent, "SecurityDomain");

		::Uml::SetClass(SecurityQoS::meta, parent, "SecurityQoS");
		::Uml::SetAttribute(SecurityQoS::meta_IntegrityLevel, SecurityQoS::meta, "IntegrityLevel");
		::Uml::SetAttribute(SecurityQoS::meta_Authentication, SecurityQoS::meta, "Authentication");
		::Uml::SetAttribute(SecurityQoS::meta_AuditLevel, SecurityQoS::meta, "AuditLevel");
		::Uml::SetAttribute(SecurityQoS::meta_ConfidentialityLevel, SecurityQoS::meta, "ConfidentialityLevel");
		::Uml::SetAttribute(SecurityQoS::meta_SecurityLevel, SecurityQoS::meta, "SecurityLevel");
		::Uml::SetAttribute(SecurityQoS::meta_NonRepudiation, SecurityQoS::meta, "NonRepudiation");
		::Uml::SetAttribute(SecurityQoS::meta_SecurityPolicy, SecurityQoS::meta, "SecurityPolicy");
		::Uml::SetAttribute(SecurityQoS::meta_DelegationPolicy, SecurityQoS::meta, "DelegationPolicy");

		::Uml::SetClass(SenderConnection::meta, parent, "SenderConnection");

		::Uml::SetClass(ServantProject::meta, parent, "ServantProject");

		::Uml::SetClass(ServiceConsumer::meta, parent, "ServiceConsumer");
		::Uml::SetAttribute(ServiceConsumer::meta_prioritize_service_invocations, ServiceConsumer::meta, "prioritize_service_invocations");

		::Uml::SetClass(ServiceLevels::meta, parent, "ServiceLevels");
		::Uml::SetAttribute(ServiceLevels::meta_varying_service_levels, ServiceLevels::meta, "varying_service_levels");

		::Uml::SetClass(ServiceProvider::meta, parent, "ServiceProvider");
		::Uml::SetAttribute(ServiceProvider::meta_fixed_prioirty_service_execution, ServiceProvider::meta, "fixed_prioirty_service_execution");

		::Uml::SetClass(SetException::meta, parent, "SetException");

		::Uml::SetClass(SharedComponentReference::meta, parent, "SharedComponentReference");

		::Uml::SetClass(SharedResource::meta, parent, "SharedResource");

		::Uml::SetClass(SharedResourceReference::meta, parent, "SharedResourceReference");

		::Uml::SetClass(SharedRiskGroup::meta, parent, "SharedRiskGroup");

		::Uml::SetClass(Shares::meta, parent, "Shares");

		::Uml::SetClass(ShortInteger::meta, parent, "ShortInteger");

		::Uml::SetClass(SingleInputBase::meta, parent, "SingleInputBase");

		::Uml::SetClass(SingleOutputBase::meta, parent, "SingleOutputBase");

		::Uml::SetClass(SrcEdge::meta, parent, "SrcEdge");

		::Uml::SetClass(State::meta, parent, "State");

		::Uml::SetClass(StateBase::meta, parent, "StateBase");

		::Uml::SetClass(String::meta, parent, "String");

		::Uml::SetClass(StubProject::meta, parent, "StubProject");

		::Uml::SetClass(Subject::meta, parent, "Subject");
		::Uml::SetAttribute(Subject::meta_principal, Subject::meta, "principal");

		::Uml::SetClass(SupplierBehavior::meta, parent, "SupplierBehavior");
		::Uml::SetAttribute(SupplierBehavior::meta_ECProxySupplierLock, SupplierBehavior::meta, "ECProxySupplierLock");
		::Uml::SetAttribute(SupplierBehavior::meta_ECSupplierControl, SupplierBehavior::meta, "ECSupplierControl");
		::Uml::SetAttribute(SupplierBehavior::meta_ECSupplierControlPeriod, SupplierBehavior::meta, "ECSupplierControlPeriod");
		::Uml::SetAttribute(SupplierBehavior::meta_ECProxyPushSupplierCollectionFlag, SupplierBehavior::meta, "ECProxyPushSupplierCollectionFlag");
		::Uml::SetAttribute(SupplierBehavior::meta_ECProxyPushSupplierCollectionIterator, SupplierBehavior::meta, "ECProxyPushSupplierCollectionIterator");
		::Uml::SetAttribute(SupplierBehavior::meta_ECProxyPushSupplierCollectionSynch, SupplierBehavior::meta, "ECProxyPushSupplierCollectionSynch");
		::Uml::SetAttribute(SupplierBehavior::meta_ECSupplierFiltering, SupplierBehavior::meta, "ECSupplierFiltering");

		::Uml::SetClass(Supports::meta, parent, "Supports");

		::Uml::SetClass(SupportsDelegate::meta, parent, "SupportsDelegate");

		::Uml::SetClass(SupportsInterfaces::meta, parent, "SupportsInterfaces");

		::Uml::SetClass(SwitchedAggregate::meta, parent, "SwitchedAggregate");

		::Uml::SetClass(Taggable::meta, parent, "Taggable");
		::Uml::SetAttribute(Taggable::meta_VersionTag, Taggable::meta, "VersionTag");
		::Uml::SetAttribute(Taggable::meta_SpecifyIdTag, Taggable::meta, "SpecifyIdTag");

		::Uml::SetClass(TargetObjectRef::meta, parent, "TargetObjectRef");

		::Uml::SetClass(Targets::meta, parent, "Targets");
		::Uml::SetAttribute(Targets::meta_name, Targets::meta, "name");

		::Uml::SetClass(Task::meta, parent, "Task");

		::Uml::SetClass(TaskSet::meta, parent, "TaskSet");
		::Uml::SetAttribute(TaskSet::meta_priority, TaskSet::meta, "priority");
		::Uml::SetAttribute(TaskSet::meta_rate, TaskSet::meta, "rate");

		::Uml::SetClass(Terminal::meta, parent, "Terminal");

		::Uml::SetClass(TerminalEffect::meta, parent, "TerminalEffect");

		::Uml::SetClass(TerminalTransition::meta, parent, "TerminalTransition");

		::Uml::SetClass(ThreadPool::meta, parent, "ThreadPool");
		::Uml::SetAttribute(ThreadPool::meta_allow_request_buffering, ThreadPool::meta, "allow_request_buffering");
		::Uml::SetAttribute(ThreadPool::meta_max_buffered_requests, ThreadPool::meta, "max_buffered_requests");
		::Uml::SetAttribute(ThreadPool::meta_max_buffer_size, ThreadPool::meta, "max_buffer_size");
		::Uml::SetAttribute(ThreadPool::meta_allow_borrowing, ThreadPool::meta, "allow_borrowing");
		::Uml::SetAttribute(ThreadPool::meta_stacksize, ThreadPool::meta, "stacksize");

		::Uml::SetClass(Throughput::meta, parent, "Throughput");

		::Uml::SetClass(TimeProbe::meta, parent, "TimeProbe");

		::Uml::SetClass(TimerConnection::meta, parent, "TimerConnection");

		::Uml::SetClass(TimerEventSinkConn::meta, parent, "TimerEventSinkConn");

		::Uml::SetClass(TopLevelBehavior::meta, parent, "TopLevelBehavior");

		::Uml::SetClass(TopLevelPackage::meta, parent, "TopLevelPackage");

		::Uml::SetClass(TopLevelPackageContainer::meta, parent, "TopLevelPackageContainer");

		::Uml::SetClass(TopLevelPackages::meta, parent, "TopLevelPackages");
		::Uml::SetAttribute(TopLevelPackages::meta_name, TopLevelPackages::meta, "name");

		::Uml::SetClass(Transition::meta, parent, "Transition");

		::Uml::SetClass(TriggerBenchmarks::meta, parent, "TriggerBenchmarks");

		::Uml::SetClass(TwowayOperation::meta, parent, "TwowayOperation");

		::Uml::SetClass(TypeEncoding::meta, parent, "TypeEncoding");

		::Uml::SetClass(TypeKind::meta, parent, "TypeKind");

		::Uml::SetClass(User::meta, parent, "User");

		::Uml::SetClass(ValueObject::meta, parent, "ValueObject");

		::Uml::SetClass(Variable::meta, parent, "Variable");
		::Uml::SetAttribute(Variable::meta_InitialValue, Variable::meta, "InitialValue");

		::Uml::SetClass(WhileState::meta, parent, "WhileState");

		::Uml::SetClass(WorkLoadOperationConnection::meta, parent, "WorkLoadOperationConnection");

		::Uml::SetClass(Worker::meta, parent, "Worker");
		::Uml::SetAttribute(Worker::meta_Abstract, Worker::meta, "Abstract");

		::Uml::SetClass(WorkerFile::meta, parent, "WorkerFile");
		::Uml::SetAttribute(WorkerFile::meta_Location, WorkerFile::meta, "Location");

		::Uml::SetClass(WorkerLibraries::meta, parent, "WorkerLibraries");
		::Uml::SetAttribute(WorkerLibraries::meta_name, WorkerLibraries::meta, "name");

		::Uml::SetClass(WorkerLibrary::meta, parent, "WorkerLibrary");
		::Uml::SetAttribute(WorkerLibrary::meta_Location, WorkerLibrary::meta, "Location");

		::Uml::SetClass(WorkerPackage::meta, parent, "WorkerPackage");

		::Uml::SetClass(WorkerPackageBase::meta, parent, "WorkerPackageBase");

		::Uml::SetClass(WorkerType::meta, parent, "WorkerType");

		::Uml::SetClass(WorkloadCharacteristics::meta, parent, "WorkloadCharacteristics");

		::Uml::SetClass(Workspaces::meta, parent, "Workspaces");

		::Uml::SetClass(deliverTo::meta, parent, "deliverTo");

		::Uml::SetClass(emit::meta, parent, "emit");

		::Uml::SetClass(eventServiceConfiguration::meta, parent, "eventServiceConfiguration");
		::Uml::SetAttribute(eventServiceConfiguration::meta_type, eventServiceConfiguration::meta, "type");
		::Uml::SetAttribute(eventServiceConfiguration::meta_svc_cfg_file, eventServiceConfiguration::meta, "svc_cfg_file");
		::Uml::SetAttribute(eventServiceConfiguration::meta_node, eventServiceConfiguration::meta, "node");
		::Uml::SetAttribute(eventServiceConfiguration::meta_configuration_id, eventServiceConfiguration::meta, "configuration_id");

		::Uml::SetClass(invoke::meta, parent, "invoke");

		::Uml::SetClass(package::meta, parent, "package");

		::Uml::SetClass(publish::meta, parent, "publish");

	}

	void InitMetaLinks(const ::Uml::Diagram &parent) {
		// classes
		::Uml::SetParentRole(Action::meta_Worker_parent, Action::meta, Worker::meta, "", "");

		::Uml::SetAssocRole(ActionBase::meta_dstEffect, ActionBase::meta, StateBase::meta, "srcEffect");
		Effect::meta_dstEffect_end_ = StateBase::meta_srcEffect_rev = ActionBase::meta_dstEffect;
		::Uml::SetAssocRole(ActionBase::meta_srcTransition, ActionBase::meta, State::meta, "dstTransition");
		Transition::meta_srcTransition_end_ = State::meta_dstTransition_rev = ActionBase::meta_srcTransition;
		::Uml::SetAssocRole(ActionBase::meta_srcBranchTransition, ActionBase::meta, BranchState::meta, "dstBranchTransition");
		BranchTransition::meta_srcBranchTransition_end_ = BranchState::meta_dstBranchTransition_rev = ActionBase::meta_srcBranchTransition;
		::Uml::SetAssocRole(ActionBase::meta_srcLoopTransition, ActionBase::meta, LoopState::meta, "dstLoopTransition");
		LoopTransition::meta_srcLoopTransition_end_ = LoopState::meta_dstLoopTransition_rev = ActionBase::meta_srcLoopTransition;
		::Uml::SetChildRole(ActionBase::meta_Property_children, ActionBase::meta, Property::meta, "", "");
		::Uml::SetParentRole(ActionBase::meta_BehaviorModel_parent, ActionBase::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(Aggregate::meta_Member_children, Aggregate::meta, Member::meta, "", "");

		::Uml::SetAssocRole(Alias::meta_ref, Alias::meta, MemberType::meta, "referedbyAlias");

		::Uml::SetParentRole(ApplicationTask::meta_TopLevelBehavior_parent, ApplicationTask::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDependsOn_children, ArtifactContainer::meta, ArtifactDependsOn::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ImplementationArtifactReference_children, ArtifactContainer::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDeployRequirement_children, ArtifactContainer::meta, ArtifactDeployRequirement::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_Requirement_children, ArtifactContainer::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactExecParameter_children, ArtifactContainer::meta, ArtifactExecParameter::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactInfoProperty_children, ArtifactContainer::meta, ArtifactInfoProperty::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_Property_children, ArtifactContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ImplementationArtifact_children, ArtifactContainer::meta, ImplementationArtifact::meta, "", "");
		::Uml::SetChildRole(ArtifactContainer::meta_ArtifactDependency_children, ArtifactContainer::meta, ArtifactDependency::meta, "", "");
		::Uml::SetParentRole(ArtifactContainer::meta_ImplementationArtifacts_parent, ArtifactContainer::meta, ImplementationArtifacts::meta, "", "");

		::Uml::SetParentRole(ArtifactDependency::meta_ArtifactContainer_parent, ArtifactDependency::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactDependsOn::meta_ArtifactContainer_parent, ArtifactDependsOn::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactDeployRequirement::meta_ArtifactContainer_parent, ArtifactDeployRequirement::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactExecParameter::meta_ArtifactContainer_parent, ArtifactExecParameter::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(ArtifactInfoProperty::meta_ArtifactContainer_parent, ArtifactInfoProperty::meta, ArtifactContainer::meta, "", "");

		::Uml::SetParentRole(AssemblyAccessConn::meta_Policy_parent, AssemblyAccessConn::meta, Policy::meta, "", "");

		::Uml::SetParentRole(AssemblyConfigProperty::meta_ComponentAssembly_parent, AssemblyConfigProperty::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AssemblyDeployRequirement::meta_ComponentAssembly_parent, AssemblyDeployRequirement::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(AssemblyRule::meta_referedbyAssemblyRuleRef, AssemblyRule::meta, AssemblyRuleRef::meta, "ref");
		::Uml::SetAssocRole(AssemblyRule::meta_srcAssemblyAccessConn, AssemblyRule::meta, InitiatorRoleRef::meta, "dstAssemblyAccessConn");
		AssemblyAccessConn::meta_srcAssemblyAccessConn_end_ = InitiatorRoleRef::meta_dstAssemblyAccessConn_rev = AssemblyRule::meta_srcAssemblyAccessConn;
		::Uml::SetAssocRole(AssemblyRule::meta_dstOnAssemblyConn, AssemblyRule::meta, ComponentAssemblyReference::meta, "srcOnAssemblyConn");
		OnAssemblyConn::meta_dstOnAssemblyConn_end_ = ComponentAssemblyReference::meta_srcOnAssemblyConn_rev = AssemblyRule::meta_dstOnAssemblyConn;
		::Uml::SetAssocRole(AssemblyRule::meta_dstSecuredPathConn, AssemblyRule::meta, PathRef::meta, "srcSecuredPathConn");
		SecuredPathConn::meta_dstSecuredPathConn_end_ = PathRef::meta_srcSecuredPathConn_rev = AssemblyRule::meta_dstSecuredPathConn;

		::Uml::SetAssocRole(AssemblyRuleRef::meta_ref, AssemblyRuleRef::meta, AssemblyRule::meta, "referedbyAssemblyRuleRef");
		::Uml::SetParentRole(AssemblyRuleRef::meta_ComponentAssemblySecurityQoS_parent, AssemblyRuleRef::meta, ComponentAssemblySecurityQoS::meta, "", "");

		::Uml::SetParentRole(AssemblyselectRequirement::meta_ComponentAssembly_parent, AssemblyselectRequirement::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(Attribute::meta_SetException_children, Attribute::meta, SetException::meta, "", "");

		::Uml::SetParentRole(AttributeDelegate::meta_ComponentAssembly_parent, AttributeDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AttributeManipulateConn::meta_Policy_parent, AttributeManipulateConn::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeDelegate, AttributeMapping::meta, ReadonlyAttribute::meta, "srcAttributeDelegate");
		AttributeDelegate::meta_dstAttributeDelegate_end_ = ReadonlyAttribute::meta_srcAttributeDelegate_rev = AttributeMapping::meta_dstAttributeDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeMappingValue, AttributeMapping::meta, Property::meta, "srcAttributeMappingValue");
		AttributeMappingValue::meta_dstAttributeMappingValue_end_ = Property::meta_srcAttributeMappingValue_rev = AttributeMapping::meta_dstAttributeMappingValue;
		::Uml::SetAssocRole(AttributeMapping::meta_dstAttributeMappingDelegate, AttributeMapping::meta, AttributeMapping::meta, "srcAttributeMappingDelegate");
		AttributeMappingDelegate::meta_dstAttributeMappingDelegate_end_ = AttributeMapping::meta_srcAttributeMappingDelegate_rev = AttributeMapping::meta_dstAttributeMappingDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_srcAttributeMappingDelegate, AttributeMapping::meta, AttributeMapping::meta, "dstAttributeMappingDelegate");
		AttributeMappingDelegate::meta_srcAttributeMappingDelegate_end_ = AttributeMapping::meta_dstAttributeMappingDelegate_rev = AttributeMapping::meta_srcAttributeMappingDelegate;
		::Uml::SetAssocRole(AttributeMapping::meta_ref, AttributeMapping::meta, ReadonlyAttribute::meta, "referedbyAttributeMapping");
		::Uml::SetParentRole(AttributeMapping::meta_ComponentAssembly_parent, AttributeMapping::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AttributeMappingDelegate::meta_ComponentAssembly_parent, AttributeMappingDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(AttributeMappingValue::meta_ComponentAssembly_parent, AttributeMappingValue::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(AttributeMember::meta_ref, AttributeMember::meta, MemberType::meta, "referedbyAttributeMember");
		::Uml::SetParentRole(AttributeMember::meta_ReadonlyAttribute_parent, AttributeMember::meta, ReadonlyAttribute::meta, "", "");

		::Uml::SetAssocRole(AttributeRef::meta_ref, AttributeRef::meta, ReadonlyAttribute::meta, "referedbyAttributeRef");
		::Uml::SetAssocRole(AttributeRef::meta_srcAttributeManipulateConn, AttributeRef::meta, ComponentRule::meta, "dstAttributeManipulateConn");
		AttributeManipulateConn::meta_srcAttributeManipulateConn_end_ = ComponentRule::meta_dstAttributeManipulateConn_rev = AttributeRef::meta_srcAttributeManipulateConn;
		::Uml::SetParentRole(AttributeRef::meta_Policy_parent, AttributeRef::meta, Policy::meta, "", "");

		::Uml::SetParentRole(AttributeValue::meta_ComponentAssembly_parent, AttributeValue::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(BehaviorInputAction::meta_dstInputEffect, BehaviorInputAction::meta, StateBase::meta, "srcInputEffect");
		InputEffect::meta_dstInputEffect_end_ = StateBase::meta_srcInputEffect_rev = BehaviorInputAction::meta_dstInputEffect;
		::Uml::SetAssocRole(BehaviorInputAction::meta_srcFinish, BehaviorInputAction::meta, StateBase::meta, "dstFinish");
		Finish::meta_srcFinish_end_ = StateBase::meta_dstFinish_rev = BehaviorInputAction::meta_srcFinish;
		::Uml::SetChildRole(BehaviorInputAction::meta_Property_children, BehaviorInputAction::meta, Property::meta, "", "");
		::Uml::SetParentRole(BehaviorInputAction::meta_BehaviorModel_parent, BehaviorInputAction::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(BehaviorModel::meta_Variable_children, BehaviorModel::meta, Variable::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_TerminalTransition_children, BehaviorModel::meta, TerminalTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Terminal_children, BehaviorModel::meta, Terminal::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_TerminalEffect_children, BehaviorModel::meta, TerminalEffect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_StateBase_children, BehaviorModel::meta, StateBase::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_BranchTransition_children, BehaviorModel::meta, BranchTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Transition_children, BehaviorModel::meta, Transition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_LoopTransition_children, BehaviorModel::meta, LoopTransition::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Finish_children, BehaviorModel::meta, Finish::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_BehaviorInputAction_children, BehaviorModel::meta, BehaviorInputAction::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_ActionBase_children, BehaviorModel::meta, ActionBase::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_InputEffect_children, BehaviorModel::meta, InputEffect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_Effect_children, BehaviorModel::meta, Effect::meta, "", "");
		::Uml::SetChildRole(BehaviorModel::meta_QueryInputAction_children, BehaviorModel::meta, QueryInputAction::meta, "", "");

		::Uml::SetChildRole(BenchmarkAnalysis::meta_OperationBase_children, BenchmarkAnalysis::meta, OperationBase::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimerConnection_children, BenchmarkAnalysis::meta, TimerConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_MetricConnection_children, BenchmarkAnalysis::meta, MetricConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_DataAnalysisBase_children, BenchmarkAnalysis::meta, DataAnalysisBase::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_MetricsBase_children, BenchmarkAnalysis::meta, MetricsBase::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimeProbe_children, BenchmarkAnalysis::meta, TimeProbe::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_OperationRef_children, BenchmarkAnalysis::meta, OperationRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_EventRef_children, BenchmarkAnalysis::meta, EventRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_Event_children, BenchmarkAnalysis::meta, Event::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TimerEventSinkConn_children, BenchmarkAnalysis::meta, TimerEventSinkConn::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_TaskSet_children, BenchmarkAnalysis::meta, TaskSet::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_Task_children, BenchmarkAnalysis::meta, Task::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_WorkloadCharacteristics_children, BenchmarkAnalysis::meta, WorkloadCharacteristics::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_ComponentOperation_children, BenchmarkAnalysis::meta, ComponentOperation::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_CompRef_children, BenchmarkAnalysis::meta, CompRef::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_WorkLoadOperationConnection_children, BenchmarkAnalysis::meta, WorkLoadOperationConnection::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_BenchmarkType_children, BenchmarkAnalysis::meta, BenchmarkType::meta, "", "");
		::Uml::SetChildRole(BenchmarkAnalysis::meta_BenchmarkCharacteristics_children, BenchmarkAnalysis::meta, BenchmarkCharacteristics::meta, "", "");
		::Uml::SetParentRole(BenchmarkAnalysis::meta_ComponentAnalyses_parent, BenchmarkAnalysis::meta, ComponentAnalyses::meta, "", "");

		::Uml::SetParentRole(BenchmarkCharacteristics::meta_BenchmarkAnalysis_parent, BenchmarkCharacteristics::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(BenchmarkType::meta_dstBenchmarkCharacteristics, BenchmarkType::meta, MetricsBase::meta, "srcBenchmarkCharacteristics");
		BenchmarkCharacteristics::meta_dstBenchmarkCharacteristics_end_ = MetricsBase::meta_srcBenchmarkCharacteristics_rev = BenchmarkType::meta_dstBenchmarkCharacteristics;
		::Uml::SetParentRole(BenchmarkType::meta_BenchmarkAnalysis_parent, BenchmarkType::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Boxed::meta_ref, Boxed::meta, MemberType::meta, "referedbyBoxed");

		::Uml::SetAssocRole(BranchState::meta_dstBranchTransition, BranchState::meta, ActionBase::meta, "srcBranchTransition");
		BranchTransition::meta_dstBranchTransition_end_ = ActionBase::meta_srcBranchTransition_rev = BranchState::meta_dstBranchTransition;

		::Uml::SetParentRole(BranchTransition::meta_BehaviorModel_parent, BranchTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(Bridge::meta_srcBridgeConnection, Bridge::meta, Interconnect::meta, "dstBridgeConnection");
		BridgeConnection::meta_srcBridgeConnection_end_ = Interconnect::meta_dstBridgeConnection_rev = Bridge::meta_srcBridgeConnection;
		::Uml::SetChildRole(Bridge::meta_Resource_children, Bridge::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Bridge::meta_Domain_parent, Bridge::meta, Domain::meta, "", "");

		::Uml::SetParentRole(BridgeConnection::meta_Domain_parent, BridgeConnection::meta, Domain::meta, "", "");

		::Uml::SetChildRole(CIAOEvents::meta_SenderConnection_children, CIAOEvents::meta, SenderConnection::meta, "", "");
		::Uml::SetChildRole(CIAOEvents::meta_eventServiceConfiguration_children, CIAOEvents::meta, eventServiceConfiguration::meta, "", "");
		::Uml::SetChildRole(CIAOEvents::meta_ReceiverConnection_children, CIAOEvents::meta, ReceiverConnection::meta, "", "");
		::Uml::SetChildRole(CIAOEvents::meta_EventChannelCommunicationPoint_children, CIAOEvents::meta, EventChannelCommunicationPoint::meta, "", "");
		::Uml::SetParentRole(CIAOEvents::meta_RootFolder_parent, CIAOEvents::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(Capability::meta_srcImplementationCapability, Capability::meta, ComponentImplementation::meta, "dstImplementationCapability");
		ImplementationCapability::meta_srcImplementationCapability_end_ = ComponentImplementation::meta_dstImplementationCapability_rev = Capability::meta_srcImplementationCapability;
		::Uml::SetParentRole(Capability::meta_ComponentImplementationContainer_parent, Capability::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(Collection::meta_ref, Collection::meta, MemberType::meta, "referedbyCollection");

		::Uml::SetAssocRole(CollocationGroup::meta_dstInstanceMapping, CollocationGroup::meta, NodeReference::meta, "srcInstanceMapping");
		InstanceMapping::meta_dstInstanceMapping_end_ = NodeReference::meta_srcInstanceMapping_rev = CollocationGroup::meta_dstInstanceMapping;
		::Uml::SetAssocRole(CollocationGroup::meta_members, CollocationGroup::meta, CollocationGroupMember::meta, "setCollocationGroup");
		::Uml::SetParentRole(CollocationGroup::meta_DeploymentPlan_parent, CollocationGroup::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(CollocationGroupMember::meta_setCollocationGroup, CollocationGroupMember::meta, CollocationGroup::meta, "members");
		::Uml::SetParentRole(CollocationGroupMember::meta_DeploymentPlan_parent, CollocationGroupMember::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(CompRef::meta_srcComponentOperation, CompRef::meta, OperationRef::meta, "dstComponentOperation");
		ComponentOperation::meta_srcComponentOperation_end_ = OperationRef::meta_dstComponentOperation_rev = CompRef::meta_srcComponentOperation;
		::Uml::SetAssocRole(CompRef::meta_ref, CompRef::meta, Component::meta, "referedbyCompRef");
		::Uml::SetParentRole(CompRef::meta_BenchmarkAnalysis_parent, CompRef::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Component::meta_dstAssemblyselectRequirement, Component::meta, Requirement::meta, "srcAssemblyselectRequirement");
		AssemblyselectRequirement::meta_dstAssemblyselectRequirement_end_ = Requirement::meta_srcAssemblyselectRequirement_rev = Component::meta_dstAssemblyselectRequirement;
		::Uml::SetAssocRole(Component::meta_dstAssemblyConfigProperty, Component::meta, Property::meta, "srcAssemblyConfigProperty");
		AssemblyConfigProperty::meta_dstAssemblyConfigProperty_end_ = Property::meta_srcAssemblyConfigProperty_rev = Component::meta_dstAssemblyConfigProperty;
		::Uml::SetAssocRole(Component::meta_referedbyComponentRef, Component::meta, ComponentRef::meta, "ref");
		::Uml::SetAssocRole(Component::meta_referedbyCompRef, Component::meta, CompRef::meta, "ref");
		::Uml::SetChildRole(Component::meta_Port_children, Component::meta, Port::meta, "", "");
		::Uml::SetChildRole(Component::meta_ReadonlyAttribute_children, Component::meta, ReadonlyAttribute::meta, "", "");
		::Uml::SetChildRole(Component::meta_WorkerType_children, Component::meta, WorkerType::meta, "", "");
		::Uml::SetParentRole(Component::meta_ComponentAssembly_parent, Component::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(ComponentAccessConn::meta_Policy_parent, ComponentAccessConn::meta, Policy::meta, "", "");

		::Uml::SetChildRole(ComponentAnalyses::meta_BenchmarkAnalysis_children, ComponentAnalyses::meta, BenchmarkAnalysis::meta, "", "");
		::Uml::SetParentRole(ComponentAnalyses::meta_RootFolder_parent, ComponentAnalyses::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(ComponentAssembly::meta_dstCriticalPath, ComponentAssembly::meta, PathReference::meta, "srcCriticalPath");
		CriticalPath::meta_dstCriticalPath_end_ = PathReference::meta_srcCriticalPath_rev = ComponentAssembly::meta_dstCriticalPath;
		::Uml::SetAssocRole(ComponentAssembly::meta_referedbyComponentAssemblyReference, ComponentAssembly::meta, ComponentAssemblyReference::meta, "ref");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentPackage_children, ComponentAssembly::meta, ComponentPackage::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Property_children, ComponentAssembly::meta, Property::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentPackageReference_children, ComponentAssembly::meta, ComponentPackageReference::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Requirement_children, ComponentAssembly::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_Component_children, ComponentAssembly::meta, Component::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentAssembly_children, ComponentAssembly::meta, ComponentAssembly::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ProvidedRequestPort_children, ComponentAssembly::meta, ProvidedRequestPort::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_RequiredRequestPort_children, ComponentAssembly::meta, RequiredRequestPort::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_InEventPort_children, ComponentAssembly::meta, InEventPort::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_OutEventPort_children, ComponentAssembly::meta, OutEventPort::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_emit_children, ComponentAssembly::meta, emit::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSourceDelegate_children, ComponentAssembly::meta, EventSourceDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSinkDelegate_children, ComponentAssembly::meta, EventSinkDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_deliverTo_children, ComponentAssembly::meta, deliverTo::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_publish_children, ComponentAssembly::meta, publish::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentAssemblyReference_children, ComponentAssembly::meta, ComponentAssemblyReference::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentRef_children, ComponentAssembly::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AssemblyselectRequirement_children, ComponentAssembly::meta, AssemblyselectRequirement::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeValue_children, ComponentAssembly::meta, AttributeValue::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeDelegate_children, ComponentAssembly::meta, AttributeDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMappingValue_children, ComponentAssembly::meta, AttributeMappingValue::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AssemblyConfigProperty_children, ComponentAssembly::meta, AssemblyConfigProperty::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_FacetDelegate_children, ComponentAssembly::meta, FacetDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_invoke_children, ComponentAssembly::meta, invoke::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ReceptacleDelegate_children, ComponentAssembly::meta, ReceptacleDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMappingDelegate_children, ComponentAssembly::meta, AttributeMappingDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExternalDelegate_children, ComponentAssembly::meta, ExternalDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AttributeMapping_children, ComponentAssembly::meta, AttributeMapping::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_PublishConnector_children, ComponentAssembly::meta, PublishConnector::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ExternalPortReference_children, ComponentAssembly::meta, ExternalPortReference::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_SupportsDelegate_children, ComponentAssembly::meta, SupportsDelegate::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_AssemblyDeployRequirement_children, ComponentAssembly::meta, AssemblyDeployRequirement::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_QoSConnector_children, ComponentAssembly::meta, QoSConnector::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_PortQoS_children, ComponentAssembly::meta, PortQoS::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_QoSReq_children, ComponentAssembly::meta, QoSReq::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_RecepInvoke_children, ComponentAssembly::meta, RecepInvoke::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_FacetInvoke_children, ComponentAssembly::meta, FacetInvoke::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSourcePublish_children, ComponentAssembly::meta, EventSourcePublish::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentQoS_children, ComponentAssembly::meta, ComponentQoS::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_ComponentAssemblyQoS_children, ComponentAssembly::meta, ComponentAssemblyQoS::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_QoSCharacteristicBase_children, ComponentAssembly::meta, QoSCharacteristicBase::meta, "", "");
		::Uml::SetChildRole(ComponentAssembly::meta_EventSinkPublish_children, ComponentAssembly::meta, EventSinkPublish::meta, "", "");
		::Uml::SetParentRole(ComponentAssembly::meta_ComponentAssembly_parent, ComponentAssembly::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentAssemblyBase::meta_dstComponentAssemblyQoS, ComponentAssemblyBase::meta, ComponentAssemblyQoSCharacteristic::meta, "srcComponentAssemblyQoS");
		ComponentAssemblyQoS::meta_dstComponentAssemblyQoS_end_ = ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS_rev = ComponentAssemblyBase::meta_dstComponentAssemblyQoS;

		::Uml::SetParentRole(ComponentAssemblyQoS::meta_ComponentImplementationContainer_parent, ComponentAssemblyQoS::meta, ComponentImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentAssemblyQoS::meta_ComponentAssembly_parent, ComponentAssemblyQoS::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS, ComponentAssemblyQoSCharacteristic::meta, ComponentAssemblyBase::meta, "dstComponentAssemblyQoS");
		ComponentAssemblyQoS::meta_srcComponentAssemblyQoS_end_ = ComponentAssemblyBase::meta_dstComponentAssemblyQoS_rev = ComponentAssemblyQoSCharacteristic::meta_srcComponentAssemblyQoS;
		::Uml::SetParentRole(ComponentAssemblyQoSCharacteristic::meta_AssemblyQoSComposition_ComponentImplementationContainer_parent, ComponentAssemblyQoSCharacteristic::meta, ComponentImplementationContainer::meta, "AssemblyQoSComposition", "");

		::Uml::SetAssocRole(ComponentAssemblyReference::meta_ref, ComponentAssemblyReference::meta, ComponentAssembly::meta, "referedbyComponentAssemblyReference");
		::Uml::SetAssocRole(ComponentAssemblyReference::meta_srcOnAssemblyConn, ComponentAssemblyReference::meta, AssemblyRule::meta, "dstOnAssemblyConn");
		OnAssemblyConn::meta_srcOnAssemblyConn_end_ = AssemblyRule::meta_dstOnAssemblyConn_rev = ComponentAssemblyReference::meta_srcOnAssemblyConn;
		::Uml::SetParentRole(ComponentAssemblyReference::meta_ComponentAssembly_parent, ComponentAssemblyReference::meta, ComponentAssembly::meta, "", "");
		::Uml::SetParentRole(ComponentAssemblyReference::meta_Policy_parent, ComponentAssemblyReference::meta, Policy::meta, "", "");

		::Uml::SetChildRole(ComponentAssemblySecurityQoS::meta_AssemblyRuleRef_children, ComponentAssemblySecurityQoS::meta, AssemblyRuleRef::meta, "", "");

		::Uml::SetAssocRole(ComponentBase::meta_dstComponentQoS, ComponentBase::meta, ComponentQoSCharacteristic::meta, "srcComponentQoS");
		ComponentQoS::meta_dstComponentQoS_end_ = ComponentQoSCharacteristic::meta_srcComponentQoS_rev = ComponentBase::meta_dstComponentQoS;

		::Uml::SetChildRole(ComponentBuild::meta_MPC_children, ComponentBuild::meta, MPC::meta, "", "");
		::Uml::SetParentRole(ComponentBuild::meta_RootFolder_parent, ComponentBuild::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentConfigProperty::meta_ComponentContainer_parent, ComponentConfigProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetChildRole(ComponentContainer::meta_Property_children, ComponentContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentConfigProperty_children, ComponentContainer::meta, ComponentConfigProperty::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentInfoProperty_children, ComponentContainer::meta, ComponentInfoProperty::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentProperty_children, ComponentContainer::meta, ComponentProperty::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentPropertyDescription_children, ComponentContainer::meta, ComponentPropertyDescription::meta, "", "");
		::Uml::SetChildRole(ComponentContainer::meta_ComponentRef_child, ComponentContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetParentRole(ComponentContainer::meta_ComponentTypes_parent, ComponentContainer::meta, ComponentTypes::meta, "", "");

		::Uml::SetAssocRole(ComponentFactory::meta_dstManagesComponent, ComponentFactory::meta, Manageable::meta, "srcManagesComponent");
		ManagesComponent::meta_dstManagesComponent_end_ = Manageable::meta_srcManagesComponent_rev = ComponentFactory::meta_dstManagesComponent;
		::Uml::SetAssocRole(ComponentFactory::meta_referedbyComponentFactoryInstance, ComponentFactory::meta, ComponentFactoryInstance::meta, "ref");
		::Uml::SetChildRole(ComponentFactory::meta_FactoryOperation_children, ComponentFactory::meta, FactoryOperation::meta, "", "");
		::Uml::SetChildRole(ComponentFactory::meta_LookupKey_child, ComponentFactory::meta, LookupKey::meta, "", "");
		::Uml::SetChildRole(ComponentFactory::meta_LookupOperation_children, ComponentFactory::meta, LookupOperation::meta, "", "");

		::Uml::SetChildRole(ComponentFactoryImplementationContainer::meta_ComponentFactoryInstance_children, ComponentFactoryImplementationContainer::meta, ComponentFactoryInstance::meta, "", "");
		::Uml::SetParentRole(ComponentFactoryImplementationContainer::meta_ComponentFactoryImplementations_parent, ComponentFactoryImplementationContainer::meta, ComponentFactoryImplementations::meta, "", "");

		::Uml::SetChildRole(ComponentFactoryImplementations::meta_ComponentFactoryImplementationContainer_children, ComponentFactoryImplementations::meta, ComponentFactoryImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentFactoryImplementations::meta_RootFolder_parent, ComponentFactoryImplementations::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(ComponentFactoryInstance::meta_referedbyComponentFactoryRef, ComponentFactoryInstance::meta, ComponentFactoryRef::meta, "ref");
		::Uml::SetAssocRole(ComponentFactoryInstance::meta_ref, ComponentFactoryInstance::meta, ComponentFactory::meta, "referedbyComponentFactoryInstance");
		::Uml::SetParentRole(ComponentFactoryInstance::meta_ComponentFactoryImplementationContainer_parent, ComponentFactoryInstance::meta, ComponentFactoryImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentFactoryRef::meta_dstDeploys, ComponentFactoryRef::meta, ComponentRef::meta, "srcDeploys");
		Deploys::meta_dstDeploys_end_ = ComponentRef::meta_srcDeploys_rev = ComponentFactoryRef::meta_dstDeploys;
		::Uml::SetAssocRole(ComponentFactoryRef::meta_ref, ComponentFactoryRef::meta, ComponentFactoryInstance::meta, "referedbyComponentFactoryRef");

		::Uml::SetAssocRole(ComponentImplementation::meta_referedbyComponentImplementationReference, ComponentImplementation::meta, ComponentImplementationReference::meta, "ref");
		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplementationCapability, ComponentImplementation::meta, Capability::meta, "srcImplementationCapability");
		ImplementationCapability::meta_dstImplementationCapability_end_ = Capability::meta_srcImplementationCapability_rev = ComponentImplementation::meta_dstImplementationCapability;
		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplementationDependsOn, ComponentImplementation::meta, ImplementationDependency::meta, "srcImplementationDependsOn");
		ImplementationDependsOn::meta_dstImplementationDependsOn_end_ = ImplementationDependency::meta_srcImplementationDependsOn_rev = ComponentImplementation::meta_dstImplementationDependsOn;
		::Uml::SetAssocRole(ComponentImplementation::meta_dstImplements, ComponentImplementation::meta, ComponentRef::meta, "srcImplements");
		Implements::meta_dstImplements_end_ = ComponentRef::meta_srcImplements_rev = ComponentImplementation::meta_dstImplements;
		::Uml::SetParentRole(ComponentImplementation::meta_ComponentImplementationContainer_parent, ComponentImplementation::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentImplementationArtifact::meta_ref, ComponentImplementationArtifact::meta, ImplementationArtifact::meta, "referedbyComponentImplemenationArtifact");

		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationDependsOn_children, ComponentImplementationContainer::meta, ImplementationDependsOn::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_Implements_child, ComponentImplementationContainer::meta, Implements::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ComponentRef_child, ComponentImplementationContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationDependency_children, ComponentImplementationContainer::meta, ImplementationDependency::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ImplementationCapability_children, ComponentImplementationContainer::meta, ImplementationCapability::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_Capability_children, ComponentImplementationContainer::meta, Capability::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_CriticalPath_children, ComponentImplementationContainer::meta, CriticalPath::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_PathReference_child, ComponentImplementationContainer::meta, PathReference::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ComponentImplementation_children, ComponentImplementationContainer::meta, ComponentImplementation::meta, "", "");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_AssemblyQoSComposition, ComponentImplementationContainer::meta, ComponentAssemblyQoSCharacteristic::meta, "", "AssemblyQoSComposition");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_PortQoSComposition, ComponentImplementationContainer::meta, PortQoSCharacteristic::meta, "", "PortQoSComposition");
		::Uml::SetChildRole(ComponentImplementationContainer::meta_ComponentAssemblyQoS_children, ComponentImplementationContainer::meta, ComponentAssemblyQoS::meta, "", "");
		::Uml::SetParentRole(ComponentImplementationContainer::meta_ComponentImplementations_parent, ComponentImplementationContainer::meta, ComponentImplementations::meta, "", "");

		::Uml::SetAssocRole(ComponentImplementationReference::meta_srcImplementation, ComponentImplementationReference::meta, ComponentPackage::meta, "dstImplementation");
		Implementation::meta_srcImplementation_end_ = ComponentPackage::meta_dstImplementation_rev = ComponentImplementationReference::meta_srcImplementation;
		::Uml::SetAssocRole(ComponentImplementationReference::meta_ref, ComponentImplementationReference::meta, ComponentImplementation::meta, "referedbyComponentImplementationReference");
		::Uml::SetParentRole(ComponentImplementationReference::meta_PackageContainer_parent, ComponentImplementationReference::meta, PackageContainer::meta, "", "");

		::Uml::SetChildRole(ComponentImplementations::meta_ComponentImplementationContainer_children, ComponentImplementations::meta, ComponentImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentImplementations::meta_RootFolder_parent, ComponentImplementations::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentInfoProperty::meta_ComponentContainer_parent, ComponentInfoProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentLib::meta_dstExtResourceConn, ComponentLib::meta, ExternalResources::meta, "srcExtResourceConn");
		ExtResourceConn::meta_dstExtResourceConn_end_ = ExternalResources::meta_srcExtResourceConn_rev = ComponentLib::meta_dstExtResourceConn;
		::Uml::SetParentRole(ComponentLib::meta_Project_parent, ComponentLib::meta, Project::meta, "", "");

		::Uml::SetParentRole(ComponentOperation::meta_BenchmarkAnalysis_parent, ComponentOperation::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageInterface, ComponentPackage::meta, ComponentRef::meta, "srcPackageInterface");
		PackageInterface::meta_dstPackageInterface_end_ = ComponentRef::meta_srcPackageInterface_rev = ComponentPackage::meta_dstPackageInterface;
		::Uml::SetAssocRole(ComponentPackage::meta_dstImplementation, ComponentPackage::meta, ComponentImplementationReference::meta, "srcImplementation");
		Implementation::meta_dstImplementation_end_ = ComponentImplementationReference::meta_srcImplementation_rev = ComponentPackage::meta_dstImplementation;
		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageConfigProperty, ComponentPackage::meta, Property::meta, "srcPackageConfigProperty");
		PackageConfigProperty::meta_dstPackageConfigProperty_end_ = Property::meta_srcPackageConfigProperty_rev = ComponentPackage::meta_dstPackageConfigProperty;
		::Uml::SetAssocRole(ComponentPackage::meta_dstPackageInfoProperty, ComponentPackage::meta, Property::meta, "srcPackageInfoProperty");
		PackageInfoProperty::meta_dstPackageInfoProperty_end_ = Property::meta_srcPackageInfoProperty_rev = ComponentPackage::meta_dstPackageInfoProperty;
		::Uml::SetAssocRole(ComponentPackage::meta_referedbyComponentPackageReference, ComponentPackage::meta, ComponentPackageReference::meta, "ref");
		::Uml::SetAssocRole(ComponentPackage::meta_srcPackageConfBasePackage, ComponentPackage::meta, PackageConfiguration::meta, "dstPackageConfBasePackage");
		PackageConfBasePackage::meta_srcPackageConfBasePackage_end_ = PackageConfiguration::meta_dstPackageConfBasePackage_rev = ComponentPackage::meta_srcPackageConfBasePackage;
		::Uml::SetParentRole(ComponentPackage::meta_PackageContainer_parent, ComponentPackage::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackage::meta_PackageConfigurationContainer_parent, ComponentPackage::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackage::meta_ComponentAssembly_parent, ComponentPackage::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentPackageReference::meta_ref, ComponentPackageReference::meta, ComponentPackage::meta, "referedbyComponentPackageReference");
		::Uml::SetAssocRole(ComponentPackageReference::meta_srcPackageConfReference, ComponentPackageReference::meta, PackageConfiguration::meta, "dstPackageConfReference");
		PackageConfReference::meta_srcPackageConfReference_end_ = PackageConfiguration::meta_dstPackageConfReference_rev = ComponentPackageReference::meta_srcPackageConfReference;
		::Uml::SetParentRole(ComponentPackageReference::meta_PackageConfigurationContainer_parent, ComponentPackageReference::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackageReference::meta_ComponentAssembly_parent, ComponentPackageReference::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(ComponentPackages::meta_PackageContainer_children, ComponentPackages::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentPackages::meta_RootFolder_parent, ComponentPackages::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ComponentProperty::meta_ComponentContainer_parent, ComponentProperty::meta, ComponentContainer::meta, "", "");

		::Uml::SetAssocRole(ComponentPropertyDescription::meta_srcComponentProperty, ComponentPropertyDescription::meta, ComponentRef::meta, "dstComponentProperty");
		ComponentProperty::meta_srcComponentProperty_end_ = ComponentRef::meta_dstComponentProperty_rev = ComponentPropertyDescription::meta_srcComponentProperty;
		::Uml::SetChildRole(ComponentPropertyDescription::meta_DataType_child, ComponentPropertyDescription::meta, DataType::meta, "", "");
		::Uml::SetParentRole(ComponentPropertyDescription::meta_ComponentContainer_parent, ComponentPropertyDescription::meta, ComponentContainer::meta, "", "");

		::Uml::SetParentRole(ComponentQoS::meta_ComponentAssembly_parent, ComponentQoS::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ComponentQoSCharacteristic::meta_srcComponentQoS, ComponentQoSCharacteristic::meta, ComponentBase::meta, "dstComponentQoS");
		ComponentQoS::meta_srcComponentQoS_end_ = ComponentBase::meta_dstComponentQoS_rev = ComponentQoSCharacteristic::meta_srcComponentQoS;

		::Uml::SetAssocRole(ComponentRef::meta_ref, ComponentRef::meta, Component::meta, "referedbyComponentRef");
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentProperty, ComponentRef::meta, ComponentPropertyDescription::meta, "srcComponentProperty");
		ComponentProperty::meta_dstComponentProperty_end_ = ComponentPropertyDescription::meta_srcComponentProperty_rev = ComponentRef::meta_dstComponentProperty;
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentConfigProperty, ComponentRef::meta, Property::meta, "srcComponentConfigProperty");
		ComponentConfigProperty::meta_dstComponentConfigProperty_end_ = Property::meta_srcComponentConfigProperty_rev = ComponentRef::meta_dstComponentConfigProperty;
		::Uml::SetAssocRole(ComponentRef::meta_dstComponentInfoProperty, ComponentRef::meta, Property::meta, "srcComponentInfoProperty");
		ComponentInfoProperty::meta_dstComponentInfoProperty_end_ = Property::meta_srcComponentInfoProperty_rev = ComponentRef::meta_dstComponentInfoProperty;
		::Uml::SetAssocRole(ComponentRef::meta_srcPackageInterface, ComponentRef::meta, ComponentPackage::meta, "dstPackageInterface");
		PackageInterface::meta_srcPackageInterface_end_ = ComponentPackage::meta_dstPackageInterface_rev = ComponentRef::meta_srcPackageInterface;
		::Uml::SetAssocRole(ComponentRef::meta_srcImplements, ComponentRef::meta, ComponentImplementation::meta, "dstImplements");
		Implements::meta_srcImplements_end_ = ComponentImplementation::meta_dstImplements_rev = ComponentRef::meta_srcImplements;
		::Uml::SetAssocRole(ComponentRef::meta_referedbySharedComponentReference, ComponentRef::meta, SharedComponentReference::meta, "ref");
		::Uml::SetAssocRole(ComponentRef::meta_srcDeploys, ComponentRef::meta, ComponentFactoryRef::meta, "dstDeploys");
		Deploys::meta_srcDeploys_end_ = ComponentFactoryRef::meta_dstDeploys_rev = ComponentRef::meta_srcDeploys;
		::Uml::SetAssocRole(ComponentRef::meta_srcOnComponentConn, ComponentRef::meta, ComponentRule::meta, "dstOnComponentConn");
		OnComponentConn::meta_srcOnComponentConn_end_ = ComponentRule::meta_dstOnComponentConn_rev = ComponentRef::meta_srcOnComponentConn;
		::Uml::SetParentRole(ComponentRef::meta_Package_parent, ComponentRef::meta, Package::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_File_parent, ComponentRef::meta, File::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_PackageContainer_parent, ComponentRef::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_ComponentContainer_parent, ComponentRef::meta, ComponentContainer::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_ComponentImplementationContainer_parent, ComponentRef::meta, ComponentImplementationContainer::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_Path_parent, ComponentRef::meta, Path::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_ComponentAssembly_parent, ComponentRef::meta, ComponentAssembly::meta, "", "");
		::Uml::SetParentRole(ComponentRef::meta_Policy_parent, ComponentRef::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(ComponentRule::meta_referedbyComponentRuleRef, ComponentRule::meta, ComponentRuleRef::meta, "ref");
		::Uml::SetAssocRole(ComponentRule::meta_srcComponentAccessConn, ComponentRule::meta, InitiatorRoleRef::meta, "dstComponentAccessConn");
		ComponentAccessConn::meta_srcComponentAccessConn_end_ = InitiatorRoleRef::meta_dstComponentAccessConn_rev = ComponentRule::meta_srcComponentAccessConn;
		::Uml::SetAssocRole(ComponentRule::meta_dstOnComponentConn, ComponentRule::meta, ComponentRef::meta, "srcOnComponentConn");
		OnComponentConn::meta_dstOnComponentConn_end_ = ComponentRef::meta_srcOnComponentConn_rev = ComponentRule::meta_dstOnComponentConn;
		::Uml::SetAssocRole(ComponentRule::meta_dstAttributeManipulateConn, ComponentRule::meta, AttributeRef::meta, "srcAttributeManipulateConn");
		AttributeManipulateConn::meta_dstAttributeManipulateConn_end_ = AttributeRef::meta_srcAttributeManipulateConn_rev = ComponentRule::meta_dstAttributeManipulateConn;

		::Uml::SetAssocRole(ComponentRuleRef::meta_ref, ComponentRuleRef::meta, ComponentRule::meta, "referedbyComponentRuleRef");
		::Uml::SetParentRole(ComponentRuleRef::meta_ComponentSecurityQoS_parent, ComponentRuleRef::meta, ComponentSecurityQoS::meta, "", "");

		::Uml::SetChildRole(ComponentSecurityQoS::meta_ComponentRuleRef_children, ComponentSecurityQoS::meta, ComponentRuleRef::meta, "", "");

		::Uml::SetAssocRole(ComponentServantArtifact::meta_ref, ComponentServantArtifact::meta, ImplementationArtifact::meta, "referedbyComponentServantArtifact");

		::Uml::SetChildRole(ComponentTypes::meta_ComponentContainer_children, ComponentTypes::meta, ComponentContainer::meta, "", "");
		::Uml::SetParentRole(ComponentTypes::meta_RootFolder_parent, ComponentTypes::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ConfigProperty::meta_ImplementationContainer_parent, ConfigProperty::meta, ImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ConnectedComponent::meta_DstEdge_children, ConnectedComponent::meta, DstEdge::meta, "", "");
		::Uml::SetChildRole(ConnectedComponent::meta_Port_children, ConnectedComponent::meta, Port::meta, "", "");

		::Uml::SetAssocRole(ConnectionQoSCharacteristic::meta_srcQoSReq, ConnectionQoSCharacteristic::meta, QoSConnector::meta, "dstQoSReq");
		QoSReq::meta_srcQoSReq_end_ = QoSConnector::meta_dstQoSReq_rev = ConnectionQoSCharacteristic::meta_srcQoSReq;

		::Uml::SetAssocRole(Constant::meta_ref, Constant::meta, ConstantType::meta, "referedbyConstant");
		::Uml::SetParentRole(Constant::meta_Package_parent, Constant::meta, Package::meta, "", "");
		::Uml::SetParentRole(Constant::meta_File_parent, Constant::meta, File::meta, "", "");
		::Uml::SetParentRole(Constant::meta_HasOperations_parent, Constant::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(ConstantType::meta_referedbyConstant, ConstantType::meta, Constant::meta, "ref");
		::Uml::SetAssocRole(ConstantType::meta_referedbyDiscriminator, ConstantType::meta, Discriminator::meta, "ref");

		::Uml::SetParentRole(ConsumerBehavior::meta_eventServiceConfiguration_parent, ConsumerBehavior::meta, eventServiceConfiguration::meta, "", "");

		::Uml::SetParentRole(CriticalPath::meta_ComponentImplementationContainer_parent, CriticalPath::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetParentRole(DataAnalysisBase::meta_BenchmarkAnalysis_parent, DataAnalysisBase::meta, BenchmarkAnalysis::meta, "", "");
		::Uml::SetParentRole(DataAnalysisBase::meta_MetricsBase_parent, DataAnalysisBase::meta, MetricsBase::meta, "", "");

		::Uml::SetAssocRole(DataType::meta_ref, DataType::meta, MemberType::meta, "referedbyDataType");
		::Uml::SetParentRole(DataType::meta_Property_parent, DataType::meta, Property::meta, "", "");
		::Uml::SetParentRole(DataType::meta_SatisfierProperty_parent, DataType::meta, SatisfierProperty::meta, "", "");
		::Uml::SetParentRole(DataType::meta_ComponentPropertyDescription_parent, DataType::meta, ComponentPropertyDescription::meta, "", "");

		::Uml::SetAssocRole(DeploymentPlan::meta_referedbyDeploymentPlanReference, DeploymentPlan::meta, DeploymentPlanRef::meta, "ref");
		::Uml::SetChildRole(DeploymentPlan::meta_NodeReference_children, DeploymentPlan::meta, NodeReference::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_InstanceMapping_children, DeploymentPlan::meta, InstanceMapping::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_CollocationGroup_children, DeploymentPlan::meta, CollocationGroup::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_Property_children, DeploymentPlan::meta, Property::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_Deploys_children, DeploymentPlan::meta, Deploys::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_CollocationGroupMember_children, DeploymentPlan::meta, CollocationGroupMember::meta, "", "");
		::Uml::SetChildRole(DeploymentPlan::meta_DeploymentPlanQoS_children, DeploymentPlan::meta, DeploymentPlanQoS::meta, "", "");
		::Uml::SetParentRole(DeploymentPlan::meta_DeploymentPlans_parent, DeploymentPlan::meta, DeploymentPlans::meta, "", "");

		::Uml::SetParentRole(DeploymentPlanQoS::meta_DeploymentPlan_parent, DeploymentPlanQoS::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(DeploymentPlanRef::meta_dstFTDeployDepends, DeploymentPlanRef::meta, DomainRiskGrouping::meta, "srcFTDeployDepends");
		FTDeployDepends::meta_dstFTDeployDepends_end_ = DomainRiskGrouping::meta_srcFTDeployDepends_rev = DeploymentPlanRef::meta_dstFTDeployDepends;
		::Uml::SetAssocRole(DeploymentPlanRef::meta_ref, DeploymentPlanRef::meta, DeploymentPlan::meta, "referedbyDeploymentPlanReference");
		::Uml::SetParentRole(DeploymentPlanRef::meta_FTDeployment_parent, DeploymentPlanRef::meta, FTDeployment::meta, "", "");

		::Uml::SetChildRole(DeploymentPlans::meta_DeploymentPlan_children, DeploymentPlans::meta, DeploymentPlan::meta, "", "");
		::Uml::SetParentRole(DeploymentPlans::meta_RootFolder_parent, DeploymentPlans::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(Deploys::meta_DeploymentPlan_parent, Deploys::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Discriminator::meta_ref, Discriminator::meta, ConstantType::meta, "referedbyDiscriminator");
		::Uml::SetParentRole(Discriminator::meta_SwitchedAggregate_parent, Discriminator::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetChildRole(Domain::meta_InterconnectConnection_children, Domain::meta, InterconnectConnection::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Interconnect_children, Domain::meta, Interconnect::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Node_children, Domain::meta, Node::meta, "", "");
		::Uml::SetChildRole(Domain::meta_BridgeConnection_children, Domain::meta, BridgeConnection::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Bridge_children, Domain::meta, Bridge::meta, "", "");
		::Uml::SetChildRole(Domain::meta_SharedResource_children, Domain::meta, SharedResource::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Shares_children, Domain::meta, Shares::meta, "", "");
		::Uml::SetChildRole(Domain::meta_Property_children, Domain::meta, Property::meta, "", "");
		::Uml::SetParentRole(Domain::meta_Targets_parent, Domain::meta, Targets::meta, "", "");

		::Uml::SetAssocRole(DomainRiskGrouping::meta_srcFTDeployDepends, DomainRiskGrouping::meta, DeploymentPlanRef::meta, "dstFTDeployDepends");
		FTDeployDepends::meta_srcFTDeployDepends_end_ = DeploymentPlanRef::meta_dstFTDeployDepends_rev = DomainRiskGrouping::meta_srcFTDeployDepends;
		::Uml::SetAssocRole(DomainRiskGrouping::meta_referedbyDomainRiskGroupingRef, DomainRiskGrouping::meta, DomainRiskGroupingRef::meta, "ref");
		::Uml::SetChildRole(DomainRiskGrouping::meta_RootRiskAssociation_children, DomainRiskGrouping::meta, RootRiskAssociation::meta, "", "");
		::Uml::SetChildRole(DomainRiskGrouping::meta_SRGRiskAssociation_children, DomainRiskGrouping::meta, SRGRiskAssociation::meta, "", "");
		::Uml::SetChildRole(DomainRiskGrouping::meta_SRGBase_children, DomainRiskGrouping::meta, SRGBase::meta, "", "");
		::Uml::SetChildRole(DomainRiskGrouping::meta_RootRiskGroup_child, DomainRiskGrouping::meta, RootRiskGroup::meta, "", "");
		::Uml::SetParentRole(DomainRiskGrouping::meta_FTDeployment_parent, DomainRiskGrouping::meta, FTDeployment::meta, "", "");

		::Uml::SetAssocRole(DomainRiskGroupingRef::meta_ref, DomainRiskGroupingRef::meta, DomainRiskGrouping::meta, "referedbyDomainRiskGroupingRef");

		::Uml::SetParentRole(DstEdge::meta_ConnectedComponent_parent, DstEdge::meta, ConnectedComponent::meta, "", "");
		::Uml::SetParentRole(DstEdge::meta_Path_parent, DstEdge::meta, Path::meta, "", "");

		::Uml::SetParentRole(ECBehavior::meta_ECRequirements_parent, ECBehavior::meta, ECRequirements::meta, "", "");

		::Uml::SetChildRole(ECRequirements::meta_ECBehavior_child, ECRequirements::meta, ECBehavior::meta, "", "");
		::Uml::SetChildRole(ECRequirements::meta_ECRole_children, ECRequirements::meta, ECRole::meta, "", "");

		::Uml::SetParentRole(ECRole::meta_ECRequirements_parent, ECRole::meta, ECRequirements::meta, "", "");

		::Uml::SetAssocRole(Edge::meta_srcPropertyConnector, Edge::meta, Property::meta, "dstPropertyConnector");
		EdgeProperty::meta_srcPropertyConnector_end_ = Property::meta_dstPropertyConnector_rev = Edge::meta_srcPropertyConnector;
		::Uml::SetAssocRole(Edge::meta_srcDstEdge, Edge::meta, GraphVertex::meta, "dstDstEdge");
		DstEdge::meta_srcDstEdge_end_ = GraphVertex::meta_dstDstEdge_rev = Edge::meta_srcDstEdge;
		::Uml::SetAssocRole(Edge::meta_dstSrcEdge, Edge::meta, GraphVertex::meta, "srcSrcEdge");
		SrcEdge::meta_dstSrcEdge_end_ = GraphVertex::meta_srcSrcEdge_rev = Edge::meta_dstSrcEdge;
		::Uml::SetParentRole(Edge::meta_Path_parent, Edge::meta, Path::meta, "", "");

		::Uml::SetParentRole(EdgeProperty::meta_Path_parent, EdgeProperty::meta, Path::meta, "", "");

		::Uml::SetParentRole(Effect::meta_BehaviorModel_parent, Effect::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(Enum::meta_EnumValue_children, Enum::meta, EnumValue::meta, "", "");

		::Uml::SetParentRole(EnumValue::meta_Enum_parent, EnumValue::meta, Enum::meta, "", "");

		::Uml::SetParentRole(Environment::meta_TopLevelBehavior_parent, Environment::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetParentRole(EnvironmentConf::meta_RealTimeConfiguration_parent, EnvironmentConf::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetAssocRole(Event::meta_referedbyOutEventPort, Event::meta, OutEventPort::meta, "ref");
		::Uml::SetAssocRole(Event::meta_referedbyInEventPort, Event::meta, InEventPort::meta, "ref");
		::Uml::SetAssocRole(Event::meta_referedbyEventRef, Event::meta, EventRef::meta, "ref");
		::Uml::SetParentRole(Event::meta_BenchmarkAnalysis_parent, Event::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(EventChannelCommunicationPoint::meta_dstReceiverConnection, EventChannelCommunicationPoint::meta, eventServiceConfiguration::meta, "srcReceiverConnection");
		ReceiverConnection::meta_dstReceiverConnection_end_ = eventServiceConfiguration::meta_srcReceiverConnection_rev = EventChannelCommunicationPoint::meta_dstReceiverConnection;
		::Uml::SetAssocRole(EventChannelCommunicationPoint::meta_srcSenderConnection, EventChannelCommunicationPoint::meta, eventServiceConfiguration::meta, "dstSenderConnection");
		SenderConnection::meta_srcSenderConnection_end_ = eventServiceConfiguration::meta_dstSenderConnection_rev = EventChannelCommunicationPoint::meta_srcSenderConnection;
		::Uml::SetParentRole(EventChannelCommunicationPoint::meta_CIAOEvents_parent, EventChannelCommunicationPoint::meta, CIAOEvents::meta, "", "");

		::Uml::SetParentRole(EventChannelFactory::meta_eventServiceConfiguration_parent, EventChannelFactory::meta, eventServiceConfiguration::meta, "", "");

		::Uml::SetAssocRole(EventRef::meta_dstTimerEventSinkConn, EventRef::meta, TimeProbe::meta, "srcTimerEventSinkConn");
		TimerEventSinkConn::meta_dstTimerEventSinkConn_end_ = TimeProbe::meta_srcTimerEventSinkConn_rev = EventRef::meta_dstTimerEventSinkConn;
		::Uml::SetAssocRole(EventRef::meta_ref, EventRef::meta, Event::meta, "referedbyEventRef");
		::Uml::SetParentRole(EventRef::meta_BenchmarkAnalysis_parent, EventRef::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(EventSinkDelegate::meta_ComponentAssembly_parent, EventSinkDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(EventSinkPublish::meta_ComponentAssembly_parent, EventSinkPublish::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(EventSource::meta_Filter_parent, EventSource::meta, Filter::meta, "", "");

		::Uml::SetParentRole(EventSourceDelegate::meta_ComponentAssembly_parent, EventSourceDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(EventSourcePort::meta_ref, EventSourcePort::meta, OutEventPort::meta, "referedbyEventSourcePort");
		::Uml::SetParentRole(EventSourcePort::meta_Filter_parent, EventSourcePort::meta, Filter::meta, "", "");

		::Uml::SetParentRole(EventSourcePublish::meta_ComponentAssembly_parent, EventSourcePublish::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(Exception::meta_referedbyExceptionRef, Exception::meta, ExceptionRef::meta, "ref");
		::Uml::SetAssocRole(Exception::meta_referedbySetException, Exception::meta, SetException::meta, "ref");
		::Uml::SetAssocRole(Exception::meta_referedbyGetException, Exception::meta, GetException::meta, "ref");
		::Uml::SetChildRole(Exception::meta_Member_children, Exception::meta, Member::meta, "", "");
		::Uml::SetParentRole(Exception::meta_Package_parent, Exception::meta, Package::meta, "", "");
		::Uml::SetParentRole(Exception::meta_File_parent, Exception::meta, File::meta, "", "");
		::Uml::SetParentRole(Exception::meta_HasOperations_parent, Exception::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(ExceptionRef::meta_ref, ExceptionRef::meta, Exception::meta, "referedbyExceptionRef");
		::Uml::SetParentRole(ExceptionRef::meta_HasExceptions_parent, ExceptionRef::meta, HasExceptions::meta, "", "");

		::Uml::SetChildRole(ExecutorProject::meta_ImplementationArtifactReference_child, ExecutorProject::meta, ImplementationArtifactReference::meta, "", "");

		::Uml::SetParentRole(ExtResourceConn::meta_Project_parent, ExtResourceConn::meta, Project::meta, "", "");

		::Uml::SetParentRole(ExternalDelegate::meta_ComponentAssembly_parent, ExternalDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExternalPortReference::meta_ref, ExternalPortReference::meta, ExternalPortReferenceType::meta, "referedbyExternalPortReference");
		::Uml::SetAssocRole(ExternalPortReference::meta_dstExternalDelegate, ExternalPortReference::meta, Port::meta, "srcExternalDelegate");
		ExternalDelegate::meta_dstExternalDelegate_end_ = Port::meta_srcExternalDelegate_rev = ExternalPortReference::meta_dstExternalDelegate;
		::Uml::SetParentRole(ExternalPortReference::meta_ComponentAssembly_parent, ExternalPortReference::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(ExternalPortReferenceType::meta_referedbyExternalPortReference, ExternalPortReferenceType::meta, ExternalPortReference::meta, "ref");

		::Uml::SetAssocRole(ExternalResources::meta_ref, ExternalResources::meta, ImplementationArtifact::meta, "referedbyExternalResources");
		::Uml::SetAssocRole(ExternalResources::meta_srcExtResourceConn, ExternalResources::meta, ComponentLib::meta, "dstExtResourceConn");
		ExtResourceConn::meta_srcExtResourceConn_end_ = ComponentLib::meta_dstExtResourceConn_rev = ExternalResources::meta_srcExtResourceConn;
		::Uml::SetParentRole(ExternalResources::meta_Project_parent, ExternalResources::meta, Project::meta, "", "");

		::Uml::SetParentRole(FTDeployDepends::meta_FTDeployment_parent, FTDeployDepends::meta, FTDeployment::meta, "", "");

		::Uml::SetChildRole(FTDeployment::meta_FTDeployDepends_children, FTDeployment::meta, FTDeployDepends::meta, "", "");
		::Uml::SetChildRole(FTDeployment::meta_DeploymentPlanRef_children, FTDeployment::meta, DeploymentPlanRef::meta, "", "");
		::Uml::SetChildRole(FTDeployment::meta_DomainRiskGrouping_children, FTDeployment::meta, DomainRiskGrouping::meta, "", "");
		::Uml::SetParentRole(FTDeployment::meta_RootFolder_parent, FTDeployment::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(FTMonitorable::meta_dstMonitorable2RepG, FTMonitorable::meta, RepicaGroupConfiguration::meta, "srcMonitorable2RepG");
		MonitorableGroupAssociation::meta_dstMonitorable2RepG_end_ = RepicaGroupConfiguration::meta_srcMonitorable2RepG_rev = FTMonitorable::meta_dstMonitorable2RepG;
		::Uml::SetParentRole(FTMonitorable::meta_FailOverUnit_parent, FTMonitorable::meta, FailOverUnit::meta, "", "");

		::Uml::SetParentRole(FacetDelegate::meta_ComponentAssembly_parent, FacetDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(FacetInvoke::meta_ComponentAssembly_parent, FacetInvoke::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(FactoryOperation::meta_ObjectByValue_parent, FactoryOperation::meta, ObjectByValue::meta, "", "");
		::Uml::SetParentRole(FactoryOperation::meta_ComponentFactory_parent, FactoryOperation::meta, ComponentFactory::meta, "", "");

		::Uml::SetChildRole(FailOverUnit::meta_MonitorableGroupAssociation_children, FailOverUnit::meta, MonitorableGroupAssociation::meta, "", "");
		::Uml::SetChildRole(FailOverUnit::meta_FTMonitorable_children, FailOverUnit::meta, FTMonitorable::meta, "", "");
		::Uml::SetChildRole(FailOverUnit::meta_RepicaGroupConfiguration_children, FailOverUnit::meta, RepicaGroupConfiguration::meta, "", "");

		::Uml::SetAssocRole(File::meta_referedbyFileRef, File::meta, FileRef::meta, "ref");
		::Uml::SetChildRole(File::meta_Package_children, File::meta, Package::meta, "", "");
		::Uml::SetChildRole(File::meta_Exception_children, File::meta, Exception::meta, "", "");
		::Uml::SetChildRole(File::meta_FileRef_children, File::meta, FileRef::meta, "", "");
		::Uml::SetChildRole(File::meta_Constant_children, File::meta, Constant::meta, "", "");
		::Uml::SetChildRole(File::meta_NamedType_children, File::meta, NamedType::meta, "", "");
		::Uml::SetChildRole(File::meta_ComponentRef_children, File::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(File::meta_ManagesComponent_children, File::meta, ManagesComponent::meta, "", "");
		::Uml::SetParentRole(File::meta_InterfaceDefinitions_parent, File::meta, InterfaceDefinitions::meta, "", "");

		::Uml::SetAssocRole(FileRef::meta_ref, FileRef::meta, File::meta, "referedbyFileRef");
		::Uml::SetParentRole(FileRef::meta_StubProject_parent, FileRef::meta, StubProject::meta, "", "");
		::Uml::SetParentRole(FileRef::meta_ServantProject_parent, FileRef::meta, ServantProject::meta, "", "");
		::Uml::SetParentRole(FileRef::meta_File_parent, FileRef::meta, File::meta, "", "");

		::Uml::SetChildRole(Filter::meta_EventSourcePort_children, Filter::meta, EventSourcePort::meta, "", "");
		::Uml::SetChildRole(Filter::meta_EventSource_children, Filter::meta, EventSource::meta, "", "");
		::Uml::SetParentRole(Filter::meta_eventServiceConfiguration_parent, Filter::meta, eventServiceConfiguration::meta, "", "");

		::Uml::SetParentRole(Finish::meta_BehaviorModel_parent, Finish::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(GetException::meta_ref, GetException::meta, Exception::meta, "referedbyGetException");
		::Uml::SetParentRole(GetException::meta_ReadonlyAttribute_parent, GetException::meta, ReadonlyAttribute::meta, "", "");

		::Uml::SetAssocRole(GrantedRights::meta_srcRightsAssignmentConn, GrantedRights::meta, Role::meta, "dstRightsAssignmentConn");
		RightsAssignmentConn::meta_srcRightsAssignmentConn_end_ = Role::meta_dstRightsAssignmentConn_rev = GrantedRights::meta_srcRightsAssignmentConn;
		::Uml::SetParentRole(GrantedRights::meta_RBAC_parent, GrantedRights::meta, RBAC::meta, "", "");

		::Uml::SetAssocRole(GraphVertex::meta_dstDstEdge, GraphVertex::meta, Edge::meta, "srcDstEdge");
		DstEdge::meta_dstDstEdge_end_ = Edge::meta_srcDstEdge_rev = GraphVertex::meta_dstDstEdge;
		::Uml::SetAssocRole(GraphVertex::meta_srcSrcEdge, GraphVertex::meta, Edge::meta, "dstSrcEdge");
		SrcEdge::meta_srcSrcEdge_end_ = Edge::meta_dstSrcEdge_rev = GraphVertex::meta_srcSrcEdge;
		::Uml::SetParentRole(GraphVertex::meta_Path_parent, GraphVertex::meta, Path::meta, "", "");

		::Uml::SetChildRole(Group::meta_Subject_children, Group::meta, Subject::meta, "", "");

		::Uml::SetChildRole(HasExceptions::meta_ExceptionRef_children, HasExceptions::meta, ExceptionRef::meta, "", "");

		::Uml::SetChildRole(HasOperations::meta_OnewayOperation_children, HasOperations::meta, OnewayOperation::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_TwowayOperation_children, HasOperations::meta, TwowayOperation::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_Exception_children, HasOperations::meta, Exception::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_Constant_children, HasOperations::meta, Constant::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_NoInheritable_children, HasOperations::meta, NoInheritable::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_RequiredRights_children, HasOperations::meta, RequiredRights::meta, "", "");
		::Uml::SetChildRole(HasOperations::meta_OperationClassificationConn_children, HasOperations::meta, OperationClassificationConn::meta, "", "");

		::Uml::SetAssocRole(HostReference::meta_ref, HostReference::meta, Node::meta, "referedbyHostReference");

		::Uml::SetAssocRole(Implemenation::meta_dstConfigProperty, Implemenation::meta, Property::meta, "srcConfigProperty");
		ConfigProperty::meta_dstConfigProperty_end_ = Property::meta_srcConfigProperty_rev = Implemenation::meta_dstConfigProperty;
		::Uml::SetAssocRole(Implemenation::meta_dstInfoProperty, Implemenation::meta, Property::meta, "srcInfoProperty");
		InfoProperty::meta_dstInfoProperty_end_ = Property::meta_srcInfoProperty_rev = Implemenation::meta_dstInfoProperty;

		::Uml::SetParentRole(Implementation::meta_PackageContainer_parent, Implementation::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyExternalResources, ImplementationArtifact::meta, ExternalResources::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyImplementationArtifactReference, ImplementationArtifact::meta, ImplementationArtifactReference::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDependsOn, ImplementationArtifact::meta, ImplementationArtifactReference::meta, "srcArtifactDependsOn");
		ArtifactDependsOn::meta_dstArtifactDependsOn_end_ = ImplementationArtifactReference::meta_srcArtifactDependsOn_rev = ImplementationArtifact::meta_dstArtifactDependsOn;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDeployRequirement, ImplementationArtifact::meta, Requirement::meta, "srcArtifactDeployRequirement");
		ArtifactDeployRequirement::meta_dstArtifactDeployRequirement_end_ = Requirement::meta_srcArtifactDeployRequirement_rev = ImplementationArtifact::meta_dstArtifactDeployRequirement;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactExecParameter, ImplementationArtifact::meta, Property::meta, "srcArtifactExecParameter");
		ArtifactExecParameter::meta_dstArtifactExecParameter_end_ = Property::meta_srcArtifactExecParameter_rev = ImplementationArtifact::meta_dstArtifactExecParameter;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactInfoProperty, ImplementationArtifact::meta, Property::meta, "srcArtifactInfoProperty");
		ArtifactInfoProperty::meta_dstArtifactInfoProperty_end_ = Property::meta_srcArtifactInfoProperty_rev = ImplementationArtifact::meta_dstArtifactInfoProperty;
		::Uml::SetAssocRole(ImplementationArtifact::meta_dstArtifactDependency, ImplementationArtifact::meta, ImplementationArtifact::meta, "srcArtifactDependency");
		ArtifactDependency::meta_dstArtifactDependency_end_ = ImplementationArtifact::meta_srcArtifactDependency_rev = ImplementationArtifact::meta_dstArtifactDependency;
		::Uml::SetAssocRole(ImplementationArtifact::meta_srcArtifactDependency, ImplementationArtifact::meta, ImplementationArtifact::meta, "dstArtifactDependency");
		ArtifactDependency::meta_srcArtifactDependency_end_ = ImplementationArtifact::meta_dstArtifactDependency_rev = ImplementationArtifact::meta_srcArtifactDependency;
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyComponentServantArtifact, ImplementationArtifact::meta, ComponentServantArtifact::meta, "ref");
		::Uml::SetAssocRole(ImplementationArtifact::meta_referedbyComponentImplemenationArtifact, ImplementationArtifact::meta, ComponentImplementationArtifact::meta, "ref");
		::Uml::SetParentRole(ImplementationArtifact::meta_Project_parent, ImplementationArtifact::meta, Project::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifact::meta_ArtifactContainer_parent, ImplementationArtifact::meta, ArtifactContainer::meta, "", "");

		::Uml::SetAssocRole(ImplementationArtifactReference::meta_ref, ImplementationArtifactReference::meta, ImplementationArtifact::meta, "referedbyImplementationArtifactReference");
		::Uml::SetAssocRole(ImplementationArtifactReference::meta_srcArtifactDependsOn, ImplementationArtifactReference::meta, ImplementationArtifact::meta, "dstArtifactDependsOn");
		ArtifactDependsOn::meta_srcArtifactDependsOn_end_ = ImplementationArtifact::meta_dstArtifactDependsOn_rev = ImplementationArtifactReference::meta_srcArtifactDependsOn;
		::Uml::SetAssocRole(ImplementationArtifactReference::meta_srcMonolithprimaryArtifact, ImplementationArtifactReference::meta, MonolithicImplementationBase::meta, "dstMonolithprimaryArtifact");
		MonolithprimaryArtifact::meta_srcMonolithprimaryArtifact_end_ = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact_rev = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact;
		::Uml::SetParentRole(ImplementationArtifactReference::meta_StubProject_parent, ImplementationArtifactReference::meta, StubProject::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ServantProject_parent, ImplementationArtifactReference::meta, ServantProject::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ExecutorProject_parent, ImplementationArtifactReference::meta, ExecutorProject::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ArtifactContainer_parent, ImplementationArtifactReference::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifactReference::meta_ImplementationContainer_parent, ImplementationArtifactReference::meta, ImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ImplementationArtifacts::meta_ArtifactContainer_children, ImplementationArtifacts::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(ImplementationArtifacts::meta_RootFolder_parent, ImplementationArtifacts::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(ImplementationCapability::meta_ComponentImplementationContainer_parent, ImplementationCapability::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetChildRole(ImplementationContainer::meta_InfoProperty_children, ImplementationContainer::meta, InfoProperty::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ConfigProperty_children, ImplementationContainer::meta, ConfigProperty::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_Property_children, ImplementationContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithprimaryArtifact_children, ImplementationContainer::meta, MonolithprimaryArtifact::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithDeployRequirement_children, ImplementationContainer::meta, MonolithDeployRequirement::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_MonolithExecParameter_children, ImplementationContainer::meta, MonolithExecParameter::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ImplementationArtifactReference_children, ImplementationContainer::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(ImplementationContainer::meta_ImplementationRequirement_children, ImplementationContainer::meta, ImplementationRequirement::meta, "", "");

		::Uml::SetAssocRole(ImplementationDependency::meta_srcImplementationDependsOn, ImplementationDependency::meta, ComponentImplementation::meta, "dstImplementationDependsOn");
		ImplementationDependsOn::meta_srcImplementationDependsOn_end_ = ComponentImplementation::meta_dstImplementationDependsOn_rev = ImplementationDependency::meta_srcImplementationDependsOn;
		::Uml::SetParentRole(ImplementationDependency::meta_ComponentImplementationContainer_parent, ImplementationDependency::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetParentRole(ImplementationDependsOn::meta_ComponentImplementationContainer_parent, ImplementationDependsOn::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(ImplementationRequirement::meta_srcMonolithDeployRequirement, ImplementationRequirement::meta, MonolithicImplementationBase::meta, "dstMonolithDeployRequirement");
		MonolithDeployRequirement::meta_srcMonolithDeployRequirement_end_ = MonolithicImplementationBase::meta_dstMonolithDeployRequirement_rev = ImplementationRequirement::meta_srcMonolithDeployRequirement;
		::Uml::SetParentRole(ImplementationRequirement::meta_ImplementationContainer_parent, ImplementationRequirement::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(Implements::meta_ComponentImplementationContainer_parent, Implements::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(InEventPort::meta_srcemit, InEventPort::meta, OutEventPort::meta, "dstemit");
		emit::meta_srcemit_end_ = OutEventPort::meta_dstemit_rev = InEventPort::meta_srcemit;
		::Uml::SetAssocRole(InEventPort::meta_ref, InEventPort::meta, Event::meta, "referedbyInEventPort");
		::Uml::SetAssocRole(InEventPort::meta_dstEventSinkDelegate, InEventPort::meta, InEventPort::meta, "srcEventSinkDelegate");
		EventSinkDelegate::meta_dstEventSinkDelegate_end_ = InEventPort::meta_srcEventSinkDelegate_rev = InEventPort::meta_dstEventSinkDelegate;
		::Uml::SetAssocRole(InEventPort::meta_srcEventSinkDelegate, InEventPort::meta, InEventPort::meta, "dstEventSinkDelegate");
		EventSinkDelegate::meta_srcEventSinkDelegate_end_ = InEventPort::meta_dstEventSinkDelegate_rev = InEventPort::meta_srcEventSinkDelegate;
		::Uml::SetAssocRole(InEventPort::meta_srcdeliverTo, InEventPort::meta, PublishConnector::meta, "dstdeliverTo");
		deliverTo::meta_srcdeliverTo_end_ = PublishConnector::meta_dstdeliverTo_rev = InEventPort::meta_srcdeliverTo;
		::Uml::SetAssocRole(InEventPort::meta_srcEventSinkPublish, InEventPort::meta, QoSConnector::meta, "dstEventSinkPublish");
		EventSinkPublish::meta_srcEventSinkPublish_end_ = QoSConnector::meta_dstEventSinkPublish_rev = InEventPort::meta_srcEventSinkPublish;
		::Uml::SetParentRole(InEventPort::meta_ComponentAssembly_parent, InEventPort::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(InParameter::meta_ref, InParameter::meta, MemberType::meta, "referedbyInParameter");
		::Uml::SetParentRole(InParameter::meta_OperationBase_parent, InParameter::meta, OperationBase::meta, "", "");

		::Uml::SetParentRole(InfoProperty::meta_ImplementationContainer_parent, InfoProperty::meta, ImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(Inheritable::meta_referedbyInherits, Inheritable::meta, Inherits::meta, "ref");
		::Uml::SetChildRole(Inheritable::meta_Inherits_children, Inheritable::meta, Inherits::meta, "", "");
		::Uml::SetChildRole(Inheritable::meta_ReadonlyAttribute_children, Inheritable::meta, ReadonlyAttribute::meta, "", "");

		::Uml::SetAssocRole(Inherits::meta_ref, Inherits::meta, Inheritable::meta, "referedbyInherits");
		::Uml::SetParentRole(Inherits::meta_Inheritable_parent, Inherits::meta, Inheritable::meta, "", "");

		::Uml::SetAssocRole(InitiatorRoleRef::meta_dstObjectAccessConn, InitiatorRoleRef::meta, PortRule::meta, "srcObjectAccessConn");
		ObjectAccessConn::meta_dstObjectAccessConn_end_ = PortRule::meta_srcObjectAccessConn_rev = InitiatorRoleRef::meta_dstObjectAccessConn;
		::Uml::SetAssocRole(InitiatorRoleRef::meta_dstAssemblyAccessConn, InitiatorRoleRef::meta, AssemblyRule::meta, "srcAssemblyAccessConn");
		AssemblyAccessConn::meta_dstAssemblyAccessConn_end_ = AssemblyRule::meta_srcAssemblyAccessConn_rev = InitiatorRoleRef::meta_dstAssemblyAccessConn;
		::Uml::SetAssocRole(InitiatorRoleRef::meta_dstComponentAccessConn, InitiatorRoleRef::meta, ComponentRule::meta, "srcComponentAccessConn");
		ComponentAccessConn::meta_dstComponentAccessConn_end_ = ComponentRule::meta_srcComponentAccessConn_rev = InitiatorRoleRef::meta_dstComponentAccessConn;
		::Uml::SetAssocRole(InitiatorRoleRef::meta_ref, InitiatorRoleRef::meta, Role::meta, "referedbyInitiatorRoleRef");
		::Uml::SetParentRole(InitiatorRoleRef::meta_Policy_parent, InitiatorRoleRef::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(InoutParameter::meta_ref, InoutParameter::meta, MemberType::meta, "referedbyInoutParameter");
		::Uml::SetParentRole(InoutParameter::meta_TwowayOperation_parent, InoutParameter::meta, TwowayOperation::meta, "", "");

		::Uml::SetParentRole(Input::meta_TopLevelBehavior_parent, Input::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(InputAction::meta_srcInput, InputAction::meta, SingleInputBase::meta, "dstInput");
		Input::meta_srcInput_end_ = SingleInputBase::meta_dstInput_rev = InputAction::meta_srcInput;

		::Uml::SetParentRole(InputEffect::meta_BehaviorModel_parent, InputEffect::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(InstanceMapping::meta_DeploymentPlan_parent, InstanceMapping::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Interconnect::meta_dstBridgeConnection, Interconnect::meta, Bridge::meta, "srcBridgeConnection");
		BridgeConnection::meta_dstBridgeConnection_end_ = Bridge::meta_srcBridgeConnection_rev = Interconnect::meta_dstBridgeConnection;
		::Uml::SetAssocRole(Interconnect::meta_srcInterconnectConnection, Interconnect::meta, Node::meta, "dstInterconnectConnection");
		InterconnectConnection::meta_srcInterconnectConnection_end_ = Node::meta_dstInterconnectConnection_rev = Interconnect::meta_srcInterconnectConnection;
		::Uml::SetChildRole(Interconnect::meta_Resource_children, Interconnect::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Interconnect::meta_Domain_parent, Interconnect::meta, Domain::meta, "", "");

		::Uml::SetParentRole(InterconnectConnection::meta_Domain_parent, InterconnectConnection::meta, Domain::meta, "", "");

		::Uml::SetParentRole(InterfaceClassificationConn::meta_Package_parent, InterfaceClassificationConn::meta, Package::meta, "", "");

		::Uml::SetChildRole(InterfaceDefinitions::meta_File_children, InterfaceDefinitions::meta, File::meta, "", "");
		::Uml::SetParentRole(InterfaceDefinitions::meta_RootFolder_parent, InterfaceDefinitions::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(InvokePortBase::meta_srcinvoke, InvokePortBase::meta, RequiredRequestPort::meta, "dstinvoke");
		invoke::meta_srcinvoke_end_ = RequiredRequestPort::meta_dstinvoke_rev = InvokePortBase::meta_srcinvoke;

		::Uml::SetAssocRole(Label::meta_srcLabelConnection, Label::meta, Member::meta, "dstLabelConnection");
		LabelConnection::meta_srcLabelConnection_end_ = Member::meta_dstLabelConnection_rev = Label::meta_srcLabelConnection;
		::Uml::SetParentRole(Label::meta_SwitchedAggregate_parent, Label::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetParentRole(LabelConnection::meta_SwitchedAggregate_parent, LabelConnection::meta, SwitchedAggregate::meta, "", "");

		::Uml::SetAssocRole(Lane::meta_dstLanePerThreadPool, Lane::meta, ThreadPool::meta, "srcLanePerThreadPool");
		LanePerThreadPool::meta_dstLanePerThreadPool_end_ = ThreadPool::meta_srcLanePerThreadPool_rev = Lane::meta_dstLanePerThreadPool;
		::Uml::SetParentRole(Lane::meta_RealTimeConfiguration_parent, Lane::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetParentRole(LanePerThreadPool::meta_RealTimeConfiguration_parent, LanePerThreadPool::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetAssocRole(LookupKey::meta_ref, LookupKey::meta, ValueObject::meta, "referedbyLookupKey");
		::Uml::SetParentRole(LookupKey::meta_ComponentFactory_parent, LookupKey::meta, ComponentFactory::meta, "", "");

		::Uml::SetParentRole(LookupOperation::meta_ComponentFactory_parent, LookupOperation::meta, ComponentFactory::meta, "", "");

		::Uml::SetAssocRole(LoopState::meta_dstLoopTransition, LoopState::meta, ActionBase::meta, "srcLoopTransition");
		LoopTransition::meta_dstLoopTransition_end_ = ActionBase::meta_srcLoopTransition_rev = LoopState::meta_dstLoopTransition;

		::Uml::SetParentRole(LoopTransition::meta_BehaviorModel_parent, LoopTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(MPC::meta_Workspaces_children, MPC::meta, Workspaces::meta, "", "");
		::Uml::SetChildRole(MPC::meta_Project_children, MPC::meta, Project::meta, "", "");
		::Uml::SetParentRole(MPC::meta_ComponentBuild_parent, MPC::meta, ComponentBuild::meta, "", "");

		::Uml::SetParentRole(MakeMemberPrivate::meta_ObjectByValue_parent, MakeMemberPrivate::meta, ObjectByValue::meta, "", "");

		::Uml::SetAssocRole(Manageable::meta_srcManagesComponent, Manageable::meta, ComponentFactory::meta, "dstManagesComponent");
		ManagesComponent::meta_srcManagesComponent_end_ = ComponentFactory::meta_dstManagesComponent_rev = Manageable::meta_srcManagesComponent;

		::Uml::SetParentRole(ManagesComponent::meta_Package_parent, ManagesComponent::meta, Package::meta, "", "");
		::Uml::SetParentRole(ManagesComponent::meta_File_parent, ManagesComponent::meta, File::meta, "", "");

		::Uml::SetAssocRole(Member::meta_dstLabelConnection, Member::meta, Label::meta, "srcLabelConnection");
		LabelConnection::meta_dstLabelConnection_end_ = Label::meta_srcLabelConnection_rev = Member::meta_dstLabelConnection;
		::Uml::SetAssocRole(Member::meta_ref, Member::meta, MemberType::meta, "referedbyMember");
		::Uml::SetAssocRole(Member::meta_dstMakeMemberPrivate, Member::meta, PrivateFlag::meta, "srcMakeMemberPrivate");
		MakeMemberPrivate::meta_dstMakeMemberPrivate_end_ = PrivateFlag::meta_srcMakeMemberPrivate_rev = Member::meta_dstMakeMemberPrivate;
		::Uml::SetParentRole(Member::meta_Exception_parent, Member::meta, Exception::meta, "", "");
		::Uml::SetParentRole(Member::meta_Aggregate_parent, Member::meta, Aggregate::meta, "", "");
		::Uml::SetParentRole(Member::meta_SwitchedAggregate_parent, Member::meta, SwitchedAggregate::meta, "", "");
		::Uml::SetParentRole(Member::meta_ObjectByValue_parent, Member::meta, ObjectByValue::meta, "", "");

		::Uml::SetAssocRole(MemberType::meta_referedbyCollection, MemberType::meta, Collection::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyAlias, MemberType::meta, Alias::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyBoxed, MemberType::meta, Boxed::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyMember, MemberType::meta, Member::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyAttributeMember, MemberType::meta, AttributeMember::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyInParameter, MemberType::meta, InParameter::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyOutParameter, MemberType::meta, OutParameter::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyReturnType, MemberType::meta, ReturnType::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyParameterType, MemberType::meta, ParameterType::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyInoutParameter, MemberType::meta, InoutParameter::meta, "ref");
		::Uml::SetAssocRole(MemberType::meta_referedbyDataType, MemberType::meta, DataType::meta, "ref");

		::Uml::SetParentRole(MetricConnection::meta_BenchmarkAnalysis_parent, MetricConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(MetricsBase::meta_dstWorkloadCharacteristics, MetricsBase::meta, TaskSet::meta, "srcWorkloadCharacteristics");
		WorkloadCharacteristics::meta_dstWorkloadCharacteristics_end_ = TaskSet::meta_srcWorkloadCharacteristics_rev = MetricsBase::meta_dstWorkloadCharacteristics;
		::Uml::SetAssocRole(MetricsBase::meta_srcMetricConnection, MetricsBase::meta, OperationRef::meta, "dstMetricConnection");
		MetricConnection::meta_srcMetricConnection_end_ = OperationRef::meta_dstMetricConnection_rev = MetricsBase::meta_srcMetricConnection;
		::Uml::SetAssocRole(MetricsBase::meta_srcBenchmarkCharacteristics, MetricsBase::meta, BenchmarkType::meta, "dstBenchmarkCharacteristics");
		BenchmarkCharacteristics::meta_srcBenchmarkCharacteristics_end_ = BenchmarkType::meta_dstBenchmarkCharacteristics_rev = MetricsBase::meta_srcBenchmarkCharacteristics;
		::Uml::SetChildRole(MetricsBase::meta_DataAnalysisBase_children, MetricsBase::meta, DataAnalysisBase::meta, "", "");
		::Uml::SetParentRole(MetricsBase::meta_BenchmarkAnalysis_parent, MetricsBase::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(MonitorableGroupAssociation::meta_FailOverUnit_parent, MonitorableGroupAssociation::meta, FailOverUnit::meta, "", "");

		::Uml::SetParentRole(MonolithDeployRequirement::meta_ImplementationContainer_parent, MonolithDeployRequirement::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(MonolithExecParameter::meta_ImplementationContainer_parent, MonolithExecParameter::meta, ImplementationContainer::meta, "", "");

		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithDeployRequirement, MonolithicImplementationBase::meta, ImplementationRequirement::meta, "srcMonolithDeployRequirement");
		MonolithDeployRequirement::meta_dstMonolithDeployRequirement_end_ = ImplementationRequirement::meta_srcMonolithDeployRequirement_rev = MonolithicImplementationBase::meta_dstMonolithDeployRequirement;
		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithExecParameter, MonolithicImplementationBase::meta, Property::meta, "srcMonolithExecParameter");
		MonolithExecParameter::meta_dstMonolithExecParameter_end_ = Property::meta_srcMonolithExecParameter_rev = MonolithicImplementationBase::meta_dstMonolithExecParameter;
		::Uml::SetAssocRole(MonolithicImplementationBase::meta_dstMonolithprimaryArtifact, MonolithicImplementationBase::meta, ImplementationArtifactReference::meta, "srcMonolithprimaryArtifact");
		MonolithprimaryArtifact::meta_dstMonolithprimaryArtifact_end_ = ImplementationArtifactReference::meta_srcMonolithprimaryArtifact_rev = MonolithicImplementationBase::meta_dstMonolithprimaryArtifact;

		::Uml::SetParentRole(MonolithprimaryArtifact::meta_ImplementationContainer_parent, MonolithprimaryArtifact::meta, ImplementationContainer::meta, "", "");

		::Uml::SetParentRole(MultiInput::meta_TopLevelBehavior_parent, MultiInput::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(MultiInputAction::meta_srcMultiInput, MultiInputAction::meta, MultiInputBase::meta, "dstMultiInput");
		MultiInput::meta_srcMultiInput_end_ = MultiInputBase::meta_dstMultiInput_rev = MultiInputAction::meta_srcMultiInput;

		::Uml::SetAssocRole(MultiInputBase::meta_dstMultiInput, MultiInputBase::meta, MultiInputAction::meta, "srcMultiInput");
		MultiInput::meta_dstMultiInput_end_ = MultiInputAction::meta_srcMultiInput_rev = MultiInputBase::meta_dstMultiInput;

		::Uml::SetParentRole(MultipleServiceRequests::meta_ServiceProvider_parent, MultipleServiceRequests::meta, ServiceProvider::meta, "", "");

		::Uml::SetParentRole(NamedType::meta_Package_parent, NamedType::meta, Package::meta, "", "");
		::Uml::SetParentRole(NamedType::meta_File_parent, NamedType::meta, File::meta, "", "");

		::Uml::SetParentRole(NoInheritable::meta_HasOperations_parent, NoInheritable::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(Node::meta_dstShares, Node::meta, SharedResource::meta, "srcShares");
		Shares::meta_dstShares_end_ = SharedResource::meta_srcShares_rev = Node::meta_dstShares;
		::Uml::SetAssocRole(Node::meta_dstInterconnectConnection, Node::meta, Interconnect::meta, "srcInterconnectConnection");
		InterconnectConnection::meta_dstInterconnectConnection_end_ = Interconnect::meta_srcInterconnectConnection_rev = Node::meta_dstInterconnectConnection;
		::Uml::SetAssocRole(Node::meta_referedbyNodeReference, Node::meta, NodeReference::meta, "ref");
		::Uml::SetAssocRole(Node::meta_referedbyHostReference, Node::meta, HostReference::meta, "ref");
		::Uml::SetChildRole(Node::meta_Resource_children, Node::meta, Resource::meta, "", "");
		::Uml::SetParentRole(Node::meta_Domain_parent, Node::meta, Domain::meta, "", "");

		::Uml::SetAssocRole(NodeReference::meta_srcInstanceMapping, NodeReference::meta, CollocationGroup::meta, "dstInstanceMapping");
		InstanceMapping::meta_srcInstanceMapping_end_ = CollocationGroup::meta_dstInstanceMapping_rev = NodeReference::meta_srcInstanceMapping;
		::Uml::SetAssocRole(NodeReference::meta_ref, NodeReference::meta, Node::meta, "referedbyNodeReference");
		::Uml::SetParentRole(NodeReference::meta_DeploymentPlan_parent, NodeReference::meta, DeploymentPlan::meta, "", "");

		::Uml::SetAssocRole(Object::meta_dstInterfaceClassificationConn, Object::meta, RequiredRights::meta, "srcInterfaceClassificationConn");
		InterfaceClassificationConn::meta_dstInterfaceClassificationConn_end_ = RequiredRights::meta_srcInterfaceClassificationConn_rev = Object::meta_dstInterfaceClassificationConn;
		::Uml::SetAssocRole(Object::meta_referedbySupports, Object::meta, Supports::meta, "ref");
		::Uml::SetAssocRole(Object::meta_referedbyTargetObjectRef, Object::meta, TargetObjectRef::meta, "ref");

		::Uml::SetParentRole(ObjectAccessConn::meta_Policy_parent, ObjectAccessConn::meta, Policy::meta, "", "");

		::Uml::SetChildRole(ObjectByValue::meta_FactoryOperation_children, ObjectByValue::meta, FactoryOperation::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_PrivateFlag_children, ObjectByValue::meta, PrivateFlag::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_MakeMemberPrivate_children, ObjectByValue::meta, MakeMemberPrivate::meta, "", "");
		::Uml::SetChildRole(ObjectByValue::meta_Member_children, ObjectByValue::meta, Member::meta, "", "");

		::Uml::SetParentRole(OnAssemblyConn::meta_Policy_parent, OnAssemblyConn::meta, Policy::meta, "", "");

		::Uml::SetParentRole(OnComponentConn::meta_Policy_parent, OnComponentConn::meta, Policy::meta, "", "");

		::Uml::SetParentRole(OnInterfaceConn::meta_Policy_parent, OnInterfaceConn::meta, Policy::meta, "", "");

		::Uml::SetParentRole(OnewayOperation::meta_HasOperations_parent, OnewayOperation::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(OperationBase::meta_dstOperationClassificationConn, OperationBase::meta, RequiredRights::meta, "srcOperationClassificationConn");
		OperationClassificationConn::meta_dstOperationClassificationConn_end_ = RequiredRights::meta_srcOperationClassificationConn_rev = OperationBase::meta_dstOperationClassificationConn;
		::Uml::SetAssocRole(OperationBase::meta_referedbyOperationRef, OperationBase::meta, OperationRef::meta, "ref");
		::Uml::SetChildRole(OperationBase::meta_InParameter_children, OperationBase::meta, InParameter::meta, "", "");
		::Uml::SetParentRole(OperationBase::meta_BenchmarkAnalysis_parent, OperationBase::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(OperationClassificationConn::meta_HasOperations_parent, OperationClassificationConn::meta, HasOperations::meta, "", "");

		::Uml::SetParentRole(OperationInvokeConn::meta_Policy_parent, OperationInvokeConn::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(OperationRef::meta_dstMetricConnection, OperationRef::meta, MetricsBase::meta, "srcMetricConnection");
		MetricConnection::meta_dstMetricConnection_end_ = MetricsBase::meta_srcMetricConnection_rev = OperationRef::meta_dstMetricConnection;
		::Uml::SetAssocRole(OperationRef::meta_dstTimerConnection, OperationRef::meta, TimeProbe::meta, "srcTimerConnection");
		TimerConnection::meta_dstTimerConnection_end_ = TimeProbe::meta_srcTimerConnection_rev = OperationRef::meta_dstTimerConnection;
		::Uml::SetAssocRole(OperationRef::meta_dstComponentOperation, OperationRef::meta, CompRef::meta, "srcComponentOperation");
		ComponentOperation::meta_dstComponentOperation_end_ = CompRef::meta_srcComponentOperation_rev = OperationRef::meta_dstComponentOperation;
		::Uml::SetAssocRole(OperationRef::meta_dstWorkLoadOperationConnection, OperationRef::meta, Task::meta, "srcWorkLoadOperationConnection");
		WorkLoadOperationConnection::meta_dstWorkLoadOperationConnection_end_ = Task::meta_srcWorkLoadOperationConnection_rev = OperationRef::meta_dstWorkLoadOperationConnection;
		::Uml::SetAssocRole(OperationRef::meta_ref, OperationRef::meta, OperationBase::meta, "referedbyOperationRef");
		::Uml::SetParentRole(OperationRef::meta_BenchmarkAnalysis_parent, OperationRef::meta, BenchmarkAnalysis::meta, "", "");
		::Uml::SetParentRole(OperationRef::meta_OperationSet_parent, OperationRef::meta, OperationSet::meta, "", "");

		::Uml::SetChildRole(OperationSet::meta_OperationRef_children, OperationSet::meta, OperationRef::meta, "", "");

		::Uml::SetAssocRole(OutEventPort::meta_ref, OutEventPort::meta, Event::meta, "referedbyOutEventPort");
		::Uml::SetAssocRole(OutEventPort::meta_dstEventSourcePublish, OutEventPort::meta, QoSConnector::meta, "srcEventSourcePublish");
		EventSourcePublish::meta_dstEventSourcePublish_end_ = QoSConnector::meta_srcEventSourcePublish_rev = OutEventPort::meta_dstEventSourcePublish;
		::Uml::SetAssocRole(OutEventPort::meta_dstpublish, OutEventPort::meta, PublishConnector::meta, "srcpublish");
		publish::meta_dstpublish_end_ = PublishConnector::meta_srcpublish_rev = OutEventPort::meta_dstpublish;
		::Uml::SetAssocRole(OutEventPort::meta_dstemit, OutEventPort::meta, InEventPort::meta, "srcemit");
		emit::meta_dstemit_end_ = InEventPort::meta_srcemit_rev = OutEventPort::meta_dstemit;
		::Uml::SetAssocRole(OutEventPort::meta_dstEventSourceDelegate, OutEventPort::meta, OutEventPort::meta, "srcEventSourceDelegate");
		EventSourceDelegate::meta_dstEventSourceDelegate_end_ = OutEventPort::meta_srcEventSourceDelegate_rev = OutEventPort::meta_dstEventSourceDelegate;
		::Uml::SetAssocRole(OutEventPort::meta_srcEventSourceDelegate, OutEventPort::meta, OutEventPort::meta, "dstEventSourceDelegate");
		EventSourceDelegate::meta_srcEventSourceDelegate_end_ = OutEventPort::meta_dstEventSourceDelegate_rev = OutEventPort::meta_srcEventSourceDelegate;
		::Uml::SetAssocRole(OutEventPort::meta_referedbyEventSourcePort, OutEventPort::meta, EventSourcePort::meta, "ref");
		::Uml::SetParentRole(OutEventPort::meta_ComponentAssembly_parent, OutEventPort::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(OutParameter::meta_ref, OutParameter::meta, MemberType::meta, "referedbyOutParameter");
		::Uml::SetParentRole(OutParameter::meta_TwowayOperation_parent, OutParameter::meta, TwowayOperation::meta, "", "");

		::Uml::SetChildRole(Package::meta_Package_children, Package::meta, Package::meta, "", "");
		::Uml::SetChildRole(Package::meta_Exception_children, Package::meta, Exception::meta, "", "");
		::Uml::SetChildRole(Package::meta_Constant_children, Package::meta, Constant::meta, "", "");
		::Uml::SetChildRole(Package::meta_NamedType_children, Package::meta, NamedType::meta, "", "");
		::Uml::SetChildRole(Package::meta_ComponentRef_children, Package::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(Package::meta_ManagesComponent_children, Package::meta, ManagesComponent::meta, "", "");
		::Uml::SetChildRole(Package::meta_RequiredRights_children, Package::meta, RequiredRights::meta, "", "");
		::Uml::SetChildRole(Package::meta_InterfaceClassificationConn_children, Package::meta, InterfaceClassificationConn::meta, "", "");
		::Uml::SetParentRole(Package::meta_Package_parent, Package::meta, Package::meta, "", "");
		::Uml::SetParentRole(Package::meta_File_parent, Package::meta, File::meta, "", "");

		::Uml::SetParentRole(PackageConfBasePackage::meta_PackageConfigurationContainer_parent, PackageConfBasePackage::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfConfigProperty::meta_PackageConfigurationContainer_parent, PackageConfConfigProperty::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfReference::meta_PackageConfigurationContainer_parent, PackageConfReference::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfSelectRequirement::meta_PackageConfigurationContainer_parent, PackageConfSelectRequirement::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfSpecializedConfig::meta_PackageConfigurationContainer_parent, PackageConfSpecializedConfig::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetParentRole(PackageConfigProperty::meta_PackageContainer_parent, PackageConfigProperty::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(PackageConfiguration::meta_referedbyPackageConfigurationReference, PackageConfiguration::meta, PackageConfigurationReference::meta, "ref");
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfBasePackage, PackageConfiguration::meta, ComponentPackage::meta, "srcPackageConfBasePackage");
		PackageConfBasePackage::meta_dstPackageConfBasePackage_end_ = ComponentPackage::meta_srcPackageConfBasePackage_rev = PackageConfiguration::meta_dstPackageConfBasePackage;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfReference, PackageConfiguration::meta, ComponentPackageReference::meta, "srcPackageConfReference");
		PackageConfReference::meta_dstPackageConfReference_end_ = ComponentPackageReference::meta_srcPackageConfReference_rev = PackageConfiguration::meta_dstPackageConfReference;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfSelectRequirement, PackageConfiguration::meta, Requirement::meta, "srcPackageConfSelectRequirement");
		PackageConfSelectRequirement::meta_dstPackageConfSelectRequirement_end_ = Requirement::meta_srcPackageConfSelectRequirement_rev = PackageConfiguration::meta_dstPackageConfSelectRequirement;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfConfigProperty, PackageConfiguration::meta, Property::meta, "srcPackageConfConfigProperty");
		PackageConfConfigProperty::meta_dstPackageConfConfigProperty_end_ = Property::meta_srcPackageConfConfigProperty_rev = PackageConfiguration::meta_dstPackageConfConfigProperty;
		::Uml::SetAssocRole(PackageConfiguration::meta_dstPackageConfSpecializedConfig, PackageConfiguration::meta, PackageConfigurationReference::meta, "srcPackageConfSpecializedConfig");
		PackageConfSpecializedConfig::meta_dstPackageConfSpecializedConfig_end_ = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig_rev = PackageConfiguration::meta_dstPackageConfSpecializedConfig;
		::Uml::SetParentRole(PackageConfiguration::meta_PackageConfigurationContainer_parent, PackageConfiguration::meta, PackageConfigurationContainer::meta, "", "");

		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfBasePackage_child, PackageConfigurationContainer::meta, PackageConfBasePackage::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfReference_child, PackageConfigurationContainer::meta, PackageConfReference::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_ComponentPackage_child, PackageConfigurationContainer::meta, ComponentPackage::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_ComponentPackageReference_child, PackageConfigurationContainer::meta, ComponentPackageReference::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfConfigProperty_children, PackageConfigurationContainer::meta, PackageConfConfigProperty::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfSelectRequirement_children, PackageConfigurationContainer::meta, PackageConfSelectRequirement::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_Requirement_children, PackageConfigurationContainer::meta, Requirement::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_Property_children, PackageConfigurationContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfSpecializedConfig_child, PackageConfigurationContainer::meta, PackageConfSpecializedConfig::meta, "", "");
		::Uml::SetChildRole(PackageConfigurationContainer::meta_PackageConfiguration_children, PackageConfigurationContainer::meta, PackageConfiguration::meta, "", "");
		::Uml::SetParentRole(PackageConfigurationContainer::meta_PackageConfigurations_parent, PackageConfigurationContainer::meta, PackageConfigurations::meta, "", "");

		::Uml::SetAssocRole(PackageConfigurationReference::meta_srcpackage, PackageConfigurationReference::meta, TopLevelPackage::meta, "dstpackage");
		package::meta_srcpackage_end_ = TopLevelPackage::meta_dstpackage_rev = PackageConfigurationReference::meta_srcpackage;
		::Uml::SetAssocRole(PackageConfigurationReference::meta_ref, PackageConfigurationReference::meta, PackageConfiguration::meta, "referedbyPackageConfigurationReference");
		::Uml::SetAssocRole(PackageConfigurationReference::meta_srcPackageConfSpecializedConfig, PackageConfigurationReference::meta, PackageConfiguration::meta, "dstPackageConfSpecializedConfig");
		PackageConfSpecializedConfig::meta_srcPackageConfSpecializedConfig_end_ = PackageConfiguration::meta_dstPackageConfSpecializedConfig_rev = PackageConfigurationReference::meta_srcPackageConfSpecializedConfig;
		::Uml::SetParentRole(PackageConfigurationReference::meta_TopLevelPackageContainer_parent, PackageConfigurationReference::meta, TopLevelPackageContainer::meta, "", "");

		::Uml::SetChildRole(PackageConfigurations::meta_PackageConfigurationContainer_children, PackageConfigurations::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(PackageConfigurations::meta_RootFolder_parent, PackageConfigurations::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(PackageContainer::meta_PackageInterface_child, PackageContainer::meta, PackageInterface::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_Implementation_children, PackageContainer::meta, Implementation::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentImplementationReference_children, PackageContainer::meta, ComponentImplementationReference::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentRef_child, PackageContainer::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_PackageConfigProperty_children, PackageContainer::meta, PackageConfigProperty::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_Property_children, PackageContainer::meta, Property::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_PackageInfoProperty_children, PackageContainer::meta, PackageInfoProperty::meta, "", "");
		::Uml::SetChildRole(PackageContainer::meta_ComponentPackage_child, PackageContainer::meta, ComponentPackage::meta, "", "");
		::Uml::SetParentRole(PackageContainer::meta_ComponentPackages_parent, PackageContainer::meta, ComponentPackages::meta, "", "");

		::Uml::SetParentRole(PackageInfoProperty::meta_PackageContainer_parent, PackageInfoProperty::meta, PackageContainer::meta, "", "");

		::Uml::SetParentRole(PackageInterface::meta_PackageContainer_parent, PackageInterface::meta, PackageContainer::meta, "", "");

		::Uml::SetAssocRole(ParameterType::meta_ref, ParameterType::meta, MemberType::meta, "referedbyParameterType");

		::Uml::SetAssocRole(Path::meta_dstPathProperty, Path::meta, Property::meta, "srcPathProperty");
		PathProperty::meta_dstPathProperty_end_ = Property::meta_srcPathProperty_rev = Path::meta_dstPathProperty;
		::Uml::SetAssocRole(Path::meta_referedbyPathReference, Path::meta, PathReference::meta, "ref");
		::Uml::SetAssocRole(Path::meta_referedbyPathRef, Path::meta, PathRef::meta, "ref");
		::Uml::SetChildRole(Path::meta_DstEdge_children, Path::meta, DstEdge::meta, "", "");
		::Uml::SetChildRole(Path::meta_ComponentRef_children, Path::meta, ComponentRef::meta, "", "");
		::Uml::SetChildRole(Path::meta_SrcEdge_children, Path::meta, SrcEdge::meta, "", "");
		::Uml::SetChildRole(Path::meta_EdgeProperty_children, Path::meta, EdgeProperty::meta, "", "");
		::Uml::SetChildRole(Path::meta_Edge_children, Path::meta, Edge::meta, "", "");
		::Uml::SetChildRole(Path::meta_Property_children, Path::meta, Property::meta, "", "");
		::Uml::SetChildRole(Path::meta_GraphVertex_children, Path::meta, GraphVertex::meta, "", "");
		::Uml::SetParentRole(Path::meta_Paths_parent, Path::meta, Paths::meta, "", "");

		::Uml::SetChildRole(PathDiagrams::meta_Paths_children, PathDiagrams::meta, Paths::meta, "", "");
		::Uml::SetParentRole(PathDiagrams::meta_RootFolder_parent, PathDiagrams::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(PathProperty::meta_Paths_parent, PathProperty::meta, Paths::meta, "", "");

		::Uml::SetAssocRole(PathRef::meta_srcSecuredPathConn, PathRef::meta, AssemblyRule::meta, "dstSecuredPathConn");
		SecuredPathConn::meta_srcSecuredPathConn_end_ = AssemblyRule::meta_dstSecuredPathConn_rev = PathRef::meta_srcSecuredPathConn;
		::Uml::SetAssocRole(PathRef::meta_ref, PathRef::meta, Path::meta, "referedbyPathRef");
		::Uml::SetParentRole(PathRef::meta_Policy_parent, PathRef::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(PathReference::meta_ref, PathReference::meta, Path::meta, "referedbyPathReference");
		::Uml::SetAssocRole(PathReference::meta_srcCriticalPath, PathReference::meta, ComponentAssembly::meta, "dstCriticalPath");
		CriticalPath::meta_srcCriticalPath_end_ = ComponentAssembly::meta_dstCriticalPath_rev = PathReference::meta_srcCriticalPath;
		::Uml::SetParentRole(PathReference::meta_ComponentImplementationContainer_parent, PathReference::meta, ComponentImplementationContainer::meta, "", "");

		::Uml::SetChildRole(Paths::meta_Path_children, Paths::meta, Path::meta, "", "");
		::Uml::SetChildRole(Paths::meta_PathProperty_children, Paths::meta, PathProperty::meta, "", "");
		::Uml::SetChildRole(Paths::meta_Property_children, Paths::meta, Property::meta, "", "");
		::Uml::SetParentRole(Paths::meta_PathDiagrams_parent, Paths::meta, PathDiagrams::meta, "", "");

		::Uml::SetParentRole(PeriodicEvent::meta_TopLevelBehavior_parent, PeriodicEvent::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetChildRole(Policy::meta_OnInterfaceConn_children, Policy::meta, OnInterfaceConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_AssemblyAccessConn_children, Policy::meta, AssemblyAccessConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_AttributeRef_children, Policy::meta, AttributeRef::meta, "", "");
		::Uml::SetChildRole(Policy::meta_SecuredPathConn_children, Policy::meta, SecuredPathConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_OperationInvokeConn_children, Policy::meta, OperationInvokeConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_ComponentAssemblyReference_children, Policy::meta, ComponentAssemblyReference::meta, "", "");
		::Uml::SetChildRole(Policy::meta_OnAssemblyConn_children, Policy::meta, OnAssemblyConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_AttributeManipulateConn_children, Policy::meta, AttributeManipulateConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_ResourceActionBase_children, Policy::meta, ResourceActionBase::meta, "", "");
		::Uml::SetChildRole(Policy::meta_RuleBase_children, Policy::meta, RuleBase::meta, "", "");
		::Uml::SetChildRole(Policy::meta_PathRef_children, Policy::meta, PathRef::meta, "", "");
		::Uml::SetChildRole(Policy::meta_ObjectAccessConn_children, Policy::meta, ObjectAccessConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_ComponentAccessConn_children, Policy::meta, ComponentAccessConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_InitiatorRoleRef_children, Policy::meta, InitiatorRoleRef::meta, "", "");
		::Uml::SetChildRole(Policy::meta_OnComponentConn_children, Policy::meta, OnComponentConn::meta, "", "");
		::Uml::SetChildRole(Policy::meta_TargetObjectRef_children, Policy::meta, TargetObjectRef::meta, "", "");
		::Uml::SetChildRole(Policy::meta_ComponentRef_children, Policy::meta, ComponentRef::meta, "", "");
		::Uml::SetParentRole(Policy::meta_PolicySet_parent, Policy::meta, PolicySet::meta, "", "");

		::Uml::SetParentRole(PolicyPerThreadPool::meta_RealTimeConfiguration_parent, PolicyPerThreadPool::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetChildRole(PolicySet::meta_Policy_children, PolicySet::meta, Policy::meta, "", "");
		::Uml::SetParentRole(PolicySet::meta_Security_parent, PolicySet::meta, Security::meta, "", "");

		::Uml::SetAssocRole(Port::meta_dstPortQoS, Port::meta, PortQoSCharacteristic::meta, "srcPortQoS");
		PortQoS::meta_dstPortQoS_end_ = PortQoSCharacteristic::meta_srcPortQoS_rev = Port::meta_dstPortQoS;
		::Uml::SetAssocRole(Port::meta_srcExternalDelegate, Port::meta, ExternalPortReference::meta, "dstExternalDelegate");
		ExternalDelegate::meta_srcExternalDelegate_end_ = ExternalPortReference::meta_dstExternalDelegate_rev = Port::meta_srcExternalDelegate;
		::Uml::SetParentRole(Port::meta_Component_parent, Port::meta, Component::meta, "", "");
		::Uml::SetParentRole(Port::meta_ConnectedComponent_parent, Port::meta, ConnectedComponent::meta, "", "");

		::Uml::SetParentRole(PortQoS::meta_ComponentAssembly_parent, PortQoS::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(PortQoSCharacteristic::meta_srcPortQoS, PortQoSCharacteristic::meta, Port::meta, "dstPortQoS");
		PortQoS::meta_srcPortQoS_end_ = Port::meta_dstPortQoS_rev = PortQoSCharacteristic::meta_srcPortQoS;
		::Uml::SetParentRole(PortQoSCharacteristic::meta_PortQoSComposition_ComponentImplementationContainer_parent, PortQoSCharacteristic::meta, ComponentImplementationContainer::meta, "PortQoSComposition", "");

		::Uml::SetAssocRole(PortRule::meta_referedbyPortRuleRef, PortRule::meta, PortRuleRef::meta, "ref");
		::Uml::SetAssocRole(PortRule::meta_srcObjectAccessConn, PortRule::meta, InitiatorRoleRef::meta, "dstObjectAccessConn");
		ObjectAccessConn::meta_srcObjectAccessConn_end_ = InitiatorRoleRef::meta_dstObjectAccessConn_rev = PortRule::meta_srcObjectAccessConn;
		::Uml::SetAssocRole(PortRule::meta_dstOperationInvokeConn, PortRule::meta, ResourceActionBase::meta, "srcOperationInvokeConn");
		OperationInvokeConn::meta_dstOperationInvokeConn_end_ = ResourceActionBase::meta_srcOperationInvokeConn_rev = PortRule::meta_dstOperationInvokeConn;
		::Uml::SetAssocRole(PortRule::meta_dstOnInterfaceConn, PortRule::meta, TargetObjectRef::meta, "srcOnInterfaceConn");
		OnInterfaceConn::meta_dstOnInterfaceConn_end_ = TargetObjectRef::meta_srcOnInterfaceConn_rev = PortRule::meta_dstOnInterfaceConn;

		::Uml::SetAssocRole(PortRuleRef::meta_ref, PortRuleRef::meta, PortRule::meta, "referedbyPortRuleRef");
		::Uml::SetParentRole(PortRuleRef::meta_SecurityQoS_parent, PortRuleRef::meta, SecurityQoS::meta, "", "");

		::Uml::SetAssocRole(PredefinedType::meta_referedbyVariable, PredefinedType::meta, Variable::meta, "ref");
		::Uml::SetParentRole(PredefinedType::meta_PredefinedTypes_parent, PredefinedType::meta, PredefinedTypes::meta, "", "");

		::Uml::SetChildRole(PredefinedTypes::meta_PredefinedType_children, PredefinedTypes::meta, PredefinedType::meta, "", "");
		::Uml::SetParentRole(PredefinedTypes::meta_RootFolder_parent, PredefinedTypes::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(PriorityBands::meta_RealTimeConfiguration_parent, PriorityBands::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetAssocRole(PriorityModelPolicy::meta_dstPolicyPerThreadPool, PriorityModelPolicy::meta, ThreadPool::meta, "srcPolicyPerThreadPool");
		PolicyPerThreadPool::meta_dstPolicyPerThreadPool_end_ = ThreadPool::meta_srcPolicyPerThreadPool_rev = PriorityModelPolicy::meta_dstPolicyPerThreadPool;
		::Uml::SetParentRole(PriorityModelPolicy::meta_RealTimeConfiguration_parent, PriorityModelPolicy::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetAssocRole(PrivateFlag::meta_srcMakeMemberPrivate, PrivateFlag::meta, Member::meta, "dstMakeMemberPrivate");
		MakeMemberPrivate::meta_srcMakeMemberPrivate_end_ = Member::meta_dstMakeMemberPrivate_rev = PrivateFlag::meta_srcMakeMemberPrivate;
		::Uml::SetParentRole(PrivateFlag::meta_ObjectByValue_parent, PrivateFlag::meta, ObjectByValue::meta, "", "");

		::Uml::SetAssocRole(Project::meta_setWorkspace, Project::meta, Workspaces::meta, "members");
		::Uml::SetChildRole(Project::meta_ExternalResources_children, Project::meta, ExternalResources::meta, "", "");
		::Uml::SetChildRole(Project::meta_ExtResourceConn_children, Project::meta, ExtResourceConn::meta, "", "");
		::Uml::SetChildRole(Project::meta_ComponentLib_children, Project::meta, ComponentLib::meta, "", "");
		::Uml::SetChildRole(Project::meta_ImplementationArtifact_children, Project::meta, ImplementationArtifact::meta, "", "");
		::Uml::SetParentRole(Project::meta_MPC_parent, Project::meta, MPC::meta, "", "");

		::Uml::SetAssocRole(Property::meta_srcAttributeValue, Property::meta, ReadonlyAttribute::meta, "dstAttributeValue");
		AttributeValue::meta_srcAttributeValue_end_ = ReadonlyAttribute::meta_dstAttributeValue_rev = Property::meta_srcAttributeValue;
		::Uml::SetAssocRole(Property::meta_srcAssemblyConfigProperty, Property::meta, Component::meta, "dstAssemblyConfigProperty");
		AssemblyConfigProperty::meta_srcAssemblyConfigProperty_end_ = Component::meta_dstAssemblyConfigProperty_rev = Property::meta_srcAssemblyConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcComponentConfigProperty, Property::meta, ComponentRef::meta, "dstComponentConfigProperty");
		ComponentConfigProperty::meta_srcComponentConfigProperty_end_ = ComponentRef::meta_dstComponentConfigProperty_rev = Property::meta_srcComponentConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcComponentInfoProperty, Property::meta, ComponentRef::meta, "dstComponentInfoProperty");
		ComponentInfoProperty::meta_srcComponentInfoProperty_end_ = ComponentRef::meta_dstComponentInfoProperty_rev = Property::meta_srcComponentInfoProperty;
		::Uml::SetAssocRole(Property::meta_dstPropertyConnector, Property::meta, Edge::meta, "srcPropertyConnector");
		EdgeProperty::meta_dstPropertyConnector_end_ = Edge::meta_srcPropertyConnector_rev = Property::meta_dstPropertyConnector;
		::Uml::SetAssocRole(Property::meta_srcPackageConfigProperty, Property::meta, ComponentPackage::meta, "dstPackageConfigProperty");
		PackageConfigProperty::meta_srcPackageConfigProperty_end_ = ComponentPackage::meta_dstPackageConfigProperty_rev = Property::meta_srcPackageConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcPackageInfoProperty, Property::meta, ComponentPackage::meta, "dstPackageInfoProperty");
		PackageInfoProperty::meta_srcPackageInfoProperty_end_ = ComponentPackage::meta_dstPackageInfoProperty_rev = Property::meta_srcPackageInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcArtifactExecParameter, Property::meta, ImplementationArtifact::meta, "dstArtifactExecParameter");
		ArtifactExecParameter::meta_srcArtifactExecParameter_end_ = ImplementationArtifact::meta_dstArtifactExecParameter_rev = Property::meta_srcArtifactExecParameter;
		::Uml::SetAssocRole(Property::meta_srcArtifactInfoProperty, Property::meta, ImplementationArtifact::meta, "dstArtifactInfoProperty");
		ArtifactInfoProperty::meta_srcArtifactInfoProperty_end_ = ImplementationArtifact::meta_dstArtifactInfoProperty_rev = Property::meta_srcArtifactInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcPackageConfConfigProperty, Property::meta, PackageConfiguration::meta, "dstPackageConfConfigProperty");
		PackageConfConfigProperty::meta_srcPackageConfConfigProperty_end_ = PackageConfiguration::meta_dstPackageConfConfigProperty_rev = Property::meta_srcPackageConfConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcAttributeMappingValue, Property::meta, AttributeMapping::meta, "dstAttributeMappingValue");
		AttributeMappingValue::meta_srcAttributeMappingValue_end_ = AttributeMapping::meta_dstAttributeMappingValue_rev = Property::meta_srcAttributeMappingValue;
		::Uml::SetAssocRole(Property::meta_srcPathProperty, Property::meta, Path::meta, "dstPathProperty");
		PathProperty::meta_srcPathProperty_end_ = Path::meta_dstPathProperty_rev = Property::meta_srcPathProperty;
		::Uml::SetAssocRole(Property::meta_srcConfigProperty, Property::meta, Implemenation::meta, "dstConfigProperty");
		ConfigProperty::meta_srcConfigProperty_end_ = Implemenation::meta_dstConfigProperty_rev = Property::meta_srcConfigProperty;
		::Uml::SetAssocRole(Property::meta_srcInfoProperty, Property::meta, Implemenation::meta, "dstInfoProperty");
		InfoProperty::meta_srcInfoProperty_end_ = Implemenation::meta_dstInfoProperty_rev = Property::meta_srcInfoProperty;
		::Uml::SetAssocRole(Property::meta_srcMonolithExecParameter, Property::meta, MonolithicImplementationBase::meta, "dstMonolithExecParameter");
		MonolithExecParameter::meta_srcMonolithExecParameter_end_ = MonolithicImplementationBase::meta_dstMonolithExecParameter_rev = Property::meta_srcMonolithExecParameter;
		::Uml::SetChildRole(Property::meta_DataType_child, Property::meta, DataType::meta, "", "");
		::Uml::SetParentRole(Property::meta_Domain_parent, Property::meta, Domain::meta, "", "");
		::Uml::SetParentRole(Property::meta_RequirementBase_parent, Property::meta, RequirementBase::meta, "", "");
		::Uml::SetParentRole(Property::meta_PackageContainer_parent, Property::meta, PackageContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_ComponentContainer_parent, Property::meta, ComponentContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_ArtifactContainer_parent, Property::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_PackageConfigurationContainer_parent, Property::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_DeploymentPlan_parent, Property::meta, DeploymentPlan::meta, "", "");
		::Uml::SetParentRole(Property::meta_Path_parent, Property::meta, Path::meta, "", "");
		::Uml::SetParentRole(Property::meta_Paths_parent, Property::meta, Paths::meta, "", "");
		::Uml::SetParentRole(Property::meta_ComponentAssembly_parent, Property::meta, ComponentAssembly::meta, "", "");
		::Uml::SetParentRole(Property::meta_ImplementationContainer_parent, Property::meta, ImplementationContainer::meta, "", "");
		::Uml::SetParentRole(Property::meta_BehaviorInputAction_parent, Property::meta, BehaviorInputAction::meta, "", "");
		::Uml::SetParentRole(Property::meta_ActionBase_parent, Property::meta, ActionBase::meta, "", "");
		::Uml::SetParentRole(Property::meta_QueryInputAction_parent, Property::meta, QueryInputAction::meta, "", "");
		::Uml::SetParentRole(Property::meta_RepicaGroupConfiguration_parent, Property::meta, RepicaGroupConfiguration::meta, "", "");

		::Uml::SetAssocRole(Provideable::meta_referedbyProvidedRequestPort, Provideable::meta, ProvidedRequestPort::meta, "ref");
		::Uml::SetAssocRole(Provideable::meta_referedbyRequiredRequestPort, Provideable::meta, RequiredRequestPort::meta, "ref");

		::Uml::SetAssocRole(ProvidedRequestPort::meta_srcSupportsDelegate, ProvidedRequestPort::meta, Supports::meta, "dstSupportsDelegate");
		SupportsDelegate::meta_srcSupportsDelegate_end_ = Supports::meta_dstSupportsDelegate_rev = ProvidedRequestPort::meta_srcSupportsDelegate;
		::Uml::SetAssocRole(ProvidedRequestPort::meta_ref, ProvidedRequestPort::meta, Provideable::meta, "referedbyProvidedRequestPort");
		::Uml::SetAssocRole(ProvidedRequestPort::meta_dstFacetDelegate, ProvidedRequestPort::meta, ProvidedRequestPort::meta, "srcFacetDelegate");
		FacetDelegate::meta_dstFacetDelegate_end_ = ProvidedRequestPort::meta_srcFacetDelegate_rev = ProvidedRequestPort::meta_dstFacetDelegate;
		::Uml::SetAssocRole(ProvidedRequestPort::meta_srcFacetDelegate, ProvidedRequestPort::meta, ProvidedRequestPort::meta, "dstFacetDelegate");
		FacetDelegate::meta_srcFacetDelegate_end_ = ProvidedRequestPort::meta_dstFacetDelegate_rev = ProvidedRequestPort::meta_srcFacetDelegate;
		::Uml::SetAssocRole(ProvidedRequestPort::meta_srcFacetInvoke, ProvidedRequestPort::meta, QoSConnector::meta, "dstFacetInvoke");
		FacetInvoke::meta_srcFacetInvoke_end_ = QoSConnector::meta_dstFacetInvoke_rev = ProvidedRequestPort::meta_srcFacetInvoke;
		::Uml::SetParentRole(ProvidedRequestPort::meta_ComponentAssembly_parent, ProvidedRequestPort::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(PublishConnector::meta_srcpublish, PublishConnector::meta, OutEventPort::meta, "dstpublish");
		publish::meta_srcpublish_end_ = OutEventPort::meta_dstpublish_rev = PublishConnector::meta_srcpublish;
		::Uml::SetAssocRole(PublishConnector::meta_dstdeliverTo, PublishConnector::meta, InEventPort::meta, "srcdeliverTo");
		deliverTo::meta_dstdeliverTo_end_ = InEventPort::meta_srcdeliverTo_rev = PublishConnector::meta_dstdeliverTo;
		::Uml::SetAssocRole(PublishConnector::meta_dstAssemblyDeployRequirement, PublishConnector::meta, Requirement::meta, "srcAssemblyDeployRequirement");
		AssemblyDeployRequirement::meta_dstAssemblyDeployRequirement_end_ = Requirement::meta_srcAssemblyDeployRequirement_rev = PublishConnector::meta_dstAssemblyDeployRequirement;
		::Uml::SetParentRole(PublishConnector::meta_ComponentAssembly_parent, PublishConnector::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(QoSCharRef::meta_ref, QoSCharRef::meta, QoSCharacteristicBase::meta, "referedbyQoSCharRef");

		::Uml::SetAssocRole(QoSCharacteristicBase::meta_referedbyQoSCharRef, QoSCharacteristicBase::meta, QoSCharRef::meta, "ref");
		::Uml::SetParentRole(QoSCharacteristicBase::meta_ComponentAssembly_parent, QoSCharacteristicBase::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(QoSConnector::meta_srcEventSourcePublish, QoSConnector::meta, OutEventPort::meta, "dstEventSourcePublish");
		EventSourcePublish::meta_srcEventSourcePublish_end_ = OutEventPort::meta_dstEventSourcePublish_rev = QoSConnector::meta_srcEventSourcePublish;
		::Uml::SetAssocRole(QoSConnector::meta_srcRecepInvoke, QoSConnector::meta, RequiredRequestPort::meta, "dstRecepInvoke");
		RecepInvoke::meta_srcRecepInvoke_end_ = RequiredRequestPort::meta_dstRecepInvoke_rev = QoSConnector::meta_srcRecepInvoke;
		::Uml::SetAssocRole(QoSConnector::meta_dstQoSReq, QoSConnector::meta, ConnectionQoSCharacteristic::meta, "srcQoSReq");
		QoSReq::meta_dstQoSReq_end_ = ConnectionQoSCharacteristic::meta_srcQoSReq_rev = QoSConnector::meta_dstQoSReq;
		::Uml::SetAssocRole(QoSConnector::meta_dstEventSinkPublish, QoSConnector::meta, InEventPort::meta, "srcEventSinkPublish");
		EventSinkPublish::meta_dstEventSinkPublish_end_ = InEventPort::meta_srcEventSinkPublish_rev = QoSConnector::meta_dstEventSinkPublish;
		::Uml::SetAssocRole(QoSConnector::meta_dstFacetInvoke, QoSConnector::meta, ProvidedRequestPort::meta, "srcFacetInvoke");
		FacetInvoke::meta_dstFacetInvoke_end_ = ProvidedRequestPort::meta_srcFacetInvoke_rev = QoSConnector::meta_dstFacetInvoke;
		::Uml::SetParentRole(QoSConnector::meta_ComponentAssembly_parent, QoSConnector::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(QoSReq::meta_ComponentAssembly_parent, QoSReq::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(QueryInput::meta_TopLevelBehavior_parent, QueryInput::meta, TopLevelBehavior::meta, "", "");

		::Uml::SetAssocRole(QueryInputAction::meta_srcQueryInput, QueryInputAction::meta, QueryInputBase::meta, "dstQueryInput");
		QueryInput::meta_srcQueryInput_end_ = QueryInputBase::meta_dstQueryInput_rev = QueryInputAction::meta_srcQueryInput;
		::Uml::SetChildRole(QueryInputAction::meta_Property_children, QueryInputAction::meta, Property::meta, "", "");
		::Uml::SetParentRole(QueryInputAction::meta_BehaviorModel_parent, QueryInputAction::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(QueryInputBase::meta_dstQueryInput, QueryInputBase::meta, QueryInputAction::meta, "srcQueryInput");
		QueryInput::meta_dstQueryInput_end_ = QueryInputAction::meta_srcQueryInput_rev = QueryInputBase::meta_dstQueryInput;

		::Uml::SetChildRole(RBAC::meta_Role_children, RBAC::meta, Role::meta, "", "");
		::Uml::SetChildRole(RBAC::meta_RightsAssignmentConn_children, RBAC::meta, RightsAssignmentConn::meta, "", "");
		::Uml::SetChildRole(RBAC::meta_RoleAssignmentConn_children, RBAC::meta, RoleAssignmentConn::meta, "", "");
		::Uml::SetChildRole(RBAC::meta_Subject_children, RBAC::meta, Subject::meta, "", "");
		::Uml::SetChildRole(RBAC::meta_GrantedRights_children, RBAC::meta, GrantedRights::meta, "", "");
		::Uml::SetChildRole(RBAC::meta_SecurityDomain_children, RBAC::meta, SecurityDomain::meta, "", "");
		::Uml::SetParentRole(RBAC::meta_Security_parent, RBAC::meta, Security::meta, "", "");

		::Uml::SetChildRole(RTRequirements::meta_ServiceProvider_child, RTRequirements::meta, ServiceProvider::meta, "", "");
		::Uml::SetChildRole(RTRequirements::meta_ServiceConsumer_child, RTRequirements::meta, ServiceConsumer::meta, "", "");

		::Uml::SetAssocRole(ReadonlyAttribute::meta_dstAttributeValue, ReadonlyAttribute::meta, Property::meta, "srcAttributeValue");
		AttributeValue::meta_dstAttributeValue_end_ = Property::meta_srcAttributeValue_rev = ReadonlyAttribute::meta_dstAttributeValue;
		::Uml::SetAssocRole(ReadonlyAttribute::meta_srcAttributeDelegate, ReadonlyAttribute::meta, AttributeMapping::meta, "dstAttributeDelegate");
		AttributeDelegate::meta_srcAttributeDelegate_end_ = AttributeMapping::meta_dstAttributeDelegate_rev = ReadonlyAttribute::meta_srcAttributeDelegate;
		::Uml::SetAssocRole(ReadonlyAttribute::meta_referedbyAttributeMapping, ReadonlyAttribute::meta, AttributeMapping::meta, "ref");
		::Uml::SetAssocRole(ReadonlyAttribute::meta_referedbyAttributeRef, ReadonlyAttribute::meta, AttributeRef::meta, "ref");
		::Uml::SetChildRole(ReadonlyAttribute::meta_GetException_children, ReadonlyAttribute::meta, GetException::meta, "", "");
		::Uml::SetChildRole(ReadonlyAttribute::meta_AttributeMember_child, ReadonlyAttribute::meta, AttributeMember::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_Inheritable_parent, ReadonlyAttribute::meta, Inheritable::meta, "", "");
		::Uml::SetParentRole(ReadonlyAttribute::meta_Component_parent, ReadonlyAttribute::meta, Component::meta, "", "");

		::Uml::SetChildRole(RealTimeConfiguration::meta_PriorityBands_children, RealTimeConfiguration::meta, PriorityBands::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_PriorityModelPolicy_child, RealTimeConfiguration::meta, PriorityModelPolicy::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_Lane_children, RealTimeConfiguration::meta, Lane::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_ThreadPool_child, RealTimeConfiguration::meta, ThreadPool::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_PolicyPerThreadPool_children, RealTimeConfiguration::meta, PolicyPerThreadPool::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_EnvironmentConf_child, RealTimeConfiguration::meta, EnvironmentConf::meta, "", "");
		::Uml::SetChildRole(RealTimeConfiguration::meta_LanePerThreadPool_children, RealTimeConfiguration::meta, LanePerThreadPool::meta, "", "");

		::Uml::SetChildRole(Realm::meta_Role_children, Realm::meta, Role::meta, "", "");
		::Uml::SetParentRole(Realm::meta_SecurityDomain_parent, Realm::meta, SecurityDomain::meta, "", "");

		::Uml::SetParentRole(ReceiverConnection::meta_CIAOEvents_parent, ReceiverConnection::meta, CIAOEvents::meta, "", "");

		::Uml::SetParentRole(RecepInvoke::meta_ComponentAssembly_parent, RecepInvoke::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(ReceptacleDelegate::meta_ComponentAssembly_parent, ReceptacleDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(RepicaGroupConfiguration::meta_srcMonitorable2RepG, RepicaGroupConfiguration::meta, FTMonitorable::meta, "dstMonitorable2RepG");
		MonitorableGroupAssociation::meta_srcMonitorable2RepG_end_ = FTMonitorable::meta_dstMonitorable2RepG_rev = RepicaGroupConfiguration::meta_srcMonitorable2RepG;
		::Uml::SetChildRole(RepicaGroupConfiguration::meta_Property_children, RepicaGroupConfiguration::meta, Property::meta, "", "");
		::Uml::SetParentRole(RepicaGroupConfiguration::meta_FailOverUnit_parent, RepicaGroupConfiguration::meta, FailOverUnit::meta, "", "");

		::Uml::SetAssocRole(RequiredRequestPort::meta_ref, RequiredRequestPort::meta, Provideable::meta, "referedbyRequiredRequestPort");
		::Uml::SetAssocRole(RequiredRequestPort::meta_dstRecepInvoke, RequiredRequestPort::meta, QoSConnector::meta, "srcRecepInvoke");
		RecepInvoke::meta_dstRecepInvoke_end_ = QoSConnector::meta_srcRecepInvoke_rev = RequiredRequestPort::meta_dstRecepInvoke;
		::Uml::SetAssocRole(RequiredRequestPort::meta_dstinvoke, RequiredRequestPort::meta, InvokePortBase::meta, "srcinvoke");
		invoke::meta_dstinvoke_end_ = InvokePortBase::meta_srcinvoke_rev = RequiredRequestPort::meta_dstinvoke;
		::Uml::SetAssocRole(RequiredRequestPort::meta_dstReceptacleDelegate, RequiredRequestPort::meta, RequiredRequestPort::meta, "srcReceptacleDelegate");
		ReceptacleDelegate::meta_dstReceptacleDelegate_end_ = RequiredRequestPort::meta_srcReceptacleDelegate_rev = RequiredRequestPort::meta_dstReceptacleDelegate;
		::Uml::SetAssocRole(RequiredRequestPort::meta_srcReceptacleDelegate, RequiredRequestPort::meta, RequiredRequestPort::meta, "dstReceptacleDelegate");
		ReceptacleDelegate::meta_srcReceptacleDelegate_end_ = RequiredRequestPort::meta_dstReceptacleDelegate_rev = RequiredRequestPort::meta_srcReceptacleDelegate;
		::Uml::SetParentRole(RequiredRequestPort::meta_ComponentAssembly_parent, RequiredRequestPort::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(RequiredRights::meta_srcInterfaceClassificationConn, RequiredRights::meta, ::CQML::Object::meta, "dstInterfaceClassificationConn");
		InterfaceClassificationConn::meta_srcInterfaceClassificationConn_end_ = ::CQML::Object::meta_dstInterfaceClassificationConn_rev = RequiredRights::meta_srcInterfaceClassificationConn;
		::Uml::SetAssocRole(RequiredRights::meta_srcOperationClassificationConn, RequiredRights::meta, OperationBase::meta, "dstOperationClassificationConn");
		OperationClassificationConn::meta_srcOperationClassificationConn_end_ = OperationBase::meta_dstOperationClassificationConn_rev = RequiredRights::meta_srcOperationClassificationConn;
		::Uml::SetParentRole(RequiredRights::meta_Package_parent, RequiredRights::meta, Package::meta, "", "");
		::Uml::SetParentRole(RequiredRights::meta_HasOperations_parent, RequiredRights::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(Requirement::meta_srcAssemblyselectRequirement, Requirement::meta, Component::meta, "dstAssemblyselectRequirement");
		AssemblyselectRequirement::meta_srcAssemblyselectRequirement_end_ = Component::meta_dstAssemblyselectRequirement_rev = Requirement::meta_srcAssemblyselectRequirement;
		::Uml::SetAssocRole(Requirement::meta_srcArtifactDeployRequirement, Requirement::meta, ImplementationArtifact::meta, "dstArtifactDeployRequirement");
		ArtifactDeployRequirement::meta_srcArtifactDeployRequirement_end_ = ImplementationArtifact::meta_dstArtifactDeployRequirement_rev = Requirement::meta_srcArtifactDeployRequirement;
		::Uml::SetAssocRole(Requirement::meta_srcPackageConfSelectRequirement, Requirement::meta, PackageConfiguration::meta, "dstPackageConfSelectRequirement");
		PackageConfSelectRequirement::meta_srcPackageConfSelectRequirement_end_ = PackageConfiguration::meta_dstPackageConfSelectRequirement_rev = Requirement::meta_srcPackageConfSelectRequirement;
		::Uml::SetAssocRole(Requirement::meta_srcAssemblyDeployRequirement, Requirement::meta, PublishConnector::meta, "dstAssemblyDeployRequirement");
		AssemblyDeployRequirement::meta_srcAssemblyDeployRequirement_end_ = PublishConnector::meta_dstAssemblyDeployRequirement_rev = Requirement::meta_srcAssemblyDeployRequirement;
		::Uml::SetParentRole(Requirement::meta_ArtifactContainer_parent, Requirement::meta, ArtifactContainer::meta, "", "");
		::Uml::SetParentRole(Requirement::meta_PackageConfigurationContainer_parent, Requirement::meta, PackageConfigurationContainer::meta, "", "");
		::Uml::SetParentRole(Requirement::meta_ComponentAssembly_parent, Requirement::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(RequirementBase::meta_Property_children, RequirementBase::meta, Property::meta, "", "");

		::Uml::SetChildRole(RequirementSatisfier::meta_SatisfierProperty_children, RequirementSatisfier::meta, SatisfierProperty::meta, "", "");

		::Uml::SetParentRole(Resource::meta_Bridge_parent, Resource::meta, Bridge::meta, "", "");
		::Uml::SetParentRole(Resource::meta_Interconnect_parent, Resource::meta, Interconnect::meta, "", "");
		::Uml::SetParentRole(Resource::meta_Node_parent, Resource::meta, Node::meta, "", "");

		::Uml::SetAssocRole(ResourceActionBase::meta_srcOperationInvokeConn, ResourceActionBase::meta, PortRule::meta, "dstOperationInvokeConn");
		OperationInvokeConn::meta_srcOperationInvokeConn_end_ = PortRule::meta_dstOperationInvokeConn_rev = ResourceActionBase::meta_srcOperationInvokeConn;
		::Uml::SetParentRole(ResourceActionBase::meta_Policy_parent, ResourceActionBase::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(ReturnType::meta_ref, ReturnType::meta, MemberType::meta, "referedbyReturnType");
		::Uml::SetParentRole(ReturnType::meta_TwowayOperation_parent, ReturnType::meta, TwowayOperation::meta, "", "");

		::Uml::SetParentRole(RightsAssignmentConn::meta_RBAC_parent, RightsAssignmentConn::meta, RBAC::meta, "", "");

		::Uml::SetAssocRole(Role::meta_referedbyInitiatorRoleRef, Role::meta, InitiatorRoleRef::meta, "ref");
		::Uml::SetAssocRole(Role::meta_srcRoleAssignmentConn, Role::meta, Subject::meta, "dstRoleAssignmentConn");
		RoleAssignmentConn::meta_srcRoleAssignmentConn_end_ = Subject::meta_dstRoleAssignmentConn_rev = Role::meta_srcRoleAssignmentConn;
		::Uml::SetAssocRole(Role::meta_dstRightsAssignmentConn, Role::meta, GrantedRights::meta, "srcRightsAssignmentConn");
		RightsAssignmentConn::meta_dstRightsAssignmentConn_end_ = GrantedRights::meta_srcRightsAssignmentConn_rev = Role::meta_dstRightsAssignmentConn;
		::Uml::SetParentRole(Role::meta_Realm_parent, Role::meta, Realm::meta, "", "");
		::Uml::SetParentRole(Role::meta_RBAC_parent, Role::meta, RBAC::meta, "", "");

		::Uml::SetParentRole(RoleAssignmentConn::meta_RBAC_parent, RoleAssignmentConn::meta, RBAC::meta, "", "");

		::Uml::SetChildRole(RootFolder::meta_FTDeployment_children, RootFolder::meta, FTDeployment::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_CIAOEvents_children, RootFolder::meta, CIAOEvents::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_Security_children, RootFolder::meta, Security::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentBuild_children, RootFolder::meta, ComponentBuild::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_InterfaceDefinitions_children, RootFolder::meta, InterfaceDefinitions::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PredefinedTypes_children, RootFolder::meta, PredefinedTypes::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_Targets_children, RootFolder::meta, Targets::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentPackages_children, RootFolder::meta, ComponentPackages::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_TopLevelPackages_children, RootFolder::meta, TopLevelPackages::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentTypes_children, RootFolder::meta, ComponentTypes::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ImplementationArtifacts_children, RootFolder::meta, ImplementationArtifacts::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PackageConfigurations_children, RootFolder::meta, PackageConfigurations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentImplementations_children, RootFolder::meta, ComponentImplementations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_DeploymentPlans_children, RootFolder::meta, DeploymentPlans::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentAnalyses_children, RootFolder::meta, ComponentAnalyses::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_PathDiagrams_children, RootFolder::meta, PathDiagrams::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_ComponentFactoryImplementations_children, RootFolder::meta, ComponentFactoryImplementations::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_WorkerLibraries_children, RootFolder::meta, WorkerLibraries::meta, "", "");
		::Uml::SetChildRole(RootFolder::meta_RootFolder_children, RootFolder::meta, RootFolder::meta, "", "");
		::Uml::SetParentRole(RootFolder::meta_RootFolder_parent, RootFolder::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(RootRiskAssociation::meta_DomainRiskGrouping_parent, RootRiskAssociation::meta, DomainRiskGrouping::meta, "", "");

		::Uml::SetAssocRole(RootRiskGroup::meta_dstRootRiskAssociation, RootRiskGroup::meta, SRGBase::meta, "srcRootRiskAssociation");
		RootRiskAssociation::meta_dstRootRiskAssociation_end_ = SRGBase::meta_srcRootRiskAssociation_rev = RootRiskGroup::meta_dstRootRiskAssociation;
		::Uml::SetChildRole(RootRiskGroup::meta_SharedResourceReference_children, RootRiskGroup::meta, SharedResourceReference::meta, "", "");
		::Uml::SetParentRole(RootRiskGroup::meta_DomainRiskGrouping_parent, RootRiskGroup::meta, DomainRiskGrouping::meta, "", "");

		::Uml::SetParentRole(RuleBase::meta_Policy_parent, RuleBase::meta, Policy::meta, "", "");

		::Uml::SetAssocRole(SRGBase::meta_srcRootRiskAssociation, SRGBase::meta, RootRiskGroup::meta, "dstRootRiskAssociation");
		RootRiskAssociation::meta_srcRootRiskAssociation_end_ = RootRiskGroup::meta_dstRootRiskAssociation_rev = SRGBase::meta_srcRootRiskAssociation;
		::Uml::SetAssocRole(SRGBase::meta_srcSRGRiskAssociation, SRGBase::meta, SharedRiskGroup::meta, "dstSRGRiskAssociation");
		SRGRiskAssociation::meta_srcSRGRiskAssociation_end_ = SharedRiskGroup::meta_dstSRGRiskAssociation_rev = SRGBase::meta_srcSRGRiskAssociation;
		::Uml::SetParentRole(SRGBase::meta_DomainRiskGrouping_parent, SRGBase::meta, DomainRiskGrouping::meta, "", "");

		::Uml::SetParentRole(SRGRiskAssociation::meta_DomainRiskGrouping_parent, SRGRiskAssociation::meta, DomainRiskGrouping::meta, "", "");

		::Uml::SetChildRole(SatisfierProperty::meta_DataType_child, SatisfierProperty::meta, DataType::meta, "", "");
		::Uml::SetParentRole(SatisfierProperty::meta_RequirementSatisfier_parent, SatisfierProperty::meta, RequirementSatisfier::meta, "", "");

		::Uml::SetParentRole(SecuredPathConn::meta_Policy_parent, SecuredPathConn::meta, Policy::meta, "", "");

		::Uml::SetChildRole(Security::meta_RBAC_children, Security::meta, RBAC::meta, "", "");
		::Uml::SetChildRole(Security::meta_PolicySet_children, Security::meta, PolicySet::meta, "", "");
		::Uml::SetParentRole(Security::meta_RootFolder_parent, Security::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(SecurityDomain::meta_Realm_children, SecurityDomain::meta, Realm::meta, "", "");
		::Uml::SetParentRole(SecurityDomain::meta_RBAC_parent, SecurityDomain::meta, RBAC::meta, "", "");

		::Uml::SetChildRole(SecurityQoS::meta_PortRuleRef_children, SecurityQoS::meta, PortRuleRef::meta, "", "");

		::Uml::SetParentRole(SenderConnection::meta_CIAOEvents_parent, SenderConnection::meta, CIAOEvents::meta, "", "");

		::Uml::SetChildRole(ServantProject::meta_ImplementationArtifactReference_child, ServantProject::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(ServantProject::meta_FileRef_child, ServantProject::meta, FileRef::meta, "", "");

		::Uml::SetParentRole(ServiceConsumer::meta_RTRequirements_parent, ServiceConsumer::meta, RTRequirements::meta, "", "");

		::Uml::SetParentRole(ServiceLevels::meta_ServiceProvider_parent, ServiceLevels::meta, ServiceProvider::meta, "", "");

		::Uml::SetChildRole(ServiceProvider::meta_MultipleServiceRequests_child, ServiceProvider::meta, MultipleServiceRequests::meta, "", "");
		::Uml::SetChildRole(ServiceProvider::meta_ServiceLevels_child, ServiceProvider::meta, ServiceLevels::meta, "", "");
		::Uml::SetParentRole(ServiceProvider::meta_RTRequirements_parent, ServiceProvider::meta, RTRequirements::meta, "", "");

		::Uml::SetAssocRole(SetException::meta_ref, SetException::meta, Exception::meta, "referedbySetException");
		::Uml::SetParentRole(SetException::meta_Attribute_parent, SetException::meta, Attribute::meta, "", "");

		::Uml::SetAssocRole(SharedComponentReference::meta_ref, SharedComponentReference::meta, ComponentRef::meta, "referedbySharedComponentReference");

		::Uml::SetAssocRole(SharedResource::meta_srcShares, SharedResource::meta, Node::meta, "dstShares");
		Shares::meta_srcShares_end_ = Node::meta_dstShares_rev = SharedResource::meta_srcShares;
		::Uml::SetAssocRole(SharedResource::meta_referedbySharedResourceReference, SharedResource::meta, SharedResourceReference::meta, "ref");
		::Uml::SetParentRole(SharedResource::meta_Domain_parent, SharedResource::meta, Domain::meta, "", "");

		::Uml::SetAssocRole(SharedResourceReference::meta_ref, SharedResourceReference::meta, SharedResource::meta, "referedbySharedResourceReference");
		::Uml::SetParentRole(SharedResourceReference::meta_RootRiskGroup_parent, SharedResourceReference::meta, RootRiskGroup::meta, "", "");
		::Uml::SetParentRole(SharedResourceReference::meta_SharedRiskGroup_parent, SharedResourceReference::meta, SharedRiskGroup::meta, "", "");

		::Uml::SetAssocRole(SharedRiskGroup::meta_dstSRGRiskAssociation, SharedRiskGroup::meta, SRGBase::meta, "srcSRGRiskAssociation");
		SRGRiskAssociation::meta_dstSRGRiskAssociation_end_ = SRGBase::meta_srcSRGRiskAssociation_rev = SharedRiskGroup::meta_dstSRGRiskAssociation;
		::Uml::SetChildRole(SharedRiskGroup::meta_SharedResourceReference_children, SharedRiskGroup::meta, SharedResourceReference::meta, "", "");

		::Uml::SetParentRole(Shares::meta_Domain_parent, Shares::meta, Domain::meta, "", "");

		::Uml::SetAssocRole(SingleInputBase::meta_dstInput, SingleInputBase::meta, InputAction::meta, "srcInput");
		Input::meta_dstInput_end_ = InputAction::meta_srcInput_rev = SingleInputBase::meta_dstInput;

		::Uml::SetParentRole(SrcEdge::meta_Path_parent, SrcEdge::meta, Path::meta, "", "");

		::Uml::SetAssocRole(State::meta_dstTransition, State::meta, ActionBase::meta, "srcTransition");
		Transition::meta_dstTransition_end_ = ActionBase::meta_srcTransition_rev = State::meta_dstTransition;
		::Uml::SetAssocRole(State::meta_dstTerminalTransition, State::meta, Terminal::meta, "srcTerminalTransition");
		TerminalTransition::meta_dstTerminalTransition_end_ = Terminal::meta_srcTerminalTransition_rev = State::meta_dstTerminalTransition;

		::Uml::SetAssocRole(StateBase::meta_srcInputEffect, StateBase::meta, BehaviorInputAction::meta, "dstInputEffect");
		InputEffect::meta_srcInputEffect_end_ = BehaviorInputAction::meta_dstInputEffect_rev = StateBase::meta_srcInputEffect;
		::Uml::SetAssocRole(StateBase::meta_srcEffect, StateBase::meta, ActionBase::meta, "dstEffect");
		Effect::meta_srcEffect_end_ = ActionBase::meta_dstEffect_rev = StateBase::meta_srcEffect;
		::Uml::SetAssocRole(StateBase::meta_dstFinish, StateBase::meta, BehaviorInputAction::meta, "srcFinish");
		Finish::meta_dstFinish_end_ = BehaviorInputAction::meta_srcFinish_rev = StateBase::meta_dstFinish;
		::Uml::SetAssocRole(StateBase::meta_srcTerminalEffect, StateBase::meta, Terminal::meta, "dstTerminalEffect");
		TerminalEffect::meta_srcTerminalEffect_end_ = Terminal::meta_dstTerminalEffect_rev = StateBase::meta_srcTerminalEffect;
		::Uml::SetParentRole(StateBase::meta_BehaviorModel_parent, StateBase::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(StubProject::meta_ImplementationArtifactReference_child, StubProject::meta, ImplementationArtifactReference::meta, "", "");
		::Uml::SetChildRole(StubProject::meta_FileRef_child, StubProject::meta, FileRef::meta, "", "");

		::Uml::SetAssocRole(Subject::meta_dstRoleAssignmentConn, Subject::meta, Role::meta, "srcRoleAssignmentConn");
		RoleAssignmentConn::meta_dstRoleAssignmentConn_end_ = Role::meta_srcRoleAssignmentConn_rev = Subject::meta_dstRoleAssignmentConn;
		::Uml::SetParentRole(Subject::meta_Group_parent, Subject::meta, Group::meta, "", "");
		::Uml::SetParentRole(Subject::meta_RBAC_parent, Subject::meta, RBAC::meta, "", "");

		::Uml::SetParentRole(SupplierBehavior::meta_eventServiceConfiguration_parent, SupplierBehavior::meta, eventServiceConfiguration::meta, "", "");

		::Uml::SetAssocRole(Supports::meta_ref, Supports::meta, ::CQML::Object::meta, "referedbySupports");
		::Uml::SetAssocRole(Supports::meta_dstSupportsDelegate, Supports::meta, ProvidedRequestPort::meta, "srcSupportsDelegate");
		SupportsDelegate::meta_dstSupportsDelegate_end_ = ProvidedRequestPort::meta_srcSupportsDelegate_rev = Supports::meta_dstSupportsDelegate;
		::Uml::SetParentRole(Supports::meta_SupportsInterfaces_parent, Supports::meta, SupportsInterfaces::meta, "", "");

		::Uml::SetParentRole(SupportsDelegate::meta_ComponentAssembly_parent, SupportsDelegate::meta, ComponentAssembly::meta, "", "");

		::Uml::SetChildRole(SupportsInterfaces::meta_Supports_children, SupportsInterfaces::meta, Supports::meta, "", "");

		::Uml::SetChildRole(SwitchedAggregate::meta_LabelConnection_children, SwitchedAggregate::meta, LabelConnection::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Label_children, SwitchedAggregate::meta, Label::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Member_children, SwitchedAggregate::meta, Member::meta, "", "");
		::Uml::SetChildRole(SwitchedAggregate::meta_Discriminator_child, SwitchedAggregate::meta, Discriminator::meta, "", "");

		::Uml::SetAssocRole(TargetObjectRef::meta_ref, TargetObjectRef::meta, ::CQML::Object::meta, "referedbyTargetObjectRef");
		::Uml::SetAssocRole(TargetObjectRef::meta_srcOnInterfaceConn, TargetObjectRef::meta, PortRule::meta, "dstOnInterfaceConn");
		OnInterfaceConn::meta_srcOnInterfaceConn_end_ = PortRule::meta_dstOnInterfaceConn_rev = TargetObjectRef::meta_srcOnInterfaceConn;
		::Uml::SetParentRole(TargetObjectRef::meta_Policy_parent, TargetObjectRef::meta, Policy::meta, "", "");

		::Uml::SetChildRole(Targets::meta_Domain_children, Targets::meta, Domain::meta, "", "");
		::Uml::SetParentRole(Targets::meta_RootFolder_parent, Targets::meta, RootFolder::meta, "", "");

		::Uml::SetAssocRole(Task::meta_srcWorkLoadOperationConnection, Task::meta, OperationRef::meta, "dstWorkLoadOperationConnection");
		WorkLoadOperationConnection::meta_srcWorkLoadOperationConnection_end_ = OperationRef::meta_dstWorkLoadOperationConnection_rev = Task::meta_srcWorkLoadOperationConnection;
		::Uml::SetAssocRole(Task::meta_setTaskSet, Task::meta, TaskSet::meta, "members");
		::Uml::SetParentRole(Task::meta_BenchmarkAnalysis_parent, Task::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(TaskSet::meta_srcWorkloadCharacteristics, TaskSet::meta, MetricsBase::meta, "dstWorkloadCharacteristics");
		WorkloadCharacteristics::meta_srcWorkloadCharacteristics_end_ = MetricsBase::meta_dstWorkloadCharacteristics_rev = TaskSet::meta_srcWorkloadCharacteristics;
		::Uml::SetAssocRole(TaskSet::meta_members, TaskSet::meta, Task::meta, "setTaskSet");
		::Uml::SetParentRole(TaskSet::meta_BenchmarkAnalysis_parent, TaskSet::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Terminal::meta_srcTerminalTransition, Terminal::meta, State::meta, "dstTerminalTransition");
		TerminalTransition::meta_srcTerminalTransition_end_ = State::meta_dstTerminalTransition_rev = Terminal::meta_srcTerminalTransition;
		::Uml::SetAssocRole(Terminal::meta_dstTerminalEffect, Terminal::meta, StateBase::meta, "srcTerminalEffect");
		TerminalEffect::meta_dstTerminalEffect_end_ = StateBase::meta_srcTerminalEffect_rev = Terminal::meta_dstTerminalEffect;
		::Uml::SetParentRole(Terminal::meta_BehaviorModel_parent, Terminal::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(TerminalEffect::meta_BehaviorModel_parent, TerminalEffect::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(TerminalTransition::meta_BehaviorModel_parent, TerminalTransition::meta, BehaviorModel::meta, "", "");

		::Uml::SetAssocRole(ThreadPool::meta_srcLanePerThreadPool, ThreadPool::meta, Lane::meta, "dstLanePerThreadPool");
		LanePerThreadPool::meta_srcLanePerThreadPool_end_ = Lane::meta_dstLanePerThreadPool_rev = ThreadPool::meta_srcLanePerThreadPool;
		::Uml::SetAssocRole(ThreadPool::meta_srcPolicyPerThreadPool, ThreadPool::meta, PriorityModelPolicy::meta, "dstPolicyPerThreadPool");
		PolicyPerThreadPool::meta_srcPolicyPerThreadPool_end_ = PriorityModelPolicy::meta_dstPolicyPerThreadPool_rev = ThreadPool::meta_srcPolicyPerThreadPool;
		::Uml::SetParentRole(ThreadPool::meta_RealTimeConfiguration_parent, ThreadPool::meta, RealTimeConfiguration::meta, "", "");

		::Uml::SetAssocRole(TimeProbe::meta_srcTimerConnection, TimeProbe::meta, OperationRef::meta, "dstTimerConnection");
		TimerConnection::meta_srcTimerConnection_end_ = OperationRef::meta_dstTimerConnection_rev = TimeProbe::meta_srcTimerConnection;
		::Uml::SetAssocRole(TimeProbe::meta_srcTimerEventSinkConn, TimeProbe::meta, EventRef::meta, "dstTimerEventSinkConn");
		TimerEventSinkConn::meta_srcTimerEventSinkConn_end_ = EventRef::meta_dstTimerEventSinkConn_rev = TimeProbe::meta_srcTimerEventSinkConn;
		::Uml::SetParentRole(TimeProbe::meta_BenchmarkAnalysis_parent, TimeProbe::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(TimerConnection::meta_BenchmarkAnalysis_parent, TimerConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetParentRole(TimerEventSinkConn::meta_BenchmarkAnalysis_parent, TimerEventSinkConn::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetChildRole(TopLevelBehavior::meta_MultiInput_children, TopLevelBehavior::meta, MultiInput::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_Input_children, TopLevelBehavior::meta, Input::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_QueryInput_children, TopLevelBehavior::meta, QueryInput::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_PeriodicEvent_children, TopLevelBehavior::meta, PeriodicEvent::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_ApplicationTask_children, TopLevelBehavior::meta, ApplicationTask::meta, "", "");
		::Uml::SetChildRole(TopLevelBehavior::meta_Environment_child, TopLevelBehavior::meta, Environment::meta, "", "");

		::Uml::SetAssocRole(TopLevelPackage::meta_dstpackage, TopLevelPackage::meta, PackageConfigurationReference::meta, "srcpackage");
		package::meta_dstpackage_end_ = PackageConfigurationReference::meta_srcpackage_rev = TopLevelPackage::meta_dstpackage;
		::Uml::SetParentRole(TopLevelPackage::meta_TopLevelPackageContainer_parent, TopLevelPackage::meta, TopLevelPackageContainer::meta, "", "");

		::Uml::SetChildRole(TopLevelPackageContainer::meta_PackageConfigurationReference_child, TopLevelPackageContainer::meta, PackageConfigurationReference::meta, "", "");
		::Uml::SetChildRole(TopLevelPackageContainer::meta_TopLevelPackage_child, TopLevelPackageContainer::meta, TopLevelPackage::meta, "", "");
		::Uml::SetChildRole(TopLevelPackageContainer::meta_package_child, TopLevelPackageContainer::meta, package::meta, "", "");
		::Uml::SetParentRole(TopLevelPackageContainer::meta_TopLevelPackages_parent, TopLevelPackageContainer::meta, TopLevelPackages::meta, "", "");

		::Uml::SetChildRole(TopLevelPackages::meta_TopLevelPackageContainer_children, TopLevelPackages::meta, TopLevelPackageContainer::meta, "", "");
		::Uml::SetParentRole(TopLevelPackages::meta_RootFolder_parent, TopLevelPackages::meta, RootFolder::meta, "", "");

		::Uml::SetParentRole(Transition::meta_BehaviorModel_parent, Transition::meta, BehaviorModel::meta, "", "");

		::Uml::SetChildRole(TwowayOperation::meta_InoutParameter_children, TwowayOperation::meta, InoutParameter::meta, "", "");
		::Uml::SetChildRole(TwowayOperation::meta_OutParameter_children, TwowayOperation::meta, OutParameter::meta, "", "");
		::Uml::SetChildRole(TwowayOperation::meta_ReturnType_child, TwowayOperation::meta, ReturnType::meta, "", "");
		::Uml::SetParentRole(TwowayOperation::meta_HasOperations_parent, TwowayOperation::meta, HasOperations::meta, "", "");

		::Uml::SetAssocRole(ValueObject::meta_referedbyLookupKey, ValueObject::meta, LookupKey::meta, "ref");

		::Uml::SetAssocRole(Variable::meta_ref, Variable::meta, PredefinedType::meta, "referedbyVariable");
		::Uml::SetParentRole(Variable::meta_BehaviorModel_parent, Variable::meta, BehaviorModel::meta, "", "");

		::Uml::SetParentRole(WorkLoadOperationConnection::meta_BenchmarkAnalysis_parent, WorkLoadOperationConnection::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Worker::meta_referedbyWorkerType, Worker::meta, WorkerType::meta, "ref");
		::Uml::SetChildRole(Worker::meta_Action_children, Worker::meta, Action::meta, "", "");
		::Uml::SetParentRole(Worker::meta_WorkerPackageBase_parent, Worker::meta, WorkerPackageBase::meta, "", "");

		::Uml::SetChildRole(WorkerFile::meta_WorkerPackage_children, WorkerFile::meta, WorkerPackage::meta, "", "");
		::Uml::SetParentRole(WorkerFile::meta_WorkerLibrary_parent, WorkerFile::meta, WorkerLibrary::meta, "", "");

		::Uml::SetChildRole(WorkerLibraries::meta_WorkerLibrary_children, WorkerLibraries::meta, WorkerLibrary::meta, "", "");
		::Uml::SetParentRole(WorkerLibraries::meta_RootFolder_parent, WorkerLibraries::meta, RootFolder::meta, "", "");

		::Uml::SetChildRole(WorkerLibrary::meta_WorkerFile_children, WorkerLibrary::meta, WorkerFile::meta, "", "");
		::Uml::SetParentRole(WorkerLibrary::meta_WorkerLibraries_parent, WorkerLibrary::meta, WorkerLibraries::meta, "", "");

		::Uml::SetChildRole(WorkerPackage::meta_WorkerPackage_children, WorkerPackage::meta, WorkerPackage::meta, "", "");
		::Uml::SetParentRole(WorkerPackage::meta_WorkerFile_parent, WorkerPackage::meta, WorkerFile::meta, "", "");
		::Uml::SetParentRole(WorkerPackage::meta_WorkerPackage_parent, WorkerPackage::meta, WorkerPackage::meta, "", "");

		::Uml::SetChildRole(WorkerPackageBase::meta_Worker_children, WorkerPackageBase::meta, Worker::meta, "", "");

		::Uml::SetAssocRole(WorkerType::meta_ref, WorkerType::meta, Worker::meta, "referedbyWorkerType");
		::Uml::SetParentRole(WorkerType::meta_Component_parent, WorkerType::meta, Component::meta, "", "");

		::Uml::SetParentRole(WorkloadCharacteristics::meta_BenchmarkAnalysis_parent, WorkloadCharacteristics::meta, BenchmarkAnalysis::meta, "", "");

		::Uml::SetAssocRole(Workspaces::meta_members, Workspaces::meta, Project::meta, "setWorkspace");
		::Uml::SetParentRole(Workspaces::meta_MPC_parent, Workspaces::meta, MPC::meta, "", "");

		::Uml::SetParentRole(deliverTo::meta_ComponentAssembly_parent, deliverTo::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(emit::meta_ComponentAssembly_parent, emit::meta, ComponentAssembly::meta, "", "");

		::Uml::SetAssocRole(eventServiceConfiguration::meta_srcReceiverConnection, eventServiceConfiguration::meta, EventChannelCommunicationPoint::meta, "dstReceiverConnection");
		ReceiverConnection::meta_srcReceiverConnection_end_ = EventChannelCommunicationPoint::meta_dstReceiverConnection_rev = eventServiceConfiguration::meta_srcReceiverConnection;
		::Uml::SetAssocRole(eventServiceConfiguration::meta_dstSenderConnection, eventServiceConfiguration::meta, EventChannelCommunicationPoint::meta, "srcSenderConnection");
		SenderConnection::meta_dstSenderConnection_end_ = EventChannelCommunicationPoint::meta_srcSenderConnection_rev = eventServiceConfiguration::meta_dstSenderConnection;
		::Uml::SetChildRole(eventServiceConfiguration::meta_ConsumerBehavior_child, eventServiceConfiguration::meta, ConsumerBehavior::meta, "", "");
		::Uml::SetChildRole(eventServiceConfiguration::meta_EventChannelFactory_child, eventServiceConfiguration::meta, EventChannelFactory::meta, "", "");
		::Uml::SetChildRole(eventServiceConfiguration::meta_SupplierBehavior_child, eventServiceConfiguration::meta, SupplierBehavior::meta, "", "");
		::Uml::SetChildRole(eventServiceConfiguration::meta_Filter_children, eventServiceConfiguration::meta, Filter::meta, "", "");
		::Uml::SetParentRole(eventServiceConfiguration::meta_CIAOEvents_parent, eventServiceConfiguration::meta, CIAOEvents::meta, "", "");

		::Uml::SetParentRole(invoke::meta_ComponentAssembly_parent, invoke::meta, ComponentAssembly::meta, "", "");

		::Uml::SetParentRole(package::meta_TopLevelPackageContainer_parent, package::meta, TopLevelPackageContainer::meta, "", "");

		::Uml::SetParentRole(publish::meta_ComponentAssembly_parent, publish::meta, ComponentAssembly::meta, "", "");

	}

	Visitor::~Visitor() {}

	void Visitor::Visit_Project(const Project &) {}
	void Visitor::Visit_ExternalResources(const ExternalResources &) {}
	void Visitor::Visit_ExtResourceConn(const ExtResourceConn &) {}
	void Visitor::Visit_StubProject(const StubProject &) {}
	void Visitor::Visit_ServantProject(const ServantProject &) {}
	void Visitor::Visit_ExecutorProject(const ExecutorProject &) {}
	void Visitor::Visit_MPC(const MPC &) {}
	void Visitor::Visit_Workspaces(const Workspaces &) {}
	void Visitor::Visit_Package(const Package &) {}
	void Visitor::Visit_File(const File &) {}
	void Visitor::Visit_Exception(const Exception &) {}
	void Visitor::Visit_ExceptionRef(const ExceptionRef &) {}
	void Visitor::Visit_FileRef(const FileRef &) {}
	void Visitor::Visit_Enum(const Enum &) {}
	void Visitor::Visit_Constant(const Constant &) {}
	void Visitor::Visit_Boolean(const Boolean &) {}
	void Visitor::Visit_Byte(const Byte &) {}
	void Visitor::Visit_ShortInteger(const ShortInteger &) {}
	void Visitor::Visit_LongInteger(const LongInteger &) {}
	void Visitor::Visit_RealNumber(const RealNumber &) {}
	void Visitor::Visit_String(const String &) {}
	void Visitor::Visit_GenericObject(const GenericObject &) {}
	void Visitor::Visit_GenericValueObject(const GenericValueObject &) {}
	void Visitor::Visit_GenericValue(const GenericValue &) {}
	void Visitor::Visit_TypeEncoding(const TypeEncoding &) {}
	void Visitor::Visit_TypeKind(const TypeKind &) {}
	void Visitor::Visit_EnumValue(const EnumValue &) {}
	void Visitor::Visit_Aggregate(const Aggregate &) {}
	void Visitor::Visit_SwitchedAggregate(const SwitchedAggregate &) {}
	void Visitor::Visit_Label(const Label &) {}
	void Visitor::Visit_LabelConnection(const LabelConnection &) {}
	void Visitor::Visit_Discriminator(const Discriminator &) {}
	void Visitor::Visit_Boxed(const Boxed &) {}
	void Visitor::Visit_Component(const Component &) {}
	void Visitor::Visit_Collection(const Collection &) {}
	void Visitor::Visit_Alias(const Alias &) {}
	void Visitor::Visit_Member(const Member &) {}
	void Visitor::Visit_Object(const Object &) {}
	void Visitor::Visit_Inherits(const Inherits &) {}
	void Visitor::Visit_Event(const Event &) {}
	void Visitor::Visit_ValueObject(const ValueObject &) {}
	void Visitor::Visit_ComponentFactory(const ComponentFactory &) {}
	void Visitor::Visit_Supports(const Supports &) {}
	void Visitor::Visit_ReadonlyAttribute(const ReadonlyAttribute &) {}
	void Visitor::Visit_Attribute(const Attribute &) {}
	void Visitor::Visit_LookupKey(const LookupKey &) {}
	void Visitor::Visit_SetException(const SetException &) {}
	void Visitor::Visit_GetException(const GetException &) {}
	void Visitor::Visit_PrivateFlag(const PrivateFlag &) {}
	void Visitor::Visit_MakeMemberPrivate(const MakeMemberPrivate &) {}
	void Visitor::Visit_AttributeMember(const AttributeMember &) {}
	void Visitor::Visit_OnewayOperation(const OnewayOperation &) {}
	void Visitor::Visit_FactoryOperation(const FactoryOperation &) {}
	void Visitor::Visit_LookupOperation(const LookupOperation &) {}
	void Visitor::Visit_TwowayOperation(const TwowayOperation &) {}
	void Visitor::Visit_InParameter(const InParameter &) {}
	void Visitor::Visit_OutParameter(const OutParameter &) {}
	void Visitor::Visit_ReturnType(const ReturnType &) {}
	void Visitor::Visit_InoutParameter(const InoutParameter &) {}
	void Visitor::Visit_OutEventPort(const OutEventPort &) {}
	void Visitor::Visit_ProvidedRequestPort(const ProvidedRequestPort &) {}
	void Visitor::Visit_RequiredRequestPort(const RequiredRequestPort &) {}
	void Visitor::Visit_InEventPort(const InEventPort &) {}
	void Visitor::Visit_ComponentRef(const ComponentRef &) {}
	void Visitor::Visit_ManagesComponent(const ManagesComponent &) {}
	void Visitor::Visit_Domain(const Domain &) {}
	void Visitor::Visit_Shares(const Shares &) {}
	void Visitor::Visit_InterconnectConnection(const InterconnectConnection &) {}
	void Visitor::Visit_BridgeConnection(const BridgeConnection &) {}
	void Visitor::Visit_Requirement(const Requirement &) {}
	void Visitor::Visit_ECRequirements(const ECRequirements &) {}
	void Visitor::Visit_RTRequirements(const RTRequirements &) {}
	void Visitor::Visit_ImplementationDependency(const ImplementationDependency &) {}
	void Visitor::Visit_Property(const Property &) {}
	void Visitor::Visit_SatisfierProperty(const SatisfierProperty &) {}
	void Visitor::Visit_Capability(const Capability &) {}
	void Visitor::Visit_Resource(const Resource &) {}
	void Visitor::Visit_SharedResource(const SharedResource &) {}
	void Visitor::Visit_ImplementationRequirement(const ImplementationRequirement &) {}
	void Visitor::Visit_DataType(const DataType &) {}
	void Visitor::Visit_PackageInterface(const PackageInterface &) {}
	void Visitor::Visit_Implementation(const Implementation &) {}
	void Visitor::Visit_PackageContainer(const PackageContainer &) {}
	void Visitor::Visit_PackageConfigProperty(const PackageConfigProperty &) {}
	void Visitor::Visit_PackageInfoProperty(const PackageInfoProperty &) {}
	void Visitor::Visit_ComponentPackage(const ComponentPackage &) {}
	void Visitor::Visit_ComponentPackageReference(const ComponentPackageReference &) {}
	void Visitor::Visit_TopLevelPackageContainer(const TopLevelPackageContainer &) {}
	void Visitor::Visit_TopLevelPackage(const TopLevelPackage &) {}
	void Visitor::Visit_package(const package &) {}
	void Visitor::Visit_ComponentPropertyDescription(const ComponentPropertyDescription &) {}
	void Visitor::Visit_ComponentProperty(const ComponentProperty &) {}
	void Visitor::Visit_ComponentContainer(const ComponentContainer &) {}
	void Visitor::Visit_ComponentConfigProperty(const ComponentConfigProperty &) {}
	void Visitor::Visit_ComponentInfoProperty(const ComponentInfoProperty &) {}
	void Visitor::Visit_ImplementationArtifactReference(const ImplementationArtifactReference &) {}
	void Visitor::Visit_ComponentServantArtifact(const ComponentServantArtifact &) {}
	void Visitor::Visit_ComponentImplementationArtifact(const ComponentImplementationArtifact &) {}
	void Visitor::Visit_ArtifactDependsOn(const ArtifactDependsOn &) {}
	void Visitor::Visit_ArtifactDeployRequirement(const ArtifactDeployRequirement &) {}
	void Visitor::Visit_ArtifactContainer(const ArtifactContainer &) {}
	void Visitor::Visit_ArtifactExecParameter(const ArtifactExecParameter &) {}
	void Visitor::Visit_ArtifactInfoProperty(const ArtifactInfoProperty &) {}
	void Visitor::Visit_ImplementationArtifact(const ImplementationArtifact &) {}
	void Visitor::Visit_ArtifactDependency(const ArtifactDependency &) {}
	void Visitor::Visit_PackageConfBasePackage(const PackageConfBasePackage &) {}
	void Visitor::Visit_PackageConfReference(const PackageConfReference &) {}
	void Visitor::Visit_PackageConfigurationReference(const PackageConfigurationReference &) {}
	void Visitor::Visit_PackageConfigurationContainer(const PackageConfigurationContainer &) {}
	void Visitor::Visit_PackageConfConfigProperty(const PackageConfConfigProperty &) {}
	void Visitor::Visit_PackageConfSelectRequirement(const PackageConfSelectRequirement &) {}
	void Visitor::Visit_PackageConfSpecializedConfig(const PackageConfSpecializedConfig &) {}
	void Visitor::Visit_PackageConfiguration(const PackageConfiguration &) {}
	void Visitor::Visit_ImplementationCapability(const ImplementationCapability &) {}
	void Visitor::Visit_ImplementationDependsOn(const ImplementationDependsOn &) {}
	void Visitor::Visit_Implements(const Implements &) {}
	void Visitor::Visit_ComponentImplementationReference(const ComponentImplementationReference &) {}
	void Visitor::Visit_ComponentAssembly(const ComponentAssembly &) {}
	void Visitor::Visit_MonolithicImplementation(const MonolithicImplementation &) {}
	void Visitor::Visit_ComponentImplementationContainer(const ComponentImplementationContainer &) {}
	void Visitor::Visit_CriticalPath(const CriticalPath &) {}
	void Visitor::Visit_invoke(const invoke &) {}
	void Visitor::Visit_AssemblyselectRequirement(const AssemblyselectRequirement &) {}
	void Visitor::Visit_AssemblyConfigProperty(const AssemblyConfigProperty &) {}
	void Visitor::Visit_PublishConnector(const PublishConnector &) {}
	void Visitor::Visit_publish(const publish &) {}
	void Visitor::Visit_deliverTo(const deliverTo &) {}
	void Visitor::Visit_AssemblyDeployRequirement(const AssemblyDeployRequirement &) {}
	void Visitor::Visit_emit(const emit &) {}
	void Visitor::Visit_ReceptacleDelegate(const ReceptacleDelegate &) {}
	void Visitor::Visit_FacetDelegate(const FacetDelegate &) {}
	void Visitor::Visit_EventSourceDelegate(const EventSourceDelegate &) {}
	void Visitor::Visit_EventSinkDelegate(const EventSinkDelegate &) {}
	void Visitor::Visit_ExternalDelegate(const ExternalDelegate &) {}
	void Visitor::Visit_AttributeValue(const AttributeValue &) {}
	void Visitor::Visit_AttributeDelegate(const AttributeDelegate &) {}
	void Visitor::Visit_AttributeMapping(const AttributeMapping &) {}
	void Visitor::Visit_AttributeMappingValue(const AttributeMappingValue &) {}
	void Visitor::Visit_AttributeMappingDelegate(const AttributeMappingDelegate &) {}
	void Visitor::Visit_SupportsDelegate(const SupportsDelegate &) {}
	void Visitor::Visit_DeploymentPlan(const DeploymentPlan &) {}
	void Visitor::Visit_InstanceMapping(const InstanceMapping &) {}
	void Visitor::Visit_CollocationGroup(const CollocationGroup &) {}
	void Visitor::Visit_SharedComponentReference(const SharedComponentReference &) {}
	void Visitor::Visit_ComponentFactoryRef(const ComponentFactoryRef &) {}
	void Visitor::Visit_Deploys(const Deploys &) {}
	void Visitor::Visit_ComponentAssemblyReference(const ComponentAssemblyReference &) {}
	void Visitor::Visit_Bridge(const Bridge &) {}
	void Visitor::Visit_Interconnect(const Interconnect &) {}
	void Visitor::Visit_Node(const Node &) {}
	void Visitor::Visit_NodeReference(const NodeReference &) {}
	void Visitor::Visit_MetricConnection(const MetricConnection &) {}
	void Visitor::Visit_Average(const Average &) {}
	void Visitor::Visit_Minimum(const Minimum &) {}
	void Visitor::Visit_Maximum(const Maximum &) {}
	void Visitor::Visit_Jitter(const Jitter &) {}
	void Visitor::Visit_TimeProbe(const TimeProbe &) {}
	void Visitor::Visit_TimerConnection(const TimerConnection &) {}
	void Visitor::Visit_Latency(const Latency &) {}
	void Visitor::Visit_Throughput(const Throughput &) {}
	void Visitor::Visit_BenchmarkAnalysis(const BenchmarkAnalysis &) {}
	void Visitor::Visit_OperationRef(const OperationRef &) {}
	void Visitor::Visit_EventRef(const EventRef &) {}
	void Visitor::Visit_TimerEventSinkConn(const TimerEventSinkConn &) {}
	void Visitor::Visit_TaskSet(const TaskSet &) {}
	void Visitor::Visit_Task(const Task &) {}
	void Visitor::Visit_WorkloadCharacteristics(const WorkloadCharacteristics &) {}
	void Visitor::Visit_ComponentOperation(const ComponentOperation &) {}
	void Visitor::Visit_CompRef(const CompRef &) {}
	void Visitor::Visit_WorkLoadOperationConnection(const WorkLoadOperationConnection &) {}
	void Visitor::Visit_TriggerBenchmarks(const TriggerBenchmarks &) {}
	void Visitor::Visit_PeriodicBenchmarks(const PeriodicBenchmarks &) {}
	void Visitor::Visit_FixedIterationBenchmarks(const FixedIterationBenchmarks &) {}
	void Visitor::Visit_BenchmarkCharacteristics(const BenchmarkCharacteristics &) {}
	void Visitor::Visit_ConnectedComponent(const ConnectedComponent &) {}
	void Visitor::Visit_Path(const Path &) {}
	void Visitor::Visit_DstEdge(const DstEdge &) {}
	void Visitor::Visit_DisplayNode(const DisplayNode &) {}
	void Visitor::Visit_SrcEdge(const SrcEdge &) {}
	void Visitor::Visit_EdgeProperty(const EdgeProperty &) {}
	void Visitor::Visit_Edge(const Edge &) {}
	void Visitor::Visit_Paths(const Paths &) {}
	void Visitor::Visit_PathProperty(const PathProperty &) {}
	void Visitor::Visit_PathReference(const PathReference &) {}
	void Visitor::Visit_ExternalPortReference(const ExternalPortReference &) {}
	void Visitor::Visit_ECBehavior(const ECBehavior &) {}
	void Visitor::Visit_ECRole(const ECRole &) {}
	void Visitor::Visit_ServiceProvider(const ServiceProvider &) {}
	void Visitor::Visit_MultipleServiceRequests(const MultipleServiceRequests &) {}
	void Visitor::Visit_ServiceLevels(const ServiceLevels &) {}
	void Visitor::Visit_ServiceConsumer(const ServiceConsumer &) {}
	void Visitor::Visit_ComponentFactoryImplementationContainer(const ComponentFactoryImplementationContainer &) {}
	void Visitor::Visit_ComponentFactoryInstance(const ComponentFactoryInstance &) {}
	void Visitor::Visit_ConfigProperty(const ConfigProperty &) {}
	void Visitor::Visit_InfoProperty(const InfoProperty &) {}
	void Visitor::Visit_MonolithprimaryArtifact(const MonolithprimaryArtifact &) {}
	void Visitor::Visit_MonolithDeployRequirement(const MonolithDeployRequirement &) {}
	void Visitor::Visit_MonolithExecParameter(const MonolithExecParameter &) {}
	void Visitor::Visit_WorkerLibrary(const WorkerLibrary &) {}
	void Visitor::Visit_Worker(const Worker &) {}
	void Visitor::Visit_WorkerFile(const WorkerFile &) {}
	void Visitor::Visit_WorkerPackage(const WorkerPackage &) {}
	void Visitor::Visit_WorkerType(const WorkerType &) {}
	void Visitor::Visit_Variable(const Variable &) {}
	void Visitor::Visit_InputAction(const InputAction &) {}
	void Visitor::Visit_MultiInputAction(const MultiInputAction &) {}
	void Visitor::Visit_Action(const Action &) {}
	void Visitor::Visit_OutputAction(const OutputAction &) {}
	void Visitor::Visit_Finish(const Finish &) {}
	void Visitor::Visit_QueryAction(const QueryAction &) {}
	void Visitor::Visit_QueryInputAction(const QueryInputAction &) {}
	void Visitor::Visit_Environment(const Environment &) {}
	void Visitor::Visit_PeriodicEvent(const PeriodicEvent &) {}
	void Visitor::Visit_ApplicationTask(const ApplicationTask &) {}
	void Visitor::Visit_Input(const Input &) {}
	void Visitor::Visit_MultiInput(const MultiInput &) {}
	void Visitor::Visit_QueryInput(const QueryInput &) {}
	void Visitor::Visit_Transition(const Transition &) {}
	void Visitor::Visit_State(const State &) {}
	void Visitor::Visit_BranchState(const BranchState &) {}
	void Visitor::Visit_BranchTransition(const BranchTransition &) {}
	void Visitor::Visit_DoWhileState(const DoWhileState &) {}
	void Visitor::Visit_ForState(const ForState &) {}
	void Visitor::Visit_WhileState(const WhileState &) {}
	void Visitor::Visit_LoopTransition(const LoopTransition &) {}
	void Visitor::Visit_Terminal(const Terminal &) {}
	void Visitor::Visit_TerminalTransition(const TerminalTransition &) {}
	void Visitor::Visit_Effect(const Effect &) {}
	void Visitor::Visit_InputEffect(const InputEffect &) {}
	void Visitor::Visit_TerminalEffect(const TerminalEffect &) {}
	void Visitor::Visit_QoSCharRef(const QoSCharRef &) {}
	void Visitor::Visit_ComponentAssemblySecurityQoS(const ComponentAssemblySecurityQoS &) {}
	void Visitor::Visit_FailOverUnit(const FailOverUnit &) {}
	void Visitor::Visit_CIAOEvents(const CIAOEvents &) {}
	void Visitor::Visit_NetQoS(const NetQoS &) {}
	void Visitor::Visit_DomainRiskGroupingRef(const DomainRiskGroupingRef &) {}
	void Visitor::Visit_RecepInvoke(const RecepInvoke &) {}
	void Visitor::Visit_ComponentAssemblyQoS(const ComponentAssemblyQoS &) {}
	void Visitor::Visit_PortQoS(const PortQoS &) {}
	void Visitor::Visit_FacetInvoke(const FacetInvoke &) {}
	void Visitor::Visit_QoSReq(const QoSReq &) {}
	void Visitor::Visit_EventSourcePublish(const EventSourcePublish &) {}
	void Visitor::Visit_ComponentQoS(const ComponentQoS &) {}
	void Visitor::Visit_EventSinkPublish(const EventSinkPublish &) {}
	void Visitor::Visit_QoSConnector(const QoSConnector &) {}
	void Visitor::Visit_ComponentSecurityQoS(const ComponentSecurityQoS &) {}
	void Visitor::Visit_RealTimeConfiguration(const RealTimeConfiguration &) {}
	void Visitor::Visit_PortSecurityQoS(const PortSecurityQoS &) {}
	void Visitor::Visit_PriorityBands(const PriorityBands &) {}
	void Visitor::Visit_LanePerThreadPool(const LanePerThreadPool &) {}
	void Visitor::Visit_ThreadPool(const ThreadPool &) {}
	void Visitor::Visit_EnvironmentConf(const EnvironmentConf &) {}
	void Visitor::Visit_PolicyPerThreadPool(const PolicyPerThreadPool &) {}
	void Visitor::Visit_Lane(const Lane &) {}
	void Visitor::Visit_PriorityModelPolicy(const PriorityModelPolicy &) {}
	void Visitor::Visit_RootRiskGroup(const RootRiskGroup &) {}
	void Visitor::Visit_DeploymentPlanRef(const DeploymentPlanRef &) {}
	void Visitor::Visit_SRGRiskAssociation(const SRGRiskAssociation &) {}
	void Visitor::Visit_RepicaGroupConfiguration(const RepicaGroupConfiguration &) {}
	void Visitor::Visit_DomainRiskGrouping(const DomainRiskGrouping &) {}
	void Visitor::Visit_RootRiskAssociation(const RootRiskAssociation &) {}
	void Visitor::Visit_SharedRiskGroup(const SharedRiskGroup &) {}
	void Visitor::Visit_MonitorableGroupAssociation(const MonitorableGroupAssociation &) {}
	void Visitor::Visit_SharedResourceReference(const SharedResourceReference &) {}
	void Visitor::Visit_FTDeployDepends(const FTDeployDepends &) {}
	void Visitor::Visit_HostReference(const HostReference &) {}
	void Visitor::Visit_FTDeployment(const FTDeployment &) {}
	void Visitor::Visit_EventChannelCommunicationPoint(const EventChannelCommunicationPoint &) {}
	void Visitor::Visit_ReceiverConnection(const ReceiverConnection &) {}
	void Visitor::Visit_ConsumerBehavior(const ConsumerBehavior &) {}
	void Visitor::Visit_Filter(const Filter &) {}
	void Visitor::Visit_EventSource(const EventSource &) {}
	void Visitor::Visit_SupplierBehavior(const SupplierBehavior &) {}
	void Visitor::Visit_eventServiceConfiguration(const eventServiceConfiguration &) {}
	void Visitor::Visit_EventChannelFactory(const EventChannelFactory &) {}
	void Visitor::Visit_EventSourcePort(const EventSourcePort &) {}
	void Visitor::Visit_SenderConnection(const SenderConnection &) {}
	void Visitor::Visit_PortRuleRef(const PortRuleRef &) {}
	void Visitor::Visit_AssemblyRuleRef(const AssemblyRuleRef &) {}
	void Visitor::Visit_ComponentRuleRef(const ComponentRuleRef &) {}
	void Visitor::Visit_Policy(const Policy &) {}
	void Visitor::Visit_PolicySet(const PolicySet &) {}
	void Visitor::Visit_AssemblyAccessConn(const AssemblyAccessConn &) {}
	void Visitor::Visit_ObjectAccessConn(const ObjectAccessConn &) {}
	void Visitor::Visit_TargetObjectRef(const TargetObjectRef &) {}
	void Visitor::Visit_AttributeRef(const AttributeRef &) {}
	void Visitor::Visit_PortRule(const PortRule &) {}
	void Visitor::Visit_AssemblyRule(const AssemblyRule &) {}
	void Visitor::Visit_ComponentRule(const ComponentRule &) {}
	void Visitor::Visit_OnInterfaceConn(const OnInterfaceConn &) {}
	void Visitor::Visit_OperationSet(const OperationSet &) {}
	void Visitor::Visit_ComponentAccessConn(const ComponentAccessConn &) {}
	void Visitor::Visit_InitiatorRoleRef(const InitiatorRoleRef &) {}
	void Visitor::Visit_AttributeManipulateConn(const AttributeManipulateConn &) {}
	void Visitor::Visit_SecuredPathConn(const SecuredPathConn &) {}
	void Visitor::Visit_OnAssemblyConn(const OnAssemblyConn &) {}
	void Visitor::Visit_PathRef(const PathRef &) {}
	void Visitor::Visit_OperationInvokeConn(const OperationInvokeConn &) {}
	void Visitor::Visit_RequiredRights(const RequiredRights &) {}
	void Visitor::Visit_OnComponentConn(const OnComponentConn &) {}
	void Visitor::Visit_RoleAssignmentConn(const RoleAssignmentConn &) {}
	void Visitor::Visit_Group(const Group &) {}
	void Visitor::Visit_Realm(const Realm &) {}
	void Visitor::Visit_SecurityDomain(const SecurityDomain &) {}
	void Visitor::Visit_User(const User &) {}
	void Visitor::Visit_InterfaceClassificationConn(const InterfaceClassificationConn &) {}
	void Visitor::Visit_OperationClassificationConn(const OperationClassificationConn &) {}
	void Visitor::Visit_RightsAssignmentConn(const RightsAssignmentConn &) {}
	void Visitor::Visit_GrantedRights(const GrantedRights &) {}
	void Visitor::Visit_RBAC(const RBAC &) {}
	void Visitor::Visit_Security(const Security &) {}
	void Visitor::Visit_Role(const Role &) {}
	void Visitor::Visit_ComponentBuild(const ComponentBuild &) {}
	void Visitor::Visit_InterfaceDefinitions(const InterfaceDefinitions &) {}
	void Visitor::Visit_PredefinedTypes(const PredefinedTypes &) {}
	void Visitor::Visit_Targets(const Targets &) {}
	void Visitor::Visit_ComponentPackages(const ComponentPackages &) {}
	void Visitor::Visit_TopLevelPackages(const TopLevelPackages &) {}
	void Visitor::Visit_ComponentTypes(const ComponentTypes &) {}
	void Visitor::Visit_ImplementationArtifacts(const ImplementationArtifacts &) {}
	void Visitor::Visit_PackageConfigurations(const PackageConfigurations &) {}
	void Visitor::Visit_ComponentImplementations(const ComponentImplementations &) {}
	void Visitor::Visit_DeploymentPlans(const DeploymentPlans &) {}
	void Visitor::Visit_ComponentAnalyses(const ComponentAnalyses &) {}
	void Visitor::Visit_PathDiagrams(const PathDiagrams &) {}
	void Visitor::Visit_ComponentFactoryImplementations(const ComponentFactoryImplementations &) {}
	void Visitor::Visit_WorkerLibraries(const WorkerLibraries &) {}
	void Visitor::Visit_RootFolder(const RootFolder &) {}
	void Visitor::Visit_Object(const ::Udm::Object &) {}

	CQML_Export void Initialize()
	{
		static bool first = true;
		if (!first) return;
		first = false;
		::Uml::Initialize();

	
		UDM_ASSERT( meta == ::Udm::null );

		::UdmStatic::StaticDataNetwork * meta_dn = new ::UdmStatic::StaticDataNetwork(::Uml::diagram);
		meta_dn->CreateNew("CQML.mem", "", ::Uml::Diagram::meta, ::Udm::CHANGES_LOST_DEFAULT);
		meta = ::Uml::Diagram::Cast(meta_dn->GetRootObject());

		::Uml::InitDiagramProps(meta, "CQML", "1.00");


		CreateMeta();
		InitMeta();
		InitMetaLinks();

	}

	CQML_Export void Initialize(const ::Uml::Diagram &dgr)
	{
		
		if (meta == dgr) return;
		meta = dgr;

		InitMeta(dgr);
		InitMetaLinks(dgr);

		
		
	}


	CQML_Export  ::Udm::UdmDiagram diagram = { &meta, Initialize };
	static struct _regClass
	{
		_regClass()
		{
			::Udm::MetaDepository::StoreDiagram("CQML", diagram);
		}
		~_regClass()
		{
			::Udm::MetaDepository::RemoveDiagram("CQML");
		}
	} __regUnUsed;

}

