USER VISIBLE CHANGES IN CUTS AFTER REVISION 1287
====================================================

. On non-Windows environments, all library files are
  placed in $CUTS_ROOT/lib. On Windows environments,
  all .dll files are placed in $CUTS_ROOT/bin and all
  .lib files are placed in $CUTS_ROOT/lib.

. The libraries files for all appstrings built using
  CUTS are placed in $APP_ROOT/lib, where APP_ROOT is
  the root directory for the generated source files.
  This is also the same directory where the .mwc file
  for the appstring(s) is generated.

. Added a new menu option to the CUTS interpreter that
  allows auto-generation of all the proxy components and
  assemblies in a PICML model.

USER VISIBLE CHANGES IN CUTS AFTER REVISION 1200
====================================================

. Changed the progid of the interpreter from
  CUTS.Interpreter.PICML.Impl to CUTS.Interpreter.PICML

. Finished implementing the "Generate CoWorkEr model"
  options, which generates the necessary model elements
  in PICML to use CoWorkEr proxies for instrumentation.

. The entry point for the component execute is derived
  from the implementation artifact that ends in _exec,
  given it has a execProperty attached to it.

USER VISIBLE CHANGES IN CUTS AFTER REVISION 1173
====================================================

. The name of the interpreter has changes from
  CUTS_PICML_CIAO_Impl to CUTS_PICML.

. The CoWorkEr's instrumentation and benchmarking has
  been decoupled. Now, emulated/real components are hosted by
  proxies that will instrument and benchmark the component.
  The proxies are generated by the CUTS_PICML model interpreter,
  therefore, user's do not have to create them. The implementation
  loaded by the proxy is specified by setting the cuts_proxy_impl
  attribute to the location:entrypoint.

  Example:
    ConfigOp_exec:create_SLICE_ConfigOp_Home_Impl

  This will load the component create by the
  'create_SLICE_ConfigOp_Home_Impl' method located in 'ConfigOp_exec'.

USER VISIBLE CHANGES IN CUTS AFTER REVISION 942
====================================================

. The Benchmark Manager Web Utility now requires
  MySQL Connector/ODBC 3.51. This is necessary because
  it contain several bug fixes that are reflected in
  the current build of the BMW.

USER VISIBLE CHANGES IN CUTS AFTER REVISION 926
====================================================

. The Benchmark Data Collector (BDC) is now a service object
  that collects metrics and manages components registration
  The BDC notifies loaded services of events that occur
  in the environment that may be of interest. Services
  are loaded into the BDC using by setting the attribute
  service attribute as follows:

  <svc_name> <svc_path> <svc_args>;

  Mulitple services can be loaded by chaining series of
  the statment above as follows:

  <svc_name> <svc_path> <svc_args>;<svc_name> <svc_path> <svc_args>;

  We currently recommend that svc_name and svc_path do not
  have spaces in their name.

. The BDC does not explicitly provide a Path_Measurement
  receptacle type and is being transitioned into a service
  object for the BDC.

. There is no longer a Benchmark_Data_Collector_Ex (extended
  BDC for storing metrics into a database. Instead, it is
  a service object that is located in the shared library
  CUTS_Database_Service

. There is no attribute on the BDC for dumping metrics to
  an XML file. This is also being transitioned into a service
  object that's located in the shared library CUTS_XML.
