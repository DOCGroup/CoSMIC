<?xml version="1.0"?>
<project name="CUTS autobuild" basedir="." default="build.all">
  <description>CUTS autobuild</description>

  <!-- setup the necessary environment variables -->
  <setenv name="ACE_ROOT" value="${ACE_ROOT}" />
  <setenv name="TAO_ROOT" value="${TAO_ROOT}" />
  <setenv name="CIAO_ROOT" value="${CIAO_ROOT}" />
  <setenv name="PATH" value="${ACE_ROOT}/bin;${ACE_ROOT}/lib;${CIAO_ROOT}/bin;%PATH%" />

  <setenv name="COSMIC_ROOT" value="${COSMIC_ROOT}" />
  <setenv name="CUTS_ROOT" value="${CUTS_ROOT}" />
  <setenv name="PATH" value="${COSMIC_ROOT}/bin;${CUTS_ROOT}/bin;%PATH%" />

  <!-- store the target configuration -->
  <property name="results.log" value="results.log" />
  <property name="build.configuration" value="debug" />
  <if test="${property::exists ('build.release')}">
    <property name="build.configuration" value="release" />
  </if>

  <!--
      target(s) for Subversion
      -->

  <target name="svn.update">
    <echo message="Updating CoSMIC workspace from repository..." />
    <exec program="svn"
          commandline="update ${COSMIC_ROOT}" />
  </target>

  <!--
      target(s) for the different kinds of builds
      -->

  <target name="build.all" depends="svn.update">
    <call target="workspace.generate.all" />

    <call target="devenv.clean" />
    <call target="devenv.build" />
  </target>

  <target name="build.modeling" depends="svn.update">
    <call target="workspace.generate.modeling" />

    <call target="devenv.clean" />
    <call target="devenv.build" />
  </target>

  <target name="build.runtime" depends="svn.update">
    <call target="workspace.generate.runtime" />

    <call target="devenv.clean" />
    <call target="devenv.build" />
  </target>

  <target name="build.installers" depends="build.modeling">
    <!-- we only distribute the release version -->
    <property name="build.configuration" value="release" />

    <call target="workspace.generate.installers" />
    <call target="devenv.clean" />
    <call target="devenv.build" />
  </target>

  <!--
      target(s) for generating the different workspaces
      -->

  <target name="workspace.generate.all">
    <!-- this uses the CUTS.mwc workspace -->
    <echo message="Generating all workspaces" />
    <exec program="perl"
          commandline="-- ${ACE_ROOT}/bin/mwc.pl -type ${mpc.type} -features modeling=1,cosmic=1 ${CUTS_ROOT}/CUTS.mwc" />

    <property name="build.workspace" value="${CUTS_ROOT}/CUTS.sln" />
  </target>

  <target name="workspace.generate.modeling">
    <!-- this uses the CUTS_CoSMIC.mwc workspace -->
    <echo message="Generating CUTS modeling workspace" />
    <exec program="perl"
          commandline="-- ${ACE_ROOT}/bin/mwc.pl -type ${mpc.type} -features modeling=1,cosmic=1 ${CUTS_ROOT}/CUTS_CoSMIC.mwc" />
    <property name="build.workspace" value="${CUTS_ROOT}/CUTS_CoSMIC.sln" />
  </target>

  <target name="workspace.generate.runtime">
    <!-- this uses the CUTS.mwc workspace -->
    <echo message="Generating CUTS runtime workspace" />
    <exec program="perl"
          commandline="-- ${ACE_ROOT}/bin/mwc.pl -type ${mpc.type} -features modeling=0,cosmic=0 ${CUTS_ROOT}/CUTS.mwc" />
    <property name="build.workspace" value="${CUTS_ROOT}/CUTS.sln" />
  </target>

  <target name="workspace.generate.installers">
    <!-- this uses the CUTS.mwc workspace -->
    <echo message="Generating CUTS installers workspace" />
    <exec program="perl"
          commandline="-- ${ACE_ROOT}/bin/mwc.pl -type ${mpc.type} ${CUTS_ROOT}/install/CUTS_installers.mwc" />
    <property name="build.workspace" value="${CUTS_ROOT}/install/CUTS_installers.sln" />
  </target>

  <!--
      target(s) for executing different build engines
      -->
  <target name="devenv.build">
    <echo message="Building ${build.workspace}" />
    <exec program="devenv.exe"
          commandline="${build.workspace} /useenv /out ${results.log} /build ${build.configuration}"
          append="true" />
  </target>

  <target name="devenv.clean">
    <echo message="Cleaning ${build.workspace}" />
    <exec program="devenv.exe"
          commandline="${build.workspace} /useenv /out ${results.log} /clean ${build.configuration}"
          append="true" />
  </target>
</project>
