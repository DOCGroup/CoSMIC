Mon Dec  3 19:31:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Process_Log.cpp:

          Fixed build errors on Windows.

Mon Dec  3 19:26:08 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/Component_Metric.cpp:
        * cuts/Component_Registry.cpp:
        * cuts/Log_T.cpp:
        * cuts/System_Metric.cpp:
        * cuts/Time_Measurement.cpp:
        * cuts/Timestamp_Metric.h:
        * cuts/Timestamp_Metric.inl:
        * cuts/XML_Metrics_Writer.cpp:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * utils/Node_Daemon/Process_Log.h:
        * utils/Node_Daemon/Process_Log.cpp:

          Fixed build errors and warnings on Linux.

Mon Dec  3 19:20:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:
        * cuts/be/BE_Env_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Generators_T.h:
        * cuts/be/BE_Impl_Generator_T.cpp:

          Added support to generating basic assembly information from the
          PICML model.

        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:

          The TIOA backend now can generate basic assembly infomration
          about the instances declared and the connections between each
          instance.

Tue Nov 27 22:26:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/service.idl:

          Started fleshing out the remoting service manager/interface
          provided by the BDC.

Tue Nov 27 21:54:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_skel_export.h:
        * cuts/BDC/Benchmark_Data_Collector_svnt_export.h:

          Decoupled the BDC servant and executor project so that the
          executor is not dependent on the servant project. This included
          removing the reference to the ORB owned by the service manager.

        * etc/config/cuts_coworker_skel.mpb:

          Missing base project for compiling coworker applications.

Tue Nov 27 19:55:08 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/Event_Handler_Manager_T.h:
        * cuts/Event_Handler_Manager_T.inl:
        * cuts/be/CIAO/CIAO_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Refactored the component proxy so that all the cuts_* specific
          implementation for configuring the proxy has been moved down
          into the proxy template class.

Tue Nov 27 03:04:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Assembly_Generator.h:
        * cuts/be/BE_Assembly_Generator.cpp:

          The assembly generator now creates unique 'cuts_name' property
          elements for all the proxy instances.

Fri Nov 23 06:18:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp (generate_monolithic_implementation):

          Improved the logic that determines if a monolithic implementation
          container is missing a component reference. This is determined
          by checking the actual component reference, instead of relying
          on the name alone.

Fri Nov 23 06:03:00 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp (find_artifact_i):

          Improved the recognition of missing primary artifacts. Instead
          of using the artifact reference's name, we now use the actual
          reference. This is just in case the user accidently changes the
          name of the reference.

Fri Nov 23 04:13:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp:

          - The CoWorkEr now has an attributed name 'cuts_name'. This is used
            to assign a human readable name to the CoWorkEr, which does not
            have to be the same name used in the deployment descriptors.
          - Fixed bug that was causing muliple MonolithprimaryArtifact
            connections to occur between the same a MonolithicImplementation
            and a ImplementationArtificatReference.

Thu Nov 22 19:36:49 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Remove the util/BDC declaration since the directory
          no longer exists.

        * cuts/Async_Event_Handler_T.h:

          Added a missing include file since removing the _svnt.h include
          files broke builds.

        * cuts/be/BE.mpc:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          - Decoupled the servant and executor project such that the
            executor no longer depends on the servant project. Instead,
            a skeleton project is now built, which both the servant and
            executor projects depend.
          - The export files for all projects are generated in the
            prebuild stage of the project.

        * cuts/be/Export_File_Generator.h:
        * cuts/be/Export_File_Generator.cpp:

          Removed these files.

Tue Nov 20 07:05:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/client/Client_Options.h:
        * cuts/BDC/client/client.mpc:
        * cuts/BDC/client/client.cpp:

          The new location of the BDC client application.

        * utils/BMW/assemblies/CUTS.Data/Database.cs:

          Clients can select the table name for storing (cumulative)
          performance metrics.

        * utils/BMW/controls/ComponentPerformanceCategory.ascx.cs:
        * utils/BMW/controls/CumulativePortPerformance.ascx:
        * utils/BMW/controls/CumulativePortPerformance.ascx.cs:
        * utils/BMW/controls/CumulativeSystemPerformance.ascx:
        * utils/BMW/controls/CumulativeSystemPerformance.ascx.cs:
        * utils/BMW/performance.aspx:
        * utils/BMW/performance.aspx.cs:

          Created a custom control to display the cumulative metrics of
          a test in the "Cumulative Performance" tab.

Tue Nov 20 01:20:24 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Generators_T.h:
        * cuts/be/BE_Impl_Generator_T.h:
        * cuts/be/BE_Impl_Generator_T.cpp:

          Added the initial point-of-interpretation and point-of-generation
          tags for handling component assemblies.

        * cuts/be/BE_Impl_Node.h:

          Reformatted the Doxygen text.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits_Base.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          The naming of executor and servant projects are now based
          on the values extracted from the model. For example, the
          project name is based on the artifact's name and the sharedname
          is based on the location attribute of the corresponding
          artifact.

Sat Nov 17 18:56:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_i.cpp:

          The node daemon tries to recover any orphan processes
          in the log during creation.

Sat Nov 17 18:14:19 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_i.cpp:

          Fixed an typo in a error message.

Sat Nov 17 17:59:49 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/client:

          Orginally, the BDC client located in utils/BDC.

        * utils/Node_Daemon/Node_Daemon.idl:
        * utils/Node_Daemon/Node_Daemon.mpc:
        * utils/Node_Daemon/Node_Daemon_Client.cpp:
        * utils/Node_Daemon/Node_Daemon_Event_Handler.h:
        * utils/Node_Daemon/Node_Daemon_Event_Handler.cpp:
        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.inl:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * utils/Node_Daemon/Process_Log.h:
        * utils/Node_Daemon/Process_Log.inl:
        * utils/Node_Daemon/Process_Log.cpp:
        * utils/Node_Daemon/Server_Options.h:
        * utils/Node_Daemon/Server_Options.cpp:

          Re-implemented the node daemon such that it is not used to
          only spawn node managers. It can be used to spawn any process
          on the hosting node. It can be viewed as a remote CORBA shell.

        * utils/BDC:
        * utils/BDC/Client_Options.h:
        * utils/BDC/client.mpc:
        * utils/BDC/client.cpp:

          Removed these files.

Sat Nov 10 00:30:46 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Generators_T.h:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/CIAO/CIAO_Traits.h:
        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:
        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:
        * cuts/be/natural-lang/Natural_Lang_Generators.h:
        * cuts/be/natural-lang/Natural_Lang_Generators.cpp:

          The backend generators are now able to distinguish between
          generating a file for an mononlithic implementation vs. a
          component assembly.

Fri Nov  9 21:02:27 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Web.config:

          Updated the assembly reference section to include the
          CUTS.Data assembly.

        * utils/BMW/assemblies/CUTS.Data/CUTS.Data.mpc:
        * utils/BMW/assemblies/CUTS.Data/Database.cs:
        * utils/BMW/assemblies/CUTS.Data/ExecutionTime.cs:
        * utils/BMW/assemblies/CUTS.Data/PathElement.cs:

          Place the ExecutionTime and PathElement structures in their
          own file.

Fri Nov  9 20:46:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/BMW.mpc:
        * utils/BMW/BMW.mwc:
        * utils/BMW/Timeline.aspx.cs:
        * utils/BMW/Web.config:
        * utils/BMW/assemblies/CUTS.Data/CUTS.Data.mpc:
        * utils/BMW/assemblies/CUTS.Data/Database.cs:
        * utils/BMW/baseline.aspx.cs:
        * utils/BMW/components.aspx.cs:
        * utils/BMW/default.aspx.cs:
        * utils/BMW/environment.aspx.cs:
        * utils/BMW/performance.aspx.cs:

          Changes all occurences of CUTS_Database_Utility to
          CUTS.Data.Database. The CUTS.Data assembly is coming
          to life!! :)

        * utils/BMW/bin/WebChart.dll:

          Added the WebChart assembly to the distribution.

        * utils/BMW/assemblies/CUTS.Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS.Data/Database_Utility.mpc:

          Removed these files.

Fri Nov  9 19:31:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies/CUTS.Data/Data:

          Removed this file.

Fri Nov  9 19:28:37 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies/CUTS.Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS.Data/Database_Utility.mpc:

          Relocated the database source files.

        * utils/BMW/assemblies/CUTS.Data/Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS.Data/Data/Database_Utility.mpc:

          Removed these files.

Fri Nov  9 19:19:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies/CUTS.Web:
        * utils/BMW/assemblies/CUTS.Data:

          Finally decided on a layout for partitioning CUTS assemblies.

        * utils/BMW/assemblies/CUTS:
        * utils/BMW/assemblies/CUTS.Data/CUTS.Data:
        * utils/BMW/assemblies/CUTS.Data/CUTS.WebControls:
        * utils/BMW/assemblies/CUTS.Data/WebControls:
        * utils/BMW/assemblies/CUTS/Data:
        * utils/BMW/assemblies/CUTS/Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS/Data/Database_Utility.mpc:
        * utils/BMW/assemblies/CUTS/WebControls:

          Removed these files.

Fri Nov  9 16:12:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies/CUTS/Data:
        * utils/BMW/assemblies/CUTS/WebControls:

          Fixing the hierarchy of the CUTS assemblies.

        * utils/BMW/assemblies/CUTS/CUTS.Data:
        * utils/BMW/assemblies/CUTS/CUTS.Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS/CUTS.Data/Database_Utility.mpc:
        * utils/BMW/assemblies/CUTS/CUTS.WebControls:

          Removed these files.

Fri Nov  9 16:10:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>


        * utils/BMW/assemblies/CUTS:
        * utils/BMW/assemblies/CUTS/CUTS.Data:
        * utils/BMW/assemblies/CUTS/CUTS.WebControls:

          Fixing the hierarchy of the CUTS assemblies.

        * utils/BMW/assemblies/CUTS.Data:
        * utils/BMW/assemblies/CUTS.Data/Database_Utility.cs:
        * utils/BMW/assemblies/CUTS.Data/Database_Utility.mpc:
        * utils/BMW/assemblies/CUTS.WebControls:

          Removed these files.

Fri Nov  9 15:53:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies/CUTS.Data:
        * utils/BMW/assemblies/CUTS.WebControls:

          Moved the Database_Utility assembly to CUTS.Data folder. Also,
          started initial folder for the CUTS.WebControls assembly.

        * utils/BMW/assemblies/Database_Utility:
        * utils/BMW/assemblies/Database_Utility/Database_Utility.cs:
        * utils/BMW/assemblies/Database_Utility/Database_Utility.mpc:

          Removed these files.

Fri Nov  9 15:45:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/assemblies:
        * utils/BMW/assemblies/Database_Utility:

          Moved all .NET assemblies to the assemblies directory.

        * utils/BMW/Database_Utility:
        * utils/BMW/Database_Utility/Database_Utility.cs:
        * utils/BMW/Database_Utility/Database_Utility.mpc:

          Removed these files.

Thu Nov  8 23:30:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.h:
        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.cpp:
        * etc/SQL/CUTS-baseline.sql:

          The baseline metrics now stores overall processing and queueing
          performance times for each port.

        * cuts/be/TIOA/TIOA_Generators.cpp:

          Tried to sort the ports by name, but that apparently
          is not working. :)

        * etc/SQL/CUTS-execution-paths.sql:

          Implemented a new procedure to select all the execution
          paths from the database.

        * utils/BMW/BMW.master:

          The head now has the runat="server" attribute and added a message
          label the main page. This is used by all the content pages to display
          messages to the user.

        * utils/BMW/Critical_Path_Timeline.aspx.cs:

        * utils/BMW/Database_Utility/Database_Utility.cs (get_baseline_data):

          Now this method operates on a dataset instead of returning
          a IDataReader object.

        * utils/BMW/baseline.aspx:
        * utils/BMW/baseline.aspx.cs:
        * utils/BMW/controls/ComponentPerformanceCategory.ascx:
        * utils/BMW/controls/ComponentPerformanceCategory.ascx.cs:
        * utils/BMW/controls/ComponentPerformanceGrid.ascx:
        * utils/BMW/controls/ComponentPerformanceGrid.ascx.cs:
        * utils/BMW/controls/PortPerformance.ascx:
        * utils/BMW/controls/PortPerformance.ascx.cs:
        * utils/BMW/controls/SystemPerformance.ascx:
        * utils/BMW/controls/SystemPerformance.ascx.cs:

          Converted the system metrics to a reusable control. This
          will make the result display consistent across multiple
          pages.

        * utils/BMW/performance.aspx:
        * utils/BMW/performance.aspx.cs:

          Same as above, but this page now has a multiview control. One
          view displays the current snapshot and the other view displays
          the cumulative results.

        * utils/BMW/styles/default.css:

          Removed the a:* tags and change the width of .performance-name.

        * utils/BMW/controls/ComponentPerformance.ascx:
        * utils/BMW/controls/ComponentPerformance.ascx.cs:

          Removed these files.

Mon Nov  5 19:50:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/TIOA/TIOA_Generators.cpp:

          Changed the name managling for channel ids.

Mon Nov  5 19:39:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/TIOA/Host.tioa:

          Initial implementation of a Host automaton used for scheduling
          threads to run.

        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:

          Component automaton are now able to request threads to handle
          events. Right now, you can only have one thread active per event
          port.

Mon Nov  5 15:21:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/TIOA/Unbounded_Event_Connection.tioa:

          Updated the SVN properties.

Mon Nov  5 15:18:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/TIOA:
        * MDE/TIOA/Unbounded_Event_Connection.tioa:

          Initial checkin of CUTS for TIOA. Currently, we only have
          an unbounded event connection defined. We still need to
          define the behavior of individual hosts.

Mon Nov  5 15:07:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:

          Added a prologue to the generated TIOA files.

Mon Nov  5 14:50:58 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:

          The component automaton now are able to send events across
          specific connections. These connections are derived from the
          assembly view of the system.

Mon Nov  5 02:21:29 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-execution.sql:

          Implemented stored procedures that calculate the delta in
          processing time specific timestamps and overall test.

Fri Nov  2 22:17:54 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.cpp:

          Removed the push/pop statements for the number of
          transitions in a branch.

        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:

          Fixed bug that was causing branch conditions to be generated
          in the wrong location.

        * integration/autobuild.build:

          Changes all project.* to env.* properties.

Fri Nov  2 20:52:49 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:

          Updated execution generator to correctly handle branch control
          blocks based on the addition of terminals.

Thu Nov  1 17:06:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/CUTS-config.xml:
        * integration/vc71.bat:
        * integration/vc8.bat:

          Removed these files.

Wed Oct 31 22:47:46 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Generators_T.h:

          Implemented a new trait that lets backends determine if the
          preconditions should be parsed, or copied directly over.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          Fixed formating problems with single liner if statements.

        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:

          Fixed bug that was causing the preconditions for branch
          statements to appear in the incorrect location.

Wed Oct 31 21:05:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Condition_Parser_T.h:
        * cuts/be/BE_Condition_Parser_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Generators_T.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits.h:
        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:

          The backend parser is now capable of parsing the preconditions
          of transitions.

Mon Oct 29 19:51:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/TIOA/TIOA_Generators.cpp:

          Fixed generator so that it is more compliant w/ the
          UPPAAL plugin since that's the least common denominator of
          all the plugins.

Mon Oct 29 17:05:54 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/XML/CUTS_XML.mpc:

          Changed the name of the shared library to CUTS_BDC_XML.

        * cuts/be/BE_Generators_T.h:
        * cuts/be/BE_Impl_Generator_T.h:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/TIOA:
        * cuts/be/TIOA/TIOA.mpc:
        * cuts/be/TIOA/TIOA_Generators.h:
        * cuts/be/TIOA/TIOA_Generators.cpp:
        * cuts/be/TIOA/TIOA_Manager.h:
        * cuts/be/TIOA/TIOA_Manager_Factory.h:
        * cuts/be/TIOA/TIOA_Manager_Factory.cpp:
        * cuts/be/TIOA/TIOA_export.h:

          Initial implementation of the Timed I/O automata generator for
          CUTS.

Sun Oct 21 12:45:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Updated the BMW installer to contain the new files.

Sun Oct 21 01:51:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Database_Utility/Database_Utility.cs (get_baseline_data):

          Returns an IDataReader object instead of returning the data
          in a dataset.

        * utils/BMW/baseline.aspx:
        * utils/BMW/baseline.aspx.cs:
        * utils/BMW/controls/ComponentPerformance.ascx:
        * utils/BMW/controls/ComponentPerformance.ascx.cs:
        * utils/BMW/controls/ComponentPerformanceCategory.ascx:
        * utils/BMW/controls/ComponentPerformanceCategory.ascx.cs:
        * utils/BMW/controls/ComponentPerformanceGrid.ascx:
        * utils/BMW/controls/ComponentPerformanceGrid.ascx.cs:
        * utils/BMW/controls/CumulativePortPerformance.ascx:
        * utils/BMW/controls/CumulativePortPerformance.ascx.cs:

          Refactored to component performance controls to create a
          custom grid for each component based on the current layout
          used in the performance.aspx page. The baseline page is the
          first page to try using this new component performance grid.

Thu Oct 18 23:23:27 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Updated the installer version to 1.5

        * install/CUTS_PICML.wxs:

          Added the XML, natural language and TIOA backend generators
          to the installer.

        * utils/BMW/App_Code/CumulativeExitPoint.cs:
        * utils/BMW/App_Code/ExitPoint.cs:
        * utils/BMW/App_Code/PerformanceTimes.cs:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/Database_Utility/Database_Utility.cs:
        * utils/BMW/Timeline.aspx.cs:
        * utils/BMW/baseline.aspx.cs:
        * utils/BMW/controls:
        * utils/BMW/controls/ComponentPerformance.ascx:
        * utils/BMW/controls/ComponentPerformance.ascx.cs:
        * utils/BMW/controls/PortPerformance.ascx:
        * utils/BMW/controls/PortPerformance.ascx.cs:
        * utils/BMW/controls/SystemPerformance.ascx:
        * utils/BMW/controls/SystemPerformance.ascx.cs:
        * utils/BMW/default.aspx:
        * utils/BMW/images/graph.gif:
        * utils/BMW/performance.aspx:
        * utils/BMW/performance.aspx.cs:
        * utils/BMW/styles/default.css:

          Updated the look and feel of the performance overview page. Now we
          have custom controls that will show the current snapshot and the
          cumulative snapshot of the performance metrics. This allows users
          to compare individual snapshots w/ the overall results with hopes
          of understanding where performance started to deter.

        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Component_Metrics.ascx.resx:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Execution_Times.aspx.resx:
        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Sender_Metrics.ascx.cs:
        * utils/BMW/Sender_Metrics.ascx.resx:

          Removed these files.

Thu Oct 18 23:18:01 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          The overall processing time for an event is now logged to the
          database. It has a NULL value in the 'dst' column for 'process'
          metric type.

        * etc/SQL/CUTS-create.sql:

          Added a function to return the name of a component instance
          given its uniquely generated id.

        * etc/SQL/CUTS-execution.sql:

          Changed all occurrences of 'worse_time' to 'worst_time'.

Sun Oct 14 22:06:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-execution-paths.sql:

          Changes the name of CUTS-path-analysis.sql to
          CUTS-execution-paths.sql

        * etc/SQL/CUTS-path-analysis.sql:

          Removed this file.

Sun Oct 14 15:07:28 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-path-analysis.sql (select_execution_path_times):

          - Fixed bug where execution times for all execution paths were
            being returned by the query instead of only the execution times
            for the specified execution path.
          - Now the execution path times are turned in the same order as
            the execution path for each collection time.

        * utils/BMW/Critical_Path_Timeline.aspx.cs:

          Updated the generation of the webchart to use the new database
          format and functions/procedures.

Sat Oct 13 21:50:46 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:
        * etc/SQL/CUTS-path-analysis.sql:
        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:

          Updated the execution (critical) path tables and pages to use
          the new database format. This resulted in creating a handful
          of new procudure to simplify extracting the correct data from
          the database.

        * etc/SQL/CUTS-procs.sql:

          Removed this file.

Sat Oct 13 16:36:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record.h:
        * cuts/Activation_Record_T.inl:
        * cuts/Activation_Record_T.cpp:

          Added a new template parameter the for object argument to
          prevent unambiguous compilation errors.

Fri Oct 12 01:21:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU/CPU_Worker.h:
        * cuts/workers/CPU/CPU_Worker.cpp:
        * cuts/workers/CPU/CPU_Worker.mpc:
        * cuts/workers/CPU/CPU_Worker_T.h:
        * cuts/workers/CPU/CPU_Worker_T.cpp:

          Templatized the CPU worker so third party developers can
          create their own work functions in the form of functors.

Thu Oct 11 17:49:01 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU:

          Change the name of CPU_Worker to CPU.

        * cuts/workers/CPU_Worker:
        * cuts/workers/CPU_Worker/CPU_Worker.h:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:
        * cuts/workers/CPU_Worker/CPU_Worker.mpc:
        * cuts/workers/CPU_Worker/CPU_Worker_export.h:
        * cuts/workers/CPU_Worker/CUTS_CPU_Worker.xme:
        * cuts/workers/CPU_Worker/Calibration_Details.h:
        * cuts/workers/CPU_Worker/Calibration_Details.inl:
        * cuts/workers/CPU_Worker/Calibration_Details.cpp:

          Removed these files.

Tue Oct  9 22:32:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:

          Added the TIOA and XML backends to the PICML interpreter.

Tue Oct  9 22:31:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.cpp:

          Now, all components are delete from the registry as part
          of the unregistration process.

Tue Oct  9 22:15:05 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Testing_Service_exec_i.cpp:

          Implemented the 'unregister_component' method.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:
        * cuts/Component_Registry_Node.h:
        * cuts/Component_Registry_Node.inl:

          Re-implemented unregister_component so that the client
          has the option of caching the registration information for
          later usage, or deleting it. Also, when a component is
          unregistered, all registered event handlers are notified.

Tue Oct  9 20:19:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/XML/XML_Generators.h:
        * cuts/be/natural-lang/Natural_Lang_Generators.h:

          Suppressed ununsed points-of-visitation.

Tue Oct  9 19:56:08 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:

          Added support for generating branches in XML.

Tue Oct  9 19:13:37 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/XML:
        * cuts/be/XML/XML.mpc:
        * cuts/be/XML/XML_Generators.h:
        * cuts/be/XML/XML_Generators.cpp:
        * cuts/be/XML/XML_Manager.h:
        * cuts/be/XML/XML_Manager_Factory.h:
        * cuts/be/XML/XML_Manager_Factory.cpp:
        * cuts/be/XML/XML_export.h:

          Initial implementation of the XML backend generator for
          PICML.

Tue Oct  9 16:55:39 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:
        * cuts/BDC/svcs/dbase/README:

          Added support for storing the uptime of a component in the
          database if the 'deployment' table is present.

        * etc/SQL/CUTS-deployment.sql:

          Added stored procedures to simplify inserting the component's
          uptime and downtime.

Tue Oct  9 12:47:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/performance_i.cpp:

          Fixed bug that was caused by not locking the activation record
          log at the correct time before accessing its data members. This
          resulted in the iteration over the log to either crash, or enter
          an infinite loop.

Tue Oct  9 12:38:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-baseline.sql:

          Updated the stored procedures to calculate the average execution
          time for the baseline metrics as well.

Tue Oct  9 12:33:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Added baseline.aspx page to the installer and fixed other
          errors in the WiX installer file.

Tue Oct  9 02:17:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Added a new method to get all the baseline metrics from the
          database.

        * utils/BMW/BMW.master:

          Add the 'Baseline Metrics' menu option.

        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/default.aspx.cs:

          Changed all instances of Add for parameters to AddWithValue.

        * utils/BMW/baseline.aspx:
        * utils/BMW/baseline.aspx.cs:

          Initial implemenation of the baseline metrics page.

Tue Oct  9 01:47:15 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-baseline.sql:

          'select_baseline_metric_all' now returns the baseline metrics
          sorted by the 'component_name' column.

Mon Oct  8 01:51:33 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-baseline.sql:

          Created stored procedures for selecting the baseline metrics
          for a single component or all the components.

Sun Oct  7 18:24:04 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.cpp:
        * cuts/Log_T.h:

          Fixed compilation error related to upgrading to the latest
          version of ACE+TAO+CIAO.

Sat Oct  6 22:02:47 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.cpp (init):

          Swapped the hostname and instance parameters.

        * cuts/Log_T.h:
        * cuts/Log_T.cpp:
        * cuts/performance_i.cpp:

          Fixed build issues on Linux boxes.

Sat Oct  6 22:00:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.cpp:

        * cuts/Log_T.h:
        * cuts/Log_T.cpp:

Sat Oct  6 15:38:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Commented out the MDE/utils directory since it is not
          officially in the repo.

Fri Oct  5 01:27:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Added MDE/utils to the build.

        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.h:
        * cuts/BDC/svcs/baseline/Baseline_Archiver_DB.cpp:
        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:
        * cuts/BDC/svcs/baseline/System_Metric_Accumulator.h:
        * cuts/BDC/svcs/baseline/System_Metric_Accumulator.cpp:
        * cuts/BDC/svcs/baseline/baseline.mpc:

          Re-implemented the baseline service to use the new service
          framework and database format.

        * cuts/Component_Metric.h (port_metric):
        * cuts/Component_Metric.cpp:

          Added a method to locate the port metric based on an id.

        * cuts/Port_Measurement.h (endpoint):
        * cuts/Port_Measurement.cpp:

          Added a method to locate time measurements based on
          an endpoint.

        * cuts/Port_Measurement_Map.h (find):
        * cuts/Port_Measurement_Map.cpp:

          Updated the implementation to check for errors when
          storing objects in the hash map.

        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.cpp:

          Added 'operator =' and 'operator  +=' methods.

        * cuts/be/BE.mpc:
        * cuts/be/BE_Condition_Parser_T.h:
        * cuts/be/BE_Condition_Parser_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:

          Embedded a parser for preconditions, but have not added
          implementation to use the parser.

        * cuts/config.h:

          Added the unknown hostname and unknown ip-address to the
          default configuration file.

        * cuts/svcs/dbase/DB_Registry.h (register_component):

          Set the default paramater for 'inst_id' to a NULL pointer.

        * etc/SQL/CUTS-baseline.sql:

          - Updated the baseline table to use the port ids located in
            the port table for input and output ports.
          - Defined procedures to simplify inserting baseline metrics
            for components into the baseline table.

        * cuts/BDC/svcs/baseline/Baseline_Service.mpc.disable:

          Removed this file.

Tue Oct  2 15:18:28 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-baseline.sql:

          Updated the baseline table to use the ids from the ports
          table for inports and outports.

Mon Oct  1 14:09:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp:
        * cuts/workers/CPU_Worker/Calibration_Details.h:
        * cuts/workers/CPU_Worker/Calibration_Details.cpp:

          Updated the calibration results to calcuate the variance,
          standard deviation, and standard error for each execution
          time during the validation process.

        * utils/GUTS/gems2picml_App.cpp:

          Updated implementation to use the new collection entities
          in the GME library.

Thu Sep 20 03:56:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_Context_T.h:
        * cuts/CCM_Context_T.inl:
        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:

          These files still contained deprecated macros.

        * cuts/Log_T.h:

          Turned auto_grow flag off by default.

        * etc/SQL/CUTS-create.sql:

          Created a function that will return the name of a port
          given its pid.

        * etc/SQL/CUTS-execution.sql:

          Fixed procedures that selects the execution times for
          components w/ all its information present in the returned
          query.

        * utils/BMW/App_Code/BMW_Service.cs:

          Removed deadcode.

        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Node_Details.ascx.cs:
        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Sender_Metrics.ascx.cs:
        * utils/BMW/Timeline.aspx.cs:

          Updated files to conform to new database format and leverage
          the new functions/procedures.

        * utils/BMW/Web.config:

          Removed the MySQL configuration requirement.

Tue Sep 11 18:19:58 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Generators_T.h:

          Added a new point-of=generation for generating metadata
          for CBML state elements.

        * cuts/be/BE_Execution_Visitor_T.cpp:

          Temporarily disabled generation of properties for
          input actions.

        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Inserted a hack for setting the priority of an event
          handler.

Mon Sep 10 19:36:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-execution.sql:

          Commented out the select_execution_time stored procedure.

Mon Sep 10 19:28:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:

          Fixed 'portnames' table specification to use 'NULL' as the
          default portname if no name is entered.

Mon Aug 27 15:04:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Manager_Factory_Repo.h:
        * cuts/be/BE_Manager_Factory_Repo.inl:
        * cuts/be/BE_Manager_Factory_Repo.cpp:

          Missing project files.

        * cuts/be/natural-lang/Natural_Lang_Generators.cpp:

          Removed the explicit specialization macro from all methods
          since it seems to be failing on all Windows builds.

Mon Aug 27 05:01:24 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Generators_T.h:
        * cuts/be/natural-lang/Natural_Lang_Generators.h:
        * cuts/be/natural-lang/Natural_Lang_Generators.cpp:

          Added the following points-of-generation:
            - CUTS_BE_Action_Properties_Begin_T
            - CUTS_BE_Action_Properties_End_T

Mon Aug 27 04:27:10 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/Component.rc:
        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.h:
        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.cpp:
        * MDE/GME/paradigms/PICML/interpreter/UdmApp.h:
        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:
        * MDE/GME/paradigms/PICML/interpreter/resource.h:

          Improved the user-interface so end-users can select which
          backend to use when interpreting the model.

        * cuts/be/BE.h:
        * cuts/be/BE.mpc:
        * cuts/be/BE_Generators_T.h:
        * cuts/be/BE_Manager.h:
        * cuts/be/BE_Manager.cpp:
        * cuts/be/BE_Manager_Factory.h:
        * cuts/be/BE_Manager_Factory.inl:
        * cuts/be/BE_Manager_Factory.cpp:
        * cuts/be/BE_Workspace_Generator_T.h:
        * cuts/be/BE_export.h:

          Extended the backend architecture so a factory object is
          responsible for creating the contained manager. Also, the
          factory contains details about the backend generator.

        * cuts/be/CIAO/BE_CIAO.mpc:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Manager.h:
        * cuts/be/CIAO/CIAO_Manager_Factory.h:
        * cuts/be/CIAO/CIAO_Manager_Factory.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Traits_Base.h:

          Converted the CIAO backend over to the new backend framework
          where a factory object is responsible for creating the CIAO
          generator. The factory also contains details about the contained
          manager.

        * cuts/be/natural-lang/Natural_Lang.mpc:
        * cuts/be/natural-lang/Natural_Lang_Generators.h:
        * cuts/be/natural-lang/Natural_Lang_Generators.cpp:
        * cuts/be/natural-lang/Natural_Lang_Manager.h:
        * cuts/be/natural-lang/Natural_Lang_Manager_Factory.h:
        * cuts/be/natural-lang/Natural_Lang_Manager_Factory.cpp:

          Converted the natural langauge backend over to the new backend
          framework where a factory object is responsible for creating the
          natural language generator. The factory also contains details
          about the contained manager.

        * cuts/be/natural-lang/Natural_Lang_Generator.h:
        * cuts/be/natural-lang/Natural_Lang_Generator.inl:
        * cuts/be/natural-lang/Natural_Lang_Generator.cpp:

          Removed these files.

Fri Aug 24 13:08:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Generators_T.h:

          Missing header file.

Thu Aug 23 14:12:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:
        * cuts/be/BE_Env_Visitor_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Impl_Generator_T.inl:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_algorithm.h:
        * cuts/be/BE_nil.h:
        * cuts/be/CIAO/CIAO_Manager.h:
        * cuts/be/CIAO/CIAO_Traits.h:

          Re-implemented the point-of-generation template architecture
          for the backend generators so different backends are not required
          to define unused points-of-generation as NIL.

        * etc/SQL/CUTS-execution.sql:

          Implemented a stored procedure for getting the execution times
          for a component from a given sender at a specific collection time.

        * etc/config/cuts_coworker_exec.mpb:

          Removed the 'rt_server' base project.

Mon Aug 20 20:22:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/CUTS-config.xml:

          - Now ANT is used as the build tool of choice.
          - Added a nightly and hourly build project section.

        * integration/autobuild.build:

          All environment properties are defined in terms of project.[]
          instead of env.[] since we do not want to couple the build system
          to the system environment, which may have multiple sandboxes.

Mon Aug 20 17:34:08 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/utils/DB_Connection.h:
        * cuts/utils/DB_Connection.inl:
        * cuts/utils/DB_Query.h:
        * cuts/utils/DB_Record.h:
        * cuts/utils/ODBC/ODBC_Connection.h:
        * cuts/utils/ODBC/ODBC_Connection.cpp:
        * cuts/utils/ODBC/ODBC_Parameter_List.h:
        * cuts/utils/ODBC/ODBC_Parameter_List.cpp:
        * cuts/utils/ODBC/ODBC_Query.h:
        * cuts/utils/ODBC/ODBC_Query.cpp:
        * cuts/utils/ODBC/ODBC_Record.h:
        * cuts/utils/ODBC/ODBC_Record.inl:
        * cuts/utils/ODBC/ODBC_Record.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.cpp:

          Remove all occurences of ACE_THROW_SPEC macro. Moreover, remove all
          exeception specification list from all applicable functions.

        * integration/CUTS-config.xml:

          Removed verbose flag from the build process.


Mon Aug 20 16:58:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/CUTS-config.xml:

          Initial support allowing end-user's of CUTS to support their
          own personal builds of the entire framework. Much work needs to
          be done to improve the scripts, but this is a good start.

Fri Jul 13 05:27:25 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy.h:
        * cuts/CCM_CoWorkEr_Proxy.cpp:

          Temporarily commented out RTCORBA specific implementation.

Fri Jul 13 04:04:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/CUTS_CIAO.mpc:

          Removed the rt_server base projects since it defined the
          project type as an executable. This was cause the top-level
          project to inherit this project type as well regardless
          of the top-level project specifying a different project type.

Fri Jun  8 04:49:37 UTC 2007  Krishnakumar B  <kitty@nospam.invalid.domain>

        * cuts/BDC/svcs/IO:
        * cuts/BDC/svcs/XML:
        * cuts/be/natural-lang:
        * cuts/workers:
        * cuts/workers/CPU_Worker:
        * etc/calibration:
        * install/images:
        * tests/cuts/workers:
        * utils/calibrate:

          Updated the svn:ignore property recursively.

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:  Fixed a compilation
          error with VC8 due to missing & to CUTS_DB_Query::destroy
          argument.

        * utils/BMW/Database_Utility/Database_Utility.mpc:  Add bmw in
          addition to mysql to the list of requires to prevent
          Database_Utility from being built if bmw is not selected.

Wed Jun  6 03:11:28 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/DB_Parameter.h:
        * cuts/utils/DB_Parameter.inl:
        * cuts/utils/ODBC/ODBC_Parameter.h:
        * cuts/utils/ODBC/ODBC_Parameter.cpp:

          Removed all throw specifications from method declarations.

Mon Jun  4 02:30:26 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.inl:
        * cuts/svcs/dbase/DB_Registry.cpp:

          Implemented a new method names register_component_port (), which
          insert a component's port information into the port table.

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:
        * etc/SQL/CUTS-execution.sql:

          Implemented a stored procedure for inserting execution times into
          the database.

Mon Jun  4 00:58:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:

          Added a new table named *ports*, which is responsible for holding
          the port details of a component type.

        * etc/SQL/CUTS-execution.sql:
        * etc/SQL/CUTS-archive.sql:

          Changed the filename from the latter to the primer.

Wed May 30 14:32:45 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.cpp (handle_metrics):
        * cuts/svcs/dbase/DB_Registry.cpp (ports_to_csv):

          Removed unnecessary debug messages.

        * cuts/performance_i.cpp:

          Fixed bug where endpoints never used where being sent to
          the BDC and appearing as false endpoints w/ no events
          activity.

Wed May 30 05:22:00 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Sender_Metrics.ascx.cs:

          Update the metrics table so that it displays the portname instead
          of the port ids based on the database's new layout.

Wed May 30 02:56:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.cpp (handle_component):

          Method returns -1 if service fails to register component.

        * cuts/svcs/dbase/DB_Registry.cpp (ports_to_csv):

          Fixed bug that was causing invalid entry of sinks and sources
          for component types.

Fri May 25 16:21:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp (handle_metrics):

          - Fixed bug where the src field was actually storing information from
            the sources instead of the sinks.
          - The query for inserting metrics is now composed to several subqueries.
            This removes the necessity of having the store information that mapped
            CUTS assigned ids to DB assigned ids.

        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.cpp:

          - Implemented a separate method for registering the component
            type.
          - Replace the ODBC header files w/ the abstract DB header files.

        * cuts/utils/DB_Parameter.h:
        * cuts/utils/ODBC/ODBC_Parameter.h:
        * cuts/utils/ODBC/ODBC_Parameter.cpp:

          Added length () methods to the interface of a parameter. This
          will allow the caller to adjust the length of a previously bound
          parameter. It is extremely useful when working with NULL parameters.

        * etc/SQL/CUTS-archive.sql:

          Changed src and dst field in execution_time to INT types, which
          reference portnames.portid.

        * etc/SQL/CUTS-create.sql:

          portname of NULL now maps to portid 1 by default.

Thu May 24 17:06:45 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Converted the underlying container class for the ID_Map to
          an ACE_Hash_Map_Manager.

Thu May 24 14:57:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:

          When the user selects a path to edit, the name of the path
          is shown in the heading for the path elements.

Thu May 24 14:38:26 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:

          Users are now able to delete muliple elements in the critical
          path simultaneously.

Thu May 24 04:32:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:

          - Updated the look and feel of the page.
          - The critical path table is not cached anymore.

Thu May 24 03:37:18 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Critical_Path.aspx:

          Updated the look and feel of the page.

Thu May 24 03:29:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-path-analysis.sql:

          Change the types of src and dst columns in critical_path_element
          to integers, which have constraits mapped to portid in portnames.

        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:

          - When a user selects a instance to add to the critical path, the
            valid source and destination ports of the instance are shown.
          - The user now has the option of deleting elements in the critical
            path.

        * utils/BMW/Web.config:

          Updated the MySQL dependency to 1.0.9.

Wed May 23 06:45:32 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.cpp:

          Added support for registering the ports of a component
          types with the database.

        * etc/SQL/CUTS-create.sql:

          - Added sources and sinks column to component_types table.
          - Added a table called portnames, which holds the ids of
            different ports.

Wed May 23 04:17:33 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/IO/BDC_IO.h:

          Removed an unncessary include file.

Wed May 23 03:54:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Auto_Functor_T.h:
        * cuts/Auto_Functor_T.inl:
        * cuts/Auto_Functor_T.cpp:

          Reimplemented the auto functor class so that it is only
          parameterizable by the object type. The second argument in
          the constructor is the method to invoke before the object is
          destroyed.

        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.mpc:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          - The CUTS_DB_Registry is no longer a base class, but a contained
            class.
          - Removed most of the dependency on ODBC.

        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.inl:
        * cuts/svcs/dbase/DB_Registry.cpp:
        * cuts/svcs/dbase/DB_export.h:

          Reimplmented the database registry class so that it's not
          dependent on the ODBC data type.

        * cuts/utils/DB_Query.h:
        * cuts/utils/DB_Query.cpp:

          Implemented a destroy () method, which is to be used when the
          query is created via the connection.

Wed May 23 00:30:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.cpp:
        * cuts/BDC/svcs/dbase/DBase_Service.h:

          Change the CUTS_DB_Service class to CUTS_DB_Registry.

        * etc/config/cuts_dbsvc.mpb:

          Updated the 'after' and 'libs' values to the new name
          of the CUTS_DB project.

Wed May 23 00:02:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DB_Registry.h:
        * cuts/svcs/dbase/DB_Registry.inl:
        * cuts/svcs/dbase/DB_Registry.cpp:
        * cuts/svcs/dbase/DB_export.h:

          Rename of the files below.

        * cuts/svcs/dbase/DB_Registry.mpc:

          Changed the name of the project.

        * cuts/svcs/dbase/DB_Service.h:
        * cuts/svcs/dbase/DB_Service.inl:
        * cuts/svcs/dbase/DB_Service.cpp:
        * cuts/svcs/dbase/DB_Service.mpc:
        * cuts/svcs/dbase/DB_Service_export.h:

          Removed these files.

Tue May 22 21:29:01 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp (write_WorkerAction_begin):

          Change the format of generating a worker's action to be
          consistent w/ the new implementation of perform_action () and
          perform_action_no_logging ().

        * cuts/Activation_Record.h:
        * cuts/Activation_Record.inl:
        * cuts/Activation_Record.cpp:
        * cuts/Activation_Record_T.inl:
        * cuts/Activation_Record_T.cpp:

          - perform_action () and perform_action_no_logging () now
            make direct calls on the target methods instead of creating
            a functor to make the call.
          - The record log now records the duration actions.

        * cuts/Activation_Record_Entry.h:

          Entry that contains information about a measured action.

        * cuts/Activation_Record_Log.h:
        * cuts/Log_T.h:
        * cuts/Log_T.inl:
        * cuts/Log_T.cpp:

          Refactored the log class into a template that is parameterized
          by the storage type.

        * cuts/BDC/BDC_Task.cpp (collect_data):

          Added std::bad_cast catch block.

        * cuts/CCM_CoWorkEr_Proxy.cpp:

          Removed the in_nil () test on the testing service variable
          and added a status message that is prevented when a component
          is registering itself.

        * cuts/CCM_CoWorkEr_Proxy_T.cpp (ciao_preactivate):

          Changed the format of all the ACE_DEBUG and ACE_ERROR messages.

        * cuts/CUTS.mpc:

          Added/removed files from the project.

        * cuts/Component_Registry.cpp:

          Changed the layout of the file.

        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.cpp (record_exitpoint):

          Changed the return type to 'int' to act as a return status.

        * cuts/XML_Metrics_Writer.cpp:

          - Added support for writing action log to the XML file for each
            activation record in the port log.
          - Fixed bug that caused the BDC to crash if it had records with an
            unknown sender, i.e., sender = CUTS_UNKNOWN_IMPL.

        * cuts/performance.idl:
        * cuts/performance_i.h:
        * cuts/performance_i.cpp:

          Added support to packing and unpacking the performance of
          actions in a activation record.

        * cuts/Activation_Record_Entry.inl:
        * cuts/Activation_Record_Entry.cpp:
        * cuts/Activation_Record_Log.inl:
        * cuts/Activation_Record_Log.cpp:

          Removed these files.

Sat May 19 06:32:48 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits.h:

          Added support for generating conditional branching.

        * cuts/be/natural-lang/Natural_Lang_Generator.cpp:

          Removed all usage of Repetitions attribute.

Thu May 17 00:03:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_File_Traits.cpp:
        * cuts/be/CoWorkEr_Generator.cpp:

          Bug fix that was causing regular component to be populated
          with CoWorkEr model elements. This resulted in the implementation
          generator crashing because it was thinking the real components
          were CoWorkErs.

Wed May 16 20:31:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Assembly_Generator.cpp (Visit_Component):

          Improved the repair operation for component instances. Now,
          if model generator will restore any missing cuts_proxy_impl
          specifications.

Wed May 16 19:41:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/Component.rc:
        * cuts/be/BE_Assembly_Generator.h:
        * cuts/be/BE_Assembly_Generator.cpp:

          Now the creation of CoWorkEr assemblies option can be clicked
          mulitple times without having any negative events. It just
          repairs the model, if necessary.

        * cuts/be/modelgen.h:
        * cuts/be/modelgen.cpp:

          Implemented model generation methods for creating instances
          based on conditions.

Wed May 16 06:01:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:

          Added UDM_Utility_T.cpp back to the project.

        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

        * cuts/be/CoWorkEr_Cache.cpp:
        * cuts/be/CoWorkEr_Generator.cpp:

          Reimplemented the search operations using the modelgen
          functions.

        * cuts/be/UDM_Utility_T.h:

          Removed the create_if* functions since the ones in modelgen
          supercede them.

Wed May 16 05:39:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Removed Port_Measurement_Pool.* files from the project.

        * cuts/be/BE_Assembly_Generator.h:
        * cuts/be/BE_Assembly_Generator.cpp:

          Fixed bug where the value of the cuts_proxy_impl was set to
          the proxy executor entrypoint, and not the entrypoint of
          the hosted component.

        * cuts/Port_Measurement_Pool.h:
        * cuts/Port_Measurement_Pool.inl:
        * cuts/Port_Measurement_Pool.cpp:

          Removed these files.

Tue May 15 16:46:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * cuts/CUTS_CIAO.mpc:
        * cuts/CUTS.mpc:

          Move CIAO specific projects to their own MPC file.

        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:

          When an endpoint is registered with the benchmark agent, it also
          registers it with the sender port map.

        * cuts/Port_Agent.h:
        * cuts/Port_Agent.inl:
        * cuts/Port_Agent.cpp:

          Removed the CUTS_Port_Measurement_Pool data member. Now the
          port agent contains one CUTS_Port_Measurement_Map.

        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:

          Removed the worker measurement classes and changed all STL
          containers to ACE containers.

        * cuts/Port_Measurement_Map.h:
        * cuts/Port_Measurement_Map.inl:
        * cuts/Port_Measurement_Map.cpp:

          - Replaced operator += () with find ().
          - Changed the locking strategy from ACE_RW_Thread_Mutex to ACE_Null_Mutex
            for the time being. Right now, ACE_RW_Thread_Mutex can be too heavy if
            the workload is high. Now, everything is preallocated.
          - The map is now able to register_endpoints () to create a template that
            is used to initalize CUTS_Port_Measurement objects via the prepare ()
            method.

        * cuts/Time_Measurement.h:

          Updated doxygen documentation.

        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.cpp:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:
        * cuts/XML_Metrics_Writer.cpp:
        * cuts/performance_i.h:
        * cuts/performance_i.inl:
        * cuts/performance_i.cpp:

          Update the iteration code to use the new typedefs and container
          class in the port measurements.

        * cuts/config.h:
        * cuts/config-doxygen.h:
        * docs/cuts.doxygen:

          Updated the configuration for generating Doxygen documentation.

Mon May 14 23:50:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Time_Measurement.h:

          Removed the pragma once specification.

Mon May 14 23:46:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Time.h:
        * cuts/Time.cpp:

          Moved ace/OS_NS_time.h include from the source file to the
          header file.

        * cuts/Timestamp_Metric.h:
        * cuts/Timestamp_Metric.inl:

          Added reset () and is_valid () methods.

        * cuts/be/BE_Assembly_Generator.cpp:

          Partially converted source to use the new model generation
          methods.

Mon May 14 23:05:45 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CUTS_Project.cpp:
        * cuts/be/CoWorkEr_Generator.cpp:

          The first parameter of several bind () methods were missing
          the '&' operator.

Mon May 14 22:41:25 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/ChangeLog:

          The test directory now has its own ChangeLog. All revisions
          related to unit test will be placed in the ChangeLog.

Mon May 14 22:37:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/cuts/Time_Measurement_Test.cpp:
        * tests/cuts/workers/CPU_Worker_Test.cpp:
        * tests/cuts/workers/workers.mpc:

          Updated the unit tests to use the new testing framework. Now,
          unit tests are executables instead of shared libraries. Granted this
          will increase compilation time, but it will make them more stable.

        * tests/Default_Msg_Log.h:
        * tests/Default_Msg_Log.cpp:

          Implemented a default logging strategy that writes to the console.

        * tests/Msg_Log.h:
        * tests/Msg_Log.cpp:

          - The open () method now takes the name of the test suite as an input
            parameter.
          - The close () method now takes the results of the test suite, i.e.,
            number of passed and failed unit tests.

        * tests/Test_Macros.h:
        * tests/Test_Main.cpp:
        * tests/Test_Suite.h:
        * tests/Test_Suite.cpp:
        * tests/cuts/test.mpc:

          Updated the testing framework so that all test suites are compiled
          executables instead of shared libraries.

        * tests/tests.mpc:
        * tests/tests.mwc:

          This was the old test.* files.

        * tests/Test_Client.cpp:
        * tests/cuts/Time_Metric_Test.cpp:
        * tests/test.mpc:
        * tests/test.mwc:

          Removed these files.

Sun May 13 19:36:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          - Fixed compiler warnings.
          - The number of calibration tries is written to the calibration
            details file.

Sat May 12 17:56:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp:

          Finished updating the CoWorkEr proxy generation option. Now,
          you are able to repair the CUTS model by clicking that option.

Sat May 12 04:02:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:

          Removed all MFC code from the interpreter.

        * cuts/be/BE.mpc:
        * cuts/be/BE_Assembly_Generator.cpp:
        * cuts/be/CUTS_Project.h:
        * cuts/be/CUTS_Project.cpp:
        * cuts/be/CoWorkEr_Generator.h:
        * cuts/be/CoWorkEr_Generator.cpp:

          Update the model generators to use the new model generator functions
          and methods.

        * cuts/be/modelgen.h:
        * cuts/be/modelgen.inl:
        * cuts/be/modelgen.cpp:

          Set of helper methods for generating model elements.

Tue May  8 20:49:11 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp (verify_calibration):

          The generated output in the calibration file was not formatted
          correctly.

Tue May  8 19:00:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.h:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          Refactored filename creation operations so a single function is
          responsible for generating the basename of the calibration file.

Tue May  8 17:38:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp (calibrate):

          Instead of copying everything from temp file to the target
          calibration file, now everything is written to the temp file
          and the temp file is renamed to the target file.

Tue May  8 16:25:08 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          Set the number of max tries to calibrate the CPU workload
          generator to 10.

Tue May  8 15:50:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.h:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          Added a counter that shows how many attempts have been made
          to adjust and verify the counts per msec.

Tue May  8 15:43:16 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp (verify_calibration):

          Fixed an incorrect log message.

Tue May  8 14:18:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp:
        * cuts/workers/CPU_Worker/Calibration_Details.h:
        * cuts/workers/CPU_Worker/Calibration_Details.inl:
        * cuts/workers/CPU_Worker/Calibration_Details.cpp:

          Implemented adjustment logic into the calibration logic. If
          the calibration is off by +- 2.0 msec at any points, the
          counts per second is adjusted and run again. I still to
          probably add a max tries to the adjustment effort so
          the calibration doesn't run for infinite amount of time.

Tue May  8 00:02:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.mpc:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:
        * cuts/workers/CPU_Worker/Calibration_Details.h:
        * cuts/workers/CPU_Worker/Calibration_Details.inl:
        * cuts/workers/CPU_Worker/Calibration_Details.cpp:

          - Refactored the calibration for the CPU worker so that details
            are handled by an external class.
          - Instead of placing the % of error at the end of execution sample
            set in the calibration log, now the average error is stored.

Mon May  7 04:14:33 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS_i.cpp:

          Fixed bug that was caused by using a iterator from a
          ACE hash map in a while construct. It seem that calling
          the done () method before using iterator resulted in an
          infinite loop.

Fri May  4 09:03:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          Removed 'iostream' include statement since ace/streams.h
          is already included.

Fri May  4 09:01:11 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.h:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:

          Calibration routine now adds details about the verification
          process to the calibration file.

        * cuts/workers/CPU_Worker/CPU_Worker.inl:

          Removed this file.

Thu May  3 23:04:37 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/CPU_Worker/CPU_Worker.h:
        * cuts/workers/CPU_Worker/CPU_Worker.inl:
        * cuts/workers/CPU_Worker/CPU_Worker.cpp:
        * cuts/workers/CPU_Worker/CPU_Worker.mpc:

          Renamed of the files below that were removed.

        * cuts/workers/CPU_Worker/CUTS_CPU_Worker.xme:

          WML model of the CUTS_CPU_Worker. To use it in PICML models
          just import it, or attach it as a library.

        * cuts/workers/CPU_Worker/CPUWorker.h:
        * cuts/workers/CPU_Worker/CPUWorker.inl:
        * cuts/workers/CPU_Worker/CPUWorker.cpp:

          Removed these files.

Thu May  3 22:22:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added the cuts/worker directory to the workspace.

        * cuts/CUTS_Worker.mpc:
        * cuts/workers:
        * cuts/workers/CPU_Worker:
        * cuts/workers/CPU_Worker/CPUWorker.h:
        * cuts/workers/CPU_Worker/CPUWorker.inl:
        * cuts/workers/CPU_Worker/CPUWorker.cpp:
        * cuts/workers/CPU_Worker/CPU_Worker.mpc:
        * cuts/workers/CPU_Worker/CPU_Worker_export.h:

          Changed the location of the CUTS_CPU_Worker to
          cuts/worker/CPU_Worker

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.inl:
        * cuts/CPUWorker.cpp:

          Removed these files.

Thu May  3 07:11:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Changed the scope to ACE_SCOPE_PROCESS and now the percentage
          of error during the verfication step is printed to the screen.

Thu May  3 04:38:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:

          Removed the process () method, which is not obsolete, and
          fixed debug message that was printing the count_per_msec_.
          It was displaying the value as a integer and not a double.

Wed May  2 22:48:05 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Component_Type.h:

          Updated Doxygen documentation.

Wed May  2 22:26:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.h:

          Updated Doxygen documentation.

Wed May  2 22:11:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:

          Changed the storage class for endpoints from a STL map
          to an ACE_Hash_Map_Manager.

        * cuts/CUTS_i.h:
        * cuts/CUTS_i.cpp:

          Updated the insertion operators to use the new storage
          class for the endpoints.

Wed May  2 21:55:15 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker.h:

          Added macro that contains the string version of the
          factory symbol for dynamically loading workers.

        * utils/calibrate/Calibrate_Options.h:
        * utils/calibrate/calibrate.cpp:
        * utils/calibrate/calibrate.mpc:

          Added commandline options for using verbose messages
          and specifying the location of a worker to calibrate.

Wed May  2 20:18:18 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:

          Place the 'record' variable declared in generate periodic
          methods within a ACE_UNUSED_ARG () statement.

Wed May  2 19:43:23 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:
        * cuts/CUTS.mpc:
        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:

          Removed all occurences of WML macros for creating and
          using functors. Now, we generate unnamed functors that
          are used with the benchmarking framework.

        * cuts/WML_Macros.h:
        * cuts/Worker_T.h:
        * cuts/Worker_T.cpp:
        * cuts/Worker_T.inl:

          Removed this file.

Wed May  2 18:02:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record_Log.h:
        * cuts/Activation_Record_Log.inl:
        * cuts/Activation_Record_Log.cpp:

          - Added a locking mechanism to the record to prevent it from
            being resized if another thread is iterating through the log.
          - Implemented a new method that will allow clients to perform
            batch iterations through the log.

        * cuts/BDC/BDC_Task.cpp:

          Updated the data collection routine to use the new data
          structures and extraction operations.

        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          - Removed deprecated macros.
          - Updated the register_component () to add the type information
            of a component to its registry.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.mpc.disable:
        * cuts/BDC/svcs/baseline/Baseline_Service.mpc.disable:

          Disabled compilation of the following BDC services since
          they aren't being used and need to be updated to use the
          new layout of the performance metrics.

        * cuts/BDC/svcs/IO/BDC_IO.h:
        * cuts/BDC/svcs/IO/BDC_IO.cpp:

          Updated the formatting of the generated output and now
          the type information (e.g., port names) is written to the
          console during component registration.

        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.h:
        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.cpp:

          Updated the visitor logic to use the new CUTS_Metrics_Visitor
          logic and use the new layout of the metrics database.

        * cuts/XML_Metrics_Writer.h:
        * cuts/XML_Metrics_Writer.cpp:

          - Updated the visitor logic to use the new CUTS_Metrics_Visitor
            logic and use the new layout of the metrics database.
          - Changed <PortMetric> tag to <PortSummary>, <Best> to <BestTime>,
            <Average> to <AverageTime>, and <Worst> to <WorstTime>.
          - All performance metrics are written as sec, usec times.

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Updated the visitor logic to use the new CUTS_Metrics_Visitor
          logic and use the new layout of the metrics database.

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:

          The registration of a port agent or a endpoint now requires
          the client to provide a unique id to be associated with the
          entity.

        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.cpp:

          Updated collect_performance_data () to use the new
          CUTS::Component_Metric data structure for sending information
          to the BDC.

        * cuts/CCM_CoWorkEr_Proxy.cpp (register_i):

          Update registration code to use the new CUTS::Host_Description
          data structure.

        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          The proxies now submit information about its ports during the
          registration process.

        * cuts/CUTS.idl:

          Sanitized/enhanced the registration data structure(s) so that
          components can submit information about their ports.

        * cuts/CUTS.mpc:

          Added/removed source files from the project.

        * cuts/CUTS_i.h:
        * cuts/CUTS_i.cpp:

          Helper operators for inserting/extracting component registration
          information.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.inl:
        * cuts/Component_Metric.cpp:

          - Removed the locking mechanisms.
          - Instead of requesting a port metric by its name and sender,
            clients just get a reference to the entire port mapping data
            structure.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:

          Added support for storing a component's type information in the
          database. The type information includes the typename and the name of
          its ports.

        * cuts/Component_Info.h:

          Changed type_ from a ACE_CString to a read-only pointer to
          a CUTS_Component_Type data structure.

        * cuts/Component_Type.h:

          Structure that contains type information about a component.

        * cuts/Metrics_Visitor.h:
        * cuts/Metrics_Visitor.inl:
        * cuts/Metrics_Visitor.cpp:

          This was previously System_Metrics_Visitor.

        * cuts/Port_Agent.h:
        * cuts/Port_Agent.inl:
        * cuts/Port_Agent.cpp:

          Added modifiable accessor methods for log () and
          port_measurement_pool ().

        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:

          Added modifiable accessor methods for process_time ()
          and queuing_time ().

        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:
        * cuts/Port_Metric.cpp:

          Now contains a set of ports measurements that are mapped by
          sender.

        * cuts/System_Metric.h:
        * cuts/System_Metric.inl:
        * cuts/System_Metric.cpp:

          Improved the management of component metrics by using a
          ACE_Hash_Map_Manager and allowing the auto creation of component
          metrics that may not exist.

        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.inl:
        * cuts/Time_Measurement.cpp:

          - Added accessor methods that allow the different time structure
            to be modified outside the class.
          - Added timestamping support.

        * cuts/Timestamp_Metric.h:
        * cuts/Timestamp_Metric.inl:
        * cuts/Timestamp_Metric.cpp:

          Helper class that adds timestamping capability to an
          existing class.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          Update the generated code to hardcode the unique ids of the
          different ports that are registered with the benchmark agent
          in the proxy.

        * cuts/performance.idl:

          Sanitized the data structures used to transmit performance
          metrics to the BDC.

        * cuts/performance_i.h:
        * cuts/performance_i.inl:
        * cuts/performance_i.cpp:

          Implemented insertion/extraction operators to simplify
          marshalling and unmarshalling the performance metrics

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.mpc:
        * cuts/BDC/svcs/baseline/Baseline_Service.mpc:
        * cuts/Benchmark_Collector_Visitor.h:
        * cuts/Benchmark_Collector_Visitor.cpp:
        * cuts/Benchmark_Visitor.h:
        * cuts/Benchmark_Visitor.inl:
        * cuts/Benchmark_Visitor.cpp:
        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:
        * cuts/System_Metrics_Visitor.h:
        * cuts/System_Metrics_Visitor.inl:
        * cuts/System_Metrics_Visitor.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.inl:
        * cuts/Time_Metric.cpp:

          Removed these files.

Wed Apr 25 23:08:39 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_node.pl:

          Added support for passing parameters to the NodeManager.

        * etc/config/cutslib.mpb:

          Changed the output location of .dll to $CUTS_ROOT/lib
          on Windows machines.

Wed Apr 18 16:27:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.cpp:

          Bug fix that was causing the service manager for each service
          loaded in the BDC to not be initialized. The result was it
          caused the BDC to crash.

        * cuts/BDC/BDC_Task.cpp:

          Improved the output messages to reflect the actually
          behavior of the task when collecting metrics.

Wed Apr 18 14:55:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Added an error message if the calibration file fail to open.

Tue Apr 17 19:19:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/mem_action_t.h:

          Fixed compilation errors on Linux environments.

Tue Apr 17 19:36:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Removed all ACE_THROW_SPEC statements.

Tue Apr 17 19:00:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record.h:
        * cuts/Activation_Record_T.inl:
        * cuts/Activation_Record_T.cpp:

          Updated perform_action () and perform_action_no_logging () so
          that it takes a functor and up to 5 arguments. The arguments are
          then passed to the functor to perform some operations.

        * cuts/CUTS.mpc:
        * cuts/mem_action_t.h:

          Implemented unnamed functor generators object methods with
          up the five parameters.

        * cuts/Port_Metric.h:

          Missing an include file.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          - Removed all ACE_THROW_SPEC statements.
          - Worker actions are now generated to create unnamed functor
            objects.

Mon Apr 16 20:32:32 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record_Log.h:
        * cuts/Activation_Record_Log.inl:
        * cuts/Activation_Record_Log.cpp:

          Added support for optional dynamic grow of the log.

        * cuts/BDC/svcs/XML:
        * cuts/BDC/svcs/XML/CUTS_XML.h:
        * cuts/BDC/svcs/XML/CUTS_XML.inl:
        * cuts/BDC/svcs/XML/CUTS_XML.mpc:
        * cuts/BDC/svcs/XML/CUTS_XML.cpp:
        * cuts/BDC/svcs/XML/CUTS_XML_export.h:

          BDC service that writes collected performance metrics to
          and XML file.

        * cuts/CPUWorker.cpp:

          Moved the calibration error message to the constructor.

        * cuts/CUTS.mpc:

          Added the XML metrics source files.

        * cuts/Benchmark_Agent_i.cpp (collect_performance_data):

          Update the timestamp packaging to use the insertion
          operation.

        * cuts/Benchmark_Collector_Visitor.cpp:
        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:

          Updated the packaging code to handle the new representation
          of the CUTS::Time_Stamp type.

        * cuts/Port_Agent.inl (record_alloc):

          The agent now returns the default record if it does not receive
          and record from the log.

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:

          Added support for storing the names of the output ports for
          this input port.

        * cuts/System_Metrics_Visitor.h:

          Removed the 'cuts/config.h' include statement.

        * cuts/Time_Measurement.cpp (operator +=):

          Bug fix that was causing the count_ not to be increamented
          when a new time was added.

        * cuts/Time_Metric.h (update):
        * cuts/Time_Metric.cpp:

          Changed the time parameters to ACE_Time_Value.

        * cuts/XML_Metrics_Writer.h:
        * cuts/XML_Metrics_Writer.inl:
        * cuts/XML_Metrics_Writer.cpp:

          Implementation of a metrics visitor that writes the performance
          metrics to an XML file.

        * cuts/config.h:

          Added an id for senders of type system.

        * cuts/performance.idl:

          The Time_Stamp is now a structure that has a sec and
          usec attribute.

Mon Apr 16 03:59:11 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Fixed compilation error on gcc 3.4.4

Mon Apr 16 03:19:25 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/calibrate/calibrate.cpp:

          Fixed compilation error on gcc 3.4.4

Mon Apr 16 00:13:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_MPC_Workspace.cpp:

          Bug fix that was causing non-Windows CoWorkEr builds to not
          deploy if inlining was turned on.

Sun Apr 15 18:15:27 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service.inl (svc_mgr):

          Changed return type to a 'const' to prevent loaded services from
          modifying the service manager.

        * cuts/BDC/BDC_Service_Manager.cpp (handle_metrics):

          Bug fix that was causing the UUID of the service manager
          to be reset.

        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp (service):

          Bug fix that was causing services with more than one argument
          only receive the first argument.

Sun Apr 15 17:58:29 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Removed the restriction that calibration must be run as
          root on non-Windows systems. Now, it just prints a nice
          warning message.

Sun Apr 15 06:06:05 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Fixed compilation errors on Linux.

Sun Apr 15 05:12:00 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record.h:
        * cuts/Activation_Record.inl:

          Overloaded the open () method so event handlers have the option
          of setting the record's owner. This is handy for event handlers
          that are parameterized by CUTS::Payload_Event and CUTS::Empty_Event.

        * cuts/CCM_Events_T.h:

          Removed the cuts/events_i.h header file because it was pulling
          in unnecessary libraries.

        * cuts/CUTS.idl:

          - Added sender member to CUTS::Empty_Event.
          - CUTS::Payload_Event is now a subclass of CUTS::Empty_Event.

        * cuts/Event_Handler_T.h:
        * cuts/Event_Handler_T.inl:
        * cuts/Event_Handler_T.cpp:

          Specialized the CUTS_Event_Handler_Base_T class for CUTS::Empty_Event
          and CUTS::Payload_Event event types. The specialized classes leverage
          the sender () member to tag the event with the sending component's id.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp (write_impl_begin):

          Added a preprocessing step to determine if the executor file needs
          to include "cuts/events_i.h". This is determined by the presence of
          an event source with an event type of CUTS::Payload_Event.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp (write_impl_begin):
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp (write_impl_begin):

          Added an extra blank line before the generated 'namespace'
          statement.

Sat Apr 14 22:03:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/events_i.h:
        * cuts/events_i.cpp (size):

          The payload event now fills the payload with a dummy value
          to force the middleware to send the payload.

Sat Apr 14 00:56:20 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.h:

          Added a new named functor for invoking the run () method
          of the CPU worker. This is temporary until I finish the
          unnamed functor generator.

Fri Apr 13 23:41:04 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS_stub_export.h:

          Added cuts/config.h to the include statements.

        * cuts/CCM_Events_T.h:

          Added cuts/events_i.h to the include statements.

        * cuts/CUTS.idl:

          Moved the events from events.idl here.

        * cuts/CUTS.mpc:

          Removed cuts/events.idl.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp (write_OutputAction_begin):

          If the event type is an CUTS::Payload_Event, then we generate
          personal implemenation that will create a payload of the right
          size.

        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Removed code that registers value type factories. This is
          handle by the servant. Moreover, we do not support valuetypes
          that have methods.

        * cuts/events_i.h:
        * cuts/events_i.inl:
        * cuts/events_i.cpp:

          Implementation of the Payload_Event OBV that will create
          and payload of the correct size with size () method is
          invoked.

        * cuts/events.idl:

          Removed this file.

Fri Apr 13 20:00:28 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.cpp (Visit_OutputAction):

          1st parameter of bind was missing a reference qualifier. I have
          no idea how this creeped in there.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Files were including inline files that were recently removed.

Fri Apr 13 19:42:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * CUTS_CoSMIC.mwc:

          - Moved the cmdline statement to the base workspace since it
            was redundant.
          - Moved the modeling related projects from CUTS.mwc to
            CUTS_CoSMIC.mwc

        * utils/BMW/BMW.mpc:
        * etc/config/requires_bmw.mpb:

          Move the bmw required feature to the base project.


        * cuts/be/CIAO/UDM_CIAO.mpc:
        * cuts/be/CIAO/BE_CIAO.mpc:

          Renamed the primer to the latter.

Fri Apr 13 19:23:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:

          Added support for setting the properties of output action,
          i.e., the values of an output actions members, in generated
          C++ source code.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Traits.h:

          Removed unncessary method class on the CoWorkEr proxy
          code generator.

        * cuts/be/CIAO/CIAO_Traits_Base.cpp (write_InEventPort_begin):

          Fixed source code formatting.

        * tests/cuts/workers/CPU_Worker_Test.cpp:

          Fixed compilation errors.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.inl:

          Removed these files.

Fri Apr 13 07:39:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Moved the location of a info message before the calibration
          method changes the thread priority. This will allow to be
          printed to the screen.

Fri Apr 13 07:29:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Added an end-line to the generated file.

Fri Apr 13 07:25:11 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          Fixed bug that was caused by using ACE_Env_Value i
          incorrectly. This class was removed from code and
          ACE_OS::getenv is used directly.

        * utils/calibrate/calibrate.cpp:

          Added debug messages. These are going to become
          verbose messages.

Fri Apr 13 06:34:56 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added utils/calibrate to the workspace build.

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:

          Calibration was missing initialization phase to set the
          priority to the highest possible to prevent any interruptions.

        * cuts/Worker.h:
        * cuts/Worker.inl:

          Added release () method for dynamic deallocation purposes.

        * utils/calibrate:
        * utils/calibrate/calibrate.cpp:
        * utils/calibrate/calibrate.mpc:

          Utility application that is used to calibrate workload
          generators.

Fri Apr 13 05:41:47 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp (make_calibration_filename):

          Changed MAX_PATH to 1024

Fri Apr 13 05:27:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker.h:
        * cuts/Worker.inl:

          Added an calibration method that concrete workers can
          overload to perform calibration any operations.

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:

          Added calibration mechanisms to the CPU worker. This will
          enable clients to use the run () method, which honors execution
          times up to 1 second.

        * etc/calibration:

          Directory for holding the calibration files for different
          workload generators.

Thu Apr 12 15:19:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record.h:
        * cuts/Activation_Record.inl:

          Added writeable method for start_time, stop_time, and
          endpoints.

        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.cpp:

          Added support for print the metric history's size.

        * cuts/Benchmark_Collector_Visitor.cpp:

          Updated the code that packs the history metrics into the
          data structure transmitted to the BDC.

        * cuts/IDL_Streams.cpp:

          Added support for unpacking the history from the performance
          metrics that transmitted to the BDC.

        * cuts/Port_Agent.inl:
        * cuts/Port_Agent.cpp:

          The metric log was not being reset when the port
          port agent was reset.

        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:

          The generated code always threw CORBA::NO_MEMORY () exception
          when the component was created by the factory.

        * cuts/config.h:

          Added a default configuration parameter for the size of
          the metric log.

        * cuts/performance.idl:

          Updated the packing structure for the history metrics.

Wed Apr 11 22:32:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Added new IDL files to the CUTS_stub project.

        * cuts/CUTS.idl:
        * cuts/events.idl:
        * cuts/events_i.h:
        * cuts/events_i.inl:
        * cuts/events_i.cpp:

          Added support for generating dummy events with no payload
          and with payload.

Wed Apr 11 20:58:29 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Env_Visitor_T.cpp (Visit_InputAction):

          Fixed runtime bug that was caused by using the wrong
          visitor object to parse the behavior.

Wed Apr 11 16:03:18 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_algorithm.h:

          The specializations of is_container for set and vector objects
          was missing template parameters.

        * cuts/be/BE_Env_Visitor_T.h:
        * cuts/be/BE_Env_Visitor_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Impl_Generator_T.cpp:

          Added more points of customization into the interpretation
          logic.

Wed Apr 11 15:29:10 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_algorithm.h:

          Changed all iterate* functions and traits to visit*.

Wed Apr 11 15:16:32 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Impl_Generator_T.cpp:

          Replaced the remaining container visits with iterate
          templates that can be specialized.

        * cuts/be/BE_algorithm.h:

          - Added templates to check if a type is a contain.
          - The iterate template now can handle single element
            types and contain types.

Tue Apr 10 02:31:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.cpp:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Agh!!! Template code still contained deprecated macros!!

Mon Apr  9 22:28:55 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Agh!!! Template code still contained deprecated macros.

Mon Apr  9 20:52:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Template code still contained deprecated macros.

Mon Apr  9 20:47:10 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:

          Template code still contained deprecated macros.

Mon Apr  9 20:44:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:

          Code generator still was generating source code that contained
          deprecated macros.

Wed Apr  4 21:56:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.cpp:

          Fixed a bug that would crash the BDC is a service did not
          have any command-line arguments (i.e., token parser returned
          0 for the service's arguments).

        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          - Removed constraint that the listing of services for the service
            attribute had to end in a semi-colon. Also, services are not
            required to specifiy any command-line arguments.

          - The BDC now displays how many services loaded successfully
            and how many services failed to load.

Wed Apr  4 21:24:55 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          Removed unnessary output messages.

Wed Apr  4 21:17:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_manager.pl:
        * bin/cuts_node.pl:
        * bin/cuts_planner.pl:
        * bin/cuts_test.pl:

          Changed the location of the binaries to $CIAO_ROOT/bin

        * cuts/CCM_Context_T.h:
        * cuts/CCM_Context_T.inl:

          Implemented resolve_service_reference () method.

Tue Apr  3 15:33:45 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS_CRN.mpc:
        * cuts/CUTS.mpc:
        * etc/config/cuts_bdcsvc.mpb:
        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:

          Fixed compilation errors with ACE+TAO+CIAO 5.5.7 related to
          invalid project specifications.

        * cuts/Activation_Record.h:
        * cuts/Activation_Record.inl:
        * cuts/Activation_Record.cpp:

          Moved the copy constructor and assignment operator to the
          public section and implemented both methods.

        * cuts/Activation_Record_Log.h:
        * cuts/Activation_Record_Log.inl:
        * cuts/Activation_Record_Log.cpp:

          Implementation of a class for pre-allocated activation records
          for minimizing dynamic allocations and memory copying.

        * cuts/CUTS.idl:

          Added the generic_object member to the Component_Registration
          structure.

        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.cpp:
        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service_Manager.cpp:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.cpp:
        * cuts/Trigger_T.cpp:
        * cuts/Worker_T.cpp:
        * cuts/utils/ODBC/ODBC_Parameter_List.cpp:
        * cuts/utils/ODBC/ODBC_Types.inl:
        * utils/Node_Daemon/Node_Daemon_Client.cpp:
        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          Removed deprecated macros

        * cuts/Event_Handler_Manager_T.inl:

          The name setter/getter method uses const ACE_CString & instead
          of a const char * now.

        * cuts/Benchmark_Collector_Visitor.cpp:
        * cuts/IDL_Streams.cpp:

          Removed (un)packing code for the history values.

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          The proxy now sends the object reference for its component when
          registering a component with the testing service.

        * cuts/Event_Handler_T.inl:
        * cuts/Event_Handler_T.cpp:

          The event handle now requests an activation record from the
          contained port agent, and stores this in the TSS for later
          access.

        * cuts/Port_Agent.h:
        * cuts/Port_Agent.inl:
        * cuts/Port_Agent.cpp:

          The port agent now contains a set of pre-allocated activation
          records to minimize memory allocation/deallocation, and allow
          preservation of historical performance metrics.

        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:
        * cuts/Port_Measurement_Map.h:
        * cuts/Port_Measurement_Map.inl:
        * cuts/Port_Measurement_Map.cpp:
        * cuts/Port_Measurement_Pool.h:
        * cuts/Port_Measurement_Pool.inl:
        * cuts/Port_Measurement_Pool.cpp:

        * cuts/Thread_Activation_Record.h:
        * cuts/Thread_Activation_Record.inl:
        * cuts/Thread_Activation_Record.cpp:

          Client applications are no longer required to initialize and
          finalize the thread activation record.

        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.inl:
        * cuts/Time_Measurement.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.cpp:

          Removed the code that keeps track of historical values.

        * cuts/Time_Value_History.h:

          Implemented helper methods for timing.

        * cuts/performance.idl:

          Added an history element to the Time_Info structure. This
          will be removed soon for a different design choice.

Fri Mar 30 05:10:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/License.rtf:

          Moved from $CUTS_ROOT/install

        * install/CUTS_CoSMIC.wxs:

          Updated user interface Wix variables.

        * install/images:

          The old Bitmaps directory.

        * install/Bitmaps:
        * install/Bitmaps/bannrbmp.bmp:
        * install/Bitmaps/dlgbmp.bmp:
        * install/License.rtf:

          Removed these files.

Fri Mar 30 05:01:46 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW_installers.mpc:

          - Changed Wix_Files to Wxs_Files.
          - Added Merge_Modules.wxs to the project.

        * install/CUTS_CoSMIC_installers.mpc:

          Changed Wix_Files to Wxs_Files.

        * install/CUTS_CoSMIC.wxs:

          - Changed the installer version to 150.
          - Remove the component references to UDM and Xerces.

        * install/CUTS_PICML.wxs:

          - Removed all merge module features.
          - Compressed the registry specifications.

        * install/Merge_Modules.wxs:

          Added a file for the merge modules.

        * install/installers.mwc:

          This was the old CUTS_installer.mwc file.

        * install/CUTS_installers.mwc:

          Removed this file.

Fri Mar 30 00:29:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * NEWS:

          Updated the NEWS file.

Fri Mar 30 00:19:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.inl:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          The UUID of the service manager is stored in the target
          database (i.e., associated with the current test) after the
          service is activated.

        * cuts/svcs/dbase/DB_Service.h:
        * cuts/svcs/dbase/DB_Service.cpp:

          Added method (set_test_uuid) for associating a UUID with a
          particular test number.

Thu Mar 29 22:01:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cosmic_lib.mpb:

          Removed libout and dllout keywords.

        * etc/config/cuts_base.mpb:

          Changed libpaths from $(COSMIC_ROOT)/lib to $(CUTS_ROOT)/lib

        * etc/config/cuts_gme.mpb:

          Added $(COSMIC_ROOT)/lib to the libpaths.

        * etc/config/cutslib.mpb:

          Changed the location of libout and dllout to $(CUTS_ROOT)/lib
          and $(CUTS_ROOT)/bin, respectively.

        * utils/GUTS/gems2picml_App.h:

          Fixed build error related to moving the GME C++ programmatic
          library to CoSMIC/utils.

Wed Mar 28 21:30:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/RawComponent.cpp:

          Fix bug that would prevent .xme files from importing because
          the output directory was store incorrectly in the model registry.

        * MDE/GME/paradigms/PICML/interpreter/Component.rc:
        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:

          Added a new option for generating CUTS proxy models.

        * MDE/GME/paradigms/PICML/interpreter/resource.h:

          Added a missing file that contains the ids for all the
          resouce elements.

        * cuts/be/BE.mpc:

          Added new source files to the project.

        * cuts/be/BE_Assembly_Generator.h:
        * cuts/be/BE_Assembly_Generator.inl:
        * cuts/be/BE_Assembly_Generator.cpp:

          Implemented a class that auto-generates CUTS proxies for the
          modeler.

        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_Env_Visitor_T.cpp:

          Enabled the generation of environment behavior using the
          generative programming technique.

        * cuts/be/BE_Options.h:

          Added a new option to allow generation of the CUTS proxy
          model elements.

        * cuts/be/BE_Position.h:
        * cuts/be/BE_Position.inl:
        * cuts/be/BE_Position.cpp:

          Implemented a helper class to simplify working with position's
          on modeling elements.

        * cuts/be/BE_algorithm.h:

          - Fixed bug in CUTS_BE_NOT_VISIT macro that was generating invalid
            trait class for not visiting elements.

        * cuts/be/BE_nil.cpp:

          The source file was need to fix linking problems.

        * cuts/be/CoWorkEr_Cache.h (is_coworker):

          Changed this to a static method.

Wed Mar 28 21:27:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:

          Added a test_uuid field to the tests table.

Wed Mar 28 21:23:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Fixed bug that was preventing proxies not connected to the
          BDC from invoking ciao_preactivte () on the instrumented
          component.

Wed Mar 28 18:16:49 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:

          Changed the UUID from a valid uuid to any arbitrary unique
          string that can be set by the client.

        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          Added a test_uuid attribute to the BDC component's interface.

Thu Mar 22 17:02:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/wix.mpb:

          Removed this file since it's now located in
          $(COSMIC_ROOT)/MPC/config

Wed Mar 21 18:23:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_gme.mpb:

          Changed the include location for the GME C++ programmable
          backend since it was pushed down into the CoSMIC repo.

Wed Mar 21 18:03:15 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.cpp:

          Fixed bug that was prevent the main dialog from closing if
          a valid directory was not specified when model generation
          was selected, instead of model interpretation.

Mon Mar 19 22:52:42 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_gme.mpb:

          Updated the 'includes' specification to point to the new
          location of the GME utility library.

        * MDE/GME/gme:
        * MDE/GME/gme/Application.h:
        * MDE/GME/gme/Application.cpp:
        * MDE/GME/gme/Atom.h:
        * MDE/GME/gme/Atom.cpp:
        * MDE/GME/gme/Component.h:
        * MDE/GME/gme/Component.cpp:
        * MDE/GME/gme/ComponentEx.h:
        * MDE/GME/gme/ComponentEx.cpp:
        * MDE/GME/gme/Exception.h:
        * MDE/GME/gme/Exception.inl:
        * MDE/GME/gme/Exception.cpp:
        * MDE/GME/gme/FCO.h:
        * MDE/GME/gme/FCO.cpp:
        * MDE/GME/gme/Folder.h:
        * MDE/GME/gme/Folder.cpp:
        * MDE/GME/gme/Folder_Model_T.h:
        * MDE/GME/gme/Folder_Model_T.inl:
        * MDE/GME/gme/Folder_Model_T.cpp:
        * MDE/GME/gme/GME.h:
        * MDE/GME/gme/GME.cpp:
        * MDE/GME/gme/GME.mpc:
        * MDE/GME/gme/GME_export.h:
        * MDE/GME/gme/GME_fwd.h:
        * MDE/GME/gme/Interpreter.h:
        * MDE/GME/gme/Interpreter.cpp:
        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/MetaBase.cpp:
        * MDE/GME/gme/MetaFCO.h:
        * MDE/GME/gme/MetaFCO.inl:
        * MDE/GME/gme/MetaFCO.cpp:
        * MDE/GME/gme/MetaFolder.h:
        * MDE/GME/gme/MetaFolder.inl:
        * MDE/GME/gme/MetaFolder.cpp:
        * MDE/GME/gme/MetaModel.h:
        * MDE/GME/gme/MetaModel.inl:
        * MDE/GME/gme/MetaModel.cpp:
        * MDE/GME/gme/MetaRole.h:
        * MDE/GME/gme/MetaRole.inl:
        * MDE/GME/gme/MetaRole.cpp:
        * MDE/GME/gme/Model.h:
        * MDE/GME/gme/Model.cpp:
        * MDE/GME/gme/Object.h:
        * MDE/GME/gme/Object.cpp:
        * MDE/GME/gme/Project.h:
        * MDE/GME/gme/Project.cpp:
        * MDE/GME/gme/Reference.h:
        * MDE/GME/gme/Reference.inl:
        * MDE/GME/gme/Reference.cpp:
        * MDE/GME/gme/RegistryNode.h:
        * MDE/GME/gme/RegistryNode.inl:
        * MDE/GME/gme/RegistryNode.cpp:
        * MDE/GME/gme/Set.h:
        * MDE/GME/gme/Set.cpp:
        * MDE/GME/gme/Territory.h:
        * MDE/GME/gme/Territory.cpp:

          Removed these files and placed them in CoSMIC.

Sat Mar 17 20:43:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_algorithm.h:

          Changed 'CUTS_BE_NO_VISIT_ALL' macro definition to
          'CUTS_BE_NOT_VISIT_ALL'.

Sat Mar 17 20:01:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:

          Removed the BE_List_T.cpp template file and replaced it with
          BE_List_T.h.

        * cuts/be/BE_algorithm.h:

          - All the integral traits where missing a 'const' modifier.
          - Changed the generate_if trait to generate (), which is a
            factory function that uses generative programming to
            derive the correct generate functor.

        * cuts/be/CIAO/UDM_CIAO_Export.h:
        * cuts/be/BE_export.h:

          Regenerated the export files with support for ACE.

        * cuts/be/BE_Depend_Graph_T.h:
        * cuts/be/BE_Depend_Graph_T.cpp:

          Added support for removing existing nodes from the
          graph.

        * cuts/be/BE_Preprocessor.h:
        * cuts/be/BE_Preprocessor.inl:
        * cuts/be/BE_Preprocessor.cpp:

          - Added support for removing preprocessed implementations
            from the graph.
          - Replaced all integrated singleton implementation with
            ACE_Singleton.

        * cuts/be/BE_Impl_Generator_T.h:
        * cuts/be/BE_Impl_Generator_T.inl:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_Env_Visitor_T.h:
        * cuts/be/BE_Env_Visitor_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:

          Reimplemented the entire backend using the generative
          programming approach. All the point-of-generation in the
          source code where a 'traits_' method was invoked was replaced
          with the generate factory method.

        * cuts/be/BE_List_T.h:

          Replaced the specialized list with a more generic list that
          can be used with any backend generate outside of CUTS.

        * cuts/be/BE_Manager_T.h:

          Made aesthetic changes to the template parameter names.

        * cuts/be/BE_nil.h:

          All the integral traits were missing the 'const' modifier.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:

          Removed the write_includes () method.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:

          Added a ACE_Singleton variable to each class.

        * cuts/be/CIAO/CIAO_Traits_Base.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          Added a write_include () method, which writes the value of a
          single include file to the output file.

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Added CIAO_Traits.cpp to the project.

        * cuts/be/CIAO/CIAO_Traits.h:
        * cuts/be/CIAO/CIAO_Traits.h:

          CIAO traits for the metaprogrammable backend of the
          CUTS interpreters.

        * cuts/be/CIAO/CIAO_Manager.h:

          Use CUTS_BE::CIAO_Traits as the EXECUTOR template parameter
          in support of the new backend's implementation/architecture.

        * etc/config/cosmic_lib.mpb:

          Replaced cuts_base with cutslib as the base project so we
          can use ACE within the interpreters.

        * cuts/be/BE_List_T.inl:
        * cuts/be/BE_List_T.cpp:

          Removed these files.

Sat Mar 17 19:47:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/natural-lang/Natural_Lang_Generator.cpp (open_file):

          CUTS_BE_Impl_Node pointer was missing the 'const' keyword.

Tue Mar 13 23:20:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Collector_Visitor.cpp:

          Added function headers/documentation.

        * cuts/IDL_Streams.cpp:

          Added support to adding the history metrics to the
          performance IDL structure.

        * cuts/Time_Measurement.inl:

          Added a missing missing accessor method.

        * cuts/performance.idl:

          Added a history field for sending the history of
          all metrics collected to the BDC.

Tue Mar 13 17:07:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.inl:
        * cuts/Time_Measurement.cpp:

          Added support to keeping a history of all the logged
          time values.

        * cuts/be/BE.mpc:

          Added BE_algorithm.h and BE_nil.h to the BE project.

        * cuts/be/BE_algorithm.h:

          Implemented a set of algorithms to be used with the
          metaprogrammable backend, which allows suppression of
          different execution flows.

        * cuts/be/BE_nil.h:

          Implemented a NIL generator for the metaprogrammable
          backend modeling backend.

        * cuts/be/BE_Impl_Generator_T.cpp:

          Added markup code that shows how the generative programming
          approach will work.

Sat Mar 10 07:44:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML.mpc:

          Added the natural language libraries to the interpreter
          compilation, but the natural language interpreter is not
          exposed to the user.

        * cuts/be/BE.mpc:

          Added BE_Scope_Manager{.h,.inl,.cpp} to the project.

        * cuts/be/BE_Execution_Visitor_T.cpp:

          Added write_action_end () method at the end of
          Visit_OutputAction ().

        * cuts/be/BE_Scope_Manager.h:
        * cuts/be/BE_Scope_Manager.inl:
        * cuts/be/BE_Scope_Manager.cpp:

          Implemented a class that is responsible for managing
          the scope of objects.

        * cuts/be/natural-lang:
        * cuts/be/natural-lang/Natural_Lang.mpc:
        * cuts/be/natural-lang/Natural_Lang_Generator.h:
        * cuts/be/natural-lang/Natural_Lang_Generator.inl:
        * cuts/be/natural-lang/Natural_Lang_Generator.cpp:
        * cuts/be/natural-lang/Natural_Lang_Manager.h:
        * cuts/be/natural-lang/Natural_Lang_export.h:

          Implemented a natural langauge interpreter that generates a text
          file that describes the behavior of each implementation. This
          backend has not been integrated into the main interpreter. Right
          now it is part of a proof-of-concept.

Fri Mar  9 06:22:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Removed the 'PICML' project dependency.

        * etc/config/picml_udm.mpb:

          Added the 'PICML' project dependency.

Fri Mar  9 06:06:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_List_T.inl:

          The open_file () method returns the logical or of all the
          nodes in its list. Therefore, if one node succeeds then
          the operation succeeds.

        * cuts/be/BE_Manager_T.h:
        * cuts/be/BE_Manager_T.cpp:

          Removed the proxy template parameter since there is no
          distinction between a proxy and a non-proxy component.

        * cuts/be/BE_Traits.inl:

          open_file () return 'false' by default.

        * cuts/be/CIAO/CIAO_Manager.h:

          Removed the proxy parameter from the manager's declaration
          and combined the proxy and implemenation generator into
          a BE_List_T, which is used to parameterize the backend
          manager.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          Added guards to each method that return control to the
          caller if the output file is not open.

Fri Mar  9 05:27:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/gme_base.mpb:

          Added the 'noinline' feature blocks.

        * MDE/GME/gme/GME.mpc:
        * etc/config/cuts_gme.mpb:

          Removed the feature blocks and added  gme_base as a
          base project.

        * etc/config/gme_component.mpb:

          Added pch_header and pch_source project declarations.

Fri Mar  9 00:18:16 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Exception.inl:
        * MDE/GME/gme/Exception.cpp:

          Moved all empty methods from Exception.cpp to
          Exception.inl.

        * MDE/GME/gme/Folder_Model_T.inl:

          Fixed incorrect inline specification(s).

        * MDE/GME/gme/GME.mpc:

          Moved the feature block(s) to the top of the project file
          since they must come before any project declaration.

        * cuts/be/BE.mpc:

          Added BE_MPC_Workspace{.h,.inl,.cpp} and
          BE_Workspace_Strategy{.h,.inl,.cpp}.

        * cuts/be/BE_MPC_Workspace.h:
        * cuts/be/BE_MPC_Workspace.inl:
        * cuts/be/BE_MPC_Workspace.cpp:

          Implemented a workspace strategy that generates workspaces
          for the Makefile Project Creator utility.

        * cuts/be/BE_Manager_T.h:
        * cuts/be/BE_Manager_T.cpp:

          Removed all private variables and placed them in the the
          handle () method since that is the only method using them.

        * cuts/be/BE_Project_Generator.h:
        * cuts/be/BE_Project_Generator.inl:
        * cuts/be/BE_Project_Generator.cpp:

          Removed the pure virtual methods so this can be an empty
          base class.

        * cuts/be/BE_Workspace_Generator_T.h:
        * cuts/be/BE_Workspace_Generator_T.cpp:

          - Added a new parameter that allows backends to customize
            the workspace generator.
          - Generalized the generate () method to use the WORKSPACE_STRATEGY
            template parameter when generating the workspace.

        * cuts/be/BE_Workspace_Strategy.h:
        * cuts/be/BE_Workspace_Strategy.inl:
        * cuts/be/BE_Workspace_Strategy.cpp:

          Empty strategy that all workspace generators derive from.

        * cuts/be/CIAO/CIAO_Manager.h:

          Added CUTS_BE_MPC_Workspace as the workspace parameter
          for the code generator.

        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:

          Changed generate_stub () -> write_stub_project () and
          generate_exec () -> write_exec_project ().

        * etc/config/cuts_gme.mpb:

          Added 'noinline' feature blocks to the base project.

        * etc/config/gme_component.mpb:

          Remove the '/server none' and '/client none' parameters from
          the midl_flags since they were duplicate flags.

Thu Mar  8 07:34:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * default.features:

          Added a new feature named 'noinline' to MPC files that
          dictates if, or if not, files should be inlined.

        * cuts/Auto_Functor_T.inl:

          Fixed invalid inline specification.

Thu Mar  8 07:30:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/GME.mpc
        * etc/config/cuts_base.mpb:

          Added 'noinline' feature blocks to set the correct
          macro(s) and compiling sources with inlining enabled.

Thu Mar  8 05:33:19 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:

          - The data collection done event is stored internally to
            the task.
          - Added (un)register_handler methods that allow objects
            to receive notices when the system metrics collected from
            components changes.

        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          - Moved the collection done notification event into the
            BDC_Task class.
          - Registered the BDC_Service_Manager singletone with the
            BDC_Task during ciao_preactivate ().

        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.h:
        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.cpp:

          Updated the visitor to use the new function signatures
          for each method in the CUTS_System_Metric_Visitor class.

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.cpp:

          Removed the active object for notifying loaded services
          when metrics are collected from all the components. This
          is now handled by the BDC_Task active object.

        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service.inl:
        * cuts/BDC/svcs/IO/BDC_IO.h:
        * cuts/BDC/svcs/IO/BDC_IO.cpp:
        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Updated the handle_metrics () method to use the new
          function signature.

        * cuts/CUTS.mpc:

          Added the System_Metric_Handler.cpp source file.

        * cuts/Component_Registry_Handler.h:
        * cuts/Component_Registry_Handler.inl:
        * cuts/Component_Registry_Handler.cpp:

          - Removed the pure virtual method declaration from
            handle_component
          - Re-implemented the class so that it is a normal class
            that can only be subclassed, i.e., its constructor(s)
            is declared in the protected region.

        * cuts/Port_Metric.inl:

          Added a read-only version of transit_time ().

        * cuts/System_Metric_Handler.h:
        * cuts/System_Metric_Handler.inl:
        * cuts/System_Metric_Handler.cpp:

          Implemented a callback handler for receiving event
          notifications related to the system metrics. This is mainly
          used by the BDC task that collects performance metrics and
          needs to notify all parties when the collection is complete.

        * cuts/System_Metrics_Visitor.h:
        * cuts/System_Metrics_Visitor.inl:

          Added a const modifier to all the visitation methods, so they
          can be used within const methods. This, however, makes the
          visitation read-only.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.cpp:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.cpp:

          Added a const modifier to the accept () methods. This makes
          the visitation operations and parameter read-only.

Wed Mar  7 16:18:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/bmw-install.html:
        * docs/build.html:
        * docs/database.html:
        * docs/index.html:

          Removed these files.

Wed Mar  7 00:16:23 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Component_Registry.h:

          Updated the Doxygen documentation for the methods.

Wed Mar  7 00:05:47 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service.inl:
        * cuts/BDC/BDC_Service.cpp:

          Removed the active object from the service since this meant
          each loaded service would have an active object, and thus
          affect scalability.

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.cpp:

          The service manager now contains the active object for
          monitoring the collection done event.

Tue Mar  6 22:29:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:

          The BDC service manager now contains a UUID for unique
          identifying its services from the services of other BDC's.
          The UUID can be accessed via the get_uuid () method.

Tue Mar  6 21:58:20 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:

          - The service manager now stores a pointer to the testing
            service assigned parent BDC (this is passed in via the
            open () method).
          - Implemented an accessor method for the testing service
            so loaded services can access to the testing service's
            data (e.g., component registry).

        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          Passed the internally stored testing service to the open ()
          method of the BDC service manager.

        * cuts/BDC/Testing_Service_exec_i.h:

          Removed the commented out method (ccm_registry) since it
          is no longer needed.

        * cuts/BDC/svcs/IO:
        * cuts/BDC/svcs/IO/BDC_IO.h:
        * cuts/BDC/svcs/IO/BDC_IO.cpp:
        * cuts/BDC/svcs/IO/BDC_IO.mpc:
        * cuts/BDC/svcs/IO/BDC_IO_export.h:
        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.h:
        * cuts/BDC/svcs/IO/IO_System_Metric_Visitor.cpp:

          Implemented a new BDC service that writes all BDC events
          to the console in a readable format.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.cpp:

          Implemented the get_component_info () method, which allows
          a client to get informatation about a component given its
          id.

Mon Mar  5 21:43:24 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Added a guard that only allows handle_activate () to
          process the data only if the state_ of the component is
          STATE_ACTIVATE.

        * cuts/BDC/svcs/dbase/DBase_Service.cpp (handle_activate):

          Change the comparison value from 1 to STATE_ACTIVATE.

        * cuts/Component_Info.h:

          The state_ is now an enumeration of type Component_State.

        * cuts/Component_Registry.cpp (register_component):

          The state_ is now assigned the value of STATE_ACTIVATE.

        * cuts/Time.h:
        * cuts/Time.cpp:

          Added another overload to CUTS_string_time to convert a
          ACE_Time_Value to a C-string of the specified format.

Thu Mar  1 19:24:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Folder.cpp (registry_value):
        * MDE/GME/gme/RegistryNode.cpp (value):

          Fixed a bug that was causing an NULL exception when requesting
          the value of an registry node that was non-existent. Now, if
          the node was non-existent, the return value is an empty string.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML.mpc:

          Added cuts_gme as a base project.

        * MDE/GME/paradigms/PICML/interpreter/Component.rc:

          - The output directory for the generated files is now displayed
            as a text box, with a Browse... button.
          - When the user selects either of the radio buttons, it
            enables/disables to the appropriate dialog controls.

        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.h:
        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.cpp:

          - Updated its documentation
          - Removed the Menu_Option enum
          - The dialog now stores a pointer to a CUTS_BE_Options object
            which is stores its data

        * MDE/GME/paradigms/PICML/interpreter/RawComponent.h:
        * MDE/GME/paradigms/PICML/interpreter/RawComponent.cpp:

          Added process and postprocess methods to retrieve/store
          the previous/current output directory in the model between
          interpreter invocations.

        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp (UdmMain):

          - Removed the code that would display the browse for folder
            dialog since its now handled by Main_Dialog.
          - The Main_Dialog is initialized with the singleton CUTS_BE_Options.
          - The switch statement now uses the menu enum in CUTS_BE_Options
            since the menu enum in Main_Dialog has been removed.

        * cuts/be/BE_Options.h:

          Added an enumeration (and variable of the enum type) that
          holds the backend operation the user wants to execute.

Thu Mar  1 03:37:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Folder.h:
        * MDE/GME/gme/Folder.cpp:

          Added support for interacting with the GME registry from a
          folder element.

Thu Mar  1 02:45:45 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Component.h:
        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/RegistryNode.h:
        * MDE/GME/gme/Territory.h:

          Added a #if defined (__ComponentLib_h__) proprocessor statement
          around all Mga.h header files just in case this library is
          used with the current implementation of GME components. Since
          the backend of GME is not implemented as a shared library, it
          regenerates the stubs, which conflicts with the ones generated
          by the shared library version of the GME backend.

Thu Mar  1 02:13:37 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/GME.mpc:

          Added RegistryNode{.h,.cpp,.inl} files to the GME
          project.

        * MDE/GME/gme/RegistryNode.h:
        * MDE/GME/gme/RegistryNode.inl:
        * MDE/GME/gme/RegistryNode.cpp:

          Implemented a wrapper class for IMgaRegNode interface.

Wed Feb 28 16:51:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/CUTS_CoSMIC.wxs:

          - Removed the COSMIC_ROOT and COSMIC_BIN variable declarations.
          - Removed the entire CUTS_components components (see change
            below).

        * install/CUTS_PICML.wxs:

          Refactored the CUTS_components component into its separate
          .wxs file. This will allow other WIX projects (installers)
          to include the CUTS_PICML interpreter in their installer
          by adding the CUTS_PICML.wxs to their project, and adding
          a <ComponentRef id='CUTS_PICML'> declaration to the appropriate
          feature node.

        * install/CUTS_CoSMIC_installers.mpc:

          Added CUTS_PICML.wxs to the CUTS_CoSMIC installer project.

Mon Feb 26 06:38:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/wix.mpb:

          Placed <%quote%> tags around the command keyword's
          value.

        * install/BMW.wxs:
        * install/BMW_installers.mpc:
        * install/CUTS_CoSMIC.wxs:
        * install/CUTS_CoSMIC_installers.mpc:

          Updated the install scripts to be Wix 3.0 compliant.

        * install/Bitmaps/bannrbmp.bmp:
        * install/Bitmaps/dlgbmp.bmp:

          Resized the bitmaps the Wix 3.0 specification size.

Sun Feb 25 09:36:47 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          - Changed the UI to WixUI_Mondo
          - The default install location for the BMW website is
            C:\Program Files\CoSMIC\CUTS\Benchmark Manager Web Utility.
          - Fixed the <Directory> statements to be consistent with the
            preferred method for creating .wxs files (i.e., begins with
            and TARGETDIR and SourceDir directory element).

        * install/BMW_installers.mpc:

          Added the missing prebuild statement to compile the
          ASP.NET website.

Sun Feb 25 08:22:19 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/ComponentConfig.h:

          Changed the progid to CUTS.Interpreter.PICML.

        * NEWS:

          Updated the NEWS file with the latest user visible
          changes in CUTS.

Sun Feb 25 07:26:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/Bitmaps:
        * install/Bitmaps/bannrbmp.bmp:

          Added a banner bitmap that is displayed by all CUTS
          installers.

Sun Feb 25 06:52:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/License.rtf:

          Added the DOC software license agreement to the installers.

Sun Feb 25 06:10:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/wix.mpb:

          - Improved the WIX project specification. Now, there is only
            one block (i.e., Wix_Files) needed to build a .msi. All files
            in a project located under the Wix_Files block will be used
            to construct the .msi file.
          - Removed  Define_Custom (WIXOBJ) and Define_Custom (MSI).

        * install/CUTS_CoSMIC_installers.mpc:
        * install/BMW_installers.mpc:

          Reimplemented the project specifications based on the new
          WIX MPC project specification.

        * install/CUTS_CoSMIC.wxs:

          - The project file was missing the TARGET directory declaration.
          - Added preprocessor statements to include either vc71 or vc8
            merge modules depending on the value of $(var.type).
          - The package id is now assigned by *candle*

Sat Feb 24 17:27:32 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Added str.cpp to the CUTS project.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          Implemented the write_InEventPort_end () method to generate
          ACE_UNUSED_ARG () statements for the *record* and *ev* variables
          just in case they are not used.

        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          - Added cuts/str to the generated include files.
          - The generated proxy code for getting an attributes value
            now returns a default value of the proxy isn't hosting
            and implementation.

        * cuts/str.h:
        * cuts/str.inl:
        * cuts/str.cpp:

          Wrapper for the ACE_CString class that allows char * allocated
          by the CORBA middleware to be copied (cached) for usage by the
          Pending_Op_List_T class (mainly functors).

Fri Feb 23 01:11:33 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp (generate_artifacts):

          Fixed bug that was causing the generation loop to overrun
          its boundaries. This was fixed by setting the loop count
          equal to the number of projected artifacts.

Fri Feb 23 00:44:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Impl_Node.h:

          Added a new field for holding the implementation artifacts
          of a component.

        * cuts/be/BE_Impl_Graph.h:
        * cuts/be/BE_Impl_Graph.cpp:

          The implementation preprocessor gathers all the implemenation
          artifacts when preprocessing each monolithic implementation.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:

          - Moved the logic for opening a header file to the from
            CIAO_Proxy_Header_Traits and CIAO_Exec_Header_Traits to
            CIAO_Header_Traits.
          - The name of the exported entry point is now taken from
            the _exec execParameter, and if it doesn't not exist, then
            default entry point used (i.e., based on the components
            factory).

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:

          - Moved the logic for opening a header file to the from
            CIAO_Proxy_Source_Traits and CIAO_Exec_Source_Traits to
            CIAO_Source_Traits.
          - The name of the exported entry point is now taken from
            the _exec execParameter, and if it doesn't not exist, then
            default entry point used (i.e., based on the component's
            factory).

        * cuts/be/CIAO/CIAO_Traits_Base.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          When write_factory_impl_end () is invoked, if the monolithic
          implementations entry point does not exist, the default one
          is used (i.e., based on the component's factory).

        * cuts/be/CIAO/CIAO_In_Type.cpp:
        * cuts/be/CIAO/CIAO_Out_Type.cpp:
        * cuts/be/CIAO/CIAO_Var_Type.cpp:

          Removed the extra ':' at the beginning of the scope resolution
          for TypeKind elements.

        * cuts/be/CoWorkEr_Generator.cpp:

          Removed the generation of stub artifacts since they are
          currently generated incorrectly.

Thu Feb 22 21:31:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Impl_Graph.cpp:

          Instead of setting a bit in the impl_type_ bitset, we
          now only set a flag to determine the implemenation's
          type (i.e., is_proxy_).

        * cuts/be/BE_Impl_Node.h:

          Removed the bitset member.

        * cuts/be/BE_Project_Generator.h:
        * cuts/be/BE_Workspace_Generator_T.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:

          - Removed all distinctions between a proxy and a non-proxy
            implementations since the projects resulting project files
            are the same.
          - The generate_proxy () method for the project generator
            no longer exists.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Updated the guard statements to use is_proxy_ since the
          bitset was removed from the CUTS_BE_Impl_Node.

Thu Feb 22 20:40:39 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:
        * cuts/be/BE_Type_Map.h:
        * cuts/be/BE_Type_Map.inl:
        * cuts/be/BE_Type_Map.cpp:

          Generic map for storing PICML to backend type mappings.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_In_Type.h:
        * cuts/be/CIAO/CIAO_In_Type.inl:
        * cuts/be/CIAO/CIAO_In_Type.cpp:

          Derived the In_Type from the CUTS_BE_Type and removed
          all the template declarations.

        * cuts/be/CIAO/CIAO_Inout_Type.h:
        * cuts/be/CIAO/CIAO_Inout_Type.inl:
        * cuts/be/CIAO/CIAO_Inout_Type.cpp:
        * cuts/be/CIAO/CIAO_Out_Type.h:
        * cuts/be/CIAO/CIAO_Out_Type.inl:
        * cuts/be/CIAO/CIAO_Out_Type.cpp:

          Implemented the mapping of inout and out types for CIAO.

        * cuts/be/CIAO/CIAO_Retn_Type.h:
        * cuts/be/CIAO/CIAO_Retn_Type.inl:
        * cuts/be/CIAO/CIAO_Retn_Type.cpp:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:
        * cuts/be/CIAO/CIAO_Var_Type.h:
        * cuts/be/CIAO/CIAO_Var_Type.inl:
        * cuts/be/CIAO/CIAO_Var_Type.cpp:

          Derived the Var_Type from the CUTS_BE_Type and removed
          all the template declarations.

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Updated the project file with the new sources.

        * cuts/be/CIAO/CIAO_In_Type_T.h:
        * cuts/be/CIAO/CIAO_In_Type_T.inl:
        * cuts/be/CIAO/CIAO_In_Type_T.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type_T.h:
        * cuts/be/CIAO/CIAO_Retn_Type_T.inl:
        * cuts/be/CIAO/CIAO_Retn_Type_T.cpp:
        * cuts/be/CIAO/CIAO_Var_Type_T.h:
        * cuts/be/CIAO/CIAO_Var_Type_T.inl:
        * cuts/be/CIAO/CIAO_Var_Type_T.cpp:

          Removed these files.

Thu Feb 22 08:14:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Fixed implementation bug where old reminents of home_impl_
          were still in the source code when the coworker no longer
          caches the component's home.

        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_Impl_Generator_T.h:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_List_T.h:
        * cuts/be/BE_List_T.inl:
        * cuts/be/BE_Set.h:
        * cuts/be/BE_Set.cpp:
        * cuts/be/BE_Traits.h:
        * cuts/be/BE_Traits.inl:
        * cuts/be/BE_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type_T.inl:
        * cuts/be/CIAO/CIAO_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits_Base.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:

          Added support to generating coworkers that have supported
          interfaces, componets that have factory operations and the
          ability to generate objects returned by facets.

        * cuts/be/UDM_Utility_T.h:

          Moved the Sort_By_Position functor into this file from one
          of the CIAO backend files.

Mon Feb 19 18:29:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/cuts/workers:
        * tests/cuts/workers/CPU_Worker_Test.cpp:
        * tests/cuts/workers/workers.mpc:

          Added a simple CPU worker method to help understanding
          how to calibrate the CPU worker to occupy the CPU for a
          specific amount of time.

Mon Feb 19 18:22:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          The proxy no longer caches the home.

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:

          Added an experimental method to occupy the CPU for a
          given about of time (i.e., msec).

        * tests/Msg_Log.cpp:

          Placed guards about all calls to the contained strategy.

        * tests/Test_Client.cpp:

          The ACE_DEBUG message after the run_test () method was
          missing the first variatric parameter.

Sun Feb 18 00:18:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/UDM_CIAO.mpc:
        * cuts/be/Export_File_Generator.h:
        * cuts/be/Export_File_Generator.cpp:

          Move the export file generator from cuts/be/CIAO
          to cuts/be so other backends can use it, if necessary.

        * cuts/be/CIAO/Export_File_Generator.h:
        * cuts/be/CIAO/Export_File_Generator.cpp:

          Removed these files.

Sat Feb 17 21:52:42 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:

          Removed the proxy suffix declaration since its no
          longer part of the backend options.

        * cuts/be/BE_Options.h:

          Removed the proxy_ suffix configuration option.

        * cuts/be/BE_Manager_T.h:

          Made aesthetic changes to the code.

        * cuts/be/BE_Workspace_Generator_T.h:
        * cuts/be/BE_Workspace_Generator_T.cpp:

          Added -relative declaration to the cmdline += specification.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Updated the generators to handle projects that  are
          located in subdirectories.

        * cuts/be/CIAO/Export_File_Generator.h:
        * cuts/be/CIAO/Export_File_Generator.cpp:

          Added a new constructor that allows explicit specification
          of the export filename and macro

        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:

          The dllout, libout, includes and libpaths are now defined
          in terms of their relative location to $(PROJECT_ROOT),
          which is the location of the workspace file.

Fri Feb 16 21:07:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.h:
        * cuts/be/CoWorkEr_Generator.cpp:

          Updated CoWorkEr generator to create all the necessary
          elements needed to use CoWorkEr proxy elements. This includes
          creating the artifacts, monolithic implementations, and
          packages.

Thu Feb 15 23:26:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:
        * cuts/be/CoWorkEr_Generator.h:
        * cuts/be/CoWorkEr_Generator.cpp:

          Changed CUTS_UDM_CoWorkEr_Generator to CUTS_CoWorkEr_Generator.

Thu Feb 15 21:30:46 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME:

          Removed this file.

Thu Feb 15 21:27:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * NEWS:

          Updated file to discuss the proxies and changes in the
          interpreter.

        * CUTS.mwc:
        * CUTS_CoSMIC.mwc:

          Moved the MDE directory from the former to the latter.

        * MDE/GME/paradigms/PICML/interpreter:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CompIcon.ico:
        * MDE/GME/paradigms/PICML/interpreter/Component.rc:
        * MDE/GME/paradigms/PICML/interpreter/ComponentConfig.h:
        * MDE/GME/paradigms/PICML/interpreter/ComponentLib.idl:
        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.h:
        * MDE/GME/paradigms/PICML/interpreter/Main_Dialog.cpp:
        * MDE/GME/paradigms/PICML/interpreter/RawComponent.h:
        * MDE/GME/paradigms/PICML/interpreter/RawComponent.cpp:
        * MDE/GME/paradigms/PICML/interpreter/Resource.h:
        * MDE/GME/paradigms/PICML/interpreter/StdAfx.h:
        * MDE/GME/paradigms/PICML/interpreter/StdAfx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/UdmApp.h:
        * MDE/GME/paradigms/PICML/interpreter/UdmApp.cpp:
        * MDE/GME/paradigms/PICML/interpreter/UdmConfig.h:
        * MDE/GME/paradigms/PICML/interpreter/component.def:

          All the files that were located in
          cuts/GME/interpreters/PICML_CIAO_Impl

        * cuts/GME/CUTS.xme:
        * cuts/GME/interpreters:
        * cuts/GME/interpreters/PICML_CIAO_Impl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/CUTS_PICML.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/CompIcon.ico:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Component.rc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentLib.idl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Main_Dialog.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Main_Dialog.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/RawComponent.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/RawComponent.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Resource.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/component.def:

          Removed these files.

Thu Feb 15 20:50:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/CUTS_PICML.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          Renamed the latter to the former.

Thu Feb 15 19:58:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/GUTS/modeltran.mpc:

          Derived the project from cuts_gme.mpb and cuts_gems.mpb

        * utils/GUTS/gems2picml_App.cpp:

          Updated the include directives to reflect the change
          above.

Thu Feb 15 19:42:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Atom.h:
        * MDE/GME/gme/Atom.cpp:

          - Added the _create method for creating atoms.
          - Added the _narrow method for converting FCO's to atoms.

        * MDE/GME/gme/FCO.h:
        * MDE/GME/gme/FCO.cpp:

          - Added methods for creating instance, subtypes and regular
            FCO objects.
          - Added a meta () to get meta infomration about the object.
          - Added metarole () to get a object's role information.

        * MDE/GME/gme/Folder.h:
        * MDE/GME/gme/Folder.cpp:

          - Added parent () to get the parent folder of a folder.
          - Added meta () to get a meta information for the folder.
          - Added _create () to create subfolders.

        * MDE/GME/gme/Folder_Model_T.h:

          Moved the impl () method to the public section.

        * MDE/GME/gme/Folder_Model_T.inl:
        * MDE/GME/gme/Folder_Model_T.cpp:

          Moved the attach () method from the .cpp file to
          the .inl file.

        * MDE/GME/gme/GME.mpc:

          Added the new source files to the project.

        * MDE/GME/gme/GME_fwd.h:

          Added Folder to the forward declaration list.

        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/MetaBase.cpp:

          - Added methods for changing the displayed name
            and default name.
          - Added methods to get/set registry values.

        * MDE/GME/gme/MetaFCO.h:
        * MDE/GME/gme/MetaFCO.inl:
        * MDE/GME/gme/MetaFCO.cpp:
        * MDE/GME/gme/MetaFolder.h:
        * MDE/GME/gme/MetaFolder.inl:
        * MDE/GME/gme/MetaFolder.cpp:
        * MDE/GME/gme/MetaModel.h:
        * MDE/GME/gme/MetaModel.inl:
        * MDE/GME/gme/MetaModel.cpp:
        * MDE/GME/gme/MetaRole.h:
        * MDE/GME/gme/MetaRole.inl:
        * MDE/GME/gme/MetaRole.cpp:

          New additions to the repo.

        * MDE/GME/gme/Object.h:
        * MDE/GME/gme/Object.cpp:

          Implemented the destroy () method for delete object
          from the model.

        * MDE/GME/gme/Model.h:
        * MDE/GME/gme/Model.cpp:
        * MDE/GME/gme/Reference.h:
        * MDE/GME/gme/Reference.inl:
        * MDE/GME/gme/Reference.cpp:
        * MDE/GME/gme/Set.h:
        * MDE/GME/gme/Set.cpp:

          - Added _create () and _narrow () methods.

        * utils/GUTS/gems2picml_App.cpp:

          Added the ability to create the target model if it
          does not exist.

Tue Feb 13 21:04:18 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_gems.mpb:

          Base project that will include set the correct properties
          (e.g., libs, includes, etc.) for using GEMS.

        * etc/config/cuts_gme.mpb:

          Base project that will include set the correct properties
          (e.g., libs, includes, etc.) for using GME.

Tue Feb 13 20:57:55 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/MetaBase.cpp:

          Implemented equality comparison operator for the name.

        * utils/GUTS/gems2picml_App.cpp:

          Change the "DeploymentPlans" comparison for the metabase's
          name to use the equality operator provided by the GME::MetaBase
          object.

Tue Feb 13 20:41:32 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/MetaBase.cpp:

          - Removed the typedef.
          - Added a conversion operator for IMgaMetaBase *.

        * MDE/GME/gme/Exception.h:
        * MDE/GME/gme/Exception.inl:
        * MDE/GME/gme/Exception.cpp:

          - Changed __CUTS_INLINE__ to __GME_INLINE__
          - Changed CUTS_INLINE to GME_INLINE

        * MDE/GME/gme/FCO.h:

          Aesthetic changes.

        * MDE/GME/gme/GME.mpc:
        * MDE/GME/gme/Folder_Model_T.h:
        * MDE/GME/gme/Folder_Model_T.inl:
        * MDE/GME/gme/Folder_Model_T.cpp:

          Implemented a new class that is the base class of GME models
          and folders. It defines methods that are common to both types
          to reduce code redundency and improve consistency.

        * MDE/GME/gme/Folder.h:
        * MDE/GME/gme/Folder.cpp:
        * MDE/GME/gme/Model.h:
        * MDE/GME/gme/Model.cpp:

          Derived both classes from GME::Folder_Model_T.

        * MDE/GME/gme/Territory.h:
        * MDE/GME/gme/Project.h:
        * MDE/GME/gme/Project.cpp:

          Documented the methods.

        * MDE/GME/gme/GME_export.h:

          Added preprocessor definition for __GME_INLINE__ and GME_INLINE.

        * MDE/GME/gme/Set.h:
        * MDE/GME/gme/Set.cpp:

          Changed the members () method to return the vector as an
          output parameter instead of a return value.

        * utils/GUTS/gems2picml_App.cpp:

          Update the models (...) and members (...) method calls
          to use the new programming semantics of the GME backend.

Tue Feb 13 17:31:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Updated the VERBOSE_MESSAGE that displays a synopsis of the
          current baseline metric.

Tue Feb 13 17:27:04 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Added support for storing upper-bound baseline metrics.

        * etc/SQL/CUTS-baseline.sql:

          Removed the NOT NULL requirement from the metric fields since
          it is non-deterministic as to which metric would be entered
          first (e.g., min or max).

Tue Feb 13 17:13:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.h:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          Added --init and --fini command-line options to determine
          what constraint solver to run after initializing and
          finalizing the GEMS remote connection.

        * etc/SQL/CUTS-baseline.sql:

          - Changed metric_count and metric_total to min_count and
            min_total, respectively, to hold the min values for a
            baseline metric.
          - Added a max_count and max_total to store the maximum value
            for a baseline metric.

Sat Feb 10 23:37:58 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/BON:

          Removed this directory.

Sat Feb 10 22:20:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/GUTS/modeltran.mpc:

          Changed the project name from gem2picml to GUTS.

        * CUTS.mwc:
        * utils/GUTS:
        * utils/modeltran:
        * utils/modeltran/G2P_Options.h:
        * utils/modeltran/G2P_Options.cpp:
        * utils/modeltran/gems2picml.cpp:
        * utils/modeltran/gems2picml_App.h:
        * utils/modeltran/gems2picml_App.cpp:
        * utils/modeltran/modeltran.mpc:

          Renamed modeltran to GUTS.

Sat Feb 10 21:55:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Component.h:
        * MDE/GME/gme/Component.cpp:

          Implemented the initialize () wrapper method.

        * utils/modeltran/G2P_Options.h:
        * utils/modeltran/G2P_Options.cpp:

          - The options now has a source file.
          - Implemented insert_param, which can parse a name=value
            string to extract the name of a parameter and its value.

        * utils/modeltran/gems2picml.cpp:
        * utils/modeltran/gems2picml_App.h:
        * utils/modeltran/gems2picml_App.cpp:
        * utils/modeltran/modeltran.mpc:

          - Moved all the logic located in gems2picml.cpp into
            gems2picml_App.cpp
          - Added support for invoking a PICML interpreter on the
            converted GEMS to PICML model.

Sat Feb 10 01:15:33 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme/Component.h:
        * MDE/GME/gme/Component.cpp:
        * MDE/GME/gme/ComponentEx.h:
        * MDE/GME/gme/ComponentEx.cpp:

          Implemented wrappers for the component interfaces.

        * MDE/GME/gme/GME.mpc:

          Added the ComponentEx.* files.

        * MDE/GME/gme/Project.h:
        * MDE/GME/gme/Project.cpp:

          Added a conversion operator for its COM type.

Fri Feb  9 20:41:22 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Record.inl:

          Fixed bug in get_data () routine for floats and doubles that
          was casting the column instead to the incorrect type that is
          expected by get_data_i ().

Fri Feb  9 16:50:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/modeltran/gems2picml.cpp (parse_args):

          The short option for output in the switch statement was
          incorrect.

Fri Feb  9 16:46:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/modeltran/G2P_Options.h:
        * utils/modeltran/gems2picml.cpp:

          Added command-line options to specify the target folder and
          target model of the conversion.

Fri Feb  9 16:08:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/gme:
        * MDE/GME/gme/Application.h:
        * MDE/GME/gme/Application.cpp:
        * MDE/GME/gme/Atom.h:
        * MDE/GME/gme/Atom.cpp:
        * MDE/GME/gme/Component.h:
        * MDE/GME/gme/Component.cpp:
        * MDE/GME/gme/Exception.h:
        * MDE/GME/gme/Exception.inl:
        * MDE/GME/gme/Exception.cpp:
        * MDE/GME/gme/FCO.h:
        * MDE/GME/gme/FCO.cpp:
        * MDE/GME/gme/Folder.h:
        * MDE/GME/gme/Folder.cpp:
        * MDE/GME/gme/GME.h:
        * MDE/GME/gme/GME.cpp:
        * MDE/GME/gme/GME.mpc:
        * MDE/GME/gme/GME_export.h:
        * MDE/GME/gme/GME_fwd.h:
        * MDE/GME/gme/Interpreter.h:
        * MDE/GME/gme/Interpreter.cpp:
        * MDE/GME/gme/MetaBase.h:
        * MDE/GME/gme/MetaBase.cpp:
        * MDE/GME/gme/Model.h:
        * MDE/GME/gme/Model.cpp:
        * MDE/GME/gme/Object.h:
        * MDE/GME/gme/Object.cpp:
        * MDE/GME/gme/Project.h:
        * MDE/GME/gme/Project.cpp:
        * MDE/GME/gme/Reference.h:
        * MDE/GME/gme/Reference.cpp:
        * MDE/GME/gme/Set.h:
        * MDE/GME/gme/Set.cpp:
        * MDE/GME/gme/Territory.h:
        * MDE/GME/gme/Territory.cpp:

          These files are the original files belows except they
          are moved to a new location in the project.

        * MDE/GME/Application.h:
        * MDE/GME/Application.cpp:
        * MDE/GME/Atom.h:
        * MDE/GME/Atom.cpp:
        * MDE/GME/Component.h:
        * MDE/GME/Component.cpp:
        * MDE/GME/Exception.h:
        * MDE/GME/Exception.inl:
        * MDE/GME/Exception.cpp:
        * MDE/GME/FCO.h:
        * MDE/GME/FCO.cpp:
        * MDE/GME/Folder.h:
        * MDE/GME/Folder.cpp:
        * MDE/GME/GME.h:
        * MDE/GME/GME.cpp:
        * MDE/GME/GME.mpc:
        * MDE/GME/GME_export.h:
        * MDE/GME/GME_fwd.h:
        * MDE/GME/Interpreter.h:
        * MDE/GME/Interpreter.cpp:
        * MDE/GME/MetaBase.h:
        * MDE/GME/MetaBase.cpp:
        * MDE/GME/Model.h:
        * MDE/GME/Model.cpp:
        * MDE/GME/Object.h:
        * MDE/GME/Object.cpp:
        * MDE/GME/Project.h:
        * MDE/GME/Project.cpp:
        * MDE/GME/Reference.h:
        * MDE/GME/Reference.cpp:
        * MDE/GME/Set.h:
        * MDE/GME/Set.cpp:
        * MDE/GME/Territory.h:
        * MDE/GME/Territory.cpp:

          Removed these files.

Fri Feb  9 07:05:42 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/GME.mpc:

          Alphabetized the source files.

        * MDE/GME/Application.h:
        * MDE/GME/Application.cpp:
        * MDE/GME/Component.h:
        * MDE/GME/Component.cpp:
        * MDE/GME/Interpreter.h:
        * MDE/GME/Interpreter.cpp:

          Added missing files.

Fri Feb  9 06:59:29 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML:
        * MDE/GME/paradigms/PICML/examples:
        * MDE/GME/paradigms/PICML/examples/SLICE-cpu-bound.xme:

          Started separate directory different paradigms in different
          MDE tools. This will allow me to keep all everything in one
          since location that is related to CUTS.

Fri Feb  9 06:52:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.cpp:
        * MDE/GEMS/GEMS_CRN.mpc:

          - Added support for invoking in trigger (constraint) in
            GEMS from the remote service.
          - Moved the resolving of GEMS to this framework.
          - Added multiple ways of resolving the GEMS model (e.g.,
            naming service, initial referene, string, and etc).

        * MDE/GME/GME.mpc:
        * MDE/GME/paradigms:

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.h:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          - Added support for triggering any constraint solver at
            the conclusion of an experiment.
          - Fixed bug that would all the value of a resource requirement
            to exceed the max value of 100.
          - Added support for resolving GEMS from the naming service.

        * utils/modeltran/modeltran.mpc:
        * utils/modeltran/gems2picml.cpp:

          - Added support for resolving GEMS from the naming service.
          - Added support for outputing GEMS model to any PICML model,
            however, its to a predefined location.

Thu Feb  8 01:48:13 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Auto_Functor_T.h:
        * cuts/Auto_Functor_T.inl:
        * cuts/Auto_Functor_T.cpp:

          Implemented an auto functor class that will invoke
          a method of the stored pointer on destruction.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          Updated the verbose messages.

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp (handle_deactivate):

          Fixed bug that was caused by closing the connection
          before deallocating database queries.

        * cuts/CUTS.mpc (CUTS):

          Added the CUTS_Auto_Functor class.

        * utils/modeltran/modeltran.mpc:
        * utils/modeltran/G2P_Options.h:

          Contains class that holds command-line options for
          gems2picml program.

        * utils/modeltran/gems2picml.cpp:

          Added initial support for command-line options.

Tue Feb  6 20:05:39 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          Include missing header file.

        * cuts/utils/ODBC/ODBC.h:

          Removed CUTS_HAS_ODBC preprocessor definition since we use features
          to validate requirements.

        * etc/config/odbc.mpb:

          Removed the CUTS_HAS_ODBC marco specficiation since it is now controlled
          using features.

Tue Feb  6 18:34:01 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.cpp:

          Added a quick fix to treat any non-stringified roles that
          aren't predefined (i.e., self_id, self_type, self_source,
          self_target, and etc.) as regular roles.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          - Experimental values that are less than the baseline metrics,
            i.e., have a negative percentage, are now displayed as a
            warning message.
          - Implemented the final piece converting the normalized values
            into resource requirements and pushing the requirements back
            to the GEMS model.

Tue Feb  6 08:38:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record.h:
        * cuts/Component_Metric.h:
        * cuts/Component_Metric.cpp:

          Correct the sender default value for unknown implementation.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp (handle_deactivate):

          Added support to normalizing the baseline metric against
          the experimental value.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.h:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.mpc:

          Subclasses the BDC services from CUTS_DB_Service

        * cuts/BDC/svcs/baseline/Baseline_Service.mpc:
        * cuts/BDC/svcs/dbase/DBase_Service.mpc:

          Removed redundant base projects.

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Fixed bug that was prevents archiving of metrics from
          components with an unknown sender.

        * cuts/utils/DB_Record.h:
        * cuts/utils/ODBC/ODBC_Record.h:
        * cuts/utils/ODBC/ODBC_Record.inl:

          Implemented get_value for double and float types.

        * utils/modeltran/gems2picml.cpp:

          Removed debugging code.

Tue Feb  6 05:26:19 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.cpp:

          Added support for invoking GEMS constraint solver from
          the CORBA backend.

        * cuts/BDC/Benchmark_Data_Collector.mpc:

          Fixed build dependency.

        * utils/modeltran/gems2picml.cpp:

Mon Feb  5 23:46:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp (handle_component):

          The verbose message now displays the id of the host once it
          is retrieved.

Mon Feb  5 23:40:26 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp (handle_component):

          Fixed bug where an unknown host was not being registered,
          and resulting in unsuccessful logging of metrics.

Mon Feb  5 21:09:25 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Fixed bug in generated code for the cuts_proxy_impl
          setter method.

        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:

          Removed invalid dependencies.

Sun Feb  4 20:32:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.cpp:

          Added support for triggering the constraint solver from
          the CORBA world.

Sun Feb  4 03:14:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-archive.sql:
        * etc/SQL/CUTS-create.sql:

          Fixed syntax errors.

Sun Feb  4 03:09:07 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL:
        * SQL:
        * SQL/CUTS-archive.sql:
        * SQL/CUTS-baseline.sql:
        * SQL/CUTS-create.sql:
        * SQL/CUTS-deployment.sql:
        * SQL/CUTS-path-analysis.sql:
        * SQL/CUTS-procs.sql:

          Moved the SQL scripts to the ./etc directory.

Sun Feb  4 03:06:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:
        * SQL/CUTS-archive.sql:
        * SQL/CUTS-baseline.sql:
        * SQL/CUTS-deployment.sql:
        * SQL/CUTS-path-analysis.sql:

          Filtered the common tables from the tables used by special
          services. CUTS-create.sql is the SQL file the creates the database
          and the common table, such component and host info tables. The
          other scripts create tables that reference columns in of
          tables in CUTS-create.sql

Sun Feb  4 02:58:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Added `unknown' host type to the initialization script.

Sun Feb  4 02:04:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector.mpc:

          Removed explicit specification of serviceC.cpp and
          serviceS.cpp

        * cuts/CUTS.mpc:

          Removed explicit specification of service and client
          files in CUTS_stub project.

        * utils/BDC/client.mpc:

          Fixed project dependencies.

Sun Feb  4 01:39:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME:

          Added svn:ignore property to ignore client/server files
          generated by MIDL complier.

        * cuts/CUTS.mpc:
        * cuts/Events.idl:

          Removed this file for the workspace.

>>>>>>> .r1133
Sun Feb  4 00:26:42 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added cuts/svcs directory.

        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:
        * cuts/BDC/svcs/baseline/Baseline_Service.mpc:
        * cuts/BDC/svcs/dbase/DBase_Service.h:
        * cuts/BDC/svcs/dbase/DBase_Service.mpc:
        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Refactored both services to subclass the CUTS_DB_Service
          object to remove alot of redundant code.

        * cuts/CUTS.mpc:

          Removed CUTS_Utils dependency.

        * cuts/svcs/dbase:
        * cuts/svcs/dbase/DB_Service.h:
        * cuts/svcs/dbase/DB_Service.inl:
        * cuts/svcs/dbase/DB_Service.cpp:
        * cuts/svcs/dbase/DB_Service.mpc:
        * cuts/svcs/dbase/DB_Service_export.h:

          Refactored the original database service code and removed
          common code that may be used by all database service objects,
          both stand-alone and through the BDC.

        * etc/config/cuts_dbsvc.mpb:

          The old cuts_dbasesvc.mpb file.

        * etc/config/odbc.mpb:

          Removed the unixodbc feature block and combined it
          into the `else' block.

        * etc/config/cuts_dbasesvc.mpb:

          Removed this file.

Sat Feb  3 21:39:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Component_Registry.h:

          - Added ace/Synch_Traits.h header before message queue
            header file.

        * cuts/Port_Agent.h:

          - Changed string type to ACE_CString
          - Removed the STL map header include statement.

        * cuts/Port_Agent.cpp:

          Removed the std::for_each iteration for logging the endpoints
          in the port agent since the ACE_Hash_Map iterator is not completely
          compatible with STL in vc8.

        * cuts/be/BE_IDL_Node.h:
        * cuts/be/BE_Impl_Graph.cpp:

          Changed the reference list to contain const pointers.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:

          Changed the `export' variable to `export_file' since
          `export' is a reserved word in vc8.

Sat Feb  3 04:22:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/Functor_T.h:
        * cuts/utils/String.h:
        * cuts/utils/String.cpp:
        * cuts/utils/UUID.h:
        * cuts/utils/UUID.inl:
        * cuts/utils/UUID.cpp:
        * cuts/utils/Utils.h:
        * cuts/utils/Utils_Export.h:

          Removed these files.

Sat Feb  3 02:54:24 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Temporarily copied logic for registering a component with
          the database from the database service component until
          commonality is factored out into a base class.

        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:

          Updated the code generation to guard the set_session_context
          call on the hosted component just in case there isn't a
          component loaded.

        * tests/Msg_Log.h:
        * tests/Msg_Log.cpp:

          First implementation of the message log used by the
          unit test framework.

        * tests/Test_Client.cpp:

          - Changed the error message format.
          - Simplified the source code by removing nested control
            flows and instead returing on failures.

        * tests/Test_Macros.h

          Documented the macros.

        * tests/Test_Suite.h:
        * tests/Test_Suite.cpp:

          Added the message log open () and close () methods before
          and after running all the unit tests.

        * tests/cuts/Time_Measurement_Test.cpp:
        * tests/cuts/Time_Metric_Test.cpp:

          Removed the Test_Macros inclusion since it is now include
          by default in Test_Suite.h

Sat Feb  3 02:37:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-procs.sql:

          Added missing deliminator to the `use' statement.

        * cuts/BDC/Testing_Service_exec_i.cpp (unregister_component):

          Removed try...catch block(s).

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Added `preactivate' label error messages to help identify
          their origin.

Fri Feb  2 21:03:18 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Testing_Service_exec_i.cpp:

          We now support unregisration of components.

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Placed the code in handle_deactivate () inside of a try...catch
          block just in case the connection operation fails.

        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Guarded all method calls on the hosted component by
          CORBA::is_nil () just in case the component is not
          loaded

Fri Feb  2 16:36:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/Msg_Log.cpp:
        * tests/Msg_Log.h:

          Empty file placeholders.

        * tests/Test_Client.cpp:
        * tests/Test_Macros.h:
        * tests/Test_Suite.h:
        * tests/Test_Suite.cpp:

          Re-implemented the testing suite the minimize the number
          of macro definition and effort need to write a unit test
          for the CUTS framework.

        * tests/cuts/Time_Measurement_Test.cpp:
        * tests/cuts/Time_Metric_Test.cpp:
        * tests/cuts/test.mpc:

          Removed the worker unit test since they are obsolete.

        * tests/test.mpc:

          - Removed the Unit_Test.* file(s)
          - Added the Msg_Log.* files.

        * tests/test.mwc:

        * tests/etc:
        * tests/etc/config:
        * tests/etc/config/cuts_test_base.mpb:
        * etc/config/cuts_test_base.mpb:

          Moved MPC base project to test configuration
          directory.

        * tests/Test.h:
        * tests/Test.cpp:
        * tests/Unit_Test.h:
        * tests/Unit_Test.cpp:
        * tests/coworker:
        * tests/coworker/cpu:
        * tests/coworker/cpu/CPU_CUTS.mwc:
        * tests/coworker/cpu/Sender.cidl:
        * tests/coworker/cpu/Sender.idl:
        * tests/coworker/cpu/Sender_CoWorkEr.h:
        * tests/coworker/cpu/Sender_CoWorkEr.cpp:
        * tests/coworker/cpu/Sender_CoWorkEr.mpc:
        * tests/coworker/cpu/cpu.xme:
        * tests/coworker/cpu/descriptors:
        * tests/coworker/cpu/descriptors/Sender.cdp:
        * tests/coworker/cpu/descriptors/node_map.dat:
        * tests/cuts/Time_Measurement_Test.h:
        * tests/cuts/Time_Metric_Test.h:
        * tests/cuts/Worker_T_Test.h:
        * tests/cuts/Worker_T_Test.cpp:
        * tests/cuts/Worker_Test.h:
        * tests/cuts/Worker_Test.cpp:

          Removed these files.

Fri Feb  2 07:23:20 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_node.pl:

          Removed debug output.

        * cuts/BDC/BDC_Task.cpp (collect_data):

          Fixed compilation errors.

Fri Feb  2 06:26:50 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

          - Moved the code for handle_agent () to collect_data ()
          - Removed the base class CUTS_Benchmark_Agent_Handler.
          - Re-implemented the collect_data () method to use the
            iterator provided by registry when gathering components
            that are registered.

        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          - Removed the registry_ variable since the testing service
            now contains the registry by default.
          - Switched to the default constructor when creating
            Testing_Service_exec_i object.

        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:

          - Removed the CCM version of the registry since only registry
            nodes need to be subclassed.
          - The CCM registry node can only be created with the
            initialization constructor, and the agent cannont be
            changed once the node is created.

        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.cpp:

        * cuts/BDC/svcs/dbase/DBase_Service.cpp:

          Added support for adding host information to the database.

        * cuts/Component_Info.h:

          - Now contains a pointer to the host information for the
            component.
          - The uid_ element is now const declared.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:

          The registry now contains a CUTS_Host_Table element. It
          is accessible via the accessor methods.

        * cuts/Component_Registry_Node.h:
        * cuts/Component_Registry_Node.inl:
        * cuts/Component_Registry_Node.cpp:

          Removed the info () accessor methods and moved the info_
          variable to the public section.

        * cuts/Testing_Service.h:
        * cuts/Testing_Service.inl:
        * cuts/Testing_Service.cpp:

          The testing service now contains the component registry.

        * cuts/Host_Table.h:
        * cuts/Host_Table.cpp:

          The bind method now can return a read-only pointer to newly
          created entry.

Thu Feb  1 23:35:36 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-baseline.sql:

          - Added constraints to prevent duplicate baseline metrics.
          - Added port infomration to the baseline metrics.

        * cuts/BDC/BDC_Service_Manager.cpp:

          Updated the format of the ACE_DEBUG messages.

        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:
        * cuts/BDC/svcs/baseline/Baseline_Service.mpc:

          Finished implementing the first version of the baseline
          metrics Benchmark Data Collector service.

        * cuts/CUTS.mpc:

          Added new files to the project.

        * cuts/Component_Info.h:

          Added host information to the information.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.cpp:

          - Changed std::string to ACE_CString.
          - Moved the CUTS_Component_Registry_Map inside the class
            definition.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          Added the midl_notlb flag to suppress the creation
          of a type library.

        * cuts/Host_Table_Entry.h:

          New class that is the entry for the host table.

        * cuts/Host_Table.h:
        * cuts/Host_Table.cpp:

          - Re-implemented the host table to consist of a unbounded
            set of CUTS_Host_Table_Entry objects.
          - Re-implemented the indexer to be compatible with the format
            of entry table.

Wed Jan 31 19:54:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:
        * cuts/Component_Registry_Handler.h:
        * cuts/Component_Registry_Handler.cpp:

          Added missing virtual destructor.

Wed Jan 31 19:46:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:

          Added comments to the file.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:

          Fixed bug that was the result of generating invalid
          typename specifications in the context proxy for the
          event handle manager(s).

Wed Jan 31 19:41:54 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action.h:
        * cuts/Action.cpp:

          Added missing virtual destructor.

        * cuts/Async_Event_Handler_Queue_T.h:
        * cuts/Async_Event_Handler_Queue_T.cpp:
        * cuts/Pending_Op_List_T.cpp:
        * cuts/Pending_Op_T.h:

          Fixed compilation errors resulting from improper usage
          of the typename keyword.

        * etc/config/cuts_coworker_exec.mpb:

          Removed obsolete lib specifcation for
          Benchmark_Data_Collector_Ex_svnt.

Wed Jan 31 07:13:17 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/baseline:
        * cuts/BDC/svcs/baseline/Baseline_Service.h:
        * cuts/BDC/svcs/baseline/Baseline_Service.cpp:
        * cuts/BDC/svcs/baseline/Baseline_Service.mpc:
        * cuts/BDC/svcs/baseline/Baseline_Service_export.h:
        * cuts/BDC/svcs/baseline/README:

          Initial implementation of the CUTS baseline benchmark
          service. See README for more details.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.cpp:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.cpp:

          Implemented operator += methods for simplying the process
          of accumulating timing measurements.

        * cuts/Time_Metric.cpp (operator +=):

          Accumulates the timing measurement in the avg_time_, while
          it keeps track of the best/worst timing measurements between
          then lhs and rhs of the operator.

Tue Jan 30 21:47:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.h:

          Replaced #include "ace/SString_fwd.h" and "ace/String_Base.h"
          with #include "ace/SString.h"

        * cuts/BDC/svcs/dbase/DBase_Service.cpp (handle_component):

          Now the type information of a component is stored into the
          database, instead of "Unknown"

        * utils/Node_Daemon/Node_Daemon_i.h:

          - Removed friend declaration of Node_Daemon_Event_Handler.
          - Changed process_exits (...) to unmanage (...) and exposed
            it as a public method.

        * utils/Node_Daemon/Node_Daemon_Event_Handler.cpp:
        * utils/Node_Daemon/Node_Daemon_i.cpp:

          Changed all occurrences of process_exits (...) to
          unmanage (...)

Tue Jan 30 01:39:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/GME.mpc:

          Added the modeling feature requirement to prevent this project
          from building if modeling is not enabled.

Mon Jan 29 19:07:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-baseline.sql:

          Baseline table for storing the baseline metrics of each
          component that can be referenced later during real
          experiments.

Mon Jan 29 18:47:15 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/GME.mpc:

          Added Meta.idl to the source compilation to fix build
          errors.

        * etc/config/cuts_base.mpb:

          Removed workaround for bug that was causing scoped
          properties to be ignored.

Mon Jan 29 18:28:56 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CoWorkEr_Generator.cpp:

          Fixed bug that was causing invalid generation of
          CoWorkEr homes.

Mon Jan 29 18:13:00 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor_T.cpp:

          Fixed bug that was causing the implementation generator to
          crash is a component didn't define any behavior.

Mon Jan 29 15:36:56 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/Atom.h:

          Updated the documentation for the file and its contained
          classes

Mon Jan 29 15:29:41 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/Exception.h:
        * MDE/GME/MetaBase.h:
        * MDE/GME/Territory.h:

          - Fixed broken include sequence resulting from not defining
            HRESULT
          - Exception.h is now contains all the necessary includes
            for using COM and should be included by all GME header
            files either directly, or indirectly.

Mon Jan 29 15:25:35 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/GME_export.h:

          Removed unncessary macro definitions.

        * MDE/GME/Folder.h:
        * MDE/GME/Model.h:
        * MDE/GME/Project.h:
        * MDE/GME/Reference.h:

          Updated the documentation for the file and its contained
          classes

Mon Jan 29 15:09:48 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/Exception.h:
        * MDE/GME/MetaBase.h:
        * MDE/GME/Reference.h:
        * MDE/GME/Set.h:

          Updated the documentation for the file and its contained
          classes

Mon Jan 29 14:48:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/Exception.h:
        * MDE/GME/Exception.cpp:
        * utils/modeltran/gems2picml.cpp:

          Removed the Null_Type exception, and all its occurrences
          in the implementation.

Mon Jan 29 14:44:59 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/FCO.h:
        * MDE/GME/Object.h:
        * MDE/GME/Territory.h:

          Updated documentation for each of the files and their
          contained classes.

Mon Jan 29 06:09:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/GME.h:
        * MDE/GME/GME.cpp:
        * MDE/GME/GME_fwd.h:
        * MDE/GME/Object.h:

          Updated the documentation.

Mon Jan 29 05:37:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added the modeltran and GEMS subdirectories to the
          workspace.

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.cpp:

          Removed unnecessary debug messages.

        * MDE/GME:
        * MDE/GME/Atom.h:
        * MDE/GME/Atom.cpp:
        * MDE/GME/Exception.h:
        * MDE/GME/Exception.inl:
        * MDE/GME/Exception.cpp:
        * MDE/GME/FCO.h:
        * MDE/GME/FCO.cpp:
        * MDE/GME/Folder.h:
        * MDE/GME/Folder.cpp:
        * MDE/GME/GME.h:
        * MDE/GME/GME.cpp:
        * MDE/GME/GME.mpc:
        * MDE/GME/GME_export.h:
        * MDE/GME/GME_fwd.h:
        * MDE/GME/MetaBase.h:
        * MDE/GME/MetaBase.cpp:
        * MDE/GME/Model.h:
        * MDE/GME/Model.cpp:
        * MDE/GME/Object.h:
        * MDE/GME/Object.cpp:
        * MDE/GME/Project.h:
        * MDE/GME/Project.cpp:
        * MDE/GME/Reference.h:
        * MDE/GME/Reference.cpp:
        * MDE/GME/Set.h:
        * MDE/GME/Set.cpp:
        * MDE/GME/Territory.h:
        * MDE/GME/Territory.cpp:

          Initial implementation of wrappers for GME interfaces. This
          allows us to easily create GEM raw components.

        * utils/modeltran:
        * utils/modeltran/gems2picml.cpp:
        * utils/modeltran/modeltran.mpc:

          Initial implementation of GEMS to PICML converter. It currently
          is hard-coded to handle on a specific conversion method for
          prove of concept.

Thu Jan 25 00:55:38 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.cpp:
        * cuts/Benchmark_Agent_i.cpp:
        * cuts/Benchmark_Collector_Visitor.cpp:
        * cuts/CUTS.mpc:
        * cuts/Event_Handler_T.h:
        * cuts/IDL_Streams.cpp:
        * cuts/Port_Agent.h:
        * cuts/Port_Agent.inl:
        * cuts/Port_Agent.cpp:

          Fixed the inclusion of invalid file name related to
          the change below.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          Removed these files.

Thu Jan 25 00:29:11 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/PortAgent.cpp:

          The port agent was updating its measurements with the
          queuing time.

Wed Jan 24 23:49:58 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          Fixed bug that was causing the service to crash
          during deactivation.

Wed Jan 24 22:46:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.cpp:

          Removed unnecesary debug messages.

Wed Jan 24 22:36:25 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.cpp:

          Fixed bug that prevented newly created models to be
          assigned to a parent.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.h:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          - The names, instead of annotations, is used to refer
            to components.
          - The service only stores a mapping existing GEMS components.
            Currently, there is bug in GEMS that prevents creating
            new components if they did not exist in the model.
          - Commented out the handle_activate () method.

Tue Jan 23 22:50:55 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_base.mpb:

          Fixed a typo in the file.

Tue Jan 23 22:46:48 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_base.mpb:

          Temporary solution to workaround a bug in the latest
          version of MPC.

Tue Jan 23 17:40:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/vc71.bat:

          Updated the vc71 batch file to resemble the vc8 version.

Tue Jan 23 17:37:02 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:
        * integration/vc8.bat:

          Removed the results.log property.

        * integration/vc8-msi.bat:

          Removed this file.

Tue Jan 23 17:33:57 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Removed echo messages from the autobuild.

        * integration/logs:

          Removed this file.

Tue Jan 23 01:00:53 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/vc8.bat:

          Generalize the ant script so it can be used with multiple
          vc8 project builds.

Mon Jan 22 22:32:34 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC.xme:

          Removed the default CUTS worker libraries from the file.

        * cuts/CCM_CoWorkEr_Proxy_T.cpp:

          Changed the missing connection to the BDC from an error message
          to a info message.

        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          The values of action properties are now generated verbatim. This
          allows programming the properties with any arbitrary value, include
          variables and attributes.

        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:

          Fixed bug that was generating invalid homes for CoWorkErs since
          IDLML doesn't used GME-subtypeing to show inheritance.

Mon Jan 22 22:03:54 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/PICML/SLICE:
        * examples/PICML/SLICE/SLICE-results.sql:

          The result for the original SLICE experiment.

        * integration/autobuild.build:
        * integration/vc8.bat:

          Switched the intergration scripts over to Apache Ant.

Thu Jan 18 05:28:06 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/CUTS.smp:

          Added source code metrics generated by SourceMonitor.

Thu Jan 18 05:27:31 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * ChangeLog:

Thu Jan 18 05:21:30 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_Queue_T.h:
        * cuts/Async_Event_Handler_Queue_T.inl:
        * cuts/Async_Event_Handler_Queue_T.cpp:
        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:

          - Re-implemented the queueing time metric.
          - Implemented a cached node for the event queue to be
            used by the ACE_Lock_Free_List class to amortize memory
            allocation.

        * cuts/CUTS.mpc:

          Added new source files.

        * cuts/config.h:

          Added a default event queue size marco.

Wed Jan 17 03:05:14 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.cpp:

          Removed the explicit dispatch_time () invocations on
          an event since events are no longer required to have a
          dispatch_time field.

        * cuts/be/BE_Impl_Graph.cpp:
        * cuts/be/BE_Workspace_Generator_T.cpp:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:

          Fixed bug that was causing implementations to be generated
          when they were not supposted to be generated. Now, proxy
          components and implementation components can no longer be
          generated from the same component.

Mon Jan 15 21:50:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.cpp:

          - The stringify () and destringify () methods now take a const
            string and return a non-referenced string.
          - Fixed unused variable warnings.

        * cuts/BDC/BDC_Service.h:

          Fixed unused variable warnings.

Mon Jan 15 21:35:44 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.inl:
        * MDE/GEMS/GEMS.cpp:

          - Added support for creating new elements.
          - Reimplemented the Connection object as a subtype of a
            model object.

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:

          Removed the stringify and destringify methods since the
          are no embedded inside the implementation.

        * etc/config/gme_bon2.mpb:

          Added the missing default project source files.

Fri Jan 12 05:35:12 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action.h:
        * cuts/Action_Iterator.h:
        * cuts/Activation_Record.h:

          Updated the documentation.

        * docs/cuts.doxygen:

          Updated the IGNORE_PREFIX method.

Fri Jan 12 04:10:16 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/cuts.doxygen:

          Changed the name of the project.

Fri Jan 12 04:05:43 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/cuts.doxygen:

          Updated the configuration setting.

Fri Jan 12 02:51:09 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/cuts.doxygen:

          Updated doxygen configuration file to 1.5.1-p1.

Thu Jan 11 00:23:21 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CUTS_Project.h:
        * cuts/be/CUTS_Project.cpp:

          Re-enabled the CUTS project validator.

        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/be/CoWorkEr_Generator.cpp:

          Updated model generator to generate valid CoWorkEr proxy
          model elements.

Tue Jan  9 22:37:04 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Collector_Visitor.cpp:

          Removed unnecessary debug message.

Tue Jan  9 21:48:03 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Set.h:
        * cuts/be/BE_Set.inl:
        * cuts/be/BE_Set.cpp:

          Added missing files.

Tue Jan  9 21:08:52 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Added new files to the project.

        * cuts/Action_Iterator.h:
        * cuts/Component_Info.h:
        * cuts/Host_Table.h:
        * cuts/Worker_Library.h:

          Fixed compilation errors resulting from using incorrect
          include files for ACE_CString.

        * cuts/Activation_Record.h:
        * cuts/Activation_Record.inl:
        * cuts/Activation_Record.cpp:
        * cuts/Activation_Record_Endpoint.h:
        * cuts/Activation_Record_Endpoint.inl:
        * cuts/Activation_Record_Endpoint.cpp:
        * cuts/Activation_Record_Entry.h:
        * cuts/Activation_Record_Entry.inl:
        * cuts/Activation_Record_Entry.cpp:

          Reimplemented the activation records so that the entries
          and endpoints are stand-alone classes and not typedefs
          inside the CUTS_Activation_Record class.

        * cuts/Activation_Record_T.cpp:

          Removed record_exit_point () from the class and replaced
          it with log_endpoint () method in the base class.

        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:

          activate () and deactivate () methods are now protected
          methods in this class since the strategy no longer requires
          these methods to be defined.

        * cuts/BDC/BDC.xme:

          Updated the file to the lastest version of PICML.

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.cpp:

          - Moved the ace/Thread_Manager.h include from the source
            to the header file.
          - Removed the forward declaration of ACE_Thread_Manager.

        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          - Updated formatting of file.
          - Moved the entry point method to the top-level scope.

        * cuts/Benchmark_Visitor.h:
        * cuts/Benchmark_Visitor.inl:
        * cuts/Benchmark_Visitor.cpp:

          Visitor strategy for handling/visiting the metrics that
          are collected in a component.

        * cuts/Benchmark_Collector_Visitor.h:
        * cuts/Benchmark_Collector_Visitor.cpp:

          Implementation of the CUTS_Benchmark_Visitor that packages
          component metrics into an CORBA IDL structure for transmitting
          across the network.

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:
        * cuts/Benchmark_Agent_i.cpp:

          - The benchmark agent now stores an name/id pair for all
            the exit points from its host component.
          - Switched to metric packaging from the IDL streams to the
            CUTS_Benchmark_Visitor.

        * cuts/CCM_CoWorkEr_Proxy.h:
        * cuts/CCM_CoWorkEr_Proxy.inl:
        * cuts/CCM_CoWorkEr_Proxy.cpp:
        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Context_T.h:
        * cuts/CCM_Context_T.inl:
        * cuts/CCM_Context_T.cpp:
        * cuts/CUTS_exec_export.h:

          Reimplemented the CoWorkEr so that it is a proxy that can
          host/instrument real and faux components.

        * cuts/Component_Registry.h:

          Fixed formatting of the typedef.

        * cuts/Event_Handler_Manager_T.h:
        * cuts/Event_Handler_Manager_T.inl:
        * cuts/Event_Handler_T.h:
        * cuts/Event_Handler_T.inl:
        * cuts/Event_Handler_T.cpp:

          Removed the activate () and deactivate () methods.

        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:

          Removed the insertion oprerations for packaging metrics into
          CORBA IDL structures. This has be replaced by the CUTS_Benchmark_Visitor
          class.

        * cuts/Pending_Op_List_T.h:
        * cuts/Pending_Op_List_T.inl:
        * cuts/Pending_Op_List_T.cpp:
        * cuts/Pending_Op_T.h:
        * cuts/Pending_Op_T.inl:
        * cuts/Pending_Op_T.cpp:

          Structure used by proxies to store operations that should be
          executed once the instrumented component has been loaded.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          - Removed the free-list implementation of activation records since
            thread-specific storage is now the primary storage strategy.
          - Removed seperate thread of execution for consolidating the current
            activation record for a port.

        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:

          Changed the endpoint storage id from string to unsigned integer.

        * cuts/Thread_Activation_Record.h:
        * cuts/Thread_Activation_Record.inl:
        * cuts/Thread_Activation_Record.cpp:

          Object that uses thread-specific storage to manage activation
          records.

        * cuts/be/BE.mpc:
        * cuts/be/BE_Depend_Graph_T.h:
        * cuts/be/BE_Depend_Graph_T.cpp:
        * cuts/be/BE_Env_Visitor_T.h:
        * cuts/be/BE_Env_Visitor_T.cpp:
        * cuts/be/BE_Execution_Visitor_T.h:
        * cuts/be/BE_Execution_Visitor_T.cpp:
        * cuts/be/BE_File_Traits.h:
        * cuts/be/BE_File_Traits.inl:
        * cuts/be/BE_File_Traits.cpp:
        * cuts/be/BE_IDL_Graph.h:
        * cuts/be/BE_IDL_Graph.cpp:
        * cuts/be/BE_IDL_Node.h:
        * cuts/be/BE_IDL_Node.cpp:
        * cuts/be/BE_Impl_Generator_T.h:
        * cuts/be/BE_Impl_Generator_T.inl:
        * cuts/be/BE_Impl_Generator_T.cpp:
        * cuts/be/BE_Impl_Graph.h:
        * cuts/be/BE_Impl_Graph.cpp:
        * cuts/be/BE_Impl_Node.h:
        * cuts/be/BE_Impl_Node.inl:
        * cuts/be/BE_Impl_Node.cpp:
        * cuts/be/BE_List_T.h:
        * cuts/be/BE_List_T.inl:
        * cuts/be/BE_List_T.cpp:
        * cuts/be/BE_Manager.h:
        * cuts/be/BE_Manager.inl:
        * cuts/be/BE_Manager.cpp:
        * cuts/be/BE_Manager_T.h:
        * cuts/be/BE_Manager_T.cpp:
        * cuts/be/BE_Options.h:
        * cuts/be/BE_Preprocessor.h:
        * cuts/be/BE_Preprocessor.inl:
        * cuts/be/BE_Preprocessor.cpp:
        * cuts/be/BE_Project_Generator.h:
        * cuts/be/BE_Project_Generator.cpp:
        * cuts/be/BE_Traits.h:
        * cuts/be/BE_Traits.inl:
        * cuts/be/BE_Traits.cpp:
        * cuts/be/BE_Workspace_Generator_T.h:
        * cuts/be/BE_Workspace_Generator_T.cpp:

          Reimplemented the backend generators so that it uses a design
          pattern approach to constructing interpreters. Their is a basic
          strategy the defines the template of how to model should be
          parsed, and when the interpreter should generate text. The basic
          strategy is then parameterized with the correct backend to generate
          the leanest and meanest interpreter possible without have to
          rewrite the model parsing strategy.

        * cuts/be/CIAO/CIAO_Exec_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_In_Type.inl:
        * cuts/be/CIAO/CIAO_Manager.h:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type.h:
        * cuts/be/CIAO/CIAO_Retn_Type.inl:
        * cuts/be/CIAO/CIAO_Retn_Type.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type_T.h:
        * cuts/be/CIAO/CIAO_Retn_Type_T.inl:
        * cuts/be/CIAO/CIAO_Source_Traits.h:
        * cuts/be/CIAO/CIAO_Source_Traits.inl:
        * cuts/be/CIAO/CIAO_Source_Traits.cpp:
        * cuts/be/CIAO/CIAO_Traits_Base.h:
        * cuts/be/CIAO/CIAO_Traits_Base.cpp:
        * cuts/be/CIAO/Export_File_Generator.cpp:
        * cuts/be/CIAO/UDM_CIAO.mpc:
        * cuts/be/CIAO/UDM_CIAO_Export.h:

          Reimplemented the CIAO backend interpreter using the strategized
          template design above.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:

          Updated the frontend to use the new backend implementation.

        * cuts/be/CoWorkEr_Cache.h:
        * cuts/be/CoWorkEr_Cache.cpp:

          Updated the definition of a CoWorkEr, i.e., it's model element
          requirements.

        * cuts/be/UDM_Utility_T.h:

          Added a new functor named is_not_type (), which determines if
          an element is not a specific type.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/be/BE_Execution_Visitor.h:
        * cuts/be/BE_Execution_Visitor.cpp:
        * cuts/be/BE_File_Generator.h:
        * cuts/be/BE_File_Generator.inl:
        * cuts/be/BE_File_Generator.cpp:
        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.inl:
        * cuts/be/BE_File_Generator_Manager.cpp:
        * cuts/be/BE_File_Generator_Set.h:
        * cuts/be/BE_Workspace_Generator.h:
        * cuts/be/BE_Workspace_Generator.cpp:
        * cuts/be/CIAO/CIAO_File_Generator_Base.h:
        * cuts/be/CIAO/CIAO_File_Generator_Base.cpp:
        * cuts/be/CIAO/CIAO_Header_File_Generator.h:
        * cuts/be/CIAO/CIAO_Header_File_Generator.inl:
        * cuts/be/CIAO/CIAO_Header_File_Generator.cpp:
        * cuts/be/CIAO/CIAO_Source_File_Generator.h:
        * cuts/be/CIAO/CIAO_Source_File_Generator.inl:
        * cuts/be/CIAO/CIAO_Source_File_Generator.cpp:
        * cuts/be/Null_File_Generator.h:
        * cuts/be/Null_File_Generator.inl:
        * cuts/be/Null_File_Generator.cpp:
        * cuts/be/Preprocess_Data.h:
        * cuts/be/Preprocess_Data.inl:
        * cuts/be/Preprocess_Data.cpp:

          Removed these files.

Thu Dec 14 21:13:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Updated the features for workspace.generate.* target(s)
          to reflect new changes to modeling project requirements.

Wed Dec 13 20:36:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Gave the CodeGenerationKit a cosmic requirement.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          Gave project modeling requirement.

        * default.features:

          - Added modeling = 0 to the feature files (i.e., disables
            modeling by default)
          - Enabled mfc feature by default.

        * etc/config/cosmic_lib.mpb:

          Added a modeling requirement.

        * etc/config/gme_base.mpb:

          Removed the gme requirement.

        * etc/config/picml_udm.mpb:

          Removed the udm requirement.

Wed Dec 13 02:00:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/status:

          This directory is not really needed.

Wed Dec 13 00:55:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/vc8-msi.bat:

          Continuous intergration build wrapper for CUTS vc8
          installers

Wed Dec 13 00:46:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/CUTS_CoSMIC.wxs:

          Updated UDM component reference to the latest version of
          UDM (i.e., UDM 3.1.1)

        * integration/autobuild.build:

          Create new target for building the installers.

        * integration/status:

          Empty directory that holds status files created by the
          continuous integration server.

Tue Dec 12 23:04:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/vc71.bat:
        * integration/vc8.bat:

          Batch files for building CUTS using CruiseControl
          NT service.

        * integration/autobuild.build:

          - Changed all backslashes to forward slashes
          - VS build output now piped to build log with name same
            as MPC type (e.g., vc71.build.log for vc71 builds).

        * integration/logs:

          Empty directory that hold the build logs created by
          the continuous integration server.

Tue Dec 12 01:58:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GEMS/GEMS.cpp (stringify):

          Fixed compiliation error on vc8.

Tue Dec 12 01:50:21 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BDC/Client_Options.h:

          Missing header file.

Thu Dec  7 22:46:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Timeline.aspx.cs:

          Fixed bug that prevent the timeline for a metric from being
          displayed. I still need to fix the visualization.

Wed Dec  6 16:01:58 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * default.features:
        * utils/BMW/BMW.mpc:

          Added the feature 'bmw' to allow enabling/disabling of this
          project in vc8 builds. By default this feature is disabled.
          Thanks to Andy Gokhale (a.gokhale at vanderbilt dot edu)
          for implicitly recommending this feature.

Wed Dec  6 02:06:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BDC/client.mpc:
        * utils/BDC/client.cpp:

          Initial re-implementation of the BDC client. Right now
          it is able to connect directly to the BDC and retrieve the
          names of the services currently loaded.

Tue Dec  5 22:08:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/GEMS/CUTS_GEMS.mpc:
        * cuts/BDC/svcs/GEMS/README:

          Added a README for the service that contains its description
          and usage (i.e., valid options).

        * cuts/BDC/svcs/dbase/README:

          Updated its formatting.

Tue Dec  5 22:00:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/README:

          Moved the Id keyword from the top of the file into the
          middle of the header.

Tue Dec  5 21:59:09 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/README:

          Added the svn:keywords property to the file.

Tue Dec  5 21:57:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/svcs/dbase/DBase_Service.mpc:
        * cuts/BDC/svcs/dbase/README:

          Added a README for the service that contains its description
          and usage (i.e., valid options).

Tue Dec  5 21:42:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BDC/client.mpc:

          Fixed compilation problems w/ not linking against the
          correct libraries.

Tue Dec  5 21:12:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BDC/client.mpc:

          Changed the project name to 'CUTS_BDC_client'. This will
          allow w/ graphical IDE (i.e., Visual Studio) that display
          the solution space to place it close to the other BDC projects.

Tue Dec  5 21:10:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BDC/client.mpc:
        * utils/BDC/client.cpp:
        * utils/BDC/BDC_Client.cpp:
        * utils/BDC/BDC_Client.mpc:

          Renamed the file from BDC_Client.* to client.*

Tue Dec  5 21:07:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added the BDC client application back to build.

        * utils/BDC:

          New directory for the BDC client.

        * utils/BDC/BDC_Client.mpc:

          - Change the exename property to 'bdc_client'
          - Updated the source file declarations.

        * utils/BDC_Client:
        * utils/BDC_Client/BDC_Client.mpc:
        * utils/BDC_Client/BDC_Client.cpp:

          Moved the files to utils/BDC

Tue Dec  5 21:01:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>


        * utils/System_Monitor:
        * utils/System_Monitor/System_Monitor.cidl:
        * utils/System_Monitor/System_Monitor.idl:
        * utils/System_Monitor/System_Monitor.mpc:
        * utils/System_Monitor/System_Monitor.xme:
        * utils/System_Monitor/System_Monitor_Task.h:
        * utils/System_Monitor/System_Monitor_Task.inl:
        * utils/System_Monitor/System_Monitor_Task.cpp:
        * utils/System_Monitor/System_Monitor_exec_export.h:
        * utils/System_Monitor/System_Monitor_exec_i.h:
        * utils/System_Monitor/System_Monitor_exec_i.cpp:
        * utils/System_Monitor/System_Monitor_stub_export.h:
        * utils/System_Monitor/System_Monitor_svnt_export.h:

          This is now obsolete since the implementation of the
          BDC has changed.

Tue Dec  5 18:50:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Remove reference to an invalid directory.

        * CUTS.mwc:

          Added new MDE directory to the build.

        * MDE:

          Directory for hosting utility projects related to a specific
          to MDE environment used in CUTS. The goal is to host the project
          here until it matures enough to become (1) a stand-alone project
          or integrated w/ the respective MDE environment.

        * MDE/GEMS:
        * MDE/GEMS/GEMS.h:
        * MDE/GEMS/GEMS.inl:
        * MDE/GEMS/GEMS.cpp:
        * MDE/GEMS/GEMSServer.idl:
        * MDE/GEMS/GEMS_CRN.mpc:
        * MDE/GEMS/GEMS_CRN_export.h:

          Initial implementation of a model builder network (GEM CORBA
          Remote Network) for GEMS. The goal is to manage the complexity
          of interacting w/ GEMS from the CORBA world via its remoting
          interface.

        * cuts/BDC/svcs:

          Directory that will host services provided by the BDC.

        * cuts/BDC/svcs/GEMS:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.h:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.inl:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.cpp:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS.mpc:
        * cuts/BDC/svcs/GEMS/CUTS_GEMS_export.h:

          Initial implementation of a BDC service for GEMS. This service
          takes metrics collected during an experiement and pushes them
          to the GEMS deployment model. This will allow GEMS to use its
          constaint solver on dynamic constraints to locate a better
          deployment.

        * cuts/BDC/svcs/dbase:

          The directory previously located under $CUTS_ROOT/cuts/svcs

        * etc/config/cuts_base.mpb:

          Added $CUTS_ROOT/MDE to the include keyword.

        * cuts/svcs/dbase:
        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.inl:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DBase_Service.mpc:
        * cuts/svcs/dbase/DBase_Service_export.h:

          Removed these files and moved them to the svcs
          directory under the $CUTS_ROOT/cuts/BDC.

Tue Dec  5 06:05:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service.inl:
        * cuts/BDC/BDC_Service.cpp:
        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:
        * cuts/svcs/dbase/DBase_Service.cpp:

          - The BDC service no longer contains a reference to the
            ORB and system metrics.
          - The BDC service now contains a reference to its parent
            service manager, which can be used to access the ORB
            and system metrics.

Mon Dec  4 18:38:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Included missing project from the build.

        * cuts/BDC/BDC_Service_Manager.cpp:
        * utils/Node_Daemon/Node_Daemon_i.cpp:

          Fixed compilation errors/warnings on Linux.

Mon Dec  4 09:24:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * NEWS:

          Updated the NEWS file.

Mon Dec  4 09:19:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Sender_Metrics.ascx.cs:

          Fixed execution time table to properly display the average
          value based on the new changes to the database. This update
          requires MySQL Connector/ODBC 3.51.

Sun Dec  3 06:37:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor.h:
        * cuts/be/BE_Execution_Visitor.cpp:

          Fixed a bug that was causing states with multiple finish
          connections as the source to crash.

Sat Dec  2 17:21:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.cpp:
        * cuts/CUTS.idl:

          Converted the return value of collect_performance_data () in
          the CUTS::Benchmark_Agent interface to a out parameter.

Fri Dec  1 16:47:35 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:

          - Finished implementing list_services ()
          - get_service () now throws Service_Not_Found exception
            if the service name is not found in the manager.

        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:

          Implemented get_service_names (), which returns a set
          contains the names of the loaded services.

        * cuts/BDC/Benchmark_Data_Collector.idl:

          - Added Service_Not_Found exception.

        * cuts/BDC/service.idl:

          Moved the BDC_Service_Names type definition to
          Benchmark_Data_Collector.idl

Thu Nov 30 00:59:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          Added VERBOSE_MESSAGE and VERBOSE_MESSAGE_RETURN macros
          to simplify adding messages based on the state of the
          verbose option.

Thu Nov 30 00:45:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          Removed the following command-line options since they will always
          use the default provided with CUTS

            --username, -u
            --password, -p

          Change the sort option for --port from -P to -p

Thu Nov 30 00:41:35 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          Fixed bug in parsing service declarations.

        * cuts/CCM_CoWorkEr_T.cpp:

          Template class still has reminents of deprecated exceptions.

Wed Nov 29 20:39:45 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/System_Metric.h:
        * cuts/System_Metric.inl:
        * cuts/System_Metric.cpp:

          - Added support for initializing/setting the timestamp of the
            system metrics both internally and externally.
          - Added support for determining the duration of a collection
            period.

        * cuts/BDC/BDC_Service.cpp:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/IDL_Streams.cpp:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Updated the following classes to support the modifications
          to the CUTS_System_Metric class.

Wed Nov 29 19:55:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC.xme:

          GME model of the BDC that should be either imported, or
          attached as a library, to the target CUTS project. The
          main goal is to simplify extending models to use CUTS.

        * cuts/BDC/Benchmark_Data_Collector.idl:

          Removed cuts/Events.idl from the listing of include
          files.

Wed Nov 29 19:30:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          - Simplified the workspace specification using scopes.
          - CoSMIC related projects (i.e., those that required to
            build the CoSMIC related tools in CUTS, not the CUTS
            tools) can be enabled/disabled using the 'cosmic' feature.

        * etc/config/requires_cosmic.mpb:

          Defines the feature requirement 'cosmic' to determine
          inclusion of projects based on enabling/disabling the
          'cosmic' feature.

        * CUTS_Release.mwc:

          Removed this file.

Wed Nov 29 18:57:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.mwc:

          Removed hack that used the absolute location of the
          Database_Utility directory, instead of the relative
          location based on this workspace.

Wed Nov 29 15:23:36 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * NEWS:

          Initial pass at a NEW file based on revision numbers. We
          can use the revision numbers since SVN takes a global snapshot
          of the repo for each revision number. We can therefore get
          all the necessary files/updates just by using a single revision
          number.

Wed Nov 29 15:09:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/WebCharts:

          Empty directory that's required by the BMW.

Wed Nov 29 14:23:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added support for building the BMW by default when the project
          type is vc8.

        * utils/BMW/BMW.mwc:

          Added the abolute location of Database_Utility based on the
          environment variable $(CUTS_ROOT). This is a temporary fix
          until a projected bug has been fixed in MPC.

Wed Nov 29 00:12:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.mpc:

          Added project file that specifies this directory as
          the base directory for a web application. This requires
          revision 1080 or greater in MPC.

        * utils/BMW/BMW.mwc:

          Removed the CORBA utility project.

        * utils/BMW/Database_Utility/Database_Utility.mpc:

          Removed the ASPX_Files and Config_Files groupings.

Tue Nov 28 02:10:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_bdcsvc.mpb:

          MPC base class for including the necessary project
          settings for BDC service objects.

Tue Nov 28 01:33:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          - The execution_time table now stores the sum of all
            the execution times instead of the average.
          - Added 'Unknown' to the component_instance table.
          - Added 'Unknown' to the component_type table.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.cpp:

          The sender is alway's unknown now since we are refactoring
          how the sender is inserted/extracted to the message.

        * cuts/BDC/BDC_export.h:
        * cuts/BDC/BDC_Service.h:
        * cuts/BDC/BDC_Service.inl:
        * cuts/BDC/BDC_Service.cpp:
        * cuts/BDC/BDC_Service_Manager.h:
        * cuts/BDC/BDC_Service_Manager.inl:
        * cuts/BDC/BDC_Service_Manager.cpp:

          This is a new feature of the Benchmark_Data_Collector (BDC). It
          allows the BDC to host service objects that can operate on the
          collected metrics. The main goal is to decouple the metrics
          collection from analyzing the metrics. The BDC_Service_Manager.*
          contains the object responsible for managing service objects. The
          BDC_Service.* contains the base class for all BDC service objects.

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:

          Refactored the so that it acts like an active object (i.e.,
          has open/close) methods and uses the event object from the
          Benchmark_Data_Collector when signalling the completion of
          collection metrics.

        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          Reimplemented the BDC so that is acts like a service configurator
          for objects that want to analyze performance metrics.

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:

          Added methods that allow the handle to interact with the service
          manager for the Benchmark_Data_Collector.

        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:


        * cuts/BDC/service.idl:

          IDL that contains the remoting interface for CUTS_BDC_Service
          objects.

        * cuts/CUTS.idl:

          Refactored the IDL file and removed the following
          interfaces:

            - Path_Measurement since it will become a CUTS_BDC_Service
              object.
            - BDC_Control_Handle since it only has meaning to the
              Benchmark_Data_Collector.

        * cuts/CUTS.mpc:
        * cuts/CUTS_export.h:
        * cuts/Testing_Service.h:
        * cuts/Testing_Service.inl:
        * cuts/Testing_Service.cpp:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/Component_Info.h:
        * cuts/Component_Registry.h:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:
        * cuts/Component_Registry_Handler.h:
        * cuts/Component_Registry_Node.h:
        * cuts/Component_Registry_Node.inl:
        * cuts/Component_Registry_Node.cpp:

          Refactored the registry and testing service so that it is an active
          object as well and will be able to notify registered handles of
          components that change state (i.e., register and unregister).

        * cuts/Event_Handler_T.cpp:

          Suppressed setting the sender of the event. Now all events
          are sent from "unknown" components.

        * cuts/Log_Msg.h:

          First pass at a log message that extends the ACE log
          message macro.

        * cuts/IDL_Streams.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.inl:
        * cuts/Time_Metric.cpp:

          Updated the metric calculators so that they do not calculate
          the average in memory.

        * cuts/config.h:

          Added macro definition CUTS_UNKNOWN_IMPL and CUTS_UNKNOWN_TYPE
          that define the id of unknown types and implementations.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.inl:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DBase_Service.mpc:

          Reimplemented the database service as a CUTS_BDC_Service
          object.

        * cuts/BDC/BDC_Task_Ex.h:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex.cidl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.idl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.inl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Database_Service_exec_i.h:
        * cuts/BDC/Database_Service_exec_i.cpp:
        * cuts/BDC/Testing_Service_Ex_exec_i.h:
        * cuts/BDC/Testing_Service_Ex_exec_i.inl:
        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/XML_System_Metrics_Visitor.h:
        * cuts/XML_System_Metrics_Visitor.inl:
        * cuts/XML_System_Metrics_Visitor.cpp:

          Removed these files.

Sat Nov 25 20:07:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_Execution_Visitor.cpp:

          Fixed compilation errors to handle the following change
          in CoSMIC (i.e., PICML).

          Sat Nov 25 20:02:30 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

Mon Nov 13 07:36:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.cpp:

          Removed code to insert the timestamp and sender into
          an event.

        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:

          Implemented a generic event class to help with the code
          generation. The class is parameterized with the OBV type
          and manages the lifetime of the event.

        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/be/BE_Depend_Graph_T.h:
        * cuts/be/BE_Depend_Graph_T.inl:
        * cuts/be/BE_Depend_Graph_T.cpp:
        * cuts/be/BE_File_Generator.h:
        * cuts/be/BE_File_Generator.inl:
        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.inl:
        * cuts/be/BE_File_Generator_Manager.cpp:

          Updated implemenation to store output directory in the
          backend options singleton instead of passing it as a
          parameter.

        * cuts/be/BE.mpc:

          Updated project file to include new files.

        * cuts/be/BE_IDL_Graph.h:
        * cuts/be/BE_IDL_Graph.inl:
        * cuts/be/BE_IDL_Graph.cpp:
        * cuts/be/BE_IDL_Node.h:
        * cuts/be/BE_IDL_Node.cpp:

          Singleton implementation of the dependency graph. This keeps
          from having to pass it around as a parameters. Hopefully, this
          will simplify some of the code generator specifications.

        * cuts/be/BE_Method_Visitor.h:
        * cuts/be/BE_Method_Visitor.cpp:
        * cuts/be/BE_Execution_Visitor.h:
        * cuts/be/BE_Execution_Visitor.cpp:

          Updated the implementation to take into account the changes
          to the metamodel for PeriodicEvents and InputAction types.

        * cuts/be/BE_Options.h:
        * cuts/be/BE_Options.cpp:

          Singleton for holding user options for the backend
          generators.

        * cuts/be/BE_Project_Generator.h:
        * cuts/be/BE_Project_Generator.inl:
        * cuts/be/BE_Project_Generator.cpp:
        * cuts/be/BE_Workspace_Generator.h:
        * cuts/be/BE_Workspace_Generator.cpp:

          Updated the architecture so that is uses the singleton
          versions of the configuration and IDL dependency graph.

        * cuts/be/CIAO/CIAO_Header_File_Generator.h:
        * cuts/be/CIAO/CIAO_Header_File_Generator.cpp:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/CIAO_Source_File_Generator.h:
        * cuts/be/CIAO/CIAO_Source_File_Generator.cpp:
        * cuts/be/CIAO/Export_File_Generator.h:
        * cuts/be/CIAO/Export_File_Generator.cpp:

          Updated the architecture so that is uses the singleton
          versions of the configuration and IDL dependency graph.

        * cuts/be/Dependency_Generator.h:
        * cuts/be/Dependency_Generator.cpp:
        * cuts/be/Dependency_Graph.h:
        * cuts/be/Dependency_Graph.cpp:
        * cuts/be/Project_Generator.h:
        * cuts/be/Project_Generator.inl:
        * cuts/be/Project_Generator.cpp:

          Removed these files.

Thu Nov  9 20:30:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/Component_Metric.h:
        * cuts/utils/DB_Parameter.inl:
        * cuts/utils/DB_Types_Impl.inl:
        * cuts/utils/ODBC/ODBC_Exception.h:

          Fixed release version compilation errors.

        * install/CUTS_CoSMIC.wxs:

          Added reference to VC8 merge modules in the default feature.

        * cuts/utils/ODBC/ODBC_Exception.inl:

          Removed this file.

Fri Oct 13 00:18:04 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          cosmic_lib was a base project, but it no longer existed.

Thu Oct 12 23:41:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Added support for updating the workspace from the build script.

Wed Oct  4 15:12:09 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/CUTS_CoSMIC_installers.mpc:

          This file was missing from the repo.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Added several methods for getting the component
          instances from the database based on varoius criteria.

        * utils/BMW/components.aspx.cs:

          Fixed control display. It now maintains its hide/shows
          for the details of the component types correctly.

        * utils/BMW/default.aspx:

          Fixed the number of displayed test. It was set to 4
          instead of 25.

        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt.cpp:
        * cuts/BDC/Benchmark_Data_Collector_svnt.h:
        * cuts/BDC/Benchmark_Data_Collector_svnt.cpp:

          Removed these files.

Thu Sep 28 23:23:04 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/UDM_Utility_T.inl:

          Missing source file.

Mon Sep 25 15:55:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:

          Fixed the alignment issue with the dots in the menu.

        * utils/BMW/Execution_Times.aspx:

          Page was referencing an invalid ContentPlaceHolder.

Mon Sep 25 02:01:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Updated project with new source files.

        * cuts/be/CIAO/CIAO_In_Type.h:
        * cuts/be/CIAO/CIAO_In_Type.inl:
        * cuts/be/CIAO/CIAO_In_Type.cpp:
        * cuts/be/CIAO/CIAO_In_Type_T.h:
        * cuts/be/CIAO/CIAO_In_Type_T.inl:
        * cuts/be/CIAO/CIAO_In_Type_T.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type.h:
        * cuts/be/CIAO/CIAO_Retn_Type.inl:
        * cuts/be/CIAO/CIAO_Retn_Type.cpp:
        * cuts/be/CIAO/CIAO_Retn_Type_T.h:
        * cuts/be/CIAO/CIAO_Retn_Type_T.inl:
        * cuts/be/CIAO/CIAO_Retn_Type_T.cpp:
        * cuts/be/CIAO/CIAO_Var_Type.h:
        * cuts/be/CIAO/CIAO_Var_Type.inl:
        * cuts/be/CIAO/CIAO_Var_Type.cpp:
        * cuts/be/CIAO/CIAO_Var_Type_T.h:
        * cuts/be/CIAO/CIAO_Var_Type_T.inl:
        * cuts/be/CIAO/CIAO_Var_Type_T.cpp:

          Trait class for generating return, input, variable
          types for different PICML elements.

        * cuts/be/BE_Method_Visitor.cpp:
        * cuts/be/BE_Variable_Visitor.cpp:
        * cuts/be/CIAO/CIAO_Header_File_Generator.h:
        * cuts/be/CIAO/CIAO_Header_File_Generator.cpp:
        * cuts/be/UDM_Utility_T.h:
        * cuts/be/UDM_Utility_T.cpp:
        * cuts/be/CIAO/CIAO_Source_File_Generator.h:
        * cuts/be/CIAO/CIAO_Source_File_Generator.cpp:

          Added support for attributes of all predefined types.

        * cuts/be/CIAO/Predefined_Type_Map.h:
        * cuts/be/CIAO/Predefined_Type_Map.cpp:

          Removed these files.

Fri Sep 22 00:54:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:
        * cuts/be/BE_Execution_Visitor.h:
        * cuts/be/BE_Execution_Visitor.cpp:
        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.cpp:
        * cuts/be/BE_File_Generator_Set.h:
        * cuts/be/BE_Method_Visitor.h:
        * cuts/be/BE_Method_Visitor.cpp:
        * cuts/be/BE_Variable_Visitor.h:
        * cuts/be/BE_Variable_Visitor.cpp:

          Refactored the backend generator into the following visitors
          objects:
            - Method_Visitor : responsible for generating the correct
              methods, then delegating control to the Execution_Visitor.
            - Execution_Visitor : responsible for parsing execution
              paths and generating the implemetation actions.
            - Variable_Visitor : responsible for generating all
              the variables of a component.

          Hopefully this will make adding more features to the language
          and generators easier.

Thu Sep 21 04:05:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Updated the install script for the new files.

Thu Sep 21 02:54:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:
        * utils/BMW/components.aspx:
        * utils/BMW/components.aspx.cs:
        * utils/BMW/components.aspx.resx:

          New location of the files removed below.

        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Component_Instances.aspx.resx:

          Removed these files.

Thu Sep 21 02:45:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/default.aspx:
        * utils/BMW/environment.aspx:
        * utils/BMW/environment.aspx.cs:

          Fixed the paging controls.

Thu Sep 21 02:32:58 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:

          Added features for showing/collapsing the entire list.

Thu Sep 21 01:37:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:

          This page now display the component types and instances
          in a hierarchial format by type.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Added a method to get the component instances of a given
          type.

        * utils/BMW/environment.aspx:
        * utils/BMW/environment.aspx.cs:

          Added a pager to the bottom of the grid.

Wed Sep 20 21:39:50 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Updated the installer script with the new BMW files.

Wed Sep 20 21:28:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:

          Updated the navigation link for Environment to point to
          the new page below.

        * utils/BMW/environment.aspx:
        * utils/BMW/environment.aspx.cs:

          This was the old Host.aspx* files.

        * utils/BMW/Hosts.aspx:
        * utils/BMW/Hosts.aspx.cs:

          Removed these files.

Wed Sep 20 21:23:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:

          Added padding to the last row of the main table.

        * utils/BMW/Hosts.aspx:

          Added usage instructions to the page.

Wed Sep 20 20:37:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:
        * utils/BMW/styles:
        * utils/BMW/styles/default.css:

          Moved Styles.css to styles/default.css

        * utils/BMW/Style.css:

          Removed this file.

Wed Sep 20 20:33:35 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:
        * utils/BMW/Style.css:
        * utils/BMW/images/menudot.gif:

          Updated the look and feel to more consistent with the
          style of the website.

Wed Sep 20 19:53:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          The results from the build are now stored in "result.log"

Wed Sep 20 19:26:21 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/CUTS.mpc:

          Fixed build dependency issues.

Wed Sep 20 19:03:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Finally resovled all build issues with the first version of
          the NANT build script. Now you have to set all necessary
          environment variables before calling the build script.

Wed Sep 20 04:36:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          Changed "transit" metric type to "queue".

Wed Sep 20 04:24:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Sender_Metrics.ascx:

          Change the header title from "Worse" to "Worst".

Mon Sep 18 21:14:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Fixed bug resulting in invalid execution of batch files.

Mon Sep 18 20:56:36 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Fixed error in the <if> condition for selecting the vc71
          or vc8 as the build type.

Mon Sep 18 20:49:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Update the script to actually build everything.

Sat Sep 16 06:12:04 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Project_Generator.h:

          Added a header banner to the file.

Sat Sep 16 00:05:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Fixed the generate.workspace.cosmic target by adding
          -include ${COSMIC_ROOT} to the command line.

Fri Sep 15 23:55:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Temporarily added support for building CoSMIC.

Fri Sep 15 23:28:00 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Now all the environment variables are input properties
          from the calling applcation, e.g., CruiseControl.

Fri Sep 15 22:04:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          - Added svn.update target to the project.
          - workspace.generate.* targets now depend on svn.update

Fri Sep 15 21:42:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/autobuild.build:

          Added support to generate workspaces for only the modeling
          or runtime portions of CUTS.

Fri Sep 15 21:35:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration:
        * integration/autobuild.build:

          Initial attempt to create a NANT script for building CUTS.

Fri Sep 15 02:47:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Header_File_Generator.cpp:

          Changed CoWorkEr_Type to _coworker_type in generated code.

        * cuts/be/CIAO/CIAO_Source_File_Generator.h:
        * cuts/be/CIAO/CIAO_Source_File_Generator.cpp:

          - Changed CoWorkEr_Type to _coworker_type in generated code.
          - Removed all occurences of write_variable ().

Fri Sep 15 01:57:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Project_Generator.cpp:

          Fixed compilation error that was found as a result
          of a rebuild all.

Thu Sep 14 23:22:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CIAO_Source_File_Generator.h:

          Updated documentation for Doxygen.

Thu Sep 14 23:04:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Updated project w/ the new file names.

        * cuts/be/CIAO/CIAO_File_Generator_Base.h:
        * cuts/be/CIAO/CIAO_File_Generator_Base.cpp:
        * cuts/be/CIAO/CIAO_Header_File_Generator.h:
        * cuts/be/CIAO/CIAO_Header_File_Generator.inl:
        * cuts/be/CIAO/CIAO_Header_File_Generator.cpp:
        * cuts/be/CIAO/CIAO_Source_File_Generator.h:
        * cuts/be/CIAO/CIAO_Source_File_Generator.inl:
        * cuts/be/CIAO/CIAO_Source_File_Generator.cpp:

        * cuts/be/CIAO/File_Generator_Base.h:
        * cuts/be/CIAO/File_Generator_Base.cpp:
        * cuts/be/CIAO/Header_File_Generator.h:
        * cuts/be/CIAO/Header_File_Generator.inl:
        * cuts/be/CIAO/Header_File_Generator.cpp:
        * cuts/be/CIAO/Source_File_Generator.h:
        * cuts/be/CIAO/Source_File_Generator.inl:
        * cuts/be/CIAO/Source_File_Generator.cpp:

          Renamed the files in the bottom group to the names
          in the top group.

Thu Sep 14 22:54:36 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/File_Generator_Base.h:
        * cuts/be/CIAO/File_Generator_Base.cpp:
        * cuts/be/CIAO/Header_File_Generator.h:
        * cuts/be/CIAO/Header_File_Generator.cpp:
        * cuts/be/CIAO/Source_File_Generator.h:
        * cuts/be/CIAO/Source_File_Generator.cpp:

          Added support for generating workflows for passivate and
          remove methods by connecting an Environment object to
          an InputAction with the following name mapping:

          - activate  -> ccm_activate
          - passivate -> ccm_passivate
          - remove    -> ccm_remove

        * cuts/be/CIAO/UDM_CIAO.mpc:

          Removed zombie source file.

Thu Sep 14 21:25:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          Renamed the file.

Thu Sep 14 21:16:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.cpp:

          Manager now handles environment objects properly by
          passing control to the file generators.

        * cuts/be/BE_File_Generator.h:
        * cuts/be/BE_File_Generator.inl:
        * cuts/be/CIAO/File_Generator_Base.h:
        * cuts/be/CIAO/File_Generator_Base.cpp:
        * cuts/be/CIAO/Header_File_Generator.h:
        * cuts/be/CIAO/Header_File_Generator.cpp:
        * cuts/be/CIAO/Source_File_Generator.h:
        * cuts/be/CIAO/Source_File_Generator.cpp:

          Added support for handling environment input actions,
          more specifically the "activate" method.

Thu Sep 14 14:56:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.cpp:

          - Changed Context_Type to _ctx_type.
          - set_session_context () now sets the context () of the
            producer_ object.

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

          Removed all implemenation relating to pushing data events,
          i.e., ones that generated arbitrary event payloads.

        * cuts/Port_Measurement_Pool.h:

          Changed the include header to "ace/Hash_Manager_Manager_T.h"

        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.cpp:

          - Changed casting a finish destination object from an
            InputAction to an InputActionBase object.
          - Removed the <call_stack_> variable since it was had
            no true value.

        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          Added the Port_Manager_T module to the project.

        * cuts/be/CIAO/Port_Manager_T.h:
        * cuts/be/CIAO/Port_Manager_T.inl:
        * cuts/be/CIAO/Port_Manager_T.cpp:

          Implementation of manager for caching the scope
          of port manager types.

        * cuts/be/CIAO/Source_File_Generator.h:
        * cuts/be/CIAO/Source_File_Generator.cpp:

          Fixed the bug that was causing action and output
          actions to not be generated in the source code. I
          am still working the bug for input actions from
          the environment.

Thu Sep 14 00:40:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          Invoking stop_current_test () resulted in requesting a
          write lock twice.

Tue Sep 12 06:21:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CUTS.idl:

          Added support for transmitting the component type with
          the registration information for a component.

        * cuts/be/CIAO/Header_File_Generator.cpp:
        * cuts/be/CIAO/Source_File_Generator.cpp:

          Fixed bug that was caused by not registering the periodic
          event callback with its actor.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Added support to the database for logging the component
          type of a compoent instance.

        * cuts/utils/DB_Exception.h:
        * cuts/utils/DB_Exception.cpp:

          - Added another print () method so clients to can print
            a user-defined message before the error message.

        * cuts/utils/DB_Query.h:

          Added a reset () method to the query class.

        * cuts/utils/ODBC/ODBC_Parameter_List.cpp:

          get () method now has a better error message.

        * cuts/utils/ODBC/ODBC_Query.h:
        * cuts/utils/ODBC/ODBC_Query.cpp:

          Fixed bug that was resulting from preparing a SQL
          statement on a open handle.

Tue Sep  5 17:19:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * CUTS_CIAO.mwc:
        * CUTS_CoSMIC.mwc:

          Improved the workspace specification by deriving
          workspaces from other workspaces to reduce redundency.

Tue Sep  5 00:54:01 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/System_Metrics_Visitor.inl:
        * cuts/Worker.inl:
        * cuts/utils/DB_Connection.inl:

          Fixed compiler warning related to unused arguments.

Mon Sep  4 20:07:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added $COSMIC_ROOT to the include specification.

Mon Sep  4 19:22:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/CUTS_CoSMIC.wxs:

          Finished the installer for the CUTS modeling tools.

Mon Sep  4 15:44:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/be/BE.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          Inherited from the cosmic_lib project

        * etc/config/cosmic_lib.mpb:

          Based project for CoSMIC specific libraries.

        * etc/config/cuts_base.mpb:
        * etc/config/cutsexe.mpb:
        * etc/config/cutslib.mpb:

          Move the CUTS dependency from cuts_base to cutsexe
          and cutslib.

        * cuts/fe:
        * cuts/fe/PICML:

          Removed these files.

Mon Sep  4 15:13:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/BE.mpc:

          Removed CUTS and ACE import libraries.

        * install/CUTS_CoSMIC.wxs:

          Finished the file installation portion of the installer. I
          still need to do the registration portion of the installer.

        * install/CUTS_installers.mwc:

          Added CUTS_CoSMIC to the installer.

Fri Sep  1 18:09:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Combined the CUTS and CoSMIS specific projects into a
          single block.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          Updated the base project into include cosmic_utils.

Fri Sep  1 05:42:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * CUTS_CoSMIC.mwc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * etc/config/wix.mpb:
        * install/BMW.wxs:
        * install/BMW_installers.mpc:
        * install/CUTS_CoSMIC.wxs:
        * install/CUTS_installers.mwc:

          Merge for branches/CUTS-dev.

Fri Sep  1 00:12:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/CUTS_CoSMIC.wxs:

          Updated the file listing for the installer. It's still not
          finished though.

Fri Sep  1 00:00:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * CUTS_CoSMIC.mwc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:

          Updated build to reflect the new location of the CoSMIC utilities.

        * install/CUTS_CoSMIC.wxs:

          Started creating the installer for CUTS modeling tools.

Thu Aug 31 22:52:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/wix.mpb:

          Windows Installer XML (WIX) base project.

        * install/BMW.wxs:

          Updated the installer use the precompiled version of the
          website.

        * install/BMW_installers.mpc:

          Project(s) that precompile the BMW and then create a MSI binary
          for the BMW.

        * install/CUTS_installers.mwc:

          Custom solution for creating MSI installers for the different
          components in CUTS.

Wed Aug 30 06:14:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/index.html:
        * docs/logo.jpg:

          - Added relative links to the page for navigating to other
            pages.
          - Added the CUTS logo to the page.

        * docs/bmw-install.html:

          Updated the installation information for using the MSI
          package and changing the location of the database.

Mon Aug 28 21:19:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Execution_Times.aspx:

          Fixed broken references.

Mon Aug 28 20:49:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Added preqequisites checks for Microsoft .NET 2.0 and IIS

Thu Aug 17 04:29:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Pushed the get_sender () method down into to this assembly from
          Execution_Times.aspx.cs.

        * utils/BMW/Execution_Times.aspx.cs:

          Fixed bug that was preventing the critical paths from showing
          up in the drop-down listing.

Wed Aug 16 00:11:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          Fixed broken build file.

Tue Aug 15 23:53:38 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_T.h:

          Explicitly added the periodic event trigger to the include
          file. This will be removed once it becomes a worker.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/be/BE.mpc:
        * cuts/be/BE_File_Generator.h:
        * cuts/be/BE_File_Generator.inl:
        * cuts/be/BE_File_Generator.cpp:
        * cuts/be/BE_File_Generator_Manager.h:
        * cuts/be/BE_File_Generator_Manager.inl:
        * cuts/be/BE_File_Generator_Manager.cpp:
        * cuts/be/BE_Workspace_Generator.h:
        * cuts/be/BE_Workspace_Generator.cpp:
        * cuts/be/BE_export.h:
        * cuts/be/CIAO/CIAO_Project_Generator.h:
        * cuts/be/CIAO/CIAO_Project_Generator.cpp:
        * cuts/be/CIAO/File_Generator_Base.h:
        * cuts/be/CIAO/File_Generator_Base.cpp:
        * cuts/be/CIAO/Header_File_Generator.h:
        * cuts/be/CIAO/Header_File_Generator.inl:
        * cuts/be/CIAO/Header_File_Generator.cpp:
        * cuts/be/CIAO/Source_File_Generator.h:
        * cuts/be/CIAO/Source_File_Generator.inl:
        * cuts/be/CIAO/Source_File_Generator.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CUTS_Project.h:
        * cuts/be/CUTS_Project.cpp:
        * cuts/be/CoWorkEr_Cache.h:
        * cuts/be/CoWorkEr_Cache.cpp:
        * cuts/be/CoWorkEr_Generator.h:
        * cuts/be/CoWorkEr_Generator.cpp:
        * cuts/be/Dependency_Generator.h:
        * cuts/be/Dependency_Generator.cpp:
        * cuts/be/Dependency_Graph.h:
        * cuts/be/Dependency_Graph.cpp:
        * cuts/be/Null_File_Generator.h:
        * cuts/be/Null_File_Generator.inl:
        * cuts/be/Null_File_Generator.cpp:
        * cuts/be/Preprocess_Data.h:
        * cuts/be/Preprocess_Data.inl:
        * cuts/be/Preprocess_Data.cpp:
        * cuts/be/Project_Generator.h:
        * cuts/be/Project_Generator.inl:
        * cuts/be/Project_Generator.cpp:
        * cuts/be/String_Set.h:
        * cuts/be/UDM_Utility_T.h:
        * cuts/be/UDM_Utility_T.cpp:

          There is too much change to list. But in overall, I refactored
          the entire backend for the CUTS intepreter. A lot of the code
          was pushed down into a common backend for parsing the models.
          The parse then makes upcalls the file generators that are
          backend specific. This is going to make is somewhat easier
          to define backends (e.g., .NET and Java) with out having to
          worry about parsing the models, per se.

        * cuts/be/CIAO/CUTS_Project.h:
        * cuts/be/CIAO/CUTS_Project.cpp:
        * cuts/be/CIAO/CoWorkEr_Cache.h:
        * cuts/be/CIAO/CoWorkEr_Cache.cpp:
        * cuts/be/CIAO/CoWorkEr_Generator.h:
        * cuts/be/CIAO/CoWorkEr_Generator.cpp:
        * cuts/be/CIAO/Dependency_Generator.h:
        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Dependency_Graph.h:
        * cuts/be/CIAO/Dependency_Graph.cpp:
        * cuts/be/CIAO/String_Set.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_Utility_T.h:
        * cuts/be/CIAO/UDM_Utility_T.cpp:
        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          Removed these files.

Mon Aug 14 22:11:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Removed the MySQL.NET binary from the installation file since
          we require used to download and install the utility manually.

Mon Aug 14 22:05:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Added a condition to check for MySQL.NET Connector 1.0.7

Mon Aug 14 21:35:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install/BMW.wxs:

          Added a condition to check for IIS before installing.

Mon Aug 14 21:05:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Menu.aspx:
        * utils/BMW/Menu.aspx.cs:
        * utils/BMW/Menu.aspx.resx:
        * utils/BMW/images/stoplight-red.gif:

          Removed these files.

Mon Aug 14 21:03:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * install:

          Directory that will contain installation scripts/files.

        * install/BMW.wxs:

          Wix project file for the BMW.

        * install/CUTS_CoSMIC.wxs:

          Empty Wix project file for the CUTS interpreters.

Sun Aug 13 23:21:18 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests:
        * performance-tests/Event_Handler:
        * performance-tests/Event_Handler/Single_Event_Loop_Back:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Four_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Three_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/node_map.dat:

          Removed these files because they are really out of date.

Wed Aug  9 17:14:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          Removed ACE_Date_Time to ODBC_Date_Time conversion functions.

        * cuts/utils/ODBC/ODBC_Types.cpp:

          Convertion of a ACE_Date_Time to a ODBC_Data_Time did not
          set the seconds field.

        * utils/BMW/BMW.master:

          Changed the margin/border settings on the master page.

        * utils/BMW/Hosts.aspx.cs:
        * utils/BMW/Node_Details.ascx.cs:

          Host specific error messages are now displayed in its
          section.

        * utils/BMW/Style.css:

          Changed the style of the hyperlinks.

        * utils/BMW/default.aspx:
        * utils/BMW/default.aspx.cs:

          - Reduced the cellpadding for the datagrid
          - Added the capability of deleting collection of tests.

Wed Aug  9 17:11:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Event_Handler_Manager_T.h:
        * cuts/Event_Handler_Manager_T.inl:
        * cuts/Event_Handler_Manager_T.cpp:

          Forgot to checkin the following files.

Wed Aug  2 06:37:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.h:

          Missing an include file since its name was changed.

        * cuts/Event_Handler.h:
        * cuts/Event_Handler_T.h:
        * cuts/Event_Handler_T.inl:

          - Remove activate () and deactivate () methods from the
            CUTS_Event_Handler class.
          - Remove name () setter method from CUTS_Event_Handler class.

Wed Aug  2 06:18:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:
        * cuts/CUTS.mpc:
        * cuts/Event_Handler.h:
        * cuts/Event_Handler_T.h:
        * cuts/Event_Handler_T.inl:
        * cuts/Event_Handler_T.cpp:
        * cuts/Sync_Event_Handler_T.h:
        * cuts/Sync_Event_Handler_T.cpp:

          Refactored the code in the event handler framework so that
          the event handler manager contains a configuration file that
          is shared between all event handler types. This removes the
          need to copy data with implementations (modes) change.

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp (generate_init):

          Updated code generator to be consist with the new implemenation
          for the event handler framework.

        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:

          Removed this file.

Wed Aug  2 01:46:36 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:
        * cuts/Testing_Service.h:
        * cuts/Testing_Service.cpp:

          Fixed warning errors on for linux builds.

Tue Aug  1 20:51:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/PICML/Event_Handler.xme:

          Simple example that illustrates how to configure the mode,
          thread_count and priority of an event handler.

Tue Aug  1 20:19:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:
        * cuts/Sync_Event_Handler_T.h:
        * cuts/Sync_Event_Handler_T.cpp:

          Fixed bug that was caused by switching between the modes of a
          event handler. It was not copying the configuration between
          the implemenations.

Tue Aug  1 18:01:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Added support for configuring event handlers with the following
          properties, which is done via Property elements inside of an
          InputAction.

          - thread_count => number of threads of control for an event handler
          - priorty => priority of ALL threads for the event handler
          - mode => event handling mode (sync/async)

Tue Aug  1 16:39:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Shortened the decorated names for event handlers and port
          agents.

Tue Aug  1 16:32:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          I thought I had removed all occurrences of 'export' as a
          variable, but somehow it creeped back into the code and was
          causing compile warnings on vc8.

Tue Aug  1 15:08:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.inl:
        * cuts/Async_Event_Handler_T.cpp:
        * cuts/CUTS.mpc:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/Event_Handler.h:
        * cuts/Event_Handler.cpp:
        * cuts/Sync_Event_Handler_T.h:
        * cuts/Sync_Event_Handler_T.inl:

          - Finalized the programmatic framework setting the number of
            application level threads in an event handler. (alpha)
          - Finalized the programmatic framework setting the priority
            of application level threads in an event handler. (alpha)
          - Changes above are only applicable to the asynchronous event
            handler.

        * cuts/EventHandler.h:
        * cuts/EventHandler.inl:
        * cuts/EventHandler.cpp:

          Removed these files.

Mon Jul 31 23:47:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/config.h:

          Removed cuts/CUTS_export.h declaration.

        * cuts/Action.h:
        * cuts/Action_Iterator.h:
        * cuts/Benchmark_Agent.h:
        * cuts/Component_Metric.h:
        * cuts/Component_Registry.h:
        * cuts/EventHandler.h:
        * cuts/Event_Guard.h:
        * cuts/Host_Table.h:
        * cuts/Message_Handler.h:
        * cuts/System_Metric.h:
        * cuts/Time.h:
        * cuts/Time_Measurement.h:
        * cuts/Time_Metric.h:
        * cuts/Worker_Library.h:
        * cuts/svcs/dbase/DBase_Service.h:

          Added cuts/CUTS_export.h declaration (related to change above).

        * cuts/utils/ODBC/ODBC.h:

          Added ace/config.h declaration since cuts/config.h doesn't include
          ace/config.h anymore.

        * CUTS_CIAO.mwc:

          Added String_Set.h header file.

        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:

        * cuts/be/CIAO/String_Set.h:

          Type definition of string set.

        * cuts/be/CIAO/Dependency_Generator.h:
        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Dependency_Graph.h:
        * cuts/be/CIAO/Dependency_Graph.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          - Refactored dependency graph generator.
          - Component implemenations generate a dependency graph and
            references nodes in the stub dependency graph.
          - Workspaces are now generated based on the implemenation
            and stub dependency graph.

Mon Jul 31 16:05:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.idl:

          Missing #include <Components.idl> declaration.

        * cuts/be/CIAO/Export_File_Generator.h:
        * cuts/be/CIAO/Export_File_Generator.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          Apparently, "exports" is a future reserved word on vc8. So,
          all occurrences of "export" as a variable were changed.

Fri Jul 28 18:21:00 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:

          Refactored build to be consist with the method implored
          for building stub/svnt/exec projects in CUTS.

        * cuts/CUTS.idl:

          UUID.idl was removed from the project build, but not from
          the this idl file.

        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_servant_dnc.mpb:

          - Removed all references to CUTS_svnt.

Fri Jul 28 16:15:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_Event_Producer_T.h:
        * cuts/EventHandler.cpp:
        * cuts/EventHandler_T.h:

          Updated the documentation.

        * cuts/EventHandler.h:

          Moved CUTS_Event_Handler to this file.

        * cuts/performance.idl:

          UUID.idl was removed from the project build, but not from
          the this idl file.

        * cuts/UUID.idl:

          Removed this file.

Fri Jul 28 04:47:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          The CUTS_CCM_CoWorkEr is now derived from a
          TAO_Local_RefCounted_Object, which means the code generator
          does not have to generate the code to derive the executor
          for the local ref counted object.

Fri Jul 28 04:34:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Fixed bug that was preventing the generation of executor
          source files when a dependency node was not found. Now the
          executor project doesn't bother to look up dependencny
          nodes since it's ot necessary.

        * cuts/be/CIAO/Workspace_Generator.cpp:

          Fixed a bug that prevented the generation of subsequent
          MPC files after failing to generate one MPC file.

Fri Jul 28 02:43:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent_i.h:
        * cuts/IDL_Streams.h:

          - Changed the export macro name.
          - Moved sources files to a CUTS_stub project.

        * cuts/CCM_Factory_T.h:
        * cuts/CCM_Factory_T.cpp:

          Template class that can be parameterized by the home executor
          and component executor types to simplify code generation and
          guarantee commonality between all factories.

        * cuts/CUTS.mpc:

          Removed the CUTS_svnt project and placed all files client/server
          files in CUTS_stub project to be consistent with what the
          workspace generator expects.

        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Export_File_Generator.h:
        * cuts/be/CIAO/Export_File_Generator.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          Updated the intepreter to be compliant with the new CIDL
          interpreter, e.g., enters from the ComponentImplemenations.

        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:

          - Added new base projects.
          - Removed idlflags and cildflag definitions.

Tue Jul 25 22:43:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Dependency_Graph.h:
        * cuts/be/CIAO/Dependency_Graph.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Fixed build error on vc8.

Tue Jul 25 22:35:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          - Added a users table for authentication.
          - Added a component_types table for associating component
            instances with a type.
          - Added initial values to the ipaddr_host_map and component_types
            table.

        * utils/BMW/BMW.master:

          Changed the name of the component instances menu item.

        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Execution_Times.aspx:

          Fixed the style so that its consistent with the rest
          of the website.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Pushed getting the critical paths and component instances
          down to the database utility.

        * utils/Node_Daemon/Node_Daemon_i.cpp (recover):

          Refactored code.

        * utils/Node_Daemon/Process_Log.cpp:

          Fixed bug with "min" that prevented compilation on windows
          systems.

Tue Jul 25 12:50:15 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_Event_Handler.cpp (handle_exit):

        Added an error message if process == 0.

        * utils/Node_Daemon/Node_Daemon_i.cpp:

        Fixed a bug that prevented processes that exited gracefully to
        be removed from the process log. Now, process_exits () signals
        the log to remove a process.

Tue Jul 25 06:42:44 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_i.cpp (init_p_options):

        Set the group id for the process to 0 in p_options_
        to force the creation of a new group on systems that
        support setpgid (). This allows the daemon to fail
        without failing any of the spawned child processes.

Tue Jul 25 06:27:07 UTC 2006  James Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_i.cpp (init_p_options):

        Removed the process name from p_options_.

        * utils/Node_Daemon/Process_Log.cpp (process_exit):

        Switched to using std::min from <algorithm>.

Mon Jul 24 23:27:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Combined the ipaddr_host_map and testenv tables.

        * utils/BMW/BMW.master:

          Cosmetic changes.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          - Removed all traces interop services.
          - Added a destructor which closes the existing connection
            to the database if present.

        * utils/BMW/Hosts.aspx:
        * utils/BMW/Hosts.aspx.cs:
        * utils/BMW/Node_Details.ascx:
        * utils/BMW/Node_Details.ascx.cs:
        * utils/BMW/bin/IIOPChannel.dll:
        * utils/BMW/bin/Node_Daemon.NET.dll:
        * utils/BMW/images/cancel.gif:
        * utils/BMW/images/minus.gif:
        * utils/BMW/images/ok.gif:
        * utils/BMW/images/plus.gif:

          Implemenation of a control/page that use IIOP.NET to communicate
          with the CUTS/Node_Daemon to control it from the BMW.

        * utils/BMW/Sender_Metrics.ascx:

          Cosmetic changes.

        * utils/Node_Daemon/Node_Daemon.idl:
        * utils/Node_Daemon/Node_Daemon_Client.cpp:
        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.cpp:

          The spawn method now uses collection of nodes bindings with
          the same arguments instead of a collection of arguments
          and node binding.

Sat Jul 22 07:31:54 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * CUTS_Release.mwc:  Added new file to allow building a solution
          which removes PICML since it's already built using CoSMIC.mwc.
          This is so that all projects that need to be released under
          CoSMIC can be built using one solution.

Fri Jul 21 00:21:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          - Removed all statements that try to drop an existing
            table.
          - Statements only create tables if they do not exist.

        * utils/BMW/BMW.master:

          - Change the names of several menu options.
          - Placed a color divider between the header and content.

        * utils/BMW/Database_Utility/Database_Utility.cs:

        * utils/BMW/Style.css:

          Updated the datagrd styles.

        * utils/BMW/bin/IIOPChannel.dll:

          IIOP.NET assembly for allowing .NET assemblies to
          communicate w/ CORBA components.

        * utils/BMW/bin/Node_Daemon.NET.dll:

          .NET version of the Node_Daemon interfaces. This
          will allow the BMW to communicate w/ CORBA Node_Daemon
          objects.

        * utils/Node_Daemon/Client_Options.h:
        * utils/Node_Daemon/Client_Options.cpp:
        * utils/Node_Daemon/Node_Daemon.idl:
        * utils/Node_Daemon/Node_Daemon_Client.cpp:
        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * utils/Node_Daemon/Process_Log.h:
        * utils/Node_Daemon/Process_Log.cpp:

          Finished second phase implementation that completes
          the basic functionality need to have a node daemon
          spawn node managers using a client application.

Thu Jul 20 06:14:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Client_Options.h:
        * utils/Node_Daemon/Client_Options.cpp:

          Container of options for the client program.

        * utils/Node_Daemon/Node_Daemon.idl:

          Added a details () method to the Node_Daemon interface.

        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon.mpc:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * utils/Node_Daemon/Server_Options.cpp:

          Finished first phase implementation of the node daemon. The
          implemenation still needs to be tested in the non-Windows
          environment.

        * utils/Node_Daemon/Node_Daemon_Client.cpp:

          Partially finished implemenation of the client.

Wed Jul 19 03:30:56 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/Node_Daemon/Node_Daemon_Server.cpp:

          Fixed file property.

Wed Jul 19 03:16:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added the Node_Daemon to the workspace.

        * utils/BMW/BMW.master:
        * utils/BMW/images/logo.jpg:

          Added the logo to the BMW.

          Thanks John Slaby.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Added a method for getting all the test in the database.

        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Style.css:
        * utils/BMW/default.aspx:
        * utils/BMW/default.aspx.cs:

          Moved the implementation for query the test to the database
          utility assembly. See above.

        * utils/Node_Daemon/Active_Process.h:
        * utils/Node_Daemon/Active_Process.inl:
        * utils/Node_Daemon/Active_Process.cpp:
        * utils/Node_Daemon/Node_Daemon.idl:
        * utils/Node_Daemon/Node_Daemon.mpc:
        * utils/Node_Daemon/Node_Daemon_Client.cpp:
        * utils/Node_Daemon/Node_Daemon_Event_Handler.h:
        * utils/Node_Daemon/Node_Daemon_Event_Handler.cpp:
        * utils/Node_Daemon/Node_Daemon_Server.cpp:
        * utils/Node_Daemon/Node_Daemon_i.h:
        * utils/Node_Daemon/Node_Daemon_i.inl:
        * utils/Node_Daemon/Node_Daemon_i.cpp:
        * utils/Node_Daemon/Process_Log.h:
        * utils/Node_Daemon/Process_Log.inl:
        * utils/Node_Daemon/Process_Log.cpp:
        * utils/Node_Daemon/Server_Options.h:
        * utils/Node_Daemon/Server_Options.cpp:

          Initial implementation for a Node_Daemon utility for spawning
          and killing node managers on the fly. This daemon is a more advance
          version of the Benchmark Node Controller (BNC) developed by
          Keith Muzzioli at Raytheon.

Tue Jul 11 05:47:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp (Visit_File):

          Fixed bug in code generator from output a ostringstream variable
          into an output stream w/o calling the c_str () method on the
          string retured by str (). This would cause the file to convert
          to binary format b/c of invalid characters.

Tue Jul 11 05:15:28 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp (Visit_Transition):

          Fixed bug caused by only parsing instances of actions. This
          resulted in OutputAction element being ignored.

Tue Jul 11 04:32:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/database.html:
        * docs/index.html:

          Created documentation for installing database support.

Mon Jul 10 03:54:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/Dependency_Generator.cpp (Visit_Component):

          Fixed bug in dependency generator where if a component was not
          a CoWorkEr, it wouldn't generate the neccesary dependencies even
          if other component had a dependency on it.

Sat Jul  8 02:33:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/CUTS_Project.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          When auto-generating CoWorkEr models, the interpreter will
          add the necessary CUTS elements if they are not found in the
          current model. This allow users to start w/ a bare model
          of a system then extend it for usage w/ CUTS.

Sat Jul  8 01:26:09 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/install.dat:

          Installation data file for manual install of CUTS interpreter
          using the CoSMIC install perl script.

        * cuts/GME/interpreters/PICML_CIAO_Impl/Component.rc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Main_Dialog.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Main_Dialog.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Resource.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/resource.h:

          There is now a pre-dialog that allows users to select whether
          to generate CoWorkEr models, or implementation.

        * cuts/be/CIAO/CUTS_Project.h:
        * cuts/be/CIAO/CUTS_Project.cpp:
        * cuts/be/CIAO/CoWorkEr_Generator.h:
        * cuts/be/CIAO/CoWorkEr_Generator.cpp:
        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/UDM_Utility_T.h:
        * cuts/be/CIAO/UDM_Utility_T.cpp:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          The following enhancements were made to the interpreter:
          - The interpreter now auto-generates the CoWorkEr models
            components in a direcotry called "CoWorkEr_InterfaceDefinitions".
          - The naming convention of the entry points is based solely
            on the name of the CoWorkEr and it's home decorated with it
            location from the contained file to the component.

        * utils/BMW/Database_Utility/Database_Utility.cs:
        * utils/BMW/Execution_Times.aspx.cs:

          Moved the selection of the different collection times to
          the database utility class.

        * utils/BMW/installer.pl:

          Installation script for the BMW.

Thu Jun 29 05:26:54 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:

          Changed the ToolTip for the interpreter.

Thu Jun 29 04:41:17 UTC 2006  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * default.features (cidl): Reverted file checked-in by mistake.

Thu Jun 29 04:37:50 UTC 2006  Krishnkumar B  <kitty@nospam.invalid.domain>

        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:

          Fixed compilation errors when compiling
          Benchmark_Data_Collector_Ex_exec_i.cpp.  The error was due to an
          inadvertent inclusion of Benchmark_Data_Collector_svnt.h inside
          Benchmark_Data_Collector_Ex_exec_i.cpp.   This resulted in
          multiple definitions of the ports of the base component.

Thu Jun 29 04:18:11 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/CompIcon.ico:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Component.rc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Resource.h:

          Changed the icon for the CUTS interpreter.

Thu Jun 29 02:19:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/bmw-install.html:

          Added a Id property tag to the file.

Thu Jun 29 02:10:28 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/bmw-install.html:

          Documentation for building/installing the BMW.

        * utils/BMW/installer.pl:

          The $arg variable was not declared correctly.

Tue Jun 27 23:36:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/installer.pl:

          Script for installing/uninstalling the BMW website.

Tue Jun 27 12:03:19 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_manager.pl:
        * bin/cuts_node.pl:
        * bin/cuts_planner.pl:
        * bin/cuts_test.pl:

          Replaced the #! to locate the perl engine w/ the suggestion
          from the ACE scripting guidelines. This will use the perl
          engine located in the users PATH.

Tue Jun 27 06:19:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/odbc.mpb:

          - All non-Windows platforms require UnixODBC
          - CUTS_HAS_ODBC macro is defined to signify ODBC support.

Tue Jun 27 06:04:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC.h:

          - Includes the primary files for ODBC
          - Implements macros to verify ODBC is supported.

        * cuts/utils/ODBC/ODBC_Base.h:
        * cuts/utils/ODBC/ODBC_Base.cpp:

          Moved old contents of ODBC.h here

        * cuts/utils/ODBC/CUTS_ODBC.mpc:
        * cuts/utils/ODBC/ODBC_Connection.h:
        * cuts/utils/ODBC/ODBC_Exception.cpp:
        * cuts/utils/ODBC/ODBC_Parameter.h:
        * cuts/utils/ODBC/ODBC_Query.h:
        * cuts/utils/ODBC/ODBC_Record.h:

          Changed ODBC.h to ODBC_Base.h

        * etc/config/odbc.mpb:

          Added defines += CUTS_HAS_ODBC to the projects.

        * cuts/utils/ODBC/ODBC.inl:
        * cuts/utils/ODBC/ODBC.cpp:

          Removed these files.

Tue Jun 27 05:29:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:
        * SQL/CUTS-create.sql:
        * SQL/CUTS-procs.sql:
        * cuts/Action.h:
        * cuts/Action.cpp:
        * cuts/Action_Iterator.h:
        * cuts/Action_Iterator.cpp:
        * cuts/Action_Iterator_T.h:
        * cuts/Action_Iterator_T.cpp:
        * cuts/Action_T.h:
        * cuts/Action_T.inl:
        * cuts/Action_T.cpp:
        * cuts/Activation_Record_T.inl:
        * cuts/Activation_Record_T.cpp:
        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:
        * cuts/Auto_Release_Ptr.h:
        * cuts/Auto_Release_Ptr.inl:
        * cuts/Auto_Release_Ptr.cpp:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:
        * cuts/BDC/Benchmark_Data_Collector.cidl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.cidl:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.inl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Benchmark_Data_Collector_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_svnt_export.h:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Database_Service_exec_i.h:
        * cuts/BDC/Database_Service_exec_i.cpp:
        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.inl:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:
        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:
        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.inl:
        * cuts/Benchmark_Agent_i.cpp:
        * cuts/CUTS_Worker.mpc:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:
        * cuts/Event_Guard.h:
        * cuts/Event_Guard.inl:
        * cuts/Event_Guard.cpp:
        * cuts/Event_Guard_T.h:
        * cuts/Event_Guard_T.cpp:
        * cuts/Event_Handler_Message.h:
        * cuts/Event_Handler_Message.inl:
        * cuts/Event_Handler_Message.cpp:
        * cuts/Host_Table.h:
        * cuts/Host_Table.cpp:
        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:
        * cuts/Message_Handler.inl:
        * cuts/Message_Handler.mpc:
        * cuts/Message_Handler.cpp:
        * cuts/Port_Measurement_Pool.h:
        * cuts/Port_Measurement_Pool.inl:
        * cuts/Port_Measurement_Pool.cpp:
        * cuts/Sync_Event_Handler_T.h:
        * cuts/Sync_Event_Handler_T.inl:
        * cuts/Sync_Event_Handler_T.cpp:
        * cuts/System_Metrics_Visitor.inl:
        * cuts/System_Metrics_Visitor.cpp:
        * cuts/Testing_Service.h:
        * cuts/Testing_Service.inl:
        * cuts/Testing_Service.cpp:
        * cuts/WML_Macros.h:
        * cuts/Worker_Library.h:
        * cuts/Worker_Library.cpp:
        * cuts/Worker_T.inl:
        * cuts/Worker_T.cpp:
        * cuts/XML_System_Metrics_Visitor.h:
        * cuts/XML_System_Metrics_Visitor.cpp:
        * cuts/be/CIAO/CoWorkEr_Cache.h:
        * cuts/be/CIAO/CoWorkEr_Cache.cpp:
        * cuts/be/CIAO/Dependency_Generator.h:
        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Dependency_Graph.h:
        * cuts/be/CIAO/Dependency_Graph.cpp:
        * cuts/be/CIAO/Predefined_Type_Map.h:
        * cuts/be/CIAO/Predefined_Type_Map.cpp:
        * cuts/be/CIAO/UDM_CIAO_Export.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_Utility_T.h:
        * cuts/be/CIAO/UDM_Utility_T.cpp:
        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:
        * cuts/svcs/dbase/DBase_Service.inl:
        * cuts/svcs/dbase/DBase_Service.mpc:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DBase_Service_export.h:
        * cuts/utils/ODBC/ODBC.h:
        * cuts/utils/ODBC/ODBC.inl:
        * cuts/utils/ODBC/ODBC.cpp:
        * cuts/utils/ODBC/ODBC_Connection.h:
        * cuts/utils/ODBC/ODBC_Connection.inl:
        * cuts/utils/ODBC/ODBC_Connection.cpp:
        * cuts/utils/ODBC/ODBC_Exception.h:
        * cuts/utils/ODBC/ODBC_Exception.inl:
        * cuts/utils/ODBC/ODBC_Exception.cpp:
        * cuts/utils/ODBC/ODBC_Query.h:
        * cuts/utils/ODBC/ODBC_Query.inl:
        * cuts/utils/ODBC/ODBC_Query.cpp:
        * cuts/utils/UUID.inl:
        * cuts/utils/UUID.cpp:
        * default.features:
        * docs/build.html:
        * etc/config/cuts_dbasesvc.mpb:
        * etc/config/cuts_test_base.mpb:
        * etc/config/cutsexe.mpb:
        * etc/config/cutslib.mpb:
        * etc/config/cutsutils.mpb:
        * etc/config/picml_udm.mpb:
        * etc/config/regsvr32.mpb:
        * etc/config/udm_component.mpb:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * tests/CUTS_Test_export.h:
        * tests/Test.h:
        * tests/Test.cpp:
        * tests/Test_Client.cpp:
        * tests/Test_Macros.h:
        * tests/Unit_Test.h:
        * tests/Unit_Test.cpp:
        * tests/coworker/cpu/CPU_CUTS.mwc:
        * tests/coworker/cpu/Sender_CoWorkEr.h:
        * tests/coworker/cpu/Sender_CoWorkEr.mpc:
        * tests/coworker/cpu/Sender_CoWorkEr.cpp:
        * tests/cuts/Time_Measurement_Test.h:
        * tests/cuts/Time_Measurement_Test.cpp:
        * tests/cuts/Time_Metric_Test.h:
        * tests/cuts/Time_Metric_Test.cpp:
        * tests/cuts/Worker_T_Test.h:
        * tests/cuts/Worker_T_Test.cpp:
        * tests/cuts/Worker_Test.h:
        * tests/cuts/Worker_Test.cpp:
        * tests/cuts/test.mpc:
        * tests/test.mpc:
        * tests/test.mwc:
        * utils/BDC_Client/BDC_Client.mpc:
        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/BMW.master:
        * utils/BMW/BMW.mwc:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Database_Utility/Database_Utility.cs:
        * utils/BMW/Database_Utility/Database_Utility.mpc:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Sender_Metrics.ascx.cs:
        * utils/BMW/Timeline.aspx.cs:
        * utils/System_Monitor/System_Monitor.idl:
        * utils/System_Monitor/System_Monitor_Task.cpp:
        * utils/System_Monitor/System_Monitor_exec_export.h:
        * utils/System_Monitor/System_Monitor_exec_i.h:
        * utils/System_Monitor/System_Monitor_exec_i.cpp:
        * utils/System_Monitor/System_Monitor_stub_export.h:
        * utils/System_Monitor/System_Monitor_svnt_export.h:

          Set the svn:keyword Id property.

Tue Jun 27 05:26:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC.h:
        * cuts/utils/ODBC.inl:
        * cuts/utils/ODBC.cpp:
        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.inl:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/ODBC_Exception.h:
        * cuts/utils/ODBC_Exception.inl:
        * cuts/utils/ODBC_Exception.cpp:
        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:

          Removed these files.

Tue Jun 27 05:13:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/DB_Types_Impl.h:
        * cuts/utils/DB_Types_Impl.inl:

          Implemented a copy constructor to stop gmake from complaining.

        * cuts/utils/ODBC/ODBC_Types.inl (ODBC_Date_Time):

          Explicitly called copy constructor of super class.

Tue Jun 27 05:08:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Record.cpp (get_data_i):

          Fixed broken exception list.

Tue Jun 27 05:04:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Connection.cpp (disconnect) :

          Fixed broken exception list.

Tue Jun 27 05:01:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/DB_Parameter.inl:

          - Removed unused parameters.
          - Fixed exception list for null ()

Tue Jun 27 04:42:11 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/CUTS_Worker.mpc:
        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:
        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.mpc:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Reimplemented all database functionality using the new
          ODBC database framework.

        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/DB_Connection.h:
        * cuts/utils/DB_Connection.inl:
        * cuts/utils/DB_Connection.cpp:
        * cuts/utils/DB_Exception.h:
        * cuts/utils/DB_Exception.inl:
        * cuts/utils/DB_Exception.cpp:
        * cuts/utils/DB_Parameter.h:
        * cuts/utils/DB_Parameter.inl:
        * cuts/utils/DB_Parameter.cpp:
        * cuts/utils/DB_Query.h:
        * cuts/utils/DB_Query.inl:
        * cuts/utils/DB_Query.cpp:
        * cuts/utils/DB_Record.h:
        * cuts/utils/DB_Record.inl:
        * cuts/utils/DB_Record.cpp:
        * cuts/utils/DB_Types_Impl.h:
        * cuts/utils/DB_Types_Impl.inl:
        * cuts/utils/DB_Types_Impl.cpp:
        * cuts/utils/DB_Utils_Export.h:

          Initial implemenation of a platform/database independent
          framework for CUTS

        * cuts/utils/ODBC/CUTS_ODBC.mpc:
        * cuts/utils/ODBC/ODBC.h:
        * cuts/utils/ODBC/ODBC.inl:
        * cuts/utils/ODBC/ODBC.cpp:
        * cuts/utils/ODBC/ODBC_Connection.h:
        * cuts/utils/ODBC/ODBC_Connection.inl:
        * cuts/utils/ODBC/ODBC_Connection.cpp:
        * cuts/utils/ODBC/ODBC_DBase_Export.h:
        * cuts/utils/ODBC/ODBC_Exception.h:
        * cuts/utils/ODBC/ODBC_Exception.inl:
        * cuts/utils/ODBC/ODBC_Exception.cpp:
        * cuts/utils/ODBC/ODBC_Parameter.h:
        * cuts/utils/ODBC/ODBC_Parameter.cpp:
        * cuts/utils/ODBC/ODBC_Parameter_List.h:
        * cuts/utils/ODBC/ODBC_Parameter_List.inl:
        * cuts/utils/ODBC/ODBC_Parameter_List.cpp:
        * cuts/utils/ODBC/ODBC_Query.h:
        * cuts/utils/ODBC/ODBC_Query.inl:
        * cuts/utils/ODBC/ODBC_Query.cpp:
        * cuts/utils/ODBC/ODBC_Record.h:
        * cuts/utils/ODBC/ODBC_Record.inl:
        * cuts/utils/ODBC/ODBC_Record.cpp:
        * cuts/utils/ODBC/ODBC_Types.h:
        * cuts/utils/ODBC/ODBC_Types.inl:
        * cuts/utils/ODBC/ODBC_Types.cpp:

          Initial implementation of ODBC support using the CUTS
          database framework.

        * cuts/utils/String.h:
        * cuts/utils/UUID.h:
        * cuts/utils/Utils_Export.h:

          Changed the export/import macro definition.

        * etc/config/odbc.mpb:

          Removed CUTS_HAS_ODBC dynamic/static flags.

        * utils/BMW/BMW.master:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Style.css:
        * utils/BMW/default.aspx:

          Removed references to IIOP.Net

Tue Jun 20 05:37:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/BMW.mwc:

          Removed stale code and projects.

Tue Jun 20 03:27:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Created a new table for storing deployment information. The
          table contains the location, uptime and downtime for each
          instance per test.

        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:

          Moved the test creation code to the server_name () attribute
          method. This will cause connecting to a new database to
          automatically create a new test.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Added the methods set_component_uptime (), set_component_downtime ()
          and get_component_id ().

        * cuts/BDC/Testing_Service_Ex_exec_i.h:
        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:

          Added support for setting component uptime and downtime when
          a component is registered and unregistered, respectively.

Sun Jun 18 17:49:50 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Change the IP table from a INT to a VARCHAR to compensate
          for IPv6 addresses.

        * cuts/BDC/Testing_Service_exec_i.cpp:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CUTS.idl:
        * cuts/Host_Table.h:
        * cuts/Host_Table.cpp:
        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Changed the IP-address types from ACE_UINT to ACE_CString.

Sun Jun 18 13:03:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Updated the host_ipaddr_map table to include an IP version
          boolean field, and the necessary constaints for data
          integrety.

        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Updated the testing service to store host information
          in an in-memory host table, and in the database for
          persistance.

        * cuts/CCM_CoWorkEr.cpp:
        * cuts/Testing_Service.h:
        * cuts/Testing_Service.inl:

          Refactored the code and removed unncessary methods,
          and exposed for accessor methods.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Add a new method to store host data in the database. However,
          I need to still implement a method to verify there isn't a
          duplicate ID in the database.

        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/MyODBC_Connection.cpp:

          The connect () method now passes a const char * to the
          base connect_i () method, instead of a std::string.

        * cuts/utils/ODBC_Exception.h:
        * cuts/utils/ODBC_Exception.inl:
        * cuts/utils/ODBC_Exception.cpp:

          Refactored the exception classes and pushed much of the
          implementation down into the generic ODBC exception class.

Thu Jun 15 23:53:50 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Added the new files to the project.

        * cuts/BDC/BDC_Task.cpp:
        * cuts/Testing_Service.h:
        * cuts/Testing_Service.inl:
        * cuts/Testing_Service.cpp:

          Base implementation of the testing service that moves much
          of the implementation code from the implementation of the
          interface for resue.

        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Refactored the code to use the new implementation of the
          testing service object.

        * cuts/Host_Table.h:
        * cuts/Host_Table.cpp:

          Implemenation of an optimized data structure for mapping
          ip address to host names. The implementation is based on
          a hash table, however searching for ip address based
          on host name, and visa versa, have the complexity of the
          hash function for either value.

Thu Jun 15 05:15:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:

        The components submit their IP address and hostname when
        registering with the testing service.

Thu Jun 15 03:24:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Testing_Service_Ex_exec_i.h:
        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.cpp:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CUTS.idl:

        The CoWorkEr's now use a registration structure when
        re/unregistering with the testing service.

Wed Jun 14 05:35:28 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.cpp:

          Initalize the value of parent_ to -1 in the base member
          initialization.

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:

          Moved the registration code to the CUTS_CCM_CoWorkEr clas
          so it can be compiled in a CUTS_exec shared library.

Wed Jun 14 05:08:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_T.cpp:

        Changed the generated message for a CoWorkEr not connected to
        the BDC to something more meaningful.

Wed Jun 14 03:44:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.cpp:

        - Removed the ACE_Reactor_Notification_Strategy from the
          implmentation.
        - The BDC_Task now extends the ACE_Task_Ex class
        - The agents are now placed directly in the <msg_queue_>
          of the ACE_Task_Ex and manually notifies the reactor
          with the ACE_Event_Handler::READ_MASK flag.

        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/BMW.mwc:

          Initial implemenation of integrating IIOPNet with
          the BWM webservices.

Sun Jun 11 17:19:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Ex.idl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Database_Service_exec_i.h:
        * cuts/BDC/Database_Service_exec_i.cpp:

        The extended version of the BDC provides database service
        interface for managing the database via an client.

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Task_Ex.h
        * cuts/BDC/BDC_Task_Ex.cpp

          - Updated the documentation.
          - Replace include files with forward declarations.

        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:

          Reimplmented the initialization phase for creating and
          connecting the interfaces.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.inl:
        * cuts/svcs/dbase/DBase_Service.cpp:

          - create_new_test () now stops the current test if there
            is one before creating a new test.
          - metrics are only archived if there is a valid test.
          - the current test can be stopped programatically.

        * etc/config/picml_udm.mpb:

          Added the '-feature udm' to the project.

        * utils/BMW/Service.asmx:
        * utils/BMW/App_Code/BMW_Service.cs:

          Implemented the web service to fetch the execution time of
          and path by name.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Utility class for interacting with the database from a
          .NET application.

        * utils/BMW/BMW.mwc:

          Explicitly specified which projects to build and their
          languages.

Fri Jun  9 05:37:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/Database_Utility/Database_Utility.cs:

          Changed the type CUTS_Execution_Time => ExecutionTime because
          the SOAP result contained underscores in the node names.

Fri Jun  9 05:26:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/App_Code/BMW_Service.cs:
        * utils/BMW/Database_Utility/Database_Utility.cs:

          Added exception handling to the methods that return the
          path id for a given path name in both files.

Fri Jun  9 05:20:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/App_Code/BMW_Service.cs:

          - Implemented the PathExecutionTime method.
          - The web methods throw an exception on failure, where applicable.

        * utils/BMW/Database_Utility/Database_Utility.cs:

          Implemented the path_execution_time() method for use
          by client program, e.g, web service.

Thu Jun  8 23:28:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Don't use a exclude inside a static section.  Just
          use exclude, and add cmdline += static to enable static
          compilation.  Fixes issues with regenerating the same project
          with different setting between CUTS.mwc and CIDLC.mwc.

          Thanks Krishnakumar for the fix!!

Thu Jun  8 23:14:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Converted the get_data () methods to use the appropriate
          overloaded version.

        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:

          Overloadded the get_data () method for built-in types.

        * utils/BMW/BMW.mwc:
          - The BMW workspace can now be generated using the vc8web
            project type when running mwc.pl
          - Explicitly specified the subdirectories to parse.

        * utils/BMW/Database_Utility/Database_Utility.cs:
        * utils/BMW/Database_Utility/Database_Utility.mpc:

          Moved the database utility component to it's own
          directory.

        * CUTS.mwc:

          Fixed file formatting.

        * utils/BMW/BMW.mpc:
        * utils/BMW/Database_Utility.cs:

          Removed these files.

Thu Jun  8 03:32:09 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * CUTS.mwc:  Don't use a exclude inside a static section.  Just
          use exclude, and add cmdline += static to enable static
          compilation.  Fixes issues with regenerating the same project
          with different setting between CUTS.mwc and CIDLC.mwc.

        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:  Since we build
          CodeGenerationKit statically, we need to link to
          CodeGenerationKits[d].lib as opposed to
          CodeGenerationKit[d].lib.

Wed Jun  7 03:33:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          Refactored the code and moved the stub, svnt and exec project
          generator code to seperate methods.

Wed Jun  7 03:22:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/Workspace_Generator.cpp:

          Executor files are no longer added to projects that do not
          have an components implementations (CoWorkErs).

Wed Jun  7 02:54:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/be/CIAO/CoWorkEr_Cache.h:
        * cuts/be/CIAO/CoWorkEr_Cache.cpp:
        * cuts/be/CIAO/Dependency_Generator.h:
        * cuts/be/CIAO/Dependency_Generator.cpp:
        * cuts/be/CIAO/Dependency_Graph.h:
        * cuts/be/CIAO/Dependency_Graph.cpp:
        * cuts/be/CIAO/UDM_CIAO_Export.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_Utility_T.h:
        * cuts/be/CIAO/UDM_Utility_T.cpp:
        * cuts/be/CIAO/Workspace_Generator.h:
        * cuts/be/CIAO/Workspace_Generator.cpp:

          Re-implemented/factored the code for the CUTS implementation
          interpreter. It now only generates projects for files that
          contain CoWorkErs and ignores the remaining files.

        * etc/config/cuts_base.mpb:
        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:

          Removed CUTS_svnt and CUTS_stub from the 'libs' definition.

        * cuts/be/CIAO/File_Config.h:
        * cuts/be/CIAO/File_Config_Cache.h:
        * cuts/be/CIAO/File_Config_Cache.cpp:
        * cuts/be/CIAO/File_Config_Visitor.h:
        * cuts/be/CIAO/File_Config_Visitor.cpp:

          Removed these files.

Sun Jun  4 22:58:43 UTC 2006  James H, Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * etc/config/gme_base.mpb:
        * etc/config/picml_udm.mpb:

          Fixed dependency issues with GME projects. They now do not
          require the CUTS and ACE import libraries anymore.

Sat Jun  3 02:25:56 UTC 2006  Krishnakumar B  <kitty@nospam.invalid.domain>

        * CUTS/cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
          Don't assume that everyone has GME_ROOT set to C:\Program
          Files\GME.  Breaks build on Windows x64.

Sat Jun  3 01:20:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Removed CoWorkEr name decoration from the components and the
          factory operations. This mean the componets and the factories
          have the same name as the model and real counterparts.

Sat Jun  3 00:12:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action.h:
        * cuts/Action.cpp:

          Move the copy constructor to the protected section to fix
          compilation errors non-Windows systems.

        * cuts/MemoryWorker.h:

          Declaration was missing the public keyword.

Fri Jun  2 04:38:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action_T.h:

          Removed an uncessary header file.

        * cuts/CUTS.mpc:

          Adde the Worker_Library source files.

        * cuts/CUTS_Worker.mpc:

          Update the impory library declaration

        * cuts/CPUWorker.h:
        * cuts/DatabaseWorker.h:
        * cuts/MemoryWorker.h:

          Converted action table to use WML macros.

        * cuts/WML_Macros.h:

          Updated documentation.

        * cuts/Worker_Library.h:
        * cuts/Worker_Library.cpp:

          Initial implementation of the worker library framework for
          WML support in CUTS.

        * cuts/utils/ODBC_Exception.h:
        * cuts/utils/ODBC_Exception.cpp:

          - Updated documentation
          - Converted std::string to ACE_CString.

Thu May 25 21:56:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Activation_Record_T.cpp:

          Fixed missing include files.

Thu May 25 21:40:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:

          Removed unnecessary include files.

        * cuts/Auto_Release_Ptr.h:
        * cuts/Auto_Release_Ptr.inl:
        * cuts/Auto_Release_Ptr.cpp:

          Implemenation of an auto_ptr class invokes the release () method of
          the parameterized type instead of calling the destructor.

        * cuts/CUTS.mpc:
        * cuts/Action.h:
        * cuts/Action.cpp:
        * cuts/Action_Iterator.h:
        * cuts/Action_Iterator.cpp:
        * cuts/Action_Iterator_T.h:
        * cuts/Action_Iterator_T.cpp:
        * cuts/Action_T.h:
        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/Worker.cpp:
        * cuts/Worker_T.h:
        * cuts/Worker_T.inl:
        * cuts/Worker_T.cpp:

          Reimplemented the action and worker class to add support for
          creating dynamically loadable actions. This is the first step
          towards creating dynamically configurable workloads.

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.cpp:
        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:

          - Subclassed the above workers from the Worker_T object
          - Create an action_table_ for the workers, this allows
            the dynamic creation of actions for workers.

        * cuts/WML_Macros.h:

          Macros for building WML actions for workers.

        * tests/cuts/Worker_T_Test.h:
        * tests/cuts/Worker_T_Test.cpp:
        * tests/cuts/Worker_Test.h:
        * tests/cuts/Worker_Test.cpp:
        * tests/cuts/test.mpc:

          - added unit test for Worker class
          - added unit test for Worker_T class

Wed May 24 05:32:38 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker_T.h:

          Updated the documentation for the contained class.

Wed May 24 05:23:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Trigger_T.inl:

          The reactivate () method now uses the reset_interval () method
          of the <timer_queue_> object.

        * docs/cuts.doxygen:

          Updated the configuration for generating the documentation.

Wed May 24 04:51:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action_T.h:
        * cuts/Action_T.cpp:
        * cuts/CPUWorker.h:
        * cuts/DatabaseWorker.h:
        * cuts/MemoryWorker.h:
        * cuts/Worker.h:

          Added virtual destructors to the action objects of a worker.

Wed May 24 04:22:58 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

          Removed unnecessary output/debug messages.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          Reimplemented the object so that it is not a subclass of the
          ACE_Task object. Instead it directly creates a thread and uses
          the ACE_Message_Queue_Ex object for synchronization.

        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:

          - Fixed shutdown issues on Windows
          - Fixed bug that occured because the timer_queue_ was not being
            activated correctly.

Tue May 23 23:43:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:

          Reimplemented the periodic task as a wrapper to the
          ACE_Thread_Timer_Queue_Adapter object.

Tue May 23 22:42:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:

          Fixed scope resolution problems with using enums located in
          the CUTS_Event_Handler class in subclasses.

Tue May 23 21:33:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Async_Event_Handler_T.h:
        * cuts/Async_Event_Handler_T.cpp:
        * cuts/CUTS.mpc:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:
        * cuts/Sync_Event_Handler_T.h:
        * cuts/Sync_Event_Handler_T.inl:
        * cuts/Sync_Event_Handler_T.cpp:

          - Event handler now be strategized as async or sync by setting the
            mode of the event handler.
          - The async event handlers implementation has been stripped of the
            ACE_Task_Base object. The thread handling the event is now spawned
            directly by the event handler.

Sun May 21 15:42:09 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Time_Measurement.h:

          Updated some of the documentation.

        * tests/Test_Macros.h:

          The CUTS_ADD_UNIT_TEST macro inserts a semi-colon at the end.

        * tests/cuts/Time_Metric_Test.cpp:

          Removed the semi-colons from the end of the CUTS_ADD_UNIT_TEST
          macro usage.

        * tests/cuts/Time_Measurement_Test.h:
        * tests/cuts/Time_Measurement_Test.cpp:
        * tests/cuts/test.mpc:

          Created unit tests for the CUTS_Time_Measurement object.

Sat May 20 17:39:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Time_Metric.h:

          Finish documenting the members of the class.

        * tests/Test.h:
        * tests/Test_Macros.h:

          Moved the macro language for defining test and unit test
          to its own file.

        * tests/cuts/Time_Metric_Test.h:
        * tests/cuts/Time_Metric_Test.cpp:

          Finished writing the unit test for the CUTS_Test_Metric object.

        * tests/test.mpc:

          Added Test_Macros.h to the project.

Fri May 19 21:19:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_test_base.mpb:

          Changed the install location of $(CUTS_ROOT)/tests/bin

        * tests/Test.h:
        * tests/Test.cpp:
        * tests/Unit_Test.h:
        * tests/Unit_Test.cpp:

          Fixed a bug with the message () method.

        * tests/cuts/Time_Metric_Test.h:
        * tests/cuts/Time_Metric_Test.cpp:
        * tests/cuts/test.mpc:

          Created unit test set/get methods of CUTS_Time_Metric.

Fri May 19 17:40:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/Test_Client.cpp:

          Fixed segmentation fault client program when shutting down.

Fri May 19 16:56:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:
        * cuts/CUTS_Worker.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/Message_Handler.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/utils/CUTS_Utils.mpc:
        * etc/config/cuts_base.mpb:
        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_servant_dnc.mpb:
        * etc/config/cuts_test_base.mpb:
        * etc/config/cutsexe.mpb:
        * etc/config/cutslib.mpb:
        * etc/config/cutsutils.mpb:
        * utils/BDC_Client/BDC_Client.mpc:

          Refactored the projects (and base projects) so the test projects
          could use them as well.

        * tests/CUTS_Test_export.h:
        * tests/Test.h:
        * tests/Test.cpp:
        * tests/Test_Client.cpp:
        * tests/Unit_Test.h:
        * tests/Unit_Test.cpp:
        * tests/test.mpc:
        * tests/test.mwc:

          Initialize checkin of the testing framework.

Thu May 18 17:30:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Port_Measurement_Pool.h:

          Fixed case-sensitivity problems with include files.

Thu May 18 14:44:04 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent_i.cpp:

          Moved the Benchmark_Data packaging operations to IDL_Streams

        * cuts/CUTS.mpc:
        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:

          Added insertion operators for packaging the Benchmark_Data

        * cuts/Port_Measurement_Pool.cpp
        * cuts/Port_Measurement_Pool.h
        * cuts/Port_Measurement_Pool.inl

          Pool of port measurements that are built from a circular
          double linked list to simply moving between collection
          pools.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          The port measurement collection pool now uses the
          CUTS_Port_Measurement_Pool.

Mon May 15 20:08:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/Activation_Record_T.inl:
        * cuts/Activation_Record_T.cpp:
        * cuts/CUTS.mpc:

          - Move the template methods to a seperate file.
          - Added the template file to the project.

Mon May 15 19:18:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          The CodeGenerationKit library was using the old method for
          linking it into the project.

Mon May 15 18:16:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Create a new MPC workspace that builds only the CoSMIC extensions
          of CUTS.

        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Sender_Metrics.ascx:

          Fixed run-time errors.

Thu May 11 22:29:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          The interpreter was not generating the line of code
          to include the activation records header file.

Thu May 11 01:37:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:

          - Removed the setter method for the timeout, it's not placed
            on the activate method.
          - Implemented a reactivate method.

        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          The interpreter now generates facet operations that return
          a NIL value.

Wed May 10 18:47:50 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:

          Refactored code.

        * cuts/Benchmark_Agent.cpp:
        * cuts/Benchmark_Agent_i.cpp:

          Updated documentation.

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.cpp:

          Added a new action that will publish a preallocated event.

        * cuts/CUTS.idl:

          Create a Component_Registration structure.

        * cuts/CUTS.mpc:

          Updated the files to the CUTS project.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          - The upcall new passes the event w/ the activation record.
          - The event handler now contains embeds a port agent.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          Removed the UUID from the port agent.

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          - Removed the port agent declarations.
          - The event handler callbacks now take the event type.

Wed May 10 01:39:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

          Removed unused arguments.

        * cuts/utils/UUID.cpp:

          Removed the to_string implementation.

Wed May 10 01:07:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/MyODBC_Connection.cpp:

          Fixed incorrect usage of std::ostringstream object.

Wed May 10 00:52:28 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Added/removed debug messages.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          The event handler class is now parameterized with the event
          type of its port.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          Added a new source file to the project.

        * cuts/be/CIAO/File_Config_Cache.h:
        * cuts/be/CIAO/File_Config_Cache.cpp:

          Map that is use to cache file configuration data so we
          do not have to visit the model more than once.

        * cuts/be/CIAO/File_Config_Visitor.h:

          Added the file config map to the class, but have not
          added code to use it.

        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/UUID.cpp:

          Changed all instances std::ostrstream to std::ostringstring since
          std::ostrstream is deprecated.

        * etc/config/gme_component.mpb:
        * etc/config/gme_interpreter.mpb:

          Changes the default configurations for the project to include
          and exclude project specific files.

Fri May  5 16:54:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

        Fixed bug in interpreter that was causing it to generete
        invalid conditional paths of execution.

Fri May  5 06:19:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/Predefined_Type_Map.h:
        * cuts/be/CIAO/Predefined_Type_Map.cpp:

          Mapping from PICML elements to C++ types.

        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          - Added support for state variables.
          - Added support for conditional workflows.

Wed May  3 17:13:07 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/build.html:

          Documenation for building CUTS.

Wed May  3 14:09:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/gme_base.mpb:

          Derived base project from the mfc and regsvr32 base projects. The
          regsvr32 base project performs auto registration of GME components.

        * etc/config/gme_bon2.mpb:

          Removed the mfc base project.

        * etc/config/regsvr32.mpb

          Base project that runs regsvr32 on the output file of the parent
          project.

Tue May  2 23:22:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * default.features:

          Updated the requirements/features specification.

Tue May  2 23:08:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * default.features:

          - Removed the gme_lib feature.
          - Documented this file.

        * etc/config/gme_base.mpb:
        * etc/config/gme_bon2.mpb:
        * etc/config/udm_component.mpb:

          Updated the requirements/features for the base projects
          to correspond with those present in default.features.

Tue May  2 02:37:59 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/CUTS.xme:

          Moved file to a new location.

        * cuts/CUTS.xme:

          Removed this file.

Mon May  1 19:06:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:

          Added missing inline include files.

Sun Apr 30 22:17:05 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/DatabaseWorker.cpp:

          - Added missing include file.
          - Removed unused variables.

        * cuts/utils/ODBC_Connection.cpp:

          Removed unnecessary header file.

Sun Apr 30 22:07:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/MyODBC_Connection.cpp:

          Added missing include files.

Sun Apr 30 21:59:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC.h:

          Removed unnecessary header files.

Sun Apr 30 16:59:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action_T.h:
        * cuts/Action_T.inl:

          Oops, I placed the counter () method on the wrong class.

        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/Worker.cpp:

          Great, the counter () method is on the correct class!!

        * cuts/CPUWorker.h:
        * cuts/CPUWorker.inl:
        * cuts/CPUWorker.cpp:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.inl:

          Implemented the counter () method for each of the above
          classes.

Sun Apr 30 15:37:02 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action_T.h:
        * cuts/Action_T.inl:

          Added counter () virtual method to the Action_T class. This
          method is used to return worker specific integer information
          about the workers performance. For example, the memory worker
          would return the # bytes of memory allocated, or the database
          worker would return the database transactions.

Sun Apr 30 14:49:11 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          The Windows platform(s) now build the PICML and CodeGenerationKit
          project by default.

        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:

          Updated the project dependencies.

Sun Apr 30 00:53:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Action_T.h:

          Added the 'const' signature to the end of the execute () method.

        * cuts/ActivationRecord.h:

          The non-repetitive perform_action () method was using
          the 'repeitions' variable instead of 1 for logging purposes.

        * cuts/EventHandler_T.cpp:

          - Changed to ordering of the member initialization section of
            the copy constructor to remove compiler warning.

        * cuts/Time_Metric.cpp:

          Remove compiler warning for unused arguments.

Fri Apr 28 02:55:26 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Event_Guard.h:
        * cuts/Event_Guard.cpp:
        * cuts/Event_Guard_T.h:

          Cleaned up the files.

        * cuts/be/CIAO/File_Config_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Implemented visit operations for CompositeAction.

Tue Apr 25 06:02:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:
        * cuts/Event_Guard.h:
        * cuts/Event_Guard.inl:
        * cuts/Event_Guard.cpp:
        * cuts/Event_Guard_T.h:
        * cuts/Event_Guard_T.cpp:

          Renamed the files below.

        * cuts/EventGuard.h:
        * cuts/EventGuard.inl:
        * cuts/EventGuard.cpp:
        * cuts/EventGuard_T.h:
        * cuts/EventGuard_T.cpp:

          Removed these files.

Tue Apr 25 05:49:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker_T.h:
        * cuts/Action_T.h:
        * cuts/Action_T.inl:
        * cuts/Action_T.cpp:

          - Moved the action class from Worker_T.h to Action_T.*
          - The base action class now defines the worker parent
            reference it is member variables.
          - The base action class now defines a pure virtual method
            named execute () which must be defined by all workers
            and is used in the activation records template methods.

        * cuts/ActivationRecord.h:

          Changed the implementation of the template methods from
          the functor operator to execute ().

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

          Refactored the decrement count code into a single reusable
          method.

        * cuts/BDC/Benchmark_Data_Collector.idl:

          The BDC now publishes an event with the data collection from
          all components is complete.

        * cuts/CPUWorker.h:
        * cuts/DatabaseWorker.h:
        * cuts/MemoryWorker.h:

          - Changed the functor method to execute ().
          - Remove the worker reference since it's contained in the base
            class.

        * cuts/Events.idl:

          Contains the collection done event published by the BDC.

        * cuts/CUTS.mpc:

          Added the Action_T.* and Events.idl files to the appropriate
          projects.

Sat Apr 22 21:19:30 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:

          Updated the PICML model for CUTS w/ the lastest version of PICML.

Sat Apr 22 00:30:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/IDL_Streams.h:
        * cuts/IDL_Streams.cpp:

          Moved the IDL extraction operators for the Benchmark_Data
          type to IDL_Streams.{h,cpp}

        * cuts/CUTS.mpc:

          Added the IDL_Streams.cpp file to the CUTS_svnt project.

Fri Apr 21 23:11:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Removed the workers from the CUT project.

        * cuts/CUTS_Worker.mpc:

          Removed the require statements from each of the workers.

        * cuts/DatabaseWorker.cpp:

          Added catch all exception blocks to code.

        * cuts/be/CIAO/File_Config_Visitor.h:
        * cuts/be/CIAO/File_Config_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

        * cuts/svcs/dbase/DBase_Service.cpp:

          Removed commented out code since its no longer needed becuase of the
          ACE_Date_Time change below.

        * default.features:

          Removed the worker features, e.g, cuts_database, cuts_memory, cuts_cpu

        * etc/config/odbc.mpb:

          Changed the lib specification to lit_libs

        * utils/BMW/Critical_Path_Timeline.aspx.cs:

          Added support to graphing the deadline on the critical path chart.

Thu Apr 20 05:03:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/svcs/dbase/DBase_Service.cpp:

          - The conversion of a ACE_Time_Value to an SQL_TIMESTAMP_STRUCT
            now uses an ACE_Date_Time object.
          - Getting the current date/time and storing it in a
            SQL_TIMESTAMP_STRUCT now uses a ACE_Date_Time object.

Thu Apr 20 03:39:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Removed the CUTS_Streams.h from the project.

Thu Apr 20 03:22:40 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.cpp:

          Fixed compile issues with incomplete exception handling
          lists on method declarations.

Thu Apr 20 02:17:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/gme_component.mpb:

          Removed the GMEBON library requirement.

Wed Apr 19 09:25:26 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master.cs:
        * utils/BMW/images/delete.gif:

          Missing files.

Wed Apr 19 09:22:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/RawComponent.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/RawComponent.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmApp.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/UdmConfig.h:

          Interpreter specific files which I forgot to checkin.

        * etc/config/gme_component.mpb:

          - Updated the midl flags.
          - Updated the ComponentLib.idl file location.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.inl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.cpp:

          Removed these files.

Wed Apr 19 09:02:50 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Removed test directory from default build.

        * cuts/BDC/BDC_Task.cpp:

          Fixed debug message diplaying the number of components remaining.

        * cuts/CCM_CoWorkEr_T.cpp:

          Commented out the RTCORBA initialization code.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:
        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:

          Moved all initialization from the constructor to seperate
          methods. This prevents the interpreter from having to generate
          code for the member initialization section of the constructor.

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/be/CIAO/File_Config.h:
        * cuts/be/CIAO/File_Config_Visitor.h:
        * cuts/be/CIAO/File_Config_Visitor.cpp:
        * cuts/be/CIAO/UDM_CIAO_Export.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.h:
        * cuts/be/CIAO/UDM_CIAO_Visitor.mpc:
        * cuts/be/CIAO/UDM_CIAO_Visitor.cpp:

          Converted the interpreter from BON to UDM.

        * etc/config/gme_raw.mpb:

          Updated its base project.

        * etc/config/picml_udm.mpb:
        * etc/config/udm_component.mpb:

          Created a base project for UDM components in PICML.

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:

          Regenerated the sources/project files with the new UDM interpeter.

        * cuts/GME/BON/ComponentConfig.h:
        * cuts/GME/BON/ComponentLib.idl:
        * cuts/GME/BON/GMEBON.mpc:
        * cuts/GME/BON/Message_Handler.h:
        * cuts/GME/BON/Message_Handler.cpp:
        * cuts/GME/BON/StdAfx.h:
        * cuts/GME/BON/StdAfx.cpp:

        * cuts/be/CIAO/BE_CIAO_export.h:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/Exec_Project.h:
        * cuts/be/CIAO/Exec_Project.cpp:
        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/MPC_Visitor.h:
        * cuts/be/CIAO/MPC_Visitor.cpp:
        * cuts/be/CIAO/MWC_Visitor.h:
        * cuts/be/CIAO/MWC_Visitor.cpp:
        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.h:
        * cuts/be/CIAO/Stub_Project.cpp:
        * cuts/be/CIAO/Svnt_Project.h:
        * cuts/be/CIAO/Svnt_Project.cpp:

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBON.mpc:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:
        * cuts/fe/PICML/StdAfx.h:
        * cuts/fe/PICML/StdAfx.cpp:

        * cuts/pir/Action_Property.h:
        * cuts/pir/Action_Property.inl:
        * cuts/pir/Action_Property.cpp:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/ComponentHome.cpp:
        * cuts/pir/Data_Type.h:
        * cuts/pir/Data_Type.inl:
        * cuts/pir/Data_Type.cpp:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/Event.inl:
        * cuts/pir/Event.cpp:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventManager.inl:
        * cuts/pir/EventManager.cpp:
        * cuts/pir/EventSink.h:
        * cuts/pir/EventSink.inl:
        * cuts/pir/EventSink.cpp:
        * cuts/pir/Event_Source.h:
        * cuts/pir/Event_Source.inl:
        * cuts/pir/Event_Source.cpp:
        * cuts/pir/Facet.h:
        * cuts/pir/Facet.cpp:
        * cuts/pir/File.h:
        * cuts/pir/File.inl:
        * cuts/pir/File.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/Module_Element.h:
        * cuts/pir/Module_Element.inl:
        * cuts/pir/Module_Element.cpp:
        * cuts/pir/Object.h:
        * cuts/pir/Object.cpp:
        * cuts/pir/Output_Action.h:
        * cuts/pir/Output_Action.inl:
        * cuts/pir/Output_Action.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/PIR_export.h:
        * cuts/pir/Periodic_Action.h:
        * cuts/pir/Periodic_Action.inl:
        * cuts/pir/Periodic_Action.cpp:
        * cuts/pir/Port.h:
        * cuts/pir/Port.inl:
        * cuts/pir/Port.cpp:
        * cuts/pir/Project.h:
        * cuts/pir/Project.inl:
        * cuts/pir/Project.cpp:
        * cuts/pir/Reference_Element.h:
        * cuts/pir/Reference_Element.inl:
        * cuts/pir/Reference_Element.cpp:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Visitor.cpp:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker.cpp:
        * cuts/pir/Worker_Action.h:
        * cuts/pir/Worker_Action.inl:
        * cuts/pir/Worker_Action.cpp:
        * cuts/pir/Worker_Manager.h:
        * cuts/pir/Worker_Manager.cpp:
        * cuts/pir/Worker_Type.h:
        * cuts/pir/Worker_Type.cpp:

          Removed these files.

Thu Apr 13 14:26:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Removed the performance-test directory from the default
          build.

        * cuts/BDC/BDC_Task.cpp:

          Fixed bug that resulted from trying to collect metrics
          if there were no component registered. It would hang
          and not return since loopback would occur in the counting.

        * cuts/BDC/Benchmark_Data_Collector.mpc:

          Cleaned up the project file.

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:

          Added support for resolving the RTORB from the ORB in the
          container of the component. If the RTORB fails to resolve
          then we fail back to regular registration of the
          Benchmark_Agent.

        * cuts/CUTS.mpc:

          Updated the dependencies and derived the CCM projects
          from the rt_server base project.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:

          The queue is flushed at deactivation time.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.inl:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:
        * cuts/System_Metric.h:
        * cuts/System_Metric.inl:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.inl:

          Placed timestamps on all the metric containers. This will help
          verify which metrics are up-to-date.

        * cuts/XML_System_Metrics_Visitor.h:
        * cuts/XML_System_Metrics_Visitor.cpp:

          The XML dump will not generate metrics from the cache if they
          are not up-to-date with the current system metrics timestamp.

        * cuts/svcs/dbase/DBase_Service.cpp:

          - The timestamp generated for the database is derived from
            ACE_Time_Value object.
          - The timestamp use for the 'execution_time' table is taken
            from the timestamp in the metrics cache.

        * etc/config/cuts_coworker_exec.mpb:

          The project has the rt_server as its parent project.

        * utils/BDC_Client/BDC_Client.cpp:
        * utils/BDC_Client/BDC_Client.mpc:

          Simple utility program that request the BDC to collect metrics
          every 10 seconds. This client program will be the basis of the
          client program for interacting with the BDC.

        * utils/BMW/BMW.master:

          Removed the Node_Manager_Service link from the left hand panel.

        * utils/BMW/Critical_Path_Timeline.aspx:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:

          Removed the "Return" link.

        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Sender_Metrics.ascx.cs:

          Fixed bug that would cause an exception is a NULL value was
          located in the database.

        * utils/BMW/Timeline.aspx.cs:

          Fixed bug in the "Return" link.

        * utils/BMW/Web.config:
        * utils/BMW/default.aspx:
        * utils/BMW/default.aspx.cs:

          Added the ability to delete test.

Tue Apr 11 12:31:01 2006  Gan Deng  <gan.deng@vanderbilt.edu>

  * cuts/EventHandler_T.cpp

    Commented out the "wait" task for demo purposes.

Fri Apr  7 19:05:21 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Removed the BDC from the default workspace build. Since it's a
          web application, it does not need to be built.

        * cuts/BDC/CCM_Component_Registry.cpp:

          Remove message print the number of registered components since
          its shows how many components have been registered and not oow
          many components are registered at the current time.

        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Testing_Service_exec_i.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:

          Fixed bug that was caused by using _non_existent () method to determine
          if a component was still alive. Now, the components unregister themselves
          at ccm_passivate.

        * etc/config/cuts_base.mpb:
        * utils/System_Monitor/System_Monitor.mpc:

          Defined CIAO_NDEBUG to handle the variatric paramaters in macros,
          which are not allowed.

Fri Apr  7 15:46:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Global.asax:
        * utils/BMW/Global.asax.cs:
        * utils/BMW/Global.asax.resx:

          Removed these files.

Fri Apr  7 00:15:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.master:
        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Critical_Path_Timeline.aspx:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Header.aspx:
        * utils/BMW/Header.aspx.cs:
        * utils/BMW/Menu.aspx:
        * utils/BMW/Menu.aspx.cs:
        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Sender_Metrics.ascx.cs:
        * utils/BMW/Style.css:
        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:
        * utils/BMW/Web.config:
        * utils/BMW/default.aspx:
        * utils/BMW/default.aspx.cs:
        * utils/BMW/default.aspx.resx:

          Converted the entire BMW to ASP.NET 2.0

        * utils/BMW/Test.aspx:
        * utils/BMW/Test.aspx.cs:
        * utils/BMW/Test.aspx.resx:

          Removed these files.

Thu Apr  6 18:34:23 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.cpp:

          The exit point time is now derived from the action corresponding
          to the exit point. This removes the extra gettimeofday () method
          invocation and will give us more accurate measurement of time.

        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:

          The process () method on the database worker only needs a single
          parameter to specifiy how many queries it should execute. This is
          temporary until we complete the SLICE experiments.

        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/pir/Action_Property.h:
        * cuts/pir/Action_Property.inl:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Data_Type.h:
        * cuts/pir/Data_Type.cpp:
        * cuts/pir/Data_Type.inl:

          The interpreter now supports string data types in worker actions.

Wed Apr  5 16:24:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/EventHandler_T.cpp:

          Updated the event handler discard the flight time of the event
          and use the queuing time when calculating transit time.

Wed Apr  5 15:11:11 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Added the database worker to the Windows build.

        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.cpp:

          Implemented the database worker to resemble the CUTS one version
          until we finish the SLICE scenario.

        * cuts/EventHandler_T.cpp:
        * cuts/Event_Handler_Message.cpp:

          Inserted a debug statement to print out the arrival and transit
          time on receiving an event.

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/pir/Action_Property.h:
        * cuts/pir/Action_Property.inl:
        * cuts/pir/Action_Property.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:

          The interpreter is in mid-state and broken right now. Extending
          it's implementation and had to make an checkin another change.

Tue Apr  4 21:30:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/CUTS.idl:

          Implemented a flags on the bind_to_path () method to specify
          which type of measurements to sum in the path. The flags are
          BPF_PROCESS, BPF_TRANSIT, BPF_BOTH.

        * utils/System_Monitor/System_Monitor_exec_i.cpp:

          Updated the monitor program to bind using BPF_BOTH.

Tue Apr  4 19:37:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/EventHandler_T.cpp:

          Inserted code fragment that will print out an error message
          of the transit time is negative!!

Tue Apr  4 17:28:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:

          The control handle uses a pointer instead of a reference to the
          BDC task it is controlling.

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.h:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:

          Reimplemented the BDC_Task_Ex as a subclass of the BDC_Task.

        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

          The Benchmark_Data_Collector_Impl contains a pointer to the
          BDC_Task implementation, which is set appropriately, e.g.,
          BDC_Task or BDC_Task_Ex, depending on the implemenation of the
          BDC being used.

        * cuts/BDC/CCM_Component_Registry.h:

          Changed the return value of handle_agent () to int.

Tue Apr  4 00:04:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Four_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Three_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Generated the test w/ 4 active ports, which generated the deployment plans for
          all tests.

Mon Apr  3 22:46:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Four_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Three_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Created a test with four active ports.

Mon Apr  3 18:38:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Three_Port_Test.cdp:

          Deployment plan for the three port test.

Mon Apr  3 18:26:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Three_Port_CoWorkEr.mpc:

          Files that I forgot to checking with respect to the ChangeLog entry
          below.

Mon Apr  3 18:23:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Created a new test with three active ports and no workloads.

Mon Apr  3 16:19:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Fixed a bug in the model that was causing an event of size MAX_INT to be generated,
          which is not possible in CUTS.

Mon Apr  3 14:59:26 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:

        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/node_map.dat:

          Regenerated the source files for the project.

Mon Apr  3 01:37:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Critical_Path_Timeline.aspx:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:

          Added navigation URL between the pages that link the execution
          time graphs to the test.

Mon Apr  3 00:18:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-procs.sql:

          Insert more columns into the table returned by
          select_path_execution_times ().

        * utils/BMW/Critical_Path_Timeline.aspx:
        * utils/BMW/Critical_Path_Timeline.aspx.cs:
        * utils/BMW/Critical_Path_Timeline.aspx.resx:

          Created a page that will display the execution times of a
          given path for a test number.

Sat Apr  1 22:32:41 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CPUWorker.cpp:

          - Changed the number of CPU cycles to 20.
          - Changed the number rand () method to is_prime () since we
            found out that rand () has undetermined behavior on different
            platforms. - Thanks Nishanth and Krishnakumar.

Sat Apr  1 21:52:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Fixed bug that would cause the BMW project to be generated
          for non Visual Studio projects.

        * SQL/CUTS-create.sql:

          Granted EXECUTE permissions to user cuts.

        * SQL/CUTS-procs.sql:

          This file contains the procedures/functions for the
          cuts database.

        * utils/BMW/BMW.mpc:
        * utils/BMW/Critical_Path.aspx:
        * utils/BMW/Critical_Path.aspx.cs:
        * utils/BMW/Critical_Path.aspx.resx:

          Created a new page for constructing critical paths.

        * utils/BMW/Style.css:

          Fixed the styles for the headers.
        * utils/BMW/Timeline.aspx.cs:

          Converted the timeline to using MySQL Connector.

        * utils/BMW/Web.config:

          Create a configuration file for the MySQL connection
          string.

        * utils/BMW/images/edit.gif:

          Image to be diplayed as the edit icon in a table.

Fri Mar 31 01:00:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:

          Converted the Sender_Two_Port component to it's own type instead of a subtype.

Fri Mar 31 00:32:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Fixed bug caused by implementation artifacts having the same UUID. This
          resulted in the deployment failing.

Fri Mar 31 00:18:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Changes the size of the path_name.

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_Two_Port_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Two_Port_Test.cdp:

          Added a performance test for a single component with 2 ports active and no
          workload.

Thu Mar 30 02:43:25 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/Single_Event_Loop_Back.cdp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/descriptors/node_map.dat:

          Missing deployment plan and node mapping for the test.

Thu Mar 30 02:05:52 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Update the documentation.

        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.cidl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender.idl:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.h:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.mpc:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Sender_CoWorkEr.cpp:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back.xme:
        * performance-tests/Event_Handler/Single_Event_Loop_Back/Single_Event_Loop_Back_CUTS.mwc:

          Performance test to measure the number of events a component can
          receive in a self-controlled loop back.

        * utils/BMW/BMW.mpc:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Menu.aspx:

          Update the main menu to show the page with all the component instances. However,
          that page is still under construction.

Wed Mar 29 16:05:51 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          - Defined table that will contain critical path declarations
          - Defined table that will contain the elements in the critical
            paths

Wed Mar 29 14:33:06 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

        Added foreign keys to the cuts.execution_time table to preserve
        data integrity. Whenever an test is deleted from the main page
        it cleans all the data in the respective tables as well.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:

        Added queue_time () method to the activation record, but it is
        currently not used for anything.

        * cuts/CUTS.mpc:
        * cuts/Event_Handler_Message.cpp
        * cuts/Event_Handler_Message.h
        * cuts/Event_Handler_Message.inl

        Added an event handler object which will be responsible for
        managing the queuing and processing time for queued events.

        * cuts/svcs/dbase/DBase_Service.cpp:

        Fixed a bug that would insert invalid dates into the database.
        For example, the date 02/29/2006 would try to be inserted into
        the database, but the database would not allow it.

Tue Mar 28 06:49:27 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:

          Changed the connection object to a member of the class to
          reduce the number of parameters passed b/t class methods.

        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:

          Fixed the heading to diplay the time of the metrics being
          displayed.

        * utils/BMW/Header.aspx:

          Changed the font size and family.

        * utils/BMW/Test.aspx:

        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:

          Fixed the chart title display.

Tue Mar 28 05:10:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added system monitor project back to default workspace
          builds.

        * utils/BMW/BMW.mpc:

          Updated the workspace to include the new files.

        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Component_Metrics.ascx.resx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Sender_Metrics.ascx:
        * utils/BMW/Sender_Metrics.ascx.cs:
        * utils/BMW/Sender_Metrics.ascx.resx:

          Implemented a new controller for displaying the general execution
          times for the components.

Mon Mar 27 21:13:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/BMW.mwc:

          Update workspace to use csharp as the default language regardless
          of the language choice.

Mon Mar 27 21:09:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Updated workspace to include BWC project as a csharp project.

        * cuts/svcs/dbase/DBase_Service.mpc:

          Fixed project dependencies.

        * utils/BMW/BMW.mpc:
        * default.features:

          Added webchart requirement.

Mon Mar 27 20:19:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

          Implemented support for reseting the registration of a
          component instance if the agent is _non_existent (), e.g.,
          the instance no longer exist.

        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Added a new method that resets the a component registration
          in the CCM component registry of the testing service.

Mon Mar 27 19:05:09 GMT 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * cuts/Component_Registry.cpp
        * cuts/Message_Handler.inl
        * cuts/System_Metrics_Visitor.inl
        * cuts/BDC/BDC_Task.cpp
        * utils/System_Monitor/System_Monitor_exec_i.cpp

          Fix unused argument warnings.

Mon Mar 27 18:58:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

        - Updated the doxygen documentation for this class.
        - Added a CORBA::TRANSIENT catch block around the code that
          collects the performance metrics, which needs implementation
          that will NIL the agent for the component.

Mon Mar 27 18:18:59 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:

        - Updated the handle_agent () method to pass the instance name
          relating to the agent to the callback method.

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

        - The handle agent method now displays the instance name of the
          component if it is not connected to the testing service but in
          a path of interest.

        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:

        Updated the timeline so that it displays metrics corresponding
        to the in port and out port, if applicable.

Mon Mar 27 15:19:16 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Metrics.ascx:

        Updated the Component_Metrics display to show the number of "events"
        collected for the performance metrics.

Mon Mar 27 13:58:48 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Execution_Times.aspx.cs:

        Fixed bug that was creating duplicate controls by moving to
        code from Page_Load (...) to OnInit (...)

Mon Mar 27 07:43:33 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Metrics.ascx:

        Updated the style of the tables for the component metrics.

Mon Mar 27 07:31:46 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:

        Updated the execution time page to use a user defined control
        that helps simplify the presentation of the metrics. There
        is a bug that causes the information to be displayed twice.

Mon Mar 27 00:35:45 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/config.h:

        Removed the BDC thread configuration macro since its now
        an attribute on the BDC.

        * cuts/utils/ODBC_Exception.h:
        * cuts/utils/ODBC_Exception.inl:
        * cuts/utils/ODBC_Exception.cpp:

        Implemented exception handling classes for the ODBC
        connection and statement objects.

        * cuts/DatabaseWorker.cpp:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC.h:
        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:

        Modified classes to use exception handling classes
        for the ODBC connection and statement objects.

Sun Mar 26 05:17:08 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:

        - Added support for the new attributes exposed by the BDC.
        - Moved the atomic decrement operation in the handle_input () method
          into the if condition.

        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:


        - Added the attribute 'collection_threads' which determins the
          number of threads that are used to collect performance metrics.
        - Added the attribute 'metrics_outfile' which specified the filename
          of the performance metrics output. This file is dumped in XML
          format.

        * cuts/XML_System_Metrics_Visitor.cpp:

        Changed the <PortMetrics> tag to <Port>.

Sun Mar 26 02:18:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        The cache dump is now in readable XML format.

        * cuts/CUTS.mpc:

        Added the visitor source files for the system metrics and
        the XML cache dump.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.cpp:
        * cuts/Component_Registry.h:
        * cuts/Component_Registry.cpp:

        * cuts/GME/BON/ComponentConfig.h:
        * cuts/GME/BON/GMEBON.mpc:

        Removed the wired location of GME.

        * cuts/Port_Metric.h:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.cpp:
        * cuts/System_Metrics_Visitor.h:
        * cuts/System_Metrics_Visitor.inl:
        * cuts/System_Metrics_Visitor.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.cpp:
        * cuts/XML_System_Metrics_Visitor.h:
        * cuts/XML_System_Metrics_Visitor.inl:
        * cuts/XML_System_Metrics_Visitor.cpp:

        Implemented the visitor pattern for the metrics.

        * cuts/svcs/dbase/DBase_Service_export.h:
        * utils/System_Monitor/System_Monitor.xme:

        Files that were missing from the build.

Sat Mar 25 20:53:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.cpp:

        Updated the implemenation to handle the new performance
        structure and calculate the max and min number of events.

        * cuts/CUTS.idl:

        The execution_time () method returns the new performance
        structure w/ the number of events.

        * cuts/performance.idl:

        Added a new performance structure to return the number max
        and min number of events seen and handled by a CoWorkEr.

        * utils/System_Monitor/System_Monitor_exec_i.cpp:

        Updated the implemenation to handle the new execution_time ()
        structure.

Sat Mar 25 15:40:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Component_Metrics.ascx:
        * utils/BMW/Component_Metrics.ascx.cs:
        * utils/BMW/Component_Metrics.ascx.resx:

        Initial implementation of the web control that will be used
        to display the component metrics.

        * utils/BMW/Database_Utility.cs:

        Refactored the code to use DataReaders when accessing the
        database to retrieve scalar information.

        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Test.aspx:
        * utils/BMW/Test.aspx.cs:

        Refactored the code to use the connection string located
        in the configuration file.

        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:

        - Modified the presentation of the graph that displays the
          execution times.
        - Refactored the code.

        * utils/BMW/Web.config:

        File the contains the global configurations for the web
        application. It contains the default connection string.

Fri Mar 24 01:07:29 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:

        Linked the execution time to the their respective timelines using
        the "Timeline" column.

        * utils/BMW/Test.aspx:
        * utils/BMW/Test.aspx.cs:

        The status column now shows an image that represents its
        text value.

        * utils/BMW/Timeline.aspx:
        * utils/BMW/Timeline.aspx.cs:
        * utils/BMW/Timeline.aspx.resx:

        Implemented bare minimal support to show timeline of individual
        performance metrics.

        * utils/BMW/images/active.gif:
        * utils/BMW/images/active.vsd:
        * utils/BMW/images/inactive.gif:
        * utils/BMW/images/inactive.vsd:

        These files were originally the ones removed below. The names
        where changed to match their respective status.

        * utils/BMW/images/stoplight-green.gif:
        * utils/BMW/images/stoplight-green.vsd:
        * utils/BMW/images/stoplight-red.vsd:

          Removed these files.

Thu Mar 23 16:13:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

        Exclude the BMW from the default workspace since it's a
        ASP.NET application.

        * SQL/CUTS-create.sql:

        Added a procedure to select the lastest execution times
        given a test number.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

        Added support for associating instances ids with
        registration ids for a component.

        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.cpp:

        Implemented LAST_INSERT_ID() as a method on the
        statement.

        * utils/BMW/BMW.mpc:
        * utils/BMW/BMW.mwc:
        * utils/BMW/Component_Instances.aspx:
        * utils/BMW/Component_Instances.aspx.cs:
        * utils/BMW/Component_Instances.aspx.resx:
        * utils/BMW/Execution_Times.aspx:
        * utils/BMW/Execution_Times.aspx.cs:
        * utils/BMW/Execution_Times.aspx.resx:
        * utils/BMW/Global.asax:
        * utils/BMW/Global.asax.cs:
        * utils/BMW/Global.asax.resx:
        * utils/BMW/Header.aspx:
        * utils/BMW/Header.aspx.cs:
        * utils/BMW/Header.aspx.resx:
        * utils/BMW/Menu.aspx:
        * utils/BMW/Menu.aspx.cs:
        * utils/BMW/Menu.aspx.resx:
        * utils/BMW/Style.css:
        * utils/BMW/Test.aspx:
        * utils/BMW/Test.aspx.cs:
        * utils/BMW/Test.aspx.resx:
        * utils/BMW/default.aspx:
        * utils/BMW/default.aspx.cs:
        * utils/BMW/default.aspx.resx:
        * utils/BMW/images/graph.gif:
        * utils/BMW/images/stoplight-green.gif:
        * utils/BMW/images/stoplight-green.vsd:
        * utils/BMW/images/stoplight-red.gif:
        * utils/BMW/images/stoplight-red.vsd:
        * utils/BMW/images/table.gif:

        Initial checkin on the Benchmark Manager Web.

Sun Mar 19 00:12:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        The BDC task dumps the metrics to a temp file called "metrics.out"
        which is located in the same directory used to start the node
        daemon that hosts the BDC.

        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:

        Added more exception handling to the front-end part of the
        code generator that parses the PICML model.

        * tests/coworker/cpu/CPU_CUTS.mwc:
        * tests/coworker/cpu/Sender.cidl:
        * tests/coworker/cpu/Sender.idl:
        * tests/coworker/cpu/Sender_CoWorkEr.h:
        * tests/coworker/cpu/Sender_CoWorkEr.mpc:
        * tests/coworker/cpu/Sender_CoWorkEr.cpp:
        * tests/coworker/cpu/cpu.xme:
        * tests/coworker/cpu/descriptors/Sender.cdp:
        * tests/coworker/cpu/descriptors/node_map.dat:

        Added a simple test that tests the performance of a single
        CPU operation. This test can be modified to log the performance
        of any number of CPU operations. All metrics are dumped
        to the "metrics.out" file.

Fri Mar 17 20:13:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        The BDC task dumps the metrics to a temp file called "metrics.out"
        which is located in the same directory used to start the node
        daemon that hosts the BDC.

        * cuts/config.h:

        Changed the default thread count for the BDC to 1 for debugging
        purposes.

Fri Mar 17 17:27:35 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

        Added an output stream for dumping the cached metrics.

        * cuts/Benchmark_Agent_i.cpp:

        Collection time uses ACE_OS::gettimeofday ().msec () now
        when submitting data to the BDC.

        * cuts/EventHandler_T.cpp:

        Cleanup the code to make it easier debug.

Fri Mar 17 07:46:22 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        Modified some of the debug statements.

        * cuts/Component_Metric.cpp:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.cpp:

        - Placed the handling of the result for the insert operation
          inside the monitored code.
        - Verifyed the destructors were managing memory properly.

        * cuts/Time_Metric.h:
        * cuts/Time_Metric.cpp:

        Fixed the implementation of operator +. It would modify the
        left-hand sides value.

Fri Mar 17 06:31:44 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        Fixed a bug with the collection_done_ ACE_Event. Previously
        it was an ACE_Auto_Event, but changed to an ACE_Event. The
        constructor in the base member initialization section still
        had the settings for the ACE_Auto_Event, which was really
        making it act as an ACE_Manual_Event since manual_reset was
        set to 1.

Thu Mar 16 23:53:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Path_Measurement_exec_i.cpp:

        Added more debugging statements.

        * cuts/EventHandler_T.cpp:

        The flag for activating the event producers was
        not initialized properly.

        * utils/System_Monitor/System_Monitor_exec_i.cpp:

        Hard-coded the critical path for the SLICE scenario
        using the new naming convention.

Thu Mar 16 22:49:15 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Task.cpp:

        Commented out debug statements.

        * cuts/Benchmark_Agent_i.cpp:

        Commented out the debug statements because there are too many.

Thu Mar 16 09:45:49 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_test.pl:

        Added #! declaration to head of file.

        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/Benchmark_Agent_i.cpp:

        Fixed bug that was caused by requesting performance metrics
        for components in paths that are not connected to the BDC.
        This would result in a remote invocation on a nil reference
        and the callee would wait indefinitely.

Thu Mar 16 07:08:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:

        Removed the cuts_coworker_id () methods. Windows does not
        catch this error since the template code isn't used, but
        gcc catches the error.

Thu Mar 16 06:40:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:

        Removed the cuts_coworker_id () methods.

        * cuts/CCM_CoWorkEr_T.cpp:

        Fixed memory management issues when using _ciao_instance_id ().

        * cuts/CUTS_Worker.mpc:
        * cuts/Message_Handler.mpc:
        * cuts/svcs/dbase/DBase_Service.mpc:

        Fixed preprocessor definitions that were causing inconsistent
        link issues, e.g., added the CUTS_BUILD_DLL to the dynamicflags
        definition.

        * etc/config/cuts_dbasesvc.mpb:

        Removed the CUTS_Utils_DBase lib specification from the
        window builds since it's imported by other libraries linked
        by this projec.

        * etc/config/cutsutils.mpb:

        Removed the odbc parent project.

        * etc/config/odbc.mpb:

        Added the avoids statement for unixodbc on the Windows platforms.

Tue Mar 14 21:43:30 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/EventHandler_T.h:

        Removed the export marco from this class defintion. Template
        really don't need one since they cannot be compiled seperately
        like ordinary source files.

        * cuts/be/CIAO/File_Visitor.cpp:

        - Fixed a bug that generated the wrong export macro for the
          executor code.
        - Executor header file now includes cuts/CUTS_exec_export.h

Tue Mar 14 02:48:55 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/be/CIAO/BE_CIAO_export.h:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/Exec_Project.h:
        * cuts/be/CIAO/Exec_Project.cpp:
        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/MPC_Visitor.h:
        * cuts/be/CIAO/MPC_Visitor.cpp:
        * cuts/be/CIAO/MWC_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Stub_Project.h:
        * cuts/be/CIAO/Svnt_Project.h:
        * cuts/be/CIAO/Svnt_Project.cpp:

        Placed the CUTS_BE_CIAO under its own export file.

Tue Mar 14 02:33:53 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:

          Changed the dynamicflags setting

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:

        Stubbed out the implementation of cuts_coworker_id, which
        will be removed if the new _ciao_component_id () method provided
        by the context works.

        * cuts/CCM_CoWorkEr_T.cpp:

        The component now uses the _ciao_component_id () to name
        itself when registering with the BDC.

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

        Insert an active_ flag to hold the state of the event producer
        and not produce events if the producer is not active.

        * cuts/EventHandler_T.cpp:

        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:

          The periodic trigger is derived directly from the
          ACE_Task_Base class instead of the Trigger_T class.

        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/File_Visitor.cpp:

        Modified the methods so the generated code is cleaner.

        * cuts/pir/Action_Property.h:
        * cuts/pir/Component.h:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/Element.h:
        * cuts/pir/Event.h:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventSink.h:
        * cuts/pir/Event_Source.h:
        * cuts/pir/Facet.h:
        * cuts/pir/File.h:
        * cuts/pir/Method.h:
        * cuts/pir/Module.h:
        * cuts/pir/Module_Element.h:
        * cuts/pir/Object.h:
        * cuts/pir/Output_Action.h:
        * cuts/pir/PIR.mpc:
        * cuts/pir/PIR_export.h:
        * cuts/pir/Periodic_Action.h:
        * cuts/pir/Port.h:
        * cuts/pir/Project.h:
        * cuts/pir/Reference_Element.h:
        * cuts/pir/Visitor.h:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker_Action.h:
        * cuts/pir/Worker_Manager.h:
        * cuts/pir/Worker_Type.h:

          The CUTS_PIR project now has its own export macro file.

        * cuts/svcs/dbase/DBase_Service.mpc:

          Updated the dynamicflags definition

        * etc/config/cuts_base.mpb:

          Removed the CUTS_BUILD_DLL dynamicflag

        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/odbc.mpb:

          Place the CUTS_HAS_DATABASE into the dynamicflags and
          staticflags definition

Sun Mar 12 00:38:34 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

        - Removed the test_number column from the components table.
        - Changed the varchar size of components.component_name to 512
        - components.component_name is now a unique column.

Sat Mar 11 07:44:57 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

        - The execution_time.component column is now a integer.
        - The components column assign a test id to the components.

        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:

        Fixed bug that was causing waiting for the data collection
        to deadlock.

        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:

        The collection_done_ variable/event is now an auto
        reset event.

        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:

        The extender version now performs all allocations in
        the constuctor instead of creating the testing service
        on demand.

        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.inl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:

        Fixed bug that was caused by getting a reference to
        the Path_Measurement object without setting its
        Testing_Service first.

        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:

        All object creations are done in the constructor
        instead of on demand.

        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.cpp:

        The unbind_to_path now throws a ID_Not_Found exception.

        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.cpp:

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent_i.cpp:

        The changes I make to this file have been reverted.

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.cpp:

        The CoWorkErs now cache their human readable name/id,
        which is be provided by the context.

        * cuts/performance.idl:
        * cuts/CUTS.idl:

        Replaced all UUID_String types w/ unbounding string types.

        * cuts/System_Metric.h:
        * cuts/System_Metric.cpp:

        Components are now stored by the registration id instead
        of their component name.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

        Added support for using registration

        * utils/System_Monitor/System_Monitor_exec_i.h:
        * utils/System_Monitor/System_Monitor_exec_i.cpp:

        Fixed implementing a simple system monitor program that
        hard codes the SLICE critical path and observes it.

Fri Mar 10 19:30:59 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Impl.h:

        Changed "ace\pre.h" to "ace/pre.h"

        * cuts/BDC/CCM_Component_Registry.cpp:

        The header file <typeinfo> that defines the std::bad_cast was not
        included.

Fri Mar 10 04:37:43 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PROBLEM-REPORT-FORM:

          Added the problem report form to the project.

Fri Mar 10 04:21:24 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          - The components table now contains a test_number field.
          - The execution_time.sender is now a integer that is
            mapped from the components table.
          - The test.start_time and test.stop_time columns can have
            a NULL value.

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.cpp:

          I can't remember what I did in these files!!! :o(
          I really need to stop commit so many files at once!!

        * cuts/BDC/BDC_Task_Ex.h:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:

          Changed the export macro for the class.

        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:

          Finished implementing the state methods w/ respect to the
          database entry information.

        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.inl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:


        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:

        - This class now is a derived class of the Component_Registry
          class.
        - The nodes for this class are now derived from the
          CUTS_Component_Registry node.

        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Testing_Service_Ex_exec_i.h:
        * cuts/BDC/Testing_Service_Ex_exec_i.inl:
        * cuts/BDC/Testing_Service_Ex_exec_i.cpp:

          This class is the extended version of the Testing_Service_exec_i
          object. It provide database service to the testing service object.
          This is primarily used by the existed benchmark data collector.

        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:

          Refactored the code so that it can be used as a base class.

        * cuts/Component_Registry.h:
        * cuts/Component_Registry.inl:
        * cuts/Component_Registry.cpp:

          This is the base class for all component registration data regardless
          of the technology used.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:

          - Implemented the test creation and stop methods.
          - The metrics are now inserted into the database w/ respect to
            a test number.

        * cuts/BDC/Benchmark_Data_Collector_Impl_export.h:

          Removed this file.

Thu Mar  9 07:04:37 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          Changed the execution_time.sender field to an
          integer type.

        * cuts/GME/BON/GMEBON.mpc:
        * cuts/GME/BON/Message_Handler.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:
        * bin/cuts_test.pl:
        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:
        * CUTS.mwc:
        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:
        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.inl:
        * cuts/Benchmark_Agent_i.cpp:
        * cuts/CPUWorker.h:
        * cuts/performance.idl:
        * cuts/pir/File.inl:
        * cuts/pir/Module.inl:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Worker_Type.h:
        * cuts/Worker.h:
        * cuts/utils/UUID.inl:
        * cuts/utils/UUID.cpp:
        * default.features:
        * etc/config/cuts_base.mpb:
        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:
        * etc/config/cuts_dbasesvc.mpb:
        * etc/config/cutslib.mpb:
        * etc/config/cutsutils.mpb:
        * etc/config/gme_base.mpb:
        * etc/config/odbc.mpb:
        * cuts/CUTS.idl:
        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:
        * cuts/CUTS_Worker.mpc:
        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:
        * cuts/Message_Handler.inl:
        * cuts/Message_Handler.mpc:
        * cuts/Message_Handler.cpp:
        * cuts/PortAgent.cpp:

          Changes from the LM_MARCH_DEMO branch.

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.h:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:
        * cuts/BDC/Benchmark_Data_Collector.cidl:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex.cidl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.idl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.h:
        * cuts/BDC/Benchmark_Data_Collector_Impl.inl:
        * cuts/BDC/Benchmark_Data_Collector_Impl.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Impl_export.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_svnt_export.h:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.inl:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Implemented a local executor mapping of the base
          Benchmark_Data_Collector to be used extended version.

        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.inl:
        * cuts/DatabaseWorker.cpp:

          Changed all query method invocations to exec_direct.

        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:

          Removed some unnecessary debug statements.

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

          Insert exception handling around the publication
          methos.

        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.inl:
        * cuts/System_Metric.cpp:
        * cuts/Time.cpp:
        * cuts/Time_Metric.inl:
        * cuts/Time_Metric.cpp:
        * cuts/Trigger_T.cpp:
        * cuts/Component_Metric.h:
        * cuts/Component_Metric.inl:
        * cuts/Component_Metric.cpp:

          All metrics can accessed outside the class in
          read-only mode.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.mpc:
        * cuts/svcs/dbase/DBase_Service.cpp:

          Implemented the data entry of the performance metrics.

        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC.h:
        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:

          Implemented the execute (), exec_direct () and
          removed the query () method.

        * utils/System_Monitor/System_Monitor.cidl:
        * utils/System_Monitor/System_Monitor.idl:
        * utils/System_Monitor/System_Monitor.mpc:
        * utils/System_Monitor/System_Monitor_Task.h:
        * utils/System_Monitor/System_Monitor_Task.inl:
        * utils/System_Monitor/System_Monitor_Task.cpp:
        * utils/System_Monitor/System_Monitor_exec_export.h:
        * utils/System_Monitor/System_Monitor_exec_i.h:
        * utils/System_Monitor/System_Monitor_exec_i.cpp:
        * utils/System_Monitor/System_Monitor_stub_export.h:
        * utils/System_Monitor/System_Monitor_svnt_export.h:

          Initial implemenation of a simple system monitor
          progam to watch its performance.

Wed Mar  8 16:02:31 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * SQL/CUTS-create.sql:

          The default value for execution_time.dst is NULL now.

        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:

        * cuts/CUTS.mpc:
        * cuts/CUTS_Worker.mpc:

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.inl:
        * cuts/Component_Metric.cpp:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.inl:
        * cuts/System_Metric.cpp:

        - All metrics stored can be accessed outside their containing
          class in read-only format.
        - Locks on the classes can be accessed outside there containing
          class.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DBase_Service.mpc:

          Added support for writing performance metrics to the database
          but I have not tested it.

        * cuts/utils/CUTS_Utils.mpc:

          Created a seperate project for the database utilities.

        * etc/config/cuts_dbasesvc.mpb:

          Updated the project specification to link with the
          database utilities.

Wed Mar  8 01:04:20 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_test.pl:

          Added # to the beginning of the file. Without this declaration
          it would not run.

        * cuts/ActivationRecord.h:
        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.cpp:
        * cuts/CPUWorker.h:
        * cuts/DatabaseWorker.h:
        * cuts/EventHandler_T.cpp:
        * cuts/MemoryWorker.h:

          Fixed compilation issues dealing with passing temporary references
          as non-const members. Standard C++ specifies that temporary objects
          can only be passed as a const object. Windows on the otherhand
          allows the opposite!! Now all functions that represent worker
          actions have to be const and contain a mutable reference to a
          worker to be compliate with the C++ standard.

          Thanks Will for you help on this!!!!

        * cuts/utils/CUTS_Utils.mpc:

          Removed the odbc parent project because its causing to many
          problems.

        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:

          Fixed settings in the mpb files that defined the location of the
          shared objects. They were not consistent, placed in arbitrary
          locations and causing build errors.

Tue Mar  7 20:01:03 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Path_Measurement_exec_i.cpp:

          Fixed warning caused by not explicitly calling .in () on
          a TAO_String_Manager variable passed as a parameter.

        * default.features:

          Disabled the database features by default.

Tue Mar  7 18:04:00 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Removed statement to explicitly parse the cuts subdirectory.

        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          Fixed bug that would prevent a component from registering.

        * cuts/CCM_CoWorkEr_T.cpp:

          Removed the server_name from the CoWorkEr implementation.

        * cuts/CUTS.xme:

          - Moved the BDC to it's own IDL file.
          - Created a extended version of the BDC.

        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:

          Fixed bug that would prevent generation of project.

Fri Mar  3 21:40:14 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/Benchmark_Data_Collector_Ex.cidl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.idl:
        * cuts/BDC/Benchmark_Data_Collector_Ex.mpc:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_Ex_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_Ex_svnt_export.h:

          These files contain the extended benchmark data collector's
          implementation. The extended version has support for achiving
          the performance metrics.

        * cuts/BDC/BDC_Control_Handle_exec_i.h:
        * cuts/BDC/BDC_Control_Handle_exec_i.cpp:
        * cuts/BDC/BDC_Task.h:
        * cuts/BDC/BDC_Task.inl:
        * cuts/BDC/BDC_Task.cpp:
        * cuts/BDC/BDC_Task_Ex.h:
        * cuts/BDC/BDC_Task_Ex.inl:
        * cuts/BDC/BDC_Task_Ex.cpp:
        * cuts/BDC/Benchmark_Data_Collector.cidl:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_export.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/Benchmark_Data_Collector_stub_export.h:
        * cuts/BDC/Benchmark_Data_Collector_svnt_export.h:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/BDC/CCM_Component_Registry.cpp:
        * cuts/BDC/Path_Measurement_exec_i.h:
        * cuts/BDC/Path_Measurement_exec_i.inl:
        * cuts/BDC/Path_Measurement_exec_i.cpp:
        * cuts/BDC/Testing_Service_exec_i.h:
        * cuts/BDC/Testing_Service_exec_i.inl:
        * cuts/BDC/Testing_Service_exec_i.cpp:

          These files are the executor implementations for the facets
          provided by the benchmark data collector. The component has
          also been moved to its own IDL file. This helps with resolving
          dependencies between all the components.

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:

          Remove the support for specifying the location of the database.
          This connection is now an action of the database worker.

        * cuts/CUTS.idl:

          Moved the BDC to it's own IDL file. Please see above.

        * cuts/CUTS.mpc:
        * cuts/DatabaseWorker.cpp:

          Added support for connecting/disconnecting to/from the
          database as an action of the database worker.

        * cuts/config.h:

          - Changed the number of default threads in the BDC to three.
          - Fixed the issue with the TP_Reaction not shutting down
            when deactivated.

        * cuts/svcs/dbase/DBase_Service.h:
        * cuts/svcs/dbase/DBase_Service.cpp:
        * cuts/svcs/dbase/DBase_Service.mpc:

          Implemented a database service for doing database operations
          on the cuts database. This is used by the extended BDC.

        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_dbasesvc.mpb:
        * etc/config/cutsutils.mpb:
        * etc/config/odbc.mpb:

          Updated the feature and dependency declarations to coincide
          with the new implemenation of CUTS.

        * cuts/CUTS.cidl:
        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:
        * cuts/Path_Measurement_exec_i.h:
        * cuts/Path_Measurement_exec_i.inl:
        * cuts/Path_Measurement_exec_i.cpp:
        * cuts/Testing_Service_exec_i.h:
        * cuts/Testing_Service_exec_i.inl:
        * cuts/Testing_Service_exec_i.cpp:

          Removed these files.

Wed Mar  1 21:07:10 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Removed the stubbed out GME directories. These projects can
          be excluded by disable the feature in default.features, or
          using the -exclude command line option when invoking mwc.pl

        * SQL/CUTS-create.sql:

          - Script contains the commands to generates the test table
            that is used for registering a test.
          - Script contains the commands for creating the execution_time
            table, which is used for stroring the execution times of
            paths in each component for a test.

        * cuts/CUTS.mpc:

          Inserted conditional statements in the CUTS project to stub
          out the database source files on a non-Windows system. Once
          support is added for the database routines on a linux system
          the conditional statement will be moved and migrated to the
          default.features file.

        * cuts/CUTS.xme:

          Updated the GME model to reflect changes in CUTS.

        * cuts/CUTS_exec.cpp:

          I can't rememeber what I changed in this file. I should
          lessen the amount of code I check in at a time.

        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.inl:
        * cuts/DatabaseWorker.cpp:

          The database worker now only allocates one statement per
          connection.

        * cuts/GME/BON/GMEBON.mpc:

          Added the feature definition gmebon_lib to allow easy
          suppression of including this project.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

          Changed the event handler implementation to use the
          CUTS_Event_Handler abstraction.


        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:

          Added a lock to prevent the memory collection from becoming
          corrupted if multiple threads access it at the same time.

        * cuts/Testing_Service_exec_i.cpp:

        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/fe/PICML/PICMLBON.mpc:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:

          Updated the MPC file to reflect changes in the base projects
          and needed libraries.

        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:

          - Added more error handling code and output messages.
          - The generator now generates code to set the parent
            of each worker in the component.

        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.cpp:

          - Added more error handling code and output messages.

        * cuts/config.h:

          Updated the default database username and password.

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:

          - Added more error handling code and output messages.
          - Fixed bug that would cause ports to sometime not
            appear in the generated code. This was cause by incorrect
            usage of the <map> class.

        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC_Connection.cpp:

          Updated the data source for the database connections.

        * default.features:

          Updated the features file to allow suppression of various
          workers in the project.

        * docs/cuts.doxygen:

          Doxygen file for generating CUTS documentation.

        * etc/config/cutslib.mpb:

          Base project that includes the CUTS library and set the
          appropriate include directories.

        * etc/config/gme_base.mpb:

          Added a "requires" statement to the GMEBON project. This allows
          the developer to disable always building the GMEBON static library
          by disabiling this feature.

Tue Feb 28 03:51:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Benchmark_Agent.h:
        * cuts/Benchmark_Agent.inl:
        * cuts/Benchmark_Agent.cpp:

          Moved from BenchmarkAgent.*

        * cuts/Benchmark_Agent_i.h:

          Fixed include for Benchmark_Agent.h

        * cuts/CUTS.mpc:

          Fixed merge conflicts.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          Moved Path_Measurement and Testing_Service implementations to
          their own respective files.

        * cuts/Path_Measurement_exec_i.h:
        * cuts/Path_Measurement_exec_i.inl:
        * cuts/Path_Measurement_exec_i.cpp:

          Move the Path_Measurement implmenation to these files.

        * cuts/Testing_Service_exec_i.h:
        * cuts/Testing_Service_exec_i.inl:
        * cuts/Testing_Service_exec_i.cpp:

          Move the Testing_Service implmenation to these files.

        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.inl:
        * cuts/BenchmarkAgent.cpp:

          Removed these files.

Mon Feb 27 23:25:01 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:
        * cuts/utils/CUTS_Utils.mpc:

          Inserted conditional statements to prevent the database
          workers from being include in non-windows builds. This
          is only a temporary solution until I figure out how to
          handle the database worker.

        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.cpp:

          Updated the documentation for the class.

        * etc/config/cuts_coworker_svnt.mpb:

          Fixed some formatting.

Mon Feb 27 18:09:17 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Stubbed out BMW from default project generation until the
          BMW is successfully placed under MPC control.

        * cuts/utils/CUTS_Utils.mpc:

          The database utility project now uses the odbc base project.

        * cuts/utils/ODBC.h:

          Updated the documentation.

        * default.features:

          Default features file for CUTS. This file contains all the
          features that are possibile in CUTS. Setting/unsetting features
          disables various projects.

        * docs/cuts.doxygen:

          Doxygen configuration file for generating documentation.

        * etc/config/odbc.mpb:

          The base project now contains features projects for
          using different versions of ODBC.

Mon Feb 27 03:48:12 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/cuts_client_dnc.mpb:

          The project now includes the CUTS_stub library.

Mon Feb 27 03:33:42 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:

          When a exit point is reach, the time is taken before
          producing the event, but it is not logged until after
          control returns from producing the event.

        * cuts/CUTS.idl:

          Changed Path_Measurment to Path_Measurement

        * cuts/CUTS.mpc:

          Changed the base projects for CUTS_stub

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          - Fixed synchronization issue with requesting performance
            data multiple times.
          - Fixed bug in path registration. Registering a path
            did not give all the appropriate timing measurements.

        * cuts/EventHandler_T.cpp:

        * cuts/PortAgent.cpp:

        * cuts/be/CIAO/File_Visitor.cpp:

          - Output actions now use port names instead of UUIDs
            for the port when logging an output action (exit point)
            to the activation record.
          - Removed the exit point registration from the generated
            components.

        * cuts/config.h:

          Moved various macro definitions that define the default
          size of various data structures to config.h

Sun Feb 26 09:20:47 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          In the process of creating test directory. This is stubbed
          out until it's ready and checked into CVS.

        * bin/cuts_test.pl:

          There was a warning message resulting from trying to locate
          the WLG_ROOT environment variable. This line was removed.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:

          Added support of associating an owner with the record. This
          is necessary when constructing the path sequences.

        * cuts/Benchmark_Agent_i.h:
        * cuts/Benchmark_Agent_i.inl:
        * cuts/Benchmark_Agent_i.cpp:

          The benchmark agent is implemented as a CORBA 2.x object
          instead of a CCM object. This is because the benchmark
          is no longer provided by a CoWorkEr. Instead, a CoWorkEr
          used a Testing_Service object and registers itself with
          the Benchmark_Data_Collector and gives it a reference
          to its benchmark agent.

        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:

          CoWorkEr now register themselves with the Benchmark_Data_Collector
          and assign the registration ID to the Event_Producer. The registration
          ID is used because it's smaller in terms of bytes to a UUID when
          sending data over the wire.

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

          The event producer now can be assigned an ID/owner. This is used
          in the sender () field for a message.

        * cuts/CUTS.idl:

          Added the Testing_Service object to be provided by the
          Benchmark_Data_Collector.

        * cuts/CUTS.mpc:

        * cuts/CUTS.xme:

          Update the PICML model to reflect the changes in CUTS.idl.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          - Update the path implemenation to support selecting timings
            based on the sender to a port.
          - Updated the BDC implemenation to reflect the changes in CUTS.idl

        * cuts/Port_Metric.h:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.cpp:
        * cuts/Component_Metric.h:
        * cuts/Component_Metric.cpp:

          Added support for selecting timings based on a specific sender.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.cpp:

          Added support for extracting the sender of an event and
          assigning it to the activation record.

        * cuts/UUID.idl:

          IDL definitions for using UUIDs.

        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/Project_Visitor.h:

          - Updated the code generators to generate code for auto-registration
            with the BDC.
          - Updated the code generators to generate code for extracting
            the sender of the event in the appropriate locations.

        * cuts/performance.idl:

          Updated the performance structures to allow capturing of
          senders when packaging the data for submission to the BDC.

        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/UUID.h:
        * cuts/utils/UUID.inl:
        * cuts/utils/UUID.cpp:

          Implemented a version of UUID that's exactly 16 bytes, as opposed
          to the 64 bytes of the ACE_Utils::UUID.

        * cuts/BenchmarkAgent.idl:
        * cuts/CCM_BenchmarkAgent.h:
        * cuts/CCM_BenchmarkAgent.inl:
        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/CCM_BenchmarkAgent_T.h:
        * cuts/CCM_BenchmarkAgent_T.inl:
        * cuts/CCM_BenchmarkAgent_T.cpp:

          Removed these files.

Tue Feb 21 22:45:13 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Stumbed out the GMEBON project. Specifiying -excludes cuts/GME/BON
          at the command-line when invoking MPC does not work.

        * bin/cuts_test.pl:

          Script runs the specified test given by the -p flag for --time seconds.
          The script should be invoked from the location of the exection manager's
          IOR file.

        * cuts/CCM_BenchmarkAgent.cpp:

          Removed the debugging messages used to assist in locating the
          bug that was causing components to not exit ccm_passivate ().

        * cuts/CUTS.mpc:

          Updated the dependencies for the CUTS project. It should be
          built after the CUTS_Utils_DBase project.

        * cuts/CUTS_exec.cpp:

          Fixed bug that caused the BDC to throw an exception if it collected
          empty performance data from the CoWorkErs. The root of the cause was
          a divide by zero error when calculating the average time when no
          events have occured.

        * cuts/EventHandler_T.cpp:

          Fixed bug involving a component not exiting ccm_passivate. It was
          caused by having multiple threads in the event handler. The event
          handler now has only one thread. We may eventually allows the
          number of threads to be increased at runtime.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

        * cuts/PortAgent.cpp:

        * cuts/be/CIAO/Exec_Project.cpp:
        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/MWC_Visitor.cpp:
        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.cpp:
        * cuts/be/CIAO/Svnt_Project.cpp:

          Added output/debugging messages to the backend generators.

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBON.mpc:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:

          Added output/debugging messages to the backend generators.

        * cuts/pir/File.h:
        * cuts/pir/File.inl:
        * cuts/pir/File.cpp:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/Project.h:
        * cuts/pir/Project.cpp:
        * cuts/pir/Reference_Element.h:
        * cuts/pir/Reference_Element.inl:
        * cuts/pir/Worker_Type.h:
        * cuts/pir/Worker_Type.cpp:

          Fixed compilation issues.

Wed Feb 15 07:53:32 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:

          Change Entry collection to a list.

        * cuts/CUTS.mpc:

          Remove circular dependencies.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          Changed STL queue implementations to a STL vector for the
          path definitions.

        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.cpp:

          Changed the allocated memory collection from a queue to
          a list.

        * cuts/PortAgent.cpp:

          Fixed iteration with respect to the container change
          specified above.

        * cuts/Time.cpp:

          Changed #include "ace/OS_NS_Time.h" to #include "ace/OS_NS_time.h".
          This was not recognized because Windows' filenames are case
          insensitive.

        * cuts/Time_Metric.inl:
        * cuts/Worker.h:

          Added newlines to the ends of these files.

        * etc/config/cuts_base.mpb:

          Change the output location of non-windows shared libraries.

Tue Feb 14 21:11:39 UTC 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/CUTS.mpc:

          Tried to fix circular dependencies. Apparent, MWC is more
          sophisticated on non-windows systems.

        * cuts/config.h:

          Changed CUTS_Export.h to CUTS_export.h for case sensitive
          file systems.

        * cuts/pir/ComponentHome.h:

        * cuts/pir/PIR.mpc:

          Stubbed this project out on a non-windows system builds

        * cuts/pir/Worker_Type.h:

          Fixed the declaration of a the visitor in for the Worker_Type.

        * etc/config/cuts_base.mpb:

          Changed backslashes to forward slashes for directory
          specifications.

Tue Feb 14 03:15:35 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:

          Added GMEBON back to the regular build.

        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/EventHandler_T.inl:

          Optimized some of the code and tried to determine
          why shutdown is not always consistent.

        * cuts/CUTS.idl:

          Added exceptions to the Path_Measurement interface.

        * cuts/CUTS.mpc:

          Updated the project to reflect the new project files.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          Finished implemented the first CUTS of all the BDC facets.

        * cuts/GME/BON/GMEBON.mpc:
        * etc/config/gme_base.mpb:
        * etc/config/gme_component.mpb:

          Updated project file to reflect MIDL native support in MPC.

        * cuts/Component_Metric.h:
        * cuts/Component_Metric.inl:
        * cuts/Component_Metric.cpp:
        * cuts/Port_Metric.h:
        * cuts/Port_Metric.inl:
        * cuts/Port_Metric.cpp:
        * cuts/System_Metric.h:
        * cuts/System_Metric.inl:
        * cuts/System_Metric.cpp:
        * cuts/Time_Metric.h:
        * cuts/Time_Metric.inl:
        * cuts/Time_Metric.cpp:

          Data store for the component information.

        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.cpp:

          Fixed compilation error for the Release mode.

        * cuts/utils/CUTS_Utils.mpc:

          Moved the database utils to their own seperate projects
          so they cane be stubbed out as demmed necessary.

        * cuts/ComponentMetric.h:
        * cuts/ComponentMetric.inl:
        * cuts/ComponentMetric.cpp:
        * cuts/PortMetric.h:
        * cuts/PortMetric.inl:
        * cuts/PortMetric.cpp:
        * cuts/SystemMetric.h:
        * cuts/SystemMetric.inl:
        * cuts/SystemMetric.cpp:
        * cuts/TimeMetric.h:
        * cuts/TimeMetric.inl:
        * cuts/TimeMetric.cpp:

          Removed these files.

Sun Feb 12 09:39:30 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:

          PICML to CIAO CoWorkEr interpreter now allows users to
          select the output directory for the generated code. It
          was previous generating code in $TEMP for debugging
          purposes.

Sun Feb 12 02:26:03 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:

          Implemented a cached activation record class to be used
          with ACE_Free_List.

        * cuts/CUTS_exec.cpp:

          Remove some of the debugging messages. Still haven't solved
          the shutdown problem.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          Reimplemented the event queue holding the dispatch times
          using ACE_Unbounded_Queue and an external ACE_Thread_Mutex.
          The ACE_Message_Queue_Ex was too heavyweight for the job.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          Reimplemented the free list for the activation records
          using ACE_Free_List and the cached version of the
          activation records.

Fri Feb 10 18:36:40 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_manager.pl:
        * bin/cuts_node.pl:
        * bin/cuts_planner.pl:
        * bin/cuts_test.pl:

          - Helper scripts for launching the appropriate DAnCE executables.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:

          - Update the implemenation to allow inclusion of transient times.
          - Improve the implemenation to automatically calculate
            transient/process times at creation/closing
          - Change implementation to delay the setting of the activation
            time to as late as possible to negate instrumentation code

        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.inl:
        * cuts/BenchmarkAgent.cpp:

          Updated benchmark agent code to collect the transient time from
          each of the port agents as well.

        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Event_Handler_T.h:
        * cuts/CCM_Event_Handler_T.cpp:

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

          First implementation of the event producer for CoWorkErs since events
          are synchronous. Once asynchonous events are implemented, this class
          will probably be removed.

        * cuts/CCM_Events_T.h:

          Removed unnecessary macro definitions for creating/registering events.

        * cuts/CUTS.idl:

          - Updated the CoWorkEr component definition to use a string type for its
            ID.
          - Updated the path analysis IDL to specify paths by the CoWorkEr ID and the
            source and destination ports.

        * cuts/CUTS.mpc:

          Add the neccessary files to the project space.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          Update the benchmark data collector implementation to use an asynchronous
          method for collecting information from the components.

        * cuts/EventHandler.h:
        * cuts/EventHandler.inl:
        * cuts/EventHandler.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          First draft of the event handler class for components.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

        * cuts/Operation_Measurement.h:
        * cuts/Operation_Measurement.inl:
        * cuts/Operation_Measurement.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.cpp:
        * cuts/PortMetric.inl:
        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:
        * cuts/TimeMetric.cpp:
        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.inl:
        * cuts/Time_Measurement.cpp:
        * cuts/Trigger_T.cpp:
        * cuts/Worker_Measurement.h:
        * cuts/Worker_Measurement.inl:
        * cuts/Worker_Measurement.cpp:

          First cut of the benchmark data collectors structures for saving
          performance data.

        * cuts/pir/Action_Property.h:
        * cuts/pir/Action_Property.inl:
        * cuts/pir/Action_Property.cpp:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/ComponentHome.cpp:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/Event.cpp:
        * cuts/pir/EventSink.h:
        * cuts/pir/Event_Source.h:
        * cuts/pir/Event_Source.inl:
        * cuts/pir/Event_Source.cpp:
        * cuts/pir/Facet.h:
        * cuts/pir/File.h:
        * cuts/pir/File.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.cpp:
        * cuts/pir/Module_Element.h:
        * cuts/pir/Module_Element.inl:
        * cuts/pir/Module_Element.cpp:
        * cuts/pir/Object.h:
        * cuts/pir/Object.cpp:
        * cuts/pir/Output_Action.h:
        * cuts/pir/Output_Action.inl:
        * cuts/pir/Output_Action.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Periodic_Action.h:
        * cuts/pir/Periodic_Action.inl:
        * cuts/pir/Periodic_Action.cpp:
        * cuts/pir/Port.h:
        * cuts/pir/Port.inl:
        * cuts/pir/Port.cpp:
        * cuts/pir/Project.cpp:
        * cuts/pir/Reference_Element.h:
        * cuts/pir/Reference_Element.inl:
        * cuts/pir/Reference_Element.cpp:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker_Action.h:
        * cuts/pir/Worker_Action.inl:
        * cuts/pir/Worker_Action.cpp:
        * cuts/pir/Worker_Type.h:

          Final classes in the first draft of the platform-independent
          representation (PIR) of the PICML model used to generate source code.

        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:

          Updated the CIAO backend to handle the additions to the PIR.

        * cuts/config.h:

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:

          Updated the BON extension to reflect changes in the metamodel.

        * cuts/performance.idl:

          Added support for timing exit points.

        * cuts/utils/Functor_T.h:

          Implemented some delete functors.

        * cuts/PortMeasurement.h:
        * cuts/PortMeasurement.inl:
        * cuts/PortMeasurement.cpp:
        * cuts/Timing.h:
        * cuts/Timing.inl:
        * cuts/Timing.cpp:

          Removed these files.

Thu Feb  2 23:12:40 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.cpp:
        * cuts/BenchmarkAgent.idl:
        * cuts/BenchmarkAgent.inl:
        * cuts/CCM_BenchmarkAgent.cpp:

          The BenchmarkAgent local executor is now built and stored
          in a library to be imported by components.

        * cuts/CUTS.xme:

          Updated the PICML model for CUTS.

        * cuts/PortMetric.h:
        * cuts/PortMetric.inl:
        * cuts/PortMetric.cpp:
        * cuts/SystemMetric.h:
        * cuts/SystemMetric.inl:
        * cuts/SystemMetric.cpp:
        * cuts/TimeMetric.h:
        * cuts/TimeMetric.inl:
        * cuts/TimeMetric.cpp:
        * cuts/ComponentMetric.h:
        * cuts/ComponentMetric.inl:
        * cuts/ComponentMetric.cpp:

          Data collection handlers for the server side (Benchmark_Data_Collector).

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

          Moved most of the initial to the PICML visitor.

        * cuts/PortAgent.h:
        * cuts/PortAgent.cpp:

          Updated the documentation.

        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.cpp:

          Added other visitors to decouple the implemenation.

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:

          Updated BON extensions for the PICML metamodel.

        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventSink.h:
        * cuts/pir/EventSink.inl:
        * cuts/pir/EventSink.cpp:
        * cuts/pir/Facet.h:
        * cuts/pir/Facet.cpp:
        * cuts/pir/File.h:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/Object.h:
        * cuts/pir/Object.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Project.h:
        * cuts/pir/Project.inl:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker.cpp:
        * cuts/pir/Worker_Manager.h:
        * cuts/pir/Worker_Manager.cpp:
        * cuts/pir/Worker_Type.h:
        * cuts/pir/Worker_Type.cpp:

          Can now build the platform-independent representation for a component,
          excluding its attributes and workload behavior.

        * cuts/BenchmarkAgentE.idl:
        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/pir/Scope.h:
        * cuts/pir/Scope.inl:
        * cuts/pir/Scope.cpp:

          Removed these files.

Sat Jan 28 20:43:33 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BenchmarkAgent.idl

          Moved the benchmark agent to its own IDL so that we could
          force to generation of the local executor mappings and
          implement it in its own shared library to be linked with
          all CoWorkEr executor projects.

        * cuts/CCM_BenchmarkAgent.h:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CUTS.cidl:
        * cuts/CUTS.idl:
        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:

          Modified the CCM CoWorkErs so that they are build directly on
          top of the executor mappings instead on top of an executor. This
          removed the dependency of having to know the name of the executor
          component when generating the code. It also removes the dependency
          of needing any executor component implementation and the emulated
          CoWorkErs can stand-alone.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

          The interpreter now saves the name of the project in the PIR
          for the project.

        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/Exec_Project.h:
        * cuts/be/CIAO/Exec_Project.cpp:
        * cuts/be/CIAO/MPC_Visitor.h:
        * cuts/be/CIAO/MPC_Visitor.cpp:
        * cuts/be/CIAO/MWC_Visitor.h:
        * cuts/be/CIAO/MWC_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.h:
        * cuts/be/CIAO/Stub_Project.cpp:
        * cuts/be/CIAO/Svnt_Project.h:
        * cuts/be/CIAO/Svnt_Project.cpp:

          Added support for generating a predetermined MWC and MPC file
          for the project. This will simply building the system since
          the MPC and MWC file will have all the necessary information
          for creating the solution space and building the system without
          any modifications.

        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:

          Added support for generating the MWC and MPC files.

        * cuts/pir/Element.h:

          Added a const version of the accept () method.

        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:

          Modified the base projects so that all generated files
          are placed in a common location and the flags for the
          CoWorkEr projects are predetermined.

Thu Jan 26 20:05:11 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.inl:

        Redefined a method as inline

        * cuts/CUTS.xme:

        Updated the CUTS GME library.

        * cuts/CUTS_exec.cpp:

        Updated the BDC implementation.

Thu Jan 26 02:05:42 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * ChangeLog:
        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:
        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.inl:
        * cuts/BenchmarkAgent.cpp:
        * cuts/CCM_BenchmarkAgent.h:
        * cuts/CCM_BenchmarkAgent.inl:
        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/CCM_BenchmarkAgent_T.h:
        * cuts/CCM_BenchmarkAgent_T.inl:
        * cuts/CCM_BenchmarkAgent_T.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:
        * cuts/CPUWorker.h:
        * cuts/CPUWorker.inl:
        * cuts/CPUWorker.cpp:
        * cuts/CUTS.cidl:
        * cuts/CUTS.idl:
        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:
        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:
        * cuts/CUTS_exec_export.h:
        * cuts/CUTS_export.h:
        * cuts/CUTS_stub_export.h:
        * cuts/CUTS_svnt_export.h:
        * cuts/Counter.h:
        * cuts/Counter.inl:
        * cuts/Counter.cpp:
        * cuts/Counter_T.h:
        * cuts/Counter_T.inl:
        * cuts/Counter_T.cpp:
        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.inl:
        * cuts/DatabaseWorker.cpp:
        * cuts/EventGuard.h:
        * cuts/EventGuard.inl:
        * cuts/EventGuard.cpp:
        * cuts/EventGuard_T.h:
        * cuts/EventGuard_T.cpp:
        * cuts/EventHandler.h:
        * cuts/EventHandler.inl:
        * cuts/EventHandler.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:
        * cuts/GME/BON/ComponentConfig.h:
        * cuts/GME/BON/ComponentLib.idl:
        * cuts/GME/BON/GMEBON.mpc:
        * cuts/GME/BON/StdAfx.h:
        * cuts/GME/BON/StdAfx.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/CompIcon.ico:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Component.rc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentLib.idl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.inl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Resource.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/component.def:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.inl:
        * cuts/MemoryWorker.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:
        * cuts/PortMeasurement.h:
        * cuts/PortMeasurement.inl:
        * cuts/PortMeasurement.cpp:
        * cuts/Time.h:
        * cuts/Time.cpp:
        * cuts/Timing.h:
        * cuts/Timing.inl:
        * cuts/Timing.cpp:
        * cuts/Traits.h:
        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:
        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/Worker.cpp:
        * cuts/Worker_T.h:
        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/config.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBON.mpc:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:
        * cuts/fe/PICML/StdAfx.h:
        * cuts/fe/PICML/StdAfx.cpp:
        * cuts/performance.idl:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/ComponentHome.cpp:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/Event.inl:
        * cuts/pir/Event.cpp:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventManager.inl:
        * cuts/pir/EventManager.cpp:
        * cuts/pir/EventSink.h:
        * cuts/pir/EventSink.inl:
        * cuts/pir/EventSink.cpp:
        * cuts/pir/File.h:
        * cuts/pir/File.inl:
        * cuts/pir/File.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Project.h:
        * cuts/pir/Project.inl:
        * cuts/pir/Project.cpp:
        * cuts/pir/Scope.h:
        * cuts/pir/Scope.inl:
        * cuts/pir/Scope.cpp:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Visitor.cpp:
        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/Functor_T.h:
        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC.h:
        * cuts/utils/ODBC.inl:
        * cuts/utils/ODBC.cpp:
        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.inl:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:
        * cuts/utils/String.h:
        * cuts/utils/String.cpp:
        * cuts/utils/Utils.h:
        * etc/config/cuts_base.mpb:
        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:
        * etc/config/cuts_servant_dnc.mpb:
        * etc/config/gme_base.mpb:
        * etc/config/gme_bon2.mpb:
        * etc/config/gme_component.mpb:
        * etc/config/gme_interpreter.mpb:
        * etc/config/gme_raw.mpb:
        * etc/config/odbc.mpb:

          Initial checkin of CUTS into CoSMIC project repository

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
