Sun Feb 12 02:26:03 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:

          Implemented a cached activation record class to be used
          with ACE_Free_List.

        * cuts/CUTS_exec.cpp:

          Remove some of the debugging messages. Still haven't solved
          the shutdown problem.

        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          Reimplemented the event queue holding the dispatch times
          using ACE_Unbounded_Queue and an external ACE_Thread_Mutex.
          The ACE_Message_Queue_Ex was too heavyweight for the job.

        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:

          Reimplemented the free list for the activation records
          using ACE_Free_List and the cached version of the
          activation records.

Fri Feb 10 18:36:40 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/cuts_manager.pl:
        * bin/cuts_node.pl:
        * bin/cuts_planner.pl:
        * bin/cuts_test.pl:

          - Helper scripts for launching the appropriate DAnCE executables.

        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:

          - Update the implemenation to allow inclusion of transient times.
          - Improve the implemenation to automatically calculate
            transient/process times at creation/closing
          - Change implementation to delay the setting of the activation
            time to as late as possible to negate instrumentation code

        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.inl:
        * cuts/BenchmarkAgent.cpp:

          Updated benchmark agent code to collect the transient time from
          each of the port agents as well.

        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Event_Handler_T.h:
        * cuts/CCM_Event_Handler_T.cpp:

        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:

          First implementation of the event producer for CoWorkErs since events
          are synchronous. Once asynchonous events are implemented, this class
          will probably be removed.

        * cuts/CCM_Events_T.h:

          Removed unnecessary macro definitions for creating/registering events.

        * cuts/CUTS.idl:

          - Updated the CoWorkEr component definition to use a string type for its
            ID.
          - Updated the path analysis IDL to specify paths by the CoWorkEr ID and the
            source and destination ports.

        * cuts/CUTS.mpc:

          Add the neccessary files to the project space.

        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:

          Update the benchmark data collector implementation to use an asynchronous
          method for collecting information from the components.

        * cuts/EventHandler.h:
        * cuts/EventHandler.inl:
        * cuts/EventHandler.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:

          First draft of the event handler class for components.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

        * cuts/Operation_Measurement.h:
        * cuts/Operation_Measurement.inl:
        * cuts/Operation_Measurement.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.cpp:
        * cuts/PortMetric.inl:
        * cuts/Port_Measurement.h:
        * cuts/Port_Measurement.inl:
        * cuts/Port_Measurement.cpp:
        * cuts/TimeMetric.cpp:
        * cuts/Time_Measurement.h:
        * cuts/Time_Measurement.inl:
        * cuts/Time_Measurement.cpp:
        * cuts/Trigger_T.cpp:
        * cuts/Worker_Measurement.h:
        * cuts/Worker_Measurement.inl:
        * cuts/Worker_Measurement.cpp:

          First cut of the benchmark data collectors structures for saving
          performance data.

        * cuts/pir/Action_Property.h:
        * cuts/pir/Action_Property.inl:
        * cuts/pir/Action_Property.cpp:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/ComponentHome.cpp:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/Event.cpp:
        * cuts/pir/EventSink.h:
        * cuts/pir/Event_Source.h:
        * cuts/pir/Event_Source.inl:
        * cuts/pir/Event_Source.cpp:
        * cuts/pir/Facet.h:
        * cuts/pir/File.h:
        * cuts/pir/File.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.cpp:
        * cuts/pir/Module_Element.h:
        * cuts/pir/Module_Element.inl:
        * cuts/pir/Module_Element.cpp:
        * cuts/pir/Object.h:
        * cuts/pir/Object.cpp:
        * cuts/pir/Output_Action.h:
        * cuts/pir/Output_Action.inl:
        * cuts/pir/Output_Action.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Periodic_Action.h:
        * cuts/pir/Periodic_Action.inl:
        * cuts/pir/Periodic_Action.cpp:
        * cuts/pir/Port.h:
        * cuts/pir/Port.inl:
        * cuts/pir/Port.cpp:
        * cuts/pir/Project.cpp:
        * cuts/pir/Reference_Element.h:
        * cuts/pir/Reference_Element.inl:
        * cuts/pir/Reference_Element.cpp:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker_Action.h:
        * cuts/pir/Worker_Action.inl:
        * cuts/pir/Worker_Action.cpp:
        * cuts/pir/Worker_Type.h:

          Final classes in the first draft of the platform-independent
          representation (PIR) of the PICML model used to generate source code.

        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:

          Updated the CIAO backend to handle the additions to the PIR.

        * cuts/config.h:

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:

          Updated the BON extension to reflect changes in the metamodel.

        * cuts/performance.idl:

          Added support for timing exit points.

        * cuts/utils/Functor_T.h:

          Implemented some delete functors.

        * cuts/PortMeasurement.h:
        * cuts/PortMeasurement.inl:
        * cuts/PortMeasurement.cpp:
        * cuts/Timing.h:
        * cuts/Timing.inl:
        * cuts/Timing.cpp:

          Removed these files.

Thu Feb  2 23:12:40 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.cpp:
        * cuts/BenchmarkAgent.idl:
        * cuts/BenchmarkAgent.inl:
        * cuts/CCM_BenchmarkAgent.cpp:

          The BenchmarkAgent local executor is now built and stored
          in a library to be imported by components.

        * cuts/CUTS.xme:

          Updated the PICML model for CUTS.

        * cuts/PortMetric.h:
        * cuts/PortMetric.inl:
        * cuts/PortMetric.cpp:
        * cuts/SystemMetric.h:
        * cuts/SystemMetric.inl:
        * cuts/SystemMetric.cpp:
        * cuts/TimeMetric.h:
        * cuts/TimeMetric.inl:
        * cuts/TimeMetric.cpp:
        * cuts/ComponentMetric.h:
        * cuts/ComponentMetric.inl:
        * cuts/ComponentMetric.cpp:

          Data collection handlers for the server side (Benchmark_Data_Collector).

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

          Moved most of the initial to the PICML visitor.

        * cuts/PortAgent.h:
        * cuts/PortAgent.cpp:

          Updated the documentation.

        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/File_Visitor.h:
        * cuts/be/CIAO/File_Visitor.cpp:
        * cuts/be/CIAO/Project_Visitor.h:
        * cuts/be/CIAO/Project_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.cpp:

          Added other visitors to decouple the implemenation.

        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:

          Updated BON extensions for the PICML metamodel.

        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventSink.h:
        * cuts/pir/EventSink.inl:
        * cuts/pir/EventSink.cpp:
        * cuts/pir/Facet.h:
        * cuts/pir/Facet.cpp:
        * cuts/pir/File.h:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/Object.h:
        * cuts/pir/Object.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Project.h:
        * cuts/pir/Project.inl:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Worker.h:
        * cuts/pir/Worker.cpp:
        * cuts/pir/Worker_Manager.h:
        * cuts/pir/Worker_Manager.cpp:
        * cuts/pir/Worker_Type.h:
        * cuts/pir/Worker_Type.cpp:

          Can now build the platform-independent representation for a component,
          excluding its attributes and workload behavior.

        * cuts/BenchmarkAgentE.idl:
        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/pir/Scope.h:
        * cuts/pir/Scope.inl:
        * cuts/pir/Scope.cpp:

          Removed these files.

Sat Jan 28 20:43:33 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BenchmarkAgent.idl

          Moved the benchmark agent to its own IDL so that we could
          force to generation of the local executor mappings and
          implement it in its own shared library to be linked with
          all CoWorkEr executor projects.

        * cuts/CCM_BenchmarkAgent.h:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CUTS.cidl:
        * cuts/CUTS.idl:
        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:

          Modified the CCM CoWorkErs so that they are build directly on
          top of the executor mappings instead on top of an executor. This
          removed the dependency of having to know the name of the executor
          component when generating the code. It also removes the dependency
          of needing any executor component implementation and the emulated
          CoWorkErs can stand-alone.

        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:

          The interpreter now saves the name of the project in the PIR
          for the project.

        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/be/CIAO/Exec_Project.h:
        * cuts/be/CIAO/Exec_Project.cpp:
        * cuts/be/CIAO/MPC_Visitor.h:
        * cuts/be/CIAO/MPC_Visitor.cpp:
        * cuts/be/CIAO/MWC_Visitor.h:
        * cuts/be/CIAO/MWC_Visitor.cpp:
        * cuts/be/CIAO/Stub_Project.h:
        * cuts/be/CIAO/Stub_Project.cpp:
        * cuts/be/CIAO/Svnt_Project.h:
        * cuts/be/CIAO/Svnt_Project.cpp:

          Added support for generating a predetermined MWC and MPC file
          for the project. This will simply building the system since
          the MPC and MWC file will have all the necessary information
          for creating the solution space and building the system without
          any modifications.

        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:

          Added support for generating the MWC and MPC files.

        * cuts/pir/Element.h:

          Added a const version of the accept () method.

        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:

          Modified the base projects so that all generated files
          are placed in a common location and the flags for the
          CoWorkEr projects are predetermined.

Thu Jan 26 20:05:11 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/ActivationRecord.inl:

        Redefined a method as inline

        * cuts/CUTS.xme:

        Updated the CUTS GME library.

        * cuts/CUTS_exec.cpp:

        Updated the BDC implementation.

Thu Jan 26 02:05:42 2006  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS.mwc:
        * ChangeLog:
        * cuts/ActivationRecord.h:
        * cuts/ActivationRecord.inl:
        * cuts/ActivationRecord.cpp:
        * cuts/BenchmarkAgent.h:
        * cuts/BenchmarkAgent.inl:
        * cuts/BenchmarkAgent.cpp:
        * cuts/CCM_BenchmarkAgent.h:
        * cuts/CCM_BenchmarkAgent.inl:
        * cuts/CCM_BenchmarkAgent.cpp:
        * cuts/CCM_BenchmarkAgent_T.h:
        * cuts/CCM_BenchmarkAgent_T.inl:
        * cuts/CCM_BenchmarkAgent_T.cpp:
        * cuts/CCM_CoWorkEr.h:
        * cuts/CCM_CoWorkEr.inl:
        * cuts/CCM_CoWorkEr.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:
        * cuts/CPUWorker.h:
        * cuts/CPUWorker.inl:
        * cuts/CPUWorker.cpp:
        * cuts/CUTS.cidl:
        * cuts/CUTS.idl:
        * cuts/CUTS.mpc:
        * cuts/CUTS.xme:
        * cuts/CUTS_exec.h:
        * cuts/CUTS_exec.cpp:
        * cuts/CUTS_exec_export.h:
        * cuts/CUTS_export.h:
        * cuts/CUTS_stub_export.h:
        * cuts/CUTS_svnt_export.h:
        * cuts/Counter.h:
        * cuts/Counter.inl:
        * cuts/Counter.cpp:
        * cuts/Counter_T.h:
        * cuts/Counter_T.inl:
        * cuts/Counter_T.cpp:
        * cuts/DatabaseWorker.h:
        * cuts/DatabaseWorker.inl:
        * cuts/DatabaseWorker.cpp:
        * cuts/EventGuard.h:
        * cuts/EventGuard.inl:
        * cuts/EventGuard.cpp:
        * cuts/EventGuard_T.h:
        * cuts/EventGuard_T.cpp:
        * cuts/EventHandler.h:
        * cuts/EventHandler.inl:
        * cuts/EventHandler.cpp:
        * cuts/EventHandler_T.h:
        * cuts/EventHandler_T.inl:
        * cuts/EventHandler_T.cpp:
        * cuts/GME/BON/ComponentConfig.h:
        * cuts/GME/BON/ComponentLib.idl:
        * cuts/GME/BON/GMEBON.mpc:
        * cuts/GME/BON/StdAfx.h:
        * cuts/GME/BON/StdAfx.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/BON2Component.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/CompIcon.ico:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Component.rc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentConfig.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/ComponentLib.idl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.inl:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICMLVisitor_Impl.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/PICML_CIAO_Impl.mpc:
        * cuts/GME/interpreters/PICML_CIAO_Impl/Resource.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.h:
        * cuts/GME/interpreters/PICML_CIAO_Impl/StdAfx.cpp:
        * cuts/GME/interpreters/PICML_CIAO_Impl/component.def:
        * cuts/MemoryWorker.h:
        * cuts/MemoryWorker.inl:
        * cuts/MemoryWorker.cpp:
        * cuts/PortAgent.h:
        * cuts/PortAgent.inl:
        * cuts/PortAgent.cpp:
        * cuts/PortMeasurement.h:
        * cuts/PortMeasurement.inl:
        * cuts/PortMeasurement.cpp:
        * cuts/Time.h:
        * cuts/Time.cpp:
        * cuts/Timing.h:
        * cuts/Timing.inl:
        * cuts/Timing.cpp:
        * cuts/Traits.h:
        * cuts/Trigger_T.h:
        * cuts/Trigger_T.inl:
        * cuts/Trigger_T.cpp:
        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/Worker.cpp:
        * cuts/Worker_T.h:
        * cuts/be/CIAO/CIAO_Visitor.h:
        * cuts/be/CIAO/CIAO_Visitor.cpp:
        * cuts/be/CIAO/CUTS_BE_CIAO.mpc:
        * cuts/config.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.h:
        * cuts/fe/PICML/CUTS_PICMLVisitor.cpp:
        * cuts/fe/PICML/PICMLBON.mpc:
        * cuts/fe/PICML/PICMLBonX.h:
        * cuts/fe/PICML/PICMLBonX.cpp:
        * cuts/fe/PICML/PICMLVisitor.h:
        * cuts/fe/PICML/PICMLVisitor.cpp:
        * cuts/fe/PICML/StdAfx.h:
        * cuts/fe/PICML/StdAfx.cpp:
        * cuts/performance.idl:
        * cuts/pir/Component.h:
        * cuts/pir/Component.inl:
        * cuts/pir/Component.cpp:
        * cuts/pir/ComponentHome.h:
        * cuts/pir/ComponentHome.inl:
        * cuts/pir/ComponentHome.cpp:
        * cuts/pir/Element.h:
        * cuts/pir/Element.inl:
        * cuts/pir/Element.cpp:
        * cuts/pir/Event.h:
        * cuts/pir/Event.inl:
        * cuts/pir/Event.cpp:
        * cuts/pir/EventManager.h:
        * cuts/pir/EventManager.inl:
        * cuts/pir/EventManager.cpp:
        * cuts/pir/EventSink.h:
        * cuts/pir/EventSink.inl:
        * cuts/pir/EventSink.cpp:
        * cuts/pir/File.h:
        * cuts/pir/File.inl:
        * cuts/pir/File.cpp:
        * cuts/pir/Method.h:
        * cuts/pir/Method.inl:
        * cuts/pir/Method.cpp:
        * cuts/pir/Module.h:
        * cuts/pir/Module.inl:
        * cuts/pir/Module.cpp:
        * cuts/pir/PIR.mpc:
        * cuts/pir/Project.h:
        * cuts/pir/Project.inl:
        * cuts/pir/Project.cpp:
        * cuts/pir/Scope.h:
        * cuts/pir/Scope.inl:
        * cuts/pir/Scope.cpp:
        * cuts/pir/Visitor.h:
        * cuts/pir/Visitor.inl:
        * cuts/pir/Visitor.cpp:
        * cuts/utils/CUTS_Utils.mpc:
        * cuts/utils/Functor_T.h:
        * cuts/utils/MyODBC_Connection.cpp:
        * cuts/utils/ODBC.h:
        * cuts/utils/ODBC.inl:
        * cuts/utils/ODBC.cpp:
        * cuts/utils/ODBC_Connection.h:
        * cuts/utils/ODBC_Connection.inl:
        * cuts/utils/ODBC_Connection.cpp:
        * cuts/utils/ODBC_Stmt.h:
        * cuts/utils/ODBC_Stmt.inl:
        * cuts/utils/ODBC_Stmt.cpp:
        * cuts/utils/String.h:
        * cuts/utils/String.cpp:
        * cuts/utils/Utils.h:
        * etc/config/cuts_base.mpb:
        * etc/config/cuts_client_dnc.mpb:
        * etc/config/cuts_component_dnc.mpb:
        * etc/config/cuts_coworker_exec.mpb:
        * etc/config/cuts_coworker_stub.mpb:
        * etc/config/cuts_coworker_svnt.mpb:
        * etc/config/cuts_servant_dnc.mpb:
        * etc/config/gme_base.mpb:
        * etc/config/gme_bon2.mpb:
        * etc/config/gme_component.mpb:
        * etc/config/gme_interpreter.mpb:
        * etc/config/gme_raw.mpb:
        * etc/config/odbc.mpb:

          Initial checkin of CUTS into CoSMIC project repository
