// -*- IDL -*-

//=============================================================================
/**
 * @file    CUTS.idl
 *
 * $Id$
 *
 * This file contains the information shared between all components in
 * Component Workload Emulator (CoWorkEr) Utilization Test Suite (CUTS).
 *
 * @author James H. Hill <hillj@isis.vanderbilt.edu>
 */
//=============================================================================

#ifndef _CUTS_IDL_
#define _CUTS_IDL_

#include "cuts/performance.idl"
#include <Components.idl>

module CUTS
{
  exception Registration_Failed   { };
  exception Registration_Limit    { };

  //===========================================================================
  /**
   * @interface Benchmark_Agent
   *
   * Collection object that all components contain internally. This
   * allows an external object to poll each component during runtime
   * and collect performance metrics.
   */
  //===========================================================================

  interface Benchmark_Agent
  {
    /// Get the performance data from the agent.
    void collect_performance_data (out Benchmark_Data data);
  };

  //===========================================================================
  /**
   * @struct Component_Registration
   *
   * Registration information about the component. This allows a component
   * to let a monitoring object/component realize the existence of active
   * objects in the system. The registration information contains the details
   * of the component, such as type, instance name, and more importantly the
   * Benchmark_Agent for the component (if applicable) so that the monitoring
   * component can poll it periodically for performance information.
   */
  //===========================================================================

  struct Component_Registration
  {
    /// Benchmark agent of the component.
    Benchmark_Agent agent;

    /// UUID of the CoWorkEr.
    string name;

    /// The type of CoWorkEr.
    string type;

    /// IP address of the CoWorkEr.
    string ipaddr;

    /// Name of the host with the CoWorkEr.
    string hostname;
  };

  //===========================================================================
  /**
   * @interface Testing_Service
   */
  //===========================================================================

  interface Testing_Service
  {
    long register_component (in Component_Registration cr)
      raises (Registration_Failed,
              Registration_Limit);

    void unregister_component (in Component_Registration cr);
  };
};

#endif  // !defined _CUTS_IDL_
