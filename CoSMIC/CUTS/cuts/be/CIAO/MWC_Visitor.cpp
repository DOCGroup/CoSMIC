// $Id$

#include "cuts/be/CIAO/MWC_Visitor.h"
#include "cuts/be/CIAO/MPC_Visitor.h"
#include "cuts/pir/Project.h"
#include "cuts/pir/File.h"

#include <algorithm>
#include <fstream>
#include <strstream>

namespace CUTS_CIAO
{
  //===========================================================================
  /**
   * @struct Generate_MPC_File
   *
   * This functor is responsible for generating a MPC file the project
   * file. It requires the parent MWC file stream and the output directory
   * for the MPC file.
   */
  //===========================================================================
  struct Generate_MPC_File
  {
    //
    // Generate_MPC_File
    //
    Generate_MPC_File (std::ofstream & mwcfile, std::string & outdir)
      : mwcfile_ (mwcfile),
        outdir_ (outdir)
    {

    }

    //
    // operator ()
    //
    void operator () (const CUTS_PIR::File * file)
    {
      // Construct the name of the MPC file.
      std::ostrstream filename;
      filename
        << this->outdir_ << "/" << file->name ()
        << "_CoWorkEr.mpc" << std::ends;

      // Open the MPC file for writing.
      std::ofstream mpc_file;
      mpc_file.open (filename.str ());

      if (mpc_file.is_open ())
      {
        // Add the MPC file to the MWC file.
        this->mwcfile_ << "  " << file->name () << "_CoWorkEr.mpc" << std::endl;

        // Pass the MPC visitor to the file.
        MPC_Visitor mpc_visitor (mpc_file);
        file->accept (&mpc_visitor);

        mpc_file.close ();
      }
    }

  private:
    /// Parent MWC file stream for the MPC file.
    std::ofstream & mwcfile_;

    /// Output directory for the MPC file.
    std::string & outdir_;
  };

  //
  // MWC_Visitor
  //
  MWC_Visitor::MWC_Visitor (const char * outdir)
    : outdir_ (outdir)
  {

  }

  //
  // ~MWC_Visitor
  //
  MWC_Visitor::~MWC_Visitor (void)
  {

  }

  //
  // visit_project
  //
  void MWC_Visitor::visit_project (const CUTS_PIR::Project & project)
  {
    // Construct the name of the .mwc file.
    std::ostrstream filename;
    filename
      << this->outdir_ << "/" << project.name ()
      << "_CoWorkEr.mwc" << std::ends;

    // Open the file for writing.
    std::ofstream mwcfile;
    mwcfile.open (filename.str ());

    if (mwcfile.is_open ())
    {
      // Generate the workspace file for the project.
      mwcfile
        << "// This workspace file was generated by" << std::endl
        << "// $Id$" << std::endl
        << std::endl
        << "workspace (" << project.name () << ") {" << std::endl
        << "  cmdline += -include $CUTS_ROOT/etc/config" << std::endl
        << std::endl
        << "  // Project files include in this workspace" << std::endl;

      // Visit all the files in the project.
      std::for_each ( project.files ().begin (),
                      project.files ().end (),
                      Generate_MPC_File (mwcfile, this->outdir_));

      // Close the workspace declaration.
      mwcfile
        << "}" << std::endl;

      // Close the file.
      mwcfile.close ();
    }
  }
}
