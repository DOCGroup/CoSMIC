Thu Jul  8 03:28:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLTextEditor/ComponentLib_h.h:
        
          This file is needed for BON.

Thu Jul  8 00:08:48 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Component.idl:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Component_Impl.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Component_Impl.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Component_Module.cpp:
        * PIM/PICML/interpreters/IDLGenerator/StdAfx.h:

          Re-implemented interface with GME using GAME.

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.h:
        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDLGenerator/ComponentLib_h.h:
        * PIM/PICML/interpreters/IDLGenerator/RawComponent.h:
        * PIM/PICML/interpreters/IDLGenerator/RawComponent.cpp:
        * PIM/PICML/interpreters/IDLGenerator/UdmApp.h:
        * PIM/PICML/interpreters/IDLGenerator/UdmApp.cpp:

          Removed these files.

Wed Jul  7 22:15:44 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/automation/Automation_App.cpp:
        * Utils/GAME/game/automation/Parameter_Parser.h:
        * Utils/GAME/game/automation/Parameter_Parser.cpp:
        * Utils/GAME/game/automation/automation.mpc:

          Implemented support for passing parameters to the interpreter.

Wed Jul  7 20:45:48 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_manip.mpb:
        * Utils/GAME/game/manip:
        * Utils/GAME/game/manip/Manipulation.mpc:
        * Utils/GAME/game/manip/Manipulation_export.h:
        * Utils/GAME/game/manip/copy.h:
        * Utils/GAME/game/manip/copy.cpp:

          First version of a model manipulation library.

Wed Jul  7 17:54:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:

          The destructor no longer closes the territory. Instead, this now
          handled in the close () method.

Wed Jul  7 14:03:43 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Project.cpp:

          Closing the project now releases the CComPtr.

        * Utils/GAME/game/Territory.cpp:

          Improved the code layout.

        * Utils/GAME/game/automation:
        * Utils/GAME/game/automation/Automation_App.h:
        * Utils/GAME/game/automation/Automation_App.inl:
        * Utils/GAME/game/automation/Automation_App.cpp:
        * Utils/GAME/game/automation/Automation_App_Options.h:
        * Utils/GAME/game/automation/Automation_App_Options.inl:
        * Utils/GAME/game/automation/Automation_App_Options.cpp:
        * Utils/GAME/game/automation/automation.mpc:
        * Utils/GAME/game/automation/automation.cpp:

          First implementation of the application for automating an
          interpreter.

        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/types.h:

          Standard GAME types. This will help normalize the types
          across the different projects.

Wed Jul  7 02:23:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/ModelUpgrade/Model_Upgrade.cpp:

          Fixed compiler errors.

Tue Jul  6 20:05:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:

          The open () and create () methods are now named _open () and
          _create (), and are declared as static methods.

        * Utils/GAME/game/be/ComponentEx_Impl_T.cpp:

          Added missing header files.

Tue Jul  6 14:11:22 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Component.h:
        * Utils/GAME/game/Component.inl:
        * Utils/GAME/game/Component.cpp:
        * Utils/GAME/game/ComponentEx.h:
        * Utils/GAME/game/ComponentEx.inl:
        * Utils/GAME/game/ComponentEx.cpp:

          Added support for loading a extended component via the _load () method.

          Implemented missing constructors.

          Moved some code to the inline file.

        * Utils/GAME/game/be/Interpreter_T.h:
        * Utils/GAME/game/be/Plugin_T.h:
        * Utils/GAME/game/be/Plugin_T.inl:

          Removed obsolete code.

Thu Jul  1 21:26:20 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/Configurator.idl:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager.idl:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Module.cpp:
        * PIM/PICML/addons/PICMLManager/PICML_Manager_Addon.h:
        * PIM/PICML/addons/PICMLManager/PICML_Manager_Addon.cpp:

          Updated to latest version of GAME.

          Implemented an interface for configuring where the PICML Manager
          auto-generates the default component implementation and its artifacts.
          This is useful for automation purposes.

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:
        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/GME_fwd.h:

          Implemented method for retrieving all the add-ons for a
          given project.

        * Utils/GAME/game/Component.h:
        * Utils/GAME/game/Component.cpp:
        * Utils/GAME/game/ComponentEx.h:
        * Utils/GAME/game/ComponentEx.cpp:
        * Utils/GAME/game/be/Addon_Impl_Base.h:
        * Utils/GAME/game/be/Addon_Impl_Base.inl:
        * Utils/GAME/game/be/Addon_Impl_Base.cpp:
        * Utils/GAME/game/be/Addon_Impl_T.h:
        * Utils/GAME/game/be/Addon_Impl_T.inl:
        * Utils/GAME/game/be/Addon_Impl_T.cpp:
        * Utils/GAME/game/be/ComponentEx_Impl_Base.h:
        * Utils/GAME/game/be/ComponentEx_Impl_Base.inl:
        * Utils/GAME/game/be/ComponentEx_Impl_Base.cpp:
        * Utils/GAME/game/be/ComponentEx_Impl_T.h:
        * Utils/GAME/game/be/ComponentEx_Impl_T.inl:
        * Utils/GAME/game/be/ComponentEx_Impl_T.cpp:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.inl:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/GAME_BE.mpc:
        * Utils/GAME/game/be/Interpreter_Impl_Base.h:
        * Utils/GAME/game/be/Interpreter_Impl_Base.inl:
        * Utils/GAME/game/be/Interpreter_T.h:
        * Utils/GAME/game/be/Plugin_Impl.h:
        * Utils/GAME/game/be/Plugin_Impl.inl:

          Re-designed GAME's component framework. This re-design simplified
          a lot of things, and makes it possible to define domain-specific
          interfaces for the components.

        * Utils/GAME/game/be/Addon_T.h:
        * Utils/GAME/game/be/Addon_T.inl:
        * Utils/GAME/game/be/Addon_T.cpp:

          Removed these files.

Tue Jun 29 14:35:19 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Added exclude {} scope for different interpreters.

        * PIM/PICML/PICML.mwc:
        * cosmic.mwc:

          Move the PICML workspace to the PICML directory.

        * picml.mwc:

          Removed this file.

Mon Jun 28 22:05:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-10c:
        * contrib:

          CoSMIC version 0.7.9 was released. Moved the ChangeLog
          to ChangeLogs/ChangeLog-09. Reverted contrib svn:externals property
          back to the HEAD revision.

   Local Variables:
   mode: change-log
   add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
   indent-tabs-mode: nil
   End:

