Fri Jun  4 20:34:38 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_decorator.mpb:
        * MPC/config/game_utils.mpb:
        
          . Base project for building GAME components.

Fri Jun  4 20:30:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Attribute.h:
        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/FCO.h:
        * Utils/GAME/game/FCO.inl:
        * Utils/GAME/game/FCO.cpp:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/GAME_export.h:
        * Utils/GAME/game/GME_fwd.h:
        * Utils/GAME/game/MetaAspect.h:
        * Utils/GAME/game/MetaAspect.inl:
        * Utils/GAME/game/MetaAspect.cpp:
        * Utils/GAME/game/MetaAttribute.h:
        * Utils/GAME/game/MetaAttribute.inl:
        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/MetaModel.h:
        * Utils/GAME/game/MetaModel.cpp:
        * Utils/GAME/game/MetaPart.h:
        * Utils/GAME/game/MetaPart.cpp:
        * Utils/GAME/game/Model.h:
        * Utils/GAME/game/Model.cpp:
        * Utils/GAME/game/Part.h:
        * Utils/GAME/game/Part.inl:
        * Utils/GAME/game/Part.cpp:

          . Added more functionality.

        * Utils/GAME/game/be/Decorator_Impl.h:
        * Utils/GAME/game/be/Decorator_Impl.inl:
        * Utils/GAME/game/be/Decorator_T.h:
        * Utils/GAME/game/be/Decorator_T.inl:
        * Utils/GAME/game/be/Decorator_T.cpp:

          . Removed function name overloading since it prevented methods
            with the same name in the subclass from being seen.

        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Implemented a help class for locating icons on disk.

Thu Jun  3 16:56:51 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/Decorator.rc:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.idl:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.h:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/StdAfx.cpp:

          . Re-implemented the show reference decorator using
            the GAME decorator backend.

        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.inl:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/Interpreter_T.h:

          . Updated formatting.

        * Utils/GAME/game/be/Decorator_Impl.h:
        * Utils/GAME/game/be/Decorator_Impl.inl:
        * Utils/GAME/game/be/Decorator_Impl.cpp:
        * Utils/GAME/game/be/Decorator_Module.h:
        * Utils/GAME/game/be/Decorator_T.h:
        * Utils/GAME/game/be/Decorator_T.inl:
        * Utils/GAME/game/be/Decorator_T.cpp:
        * Utils/GAME/game/be/GAME_BE.mpc:

          . Implemented decorator support for the backend.

        * Utils/GAME/game/utils/Point.h:
        * Utils/GAME/game/utils/Point.inl:

          . Changed the point's data type.

Thu Jun  3 04:08:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.aps:
        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/StdAfx.h:

          . Updated decorator to use ATL 7.0. This results in a
            somewhat cleaner implementation of the decorator.

Thu Jun  3 04:06:46 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/MetaPart.h:
        * Utils/GAME/game/MetaPart.inl:
        * Utils/GAME/game/MetaPart.cpp:

          . Implemented wrapper class for the IMgaMetaPart interface.

Wed Jun  2 16:30:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Territory.h:

          . Fixed build errors with using this file within
            a decorator.

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:

          . Added support for getting the paradigm's connection string
            via the project.

        * Utils/GAME/game/utils:
        * Utils/GAME/game/utils/GAME_Utils.mpc:
        * Utils/GAME/game/utils/Parser.cpp:
        * Utils/GAME/game/utils/Parser.hpp:
        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Added support for getting the paradigm's connection string.

        * Utils/UDM/visit.h:
        * Utils/UDM/visit.cpp:

          . Helper functions for writing visitor based intepreters.

Wed Jun  2 15:36:06 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:

          . Made the MemberDecorator a stand-alone decorator.

        * PIM/PICML/decorators/ShowReference:
        * PIM/PICML/decorators/ShowReference/CommonError.h:
        * PIM/PICML/decorators/ShowReference/CommonError.cpp:
        * PIM/PICML/decorators/ShowReference/CommonSmart.h:
        * PIM/PICML/decorators/ShowReference/Decorator.aps:
        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/Decorator.rc:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.def:
        * PIM/PICML/decorators/ShowReference/DecoratorConfig.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.idl:
        * PIM/PICML/decorators/ShowReference/DecoratorStd.h:
        * PIM/PICML/decorators/ShowReference/DecoratorUtil.h:
        * PIM/PICML/decorators/ShowReference/DecoratorUtil.cpp:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.h:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.cpp:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/ShowReference.wxs:
        * PIM/PICML/decorators/ShowReference/ShowReferenceDecorator.reg:
        * PIM/PICML/decorators/ShowReference/ShowReferenceDecoratord.reg:
        * PIM/PICML/decorators/ShowReference/StdAfx.h:
        * PIM/PICML/decorators/ShowReference/StdAfx.cpp:
        * PIM/PICML/decorators/ShowReference/resource.h:

          . Stand-alone version of the original MemberDecorator.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

Sat May 29 18:22:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLTextEditor/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.h:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.h:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/actors.hpp:
        * PIM/PICML/interpreters/PICML/Data_Value_Builder.h:
        * PIM/PICML/interpreters/PICML/Data_Value_Builder.cpp:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PropertyManager/RawComponent.h:
        * PIM/PICML/interpreters/PropertyManager/RawComponent.cpp:
        * PIM/PICML/interpreters/QED/deployment/RawComponent.cpp:

          . Updated to reflect changes to GAME below.

Sat May 29 18:19:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/utils/game/Utility.h:
        * PIM/PICML/utils/game/Utility.cpp:
        * PIM/PICML/utils/udm/functional.h:
        * PIM/PICML/utils/udm/functional.cpp:

          . Updated to reflect changes to GAME below.

Sat May 29 18:16:47 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game.mpb:

          . Added the 'includes' specification.

        * MPC/config/game_utils.mpb:

          . New base project.

        * MPC/config/picml_game_utils.mpb:

          . Derived from the game_utils base project.

Sat May 29 18:13:57 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.h:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.cpp:
        * PIM/PICML/addons/CBMLManager/RawComponent.h:
        * PIM/PICML/addons/CBMLManager/RawComponent.cpp:
        * PIM/PICML/addons/CBMLManager/String_Selection_Dialog.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/RawComponent.h:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:
        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/PICMLDecorator.mpc:

          . Updated to reflect changes to GAME below.

Sat May 29 18:05:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Atom.h:
        * Utils/GAME/game/Atom.inl:
        * Utils/GAME/game/Atom.cpp:
        * Utils/GAME/game/Attribute.h:
        * Utils/GAME/game/Attribute.inl:
        * Utils/GAME/game/Attribute.cpp:
        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/Collection_T.cpp:
        * Utils/GAME/game/Component.h:
        * Utils/GAME/game/Component.cpp:
        * Utils/GAME/game/ComponentEx.h:
        * Utils/GAME/game/ComponentEx.cpp:
        * Utils/GAME/game/Connection.h:
        * Utils/GAME/game/Connection.inl:
        * Utils/GAME/game/Connection.cpp:
        * Utils/GAME/game/Exception.h:
        * Utils/GAME/game/Exception.inl:
        * Utils/GAME/game/Exception.cpp:
        * Utils/GAME/game/FCO.h:
        * Utils/GAME/game/FCO.inl:
        * Utils/GAME/game/FCO.cpp:
        * Utils/GAME/game/Filter.h:
        * Utils/GAME/game/Filter.cpp:
        * Utils/GAME/game/Folder.h:
        * Utils/GAME/game/Folder.inl:
        * Utils/GAME/game/Folder.cpp:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/GME.cpp:
        * Utils/GAME/game/GME_fwd.h:
        * Utils/GAME/game/MetaAttribute.h:
        * Utils/GAME/game/MetaAttribute.inl:
        * Utils/GAME/game/MetaAttribute.cpp:
        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/MetaBase.cpp:
        * Utils/GAME/game/MetaEnumItem.h:
        * Utils/GAME/game/MetaEnumItem.inl:
        * Utils/GAME/game/MetaEnumItem.cpp:
        * Utils/GAME/game/MetaFCO.h:
        * Utils/GAME/game/MetaFCO.inl:
        * Utils/GAME/game/MetaFCO.cpp:
        * Utils/GAME/game/MetaFolder.h:
        * Utils/GAME/game/MetaFolder.inl:
        * Utils/GAME/game/MetaFolder.cpp:
        * Utils/GAME/game/MetaModel.h:
        * Utils/GAME/game/MetaModel.inl:
        * Utils/GAME/game/MetaModel.cpp:
        * Utils/GAME/game/MetaRole.h:
        * Utils/GAME/game/MetaRole.inl:
        * Utils/GAME/game/MetaRole.cpp:
        * Utils/GAME/game/Model.h:
        * Utils/GAME/game/Model.inl:
        * Utils/GAME/game/Model.cpp:
        * Utils/GAME/game/Object.h:
        * Utils/GAME/game/Object.inl:
        * Utils/GAME/game/Object.cpp:
        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:
        * Utils/GAME/game/Reference.h:
        * Utils/GAME/game/Reference.inl:
        * Utils/GAME/game/Reference.cpp:
        * Utils/GAME/game/RegistryNode.h:
        * Utils/GAME/game/RegistryNode.inl:
        * Utils/GAME/game/RegistryNode.cpp:
        * Utils/GAME/game/Set.h:
        * Utils/GAME/game/Set.cpp:
        * Utils/GAME/game/Territory.h:
        * Utils/GAME/game/Territory.cpp:
        * Utils/GAME/game/Visitor.h:
        * Utils/GAME/game/Visitor.inl:
        * Utils/GAME/game/Visitor.cpp:
        * Utils/GAME/game/XML.h:
        * Utils/GAME/game/XML.inl:
        * Utils/GAME/game/XML.cpp:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.inl:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/Event_Sink_Impl.h:
        * Utils/GAME/game/be/Event_Sink_Impl.inl:
        * Utils/GAME/game/be/Event_Sink_Impl.cpp:
        * Utils/GAME/game/be/Event_Sink_T.h:
        * Utils/GAME/game/be/Event_Sink_T.inl:
        * Utils/GAME/game/be/Event_Sink_T.cpp:
        * Utils/GAME/game/be/Interpreter_Impl_Base.h:
        * Utils/GAME/game/be/Interpreter_Impl_Base.inl:
        * Utils/GAME/game/be/Interpreter_Impl_Base.cpp:
        * Utils/GAME/game/be/Interpreter_T.h:
        * Utils/GAME/game/be/Interpreter_T.inl:
        * Utils/GAME/game/be/Interpreter_T.cpp:
        * Utils/GAME/game/be/Plugin_Impl.h:
        * Utils/GAME/game/be/Plugin_Impl.inl:
        * Utils/GAME/game/be/Plugin_Impl.cpp:
        * Utils/GAME/game/be/Plugin_T.h:
        * Utils/GAME/game/be/Plugin_T.inl:
        * Utils/GAME/game/be/Plugin_T.cpp:
        * Utils/GAME/game/config.h:
        * Utils/GAME/game/stdafx.h:
        * Utils/GAME/game/stlace.h:
        * Utils/GAME/game/utils/GAME_Utils.mpc:
        * Utils/GAME/game/utils/GAME_Utils_export.h:
        * Utils/GAME/game/utils/Point.h:
        * Utils/GAME/game/utils/Point.cpp:
        * Utils/GAME/game/utils/Point.inl:
        * Utils/GAME/game/utils/Project_Settings.h:
        * Utils/GAME/game/utils/Project_Settings.inl:
        * Utils/GAME/game/utils/Project_Settings.cpp:
        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:
        * Utils/GAME/game/xme/Atom.h:
        * Utils/GAME/game/xme/Atom.inl:
        * Utils/GAME/game/xme/Atom.cpp:
        * Utils/GAME/game/xme/Attribute.h:
        * Utils/GAME/game/xme/Attribute.inl:
        * Utils/GAME/game/xme/Attribute.cpp:
        * Utils/GAME/game/xme/Auto_Model_T.h:
        * Utils/GAME/game/xme/Auto_Model_T.inl:
        * Utils/GAME/game/xme/Auto_Model_T.cpp:
        * Utils/GAME/game/xme/Connection.h:
        * Utils/GAME/game/xme/Connection.inl:
        * Utils/GAME/game/xme/Connection.cpp:
        * Utils/GAME/game/xme/Exceptions.h:
        * Utils/GAME/game/xme/Exceptions.inl:
        * Utils/GAME/game/xme/Exceptions.cpp:
        * Utils/GAME/game/xme/FCO.h:
        * Utils/GAME/game/xme/FCO.inl:
        * Utils/GAME/game/xme/FCO.cpp:
        * Utils/GAME/game/xme/Folder.h:
        * Utils/GAME/game/xme/Folder.inl:
        * Utils/GAME/game/xme/Folder.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator.h:
        * Utils/GAME/game/xme/GME_ID_Generator.inl:
        * Utils/GAME/game/xme/GME_ID_Generator.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator_T.h:
        * Utils/GAME/game/xme/GME_ID_Generator_T.inl:
        * Utils/GAME/game/xme/GME_ID_Generator_T.cpp:
        * Utils/GAME/game/xme/Model.h:
        * Utils/GAME/game/xme/Model.inl:
        * Utils/GAME/game/xme/Model.cpp:
        * Utils/GAME/game/xme/Object.h:
        * Utils/GAME/game/xme/Object.inl:
        * Utils/GAME/game/xme/Object.cpp:
        * Utils/GAME/game/xme/Object_Type.h:
        * Utils/GAME/game/xme/Object_Type_Map.hpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.inl:
        * Utils/GAME/game/xme/Project.cpp:
        * Utils/GAME/game/xme/Reference.h:
        * Utils/GAME/game/xme/Reference.inl:
        * Utils/GAME/game/xme/Reference.cpp:
        * Utils/GAME/game/xme/Registry.h:
        * Utils/GAME/game/xme/Registry.inl:
        * Utils/GAME/game/xme/Registry.cpp:
        * Utils/GAME/game/xme/Registry_Node.h:
        * Utils/GAME/game/xme/Registry_Node.inl:
        * Utils/GAME/game/xme/Registry_Node.cpp:
        * Utils/GAME/game/xme/XME_Utils.h:
        * Utils/GAME/game/xme/XME_Utils.cpp:
        * Utils/GAME/game/xme/XME_Utils_T.cpp:
        * Utils/GAME/game/xme/functional.h:
        * Utils/GAME/game/xme/functional.cpp:
        * Utils/ModelUpgrade/Model_Upgrade.h:
        * Utils/ModelUpgrade/Model_Upgrade.cpp:

          . Please everything under the GAME namespace so that all the
            packages are consistant.

        * Utils/Point.h:
        * Utils/Point.inl:

          . Changed the x-, y-coordinate type to 'int'.

        * Utils/T3/t3/runtime/Auto_Model.h:
        * Utils/T3/t3/runtime/Auto_Model.inl:
        * Utils/T3/t3/runtime/Auto_Model.cpp:
        * Utils/T3/t3/runtime/Auto_Model_Impl.h:
        * Utils/T3/t3/runtime/Auto_Model_Impl.inl:
        * Utils/T3/t3/runtime/Auto_Model_Impl.cpp:
        * Utils/T3/t3/runtime/Event_Listener.h:
        * Utils/T3/t3/runtime/Event_Listener.inl:
        * Utils/T3/t3/runtime/Runtime_Engine.h:
        * Utils/T3/t3/runtime/Runtime_Engine.inl:
        * Utils/T3/t3/runtime/Runtime_Engine.cpp:
        * Utils/T3/t3/runtime/Symbol.h:
        * Utils/T3/t3/runtime/actors.hpp:

          . Updated to reflect changes to GAME above.

        * Utils/GAME/game/GME_export.h:

          Removed this file.

Wed May 26 02:14:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:

          . Bug fix where the MemberDecorator crashed when trying to
            draw the Member in the part browser.

Tue May 25 23:01:45 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/MetaBase.h:

          . Fix compile errors related to using GAME in a GME decorator.

Tue May 25 23:00:13 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/Decorator.h:
        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/DecoratorUtil.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/decorators/StdAfx.h:

          . Updated the decorator to work with GME 10. There are still some
            fixes needed, such as the font, but for the most part it works.
            This can therefore be considered a checkpoint.

Mon May 24 17:15:24 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.cpp:

          . Bug fix where some of the external port connections
            were generated incorrectly.

Tue May 25 15:29:21 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          . Updated implementation generate correct attribute for the
            interface semantics.

Mon May 24 15:07:09 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/xercesc/Static_Configuration.h:
        * Utils/xercesc/XercesString.h:

          . Re-defined how the static configuration singleton is declared
            to fix compile errors on non-Windows platforms.

Mon May 24 14:36:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/xercesc/Memory_Manager.h:
        * Utils/xercesc/Memory_Manager.cpp:
        * Utils/xercesc/Static_Configuration.h:
        * Utils/xercesc/Static_Configuration.cpp:
        * Utils/xercesc/XercesString.h:
        * Utils/xercesc/Xerces_Utils.mpc:

          . Bug fix where Xerces-C was not initialized properly for
            static builds of idl_to_picml.

        * Utils/xercesc/Xerces_Initializer.cpp:

          Removed this file.

Wed May 19 22:59:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          . Fix compile errors for GME 10.

Thu May 13 11:58:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLParadigm.wxs:

          . Updated PICML metamodel to GME 10.

Wed May 12 14:58:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/CoSMIC_Installer/CoSMIC_Installer.mpc:
        * Installer/CoSMIC_Installer/CoSMIC_common.wxs:
        * MPC/config/game_component.mpb:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSVisitor.cpp:

          . Fixed build errors related to the following files so that
            CoSMIC builds against GME 10.

Mon May 10 21:15:51 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * ChangeLog:
        * ChangeLogs/ChangeLog-10b:
        * RELEASE:
        * contrib:

          . CoSMIC version 0.7.8 was released. Tag: CoSMIC-0.7.8
            Moved the old ChangeLog to ChangeLogs/ChangeLog-10b.
            contrib svn:externals property back to HEAD now.
            RELEASE procedure was updated with some details.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
