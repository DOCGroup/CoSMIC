Mon Nov 22 20:27:25 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xme:

          Added new constraints to check invalid connections in the case
          of 'publishes' keyword.  Also updated a couple of constraints so
          that they fire on connection.  Fixed a too restrictive
          constraint that prevented a single event consumer from receiving
          events emitted by different emitters.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

        * PIM/PICML/examples/BasicSP.xme:
        * PIM/PICML/examples/RobotAssembly.xme:

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated all the of the above to reflect changes in the meta.

        * PIM/PICML/interpreters/packaging/PackageVisitor.h:
        * PIM/PICML/interpreters/packaging/UdmApp.cpp:
        * PIM/PICML/interpreters/packaging/UuidString.h:

          Added include guards and updated the message box displayed to
          use MB_ICONINFORMATION.

Mon Nov 22 10:02:33 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/MetricStream.cpp:

          Fixed errors in the MPC files to compile the Benchmarking files
          generated.

        * PIM/PICML/docs/BGML/BGML_Documentation_Guide.tex:
        * PIM/PICML/docs/BGML/RobotAssembly.png:

          Updated the BGML Documentation guide.

Fri Nov 19 17:59:36 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/docs/BGML:
          Created directory for BGML documentation

        * PIM/PICML/docs/BGML/Average.png:
        * PIM/PICML/docs/BGML/BGML_Documentation_Guide.tex:
        * PIM/PICML/docs/BGML/BGML-Latency-Complete.png:
        * PIM/PICML/docs/BGML/BGML-Latency.png:
        * PIM/PICML/docs/BGML/BGML-Task-Assoc.png:
        * PIM/PICML/docs/BGML/eventref.png:
        * PIM/PICML/docs/BGML/Insert-Benchmark.png:
        * PIM/PICML/docs/BGML/InsertFolder.png:
        * PIM/PICML/docs/BGML/Latency.png:
        * PIM/PICML/docs/BGML/Makefile:
        * PIM/PICML/docs/BGML/Max.png:
        * PIM/PICML/docs/BGML/New_Paradigm.png:
        * PIM/PICML/docs/BGML/operationref.png:
        * PIM/PICML/docs/BGML/RobotAssembly-Intr.png:
        * PIM/PICML/docs/BGML/RobotAssembly-OperationArgs.png:
        * PIM/PICML/docs/BGML/RobotAssembly-OperationCopy.png:
        * PIM/PICML/docs/BGML/RobotAssembly-Operations.png:
        * PIM/PICML/docs/BGML/task.png:
        * PIM/PICML/docs/BGML/taskset.png:
        * PIM/PICML/docs/BGML/Throughput.png:
        * PIM/PICML/docs/BGML/timer.png:

          BGML documentation guide first version committed.

Tue Nov 16 19:28:57 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/MPCStream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/MPCStream.cpp:
        * PIM/PICML/interpreters/BGML_Interpreter/BenchmarkStream.h:
        * PIM/PICML/interpreters/BGML_Interpreter/BenchmarkStream.cpp:

          Updated the BGML_Interpreter to fix the following issues:
          (1) All tasks synchronize via a barrier a barrier before starting
              to generate background load. Thanks to
              Andy <gokhale@dre.vanderbilt.edu> for pointing this out.
          (2) Along with the benchmarking files, there is now a mpc build
              file generated to build the benchmark files generated. Thanks
              to Andy for pointing this out.
          (3) Export files are also generated along with the benchmark files
              to ensure smooth working on Windows platforms.

Tue Nov 16 11:14:30 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.me:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:

          Updated the meta model, in particular, the MPC paradigm. This was
          required to fix the bug in the generated MPC file from the model and
          the need to differentiate between servant projects, which are either
          component servants or normal CORBA servants.

        * PIM/PICML/examples/RobotAssembly.xme:
        * PIM/PICML/examples/BasicSP.xme:

          Updated the MPC paradigms in each of the examples to generate the
          required MPC files. Also updated the implementation artifacts to reflect
          right set of dependencies between the artifacts so that the build
          paradigm generates the right MPC file

        * PIM/PICML/interpreters/MPC/MPCStream.h:
        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:

          Fixed the MPC interpreter generation. The fixes were the
          following: (1) generation of libpaths += in the MPC file (2)
          generation of libs += i.e. generation of dependant libraries (3)
          generation of component servant and normal CORBA servant project
          These should fix bugs pointed out by Theckla
          <theckla.louchious@lmco.com>

        * PIM/PICML/interpreters/*/Picml.h:
        * PIM/PICML/interpreters/*/Picml.cpp:
        * PIM/PICML/interpreters/*/Picml.xsd:
          Updated changes to the meta in all the interpreter
          directories.

Mon Nov 15 12:45:06 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to fix the change in
          name of some OCML interpreters.

        * Installer/RegisterParadigm/RegisterParadigm.cpp: Reverted some
          previous changes in the UnRegister().

        * PIM/PICML/decorators/Decorator.dsp: Fixed incorrect output
          directories in the project file.

        * PSM/CCM/OCML/interpreters/TAOServiceConfExportInterpreter/component.def:
          Fixed the name of the library in the export file.

Mon Nov 15 11:42:03 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/BasicSP.xme: New example developed during
          the hands-on demo to LMCO.

Tue Nov 9 18:44:04 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/UdmApp.cpp:
        * PIM/PICML/interpreters/cidl/UdmApp.cpp:

          Fixed wrong error messages when interpretation does not start
          from the right aspect

Mon Nov 8 22:39:21 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Benchmark_Stream.cpp:
          Changes to the intrepreter generated code to remove errors

        * PIM/PICML/examples/RobotAssembly.xme: Previous commit did not
          get the changes!

Mon Nov  8 20:02:25 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to include
          documentation.

        * PIM/PICML/docs/Importing_IDL.pdf:
        * PIM/PICML/docs/Interface_Definitions.pdf:

          Renamed the old versions which had PDF in their names.

        * PSM/CCM/OCML/paradigms/OCML.xme:
        * PSM/CCM/OCML/paradigms/TAO_Options.xme: Updated to reflect
          changes to include icons.

        * PIM/PICML/docs/Importing_IDL_PDF.pdf:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:

          Removed these files.

Mon Nov 08 18:28:11 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added "out_event_port_type" attribute to the OutEventPort atom.

        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp:

          Handled changes in metamodel to generate write XML code for
          the "out_event_port_type".

        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated to reflect changes in the metamodel.

Mon Nov 08 15:02:43 CST 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/examples/RobotAssemly.xme:

          Example updated to reflect implementation changes. Added an
          operation AcceptWorkOrder in the WorkOrderResponses interface.

Mon Nov 08 14:01:47 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/MPC/ComponentConfig.h:
        * PIM/PICML/interpreters/cidl/ComponentConfig.h:
        * PIM/PICML/interpreters/BGML/ComponentConfig.h:

          Added tool tip text for the interpreters

        * PIM/PICML/interpreters/BGML/BGML_Visitor.cpp:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML/IDL_Util.h:
        * PIM/PICML/interpreters/BGML/IDL_Util.cpp:
        * PIM/PICML/interpreters/BGML/MetricEmitter.cpp:
        * PIM/PICML/interpreters/BGML/MetricEmitter.h:
        * PIM/PICML/interpreters/BGML/TypeEmitter.cpp:

          Intrepreter changes so that now things work fine. These changes were
          necessitated as a different code path was tested and errors cropped
          up. Fixed this. So things should work.

Mon Nov 08 11:51:11 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:

          Added the hidden tree_file_name attribute to the Implementation
          Artifact. Every PICML element using the OCML metamodel should
          have this attribute for the OCML interpreter to read the .xml file.

Mon Nov 8 09:04:07 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/intrepreters/BGML_Intrepter/Benchmark_Stream.cpp:

          The generated code did not instantiate the template workload
          generated code. Fixed this bug

Sun Nov 7 19:29:16 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp:

          Fixed a bug related to the role type of USE_RT_Info
          connection type. Thanks Arvind Krishna <arvindk@dre.vanderbilt.edu>
          for reporting this bug.

Sun Nov 7 16:10:16 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/cidl/UdmApp.cpp:

          Fixed error message when intrepretation starts from the wrong
          aspect

Sat Nov  6 19:18:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/docs/ocml_sample_rule.png:
        * PIM/PICML/docs/ocml_rule_aspect.png:
        * PIM/PICML/docs/ocml_option_aspect.png:
        * PIM/PICML/docs/ocml_configurator.png:
        * PIM/PICML/docs/ocml.html:

          Committed the documentation for the OCML.

Sat Nov  6 19:09:15 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated to fix the bug with the
          interpreters not getting registered correctly.

Sat Nov  6 18:57:44 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Updated version of the script.

        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp: Minor fixes to
          remove debug messages.

        * PIM/PICML/Readme.rtf:
        * PIM/PICML/ReleaseNotes.rtf: Updated to reflect new release.

        * PIM/PICML/decorators/Decorator.dsp: Updated to dump the DLL into
          $PICML_ROOT/bin.

        * PIM/PICML/examples/RobotAssembly.xme: Updated to reflect the
          latest meta-model.

        * PIM/PICML/interpreters/BGML_Interpreter/PICML.h:
        * PIM/PICML/interpreters/BGML_Interpreter/PICML.cpp:
        * PIM/PICML/interpreters/MPC/PICML.h:
        * PIM/PICML/interpreters/MPC/PICML.cpp:
        * PIM/PICML/interpreters/cidl/PICML.h:
        * PIM/PICML/interpreters/cidl/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp: Updated to reflect
          changes in meta-model.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme: New versions of meta and
          associated files.

        * PSM/CCM/OCML/interpreters/OCMLConfiguratorInterpreter/OCMLConfigurationInterpreterBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/OCMLConfiguratorLibrary/LoadLibrary.cpp:
        * PSM/CCM/OCML/interpreters/OCMLConfiguratorLibrary/OCMLConfigurator.dsp:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/TAOServiceConfExportInterpreter/OCML_Svc_Conf_ExporterBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/TAOServiceConfExporter/SvcConfExporter.dsp:

          Updated to dump stuff into $PICML_ROOT/bin and $PICML_ROOT/lib.

        * PSM/CCM/OCML/paradigms/OCML.xme:
        * PSM/CCM/OCML/paradigms/TAO_Options.xme: Exported latest versions
          to avoid the dialog box about "Upgrade to latest version of
          paradigm".

        * PSM/CCM/OCML/paradigms/icons/Fonts.txt:
        * PSM/CCM/OCML/paradigms/icons/Thumbs.db:

          Removed these files.

Thu Nov 4 14:23:30 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
          Resolved errors arising from generating the DLL in release mode

Thu Nov  4 13:33:30 2004  Krishankumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/MPC/Component.dsp: More files which
          needed the same fix as done in the previous checkin.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc: Renamed the
          xerces-c_2 library target to xerces-c_2_5 for the time being to
          get around other issues.

Thu Nov 4 13:26:18 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
       * PIM/PICML/paradigms/PICML.xme:
       * PIM/PICML/examples/RobotAssembly.xme:
         The RobotAssembly.xme file was incorrectly saved as PICML.xme file.
         Fixed this error

Thu Nov  4 13:08:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.dsw:

          Added these files so the intepreter can be compiled with
          VC6.

Thu Nov  4 12:55:44 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp:
        * PIM/PICML/interpreters/cidl/Component.dsp:
        * PIM/PICML/interpreters/domain/Domain.dsp:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:

          Fixed these project files so that they:
          1. Place the generated dlls into $(PICML_ROOT)/bin
          2. Delete all the intermediate files that are generated,
             for both the Debug and Release versions.

          It can't be that hard to write project files...:-(

        * PIM/PICML/interpreters/PICML/PICML.mpc:
        * PIM/PICML/interpreters/PICML/PICML_Export.h:

        * PIM/PICML/interpreters/PICML_Debug.mwc:
        * PIM/PICML/interpreters/PICML_Release.mwc:

        * PIM/PICML/interpreters/Package/Package.mpc:
        * PIM/PICML/interpreters/Package/Package_Export.h:
        * PIM/PICML/interpreters/Package/SchemaVisitor.h:
        * PIM/PICML/interpreters/Package/SchemaVisitor.cpp:

        * PIM/PICML/interpreters/PackageComponent/CompIcon.ico:
        * PIM/PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.def:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.rc:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.h:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PackageComponent/Resource.h:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.h:
        * PIM/PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.h:
        * PIM/PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/PackageComponent/UdmConfig.h:

        * PIM/PICML/interpreters/debug_libs.mpb:
        * PIM/PICML/interpreters/default.features:
        * PIM/PICML/interpreters/picmllib.mpb:
        * PIM/PICML/interpreters/release_libs.mpb:

          Removed these files.

Thu Nov  4 09:49:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.cpp:

          Added display of message box to tell the user that generation
          is finished.

Wed Nov  3 18:34:58 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/BON2Component.cpp:
        * PIM/PICML/DependencyVisitor.cpp:
        * PIM/PICML/DependencyVisitor.h:
        * PIM/PICML/IDLEmitVisitor.cpp:
        * PIM/PICML/IDLEmitVisitor.h:
        * PIM/PICML/IDMLBonExtension.cpp:
        * PIM/PICML/IDMLBonExtension.h:

          Changed the name of the namespace containing the BonExtension
          and other classes to IDML from IDML_BON. Also made all the
          inheritances in the BonExtension classes virtual.

Tue Nov 2 14:30:48 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML-uml.xme:
          Added a rate attribute to the tasks in the BGML paradigm

        * PIM/PICML/interpreters/plan/Picml.h:
        * PIM/PICML/interpreters/plan/Picml.cpp:
        * PIM/PICML/interpreters/plan/Picml.xsd:
        * PIM/PICML/interpreters/package/Picml.h:
        * PIM/PICML/interpreters/package/Picml.cpp:
        * PIM/PICML/interpreters/package/Picml.xsd:
        * PIM/PICML/interpreters/domain/Picml.h:
        * PIM/PICML/interpreters/domain/Picml.cpp:
        * PIM/PICML/interpreters/domain/Picml.xsd:
        * PIM/PICML/interpreters/MPC/Picml.h:
        * PIM/PICML/interpreters/MPC/Picml.cpp:
        * PIM/PICML/interpreters/MPC/Picml.xsd:
        * PIM/PICML/interpreters/cidl/Picml.h:
        * PIM/PICML/interpreters/cidl/Picml.cpp:
        * PIM/PICML/interpreters/cidl/Picml.xsd:
        * PIM/PICML/interpreters/BGML/Picml.xsd:
        * PIM/PICML/interpreters/BGML/Picml.h:
        * PIM/PICML/interpreters/BGML/Picml.cpp:
          Updated all the interpreters to reflect the change in the meta model

        * PIM/PICML/examples/RobotAssembly.xme:
          Updated the example to reflect this change

        * PIM/PICML/interpreters/BGML/Benchmark_Stream.h:
        * PIM/PICML/interpreters/BGML/Benchmark_Stream.cpp:
        * PIM/PICML/interpreters/BGML/Metric_Emitter.h:
        * PIM/PICML/interpreters/BGML/Metric_Emitter.cpp:
          BGML intrepter was generating unncesssary Workload source files even when
          no workload elements were modeled. This bug was fixed with this change.

Mon Nov 1 10:40:39 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component.dsp:

          Fixed generation of export files for directories that have
          white space between them.

        * PIM/PICML/interpreters/BGML_Interpreter/Component.dsp:
        * PIM/PICML/interpreters/BGML_Interpreter/BGML_Visitor.cpp:

          Fixed some errors with Timer information in the interpreter

        * PIM/PICML/interpreters/cidl/Component.dsp:
          Ensured that the generated dll is in PICML_ROOT\bin

Mon Nov 01 09:51:31 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * Installer/RegisterParadigm/RegisterParadigm.cpp:

          OCML paradigm register/unregister code is updated in the installer.

Mon Nov 1 08:29:55 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/MPC/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component.dsp:
          Fixed bug reported by Theckla <theckla.louchios@lmco.com>
          involving generation of MPC files that conform to the old
          format.

Fri Oct 29 13:34:27 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/bin/orb_tree.xml:

          Added the OCML TAO options model into the bin directory.

Mon Oct 25 09:30:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed outpout directories to $PICML_ROOT/bin for the
          executable and DLL and $PICML_ROOT/lib for the .lib and
          .exp file.

Mon Oct 25 07:41:06 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Changed output directory to $PICML_ROOT/bin for DLLs and
          $PICML_ROOT/lib for .lib and .exp files.

Sun Oct 24 19:05:36 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/cidl/Component.dsp:
        * PIM/PICML/interpreters/MPC/Component.dsp:
        * PIM/PICML/interpreters/BGML/Componenent.dsp:
          Output directory changed to $(PICML_ROOT)/bin/ for the
          interpreter DLLs

Sun Oct 24 17:32:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/EQALBON2Component.dsp:

          Updated the project file to change the output directory
          of the EQAL dll library.

Fri Oct 22 23:35:57 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/interpreters/packaging/CompIcon.ico: Updated icon
          based on Doug's suggestion.

        * PIM/PICML/interpreters/packaging/UdmApp.cpp: Fixed bug where all
          the descriptor files were generated instead of the ones
          corresponding to the currently focused object in the model
          editor.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp: Updated as a sanity check. No
          modifications were made to the meta-model.

        * PIM/PICML/examples/RobotAssembly.xme:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.cpp:

          Updated the files to reflect updates to PICML.xml.

Fri Oct 22 10:45:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to get rid of the constraint violation in meta.

        * PIM/PICML/examples/RobotAssembly.xme:

          Updated to relex changes in EQAL.

Fri Oct 22 10:04:13 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/cidl/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/cidl/*:
          Added all the required interpreters files back in this directory

        * PIM/PICML/interpreters/MPC/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/MPC/*:
          Added all interpreter files to the top level directory

        * PIM/PICML/interpreters/BGML_Interpreter/Component/*:
          Deleted all interpreter files from this directory
        * PIM/PICML/interpreters/BGML_Interpreter/*:
          Added all interpreter files to this top level directory

          This Changelog is a succinct version, as all this is about moving
          a bunch of files around. The main motivation being: to have all the
          intrepreter files in the top level directory rather than having a
          Component directory (one level indirection). The culprit being
          the UDM wizard that added this indirection. This change also includes
          renaming the DLLs (intpreters) generated to "Foo.dll" rather than
          "Component.dll" to make more sense to all.

Thu Oct 21 23:50:24 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Corrected the BGML Meta model for constraint errors. Still there are
          errors from the EQAL meta-model

        * PIM/PICML/examples/RobotAssembly.xme:

          Added BGML capabilities to Example

Thu Oct 21 21:59:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to have a minor change of the EQAL metamodel.

        * PIM/PICML/examples/RobotAssembly.xme:

          Updated to relex changes in EQAL.

Thu Oct 21 21:28:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/ComponentLib.h
        * PIM/PICML/interpreters/EQAL/ComponentLib.tlb
        * PIM/PICML/interpreters/EQAL/ComponentLib_i.c
        * PIM/PICML/interpreters/EQAL/ComponentLib_p.c
        * PIM/PICML/interpreters/EQAL/dlldata.c
        * PIM/PICML/interpreters/EQAL/GMESources.txt
        * PIM/PICML/interpreters/EQAL/BON2Component.dsw

          Removed those files. Either because they are automatically
          generated or no longer used.

        * PIM/PICML/interpreters/EQAL/EQALInterpreter.dsw

          Added this file.

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp

          Updated to add a message box statement only.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to have a minor change of the EQAL metamodel.


Thu Oct 21 14:55:21 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PIM/PICML/examples/RobotAssembly.xme: Updated to work after
          Jeff's modifications which caused problems.

        * PIM/PICML/interpreters/packaging/CompIcon.ico: Updated to fix
          Doug's comments.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Updated to fix problems due to Jeff's previous commit.

        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.dsp:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLInterpreter.cpp:

          Updated to use environement variables instead of hard-coded
          paths. Fixed a compilation warning.

        * PIM/PICML/examples/BasicSP.xme:

          Removed this file.

Wed Oct 20 21:20:10 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/EQAL/BON2Component.cpp
        * PIM/PICML/interpreters/EQAL/BON2Component.h

          Fixed the linking error by adding missing IMPLEMENT_BONEXTENSION
          macro statements.

Wed Oct 20 14:47:10 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/examples/RobotAssembly.xme:

          Added the OCML configuration for Watch Manager and Human Machine
          Interface components.

Wed Oct 20 11:54:28 2004  Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/icons/rtec_resouce_factory.bmp:
        * PIM/PICML/paradigms/icons/ns_resource_factory.bmp

          Changed the icon size to make them smaller.

Mon Oct 18 17:54:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Changed aspect names to avoid clashes due to the stricter
          constraint checking of GME 4.9.27. Also rearranged some of
          the crowded paradigm sheets to make them more readable.

Fri Oct  8 14:17:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Fixed decorator to correctly display active and inactive
          objects when modifying the members of the GME Set
          CollocationGroup.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Added an item in the DeploymentPlan paradigm sheet to its
          aspect.

Fri Oct  8 13:33:41 2004  Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/interpreters/BGML_Interpreter/Component/PICML.cpp
        * PIM/PICML/interpreters/BGML_Interpreter/Component/PICML.h
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp
        * PIM/PICML/interpreters/MPC/Component/PICML.h
        * PIM/PICML/interpreters/domain/PICML.cpp
        * PIM/PICML/interpreters/domain/PICML.h
        * PIM/PICML/paradigms/PICML.xml
        * PIM/PICML/paradigms/PICML.xmp

          Updated the above files to fix interpreters build errors,
          since these files were not up to date before.

Fri Oct  1 14:33:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Modified code generation so a Component's inherited
          attributes are not generated in the derived Component,
          similarly to inherited ports. Also minor changes to
          formatting of code generation.

Thu Sep 30 16:13:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          - In EventChannelConfiguration paradigm sheet, removed
            duplicate inheritance that had been added to proxies.

          - In EventChannelConfiguration paradigm sheet, removed
            containment of abstract Model RTEC_Proxy in
            EventChannelConfiguration Model, since it was causing
            a duplicate containment error in the metainterpreter.

          - In ComponentType, added containment of Attribute in
            Component, since it was lost in the changes of

            Thu Sep 23 15:06:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Thu Sep 23 15:06:37 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/docs/Interface_Definitions.doc:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:
        * PIM/PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/picml_visitor.cpp:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modified handling of inheritance in Component model elements.
          Formerly, all inheritable types would contain one or more
          Inherits model elements which are GME References referring
          to the inherited type. However, for Components, this made it
          impossible for a Component to display its inherited ports
          in a model and to make connections to such ports. So a
          different mechanism for inheritance is now used for Components.
          A derived Component is created in a model by copying the
          intended base Component as a subtype. This change required
          associated modifications to the PICML decorator, the IDL
          Generator and the IDL Importer. Documentation was changed to
          reflect the update as well.

Thu Sep 16 17:02:20 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters.IDLImporter/XercesString.cpp:

          Added #include <string>.

        * PIM/PICML/interpreters.IDLImporter/picml_visitor.cpp:

          In VC6, a ternary operator ( ? : ) is causing an unnecessary
          and unwanted call to an XStr constructor. Adding const to
          the XMLCh* variable declaration at least makes sure the
          copying version of the constructor is called, so we don't
          have double deletion. This fix is specific to VC6, VC7.1
          does not require it.

Thu Sep 16 15:54:32 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
      * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xmp
        Resolved constraint violations from the BGML paradigm.

Mon Sep 06 19:03:32 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme
        * PIM/PICML/paradigms/PICML.xme
        * PIM/PICML/paradigms/PICML.xmp

          Added "configurator" field to the ImplementationArtifact.

Sat Sep  4 22:16:34 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modified decorator to include drawing of ComponentAssembly.

Fri Sep  3 17:11:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Fixed PICML decorator so that ToolTip messages are displayed
          for ports in referenced Component model elements the same
          as they are in the Component model element itself.

Fri Sep  3 11:23:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/resource.h:
        * PIM/PICML/decorators/Decorator.dsp:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Fixes and enhancements to PICML decorator:

          - All ports of the referenced component (including the
            inherited ones, see entry below) are displayed in
            ComponentRef.

          - The Inherits icon, if it referred to a component in a
            model, was displaying the ports of the referenced
            component (default GME decorator behavior). The PICML
            decorator now draws this icon, and does not display
            the ports.

Thu Sep  2 16:04:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.cpp:

          Cosmetic changes to source code.

        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:

          Modified generator for components to draw inherited ports from
          all ancestors.

Thu Sep 2 15:50:22 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/interpreters/IDL_Generator/ComponentConfig.h:
        * PIM/PICML/interpreters/IDL_Generator/Component.ico:
        * PIM/PICML/interpreters/IDL_Generator/IDLGenerator.vcproj:
        * PIM/PICML/interpreters/cidl/IDL_Stream.cp:

          Fixed some bugs after the demo to the LMCO folks.

Mon Aug 30 09:40:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML.xml:

          Fixed the wrong earlier check-in of the PICML.xml.

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:

          Reflects changes to the meta by adding new Picml.h and Picml.cpp
          and PICML.xsd

Sun Aug 29 22:46:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added OCL constraints to EQAL.

Sun Aug 29 20:01:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/examples/RobotAssembly.xme:

          Added real-time event channel configuration sheet
          for the RobotAssembly example.

Sat Aug 28 16:56:29 CDT 2004 Gan Deng <gan.deng@vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

        * PIM/PICML/paradigms/icons/conjunction_group.bmp
        * PIM/PICML/paradigms/icons/disjunction_group.bmp
        * PIM/PICML/paradigms/icons/ec_consumer.bmp
        * PIM/PICML/paradigms/icons/ec_dependency.bmp
        * PIM/PICML/paradigms/icons/ec_event.bmp
        * PIM/PICML/paradigms/icons/ec_option.bmp
        * PIM/PICML/paradigms/icons/ec_proxy.bmp
        * PIM/PICML/paradigms/icons/ec_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/ec_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/ec_resource_factory.bmp
        * PIM/PICML/paradigms/icons/ec_supplier.bmp
        * PIM/PICML/paradigms/icons/ec_supplier_id.bmp
        * PIM/PICML/paradigms/icons/event_sink.bmp
        * PIM/PICML/paradigms/icons/event_source.bmp
        * PIM/PICML/paradigms/icons/eventtype-port.bmp
        * PIM/PICML/paradigms/icons/eventtype.bmp
        * PIM/PICML/paradigms/icons/logical_and_group.bmp
        * PIM/PICML/paradigms/icons/ns_admin.bmp
        * PIM/PICML/paradigms/icons/ns_config.bmp
        * PIM/PICML/paradigms/icons/ns_constraint.bmp
        * PIM/PICML/paradigms/icons/ns_consumer.bmp
        * PIM/PICML/paradigms/icons/ns_event.bmp
        * PIM/PICML/paradigms/icons/ns_filter-port.bmp
        * PIM/PICML/paradigms/icons/ns_filter.bmp
        * PIM/PICML/paradigms/icons/ns_option.bmp
        * PIM/PICML/paradigms/icons/ns_proxy.bmp
        * PIM/PICML/paradigms/icons/ns_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/ns_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/ns_qos-port.bmp
        * PIM/PICML/paradigms/icons/ns_qos.bmp
        * PIM/PICML/paradigms/icons/ns_resource_factory-port.bmp
        * PIM/PICML/paradigms/icons/ns_resource_factory.bmp
        * PIM/PICML/paradigms/icons/ns_supplier.bmp
        * PIM/PICML/paradigms/icons/rt_info-port.bmp
        * PIM/PICML/paradigms/icons/rt_info.bmp
        * PIM/PICML/paradigms/icons/rtec_proxy_consumer.bmp
        * PIM/PICML/paradigms/icons/rtec_proxy_supplier.bmp
        * PIM/PICML/paradigms/icons/rtec_resource_factory-port.bmp
        * PIM/PICML/paradigms/icons/rtec_resource_factory.bmp

          Added icon files for the EQAL. Some of them are
          not used by current metamodel, which might be deleted later.

Thu Aug 26 10:46:29 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added an attribute to the meta of BGML

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
          Reflects changes to the meta by adding new Picml.h and Picml.cpp
          and PICML.xsd

Wed Aug 25 18:13:17 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
          Added a modeling elements including Workload and Task components
          to the BGML Paradigm

          * PIM/PICML/examples/RobotAssembly.xme:
          Added these components to the example

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:
          Reflects changes to the meta by adding new Picml.h and Picml.cpp


Wed Aug 25 17:01:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed XERCESROOT to XERCESCROOT.

Wed Aug 25 17:39:29 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/RegisterParadigm/RegisterParadigm.def: Fixed a really
          stupid bug where the paradigm unregister function was not
          exported from the DLL. This caused all sorts of problems during
          the creation of the PICML installer. Doh!

        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp:

          Minor modifications to installer message outputs.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Modifications to the meta which include renaming ComponentType
          to ComponentRef, addition of support for hierarchical component
          assemblies, additional constraints to ensure
          "correct-by-construction" of PICML models.

        * PIM/PICML/examples/RobotAssembly.xme: Updated to reflect the
          changes in the meta.

        * PIM/PICML/interpreters/packaging/PICML.h:
        * PIM/PICML/interpreters/packaging/PICML.cpp:
        * PIM/PICML/interpreters/packaging/PICML.xsd:
        * PIM/PICML/interpreters/packaging/PackageComponent.dsp:
        * PIM/PICML/interpreters/packaging/PackageVisitor.h:
        * PIM/PICML/interpreters/packaging/PackageVisitor.cpp:
        * PIM/PICML/interpreters/packaging/UdmApp.cpp:

          Added support for publishes keyword. Modifications to reflect
          changes in meta.

        * PIM/PICML/interpreters/plan/DeploymentPlan.dsp:
        * PIM/PICML/interpreters/plan/PICML.h:
        * PIM/PICML/interpreters/plan/PICML.cpp:
        * PIM/PICML/interpreters/plan/PICML.xsd:
        * PIM/PICML/interpreters/plan/PlanVisitor.h:
        * PIM/PICML/interpreters/plan/PlanVisitor.cpp:
        * PIM/PICML/interpreters/MPC/Component/Component.dsp:
        * PIM/PICML/interpreters/MPC/Component/ComponentLib.idl:
        * PIM/PICML/interpreters/MPC/Component/MPCStream.cpp:
        * PIM/PICML/interpreters/MPC/Component/PICML.h:
        * PIM/PICML/interpreters/MPC/Component/PICML.cpp:
        * PIM/PICML/interpreters/cidl/Component/Cidlc_Visitor.h:
        * PIM/PICML/interpreters/cidl/Component/Component.dsp:
        * PIM/PICML/interpreters/cidl/Component/PICML.h:
        * PIM/PICML/interpreters/cidl/Component/PICML.cpp:
        * PIM/PICML/interpreters/domain/Domain.dsp:
        * PIM/PICML/interpreters/domain/DomainVisitor.h:
        * PIM/PICML/interpreters/domain/PICML.h:
        * PIM/PICML/interpreters/domain/PICML.xsd:
        * PIM/PICML/interpreters/domain/PICML.cpp:

          Updated to reflect changes in meta-model.


        * PIM/PICML/paradigms/IDML-uml.xme:
        * PIM/PICML/paradigms/PredefinedTypes.xme:

          Removed these files are they are no longer needed.

        * PIM/PICML/interpreters/MPC/Component/Component.ncb:
        * PIM/PICML/interpreters/MPC/Component/ComponentLib.h:
        * PIM/PICML/interpreters/cidl/Component/Component.ncb:
        * PIM/PICML/interpreters/cidl/Component/ComponentLib.h:
        * PIM/PICML/interpreters/cidl/Component/ComponentLib_i.c:
        * PSM/CCM/CADML/Component/BONComponent.ncb:
        * PSM/CCM/CADML/Component/BONComponent.opt:
        * PSM/CCM/CADML/Component/CADMLBONComponent.plg:
        * PSM/CCM/EQAL/interpreters/BON2Component.ncb:
        * PSM/CCM/EQAL/interpreters/BON2Component.opt:
        * PSM/CCM/EQAL/interpreters/GenerateAllBON2Component.plg:
        * PSM/CCM/MIDCESS/interpreters/BON2Component.ncb:
        * PSM/CCM/MIDCESS/interpreters/BON2Component.opt:
        * PSM/CCM/MIDCESS/interpreters/TargetDataMLBON2Component.plg:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.ncb:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.opt:
        * PSM/CCM/OCML/interpreters/Configurator/Configurator.plg:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/BON2Component.ncb:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/BON2Component.opt:
        * PSM/CCM/OCML/interpreters/OCML_Interpreter/OCMLBON2Component.plg:

          Removed these crap. All these are generated files and have no
          place in CVS.

Wed Aug 25 14:43:48 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Removed the trailing 'D' from the Xerces library name.
          MPC can add a 'd' for the debug version on Windows
          and it will work since Windows is case-insensitive. This
          way you don't have to rename the installed Xerces library.

Wed Aug 25 13:52:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/XercesString.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Fixed VC6 compile errors.

Wed Aug 25 12:54:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Changed instances of XERCES_ROOT to XERCESROOT, as per
          Kitty's request.

Wed Aug 18 16:02:34 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          Replaced an overlooked string containing "IDML" with
          the substring replaced by "PICML".

Wed Aug 18 15:44:59 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/paradigms/Icons/component.bmp:
        * PIM/PICML/paradigms/Icons/componentref.bmp:

          Replaced the icons with the default icon used by GME in
          models for the metamodel element Model. The corresponding
          reference icon has the usual shortcut arrow added to the
          lower left corner.

Mon Aug 2 20:17:28 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PIM/PICML/MPC
          Project for creation and generation of MPC files to build
          Components

        * PIM/PICML/icons/comp-proj.bmp:
        * PIM/PICML/icons/Workspace.bmp:
        * PIM/PICML/icons/project.bmp:
          icons for the MPC project

        * PIM/PICML/MPC/Component/Component.dsp:
        * PIM/PICML/MPC/Component/Component.dsw:
        * PIM/PICML/MPC/Component/compicon.ico:
        * PIM/PICML/MPC/Component/Component.def:
        * PIM/PICML/MPC/Component/ComHelp.cpp:
        * PIM/PICML/MPC/Component/ComponentConfig.h:
        * PIM/PICML/MPC/Component/ComponentLib.h:
        * PIM/PICML/MPC/Component/ComponentObj.h:
        * PIM/PICML/MPC/Component/GMECOM.h:
        * PIM/PICML/MPC/Component/MPCStream.h:
        * PIM/PICML/MPC/Component/MPCStream.cpp:
        * PIM/PICML/MPC/Component/PICML.h:
        * PIM/PICML/MPC/Component/PICML.cpp:
        * PIM/PICML/MPC/Component/MPC_Visitor.h:
        * PIM/PICML/MPC/Component/MPC_Visitor.cpp:
        * PIM/PICML/MPC/Component/ComponentDll.h:
        * PIM/PICML/MPC/Component/ComponentDll.cpp:

          Interpreter files

        * PIM/PICML/MPC/Component/generate_export.pl:
          Perl script to generate the export file



Mon Aug  2 08:56:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/IDML/*.*:

          Removed the IDML directory and all its contents. Everything in it
          has been integrated into PICML.

Mon Aug  2 08:25:15 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL_PDF.pdf:
        * PIM/PICML/docs/Interface_Definitions_PDF.pdf:

          Renamed the PDF files below. Unfortunately necessary since
          they were originally added to CVS without the -kb option
          needed for PDF files, and with CVS there's no way to go
          back once this mistake is made.

Mon Aug  2 08:13:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/docs/Importing_IDL.doc:
        * PIM/PICML/docs/Importing_IDL.pdf:
        * PIM/PICML/docs/Interface_Definitions.doc:
        * PIM/PICML/docs/Interface_Definitions.pdf:

          New files, documentation/user guides for the interface
          definition part of PICML, generating and importing IDL
          from/into PICML, and references for mapping PICML interface
          definitions to IDL and vice versa. Including both MS Word and
          PDF versions for future merge into a larger PICML documentation
          file.

Sun Aug  1 23:16:49 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * xerces/*: Removed this directory as we are making binary
          releases of CoSMIC, which means that individual developers can
          have their own pre-built versions of xerces.

Sun Aug  1 21:08:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/Interpreters/IDLIMporter/IDLImporter.mpc:
        * PIM/PICML/Interpreters/IDLIMporter/TAO_PICML_BE_Export.h:
        * PIM/PICML/Interpreters/IDLIMporter/XercesString.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/XercesString.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_extern.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_global.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/be_global.h:
        * PIM/PICML/Interpreters/IDLIMporter/be_init.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/be_produce.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/picml_visitor.cpp:
        * PIM/PICML/Interpreters/IDLIMporter/picml_visitor.h:

          New files in a new directory, an IDL importer for PICML.

Thu Jul 29 16:03:55 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Turned the silencer option for the call to regsvr32 in the
          Custom Build Step back on after turning it off for debugging
          purposes and overlooked it in the checkin below.

Thu Jul 29 15:44:29 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLGenerator/BON2Component.sln:

          Renamed this file as the one below.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.sln:

          New file, renamed from the one removed above.

        * PIM/PICML/interpreters/IDLGenerator/ComponentLib.h:

          Removed this file since it is generated by ComponentLib.idl.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:

          Various fixes to get this to work in its new directory, since
          it was moved from IDML.

Thu Jul 29 12:24:29 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * Installer/CoSMIC-Installer.aip: Installer build file for
          CoSMIC.

        * Installer/MergeModules/atl.msm:
        * Installer/MergeModules/comcat.msm:
        * Installer/MergeModules/comct232.msm:
        * Installer/MergeModules/comct332.msm:
        * Installer/MergeModules/comctl32.msm:
        * Installer/MergeModules/comdlg32.msm:
        * Installer/MergeModules/dbgrid32.msm:
        * Installer/MergeModules/dblist32.msm:
        * Installer/MergeModules/mci32.msm:
        * Installer/MergeModules/mfc42.msm:
        * Installer/MergeModules/mfc42u.msm:
        * Installer/MergeModules/msadodc.msm:
        * Installer/MergeModules/msbind.msm:
        * Installer/MergeModules/mschrt20.msm:
        * Installer/MergeModules/mscomct2.msm:
        * Installer/MergeModules/mscomctl.msm:
        * Installer/MergeModules/mscomm32.msm:
        * Installer/MergeModules/msdatgrd.msm:
        * Installer/MergeModules/msdatlst.msm:
        * Installer/MergeModules/msdatrep.msm:
        * Installer/MergeModules/msdbrptr.msm:
        * Installer/MergeModules/msderun.msm:
        * Installer/MergeModules/msflxgrd.msm:
        * Installer/MergeModules/mshflxgd.msm:
        * Installer/MergeModules/mshtmpgr.msm:
        * Installer/MergeModules/msinet.msm:
        * Installer/MergeModules/msmapi32.msm:
        * Installer/MergeModules/msmask32.msm:
        * Installer/MergeModules/msrdc20.msm:
        * Installer/MergeModules/msrdo20.msm:
        * Installer/MergeModules/msstdfmt.msm:
        * Installer/MergeModules/msstkprp.msm:
        * Installer/MergeModules/msvbvm60.msm:
        * Installer/MergeModules/msvcirt.msm:
        * Installer/MergeModules/msvcp60.msm:
        * Installer/MergeModules/msvcrt.msm:
        * Installer/MergeModules/mswcrun.msm:
        * Installer/MergeModules/mswinsck.msm:
        * Installer/MergeModules/oareg.msm:
        * Installer/MergeModules/oleaut32.msm:
        * Installer/MergeModules/picclp32.msm:
        * Installer/MergeModules/sysinfo.msm:
        * Installer/MergeModules/tabctl32.msm:

          Merge modules for shipping with the installer.

        * Installer/RegisterParadigm/RegisterParadigm.def:
        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.dsp:
        * Installer/RegisterParadigm/RegisterParadigm.dsw:
        * Installer/RegisterParadigm/StdAfx.h:
        * Installer/RegisterParadigm/StdAfx.cpp:

          Implementation of the custom action DLL used to register a
          paradigm with GME when installing CoSMIC.

        * PIM/PICML/License.rtf: License file under which CoSMIC is
          distributed.

        * PIM/PICML/Readme.rtf: README file for CoSMIC.

        * PIM/PICML/ReleaseNotes.rtf: ReleaseNotes for CoSMIC.

        * PIM/PICML/interpreters/packaging/UdmApp.cpp: Fixed a bug where
          the return value of getPath() was being ignored, resulting in
          the interpreter generating files even when the user cancelled
          the action.

        * PIM/PICML/interpreters/domain/DomainVisitor.cpp:
        * PIM/PICML/interpreters/domain/UdmApp.cpp:

          Fixed a bug where the DomainVisitor was not set up correctly,
          which resulted in an "invalid cast" exception from UDM.
          Propagated the fix above to getPath().

        * PIM/PICML/interpreters/plan/UdmApp.cpp: Propagated the fix above
          to getPath().

        * PIM/ChangeLog:

          Removed this file as I moved it one level up here.

Thu Jul 29 10:23:14 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Changed the name of an Aggregate member to be different
          than the name of the Aggregate. A constraint to check for
          this has been added as described below.

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:
        * PICML/paradigms/PICML.xmp:

          - Added a constraint to check for Member names duplicating
            the name of their container.

          - Combined the two constraints for Metrics and Timer connections
            into one, which has the intended semantics of both.

        * PICML/paradigms/PICMLTemplate.xme:

          Updated the template PICML model to correspond with the
          updated meta-model.

Wed Jul 28 19:49:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/interpreters/IDLGenerator/BON2Component.cpp:
        * PICML/interpreters/IDLGenerator/BON2Component.h:
        * PICML/interpreters/IDLGenerator/BON2Component.sln:
        * PICML/interpreters/IDLGenerator/CompIcon.ico:
        * PICML/interpreters/IDLGenerator/Component.rc:
        * PICML/interpreters/IDLGenerator/ComponentConfig.h:
        * PICML/interpreters/IDLGenerator/ComponentLib.h:
        * PICML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * PICML/interpreters/IDLGenerator/DependencyVisitor.h:
        * PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PICML/interpreters/IDLGenerator/IDLGenerator.vcproj:
        * PICML/interpreters/IDLGenerator/IDLStream.cpp:
        * PICML/interpreters/IDLGenerator/IDLStream.h:
        * PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PICML/interpreters/IDLGenerator/Resource.h:
        * PICML/interpreters/IDLGenerator/StdAfx.cpp:
        * PICML/interpreters/IDLGenerator/StdAfx.h:
        * PICML/interpreters/IDLGenerator/component.def:

          New files, the IDL generator from IDML integrated into PICML.
          Selection of a File model element (or mutliple File elements)
          from which to start the generation is no longer necessary.
          The interpreter automatically finds all File elements in
          the model and generates an IDL file for each one.

Wed Jul 28 14:51:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentref.bmp:

          Changed these icons to be rectangular, eliminating
          aliasing problems when they are resized.

        * PICML/paradigms/icons/boundedstring.bmp:
        * PICML/paradigms/icons/file.bmp:
        * PICML/paradigms/icons/fixedcollection.bmp:
        * PICML/paradigms/icons/fixedpoint.bmp:
        * PICML/paradigms/icons/id.bmp:
        * PICML/paradigms/icons/manages.bmp:
        * PICML/paradigms/icons/namedtyperef.bmp:
        * PICML/paradigms/icons/predefined.bmp:
        * PICML/paradigms/icons/prefix.bmp:
        * PICML/paradigms/icons/version.bmp:

          Removed these unused icons from the repository.

        * PICML/decorators/CommonError.cpp:
        * PICML/decorators/CommonError.h:
        * PICML/decorators/CommonSmart.h:
        * PICML/decorators/Decorator.cpp:
        * PICML/decorators/Decorator.dsp:
        * PICML/decorators/Decorator.dsw:
        * PICML/decorators/Decorator.h:
        * PICML/decorators/Decorator.rc:
        * PICML/decorators/Decorator.rgs:
        * PICML/decorators/DecoratorApp.cpp:
        * PICML/decorators/DecoratorApp.def:
        * PICML/decorators/DecoratorConfig.h:
        * PICML/decorators/DecoratorLib.idl:
        * PICML/decorators/DecoratorStd.h:
        * PICML/decorators/DecoratorUtil.cpp:
        * PICML/decorators/DecoratorUtil.h:
        * PICML/decorators/IDMLDecorators.cpp:
        * PICML/decorators/IDMLDecorators.h:
        * PICML/decorators/MaskedBitmap.cpp:
        * PICML/decorators/MaskedBitmap.h:
        * PICML/decorators/StdAfx.cpp:
        * PICML/decorators/StdAfx.h:
        * PICML/decorators/resource.h:

          New directory and files for PICML decorator.

Tue Jul 27 17:38:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:

          Removed the collection elements added to the PredefinedTypes
          folder in

          Tue Jul 27 16:39:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          and updated all related files.

Tue Jul 27 16:39:25 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:

          Integrated the IDML paradigm into PICML. Also added
          elements to the PredefinedTypes folder representing
          collections of commonly used predefined types.

        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:

          Added the new predefined types described above to these
          models.

Fri Jul 23 15:12:09 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PICML/interpreters/cidl/Component/IDLStream.cpp:
          Fixed home executor generator for the cidl file. Thanks to Gan
          for pointing this out

Thu Jul 22 22:15:04 CDT 2004 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>
        * PICML/interpreters/cidl:
          Added support for generation of cidl from the models

        * PICML/interpreters/Component:
          cidl intrepreter directory

        * PICML/interpreters/cidl/Component/UdmApp.h:
        * PICML/interpreters/cidl/Component/UdmApp.cpp:
        * PICML/interpreters/cidl/Component/IDLStream.h:
        * PICML/interpreters/cidl/Component/IDLStream.cpp:
        * PICML/interpreters/cidl/Component/PICML.h:
        * PICML/interpreters/cidl/Component/PICML.cpp:
        * PICML/interpreters/cidl/Component/Cidlc_Visitor.h:
        * PICML/interpreters/cidl/Component/Cidlc_Visitor.cpp:
        * PICML/interpreters/cidl/Component/RawComponent.cpp:
        * PICML/interpreters/cidl/Component/RawComponent.h:
        * PICML/interpreters/cidl/Component/StdAfx.cpp:
        * PICML/interpreters/cidl/Component/CompIcon.ico:
        * PICML/interpreters/cidl/Component/ComponentConfig.h:
        * PICML/interpreters/cidl/Component/ComponentDll.h:
        * PICML/interpreters/cidl/Component/ComponentDll.cpp:
        * PICML/interpreters/cidl/Component/ComponentObj.h:
        * PICML/interpreters/cidl/Component/ComponentObj.cpp:
        * PICML/interpreters/cidl/Component/GMECOM.h:
        * PICML/interpreters/cidl/Component/Component.dsw:
        * PICML/interpreters/cidl/Component/Component.ncb:
        * PICML/interpreters/cidl/Component/Component.def:
        * PICML/interpreters/cidl/Component/Component.dsp:
        * PICML/interpreters/cidl/Component/ComHelp.h:
        * PICML/interpreters/cidl/Component/ComHelp.cpp:
          Workspace for the building the cidl intrepreter

Thu Jul 22 18:54:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDML-Meta.xme:

          Updated metamodel, fixed constraint for inheritable types that checks
          for unique contained names so it will skip the PrivateFlag atoms
          and MakeMemberPrivate connections that may appear in a valuetype
          or eventtype.

Thu Jul 22 000:56:30 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.h:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:

          Added code to generate the type name for instances of components,
          when such instances are added to a PICML model.

Wed Jul 21 13:30:29 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:

          Updated the export file and the XML file required to generate
          the interpreter files from UDM

        * PICML/paradigms/Integrating-Tools-with-PICML.txt:

          README files for all tool developers on the steps required for
          them to integrate their tools with the PICML meta.

        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:

          Updated the header and .cpp files generated from UDM required
          for the interpreters

Tue Jul 20 15:47:25 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xmp:
          Added the Benchmark generation paradigm into PICML. As of now
          only the xmp file has been modified

        * PICML/paradigms/icons/Average.bmp:
        * PICML/paradigms/icons/Min.bmp:
        * PICML/paradigms/icons/Max.bmp:
        * PICML/paradigms/icons/Max.bmp:
        * PICML/paradigms/icons/Jitter.bmp:
        * PICML/paradigms/icons/Latency.bmp:
        * PICML/paradigms/icons/Throughput.bmp:
        * PICML/paradigms/icons/timer.bmp:
        * PICML/paradigms/icons/operationref.bmp:
          Icons used in the paradigm

Thu Jul 15 18:03:06 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICML.xme: Updated to reflect changes made by
          Jeff below to fix the issues with Port connections not showing
          up in PICML models. Now things are working fine!

        * PICML/paradigms/PICML.xml: Regenerated file to reflect change
          in meta.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme: Updated to reflect changes in
          library, i.e IDML, and changes to PICML.

        * PICML/examples/RobotAssembly.xme: Updated to reflect changes in
          meta.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.xsd:
        * PICML/interpreters/plan/PICML.cpp: Regenerated to reflect
          regeneration of PICML.xml.


Thu Jul  8 14:13:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/interpreters/IDLGenerator/ComponentLib.h:
        * IDML/interpreters/IDLGenerator/ComponentLib_i.c:
        * IDML/interpreters/IDLGenerator/ComponentLib_p.c:

          Removed these files from CVS - they are generated by
          the build.

        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.dsw:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:

          Fiz for a bug with seeing PICML connections to
          component ports. Apparently the IDML decorator, after taking
          over the drawing of a component and its ports, was not getting
          port information back to GME and ultimately to the GME
          default decorator, which draws everything the IDML decorator
          does not.

        * IDML/paradigms/IDML.xmp:

          Apparently this file was not checked in as indicated in the
          ChangeLog entry

          Tue Jun 15 10:47:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>.

Wed Jul 14 18:12:52 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/paradigms/PICML.xml: Regenerated the xml file to the
          updated version of the meta. Forgot to do this with the
          previous check-in.

        * PICML/paradigms/PICML-uml.xme: Updated version of the export.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.cpp:
        * PICML/interpreters/plan/PICML.xsd:

          Updated version of the generated API files.


Tue Jul 13 17:14:51 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.cpp: Fixed the bug
          with generating "ConfigProperty" instead of "configProperty".

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated to use "Packaging" as the
          aspect name instead of "Package".

        * PICML/examples/RobotAssembly.xme: Changes to reflect the above
          change.


Thu Jun 24 10:57:57 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:

          Updated the domain descriptor interpreter.

Thu Jun 24 10:54:06 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/PlanVisitor.cpp:

          Made a change to fix a typo.

Thu Jun 24 10:03:47 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Fixed a typo in an attribute name.

Tue Jun 22 15:24:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Updated the robot assembly model to incorporate the
          IDL changes.

Mon Jun 21 15:50:02 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Fixed a couple of typos in
          the model which caused exceptions in the run-time.

Mon Jun 21 13:40:51 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.rc: Updated decorator.rc to include the
          right path for the icon files.

        * PICML/examples/RobotAssembly.xme: Updated model to the latest
          version.

        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/plan/PICML.h:
        * PICML/interpreters/plan/PICML.xsd:
        * PICML/interpreters/plan/PICML.cpp: Regenerated files to match
          the updates to the meta.

        * PICML/paradigms/PICML.xml: Regenerated to match changes in the
          meta.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated meta to fix problems with
          using Jeff's decorator. I changed the imported IDML.mga to
          remove the Decorator attribute on Component inside
          ComponentType folder of IDML.

        * PICML/paradigms/icons/PackageReference.bmp:
        * PICML/paradigms/icons/aggregate.bmp:
        * PICML/paradigms/icons/aggregateref.bmp:
        * PICML/paradigms/icons/alias.bmp:
        * PICML/paradigms/icons/aliasref.bmp:
        * PICML/paradigms/icons/attribute.bmp:
        * PICML/paradigms/icons/boolean.bmp:
        * PICML/paradigms/icons/boxed.bmp:
        * PICML/paradigms/icons/boxedref.bmp:
        * PICML/paradigms/icons/byte.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentfactory.bmp:
        * PICML/paradigms/icons/componentfactoryref.bmp:
        * PICML/paradigms/icons/componentref.bmp:
        * PICML/paradigms/icons/const.bmp:
        * PICML/paradigms/icons/discriminator.bmp:
        * PICML/paradigms/icons/enum.bmp:
        * PICML/paradigms/icons/enumref.bmp:
        * PICML/paradigms/icons/enumvalue.bmp:
        * PICML/paradigms/icons/event.bmp:
        * PICML/paradigms/icons/eventref.bmp:
        * PICML/paradigms/icons/exception.bmp:
        * PICML/paradigms/icons/exceptionref.bmp:
        * PICML/paradigms/icons/factory.bmp:
        * PICML/paradigms/icons/fileref.bmp:
        * PICML/paradigms/icons/genericobject.bmp:
        * PICML/paradigms/icons/genericvalue.bmp:
        * PICML/paradigms/icons/genericvalueobject.bmp:
        * PICML/paradigms/icons/getexception.bmp:
        * PICML/paradigms/icons/in.bmp:
        * PICML/paradigms/icons/inevent_lf.bmp:
        * PICML/paradigms/icons/inevent_rt.bmp:
        * PICML/paradigms/icons/ineventport.bmp:
        * PICML/paradigms/icons/inherits.bmp:
        * PICML/paradigms/icons/inout.bmp:
        * PICML/paradigms/icons/label.bmp:
        * PICML/paradigms/icons/long.bmp:
        * PICML/paradigms/icons/lookup.bmp:
        * PICML/paradigms/icons/lookupkey.bmp:
        * PICML/paradigms/icons/member.bmp:
        * PICML/paradigms/icons/object.bmp:
        * PICML/paradigms/icons/objectref.bmp:
        * PICML/paradigms/icons/oneway.bmp:
        * PICML/paradigms/icons/out.bmp:
        * PICML/paradigms/icons/outevent_lf.bmp:
        * PICML/paradigms/icons/outevent_rt.bmp:
        * PICML/paradigms/icons/outeventport.bmp:
        * PICML/paradigms/icons/package.bmp:
        * PICML/paradigms/icons/private.bmp:
        * PICML/paradigms/icons/providedrequestport.bmp:
        * PICML/paradigms/icons/readonlyattribute.bmp:
        * PICML/paradigms/icons/realnumber.bmp:
        * PICML/paradigms/icons/receptacle_lf.bmp:
        * PICML/paradigms/icons/receptacle_rt.bmp:
        * PICML/paradigms/icons/requiredrequestport.bmp:
        * PICML/paradigms/icons/return.bmp:
        * PICML/paradigms/icons/setexception.bmp:
        * PICML/paradigms/icons/setexceptionref.bmp:
        * PICML/paradigms/icons/short.bmp:
        * PICML/paradigms/icons/string.bmp:
        * PICML/paradigms/icons/supports.bmp:
        * PICML/paradigms/icons/switchedaggregate.bmp:
        * PICML/paradigms/icons/switchedaggregateref.bmp:
        * PICML/paradigms/icons/twoway.bmp:
        * PICML/paradigms/icons/typeencoding.bmp:
        * PICML/paradigms/icons/typekind.bmp:
        * PICML/paradigms/icons/value.bmp:
        * PICML/paradigms/icons/valueref.bmp:
        * PICML/paradigms/icons/variablecollection.bmp:
        * PICML/paradigms/icons/variablecollectionref.bmp: Updated icons
          to match Jeff's version of the icons.

Sun Jun 20 19:32:17 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/README: Updated to include preliminary documentation on
          building the PICML interpreter.

Sun Jun 20 18:12:55 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/CompIcon.ico:
        * PICML/interpreters/domain/ComponentConfig.h:
        * PICML/interpreters/domain/Domain.dsp:
        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:
        * PICML/interpreters/domain/UdmApp.cpp:

          Made a firct cut version of the interpreter that will generate
          Domain descriptors.

Sun Jun 20 19:00:23 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated model to include
          ComponentIOR property.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp: First version of the
          PICML interpreter which generates all types of descriptors.

        * PICML/paradigms/PICML.xmp: Updated meta to fix problems with
          some constraints which triggered inappropriately.

        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme: Updated to reflect changes in the
          meta.

Sun Jun 20 17:10:38 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/domain/CompIcon.ico:
        * PICML/interpreters/domain/Component.def:
        * PICML/interpreters/domain/Component.rc:
        * PICML/interpreters/domain/ComponentConfig.h:
        * PICML/interpreters/domain/Domain.dsp:
        * PICML/interpreters/domain/Domain.dsw:
        * PICML/interpreters/domain/DomainVisitor.cpp:
        * PICML/interpreters/domain/DomainVisitor.h:
        * PICML/interpreters/domain/PICML.cpp:
        * PICML/interpreters/domain/PICML.h:
        * PICML/interpreters/domain/PICML.xsd:
        * PICML/interpreters/domain/RawComponent.cpp:
        * PICML/interpreters/domain/RawComponent.h:
        * PICML/interpreters/domain/StdAfx.cpp:
        * PICML/interpreters/domain/StdAfx.h:
        * PICML/interpreters/domain/UdmApp.cpp:
        * PICML/interpreters/domain/UdmApp.h:
        * PICML/interpreters/domain/UdmConfig.h:
        * PICML/interpreters/domain/UuidString.cpp:
        * PICML/interpreters/domain/UuidString.h:
        * PICML/interpreters/domain/XercesString.cpp:
        * PICML/interpreters/domain/XercesString.h:
        * PICML/interpreters/domain/resource.h:

          Checked in the files needed for creating the Domain
          descriptor (.cdd) from the PICML models.

Sun Jun 20 16:49:13 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/DeploymentPlan.dsp:
        * PICML/interpreters/plan/PlanVisitor.cpp:
        * PICML/interpreters/plan/PlanVisitor.h:
        * PICML/interpreters/plan/UdmApp.cpp:

          Checked in the interpreter that creates DeploymentPlan
          descriptor.

Sun Jun 20 11:06:35 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/examples/RobotAssembly.xme:

          Updated the RobotAssembly after registering the Deployment
          Plan interpreter.

Sun Jun 20 10:37:03 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/Component.def:

          Made changes to fix the name of the DLL exported.

Sat Jun 19 19:31:27 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated model to include
          ComponentIOR property.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp: Updated
          interpreter to generate PackageConfiguration descriptor and
          ComponentPackage descriptor. Two more types of descriptors are
          left.

Sat Jun 19 18:12:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/CompIcon.ico:
        * PICML/interpreters/plan/ComponentConfig.h:
        * PICML/interpreters/plan/DeploymentPlan.dsp:
        * PICML/interpreters/plan/DeploymentPlan.dsw:
        * PICML/interpreters/plan/PlanVisitor.cpp:
        * PICML/interpreters/plan/PlanVisitor.h:
        * PICML/interpreters/plan/UdmApp.cpp:

          Made changes to the DeploymentPlan interpreters.

Sat Jun 19 16:50:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/interpreters/plan/CompIcon.ico:
        * PICML/interpreters/plan/Component.def
        * PICML/interpreters/plan/Component.rc
        * PICML/interpreters/plan/ComponentConfig.h
        * PICML/interpreters/plan/DeploymentPlan.dsp
        * PICML/interpreters/plan/DeploymentPlan.dsw
        * PICML/interpreters/plan/PICML.cpp
        * PICML/interpreters/plan/PICML.h
        * PICML/interpreters/plan/PICML.xsd
        * PICML/interpreters/plan/PlanVisitor.cpp
        * PICML/interpreters/plan/PlanVisitor.h
        * PICML/interpreters/plan/RawComponent.cpp
        * PICML/interpreters/plan/RawComponent.h
        * PICML/interpreters/plan/StdAfx.cpp
        * PICML/interpreters/plan/StdAfx.h
        * PICML/interpreters/plan/UdmApp.cpp
        * PICML/interpreters/plan/UdmApp.h
        * PICML/interpreters/plan/UdmConfig.h
        * PICML/interpreters/plan/UuidString.cpp
        * PICML/interpreters/plan/UuidString.h
        * PICML/interpreters/plan/XercesString.cpp
        * PICML/interpreters/plan/XercesString.h
        * PICML/interpreters/plan/resource.h

          Added new files for the DeploymentPlan interpretation.

Sat Jun 19 16:25:35 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp: Added support to
          generate ImplementationArtifact Descriptors and
          TopLevelPackageDescriptor. Rest in pipeline. Checking in now so
          that Jai can start on his part.

Fri Jun 18 14:22:30 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/docs/IDML_User_Manual.pdf:

          New file, user's manual and reference for IDML and IDLGenerator.

Tue Jun 15 10:47:57 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Added constraint to metamodel that checks for legal values
          (type and range) for constants. Note that there seems to
          be a problem with GME's Constraint Manager using toInteger()
          to convert a constant's string value to an integer if
          there is a '-' prefix to the string of digits. This issue
          has been raised with gme-users. Also updated template models
          and example model to use the updated paradigm.

Mon Jun 14 18:19:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradimgs/IDML-Meta.xme:
        * IDML/paradimgs/IDML.xmp:
        * IDML/paradimgs/IDMLTemplate.xme:
        * IDML/paradimgs/PredefinedTypes.xme:

          Assigned the decorator below to the appropriate metamodel
          elements, and updated the model template files.

Mon Jun 14 17:56:33 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/decorators/CommonError.cpp:
        * IDML/decorators/CommonError.h:
        * IDML/decorators/CommonSmart.h:
        * IDML/decorators/Decorator.cpp:
        * IDML/decorators/Decorator.dsp:
        * IDML/decorators/Decorator.dsw:
        * IDML/decorators/Decorator.h:
        * IDML/decorators/Decorator.rc:
        * IDML/decorators/Decorator.rgs:
        * IDML/decorators/DecoratorApp.cpp:
        * IDML/decorators/DecoratorApp.def:
        * IDML/decorators/DecoratorConfig.h:
        * IDML/decorators/DecoratorLib.idl:
        * IDML/decorators/DecoratorStd.h:
        * IDML/decorators/DecoratorUtil.cpp
        * IDML/decorators/DecoratorUtil.h:
        * IDML/decorators/IDMLDecorators.cpp:
        * IDML/decorators/IDMLDecorators.h:
        * IDML/decorators/MaskedBitmap.cpp:
        * IDML/decorators/MaskedBitmap.h:
        * IDML/decorators/StdAfx.cpp:
        * IDML/decorators/StdAfx.h:
        * IDML/decorators/resource.h:

          New files, a decorator for IDML which:

          - Checks for Members and AttributeMembers to have non-null
            references, and when they do (or when they change), replaces
            the current icon with either the appropriate
            PredefinedType icon or the reference version of the
            appropriate named type icon. This will update immediately
            when something is dragged as a reference and dropped on
            an existing Member or AttributeMember element.

          - Makes sure port icons are facing in the right direction.
            The ProvidedRequestPort icon is symmetrical, but each of
            the others has two mirror image icons, one of which is selected
            by the decorator each time the screen is redrawn. Some of
            the code for this feature was adapted from the default
            decorator in GME source code.

Mon Jun 14 08:57:13 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/UuidString.cpp:
        * PICML/interpreters/packaging/UuidString.h:
        * PICML/interpreters/packaging/XercesString.cpp:
        * PICML/interpreters/packaging/XercesString.h:

          Checking in to work on the office machine.

Sun Jun 13 18:45:52 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated to match Robert's
          latest version.

        * PICML/paradigms/PICML.xml:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PICML.cpp: Regenerated after minor
          changes to PICML.

        * PICML/interpreters/packaging/UuidString.h:
        * PICML/interpreters/packaging/UuidString.cpp: New files which
          will generate UUIDs.

        * PICML/interpreters/packaging/PackageComponent.dsp:
        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/XercesString.h:
        * PICML/interpreters/packaging/XercesString.cpp: Closer to
          getting the interpreter working.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Updated to reflect changes in the
          meta.

Fri Jun 11 16:07:48 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/packaging/PackageComponent.dsp: Removed the
          /s flag to regsvr32 to catch errors in interpreter
          installation.

        * PICML/interpreters/packaging/PackageVisitor.h:
        * PICML/interpreters/packaging/PackageVisitor.cpp: New files
          moved from SchemaVisitor.

        * PICML/interpreters/packaging/UdmApp.cpp: Initial code. Checking
          it in to retrieve it from other machines.

        * PICML/interpreters/packaging/XercesString.h:
        * PICML/interpreters/packaging/XercesString.cpp: Utility class to
          make working with Xerces strings easier.

        * PICML/interpreters/packaging/SchemaVisitor.h:
        * PICML/interpreters/packaging/SchemaVisitor.cpp:

          Removed these files as the name SchemaVisitor was not
          appropriate.

Thu Jun 10 18:53:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/Icons/ineventport.bmp:
        * IDML/paradigms/Icons/member.bmp:
        * IDML/paradigms/Icons/outeventport.bmp:
        * IDML/paradigms/Icons/requiredrequestport.bmp:

          Resized these icons to 64x64 pixels. They got overlooked
          when I resized all icons the first time.

Wed Jun  9 16:28:03 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/Package/Package.mpc: Added PACKAGE_BUILD_DLL
          flag to ensure that the proper export flags are set up.

        * PICML/interpreters/Package/SchemaVisitor.h:
        * PICML/interpreters/Package/SchemaVisitor.cpp: Initial check-in
          to get the interpreter project organized.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: Added
          use of precompiled headers through StdAfx.h.

        * PICML/interpreters/PackageComponent/PackageComponent.rc:
          Removed the resource entries for Dialog boxes and Uml.xsd.

        * PICML/interpreters/PackageComponent/Resource.h: New version of
          file needed for the project to build.

        * PICML/interpreters/debug_libs.mpb: Added the list of individual
          libraries instead of UdmDll.

        * PICML/interpreters/picmllib.mpb: Added /Zm200 to the project so
          that it will compile PICML.cpp.

        * PICML/interpreters/release_libs.mpb: Added a list of individual
          libraries instead of UdmDll.


        * PICML/interpreters/packaging/CompIcon.ico:
        * PICML/interpreters/packaging/Component.def:
        * PICML/interpreters/packaging/Component.rc:
        * PICML/interpreters/packaging/ComponentConfig.h:
        * PICML/interpreters/packaging/PICML.h:
        * PICML/interpreters/packaging/PICML.cpp:
        * PICML/interpreters/packaging/PICML.xsd:
        * PICML/interpreters/packaging/PackageComponent.dsp:
        * PICML/interpreters/packaging/PackageComponent.dsw:
        * PICML/interpreters/packaging/RawComponent.h:
        * PICML/interpreters/packaging/RawComponent.cpp:
        * PICML/interpreters/packaging/SchemaVisitor.h:
        * PICML/interpreters/packaging/SchemaVisitor.cpp:
        * PICML/interpreters/packaging/StdAfx.h:
        * PICML/interpreters/packaging/StdAfx.cpp:
        * PICML/interpreters/packaging/UdmApp.h:
        * PICML/interpreters/packaging/UdmApp.cpp:
        * PICML/interpreters/packaging/UdmConfig.h:
        * PICML/interpreters/packaging/resource.h:

          New workspace which brings all the files together and creates a
          single Interpreter DLL. I am taking this approach since the
          other mechanism throws up non-trivial errors and is in general a
          big ball of mud. We need the interpreter to work more than the
          whole infrastructure working with MPC.

Tue Jun  8 14:51:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/Icons/aggregateref.bmp:
        * IDML/paradigms/Icons/aliasref.bmp:
        * IDML/paradigms/Icons/boolean.bmp:
        * IDML/paradigms/Icons/boxedref.bmp:
        * IDML/paradigms/Icons/byte.bmp:
        * IDML/paradigms/Icons/componentfactoryref.bmp:
        * IDML/paradigms/Icons/componentref.bmp:
        * IDML/paradigms/Icons/genericobject.bmp:
        * IDML/paradigms/Icons/genericvalue.bmp:
        * IDML/paradigms/Icons/genericvalueobject.bmp:
        * IDML/paradigms/Icons/inevent_lf.bmp:
        * IDML/paradigms/Icons/inevent_rt.bmp:
        * IDML/paradigms/Icons/long.bmp:
        * IDML/paradigms/Icons/outevent_lf.bmp:
        * IDML/paradigms/Icons/outevent_rt.bmp:
        * IDML/paradigms/Icons/realnumber.bmp:
        * IDML/paradigms/Icons/receptacle_lf.bmp:
        * IDML/paradigms/Icons/receptacle_rt.bmp:
        * IDML/paradigms/Icons/setexceptionref.bmp:
        * IDML/paradigms/Icons/short.bmp:
        * IDML/paradigms/Icons/string.bmp:
        * IDML/paradigms/Icons/switchedaggregateref.bmp:
        * IDML/paradigms/Icons/typeencoding.bmp:
        * IDML/paradigms/Icons/typekind.bmp:
        * IDML/paradigms/Icons/valueref.bmp:
        * IDML/paradigms/Icons/variablecollectionref.bmp:

          New icons, used when the type associated with the icon
          is used as a reference.

        * IDML/paradigms/Icons/aggregate.bmp:
        * IDML/paradigms/Icons/alias.bmp:
        * IDML/paradigms/Icons/attribute.bmp:
        * IDML/paradigms/Icons/boxed.bmp:
        * IDML/paradigms/Icons/component.bmp:
        * IDML/paradigms/Icons/componentfactory.bmp:
        * IDML/paradigms/Icons/const.bmp:
        * IDML/paradigms/Icons/discriminator.bmp:
        * IDML/paradigms/Icons/enum.bmp:
        * IDML/paradigms/Icons/enumref.bmp:
        * IDML/paradigms/Icons/enumvalue.bmp:
        * IDML/paradigms/Icons/event.bmp:
        * IDML/paradigms/Icons/eventref.bmp:
        * IDML/paradigms/Icons/exception.bmp:
        * IDML/paradigms/Icons/exceptionref.bmp:
        * IDML/paradigms/Icons/factory.bmp:
        * IDML/paradigms/Icons/fileref.bmp:
        * IDML/paradigms/Icons/getexception.bmp:
        * IDML/paradigms/Icons/in.bmp:
        * IDML/paradigms/Icons/inherits.bmp:
        * IDML/paradigms/Icons/inout.bmp:
        * IDML/paradigms/Icons/label.bmp:
        * IDML/paradigms/Icons/lookup.bmp:
        * IDML/paradigms/Icons/lookupkey.bmp:
        * IDML/paradigms/Icons/member.bmp:
        * IDML/paradigms/Icons/object.bmp:
        * IDML/paradigms/Icons/objectref.bmp:
        * IDML/paradigms/Icons/oneway.bmp:
        * IDML/paradigms/Icons/out.bmp:
        * IDML/paradigms/Icons/package.bmp:
        * IDML/paradigms/Icons/private.bmp:
        * IDML/paradigms/Icons/providedrequestport.bmp:
        * IDML/paradigms/Icons/readonlyattribute.bmp:
        * IDML/paradigms/Icons/return.bmp:
        * IDML/paradigms/Icons/setexception.bmp:
        * IDML/paradigms/Icons/supports.bmp:
        * IDML/paradigms/Icons/switchedaggregate.bmp:
        * IDML/paradigms/Icons/twoway.bmp:
        * IDML/paradigms/Icons/value.bmp:
        * IDML/paradigms/Icons/variablecollection.bmp:

          Made all icons 64x64 pixels in size.

Mon Jun  7 18:20:34 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: Updated the RobotAssembly
          model so that it is complete enough for descriptor generation.

        * PICML/interpreters/PICML/PICML.mpc: Added -m to Udm.exe upon
          Endre's suggestion.

        * PICML/interpreters/Package/SchemaVisitor.h: Minor
          modifications.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xml:
        * PICML/paradigms/PICML.xmp: Updated to reflect bugs in the model
          while building the RobotAssembly model.

Fri Jun  4 18:40:17 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/RobotAssembly.xme: New file which models the
          RobotAssembly scenario requested by LockHeed. The scenario is
          almost done except for adding the implementation artifacts for
          4 components.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: Added
          PackageComponent.def, the export DEF file to the sources.

        * PICML/paradigms/PICML.xme: Updated to reflect bugs in the
          meta-model uncovered when modeling the RobotAssembly scenario.
          Removed some constraints which triggered at the wrong time.
          There seems to be some bug in the constraint manager.

        * PICML/paradigms/PICML.xmp: New version of the paradigm which
          reflects the above changes.

        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme: Updated to reflect changes
          in the paradigm.

        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/manages.bmp: New versions of these icons
          from the IDML directory.


        * PICML/paradigms/icons/providedrequestport.bmp:
        * PICML/paradigms/icons/requiredrequestport.bmp: Renamed these
          icons to reflect the renaming in IDML.

        * PICML/paradigms/icons/inrequestport.bmp:
        * PICML/paradigms/icons/outrequestport.bmp:

          Removed these files.

Thu Jun  3 12:36:40 2004  Krishnakumar B  <kitty@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp: Checking in version which has my
          current set of fixes so that I can work on it from BBN.

Wed Jun  2 15:59:11 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Added constraints to the metamodel, and updated the
          other files accordingly.

Wed Jun  2 15:47:05 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/interpreters/IDLGenerator/BON2Component.cpp:
        * IDML/interpreters/IDLGenerator/BON2Component.h:
        * IDML/interpreters/IDLGenerator/BON2Component.sln:
        * IDML/interpreters/IDLGenerator/CompIcon.ico:
        * IDML/interpreters/IDLGenerator/Component.aps:
        * IDML/interpreters/IDLGenerator/Component.rc:
        * IDML/interpreters/IDLGenerator/ComponentConfig.h:
        * IDML/interpreters/IDLGenerator/ComponentLib.h:
        * IDML/interpreters/IDLGenerator/ComponentLib.tlb:
        * IDML/interpreters/IDLGenerator/ComponentLib_i.c:
        * IDML/interpreters/IDLGenerator/ComponentLib_p.c:
        * IDML/interpreters/IDLGenerator/DependencyVisitor.cpp:
        * IDML/interpreters/IDLGenerator/DependencyVisitor.h:
        * IDML/interpreters/IDLGenerator/GMESources.txt:
        * IDML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * IDML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * IDML/interpreters/IDLGenerator/IDLGeneratorBON2Component.vcproj:
        * IDML/interpreters/IDLGenerator/IDLStream.cpp:
        * IDML/interpreters/IDLGenerator/IDLStream.h:
        * IDML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * IDML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * IDML/interpreters/IDLGenerator/Resource.h:
        * IDML/interpreters/IDLGenerator/StdAfx.cpp:
        * IDML/interpreters/IDLGenerator/StdAfx.h:
        * IDML/interpreters/IDLGenerator/component.def:
        * IDML/interpreters/IDLGenerator/dlldata.c:

          New interpreter, which generates IDL from IDML models.

Wed Jun  2 12:03:02 2004  Krishnakumar B  <kitty@spam.invalid.domain>

        * PICML/interpreters/PICML/PICML.mpc:
        * PICML/interpreters/PICML/PICML_Export.h: Modified to fix some
          bugs and made PICML a non-MFC application.

        * PICML/interpreters/Package/Package.mpc:
        * PICML/interpreters/Package/SchemaVisitor.h:
        * PICML/interpreters/Package/SchemaVisitor.cpp: Similar changes
          as above. Added new files which will hold the Package
          interpreter logic.

        * PICML/interpreters/PackageComponent/CompIcon.ico:
        * PICML/interpreters/PackageComponent/ComponentConfig.h:
        * PICML/interpreters/PackageComponent/PackageComponent.def:
        * PICML/interpreters/PackageComponent/PackageComponent.rc:
        * PICML/interpreters/PackageComponent/RawComponent.h:
        * PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PICML/interpreters/PackageComponent/StdAfx.h:
        * PICML/interpreters/PackageComponent/StdAfx.cpp:
        * PICML/interpreters/PackageComponent/UdmApp.h:
        * PICML/interpreters/PackageComponent/UdmApp.cpp:
        * PICML/interpreters/PackageComponent/UdmConfig.h:

          Standard files needed to write an interpreter using UDM. These
          files can't be copied en masse to create a new interpreter.
          There are some non-trivial modifications to be made to
          ComponentConfig.h. Hopefully I can also add a perl script to do
          that.

        * PICML/interpreters/debug_libs.mpb:
        * PICML/interpreters/picmllib.mpb:
        * PICML/interpreters/release_libs.mpb: Modified to reflect
          suggestions from Chad.

Thu May 27 13:07:08 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:
        * IDML/examples/new_test.xme:

          Made slight change to metamodel - changed ProvidedRequestPort and
          RequiredRequestPort elements to refer to, instead of an Object,
          and FCO abstract base class of Object and GenericObject. This
          change will allow IDL importing and exporting of facets and
          receptacles that are associated with Object (mapped to
          CORBA::Object in C++). Also updated the related models
          accordingly.

Thu May 27 00:36:39 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:
        * PICML/paradigms/PICMLTemplate.xme:
        * PICML/paradigms/PredefinedTypes.xme:
        * PICML/paradigms/icons/Bridge.bmp:
        * PICML/paradigms/icons/Node.bmp:
        * PICML/paradigms/icons/Domain.bmp:
        * PICML/paradigms/icons/ComponentSet.bmp:
        * PICML/paradigms/icons/Interconnect.bmp:
        * PICML/paradigms/icons/Resource.bmp:
        * PICML/paradigms/icons/SharedResource.bmp:

          Added the MIDCESS and DeploymentPlan meta modeling
          environment to the
          PICML modeling tool suite.

Sun May 23 01:11:38 2004  Krishnakumar B  <unknown@isis.vanderbilt.edu>

        * IDML/paradigms/IDML-Meta.xme: Modified the OperationTypes to
          refer to the MemberType directly as it causes problems with
          MetaGME2UML. I have also filed a bug report with GME folks;
          will do so if I think it will be a problem with
          UDM/MetaGME2UML.

        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:
        * IDML/examples/new_test.xme:

          Updated to reflect the above change.

        * PICML/bin/.empty: New directory to store the different DLLs and
          the binaries for PICML.

        * PICML/interpreters/PICML/PICML.mpc:

          New MPC file to generate workspace for PICML as a library.

        * PICML/interpreters/PICML/PICML_Export.h: Export file for PICML
          library.

        * PICML/interpreters/PICML_Debug.mwc:
        * PICML/interpreters/PICML_Release.mwc:

          MWC files for PICML. Two versions are necessary because
          some of the libraries needed by PICML e.g., UDM, use _D as library
          decorator, while some like xerces use D as library decorator.
          Thanks to Chad Elliot <elliot_c @ ociweb . com > for suggesting
          this.

        * PICML/interpreters/Package/Package.mpc: New MPC file for
          implementation of the visitor logic.

        * PICML/interpreters/Package/Package_Export.h: Export file for the
          visitor classes to be compiled as a DLL.

        * PICML/interpreters/PackageComponent/PackageComponent.mpc: New
          MPC file for the interpreter to generate Package related
          descriptors.

        * PICML/interpreters/debug_libs.mpb:
        * PICML/interpreters/default.features:
        * PICML/interpreters/picmllib.mpb:
        * PICML/interpreters/release_libs.mpb:

          Default MPC settings for projects using UDM and PICML.

        * PICML/lib/.empty: New directory to store all the libraries and
          the import files.

        * PICML/paradigms/IDML-uml.xme:
        * PICML/paradigms/PICML-uml.xme:

          XML exports of IDML & PICML generated using MetaGME2UML.


        * PICML/paradigms/PICML.xme: New version of PICML XML export
          file.

        * PICML/paradigms/PICML.xmp: New version of the PICML paradigm.

        * PICML/paradigms/PICML.xml: XML output from UML2XML interpreter.

        * PICML/paradigms/PredefinedTypes.xme: XML export containing definitions
          of IDML predefined types. This file is attached as a library by
          PICMLTemplate.

        * PICML/paradigms/PICMLTemplate.xme: New XML export file that
          should be imported by every PICML model. This file serves as a
          template and includes PredefinedTypes as a library. This file
          should be saved under a new name by users.

        * PICML/examples/BasicSP.mga:
        * PICML/paradigms/PICML.mga:

          Removed these files.

Sat May 22 20:33:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradigms/IDMLTemplate.xme:
        * IDML/paradigms/PredefinedTypes.xme:

          Fixed a couple of minor problems with the paradigm, and regenerated
          XML for it and everything that uses it.

Fri May 21 18:37:50 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/examples/new_test.xme:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:

          Major overhaul of paradigm, to make fewer steps and more
          simplicity for the user.

        * IDML/paradigms/PredefinedTypes.xme:

          New file, a model containing a folder with all the
          basic types.

        * IDML/paradigms/IDMLTemplate.xme:

          New file.
          Users can start from this file instead of creating a new
          project, and they will get an attached read-only library
          with the basic types from the model above.

        * IDML/paradigms/Icons/member.bmp:

          New file, need because after the overhaul of the
          paradigm, Member is no longer abstract.

Thu May 20 11:53:28 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * IDML/*:
        * IDML/paradigms/IDML-Meta.xme:
        * IDML/paradigms/IDML.xmp:
        * IDML/paradimgs/Icons/*.bmp:

          Moved all the IDML files to their own directory. Also
          made minor changes to constraints and turned off name
          display on a couple of icons.

        * IDML/examples/new_test.xme:

          Example model.

        * IDML/paradigms/Icons/file.bmp:
        * IDML/paradigms/Icons/prefix.bmp:
        * IDML/paradigms/Icons/id.bmp:
        * IDML/paradigms/Icons/version.bmp:

          Removed these icons - no longer used.

        * IDML/paradigms/Icons/getexception.bmp:
        * IDML/paradigms/Icons/setexception.bmp:

          Swapped these, they had been saved to the wrong file.

Sun May 16 23:14:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PICML/paradifms/IDML-Meta.xme:
        * PICML/paradigms/IDML.xmp:

          Turned off the name display of some metamodel elememts, so that
          the name is hidden when dragged into the model editor. This
          change is to make things less confusing for the user, since now
          all the names that are not used by the IDL generator interpreter
          (in progress) and not checked by the GME constraint manager are
          not displayed for the user to worry about or try to edit. Also
          created some new metamodel elements which are twins of the
          various elements for the various anonymous types and also for
          the named type reference element. These new elements use the
          same icons as their twins, but their name display is turned
          off as explained above.

Wed May 13 017:32:44 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PICML/paradifms/IDML-Meta.xme:
        * PICML/paradigms/IDML.xmp:

          Made some minor changes to better integrate with PICML.

        * PICML/paradigms/icons/file.bmp:

          New icon, created because the model element File is no longer
          in the root folder.

        * PICML/paradigms/icons/fileref.cmp:

          Modified icon to be similar to the new icon described above.

Wed May  5 02:44:11 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/examples/BasicSP.mga:
        * PICML/examples/BasicSP.xme:

          Added new example to show how to view an assembly. I haven't
          added all the package related material. But those should be
          straightforward.

        * PICML/paradigms/IDML-Meta.xme:

          Made ComponenDef show it's type in instances.

        * PICML/paradigms/IDML.mga:
        * PICML/paradigms/IDML.xmp:

          Updated to reflect the above change.

        * PICML/paradigms/PICML.mga:
        * PICML/paradigms/PICML.xme:
        * PICML/paradigms/PICML.xmp:

          Next version of the paradigm. This time with some constraints.
          More need to be added. The Meta is still pseudo-stable.

        * PICML/paradigms/icons/DataType.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/manages.bmp:

          New icons + old icons resized so that GME doesn't stretch them
          to fit it's idea of how big an idol representing a model should
          be.

Fri Apr 30 18:29:04 2004  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * PICML/paradigms/icons/component.bmp:

          Made the icon more elongated, to hopefully make a better-looking
          display when used as a reference.

        * PICML/paradigms/icons/manages.bmp:

          Changed the 'component' piece of this icon to match the change
          to the icon above.

Wed Apr 28 23:32:21 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/paradigms/IDML-Meta.xme:
        * PICML/paradigms/IDML.mga:
        * PICML/paradigms/IDML.xmp:

          Added new meta-model of Interface Definition Modeling Language
          (IDML).


        * PICML/paradigms/PICML.mga:
        * PICML/paradigms/PICML.xmp:

          Added binary mga files and XML exported paradigm so that users
          need not run the interpreter on the PICML meta-model. This file
          can just be registered using File->Register Paradigms, so that
          one can use the paradigm to make models without dealing with the
          complex steps involving aspect mapping.

        * PICML/paradigms/PICML.xme:

          Updated to reflect icons, changes in IDML and some minor changes
          in the connections.

        * PICML/paradigms/icons/Any.bmp:
        * PICML/paradigms/icons/Assembly.bmp:
        * PICML/paradigms/icons/Capability.bmp:
        * PICML/paradigms/icons/ComponentPackage.bmp:
        * PICML/paradigms/icons/ComponentProperty.bmp:
        * PICML/paradigms/icons/Connector.bmp:
        * PICML/paradigms/icons/ImplementationArtifact.bmp:
        * PICML/paradigms/icons/ImplementationArtifactReference.bmp:
        * PICML/paradigms/icons/ImplementationDependency.bmp:
        * PICML/paradigms/icons/ImplementationReference.bmp:
        * PICML/paradigms/icons/ImplementationRequirement.bmp:
        * PICML/paradigms/icons/MonolithicImplementation.bmp:
        * PICML/paradigms/icons/PackageConfiguration.bmp:
        * PICML/paradigms/icons/PackageConfigurationReference.bmp:
        * PICML/paradigms/icons/PackageReference.bmp:
        * PICML/paradigms/icons/Property.bmp:
        * PICML/paradigms/icons/Requirement.bmp:
        * PICML/paradigms/icons/SatisfierProperty.bmp:
        * PICML/paradigms/icons/TopLevelPackage.bmp:
        * PICML/paradigms/icons/aggregate.bmp:
        * PICML/paradigms/icons/alias.bmp:
        * PICML/paradigms/icons/attribute.bmp:
        * PICML/paradigms/icons/boundedstring.bmp:
        * PICML/paradigms/icons/boxed.bmp:
        * PICML/paradigms/icons/component.bmp:
        * PICML/paradigms/icons/componentfactory.bmp:
        * PICML/paradigms/icons/const.bmp:
        * PICML/paradigms/icons/discriminator.bmp:
        * PICML/paradigms/icons/enum.bmp:
        * PICML/paradigms/icons/enumref.bmp:
        * PICML/paradigms/icons/enumvalue.bmp:
        * PICML/paradigms/icons/event.bmp:
        * PICML/paradigms/icons/eventref.bmp:
        * PICML/paradigms/icons/exception.bmp:
        * PICML/paradigms/icons/exceptionref.bmp:
        * PICML/paradigms/icons/factory.bmp:
        * PICML/paradigms/icons/fileref.bmp:
        * PICML/paradigms/icons/fixedcollection.bmp:
        * PICML/paradigms/icons/fixedpoint.bmp:
        * PICML/paradigms/icons/getexception.bmp:
        * PICML/paradigms/icons/id.bmp:
        * PICML/paradigms/icons/in.bmp:
        * PICML/paradigms/icons/ineventport.bmp:
        * PICML/paradigms/icons/inherits.bmp:
        * PICML/paradigms/icons/inout.bmp:
        * PICML/paradigms/icons/inrequestport.bmp:
        * PICML/paradigms/icons/label.bmp:
        * PICML/paradigms/icons/lookup.bmp:
        * PICML/paradigms/icons/lookupkey.bmp:
        * PICML/paradigms/icons/manages.bmp:
        * PICML/paradigms/icons/namedtyperef.bmp:
        * PICML/paradigms/icons/object.bmp:
        * PICML/paradigms/icons/objectref.bmp:
        * PICML/paradigms/icons/oneway.bmp:
        * PICML/paradigms/icons/out.bmp:
        * PICML/paradigms/icons/outeventport.bmp:
        * PICML/paradigms/icons/outrequestport.bmp:
        * PICML/paradigms/icons/package.bmp:
        * PICML/paradigms/icons/predefined.bmp:
        * PICML/paradigms/icons/prefix.bmp:
        * PICML/paradigms/icons/private.bmp:
        * PICML/paradigms/icons/readonlyattribute.bmp:
        * PICML/paradigms/icons/return.bmp:
        * PICML/paradigms/icons/setexception.bmp:
        * PICML/paradigms/icons/supports.bmp:
        * PICML/paradigms/icons/switchedaggregate.bmp:
        * PICML/paradigms/icons/twoway.bmp:
        * PICML/paradigms/icons/value.bmp:
        * PICML/paradigms/icons/variablecollection.bmp:
        * PICML/paradigms/icons/version.bmp:

          Icons for IDML and PICML.

Tue Apr 27 14:21:09 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * PICML/README: Preliminary version of the README file.

        * PICML/paradigms/PICML.xme: First version of the PICML
          meta-model.
