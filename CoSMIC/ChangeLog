Tue Feb 16 05:32:52 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/CoSMIC_Installer/CoSMIC_Installer.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.wxs:
        * PIM/PICML/paradigms/PICMLParadigm.wxs:

          Added IDL TextEditor to the installer.

Tue Feb 16 05:04:07 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/T3/t3/compiler/t3_compiler.mpc:
        * Utils/T3/t3/runtime/t3_runtime.mpc:

          Fixed compile errors with vc8 Release.

Sun Feb 14 19:46:09 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Release.mwc:

          . Updated the release workspace to include T3 and
            IDLTextEditor projects.

Sat Feb 13 23:17:45 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.cpp:

          . Bug fix where adding a component with the same name to
            a File resulted in generation of duplicate artifacts.

Sat Feb 13 22:41:32 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:

          . Removed Component.rc from the IDLTextEditor_Core project.

Sat Feb 13 16:21:54 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_component.mpb:

          . Moved the GAME_BE specifications from game_component.mpb
            to its own base project.

        * MPC/config/t3_runtime.mpb:

          . Base project for using T3 runtime library.

        * PIM/PICML/interpreters/IDLTextEditor/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Component.rc:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_TextEditor.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_View.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.wxs:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor_Core_export.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.h:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Resource.h:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.h:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.inl:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules:
        * PIM/PICML/interpreters/IDLTextEditor/rules/actors.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/attribute_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/attribute_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/attribute_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/base_type_spec.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/base_type_spec.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/base_type_spec_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/boolean_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/boolean_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/boolean_type_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/char_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/char_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/char_type_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/component.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/component.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/component_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/const_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/const_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/const_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/event.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/event.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/event_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/except_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/except_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/except_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/export.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/export.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/export_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/floating_pt_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/floating_pt_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/floating_pt_type_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/grammar.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/grammar.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/grammar_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/home_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/home_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/home_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/ident.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/ident.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/ident_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/init_params_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/init_params_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/init_params_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/integer_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/integer_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/integer_type_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/interface.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/interface.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/interface_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/octet.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/octet.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/octet_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/op_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/op_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/op_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/param_type_spec.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/param_type_spec.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/param_type_spec_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/preprocessor.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/preprocessor.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/preprocessor_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/raises_expr.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/raises_expr.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/raises_expr_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/scoped_name.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/scoped_name.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/scoped_name_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/simple_type_spec.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/simple_type_spec.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/simple_type_spec_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/string_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/string_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/string_type_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/template_type_spec.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/template_type_spec.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/template_type_spec_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_decl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_decl.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_decl_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_spec.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_spec.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/type_spec_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value_element.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value_element.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value_element_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/value_impl.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/wide_string_type.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/wide_string_type.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/wide_string_type_impl.hpp:
        * picml.mwc:

          . First commit of the IDLTextEditor.

        * PIM/PICML/interpreters/IDLTextEditor/IDLGenerator.wxs:

          Removed this file.

Sat Feb 13 16:18:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:

          . When a new component is added to the InterfaceDefinition, the
            add-on does not prompt the user to input a name if the name
            has already been changed.

Sat Feb 13 16:16:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:

          . Since homes are not required in DAnCE anymore, the IDL generator
            does not generate a default home if one is not specified.

          . The parameters in OnewayOperations, TwowayOperations, and other
            elements that contain a parameter list are now printed to the
            IDL file in left to right ordering.

Sat Feb 13 16:14:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/Sort.h:
        * Utils/Sort.inl:

          . Implemented a functor for sorting elements from left
            to right.

Sat Feb 13 16:09:55 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/T3:
        * Utils/T3/AUTHORS:
        * Utils/T3/t3:
        * Utils/T3/t3/compiler:
        * Utils/T3/t3/compiler/Attr_Node.h:
        * Utils/T3/t3/compiler/Attr_Node.inl:
        * Utils/T3/t3/compiler/Attr_Node.cpp:
        * Utils/T3/t3/compiler/Compiler_App.h:
        * Utils/T3/t3/compiler/Compiler_App.cpp:
        * Utils/T3/t3/compiler/Core_export.h:
        * Utils/T3/t3/compiler/Definition.h:
        * Utils/T3/t3/compiler/Definition.inl:
        * Utils/T3/t3/compiler/Definition.cpp:
        * Utils/T3/t3/compiler/Grammar_Generator.h:
        * Utils/T3/t3/compiler/Grammar_Generator.inl:
        * Utils/T3/t3/compiler/Grammar_Generator.cpp:
        * Utils/T3/t3/compiler/Grammar_Parser.hpp:
        * Utils/T3/t3/compiler/Node.h:
        * Utils/T3/t3/compiler/Node.inl:
        * Utils/T3/t3/compiler/Node.cpp:
        * Utils/T3/t3/compiler/Node_Manager.h:
        * Utils/T3/t3/compiler/Node_Manager.inl:
        * Utils/T3/t3/compiler/Node_Manager.cpp:
        * Utils/T3/t3/compiler/Node_Visitor.h:
        * Utils/T3/t3/compiler/Node_Visitor.inl:
        * Utils/T3/t3/compiler/Node_Visitor.cpp:
        * Utils/T3/t3/compiler/Optional_Node.h:
        * Utils/T3/t3/compiler/Optional_Node.inl:
        * Utils/T3/t3/compiler/Optional_Node.cpp:
        * Utils/T3/t3/compiler/Parse_Tree.h:
        * Utils/T3/t3/compiler/Parse_Tree.inl:
        * Utils/T3/t3/compiler/Parse_Tree.cpp:
        * Utils/T3/t3/compiler/Parser_Generator.h:
        * Utils/T3/t3/compiler/Parser_Generator.inl:
        * Utils/T3/t3/compiler/Parser_Generator.cpp:
        * Utils/T3/t3/compiler/Quantifier_Node.h:
        * Utils/T3/t3/compiler/Quantifier_Node.inl:
        * Utils/T3/t3/compiler/Quantifier_Node.cpp:
        * Utils/T3/t3/compiler/Reference_Node.h:
        * Utils/T3/t3/compiler/Reference_Node.inl:
        * Utils/T3/t3/compiler/Reference_Node.cpp:
        * Utils/T3/t3/compiler/Rule_Node.h:
        * Utils/T3/t3/compiler/Rule_Node.inl:
        * Utils/T3/t3/compiler/Rule_Node.cpp:
        * Utils/T3/t3/compiler/Selection_Node.h:
        * Utils/T3/t3/compiler/Selection_Node.inl:
        * Utils/T3/t3/compiler/Selection_Node.cpp:
        * Utils/T3/t3/compiler/Sequence_Node.h:
        * Utils/T3/t3/compiler/Sequence_Node.inl:
        * Utils/T3/t3/compiler/Sequence_Node.cpp:
        * Utils/T3/t3/compiler/String_Literal_Node.h:
        * Utils/T3/t3/compiler/String_Literal_Node.inl:
        * Utils/T3/t3/compiler/String_Literal_Node.cpp:
        * Utils/T3/t3/compiler/Substitution_Node.h:
        * Utils/T3/t3/compiler/Substitution_Node.inl:
        * Utils/T3/t3/compiler/Substitution_Node.cpp:
        * Utils/T3/t3/compiler/actors.h:
        * Utils/T3/t3/compiler/actors.inl:
        * Utils/T3/t3/compiler/actors.cpp:
        * Utils/T3/t3/compiler/actors_t.cpp:
        * Utils/T3/t3/compiler/compiler.cpp:
        * Utils/T3/t3/compiler/t3_compiler.mpc:
        * Utils/T3/t3/runtime:
        * Utils/T3/t3/runtime/Auto_Model.h:
        * Utils/T3/t3/runtime/Auto_Model.inl:
        * Utils/T3/t3/runtime/Auto_Model.cpp:
        * Utils/T3/t3/runtime/Auto_Model_Impl.h:
        * Utils/T3/t3/runtime/Auto_Model_Impl.inl:
        * Utils/T3/t3/runtime/Auto_Model_Impl.cpp:
        * Utils/T3/t3/runtime/BON:
        * Utils/T3/t3/runtime/Event_Handler.inl:
        * Utils/T3/t3/runtime/Event_Listener.h:
        * Utils/T3/t3/runtime/Event_Listener.inl:
        * Utils/T3/t3/runtime/Event_Listener.cpp:
        * Utils/T3/t3/runtime/Runtime_Engine.h:
        * Utils/T3/t3/runtime/Runtime_Engine.inl:
        * Utils/T3/t3/runtime/Runtime_Engine.cpp:
        * Utils/T3/t3/runtime/Runtime_export.h:
        * Utils/T3/t3/runtime/Symbol.h:
        * Utils/T3/t3/runtime/Symbol.inl:
        * Utils/T3/t3/runtime/Symbol.cpp:
        * Utils/T3/t3/runtime/actors.hpp:
        * Utils/T3/t3/runtime/algorithm.h:
        * Utils/T3/t3/runtime/algorithm_t.cpp:
        * Utils/T3/t3/runtime/conditions.hpp:
        * Utils/T3/t3/runtime/grammar.hpp:
        * Utils/T3/t3/runtime/parsers.hpp:
        * Utils/T3/t3/runtime/reference.hpp:
        * Utils/T3/t3/runtime/reference.inl:
        * Utils/T3/t3/runtime/reference.cpp:
        * Utils/T3/t3/runtime/t3_runtime.mpc:

          . First commit of the Text-2-Model Transformation Tool (T3). In
            the near future, T3 is going to be moved outside of this workspace
            and have its own workspace in the CoSMIC repo -- similar to how
            the DOC Middleware repo is setup. Right now, it has been hardcoded
            to support the IDLTextEditor utility. Future version will work on
            breaking this coupling.

Sat Feb 13 16:04:37 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Filter.h:
        * Utils/GAME/game/Filter.cpp:

          . Implemented minimal support for using filters to request a
            subset of elements in a project based on a search criteria.

        * Utils/GAME/game/Atom.h:
        * Utils/GAME/game/Atom.cpp:
        * Utils/GAME/game/Attribute.h:
        * Utils/GAME/game/Folder.h:
        * Utils/GAME/game/Folder.cpp:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/GME.h:
        * Utils/GAME/game/MetaModel.h:
        * Utils/GAME/game/MetaModel.cpp:
        * Utils/GAME/game/Model.h:
        * Utils/GAME/game/Model.cpp:
        * Utils/GAME/game/Object.h:
        * Utils/GAME/game/Object.cpp:
        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:
        * Utils/GAME/game/Reference.h:
        * Utils/GAME/game/Reference.cpp:
        * Utils/GAME/game/Set.h:
        * Utils/GAME/game/Set.cpp:

          . Added support for creating each element using the Role object.

        * Utils/GAME/game/be/Event_Sink_Impl.h:
        * Utils/GAME/game/be/Event_Sink_Impl.inl:
        * Utils/GAME/game/be/Event_Sink_Impl.cpp:
        * Utils/GAME/game/be/Event_Sink_T.h:
        * Utils/GAME/game/be/Event_Sink_T.inl:
        * Utils/GAME/game/be/Event_Sink_T.cpp:

          . Added support for implementing event sinks, which are used
            to create add-ons for a project.

        * Utils/GAME/game/be/GAME_BE.mpc:

          . Added new files to the project.

Mon Feb  8 16:15:16 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          Updates corresponding to changes in the frontend regarding
          the handling of home factories and finders.

Fri Jan 29 15:33:36 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          Added no-op visit_finder() method, in anticipation of the
          branch merge where the same method has been added to the
          front end base class as pure virtual.

Tue Jan 26 02:18:04 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Improved code generation. Avoid conflicting types.

        * tests/LEESA/G2SMessage-xsd/makefile:

          Added LEESA_NO_VISITOR

        * tests/LEESA/rss2-xsd/rss2-original.xsd:

          Bug fix.

Sun Jan 24 19:34:28 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/etc/LEESA.wxs:

          Added new files in the distribution.

Fri Jan 22 16:46:54 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          Added no-op visit_* method that was recently added (as
          pure virtual) to the front end base class.

Fri Jan 22 01:45:52 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Readable code generation.

        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:

          Addition of StoreAt operator for storing intermediate results
          in outside containers.

        * tests/LEESA/PICML-xsd/driver.cxx:
        * tests/LEESA/PICML-xsd/makefile:

          Improved tests for compilation times.

        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/makefile:

          Improved tests for run-time performance.

Wed Jan 20 02:32:42 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Supports -no-visitor, -no-doxygen options.

        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA_RShift.cpp:

          Added macros LEESA_NO_PARENT_KINDS and LEESA_NO_VISITOR

        * tests/LEESA/G2SMessage-xsd:

        * tests/LEESA/G2SMessage-xsd/Doxyfile:
        * tests/LEESA/G2SMessage-xsd/README:
        * tests/LEESA/G2SMessage-xsd/all.xml:
        * tests/LEESA/G2SMessage-xsd/driver.cpp:
        * tests/LEESA/G2SMessage-xsd/fixed-xsd-errors.txt:
        * tests/LEESA/G2SMessage-xsd/makefile:
        * tests/LEESA/G2SMessage-xsd/xsd:

          A huge schema to test LEESA on.

        * tests/LEESA/G2SMessage-xsd/xsd/g2sBonus.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sCabinet.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sCentral.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sCoinAcceptor.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sCommConfig.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sCommunications.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sDownload.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sEventHandler.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sGAT.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sGamePlay.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sHandpay.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sHopper.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sIdReader.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sIncludeClasses.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sIncludeConfig.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sIncludeGlobal.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sMessage.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sMeters.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sNoteAcceptor.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sNoteDispenser.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sOptionConfig.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sPlayer.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sPrinter.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sProgressive.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sVoucher.xsd:
        * tests/LEESA/G2SMessage-xsd/xsd/g2sWAT.xsd:

          xsd files that belong to G2SMessage schema.

        * tests/LEESA/PICML-xsd/driver.cxx:

          Bug fix.

        * tests/LEESA/PICML-xsd/makefile:
        * tests/LEESA/library-xsd/makefile:
        * tests/LEESA/library-xsd/swap_options.sh:
        * tests/LEESA/polymorphism-xsd/makefile:
        * tests/LEESA/rss2-xsd/makefile:

          Updated compilation options.

Tue Jan 19 01:38:49 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Significantly improved version of the meta-data generator.
          Several bug fixes and simplifications

        * Utils/LEESA/include/Kind_Traits.h:

          Added IsDescendant forward declaration.

        * tests/LEESA/PICML-xsd:
        * tests/LEESA/PICML-xsd/PICML.xsd:
        * tests/LEESA/PICML-xsd/README:
        * tests/LEESA/PICML-xsd/driver.cxx:
        * tests/LEESA/PICML-xsd/makefile:

          PICML's xsd generated by UDM is being used here for compile-time
          measurement experiments.

        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/makefile:
        * tests/LEESA/library-xsd/swap_options.sh:

          Improved library example. Does compile-time and run-time performance tests.

        * tests/LEESA/polymorphism-xsd/driver.cxx:

          Changed according to the latest changes in the code generator.

        * tests/LEESA/rss2-xsd:
        * tests/LEESA/rss2-xsd/README:
        * tests/LEESA/rss2-xsd/driver.cxx:
        * tests/LEESA/rss2-xsd/makefile:
        * tests/LEESA/rss2-xsd/rss2.xsd:
        * tests/LEESA/rss2-xsd/rss2-original.xsd:

          A new example of RSS2 XML format. Has original as well as modified
          schema for forcing type-generation.

        * tests/LEESA/library-xsd/comparison_test.cpp:

          Removed this file.

Sun Jan 17 21:42:18 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          The code generator no long synthesizes new types.
          If new types are desired, change the schema itself.
          Number of bug fixes. visit functions, data access etc.

        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA_Operators.cpp:

          Bug fix. CastOp and ContainerTraits

        * tests/LEESA/library-xsd/comparison_test.cpp:
        * tests/LEESA/library-xsd/driver1stage.cxx:
        * tests/LEESA/library-xsd/library.xsd:
        * tests/LEESA/library-xsd/makefile:

          No new types anymore. Fixed the tests.

        * tests/LEESA/polymorphism-xsd/driver.cxx:
        * tests/LEESA/polymorphism-xsd/makefile:

          Changes according to the new generator

Sat Jan 16 01:03:27 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Carrier_Simple.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/SP_Accumulation.cpp:

          Fixed some UDM related issued.

        * tests/LEESA/UdmApp-Linux/UdmApp-PICML.cpp:
        * tests/LEESA/UdmApp-Linux/UdmApp-SM.cpp:
        * tests/LEESA/UdmApp-Linux/makefile:

          Improved the tests for compilation time comparisons.

        * tests/LEESA/library-xsd/comparison_test.cpp:
        * tests/LEESA/library-xsd/makefile:

          Improved the tests for run-time comparisons.

Fri Jan 15 04:55:15 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/Carrier_Optimized.cpp:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/SP.cpp:
        * Utils/LEESA/include/SP_Accumulation.cpp:

          Improved SP for optimized accumulation.
          DescendantsOf now uses accumulation optimizations of SP
          instead of FullTD, which is more for visitation.

        * tests/LEESA/library-xsd/comparison_test.cpp:
        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/makefile:

          Improved the tests to compare compilation times as well
          as run-time performance of LEESA and xsd

Fri Jan 15 01:08:20 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/Carrier_Optimized.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/SP.cpp:

          Applied Carrier optimizations to All and Star.

        * tests/LEESA/library-xsd/makefile:

          Now does -O3 optimizations.

Thu Jan 14 06:13:09 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Generates non-const data access functions. Fixed a bug that printed
          duplicate descendant pairs.

        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/Carrier_Optimized.cpp:
        * Utils/LEESA/include/Carrier_Simple.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_SingleStage.h:

          Improved Carrier_Optimized vastly and is now being used as the
          carrier in XSD based queries. For UDM, Carrier_Simple is used.

        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/driver1stage.cxx:
        * tests/LEESA/library-xsd/library.xsd:
        * tests/LEESA/library-xsd/makefile:

          Updated the tests to reflect the above chages.

Wed Jan 13 16:53:40 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/LEESA_SingleStage.h:

          Bug fix

        * tests/LEESA/library-xsd/driver1stage.cxx:
        * tests/LEESA/library-xsd/library.xsd:

          Changed the schema to force generation of classes for simple
          content.

Tue Jan 12 19:57:24 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Generates const-overloaded set of functions.

        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/Carrier_Optimized.cpp:
        * Utils/LEESA/include/LEESA_SingleStage.h:

          Maintains const-correctness of the query in C++0x mode.
          In C++98 mode, only const-ness is maintainted.

        * tests/LEESA/library-xsd/driver1stage.cxx:
        * tests/LEESA/library-xsd/makefile:

          Improved the performance test.

Mon Jan 11 22:23:22 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Carrier_Optimized.h:
        * Utils/LEESA/include/Carrier_Optimized.cpp:
        * Utils/LEESA/include/Carrier_Simple.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:
        * Utils/LEESA/include/LEESA_SingleStage.h:
        * Utils/LEESA/include/SP.cpp:

          Factored out Carrier into separate files. Two versions, simple
          and optimized are available.

        * tests/LEESA/library-xsd/library.xml:
        * tests/LEESA/library-xsd/makefile:

          Updated the test build files to make use of new
          optimized carrier.

Sun Jan 10 21:54:58 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_SingleStage.h:

          Added support for rvalue references.

        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/driver1stage.cxx:
        * tests/LEESA/library-xsd/library.xsd:
        * tests/LEESA/library-xsd/makefile:

          Updated the test for some performance messurements.

Fri Jan  8 22:52:34 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Concepts.h:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:
        * Utils/LEESA/include/LEESA_SingleStage.h:
        * Utils/LEESA/include/SP.cpp:

          LEESA now supports LevelDescendants as in XPath's /*/*/
          Renamed KindLit to Carrier.

        * tests/LEESA/UdmApp-Linux/UdmApp-PICML.cpp:
        * tests/LEESA/library-xsd/driver.cxx:

          Improved tests.

Tue Jan  5 20:05:23 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:

          Updates to bring this backend in sync with IDL3+
          changes to the TAO_IDL frontend. These changes
          only elimiate compile errors, IDL3+ constructs are
          not yet supported in CoSMIC.

Wed Dec 23 19:59:56 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/LEESA_SingleStage.h:

          Single-stage prototype implementation of LEESA. It does not use
          expression templates (therefore single-stage) but it is still quite
          expressive. It can't use depth-first >>= operator at all.

Tue Dec 22 23:34:02 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/LEESA/xo-impedance/impedance.xml:
        * tests/LEESA/xo-impedance/impedance.xsd:

          Tested some more examples of X/O impedance.

Sun Dec 20 04:58:36 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/LEESA/library-xsd/driver.cxx:

          Updated the test.

        * tests/LEESA/xo-impedance:

        * tests/LEESA/xo-impedance/README:
        * tests/LEESA/xo-impedance/driver.cxx:
        * tests/LEESA/xo-impedance/impedance.xml:
        * tests/LEESA/xo-impedance/impedance.xsd:
        * tests/LEESA/xo-impedance/makefile:

          Added a new examples showing x/o impedance.

Wed Dec 16 22:11:35 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Removed some debug information.

        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:

          Some bugfixes. Identity(Kind) allows expression to begin with
          depth-first operator.

        * tests/LEESA/UdmApp-Linux/UdmApp-SM.cpp:
        * tests/LEESA/library-xsd/driver.cxx:

          Updated the tests.

        * tests/LEESA/UDM_DSL:
        * tests/LEESA/UDM_DSL/HFSM.h:
        * tests/LEESA/UDM_DSL/HFSM.xme:
        * tests/LEESA/UDM_DSL/HFSM.cpp:
        * tests/LEESA/UDM_DSL/HFSM.xml:
        * tests/LEESA/UDM_DSL/HFSM.xsd:
        * tests/LEESA/UDM_DSL/StdAfx.h:
        * tests/LEESA/UDM_DSL/StdAfx.cpp:
        * tests/LEESA/UDM_DSL/UDM_DSL.mwc:
        * tests/LEESA/UDM_DSL/UDM_DSL.cpp:
        * tests/LEESA/UDM_DSL/UDM_DSL.mpc:

          Removed these files.

Wed Dec 16 19:28:04 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/decorators/Decorator.rc:

          . Bug fix where the location of DoubleNumber.bmp was
            incorrect in the resource file.

Wed Dec 16 00:53:23 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:

          Improved LEESA in several ways:
          1. Depth-first and MembersOf expressions have return value.
          2. GetChildrenOp and GetParentOp handle both breadth-first and depth-first.
             DFSChildrenOp and DFSParentOp are gone.
          3. MembersAsTupleOp returns boost::tuple.

        * tests/LEESA/SM-Win/SM-Win.vcproj:
        * tests/LEESA/SM-Win/SM.xme:
        * tests/LEESA/SM-Win/SM.xml:
        * tests/LEESA/SM-Win/SM.xmp:
        * tests/LEESA/SM-Win/SM_uml.xme:
        * tests/LEESA/SM-Win/UdmApp.cpp:

          Updated the test to check the new capabilities.

Tue Dec 15 20:25:55 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/Type_Trait.cpp:

          . Missing file.

Tue Dec 15 20:18:02 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/icons/DoubleNumber.bmp:
        * PIM/PICML/paradigms/icons/FloatNumber.bmp:

          . Removed RealNumber from metamodel and added support for
            FloatNumber and DoubleNumber.

        * PIM/PICML/migration/RealNumber_to_DoubleNumber.xsl:

          . Transformation script for converting existing models that
            use RealNumber to the latest version of PICML, which does
            not use RealNumber.

        * PIM/PICML/decorators/Decorator.rc:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/resource.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/Predefined_Types.h:
        * PIM/PICML/interpreters/IDLImporter/Type_Trait.h:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.h:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor_t.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:
        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:
        * PIM/PICML/interpreters/Target/DomainVisitor.h:
        * PIM/PICML/interpreters/Target/DomainVisitor.cpp:

        * Transformations/to_GME7.xsl:

          . Transformation for converting GME 9.x metamodels to
            GME 7.x metamodels since GME 9.x add attributes that
            are not supported by GME 7.x.

        * tests/PIM:
        * tests/PIM/PICML:
        * tests/PIM/PICML/idl_to_picml:
        * tests/PIM/PICML/idl_to_picml/Component.idl:
        * tests/PIM/PICML/idl_to_picml/Constants.idl:
        * tests/PIM/PICML/idl_to_picml/Struct.idl:

          . First crack at defining *unit tests* for idl_to_picml.

        * tests/PIM/PICML/regression:

          Folder that will contain regression tests for PICML.

Thu Dec 10 16:44:21 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/addons/PICMLManager/NewComponentConfig.h:

          . Missing file.

Thu Dec 10 16:40:14 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/Dialogs.h:
        * PIM/PICML/addons/PICMLManager/Dialogs.inl:
        * PIM/PICML/addons/PICMLManager/Dialogs.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager.rc:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:
        * PIM/PICML/addons/PICMLManager/Resource.h:

          . Implemented support for configuring the suffix of the monolithic
            implementation's servant and implementation artifact when a new
            component is added to the model.

Thu Dec 10 05:37:57 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/LEESA/UdmApp-Linux/makefile:
        * tests/LEESA/library-xsd/makefile:
        * tests/LEESA/polymorphism-xsd/makefile:

          Added missing makefiles.

Thu Dec 10 05:09:24 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/LEESA/SM-Win/SM-Win.vcproj:

          Updated the project setting to include LEESA and LEESA_FOR_UDM macro.

Thu Dec 10 04:37:16 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/UDM_DSL:

        * tests/UDM_DSL/HFSM.h:
        * tests/UDM_DSL/HFSM.xme:
        * tests/UDM_DSL/HFSM.cpp:
        * tests/UDM_DSL/HFSM.xml:
        * tests/UDM_DSL/HFSM.xsd:
        * tests/UDM_DSL/StdAfx.h:
        * tests/UDM_DSL/StdAfx.cpp:
        * tests/UDM_DSL/UDM_DSL.mwc:
        * tests/UDM_DSL/UDM_DSL.cpp:
        * tests/UDM_DSL/UDM_DSL.mpc:

          Removed these files.

Thu Dec 10 04:27:47 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Expression_Traits.h:

          Fixed CastOp redefinition.

        * tests/LEESA:

        * tests/LEESA/SM-Win:

        * tests/LEESA/SM-Win/CompIcon.ico:
        * tests/LEESA/SM-Win/Component.def:
        * tests/LEESA/SM-Win/Component.rc:
        * tests/LEESA/SM-Win/ComponentConfig.h:
        * tests/LEESA/SM-Win/ComponentObj.h:
        * tests/LEESA/SM-Win/ComponentObj.cpp:
        * tests/LEESA/SM-Win/RawComponent.h:
        * tests/LEESA/SM-Win/RawComponent.cpp:
        * tests/LEESA/SM-Win/Resource.h:
        * tests/LEESA/SM-Win/SM.h:
        * tests/LEESA/SM-Win/SM.cpp:
        * tests/LEESA/SM-Win/SM.xme:
        * tests/LEESA/SM-Win/SM.xml:
        * tests/LEESA/SM-Win/SM.xmp:
        * tests/LEESA/SM-Win/SM.xsd:
        * tests/LEESA/SM-Win/SM_export.h:
        * tests/LEESA/SM-Win/SM_uml.xme:
        * tests/LEESA/SM-Win/StdAfx.h:
        * tests/LEESA/SM-Win/StdAfx.cpp:
        * tests/LEESA/SM-Win/TestSM.xme:
        * tests/LEESA/SM-Win/UdmApp.h:
        * tests/LEESA/SM-Win/UdmApp.cpp:
        * tests/LEESA/SM-Win/UdmConfig.h:
        * tests/LEESA/SM-Win/UdmConsole.h:
        * tests/LEESA/SM-Win/UdmConsole.cpp:
        * tests/LEESA/SM-Win/UdmFormatter.h:
        * tests/LEESA/SM-Win/UdmFormatter.cpp:
        * tests/LEESA/SM-Win/string_utils.h:

        * tests/LEESA/UDM_DSL:

        * tests/LEESA/UDM_DSL/HFSM.h:
        * tests/LEESA/UDM_DSL/HFSM.xme:
        * tests/LEESA/UDM_DSL/HFSM.cpp:
        * tests/LEESA/UDM_DSL/HFSM.xml:
        * tests/LEESA/UDM_DSL/HFSM.xsd:
        * tests/LEESA/UDM_DSL/StdAfx.h:
        * tests/LEESA/UDM_DSL/StdAfx.cpp:
        * tests/LEESA/UDM_DSL/UDM_DSL.mpc:
        * tests/LEESA/UDM_DSL/UDM_DSL.mwc:
        * tests/LEESA/UDM_DSL/UDM_DSL.cpp:

        * tests/LEESA/UdmApp-Linux:

        * tests/LEESA/UdmApp-Linux/PICML-orig.h:
        * tests/LEESA/UdmApp-Linux/PICML-orig.cpp:
        * tests/LEESA/UdmApp-Linux/PICML_export.h:
        * tests/LEESA/UdmApp-Linux/README:
        * tests/LEESA/UdmApp-Linux/SM-orig.h:
        * tests/LEESA/UdmApp-Linux/SM-orig.cpp:
        * tests/LEESA/UdmApp-Linux/SM_export.h:
        * tests/LEESA/UdmApp-Linux/UdmApp-PICML.h:
        * tests/LEESA/UdmApp-Linux/UdmApp-PICML.cpp:
        * tests/LEESA/UdmApp-Linux/UdmApp-SM.h:
        * tests/LEESA/UdmApp-Linux/UdmApp-SM.cpp:
        * tests/LEESA/UdmApp-Linux/UdmConfig-PICML.h:
        * tests/LEESA/UdmApp-Linux/UdmConfig-SM.h:

        * tests/LEESA/library-xsd:

        * tests/LEESA/library-xsd/README:
        * tests/LEESA/library-xsd/driver.cxx:
        * tests/LEESA/library-xsd/library.xml:
        * tests/LEESA/library-xsd/library.xsd:

        * tests/LEESA/polymorphism-xsd:

        * tests/LEESA/polymorphism-xsd/README:
        * tests/LEESA/polymorphism-xsd/driver.cxx:
        * tests/LEESA/polymorphism-xsd/supermen.xml:
        * tests/LEESA/polymorphism-xsd/supermen.xsd:

          Moved tests under tests/LEESA.

        * tests/LEESA-Linux:

        * tests/LEESA-Linux/Makefile:
        * tests/LEESA-Linux/PICML.h:
        * tests/LEESA-Linux/PICML_export.h:
        * tests/LEESA-Linux/README:
        * tests/LEESA-Linux/SM.h:
        * tests/LEESA-Linux/SM_export.h:
        * tests/LEESA-Linux/UdmApp-PICML.h:
        * tests/LEESA-Linux/UdmApp-PICML.cpp:
        * tests/LEESA-Linux/UdmApp-SM.h:
        * tests/LEESA-Linux/UdmApp-SM.cpp:
        * tests/LEESA-Linux/UdmConfig-PICML.h:
        * tests/LEESA-Linux/UdmConfig-SM.h:
        * tests/LEESA-Linux/library-meta.cxx:
        * tests/LEESA-Linux/library-meta.hxx:

        * tests/SM_LEESA:

        * tests/SM_LEESA/CompIcon.ico:
        * tests/SM_LEESA/Component.def:
        * tests/SM_LEESA/Component.rc:
        * tests/SM_LEESA/ComponentConfig.h:
        * tests/SM_LEESA/ComponentLib_i.c:
        * tests/SM_LEESA/ComponentObj.h:
        * tests/SM_LEESA/ComponentObj.cpp:
        * tests/SM_LEESA/RawComponent.h:
        * tests/SM_LEESA/RawComponent.cpp:
        * tests/SM_LEESA/Resource.h:
        * tests/SM_LEESA/SM.h:
        * tests/SM_LEESA/SM.cpp:
        * tests/SM_LEESA/SM.xme:
        * tests/SM_LEESA/SM.xml:
        * tests/SM_LEESA/SM.xmp:
        * tests/SM_LEESA/SM.xsd:
        * tests/SM_LEESA/SM_LEESA.sln:
        * tests/SM_LEESA/SM_LEESA.vcproj:
        * tests/SM_LEESA/SM_export.h:
        * tests/SM_LEESA/SM_uml.xme:
        * tests/SM_LEESA/StdAfx.h:
        * tests/SM_LEESA/StdAfx.cpp:
        * tests/SM_LEESA/TestSM.xme:
        * tests/SM_LEESA/UdmApp.h:
        * tests/SM_LEESA/UdmApp.cpp:
        * tests/SM_LEESA/UdmConfig.h:
        * tests/SM_LEESA/UdmConsole.h:
        * tests/SM_LEESA/UdmConsole.cpp:
        * tests/SM_LEESA/UdmFormatter.h:
        * tests/SM_LEESA/UdmFormatter.cpp:
        * tests/SM_LEESA/string_utils.h:

          Removed these files.

Wed Dec  9 23:58:23 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Supports schemas without any namespace.

        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:

          Updated CastOp to handle casting in XSD

Wed Dec  9 20:47:24 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Added new non-inheritable types.

Wed Dec  9 03:57:01 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          A slight change in the generator for the following the bug fix.

        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:

          Bug fix of an accedental match of overloaded comma operator

        * tests/SM_LEESA/ComponentLib_i.c:
        * tests/SM_LEESA/UdmApp.cpp:

          Updated the tests to use VisitorAsIndex.

Tue Dec  8 22:59:55 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Improved generation capabilities including new types, schema_traits,
          children_kind functions, and visitor

        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_Concepts.h:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:
        * Utils/LEESA/include/LEESA_VisitorAsIndex.h:
        * Utils/LEESA/include/SP.cpp:

          Works with UDM as well as XSD (including visitors).

Tue Dec  8 17:52:44 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          Changed logic of the check to skip 'imported' nodes in
          code generation, since the old logic was based on a
          behavior of the mpcc preprocessor which apparently
          changes from Debug to Release mode on Windows.

Tue Dec  8 05:04:37 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Adds visitor declarations in the header.

Mon Dec  7 18:57:36 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          Fixed a bug in the generation of a GME attribute of kind
          "path" associated with PICML File elements.

Sat Dec  5 23:42:53 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:
        * Utils/LEESA/include/SP.cpp:

          Bug fixes in DescendantOp and reformatting of files.

        * tests/LEESA-Linux/UdmApp-SM.cpp:

          Updated the test.

Sat Dec  5 02:37:24 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_View.cpp:

          . The text editor now become readonly of the object
            being viewed is in a library or marked as readonly.

Sat Dec  5 02:01:17 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:

          AP works. An extensible  meta-programming framework using
          customizable SP operators, *Carry, and *Impl meta-functions.

        * tests/LEESA-Linux/UdmApp-PICML.cpp:

          Fixed the test with AP.

Sat Dec  5 00:11:49 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Updated the generator for xsd.

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/SP.cpp:

          Conditional compilation if not UDM

        * tests/LEESA-Linux/UdmApp-PICML.cpp:

          Updated the test. AP does not work.

Fri Dec  4 07:22:08 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLTextEditor/component.def:

          Removed this file.

Fri Dec  4 07:17:17 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLTextEditor:
        * PIM/PICML/interpreters/IDLTextEditor/BON2Component.h:
        * PIM/PICML/interpreters/IDLTextEditor/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Component.rc:
        * PIM/PICML/interpreters/IDLTextEditor/ComponentConfig.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL.ico:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Deserializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_DocTemplate.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_DocTemplate.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Serializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_TextEditor.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_TextEditor.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_View.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_View.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDLGenerator.wxs:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.reg:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditord.reg:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Resource.h:
        * PIM/PICML/interpreters/IDLTextEditor/StdAfx.h:
        * PIM/PICML/interpreters/IDLTextEditor/StdAfx.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/component.def:
        * PIM/PICML/interpreters/Interpreters.mwc:

          . First implementation of editing the interface definition model
            using a text editor. Right now, the editor is able to view a
            File element as a text file. The next version will be able to
            convert the textual model back into a PICML model.

Fri Dec  4 06:43:19 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Improved generation of types, functions, and traits.

Thu Dec  3 05:58:22 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          Generates new types.

Wed Dec  2 00:26:14 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-meta.py:

          An early version of a python script to generate meta-information
          from xsd-generated header file.

        * tests/LEESA-Linux/UdmApp-PICML.cpp:

          Fixed the PICML compilation test on linux.

Mon Nov 30 02:33:02 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * tests/LEESA-Linux/PICML.h:
        * tests/LEESA-Linux/README:
        * tests/LEESA-Linux/SM.h:
        * tests/LEESA-Linux/UdmApp-PICML.cpp:
        * tests/LEESA-Linux/UdmApp-SM.cpp:

          Updated Linux tests for LEESA

Mon Nov 30 01:44:17 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/bin/gen-pairs.pl:

        * Utils/LEESA/include/AP.cpp:
        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_VisitorAsIndex.h:
        * Utils/LEESA/include/SP.cpp:

          LEESA supports hierarchical visitor using AroundFullTD operator.
          gen-pairs.pl generates the Leave_* functions for UDM.

        * tests/SM_LEESA/ComponentLib_i.c:
        * tests/SM_LEESA/SM.h:
        * tests/SM_LEESA/SM.cpp:
        * tests/SM_LEESA/SM.xme:
        * tests/SM_LEESA/SM.xml:
        * tests/SM_LEESA/SM.xmp:
        * tests/SM_LEESA/SM.xsd:
        * tests/SM_LEESA/SM_LEESA.vcproj:
        * tests/SM_LEESA/SM_export.h:
        * tests/SM_LEESA/SM_uml.xme:
        * tests/SM_LEESA/TestSM.xme:
        * tests/SM_LEESA/UdmApp.cpp:

          Updated the SM_LEESA test to include hierarchical visitor.

Thu Nov 26 01:26:28 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/AP.cpp:

          Fixed container typedef.

Thu Nov 26 01:18:51 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * Utils/LEESA/include/Expression_Traits.h:
        * Utils/LEESA/include/Kind_Traits.h:
        * Utils/LEESA/include/LEESA.cpp:
        * Utils/LEESA/include/LEESA_LShift.cpp:
        * Utils/LEESA/include/LEESA_Operators.cpp:
        * Utils/LEESA/include/LEESA_RShift.cpp:
        * Utils/LEESA/include/LEESA_VisitorAsIndex.h:
        * Utils/LEESA/include/SP.cpp:

          Decoupled LEESA from UDM as much as possible.

        * tests/LEESA-Linux/Makefile:
        * tests/LEESA-Linux/PICML.h:
        * tests/LEESA-Linux/SM.h:
        * tests/LEESA-Linux/UdmApp-SM.cpp:
        * tests/LEESA-Linux/library-meta.cxx:
        * tests/LEESA-Linux/library-meta.hxx:

          Corresponding changes in the tests.

Wed Nov 25 14:10:57 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:

          . Bug fix where using the default implementation generator
            to generate an existing component's implementation did
            not set the component reference for the monolithic
            implementation.

          . Bug fix where adding a component instance to a component
            assembly resulted in generating the default implementation
            for the newly created instance. This should happen only
            when adding a component to a interface definition.

Tue Nov 24 17:58:23 UTC 2009  Sumant Tambe  <sutambe@nospam>

        * ChangeLog:
        * ChangeLogs/ChangeLog-09b:
        * contrib:

          . CoSMIC version 0.7.4.5 was released. Tag: CoSMIC-0.7.4.5
            Moved the old ChangeLog to ChangeLogs/ChangeLog-09b.
            contrib svn:externals property back to HEAD now.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
