Thu Aug 12 13:28:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Bug fix where allowing an extended port from the same component
          instance to connect with the same connector fragment was handled
          incorrectly.

Thu Aug 12 01:35:08 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:

          Implemented new rule that gives each component instance its own
          dedicated connector fragment. This means that is possible for
          multiple extended ports on a component instance to share the
          same connector fragment.

          Implemented rule for ami4ccm connector fragments that emulates
          sharing of connector fragments between component instances.

Wed Aug 11 16:45:22 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Struct_Enum.cpp:
        * PIM/PICML/tests/IDL_to_PICML/Struct_Enum.idl:
        * PIM/PICML/tests/IDL_to_PICML/Struct_Enum.mpc:

          Added test/example to validate use of Enum type
          within a structure.

Tue Aug 10 22:08:38 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:

          Rearranged the visitation code in Deployment_Domain_Visitor.

Tue Aug 10 17:14:07 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:

          Fixed structural well-formedness errors of generated cdd file.

Tue Aug 10 14:53:22 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Bug fix where Enum is generated in idl.

Tue Aug 10 14:29:05 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Enum.cpp:

          Bug fixed in error checking condition.

Mon Aug  9 23:34:36 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Enum.idl:
        * PIM/PICML/tests/IDL_to_PICML/Enum.cpp:
        * PIM/PICML/tests/IDL_to_PICML/Enum.mpc:

          Added test for Enum type.

Sun Aug  8 12:45:03 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:

          Each connection to/from a connector now results in a new
          connector fragment. Right now, there is no sharing of connector
          fragments.

Sun Aug  8 12:05:03 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Fixed some constraints.

Sat Aug  7 23:06:40 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.cpp:

          Updated the PICML model intelligence to either (1) set the name
          of a publish/consume connection or (2) display a dialog for
          selecting the correct name when creating a connection between
          a delegated port and connector instance.

Sat Aug  7 00:51:19 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Relaxed cardinality constraints on delegated extended ports.

Fri Aug  6 16:47:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Preprocessor_Importer.cpp:

          Bug fix where importing idl that contained ami4ccm
          pragma statments were not preserved in the model.

Fri Aug  6 14:14:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * NEWS:

          Updated the NEWS file.

Fri Aug  6 13:47:20 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ConnectorInstanceDecorator:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator.idl:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator.mpc:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator.reg:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator_Impl.h:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator_Impl.cpp:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator_Module.cpp:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decoratord.reg:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/stdafx.h:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/stdafx.cpp:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Implemented a decorator for ConnectorInstance elements that
          displays the connector's name and its implementation type
          information.

Fri Aug  6 04:08:40 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_dialogs.mpb:

          Removed the resource for the base project.

        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Module.cpp:
        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.cpp:

          Implemented support for setting the name of a connection
          between a connector and a facet/receptacle.

        * PIM/PICML/tests/assembly:
        * PIM/PICML/tests/assembly/Model_Intelligence:
        * PIM/PICML/tests/assembly/Model_Intelligence/ToConnector.xme:

          Test for validating the model intelligence works with connecting
          a facet/receptacle to a connector.

        * Utils/GAME/game/be/stdafx.h:

          Added _WINVER and _WINNT macros.

        * Utils/GAME/game/dialogs/Dialog_Display_Strategy.cpp:
        * Utils/GAME/game/dialogs/GAME_Dialogs.mpc:
        * Utils/GAME/game/dialogs/Module.h:
        * Utils/GAME/game/dialogs/Module.cpp:
        * Utils/GAME/game/dialogs/Selection_List_Dialog.h:
        * Utils/GAME/game/dialogs/Selection_List_Dialog.cpp:
        * Utils/GAME/game/dialogs/Selection_List_Dialog_T.h:
        * Utils/GAME/game/dialogs/Selection_List_Dialog_T.cpp:
        * Utils/GAME/game/dialogs/resource.h:
        * Utils/GAME/game/dialogs/stdafx.h:

          Implemented the project as a MFC extension module. This makes
          it a LOT easier to reuse the GUI classes.

Fri Aug  6 03:01:36 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Bug fixed where const char is generated.

Thu Aug  5 23:47:07 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Array.cpp:
          Fixed compilation error

Thu Aug  5 21:07:54 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Interface.cpp:
        * PIM/PICML/tests/IDL_to_PICML/MultipleInterfaces.cpp:

          Fixed compilation error

Thu Aug  5 20:29:55 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:

          Bug fix where the deployment plan generator crahsed when
          generating multiple deployment plans.

Thu Aug  5 19:32:50 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/deployment/Locality_Manager/ProcessName.xme:

          Test/example for Locality Manager.

Thu Aug  5 19:12:11 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/interpreters/PropertyManager/Collection_Container_Data_Item.h:
        * PIM/PICML/interpreters/PropertyManager/Collection_Container_Data_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Collection_Item.h:
        * PIM/PICML/interpreters/PropertyManager/Collection_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Container_Data_Item.h:
        * PIM/PICML/interpreters/PropertyManager/Container_Data_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Data_Item.h:
        * PIM/PICML/interpreters/PropertyManager/Data_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Item.h:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Item_Base.h:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Item_Base.cpp:
        * PIM/PICML/interpreters/PropertyManager/New_Collection_Item.h:
        * PIM/PICML/interpreters/PropertyManager/New_Collection_Item.cpp:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager.mpc:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog_ListCtrl.h:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog_ListCtrl.cpp:

          The property manager is now able to move elements in
          a collection up and down. Also, it is possible to delete
          an existing element in the collection from the property
          manager.

Thu Aug  5 14:27:53 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Added support to handle name if Property name is LocalityManager.ProcessName.

        * PIM/PICML/tests/deployment/Locality_Manager/ExplicitExec.xme:
        * PIM/PICML/tests/deployment/Locality_Manager/SpawnMultiple.xme:
        * PIM/PICML/tests/deployment/Locality_Manager/SpawnOne.xme:

          Tests/examples for Locality Manager.

Thu Aug  5 05:00:00 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/PropertyManager/Data_Value_Controls.h:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Controls.cpp:
        * PIM/PICML/interpreters/PropertyManager/Data_Value_Controls_T.cpp:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager.mpc:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog.h:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog.cpp:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog_ListCtrl.h:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Dialog_ListCtrl.cpp:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Impl.h:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager_Impl.cpp:
        * PIM/PICML/interpreters/PropertyManager/StdAfx.h:

          Re-implemented the property manager using GAME.

          Improved the property manager's design/architecture.

          Implemented edit controls for UnsignedLongLongInteger and
          LongLongInteger types.

Wed Aug  4 23:49:44 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/deployment/Nodemap:

          Added folder for test/examples of Nodemap Generator.

        * PIM/PICML/tests/deployment/Nodemap/StockQuoter_Nodemap.xme:

          Tests/examples for Nodemap Generator.

Wed Aug  4 23:19:48 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/tests/deployment/Locality_Manager:

          Added folder for test/examples of Locality Manager.

        * PIM/PICML/tests/deployment/Locality_Manager/CPUAffinity.xme:
        * PIM/PICML/tests/deployment/Locality_Manager/CommandLinePassage.xme:
        * PIM/PICML/tests/deployment/Locality_Manager/StockQuoter_LocalityManagers.xme:
        * PIM/PICML/tests/deployment/Locality_Manager/StockQuoter_One_LocalityManager.xme:

          Tests/examples for Locality Manager.

Wed Aug  4 22:49:00 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/MultipleInterfaces.idl:
        * PIM/PICML/tests/IDL_to_PICML/MultipleInterfaces.mpc:
        * PIM/PICML/tests/IDL_to_PICML/MultipleInterfaces.cpp:

          Added idl_to_picml multiple interface test cases.

Wed Aug  4 19:01:58 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.cpp:

          Improved implementation for writing the file.

Wed Aug  4 18:40:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Fixed bug in workspace.

        * PIM/PICML/tests/deployment/MultiPortDelegation.xme:

          Test for multi-port delegation.

Wed Aug  4 17:39:24 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.cpp:

          Bug fix where the nodemap generator failed to generate the
          target file due to not opening the output stream for writing.

        * PIM/PICML/interpreters/Interpreters.mwc:

          Removed the path interpreter from the default build.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Relaxed the cardinality constraint so you can do 0..*
          connections with facet, receptacle, event source, and event
          sink delegates.

        * Utils/GAME/game/be/Event_Handler.cpp:

          Updated the return values.

Wed Aug  4 04:41:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.cpp:

          Bug fix where importing a model would result in displaying
          an unnecessary warning message.

        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.cpp:
        * Utils/GAME/game/be/Event_Handler_Impl.h:
        * Utils/GAME/game/be/Event_Handler_Impl.inl:

          Implemented support for dispatching global events.

Wed Aug  4 03:12:08 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/GME_ID_Generator.cpp:

          Bug fix where the initial state of the id generator would
          produce duplicate ids if the number of elements for a given
          kind was less than the max count encoded in an id.

Wed Aug  4 00:00:02 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Implemented an event handler object that generates the necessary
          ami4ccm connector element. The methods on the interfaces that
          parameterize the connectors are not generated.

        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:

          Removed trailing spaces from file.

        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.inl:
        * Utils/GAME/game/be/Event_Handler.cpp:
        * Utils/GAME/game/be/Event_Handler_Impl.h:
        * Utils/GAME/game/be/Event_Handler_Impl.inl:

          Implemented new event handler architecture that provides methods
          for each global and object event. This means the object events
          are automatically dispatched for the client. Likewise, it is now
          possible to register event handler objects for types based on
          their name in the metamodel.

        * PIM/PICML/addons/PICMLManager/ComponentConfig.h:
        * PIM/PICML/addons/PICMLManager/ComponentLib_h.h:
        * PIM/PICML/addons/PICMLManager/component.def:

          Removed these files.

Tue Aug  3 22:07:46 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Removed code that provided deprecation support for DataValue attribute
          of Property and DataType reference within Property.

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Added support to handle name if Property name is LocalityArguments.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.cpp:

          Changed code to handle files using streams.

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          Changed code to handle new Property and remove support
          for DataValue attribute of Property and DataType reference
          within Property.

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          Changed code to handle new Property and remove support
          for DataValue attribute of Property and DataType reference
          within Property.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Removed the DataValue attribute of Property and support for
          DataType reference within Property. Corrected the bug in
          constraint AddComplexTypeReference in the Common paradigm sheet.
          Deleted constraint UniquePropertyNames in the DeploymentPlan
          paradigm sheet.

Tue Aug  3 20:42:36 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Interface.mpc:
        * PIM/PICML/tests/IDL_to_PICML/Interface.cpp:
        * PIM/PICML/tests/IDL_to_PICML/Typedef.mpc:

          Updated idle_to_picml interface test cases

        * PIM/PICML/tests/IDL_to_PICML/Interface.h:

          Removed this file.

Tue Aug  3 13:48:56 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Updated deployment plan generator to use the node reference
          name when specifying the node location of an instance.

Tue Aug  3 05:51:18 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Interface.h:
        * PIM/PICML/tests/IDL_to_PICML/Interface.idl:
        * PIM/PICML/tests/IDL_to_PICML/Interface.cpp:

          Updated idl_to_picml interface test cases.

        * PIM/PICML/tests/IDL_to_PICML/Typedef.cpp:
        * PIM/PICML/tests/IDL_to_PICML/Typedef.idl:
        * PIM/PICML/tests/IDL_to_PICML/Typedef.mpc:

          Added idl_to_picml typedef test cases.

Tue Aug  3 05:14:20 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>


        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Added support for AMI4CCM.

        * PIM/PICML/interpreters/IDLImporter/Preprocessor_Importer.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          Bug fix where 'uses multiple' was not handled correctly.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Added SupportsAsync to the Object element.

Mon Aug  2 05:24:17 UTC 2010  Harold Owens II  <owensh at iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Interface.cpp:
        * PIM/PICML/tests/IDL_to_PICML/Interface.idl:
        * PIM/PICML/tests/IDL_to_PICML/Interface.mpc:

          Added idl_to_picml interface test cases.

Mon Aug  2 04:37:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Added the AsyncCommunication attribute to the RequiredRequestPort.
          This will be used to generate the necessary statements/artifacts
          that support ami4ccm.

        * PIM/PICML/paradigms/PICML-monolith.xme:
        * PIM/PICML/paradigms/PICML-monolith.xmp:
        * PIM/PICML/paradigms/PICMLParadigm.wxs:
        * PIM/PICML/paradigms/PICMLTemplate.xme:

          Removed these files.

Mon Aug  2 04:09:37 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Project.cpp:

          Fixed compile error related to including non-existent header
          file.

Sun Aug  1 14:02:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Atom.cpp:
        * Utils/GAME/game/xme/Connection.cpp:
        * Utils/GAME/game/xme/Folder.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator.h:
        * Utils/GAME/game/xme/GME_ID_Generator.inl:
        * Utils/GAME/game/xme/GME_ID_Generator.cpp:
        * Utils/GAME/game/xme/ID_Generator_Repo.h:
        * Utils/GAME/game/xme/ID_Generator_Repo.inl:
        * Utils/GAME/game/xme/ID_Generator_Repo.cpp:
        * Utils/GAME/game/xme/Library_Importer.h:
        * Utils/GAME/game/xme/Library_Importer.cpp:
        * Utils/GAME/game/xme/Model.cpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.inl:
        * Utils/GAME/game/xme/Project.cpp:
        * Utils/GAME/game/xme/Reference.cpp:
        * Utils/GAME/game/xme/XME.mpc:

          Bug fix where using the -i option with very large models
          could result in duplicated id generation. This prevented
          the model from being opened.

        * PIM/PICML/tests/regression/REGRESSION:

          Updated the regession testing log.

        * docs/KNOWN-ISSUES:

          Updated the known issues file.

        * Utils/GAME/game/xme/GME_ID_Generator_T.h:
        * Utils/GAME/game/xme/GME_ID_Generator_T.inl:
        * Utils/GAME/game/xme/GME_ID_Generator_T.cpp:

          Removed these files.

Sat Jul 31 17:00:39 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:

          Explicitly disable inclusion of files that have the E.idl
          extension. This will be expanded to a command-line parameter
          that will allows users to specify what files to excludes.

Sat Jul 31 15:56:43 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Library.h:
        * Utils/GAME/game/xme/Library.inl:
        * Utils/GAME/game/xme/Library.cpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.cpp:

          Bug fix where adding importing a library that is already attached
          to the model created a duplicate copy of the library. Now, a library
          can only be attached once to a model.

Fri Jul 30 13:04:58 UTC 2010  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/PICML/PICML_GUID.mpc:

          Moved script name to commandflags to fix build error on *nix systems.

        * Release_idl_to_picml.mwc:

          Added PICML_GUID.

Fri Jul 30 12:11:52 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Bug fix where the servant/executor artifacts were added to
          the implementation if the component did not specify one.

        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Fixed support for generating case statements for unions.

        * PIM/PICML/tests/IDL_to_PICML/Union.cpp:

          Fixed compile warning for empty statements.

Fri Jul 30 04:35:53 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.cpp:

          Changed file name from Deployment_Node_Visitor to Nodemap_Generator.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Node_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Node_Visitor.cpp:

          Removed these files.

Fri Jul 30 02:26:37 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          Fixed support for unions.

Fri Jul 30 00:38:02 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Node_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Node_Visitor.cpp:

          Removed the code to create the .nodemap file from the Deployment_Domain_Visitor
          and created a new visitor Deployment_Node_Visitor to handle the generation of
          the file.

Thu Jul 29 23:08:09 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/Component.rc:

          Fixed compile error from disfunct resource includes.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Added support for delegating extended ports and mirror ports
          from a component assembly.

        * PIM/PICML/interpreters/PICML/PICML.mpc:

          Removed unnessary base projects.

Mon Jul 26 17:39:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/PICML/PICML_GUID.h:

Mon Jul 26 15:34:24 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:

          Added code to handle ComponentAssembly elements in the DeploymentPlanVisitor.
          Added code in connectionVisitor to handle Invoke, ReceptacleDelegate,
          FacetDelegate, SendsTo, EventSourceDelegate and EventSinkDelegate connections.
          Added code in Deployment_Domain_Visitor to auto generate NodeMap.dat file.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Changed the cardinality between ProvidedRequestPortDelegate and
          ProvidedRequestPortEnd to 0..1 at both ends.

Sun Jul 25 21:44:15 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Somehow, the code that generates the InstanceIOR and
          RegisterNaming was deleted from the interpreter. This
          functionality has been readded.

Sun Jul 25 13:27:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:

          Fixed error in project specification.

Fri Jul 23 22:51:35 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Transaction.h:
        * Utils/GAME/game/Transaction.inl:
        * Utils/GAME/game/Transaction.cpp:

          Implemented a flush () method that commits the current
          transaction and starts a new transaction.

Fri Jul 23 12:01:23 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.idl:
        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:
        * PIM/PICML/addons/CBMLManager/CBMLManager_Impl.h:
        * PIM/PICML/addons/CBMLManager/CBMLManager_Impl.inl:
        * PIM/PICML/addons/CBMLManager/CBMLManager_Impl.cpp:
        * PIM/PICML/addons/CBMLManager/CBMLManager_Module.cpp:
        * PIM/PICML/addons/CBMLManager/StdAfx.h:
        * PIM/PICML/addons/CBMLManager/StdAfx.cpp:
        * PIM/PICML/addons/CBMLManager/String_Selection_Dialog.cpp:

          Added support for automatically generating the next state
          for a RequestAction.

          Re-implemented the addon using GAME's component architecture.

        * Utils/GAME/game/Component.h:
        * Utils/GAME/game/Component.inl:
        * Utils/GAME/game/Component.cpp:

          Implemented the enable () function so clients can programmatically
          enable/disable a loaded component. This is most useful when deadling
          with addons.

        * Utils/GAME/game/ComponentEx.h:

          Removed trailing spaces.

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:

          Implemented the addon_component () method for getting an addon
          by is program id.

        * Utils/GAME/game/Reference.h:

          Moved the impl () method to the public section.

        * Utils/GAME/game/be/Addon_Impl_T.h:
        * Utils/GAME/game/be/Addon_Impl_T.cpp:
        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.inl:
        * Utils/GAME/game/be/Event_Handler.cpp:

          Implemented the Enable () method. By default the addon is enabled. If
          the architecture receives a disable command, then all events send to
          the addon are suppressed and not passed to the implementation.

        * MPC/config/game_dialogs.mpb:
        * Utils/GAME/game/dialogs/Dialog_Display_Strategy.h:
        * Utils/GAME/game/dialogs/Dialog_Display_Strategy.inl:
        * Utils/GAME/game/dialogs/Dialog_Display_Strategy.cpp:
        * Utils/GAME/game/dialogs/Dialogs.rc:
        * Utils/GAME/game/dialogs/GAME_Dialogs.mpc:
        * Utils/GAME/game/dialogs/Object_Path_Dialog_Display_Strategy.h:
        * Utils/GAME/game/dialogs/Object_Path_Dialog_Display_Strategy.inl:
        * Utils/GAME/game/dialogs/Object_Path_Dialog_Display_Strategy.cpp:
        * Utils/GAME/game/dialogs/Selection_List_Dialog.h:
        * Utils/GAME/game/dialogs/Selection_List_Dialog.cpp:
        * Utils/GAME/game/dialogs/stdafx.h:
        * Utils/GAME/game/dialogs/stdafx.cpp:

          Stategized the dialog so it is now possible for clients to
          control the display string of an element. If the dialog is not
          strategized, then the name of the element is used.

          Implemented a strategy for displaying elements by their path.

        * PIM/PICML/addons/CBMLManager/CBMLManager.wxs:
        * PIM/PICML/addons/CBMLManager/Component.def:
        * PIM/PICML/addons/CBMLManager/ComponentLib_h.h:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.h:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.cpp:
        * PIM/PICML/addons/CBMLManager/RawComponent.h:
        * PIM/PICML/addons/CBMLManager/RawComponent.inl:
        * PIM/PICML/addons/CBMLManager/RawComponent.cpp:

          Removed these files.

Wed Jul 21 17:36:00 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/tests/deployment/PortDelegation.xme:

          Model for testing deployment of assemblies with delegated ports.

Wed Jul 21 15:34:07 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * docs/ROADMAP:

          Added tentative release dates to the ROADMAP.

Wed Jul 21 15:25:15 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * docs/ROADMAP:

          Grammatical and spelling corrections.

Wed Jul 21 15:21:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * docs/ROADMAP:

          Grammatical and spelling corrections.

Wed Jul 21 15:18:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * docs/ROADMAP:

          Added a missing feature for the ROADMAP document.

Wed Jul 21 15:14:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * docs/ROADMAP:

          Updated the wording.

Wed Jul 21 15:07:37 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * NEWS:

          Fixed typo in version numbering.

        * docs/ROADMAP:

          Introduction of a ROADMAP document for CoSMIC.

Wed Jul 21 13:21:36 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/tests/regression:
        * PIM/PICML/tests/regression/REGRESSION:

          Listing of regression test that must be executed manually before
          each release of CoSMIC.

Tue Jul 20 23:58:46 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/tests/IDL_to_PICML/Constant.mpc:

          Improved the test specification.

Tue Jul 20 23:39:40 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Bug fix where the PICML manager prevented creating an instance
          of a component assembly if the assembly contained component
          instances that had ports.

Tue Jul 20 20:21:39 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * bin/migrate.bat:
        * bin/migration/build.xml:
        * bin/migration/edu:
        * bin/migration/edu/vanderbilt:
        * bin/migration/edu/vanderbilt/dre:
        * bin/migration/edu/vanderbilt/dre/MgaEntityResolver.java:
        * bin/migration/migration.jar:

          Implemented an EntityResolver that resolves the location of
          mga.dtd. This means you no longer have to have mga.dtd in the
          same directory as the file undergoing migration.

Tue Jul 20 20:10:31 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          Cleaned up some of the code that was not being used or was
          commented.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Complex_Type_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Complex_Type_Visitor.inl:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Complex_Type_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Value_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Value_Visitor.inl:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Value_Visitor.cpp:

          Removed these files. The functionality of these visitors is
          now included within Data_Type_Visitor and Data_Value_visitor
          respectively.

Tue Jul 20 15:33:35 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/ComponentEx_Impl_T.cpp:

          Updated implementation to call AFX_MANAGE_STATE () before
          it passes control to the implementation.

        * Utils/GAME/game/xml:
        * Utils/GAME/game/xml/Document.h:
        * Utils/GAME/game/xml/Document.inl:
        * Utils/GAME/game/xml/Document.cpp:
        * Utils/GAME/game/xml/Fragment.h:
        * Utils/GAME/game/xml/Fragment.inl:
        * Utils/GAME/game/xml/Fragment.cpp:
        * Utils/GAME/game/xml/GAME_XML.mpc:
        * Utils/GAME/game/xml/Memory_Manager.h:
        * Utils/GAME/game/xml/Memory_Manager.cpp:
        * Utils/GAME/game/xml/Static_Configuration.h:
        * Utils/GAME/game/xml/Static_Configuration.cpp:
        * Utils/GAME/game/xml/String.h:
        * Utils/GAME/game/xml/String.inl:
        * Utils/GAME/game/xml/String.cpp:
        * Utils/GAME/game/xml/Xml_export.h:

          Project that simplifies common methods/operations when
          generating XML documents.

Tue Jul 20 14:31:41 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Added support to the behavior model for calling a facet's
          method. The name of the element is the target facet, and the
          MethodName attribute is the name of the method on the facet.

Tue Jul 20 07:47:11 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-10d:
        * contrib:

          CoSMIC version 0.8.0 was released. Moved the ChangeLog
          to ChangeLogs/ChangeLog-10d. Reverted contrib svn:externals
          property back to the HEAD revision.

   Local Variables:
   mode: change-log
   add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
   indent-tabs-mode: nil
   End:

