Thu Sep  9 23:15:02 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/NodeReference_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/NodeReference_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from NodeReference_Create_Event_Handler
          to NodeReference_Event_Handler.

Thu Sep  9 23:05:39 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/Event_Handler_Config.h:

          Removed decleration of unused methods.

        * PIM/PICML/addons/PICMLManager/ExternalDelegate_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ExternalDelegate_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from ExternalDelegate_Create_Event_Handler
          to ExternalDelegate_Event_Handler.

Thu Sep  9 22:54:44 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/Event_Handler_Base.h:

          Added data members to protected access specifier.

Thu Sep  9 22:48:15 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ComponentInstanceType_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceType_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from ComponentInstanceType_Relation_Event_Handler
          to ComponentInstanceType_Event_Handler.

Thu Sep  9 22:22:40 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ComponentInstanceRef_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceRef_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from ComponentInstanceRef_Set_Include_Event_Handler
          to ComponentInstanceRef_Event_Handler.

Thu Sep  9 21:54:29 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/Component_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/Component_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from Component_Create_Event_Handler
          to Component_Event_Handler and added data members to private.

Thu Sep  9 21:15:49 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ComplexTypeReference_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComplexTypeReference_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from ComplexTypeReference_Relation_Event_Handler
          to ComplexTypeReference_Event_Handler.

Thu Sep  9 21:08:52 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/CollocationGroup_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/CollocationGroup_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from CollocationGroup_Relation_Event_Handler
          to CollocationGroup_Event_Handler.

Thu Sep  9 21:00:43 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AttributeValue_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AttributeValue_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from AttributeValue_Relation_Event_Handler
          to AttributeValue_Event_Handler.

Thu Sep  9 20:16:56 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AttributeMember_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AttributeMember_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changed class name from AttributeMember_Relation_Event_Handler
          to AttributeMember_Event_Handler.

Thu Sep  9 19:47:02 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Instead of multiple classes for different ComponentInstance
          events created a single class for to handle all the
          ComponentInstance events.

Thu Sep  9 19:20:09 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/addons/PICMLManager/UUID_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/UUID_Event_Handler.cpp:

          Instead of multiple classes for different UUID events
          created a single class for to handle all the UUID events.

Thu Sep  9 18:32:54 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * Utils/GAME/game/be/Event_Handler_Impl.inl:

          Bug fixed that caused some of the event handlers to not work
          due to wrong default value being set to is_importing_ because of
          non initailization in one of the overloaded constructors.

Thu Sep  9 14:44:27 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:

          Fixed compilation errors.

Thu Sep  9 14:41:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Component.rc:

          Fixed compilation errors.

Thu Sep  9 06:28:12 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.cpp:

          Added is_importing_ and its related handler methods to
          Event_Handler_Impl base class in GAME.

        * PIM/PICML/addons/PICMLManager/AttributeMember_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AttributeMember_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/AttributeValue_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/AttributeValue_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/CollocationGroup_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/CollocationGroup_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/ComplexTypeReference_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComplexTypeReference_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceRef_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceRef_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceType_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstanceType_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/Component_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/Component_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/ConnectorInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ConnectorInstance_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/Event_Handler_Base.h:
        * PIM/PICML/addons/PICMLManager/Event_Handler_Base.cpp:
        * PIM/PICML/addons/PICMLManager/Event_Handler_Config.h:
        * PIM/PICML/addons/PICMLManager/Event_Handler_Config.cpp:
        * PIM/PICML/addons/PICMLManager/ExternalDelegate_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ExternalDelegate_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/NodeReference_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/NodeReference_Event_Handler.cpp:

          Classes added to facilitate handling of events using objects
          instead of events.

        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:

          Files added to handle events using objects.

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Changes made to handle events using object and not methods.

        * PIM/PICML/addons/PICMLManager/PICML_Manager_Addon.h:
        * PIM/PICML/addons/PICMLManager/PICML_Manager_Addon.cpp:

          Changes made to for the call to the handle methods for importing
          of the Event_Handler_Config class and not the PICMLManager_Impl class.

        * PIM/PICML/addons/PICMLManager/PICML_Model_Intelligence.reg:
        * PIM/PICML/addons/PICMLManager/PICML_Model_Intelligenced.reg:

          Changed name of PICML_PICMLManager to PICML_Model_Intelligence.

        * PIM/PICML/addons/PICMLManager/PortInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/PortInstance_Event_Handler.cpp:

          Class added to facilitate handling of events using objects
          instead of events.

        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ToConnector_Event_Handler.cpp:

          Added is_importing_ and its related handler methods to
          Event_Handler_Impl base class in GAME.

        * PIM/PICML/addons/PICMLManager/UUID_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/UUID_Event_Handler.cpp:

        * Utils/GAME/game/be/Event_Handler_Impl.h:
        * Utils/GAME/game/be/Event_Handler_Impl.inl:

          Added is_importing_ and its related methods to this
          base class.

        * PIM/PICML/addons/PICMLManager/PICML_PICMLManager.reg:
        * PIM/PICML/addons/PICMLManager/PICML_PICMLManagerd.reg:

          Changed name of PICML_PICMLManager to PICML_Model_Intelligence.

          Removed these files.

Wed Sep  8 17:26:46 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Component_Impl.cpp:

          Removed dead code from this file.

        * PIM/PICML/interpreters/IDLGenerator/UdmConfig.h:

          Removed this file.

Wed Sep  8 17:09:36 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Library.cpp:

          Bug fix where the name of the library displayed in the
          model was incorrect.

Wed Sep  8 15:07:39 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/be_util.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

          Update the command-line arguments to the following semantics:

            -x : name of the target xme file. If the file does not exist
                 then it is created. If the file does exist, then it is
                 reused.

            --overwrite : overwrites an existing file (i.e., force the
                          creation of a new file.

Wed Sep  8 15:04:21 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:

Wed Sep  8 04:42:05 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ConnectorInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ConnectorInstance_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          When adding a connector instance to a model, the PICML model
          intelligence will either (1) automatically select the implementation
          or (2) present a dialog of valid implementations to select.
          It will then automatically create the ComponentImplementationType
          element.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Plan_Generator_Impl.cpp:

          Fixed compilation errors.

Wed Sep  8 04:24:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.h:
        * PIM/PICML/addons/PICMLManager/ComponentInstance_Event_Handler.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          When adding a component instance to a model, the PICML model
          intelligence will either (1) automatically select the implementation
          or (2) present a dialog of valid implementations to select.
          It will then automatically create the ComponentInstanceType
          element.

Wed Sep  8 03:20:32 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          The component assembly and component assembly reference now
          have the light blue color they originally had in previous
          versions.

Wed Sep  8 03:07:21 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/RawComponent.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmConfig.h:

          Removed these files.

Wed Sep  8 03:04:27 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Configuration.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlan_MainDialog.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlan_MainDialog.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Plan_Generator.idl:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Plan_Generator_Impl.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Plan_Generator_Impl.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Plan_Generator_Module.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/StdAfx.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:

          The location of the generated deployment descriptors is saved
          and restored during future exeuctions of the deployment plan
          generator.

Tue Sep  7 22:14:48 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager_Impl.cpp:
        * Utils/T3/t3/runtime/Runtime_Engine.cpp:

          Fixed compilation errors.

Tue Sep  7 21:46:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Fixed compilation errors.

Tue Sep  7 16:46:00 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Object.h:
        * Utils/GAME/game/Object.inl:
        * Utils/GAME/game/Object.cpp:

          Removed the operator bool () from Object class.

          Removed send_event () from the Object class.

          Implemented the hash () method for calculating the hash value
          of an object.

        * Utils/GAME/game/FCO.inl (is_basetype):

          Used is_nil () instead of operator bool ().

Fri Sep  3 01:35:26 UTC 2010  Harold Owens II  <owensh at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Dependency_Processor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Dependency_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Ordering_Processor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Ordering_Processor.cpp:

          Fixed generation of empty module by idl generator and fixed
          idl definition re-ordering issue caused by idl generator

        * PIM/PICML/tests/IDL_to_PICML/Array.cpp:
        * PIM/PICML/tests/IDL_to_PICML/MultipleInterfaces.cpp:

          Updated idl to picml test cases

Thu Sep  2 21:16:01 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Artifact_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:
        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/Implementation_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Implementation_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Preprocessor_Importer.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Scope.h:
        * PIM/PICML/interpreters/IDLImporter/Scope.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/Interpreters.mwc:
        * PIM/PICML/interpreters/PICML/PICML_GUID.mpc:

          Replaced the dependency on CoSMIC_Xerces_Utils with GAME_XME
          and GAME_XML.

        * Utils/GAME/game/xme/Atom.h:
        * Utils/GAME/game/xme/Atom.cpp:
        * Utils/GAME/game/xme/Attribute.h:
        * Utils/GAME/game/xme/Attribute.inl:
        * Utils/GAME/game/xme/Attribute.cpp:
        * Utils/GAME/game/xme/Configuration.h:
        * Utils/GAME/game/xme/Configuration.cpp:
        * Utils/GAME/game/xme/Connection.h:
        * Utils/GAME/game/xme/Connection.cpp:
        * Utils/GAME/game/xme/FCO.h:
        * Utils/GAME/game/xme/FCO.inl:
        * Utils/GAME/game/xme/FCO.cpp:
        * Utils/GAME/game/xme/Folder.h:
        * Utils/GAME/game/xme/Folder.inl:
        * Utils/GAME/game/xme/Folder.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator.h:
        * Utils/GAME/game/xme/GME_ID_Generator.inl:
        * Utils/GAME/game/xme/GME_ID_Generator.cpp:
        * Utils/GAME/game/xme/Library.h:
        * Utils/GAME/game/xme/Library.inl:
        * Utils/GAME/game/xme/Library.cpp:
        * Utils/GAME/game/xme/Library_Importer.h:
        * Utils/GAME/game/xme/Library_Importer.cpp:
        * Utils/GAME/game/xme/Model.h:
        * Utils/GAME/game/xme/Model.inl:
        * Utils/GAME/game/xme/Model.cpp:
        * Utils/GAME/game/xme/Object.h:
        * Utils/GAME/game/xme/Object.inl:
        * Utils/GAME/game/xme/Object.cpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.inl:
        * Utils/GAME/game/xme/Project.cpp:
        * Utils/GAME/game/xme/Reference.h:
        * Utils/GAME/game/xme/Reference.cpp:
        * Utils/GAME/game/xme/Registry.h:
        * Utils/GAME/game/xme/Registry.cpp:
        * Utils/GAME/game/xme/Registry_Node.h:
        * Utils/GAME/game/xme/Registry_Node.cpp:
        * Utils/GAME/game/xme/XME.mpc:
        * Utils/GAME/game/xme/XME_Utils.h:
        * Utils/GAME/game/xme/XME_Utils.cpp:
        * Utils/GAME/game/xme/XME_Utils_T.cpp:
        * Utils/GAME/game/xme/functional.h:
        * Utils/GAME/game/xme/functional.cpp:

          Broke the dependency on CoSMIC_Xerces_Utils. Now, GAME Xme library
          is dependent on GAME Xml.

        * Utils/GAME/game/xml/Entity_Resolver.h:
        * Utils/GAME/game/xml/Entity_Resolver.inl:
        * Utils/GAME/game/xml/Entity_Resolver.cpp:
        * Utils/GAME/game/xml/Error_Handler.h:
        * Utils/GAME/game/xml/Error_Handler.inl:
        * Utils/GAME/game/xml/Error_Handler.cpp:
        * Utils/GAME/game/xml/GAME_XML.mpc:
        * Utils/GAME/game/xml/String.h:
        * Utils/GAME/game/xml/String.inl:
        * Utils/GAME/game/xml/String.cpp:

          Broke the dependency on CoSMIC_Xerces_Utils. Now, GAME Xml is a
          self-contained library.

Wed Sep  1 03:25:47 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/migration/CoSMIC-0.8.2.xslt:

          Update migration script to support complex types.

          Bug fix where creating a simple property that did not originally
          reference any type results in a invalid XML document.

Tue Aug 31 22:03:21 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/migration/CoSMIC-0.8.2.xslt:

          First version of the migration script that converts Property elements
          that are simple type to SimpleProperty elements.

Tue Aug 31 20:07:43 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/migration/CoSMIC-0.8.1.xslt:

          Missing transformation script.

Tue Aug 31 17:28:32 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/AMI4CCM_Event_Handler.cpp:

          Added AFX_MANAGE_STATE () to ensure the dialog has the
          correct title.

        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/be/Event_Handler.cpp:

          Bug fix where using meta objects to dispatch events failed
          because the hash () and equality methods were implemented
          incorrectly.

Sun Aug 29 00:48:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/Event_Handler.cpp:

          Bug fix where registering the same event handler with
          different types failed.

Wed Aug 25 03:40:57 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/Event_Handler.cpp:

          Updated global event dispatcher to use static methods.

Tue Aug 24 12:05:01 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.cpp:

          Updated dispatch_* () methods to use std::bitset instead of the
          integer version of the event's bitmask.

Tue Aug 24 09:59:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * Utils/GAME/game/be/Event_Handler.cpp:

          The initialize () method now starts a new read-only transaction
          by default.

Tue Aug 24 09:52:12 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/MetaBase.cpp:

          Implemented a hash () method.

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Added a transaction to the initialize () method.

        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.cpp:

          Re-implemented the type handler using meta objects instead
          of strings.

Sun Aug 22 23:58:09 UTC 2010  Alhad Mokashi  <amokashi at iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:
        * PIM/PICML/addons/CBMLManager/PICML_CBMLManager.reg:
        * PIM/PICML/addons/CBMLManager/PICML_CBMLManagerd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICML_PICMLManager.reg:
        * PIM/PICML/addons/PICMLManager/PICML_PICMLManagerd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.mpc:
        * PIM/PICML/decorators/ComponentDecorator/PICML_Component_Decorator.reg:
        * PIM/PICML/decorators/ComponentDecorator/PICML_Component_Decoratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/ComponentInstanceDecorator/ComponentInstance_Decorator.mpc:
        * PIM/PICML/decorators/ComponentInstanceDecorator/PICML_ComponentInstance_Decorator.reg:
        * PIM/PICML/decorators/ComponentInstanceDecorator/PICML_ComponentInstance_Decoratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.mpc:
        * PIM/PICML/decorators/ComponentRefDecorator/PICML_ComponentRef_Decorator.reg:
        * PIM/PICML/decorators/ComponentRefDecorator/PICML_ComponentRef_Decoratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator.mpc:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/PICML_ConnectorInstance_Decorator.reg:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/PICML_ConnectorInstance_Decoratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.mpc:
        * PIM/PICML/decorators/NoShowRefersTo/PICML_NoShowRefersTo_Decorator.reg:
        * PIM/PICML/decorators/NoShowRefersTo/PICML_NoShowRefersTo_Decoratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/PackageDecorator/PICML_Package_Decorator.reg:
        * PIM/PICML/decorators/PackageDecorator/PICML_Package_Decoratord.reg:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.mpc:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/decorators/ShowReference/PICML_ShowReferenceDecorator.reg:
        * PIM/PICML/decorators/ShowReference/PICML_ShowReferenceDecoratord.reg:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/BGML/BGML.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/BGMLComponent/BGMLComponent.mpc:
        * PIM/PICML/interpreters/BGMLComponent/PICML_BGMLComponent.reg:
        * PIM/PICML/interpreters/BGMLComponent/PICML_BGMLComponentd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/BGML_Base/BGML_Base.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/ComponentImplementationGenerator/ComponentImplementationGenerator.mpc:
        * PIM/PICML/interpreters/ComponentImplementationGenerator/PICML_ComponentImplementationGenerator.reg:
        * PIM/PICML/interpreters/ComponentImplementationGenerator/PICML_ComponentImplementationGeneratord.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/ConfigExport/ConfigExport.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/Configurator/Configurator.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Value_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Value_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Deployment_Domain_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Nodemap_Generator.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/PICML_DeploymentPlanComponent.reg:
        * PIM/PICML/interpreters/DeploymentPlanComponent/PICML_DeploymentPlanComponentd.reg:

          Changed the visitors to handle the new Simple and Complex Property
          types. Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/EQAL/EQAL.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/PICML_IDLGeneratorComponent.reg:
        * PIM/PICML/interpreters/IDLGenerator/PICML_IDLGeneratorComponentd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/PICML_IDLTextEditor.reg:
        * PIM/PICML/interpreters/IDLTextEditor/PICML_IDLTextEditord.reg:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/MPC/MPC_Interpreter.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/MPCComponent/MPCComponent.mpc:
        * PIM/PICML/interpreters/MPCComponent/PICML_MPCComponent.reg:
        * PIM/PICML/interpreters/MPCComponent/PICML_MPCComponentd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/PAM/PAM.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/PAMComponent/PAMComponent.mpc:
        * PIM/PICML/interpreters/PAMComponent/PICML_PAMComponent.reg:
        * PIM/PICML/interpreters/PAMComponent/PICML_PAMComponentd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/PackageComponent/PICML_PackageComponent.reg:
        * PIM/PICML/interpreters/PackageComponent/PICML_PackageComponentd.reg:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          Changed the visitor to handle the new Simple and Complex Property
          types. Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/Path/Path.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/PathComponent/PICML_PathComponent.reg:
        * PIM/PICML/interpreters/PathComponent/PICML_PathComponentd.reg:
        * PIM/PICML/interpreters/PathComponent/PathComponent.mpc:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/PropertyManager/PICML_Property_Manager.reg:
        * PIM/PICML/interpreters/PropertyManager/PICML_Property_Managerd.reg:
        * PIM/PICML/interpreters/PropertyManager/Property_Manager.mpc:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/QED/deployment/PICML_QEDDeploymentComponent.reg:
        * PIM/PICML/interpreters/QED/deployment/PICML_QEDDeploymentComponentd.reg:
        * PIM/PICML/interpreters/QED/deployment/QED_Deployment.mpc:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/interpreters/QoSMapping/QoSMapping.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/QoSMappingComponent/QoSMappingComponent.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/RTConfig/RTConfig.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/RTConfigComponent/RTConfigComponent.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/Target/Domain.mpc:

          Added PICML_ to the project name.

        * PIM/PICML/interpreters/TargetComponent/DomainComponent.mpc:
        * PIM/PICML/interpreters/TargetComponent/PICML_DomainComponent.reg:
        * PIM/PICML/interpreters/TargetComponent/PICML_DomainComponentd.reg:

          Added PICML_ to the project name, .reg file names and
          .dll file name within the .reg files.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Added two new types of Properties, Simple and Complex,
          instead of the old one. Also, put Properties in their
          own Aspect and fixed constraints.

        * PIM/PICML/addons/CBMLManager/CBMLManager.reg:
        * PIM/PICML/addons/CBMLManager/CBMLManagerd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/addons/PICMLManager/PICMLManager.reg:
        * PIM/PICML/addons/PICMLManager/PICMLManagerd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.reg:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/ComponentInstanceDecorator/ComponentInstance_Decorator.reg:
        * PIM/PICML/decorators/ComponentInstanceDecorator/ComponentInstance_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.reg:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decorator.reg:
        * PIM/PICML/decorators/ConnectorInstanceDecorator/ConnectorInstance_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.reg:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.reg:
        * PIM/PICML/decorators/PackageDecorator/Package_Decoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/decorators/ShowReference/ShowReferenceDecorator.reg:
        * PIM/PICML/decorators/ShowReference/ShowReferenceDecoratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/BGMLComponent/BGMLComponent.reg:
        * PIM/PICML/interpreters/BGMLComponent/BGMLComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/ComponentImplementationGenerator/ComponentImplementationGenerator.reg:
        * PIM/PICML/interpreters/ComponentImplementationGenerator/ComponentImplementationGeneratord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.reg:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/IDLGenerator/IDLGeneratorComponent.reg:
        * PIM/PICML/interpreters/IDLGenerator/IDLGeneratorComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.reg:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditord.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/MPCComponent/MPCComponent.reg:
        * PIM/PICML/interpreters/MPCComponent/MPCComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/PAMComponent/PAMComponent.reg:
        * PIM/PICML/interpreters/PAMComponent/PAMComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/PackageComponent/PackageComponent.reg:
        * PIM/PICML/interpreters/PackageComponent/PackageComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/PathComponent/PathComponent.reg:
        * PIM/PICML/interpreters/PathComponent/PathComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/PropertyManager/Property_Manager.reg:
        * PIM/PICML/interpreters/PropertyManager/Property_Managerd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/QED/deployment/QEDDeploymentComponent.reg:
        * PIM/PICML/interpreters/QED/deployment/QEDDeploymentComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

        * PIM/PICML/interpreters/TargetComponent/DomainComponent.reg:
        * PIM/PICML/interpreters/TargetComponent/DomainComponentd.reg:

          Renamed the file by adding PICML_ at the begining of the
          filename.

          Removed these files.

Sun Aug 22 17:36:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-10e:
        * contrib:

          CoSMIC version 0.7.4 was released. Moved the ChangeLog
          to ChangeLogs/ChangeLog-09. Reverted contrib svn:externals
          property back to the HEAD revision.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
