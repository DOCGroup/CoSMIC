Sun Jun 20 08:48:57 UTC 2010  William R. Otte  <wotte@dre.vanderbilt.edu>

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * Release_idl_to_picml.mwc:
        * picml.mwc:
        * contrib/mcpp:

          Updated to remove completely mcpp which has now been removed from
          doc head.

Fri Jun 18 19:08:00 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager.idl:

          Added a new interface to the PICML manager. This is used to
          configure the manager remotely.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.mta:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Bug fix where the ConstantType subtypes had to be updated to
          reflect the addition of unsigned types.

Thu Jun 17 05:07:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Updated manager to automatically generate the ports of a
          component instance when its type is set. Also the add-on
          prevents the ports from being deleted. Finally, the add-on
          delete the ports whenever the type element is deleted.

        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          Fixed compilation error related to latest updates to metamodel.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added the PortInstance abstract type to the metamodel.

          Changed the color of the connections between a connector
          and a port.

        * Utils/GAME/game/MetaBase.cpp:

          Fixed null exception bug.

        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/Component_Module.h:
        * Utils/GAME/game/be/GAME_BE.mpc:
        * Utils/GAME/game/be/Interpreter_T.h:
        * Utils/GAME/game/be/Interpreter_T.inl:
        * Utils/GAME/game/be/Interpreter_T.cpp:

          Fixed extended component implementation.

Thu Jun 17 05:00:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Updated the paradigm guid.

Thu Jun 17 04:47:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * includes/GME/GME_includes.mpc:

          Added the includes/GME directory to the installer.

Thu Jun 17 04:43:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.mta:

          Now saving the precompiled version of the PICML paradigm. This
          is needed by the installer to install PICML correctly.

Thu Jun 17 04:32:56 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/CoSMIC_Release_Build.mwc:

          Added the include/GME directory to the installer.

        * Installer/CoSMIC_Release_Build.wxi:

          Removed this file.

Thu Jun 17 00:17:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML_DSML.mpc:

          Missing project file.

Wed Jun 16 16:22:28 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Type_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Type_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Value_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Data_Value_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          . Added support for predefined types below.

          . Bug fix where the artifact and implementation tags were missing
            the id attribute.

          . Succesfully deployed the dds4ccm Shapes example.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          . Changed the global aspect priority so that the ports show
            on the component instance and connector instance.

Wed Jun 16 14:39:19 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:

          Bug fix where ports on the component instance were not being
          generated correctly.

Wed Jun 16 12:58:22 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Bug fix where the key information for RTI-DDS was not
          generated for structs.

Wed Jun 16 05:18:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Implemented the remaining predefined types (i.e., signed integers,
          long double, wide string, and char types).

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Added support for the newly added predefined types.

          . Bug fix where the IDL generator was not generating the
            #pragma lem in the correct location.

          . Successfully compiles the dds4ccm Shapes example using the
            IDL generated from CoSMIC. :-)

Wed Jun 16 00:00:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Object.cpp:

          Bug fix where the Id attribute was not being designated as
          an Id attribute in the DOM model for newly created elements.

        * Release.mwc:

          Removed this file.

Tue Jun 15 20:18:16 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/Custom_Actions_export.h:

          Missing file.

Tue Jun 15 19:34:26 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/README:

          Instructions on how to build the installer.

Tue Jun 15 19:12:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/includes/udm.wxi:
        * Installer/includes/xerces.wxi:

Tue Jun 15 19:10:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/README:

          Missing file.

Tue Jun 15 19:07:47 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/CoSMIC_Installer.mpc:
        * Installer/CoSMIC_Installer.mwc:
        * Installer/CoSMIC_Installer.old:
        * Installer/CoSMIC_Installer.wxs:
        * Installer/CoSMIC_Release_Build.mwc:
        * Installer/CoSMIC_Release_Build.wxi:
        * Installer/Custom_Actions.h:
        * Installer/Custom_Actions.wxs:
        * Installer/Custom_Actions.cpp:
        * Installer/Merge_Modules.wxs:
        * Installer/includes:

          Replaced the older installer workspace/process with a new
          installer workspace/process that use MPC to generate the
          Wix project/include files as opposed to manually handcrafting
          them.

        * Installer/CoSMIC.ise:
        * Installer/CoSMIC_Installer:
        * Installer/CoSMIC_Installer/CoSMIC Installer Documentation.doc:
        * Installer/CoSMIC_Installer/CoSMICNotes.wxs:
        * Installer/CoSMIC_Installer/CoSMICRegistry.wxs:
        * Installer/CoSMIC_Installer/CoSMIC_Installer.mpc:
        * Installer/CoSMIC_Installer/CoSMIC_Installer.mwc:
        * Installer/CoSMIC_Installer/CoSMIC_Installer.wxs:
        * Installer/CoSMIC_Installer/CoSMIC_common.wxs:
        * Installer/CoSMIC_Installer/CustomActions.wxs:
        * Installer/CoSMIC_Installer/Directories.wxs:
        * Installer/CoSMIC_Installer/EnvironmentVars.wxi:
        * Installer/CoSMIC_Installer/list_icons.sh:
        * Installer/CoSMIC_Installer/vc8_assemblies.wxs:
        * Installer/RegisterParadigm:
        * Installer/RegisterParadigm/CoSMIC_Msi_export.h:
        * Installer/RegisterParadigm/RegisterParadigm.def:
        * Installer/RegisterParadigm/RegisterParadigm.h:
        * Installer/RegisterParadigm/RegisterParadigm.cpp:
        * Installer/RegisterParadigm/RegisterParadigm.mpc:
        * Installer/RegisterParadigm/StdAfx.h:
        * Installer/RegisterParadigm/StdAfx.cpp:

          Removed these files.

Tue Jun 15 15:27:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.cpp:

          Bug fix where decorator would crash under unknown circumstances. It
          had something to do with holding a reference to the aspect. This
          problem has been resolved.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Re-enabled the component decorator.

        * Utils/GAME/game/be/Decorator_T.inl:

          Added more exception handling.

        * Utils/GAME/game/graphics/Graphics.mpc:
        * Utils/GAME/game/graphics/Image_Resolver.cpp:
        * Utils/GAME/game/graphics/Port_Decorator.h:
        * Utils/GAME/game/graphics/Port_Decorator.inl:
        * Utils/GAME/game/graphics/Port_Decorator.cpp:
        * Utils/GAME/game/graphics/stdafx.h:
        * Utils/GAME/game/graphics/stdafx.cpp:

          Implemented a helper class for ports.

Tue Jun 15 02:18:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/SIML/interpreters/GatewayGenerator/GatewayGenerator.mpc:
        * PIM/SIML/interpreters/Interpreters.mwc:

          Update project to support Wix specifications.

Mon Jun 14 23:40:38 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.mpc:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.mpc:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.mpc:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.mpc:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/examples/examples.mpc:

          Update project to support Wix specifications.

        * PIM/PICML/examples/SLICE-cpu-bound.xme:

          Non-versioned model.

Mon Jun 14 23:00:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:

          Update project to support Wix specifications.

        * picml.mwc:

          Added ACE to the workspace.

        * cosmic_ace.mwc:

          Removed this file.

Mon Jun 14 21:19:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/ComponentImplementationGenerator/ComponentImplementationGenerator.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:

          Added wix () specification to the project files.

        * PIM/PICML/interpreters/Interpreters.mwc:

          Disabled the property manager component.

Mon Jun 14 21:02:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/POSAML/interpreters/AspectInterpreter/AspectInterpreter.mpc:
        * PIM/POSAML/interpreters/BenchmarkInterpreter/BenchmarkInterpreter.mpc:
        * PIM/POSAML/interpreters/ConfiguratorInterpreter/ConfiguratorInterpreter.mpc:
        * PIM/POSAML/interpreters/OmnetInterpreter/OmnetInterpreter.mpc:

          Added cosmic_common as a base class.

        * Utils/GAME/game/xme/Library_Importer.h:
        * Utils/GAME/game/xme/Library_Importer.cpp:

          Fixed compiler errors in the release version.

Mon Jun 14 16:53:35 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          Added support for generating preprocessor directives.

        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/Preprocessor_Importer.h:
        * PIM/PICML/interpreters/IDLImporter/Preprocessor_Importer.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          Added support for importing preprocessor directives.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          Added key element to aggregates so you do not have to
          use preprocessor directives.

        * Utils/xercesc/XercesString.cpp:

          Bug fix where the set () method failed to set the allocator_
          if it did not take ownership of the string.

Mon Jun 14 04:15:34 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * cosmic_common.mwb:

          Removed this file.

Mon Jun 14 04:14:02 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Release.mwc:
        * Release_idl_to_picml.mwc:
        * cosmic.mwc:
        * cosmic_ace.mwc:
        * picml.mwc:

          Removed the cosmic_common base workspace since it prevents
          workspaces that have base workspaces cannot be aggregated.

Sun Jun 13 21:25:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_component.mpb:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.cpp:
        * PIM/PICML/interpreters/PICML/Data_Value_Builder.cpp:
        * PIM/PICML/interpreters/PropertyManager/RawComponent.cpp:
        * Utils/T3/t3/runtime/Runtime_Engine.h:

          Fixed compiler errors.

Sun Jun 13 19:19:45 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/GAME.cpp:

          Missing source file.

Sun Jun 13 17:02:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/PICMLManager.idl:
        * PIM/PICML/addons/PICMLManager/PICMLManager.mpc:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.h:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Impl.cpp:
        * PIM/PICML/addons/PICMLManager/PICMLManager_Module.cpp:
        * PIM/PICML/addons/PICMLManager/Resource.h:

          . Ported to new GAME backend framework for GME.

        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Impl.h:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Impl.cpp:

          . Moved some header declarations around.

        * Utils/GAME/game/GAME.h:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/be/Addon_T.h:
        * Utils/GAME/game/be/Addon_T.inl:
        * Utils/GAME/game/be/Addon_T.cpp:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/Event_Handler.h:
        * Utils/GAME/game/be/Event_Handler.inl:
        * Utils/GAME/game/be/Event_Handler.cpp:
        * Utils/GAME/game/be/Event_Handler_Impl.h:
        * Utils/GAME/game/be/Event_Handler_Impl.inl:
        * Utils/GAME/game/be/Event_Handler_Impl.cpp:
        * Utils/GAME/game/be/GAME_BE.mpc:

          . Initial GAME implementation for supporting add-ons in
            GME.

        * PIM/PICML/addons/PICMLManager/RawComponent.h:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:
        * Utils/GAME/game/GME.h:
        * Utils/GAME/game/GME.cpp:
        * Utils/GAME/game/be/Event_Sink_Impl.h:
        * Utils/GAME/game/be/Event_Sink_Impl.inl:
        * Utils/GAME/game/be/Event_Sink_Impl.cpp:

          Removed these files.

Sun Jun 13 03:07:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Fixed several constraint specifications.

Sun Jun 13 00:35:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:

          Re-implemented using the GAME decorator framework.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/icons/NameParameter.bmp:
        * PIM/PICML/paradigms/icons/PackageType.bmp:
        * PIM/PICML/paradigms/icons/TemplateParameterValue.bmp:
        * PIM/PICML/paradigms/icons/visio/NameParameter.vsd:
        * PIM/PICML/paradigms/icons/visio/PackageType.vsd:
        * PIM/PICML/paradigms/icons/visio/TemplateParameterValue.vsd:

          New icons for the paradigm.

Sat Jun 12 23:24:07 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/icons/ConnectorObject.bmp:
        * PIM/PICML/paradigms/icons/visio/ConnectorObject.vsd:

          Icon for the connector in the interface definition.

        * PIM/PICML/paradigms/icons/visio/ApplicationTask.vsd:

          Saving an existing icon.

Sat Jun 12 15:49:10 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/icons/PortType.bmp:
        * PIM/PICML/paradigms/icons/visio/PortType.vsd:

          Icon for PortType elements.

Sat Jun 12 15:16:11 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Impl.cpp:

          Removed disfunct code.

        * PIM/PICML/decorators/PackageDecorator:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.idl:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.mpc:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator.reg:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator_Impl.h:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator_Impl.cpp:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator_Module.cpp:
        * PIM/PICML/decorators/PackageDecorator/Package_Decorator_export.h:
        * PIM/PICML/decorators/PackageDecorator/Package_Decoratord.reg:
        * PIM/PICML/decorators/PackageDecorator/StdAfx.h:
        * PIM/PICML/decorators/PackageDecorator/StdAfx.cpp:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          Implemented a decorator for differentiating a standard
          package from a template package.

        * PIM/PICML/paradigms/icons/visio/TemplatePackage.vsd:
        * PIM/PICML/paradigms/icons/TemplatePackage.gif:
        * PIM/PICML/paradigms/icons/visio:

          Icon the represents a template package element.

Sat Jun 12 06:06:46 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/NoShowRefersTo:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.idl:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.mpc:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator.reg:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Impl.h:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Impl.cpp:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_Module.cpp:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decorator_export.h:
        * PIM/PICML/decorators/NoShowRefersTo/NoShowRefersTo_Decoratord.reg:
        * PIM/PICML/decorators/NoShowRefersTo/StdAfx.h:
        * PIM/PICML/decorators/NoShowRefersTo/StdAfx.cpp:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          . Implemented a new decorator for reference elements to not
            show the element that it references.

Sat Jun 12 05:10:20 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML.xme:

          Bug fix where the decorator was not working due to changes
          to the decorator interface's name.

Sat Jun 12 03:56:03 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:

          . Bug fix where the manager did not update the property
            when it was attached to an attribute.

        * PIM/PICML/decorators/PICMLDecorator.mpc.old:

          . Disabled the old decorator since it is obsolete.

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.cpp:

          . Updated deployment plan interpreter to correctly handle
            connectors and connections between them and port types.

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Visitor.cpp:

          . Bug fix where IDL was not generated correctly if there
            when using a declaration from a template module instance.

        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Bug fix where the PICML model was not generated correctly
            when handling declarations from a template module instance.

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:
        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          . Fix compile errors, but still need to updated to handle
            PICML metamodel correctly.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Bug fix where it was not possible to associtate a template
            module instance with an element type from its template module.

          . Added pre-preprocessor and post-preprocessor directives to
            account for the necessary pragmas in IDL3+.

        * PIM/PICML/utils/udm/functional.h:
        * PIM/PICML/utils/udm/functional.cpp:

          . Implemented a new version of scope () and fq_type ().

        * PIM/PICML/decorators/PICMLDecorator.mpc:

          Removed this file.

Wed Jun  9 22:17:37 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:

          . Support for resolving external references in libraries.

        * Utils/GAME/game/xme/Library_Importer.cpp:

          . Removed debugging messages.

Wed Jun  9 18:47:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/GME_ID_Generator_T.cpp:

          . The ids are now generated in lowercase.

        * Utils/GAME/game/xme/Library_Importer.h:
        * Utils/GAME/game/xme/Library_Importer.cpp:

          . Bug fix where the importer failed to resolve ids due to
            case sensitivity related issues.

Wed Jun  9 17:29:19 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Atom.inl:
        * Utils/GAME/game/xme/Configuration.h:
        * Utils/GAME/game/xme/Configuration.cpp:
        * Utils/GAME/game/xme/Connection.h:
        * Utils/GAME/game/xme/Connection.inl:
        * Utils/GAME/game/xme/Connection.cpp:
        * Utils/GAME/game/xme/FCO.cpp:
        * Utils/GAME/game/xme/Folder.cpp:
        * Utils/GAME/game/xme/Library.h:
        * Utils/GAME/game/xme/Library.inl:
        * Utils/GAME/game/xme/Library.cpp:
        * Utils/GAME/game/xme/Library_Importer.h:
        * Utils/GAME/game/xme/Library_Importer.cpp:
        * Utils/GAME/game/xme/Model.inl:
        * Utils/GAME/game/xme/Model.cpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.inl:
        * Utils/GAME/game/xme/Project.cpp:
        * Utils/GAME/game/xme/Reference.inl:
        * Utils/GAME/game/xme/XME.mpc:

          . Support for adding attaching libraries to a model.

          . Bug fix where the attach () method was not validating
            elements correctly.

        * Utils/xercesc/EntityResolver.h:
        * Utils/xercesc/EntityResolver.cpp:
        * Utils/xercesc/XML_Error_Handler.h:
        * Utils/xercesc/XML_Error_Handler.cpp:
        * Utils/xercesc/XercesString.cpp:

          . Removed dead code.

Tue Jun  8 15:59:57 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          . Removed all old/stale code, and improved performance.

Tue Jun  8 14:55:48 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_init.cpp:

          . Removed all old/stale code.

        * PIM/PICML/interpreters/IDLImporter/File_Creator.h:
        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Bug fix where filename case insensitivity on Windoows platform
            prevented transformation of some files.

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICML_uml.xme:
        * PIM/PICML/paradigms/PICML.xml

          . Added attributes to PortType elements.

Tue Jun  8 14:51:09 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/xme/Reference.cpp:

          Bug fix where NULL reference is defined by not specifying a
          referred XML attribute.

Tue Jun  8 05:46:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Bug fix where the inherits portion of an interface was
            not handled correctly.

Tue Jun  8 05:14:05 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Bug fix where alias elements were not added to the
            symbol table.

Tue Jun  8 04:38:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp.old:

          . Bug fix for support the mcpp and non-mcpp version.

          . Bug fix for handling unresolved externals.

        * default.features:

          . Disabled mcpp.

Tue Jun  8 00:12:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:

          . Bug fix where the format of the auto-generated code is as
            follows: (1) forward declarations, (2) template modules,
            and (3) actual declarations.

        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:

          . Updated idl_to_picml to fully support IDL3+.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Re-design how the template parameters work.

Mon Jun  7 17:33:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connector_Visitor.cpp:

          . Missing source files.

Mon Jun  7 17:14:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:

          . Added support for generating connector instance infomration to the
            deployment plan. The last issue is generating the connection information
            to the deployment plan.

        * PIM/PICML/interpreters/IDLGenerator/File_Processor.h:
        * PIM/PICML/interpreters/IDLGenerator/File_Processor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.h:
        * PIM/PICML/interpreters/IDLGenerator/Find_Forward_Decls.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDLEmitVisitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDLGenerator.mpc:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_File_Generator.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Visitor.h:
        * PIM/PICML/interpreters/IDLGenerator/IDL_Generator_Visitor.cpp:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.h:
        * PIM/PICML/interpreters/IDLGenerator/IDMLBonExtension.cpp:
        * PIM/PICML/interpreters/IDLGenerator/RawComponent.h:
        * PIM/PICML/interpreters/IDLGenerator/RawComponent.cpp:
        * PIM/PICML/interpreters/IDLGenerator/UdmApp.h:
        * PIM/PICML/interpreters/IDLGenerator/UdmApp.cpp:
        * PIM/PICML/interpreters/IDLGenerator/UdmConfig.h:

          . Updated IDL generator to support IDL3+.

        * Release_idl_to_picml.mwc:
        * PIM/PICML/interpreters/IDLImporter/Artifact_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Artifact_Generator.inl:
        * PIM/PICML/interpreters/IDLImporter/Artifact_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/File_Creator.h:
        * PIM/PICML/interpreters/IDLImporter/File_Creator.inl:
        * PIM/PICML/interpreters/IDLImporter/File_Creator.cpp:
        * PIM/PICML/interpreters/IDLImporter/IDLImporter.mpc:
        * PIM/PICML/interpreters/IDLImporter/Implementation_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Implementation_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.h:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.inl:
        * PIM/PICML/interpreters/IDLImporter/Project_Generator.cpp:
        * PIM/PICML/interpreters/IDLImporter/Scope.h:
        * PIM/PICML/interpreters/IDLImporter/Scope.inl:
        * PIM/PICML/interpreters/IDLImporter/Scope.cpp:
        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_global.h:
        * PIM/PICML/interpreters/IDLImporter/be_global.cpp:
        * PIM/PICML/interpreters/IDLImporter/be_produce.cpp:

          . Updated idl_to_picml to use the XME version in GAME.

          . Updated idl_to_picml to support IDL3+ minus parameterized
            packages.

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          Fixed compiler errors related to updated PICML metamodel.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Removed the Component and ComponentRef decorator.

          . Changed the semantics of port delegation in an assemble to
            1-1. This simplifies the semantics of the metamodel.

          . Added UUID to the ConnectorInstance.

        * Utils/GAME/game/MetaModel.cpp:

          . Updated the formatting.

        * Utils/GAME/game/be/Decorator_T.inl:

          . The decorator no longer returns  E_DECORATOR_INIT_WITH_NULL.

        * picml.mwc:

          . Removed the explicit decorator workspace.

Sun Jun  6 17:56:00 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/RawComponent.h:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:

          Added support for auto-generating the UUID for the
          connector elements.

Sun Jun  6 17:20:15 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          Fixed build errors related to metamodel update.

Sun Jun  6 16:54:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.mpc:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.rc:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator_Impl.cpp:
        * PIM/PICML/decorators/ComponentRefDecorator/refarrow.bmp:
        * PIM/PICML/decorators/ComponentRefDecorator/resource.h:

          . The reference arrow is now bundled with the decorator.

          . Move the reference arrow to the opposite side.

Sun Jun  6 16:18:27 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.cpp:

          . The component decorator is now drawn manually so that
            it's image is not distorted when shows a LOT of ports
            that cause its height to be more than expected.

        * Utils/GAME/game/graphics/Image_Manager_T.h:
        * Utils/GAME/game/graphics/Image_Manager_T.inl:
        * Utils/GAME/game/graphics/Image_Manager_T.cpp:

          . Change Image * to Bitmap *.

        * Utils/GAME/game/utils/Point.h:
        * Utils/GAME/game/utils/Point.inl:

          . Added width () and height () methods.

Sun Jun  6 12:36:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/Decorator_T.h:
        * Utils/GAME/game/be/Decorator_T.inl:
        * Utils/GAME/game/be/Decorator_T.cpp:

          . Added more exception handling.

Sun Jun  6 05:26:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.cpp:

          . The destroy () method clears the image manager.

        * Utils/GAME/game/graphics/Image_Manager_T.h:
        * Utils/GAME/game/graphics/Image_Manager_T.inl:
        * Utils/GAME/game/graphics/Image_Manager_T.cpp:

          . Implemented a clear () method for clearing the contents
            of the manager.

        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Added checks around the naked pointer.

Sun Jun  6 04:34:17 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/Connection_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanComponent.mpc:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/DeploymentPlanVisitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.inl:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/UdmApp.cpp:
        * PIM/PICML/interpreters/DeploymentPlanComponent/XML_Document.h:

          . Updated deployment plan generator so that it builds with
            the latest version of the PICML model. Still need to add
            support for generating connectors to model and re-add port
            delegates.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Fixed capability to add a configProperty directly to a
            component instance.

        * PIM/PICML/interpreters/DeploymentPlanComponent/PlanLocalityVisitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/PlanLocalityVisitor.cpp:

          Removed these files.

Sat Jun  5 17:18:02 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/be/Decorator_Module.h:

          . Fixed Release build errors.

Sat Jun  5 16:23:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Reverted Package paradigm sheet.

Sat Jun  5 15:46:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Fixed cardinality constaints in the metamodel.

Sat Jun  5 15:44:26 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          . Temporarily disabled this interpreter until it's implementation
            is updated to the latest PICML model.

Sat Jun  5 06:07:16 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Path/PathVisitor.h:
        * PIM/PICML/interpreters/Path/PathVisitor.cpp:

          . Updated package interpreter to new PICML metamodel.

Sat Jun  5 05:36:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/BON/Sort_T.h:

          . Fixed compile error related to a stale include file.

Sat Jun  5 05:28:06 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.h:
        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          . Updated package interpreter to new PICML metamodel.

Sat Jun  5 04:21:27 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/Interpreters.mwc:

          Disable the QED interpreter.

Sat Jun  5 04:15:52 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.cpp:

          . Updated implementation so that the component decorator can
            be used in other decorators.

        * PIM/PICML/decorators/ComponentRefDecorator:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.idl:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.mpc:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator.reg:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator_Impl.h:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator_Impl.cpp:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator_Module.cpp:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decorator_export.h:
        * PIM/PICML/decorators/ComponentRefDecorator/ComponentRef_Decoratord.reg:
        * PIM/PICML/decorators/ComponentRefDecorator/StdAfx.h:
        * PIM/PICML/decorators/ComponentRefDecorator/StdAfx.cpp:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

          . Implemented the ComponentRef decorator.

Sat Jun  5 02:13:57 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.h:

          Removed this file.

Sat Jun  5 00:37:36 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

          . Metamodel with support for IDL3+ in both the interface
            definitions and the component assembly.

Sat Jun  5 00:16:50 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/PICMLManager/RawComponent.h:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:

          . First attempt at synchronizing a component instance.

        * PIM/PICML/decorators/ComponentDecorator:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.idl:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.mpc:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator.reg:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Impl.cpp:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_Module.cpp:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decorator_export.h:
        * PIM/PICML/decorators/ComponentDecorator/Component_Decoratord.reg:
        * PIM/PICML/decorators/ComponentDecorator/StdAfx.h:
        * PIM/PICML/decorators/ComponentDecorator/StdAfx.cpp:

          . New implementation of the component decorator. It even
            shows the ports of inherited components.

        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:

          . Updated decorator based on changes to GAME.

        * Utils/GAME/game/graphics:
        * Utils/GAME/game/graphics/Graphics.mpc:
        * Utils/GAME/game/graphics/Graphics_export.h:
        * Utils/GAME/game/graphics/Image_Manager_T.h:
        * Utils/GAME/game/graphics/Image_Manager_T.inl:
        * Utils/GAME/game/graphics/Image_Manager_T.cpp:
        * Utils/GAME/game/graphics/Image_Resolver.h:
        * Utils/GAME/game/graphics/Image_Resolver.inl:
        * Utils/GAME/game/graphics/Image_Resolver.cpp:
        * MPC/config/game_graphics.mpb:

          . Helper classes for doing graphics.

        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Moved the Icon_Manager to the graphics library.

        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:

          Removed this file.

Fri Jun  4 21:52:02 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xmp:

Fri Jun  4 20:34:38 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game_be.mpb:
        * MPC/config/game_decorator.mpb:
        * MPC/config/game_utils.mpb:

          . Base project for building GAME components.

Fri Jun  4 20:30:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Attribute.h:
        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/FCO.h:
        * Utils/GAME/game/FCO.inl:
        * Utils/GAME/game/FCO.cpp:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/GAME_export.h:
        * Utils/GAME/game/GME_fwd.h:
        * Utils/GAME/game/MetaAspect.h:
        * Utils/GAME/game/MetaAspect.inl:
        * Utils/GAME/game/MetaAspect.cpp:
        * Utils/GAME/game/MetaAttribute.h:
        * Utils/GAME/game/MetaAttribute.inl:
        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/MetaModel.h:
        * Utils/GAME/game/MetaModel.cpp:
        * Utils/GAME/game/MetaPart.h:
        * Utils/GAME/game/MetaPart.cpp:
        * Utils/GAME/game/Model.h:
        * Utils/GAME/game/Model.cpp:
        * Utils/GAME/game/Part.h:
        * Utils/GAME/game/Part.inl:
        * Utils/GAME/game/Part.cpp:

          . Added more functionality.

        * Utils/GAME/game/be/Decorator_Impl.h:
        * Utils/GAME/game/be/Decorator_Impl.inl:
        * Utils/GAME/game/be/Decorator_T.h:
        * Utils/GAME/game/be/Decorator_T.inl:
        * Utils/GAME/game/be/Decorator_T.cpp:

          . Removed function name overloading since it prevented methods
            with the same name in the subclass from being seen.

        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Implemented a help class for locating icons on disk.

Thu Jun  3 16:56:51 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/Decorator.rc:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.idl:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.h:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/StdAfx.cpp:

          . Re-implemented the show reference decorator using
            the GAME decorator backend.

        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.inl:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/Interpreter_T.h:

          . Updated formatting.

        * Utils/GAME/game/be/Decorator_Impl.h:
        * Utils/GAME/game/be/Decorator_Impl.inl:
        * Utils/GAME/game/be/Decorator_Impl.cpp:
        * Utils/GAME/game/be/Decorator_Module.h:
        * Utils/GAME/game/be/Decorator_T.h:
        * Utils/GAME/game/be/Decorator_T.inl:
        * Utils/GAME/game/be/Decorator_T.cpp:
        * Utils/GAME/game/be/GAME_BE.mpc:

          . Implemented decorator support for the backend.

        * Utils/GAME/game/utils/Point.h:
        * Utils/GAME/game/utils/Point.inl:

          . Changed the point's data type.

Thu Jun  3 04:08:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/ShowReference/Decorator.aps:
        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/StdAfx.h:

          . Updated decorator to use ATL 7.0. This results in a
            somewhat cleaner implementation of the decorator.

Thu Jun  3 04:06:46 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/MetaPart.h:
        * Utils/GAME/game/MetaPart.inl:
        * Utils/GAME/game/MetaPart.cpp:

          . Implemented wrapper class for the IMgaMetaPart interface.

Wed Jun  2 16:30:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Territory.h:

          . Fixed build errors with using this file within
            a decorator.

        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:

          . Added support for getting the paradigm's connection string
            via the project.

        * Utils/GAME/game/utils:
        * Utils/GAME/game/utils/GAME_Utils.mpc:
        * Utils/GAME/game/utils/Parser.cpp:
        * Utils/GAME/game/utils/Parser.hpp:
        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:

          . Added support for getting the paradigm's connection string.

        * Utils/UDM/visit.h:
        * Utils/UDM/visit.cpp:

          . Helper functions for writing visitor based intepreters.

Wed Jun  2 15:36:06 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:

          . Made the MemberDecorator a stand-alone decorator.

        * PIM/PICML/decorators/ShowReference:
        * PIM/PICML/decorators/ShowReference/CommonError.h:
        * PIM/PICML/decorators/ShowReference/CommonError.cpp:
        * PIM/PICML/decorators/ShowReference/CommonSmart.h:
        * PIM/PICML/decorators/ShowReference/Decorator.aps:
        * PIM/PICML/decorators/ShowReference/Decorator.h:
        * PIM/PICML/decorators/ShowReference/Decorator.cpp:
        * PIM/PICML/decorators/ShowReference/Decorator.rc:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.cpp:
        * PIM/PICML/decorators/ShowReference/DecoratorApp.def:
        * PIM/PICML/decorators/ShowReference/DecoratorConfig.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.h:
        * PIM/PICML/decorators/ShowReference/DecoratorLib.idl:
        * PIM/PICML/decorators/ShowReference/DecoratorStd.h:
        * PIM/PICML/decorators/ShowReference/DecoratorUtil.h:
        * PIM/PICML/decorators/ShowReference/DecoratorUtil.cpp:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.h:
        * PIM/PICML/decorators/ShowReference/MaskedBitmap.cpp:
        * PIM/PICML/decorators/ShowReference/ShowReference.mpc:
        * PIM/PICML/decorators/ShowReference/ShowReference.wxs:
        * PIM/PICML/decorators/ShowReference/ShowReferenceDecorator.reg:
        * PIM/PICML/decorators/ShowReference/ShowReferenceDecoratord.reg:
        * PIM/PICML/decorators/ShowReference/StdAfx.h:
        * PIM/PICML/decorators/ShowReference/StdAfx.cpp:
        * PIM/PICML/decorators/ShowReference/resource.h:

          . Stand-alone version of the original MemberDecorator.

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:

Sat May 29 18:22:18 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLTextEditor/BON2Component.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.h:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Document.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/DSL_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDLTextEditor.mpc:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Deserializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Parser.hpp:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.h:
        * PIM/PICML/interpreters/IDLTextEditor/IDL_File_Serializer.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.h:
        * PIM/PICML/interpreters/IDLTextEditor/Layout_Manager.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.h:
        * PIM/PICML/interpreters/IDLTextEditor/Symbols.cpp:
        * PIM/PICML/interpreters/IDLTextEditor/rules/actors.hpp:
        * PIM/PICML/interpreters/PICML/Data_Value_Builder.h:
        * PIM/PICML/interpreters/PICML/Data_Value_Builder.cpp:
        * PIM/PICML/interpreters/PackageComponent/PackageComponent.mpc:
        * PIM/PICML/interpreters/PackageComponent/RawComponent.cpp:
        * PIM/PICML/interpreters/PropertyManager/RawComponent.h:
        * PIM/PICML/interpreters/PropertyManager/RawComponent.cpp:
        * PIM/PICML/interpreters/QED/deployment/RawComponent.cpp:

          . Updated to reflect changes to GAME below.

Sat May 29 18:19:14 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/utils/game/Utility.h:
        * PIM/PICML/utils/game/Utility.cpp:
        * PIM/PICML/utils/udm/functional.h:
        * PIM/PICML/utils/udm/functional.cpp:

          . Updated to reflect changes to GAME below.

Sat May 29 18:16:47 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/game.mpb:

          . Added the 'includes' specification.

        * MPC/config/game_utils.mpb:

          . New base project.

        * MPC/config/picml_game_utils.mpb:

          . Derived from the game_utils base project.

Sat May 29 18:13:57 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/addons/CBMLManager/CBMLManager.mpc:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.h:
        * PIM/PICML/addons/CBMLManager/Output_Event_Builder.cpp:
        * PIM/PICML/addons/CBMLManager/RawComponent.h:
        * PIM/PICML/addons/CBMLManager/RawComponent.cpp:
        * PIM/PICML/addons/CBMLManager/String_Selection_Dialog.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultArtifactGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.h:
        * PIM/PICML/addons/PICMLManager/DefaultImplementationGenerator.cpp:
        * PIM/PICML/addons/PICMLManager/RawComponent.h:
        * PIM/PICML/addons/PICMLManager/RawComponent.cpp:
        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/PICMLDecorator.mpc:

          . Updated to reflect changes to GAME below.

Sat May 29 18:05:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Atom.h:
        * Utils/GAME/game/Atom.inl:
        * Utils/GAME/game/Atom.cpp:
        * Utils/GAME/game/Attribute.h:
        * Utils/GAME/game/Attribute.inl:
        * Utils/GAME/game/Attribute.cpp:
        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/Collection_T.cpp:
        * Utils/GAME/game/Component.h:
        * Utils/GAME/game/Component.cpp:
        * Utils/GAME/game/ComponentEx.h:
        * Utils/GAME/game/ComponentEx.cpp:
        * Utils/GAME/game/Connection.h:
        * Utils/GAME/game/Connection.inl:
        * Utils/GAME/game/Connection.cpp:
        * Utils/GAME/game/Exception.h:
        * Utils/GAME/game/Exception.inl:
        * Utils/GAME/game/Exception.cpp:
        * Utils/GAME/game/FCO.h:
        * Utils/GAME/game/FCO.inl:
        * Utils/GAME/game/FCO.cpp:
        * Utils/GAME/game/Filter.h:
        * Utils/GAME/game/Filter.cpp:
        * Utils/GAME/game/Folder.h:
        * Utils/GAME/game/Folder.inl:
        * Utils/GAME/game/Folder.cpp:
        * Utils/GAME/game/GAME.mpc:
        * Utils/GAME/game/GME.cpp:
        * Utils/GAME/game/GME_fwd.h:
        * Utils/GAME/game/MetaAttribute.h:
        * Utils/GAME/game/MetaAttribute.inl:
        * Utils/GAME/game/MetaAttribute.cpp:
        * Utils/GAME/game/MetaBase.h:
        * Utils/GAME/game/MetaBase.inl:
        * Utils/GAME/game/MetaBase.cpp:
        * Utils/GAME/game/MetaEnumItem.h:
        * Utils/GAME/game/MetaEnumItem.inl:
        * Utils/GAME/game/MetaEnumItem.cpp:
        * Utils/GAME/game/MetaFCO.h:
        * Utils/GAME/game/MetaFCO.inl:
        * Utils/GAME/game/MetaFCO.cpp:
        * Utils/GAME/game/MetaFolder.h:
        * Utils/GAME/game/MetaFolder.inl:
        * Utils/GAME/game/MetaFolder.cpp:
        * Utils/GAME/game/MetaModel.h:
        * Utils/GAME/game/MetaModel.inl:
        * Utils/GAME/game/MetaModel.cpp:
        * Utils/GAME/game/MetaRole.h:
        * Utils/GAME/game/MetaRole.inl:
        * Utils/GAME/game/MetaRole.cpp:
        * Utils/GAME/game/Model.h:
        * Utils/GAME/game/Model.inl:
        * Utils/GAME/game/Model.cpp:
        * Utils/GAME/game/Object.h:
        * Utils/GAME/game/Object.inl:
        * Utils/GAME/game/Object.cpp:
        * Utils/GAME/game/Project.h:
        * Utils/GAME/game/Project.cpp:
        * Utils/GAME/game/Reference.h:
        * Utils/GAME/game/Reference.inl:
        * Utils/GAME/game/Reference.cpp:
        * Utils/GAME/game/RegistryNode.h:
        * Utils/GAME/game/RegistryNode.inl:
        * Utils/GAME/game/RegistryNode.cpp:
        * Utils/GAME/game/Set.h:
        * Utils/GAME/game/Set.cpp:
        * Utils/GAME/game/Territory.h:
        * Utils/GAME/game/Territory.cpp:
        * Utils/GAME/game/Visitor.h:
        * Utils/GAME/game/Visitor.inl:
        * Utils/GAME/game/Visitor.cpp:
        * Utils/GAME/game/XML.h:
        * Utils/GAME/game/XML.inl:
        * Utils/GAME/game/XML.cpp:
        * Utils/GAME/game/be/ComponentEx_T.h:
        * Utils/GAME/game/be/ComponentEx_T.inl:
        * Utils/GAME/game/be/ComponentEx_T.cpp:
        * Utils/GAME/game/be/Event_Sink_Impl.h:
        * Utils/GAME/game/be/Event_Sink_Impl.inl:
        * Utils/GAME/game/be/Event_Sink_Impl.cpp:
        * Utils/GAME/game/be/Event_Sink_T.h:
        * Utils/GAME/game/be/Event_Sink_T.inl:
        * Utils/GAME/game/be/Event_Sink_T.cpp:
        * Utils/GAME/game/be/Interpreter_Impl_Base.h:
        * Utils/GAME/game/be/Interpreter_Impl_Base.inl:
        * Utils/GAME/game/be/Interpreter_Impl_Base.cpp:
        * Utils/GAME/game/be/Interpreter_T.h:
        * Utils/GAME/game/be/Interpreter_T.inl:
        * Utils/GAME/game/be/Interpreter_T.cpp:
        * Utils/GAME/game/be/Plugin_Impl.h:
        * Utils/GAME/game/be/Plugin_Impl.inl:
        * Utils/GAME/game/be/Plugin_Impl.cpp:
        * Utils/GAME/game/be/Plugin_T.h:
        * Utils/GAME/game/be/Plugin_T.inl:
        * Utils/GAME/game/be/Plugin_T.cpp:
        * Utils/GAME/game/config.h:
        * Utils/GAME/game/stdafx.h:
        * Utils/GAME/game/stlace.h:
        * Utils/GAME/game/utils/GAME_Utils.mpc:
        * Utils/GAME/game/utils/GAME_Utils_export.h:
        * Utils/GAME/game/utils/Point.h:
        * Utils/GAME/game/utils/Point.cpp:
        * Utils/GAME/game/utils/Point.inl:
        * Utils/GAME/game/utils/Project_Settings.h:
        * Utils/GAME/game/utils/Project_Settings.inl:
        * Utils/GAME/game/utils/Project_Settings.cpp:
        * Utils/GAME/game/utils/Registrar.h:
        * Utils/GAME/game/utils/Registrar.inl:
        * Utils/GAME/game/utils/Registrar.cpp:
        * Utils/GAME/game/xme/Atom.h:
        * Utils/GAME/game/xme/Atom.inl:
        * Utils/GAME/game/xme/Atom.cpp:
        * Utils/GAME/game/xme/Attribute.h:
        * Utils/GAME/game/xme/Attribute.inl:
        * Utils/GAME/game/xme/Attribute.cpp:
        * Utils/GAME/game/xme/Auto_Model_T.h:
        * Utils/GAME/game/xme/Auto_Model_T.inl:
        * Utils/GAME/game/xme/Auto_Model_T.cpp:
        * Utils/GAME/game/xme/Connection.h:
        * Utils/GAME/game/xme/Connection.inl:
        * Utils/GAME/game/xme/Connection.cpp:
        * Utils/GAME/game/xme/Exceptions.h:
        * Utils/GAME/game/xme/Exceptions.inl:
        * Utils/GAME/game/xme/Exceptions.cpp:
        * Utils/GAME/game/xme/FCO.h:
        * Utils/GAME/game/xme/FCO.inl:
        * Utils/GAME/game/xme/FCO.cpp:
        * Utils/GAME/game/xme/Folder.h:
        * Utils/GAME/game/xme/Folder.inl:
        * Utils/GAME/game/xme/Folder.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator.h:
        * Utils/GAME/game/xme/GME_ID_Generator.inl:
        * Utils/GAME/game/xme/GME_ID_Generator.cpp:
        * Utils/GAME/game/xme/GME_ID_Generator_T.h:
        * Utils/GAME/game/xme/GME_ID_Generator_T.inl:
        * Utils/GAME/game/xme/GME_ID_Generator_T.cpp:
        * Utils/GAME/game/xme/Model.h:
        * Utils/GAME/game/xme/Model.inl:
        * Utils/GAME/game/xme/Model.cpp:
        * Utils/GAME/game/xme/Object.h:
        * Utils/GAME/game/xme/Object.inl:
        * Utils/GAME/game/xme/Object.cpp:
        * Utils/GAME/game/xme/Object_Type.h:
        * Utils/GAME/game/xme/Object_Type_Map.hpp:
        * Utils/GAME/game/xme/Project.h:
        * Utils/GAME/game/xme/Project.inl:
        * Utils/GAME/game/xme/Project.cpp:
        * Utils/GAME/game/xme/Reference.h:
        * Utils/GAME/game/xme/Reference.inl:
        * Utils/GAME/game/xme/Reference.cpp:
        * Utils/GAME/game/xme/Registry.h:
        * Utils/GAME/game/xme/Registry.inl:
        * Utils/GAME/game/xme/Registry.cpp:
        * Utils/GAME/game/xme/Registry_Node.h:
        * Utils/GAME/game/xme/Registry_Node.inl:
        * Utils/GAME/game/xme/Registry_Node.cpp:
        * Utils/GAME/game/xme/XME_Utils.h:
        * Utils/GAME/game/xme/XME_Utils.cpp:
        * Utils/GAME/game/xme/XME_Utils_T.cpp:
        * Utils/GAME/game/xme/functional.h:
        * Utils/GAME/game/xme/functional.cpp:
        * Utils/ModelUpgrade/Model_Upgrade.h:
        * Utils/ModelUpgrade/Model_Upgrade.cpp:

          . Please everything under the GAME namespace so that all the
            packages are consistant.

        * Utils/Point.h:
        * Utils/Point.inl:

          . Changed the x-, y-coordinate type to 'int'.

        * Utils/T3/t3/runtime/Auto_Model.h:
        * Utils/T3/t3/runtime/Auto_Model.inl:
        * Utils/T3/t3/runtime/Auto_Model.cpp:
        * Utils/T3/t3/runtime/Auto_Model_Impl.h:
        * Utils/T3/t3/runtime/Auto_Model_Impl.inl:
        * Utils/T3/t3/runtime/Auto_Model_Impl.cpp:
        * Utils/T3/t3/runtime/Event_Listener.h:
        * Utils/T3/t3/runtime/Event_Listener.inl:
        * Utils/T3/t3/runtime/Runtime_Engine.h:
        * Utils/T3/t3/runtime/Runtime_Engine.inl:
        * Utils/T3/t3/runtime/Runtime_Engine.cpp:
        * Utils/T3/t3/runtime/Symbol.h:
        * Utils/T3/t3/runtime/actors.hpp:

          . Updated to reflect changes to GAME above.

        * Utils/GAME/game/GME_export.h:

          Removed this file.

Wed May 26 02:14:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:

          . Bug fix where the MemberDecorator crashed when trying to
            draw the Member in the part browser.

Tue May 25 23:01:45 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/GAME/game/Collection_T.h:
        * Utils/GAME/game/MetaBase.h:

          . Fix compile errors related to using GAME in a GME decorator.

Tue May 25 23:00:13 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/decorators/Decorator.h:
        * PIM/PICML/decorators/Decorator.cpp:
        * PIM/PICML/decorators/DecoratorUtil.cpp:
        * PIM/PICML/decorators/IDMLDecorators.h:
        * PIM/PICML/decorators/IDMLDecorators.cpp:
        * PIM/PICML/decorators/PICMLDecorator.mpc:
        * PIM/PICML/decorators/StdAfx.h:

          . Updated the decorator to work with GME 10. There are still some
            fixes needed, such as the font, but for the most part it works.
            This can therefore be considered a checkpoint.

Mon May 24 17:15:24 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.h:
        * PIM/PICML/interpreters/DeploymentPlanComponent/External_Reference_Visitor.cpp:

          . Bug fix where some of the external port connections
            were generated incorrectly.

Tue May 25 15:29:21 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/IDLImporter/adding_visitor.cpp:

          . Updated implementation generate correct attribute for the
            interface semantics.

Mon May 24 15:07:09 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/xercesc/Static_Configuration.h:
        * Utils/xercesc/XercesString.h:

          . Re-defined how the static configuration singleton is declared
            to fix compile errors on non-Windows platforms.

Mon May 24 14:36:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Utils/xercesc/Memory_Manager.h:
        * Utils/xercesc/Memory_Manager.cpp:
        * Utils/xercesc/Static_Configuration.h:
        * Utils/xercesc/Static_Configuration.cpp:
        * Utils/xercesc/XercesString.h:
        * Utils/xercesc/Xerces_Utils.mpc:

          . Bug fix where Xerces-C was not initialized properly for
            static builds of idl_to_picml.

        * Utils/xercesc/Xerces_Initializer.cpp:

          Removed this file.

Wed May 19 22:59:49 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/interpreters/PackageComponent/PackageVisitor.cpp:

          . Fix compile errors for GME 10.

Thu May 13 11:58:53 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * PIM/PICML/paradigms/PICML-uml.xme:
        * PIM/PICML/paradigms/PICML.xme:
        * PIM/PICML/paradigms/PICML.xml:
        * PIM/PICML/paradigms/PICML.xmp:
        * PIM/PICML/paradigms/PICMLParadigm.wxs:

          . Updated PICML metamodel to GME 10.

Wed May 12 14:58:04 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * Installer/CoSMIC_Installer/CoSMIC_Installer.mpc:
        * Installer/CoSMIC_Installer/CoSMIC_common.wxs:
        * MPC/config/game_component.mpb:
        * PSM/CQML/interpreters/SecurityQoS/SecurityQoSVisitor.cpp:

          . Fixed build errors related to the following files so that
            CoSMIC builds against GME 10.

Mon May 10 21:15:51 UTC 2010  Sumant Tambe  <sutambe@nospam>

        * ChangeLog:
        * ChangeLogs/ChangeLog-10b:
        * RELEASE:
        * contrib:

          . CoSMIC version 0.7.8 was released. Tag: CoSMIC-0.7.8
            Moved the old ChangeLog to ChangeLogs/ChangeLog-10b.
            contrib svn:externals property back to HEAD now.
            RELEASE procedure was updated with some details.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
