aspect FOU()
{
  assembly_clone();
}

strategy assembly_clone()
{
  declare container, src, dest : model;
  
  container := rootFolder().findFolder("ComponentImplementations").
                            findModel("AssemblyContainer");
  src := container.findModel("HelloAssembly");
  dest := src.clone(container);
  dest.setName(src.name() + "_Replica");
  dest.models("FailOverUnit")->ProcessFOU(dest);
  dest.models("FailOverUnit")->RemoveFOU(dest);
}

strategy ProcessFOU(parent_assembly : model)
{
  declare r : integer;
  declare fou : model;

  fou := self;
  r := fou.getAttribute("Replica");

  parent_assembly.connections("ComponentQoS")
                 ->select (c | c.destination() == fou)
                 ->createReplicas(parent_assembly, r, 1);
}

strategy createReplicas(parent_assembly : model; replica, loop : integer)
{
  declare connection : object;

  connection := self;

  if (loop<=replica) then
     connection.source().cloneComponent(parent_assembly, loop);
     connection.createReplicas(parent_assembly, replica, loop+1);
  endif;
}

strategy cloneComponent(parent_assembly : model; count : integer)
{
  declare comp_src, comp_dst : model;

  comp_src := self;

  comp_dst := comp_src.clone(parent_assembly);
  comp_dst.setName(comp_src.name() + "_Replica" + intToString(count));
}

strategy RemoveFOU(parent_assembly : model)
{
  parent_assembly.removeModel(self);
}
