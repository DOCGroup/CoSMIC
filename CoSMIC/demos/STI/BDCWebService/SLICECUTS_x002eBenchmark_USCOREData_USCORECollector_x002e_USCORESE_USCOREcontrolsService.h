/* SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService.h
   Generated by gSOAP 2.7.8c from SLICE.h
   Copyright (C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService_H
#define SLICECUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService_H

#include "cuts/CUTSC.h"
#include "cuts/BDC/Benchmark_Data_CollectorC.h"
#include <iostream>
#include "SLICEH.h"
using std::cout;
using std::cerr;
using std::endl;

class SOAP_CMAC CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService : public soap
{
private:
  CUTS::Path_Measurement_var online_measurements_;
  CUTS::BDC_Control_Handle_var controls_;

public:
  CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService (CUTS::Path_Measurement_ptr online_measurements, CUTS::BDC_Control_Handle_ptr controls);

  CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService();

  CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService(soap_mode iomode);

  CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService(soap_mode imode, soap_mode omode);

  virtual ~CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService();

  virtual void CUTS_x002eBenchmark_USCOREData_USCORECollector_x002e_USCORESE_USCOREcontrolsService_init(soap_mode imode, soap_mode omode);

  virtual int serve();

  virtual int dispatch();

  virtual int collect_USCOREperformance_USCOREdata(struct SLICE__collect_USCOREperformance_USCOREdataResponse &_param_1);

  virtual int execution_USCOREtime(int path_USCOREid, struct SLICE__execution_USCOREtimeResponse &_param_1);

  virtual int unbind_USCOREto_USCOREpath(int path_USCOREid, struct SLICE__unbind_USCOREto_USCOREpathResponse &_param_1);

  virtual int bind_USCOREto_USCOREpath(CUTS_x002e_USCORESE_USCOREPath_USCORESequence *path, unsigned short flags, int &_USCOREreturn);

};
#endif
