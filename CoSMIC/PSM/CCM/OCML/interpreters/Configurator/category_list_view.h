/*
 * @file: category_list_view.h
 *
 * Category ListView QT construction file
 *
 * Most of the file is generated by the QT resource compiler
 * 
 * @author: Emre Turkay <emre.turkay@vanderbilt.edu>
 */

#ifndef _CATEGORY_LIST_VIEW_H_
#define _CATEGORY_LIST_VIEW_H_

#include <qlistview.h>
#include "options.h"
#include "options_view.h"

class Category_List_Item: public QListViewItem {
public:
	Category_List_Item(QListView *parent,
					   Option_Category* option_category);

	Option_Category* category();

private:
	Option_Category* option_category_;
};

inline
Category_List_Item::Category_List_Item(QListView *parent,
									   Option_Category* option_category)
	: QListViewItem(parent, option_category->name().c_str()),
	  option_category_(option_category)
{
}

inline Option_Category*
Category_List_Item::category()
{
	return option_category_;
}

class Category_List_View: public QListView {
	Q_OBJECT
public:
	Category_List_View(QWidget *parent,
					   Options_View *options_view);
private:
	Options_View* options_view_;

protected slots:
	void slot_category_changed(QListViewItem*);
};

inline
Category_List_View::Category_List_View(QWidget *parent,
									   Options_View *options_view)
	: QListView(parent, "Category_List_View"),
	  options_view_(options_view)
{
	setRootIsDecorated(true);
	setSizePolicy(QSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding));
    connect(this, SIGNAL(selectionChanged(QListViewItem*)),
			this, SLOT(slot_category_changed(QListViewItem*)));
}

inline void
Category_List_View::slot_category_changed(QListViewItem* item)
{
	options_view_->update_options(dynamic_cast<Category_List_Item*>(item)->category());
}

#endif // _CATEGORY_LIST_VIEW_H_
