<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name="CQML" guid="{7D0DA888-D8AF-4AC4-8E42-F65F7D5CC386}" cdate="Sat Jan 20 02:21:24 2007" mdate="Sat Jan 20 02:21:24 2007" >

	<comment></comment>

	<author></author>

	<folder name = "RootFolder" metaref = "1000"  subfolders = "PICML::ComponentAnalyses PICML::ComponentBuild PICML::ComponentImplementations PICML::ComponentPackages PICML::ComponentTypes PICML::DeploymentPlans PICML::ImplementationArtifacts PICML::InterfaceDefinitions PICML::PackageConfigurations PICML::PathDiagrams PICML::PredefinedTypes PICML::Targets PICML::TopLevelPackages PICML::WorkerLibraries" rootobjects = "CQML::FaultTolerance CQML::Security" >
		<constraint type="function" name="AllParams" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
		</constraint>
		<constraint type="function" name="ComponentParentType" defdfornamesp = "PICML">
			<![CDATA[method;gme::FCO;;gme::FCO;
			if self.isInstance()
then
   let myType = self.type() in
   if myType.isType()
   then
      myType
   else
      myType.ComponentParentType()
   endif
else
   self
endif]]>
		</constraint>
		<constraint type="function" name="ConnectorParents" defdfornamesp = "PICML">
			<![CDATA[method;gme::Reference;;ocl::Bag;
			self.connectedFCOs(publish)->iterate (c : gme::FCO; acc = Bag{} | acc + Bag{c.parent()})]]>
		</constraint>
		<constraint type="function" name="MonolithicImpls" defdfornamesp = "PICML">
			<![CDATA[method;gme::Atom;;ocl::Set;
			self.connectedFCOs(Implementation)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="allAscendants" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;visited: ocl::Set;ocl::Set;
			let parents = self.ascendants() in
   let visited = visited.including(self) in
   parents->iterate( i : gme::Model ; accu = Set{} |
      if ( visited.includes(i) or i = self ) then
         accu.including(i)
      else
         accu.including(i) + i.allAscendants(visited)
      endif
)]]>
		</constraint>
		<constraint type="function" name="allFileScopeDecls" defdfornamesp = "PICML">
			<![CDATA[method;gme::Folder;;ocl::Set;
			let closure = self.models ("File") in
          if (closure->size < 1) then
          Set{}
          else
          closure->iterate (x ; accu = Set{} | accu
          + x.parts ()
          - x.parts ("FileRef")
          - x.parts ("ComponentRef")
          - x.parts ("ManagesComponent"))
          endif]]>
		</constraint>
		<constraint type="function" name="allOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
			let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
          ret]]>
		</constraint>
		<constraint type="function" name="ascendants" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.referenceParts(Inherits)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="inheritedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let parents = self.referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          if (parent == top) then Set{}
          else
          parent.localOps () + parent.inheritedOps (top)
          endif))]]>
		</constraint>
		<constraint type="function" name="inheritedSupportedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			let parents= referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
		</constraint>
		<constraint type="function" name="inheritsRecursive" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let inherits = referenceParts ("Inherits") in
          inherits->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          Set {parent} +
          (if (parent != top) then parent.inheritsRecursive (top)
          else Set {}
          endif)))]]>
		</constraint>
		<constraint type="function" name="localOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
          self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
		</constraint>
		<constraint type="function" name="supportedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			let supported_set = referenceParts ("Supports") in
          supported_set->iterate (ref; accu = Set{} | accu +
          (let supported = ref.refersTo ().oclAsType (gme::Model) in
          supported.localOps () + supported.inheritedOps (supported)))]]>
		</constraint>
		<attrdef name="Abstract" metaref = "4619" valuetype = "boolean" defvalue = "false">
			<dispname>Abstract:</dispname>
			<regnode name="help" value = "Flag that specifys if the worker is abstract. An abstract worker is one that cannot be used directly in a class as a worker. However, it can be subclassed by other workers."></regnode>
		</attrdef>
		<attrdef name="AuditLevel" metaref = "4211" valuetype = "enum" defvalue = "1">
			<enumitem dispname = "1" value = "1"></enumitem>
			<enumitem dispname = "2" value = "2"></enumitem>
			<enumitem dispname = "3" value = "3"></enumitem>
		</attrdef>
		<attrdef name="Authentication" metaref = "4212" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="CmdLineOptions" metaref = "3746" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="ConfidentialityLevel" metaref = "4213" valuetype = "enum" defvalue = "1">
			<enumitem dispname = "1" value = "1"></enumitem>
			<enumitem dispname = "2" value = "2"></enumitem>
			<enumitem dispname = "3" value = "3"></enumitem>
		</attrdef>
		<attrdef name="ConfigureRTQoS" metaref = "3818" valuetype = "boolean" defvalue = "true">
			<dispname>Support for RealTime QoS configuration for event channel</dispname>
		</attrdef>
		<attrdef name="ConsumerBasedFiltering" metaref = "3819" valuetype = "boolean" defvalue = "true">
			<dispname>Enable/Disable consumer specific filtering</dispname>
		</attrdef>
		<attrdef name="DataValue" metaref = "1001" valuetype = "string" defvalue = "">
			<dispname>value</dispname>
		</attrdef>
		<attrdef name="DelegationPolicy" metaref = "4214" valuetype = "enum" defvalue = "None">
			<enumitem dispname = "None" value = "None"></enumitem>
			<enumitem dispname = "Simple" value = "Simple"></enumitem>
			<enumitem dispname = "Composite" value = "Composite"></enumitem>
			<enumitem dispname = "Combined" value = "Combined"></enumitem>
			<enumitem dispname = "Traced" value = "Traced"></enumitem>
		</attrdef>
		<attrdef name="DisconnectDanglingConnections" metaref = "3820" valuetype = "boolean" defvalue = "true">
			<dispname>Configure EC Factory against dangling supplier/consumer</dispname>
		</attrdef>
		<attrdef name="DispatchingMultithreadingLevel" metaref = "3821" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="ECConsumerControl" metaref = "1002" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "reactive" value = "reactive"></enumitem>
		</attrdef>
		<attrdef name="ECConsumerControlPeriod" metaref = "1003" valuetype = "integer" defvalue = "5000000">
		</attrdef>
		<attrdef name="ECConsumerLock" metaref = "1004" valuetype = "enum" defvalue = "thread (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "thread (default)" value = "thread (default)"></enumitem>
			<enumitem dispname = "recursive" value = "recursive"></enumitem>
		</attrdef>
		<attrdef name="ECDispatching" metaref = "1005" valuetype = "enum" defvalue = "reactive (default)">
			<enumitem dispname = "reactive (default)" value = "reactive (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
			<enumitem dispname = "mt" value = "mt"></enumitem>
		</attrdef>
		<attrdef name="ECDispatchingThreads" metaref = "1006" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="ECFilterType" metaref = "3822" valuetype = "enum" defvalue = "LogicalAND">
			<dispname>Type of filter; i.e. GroupOR, LogicalAND or GroupAND</dispname>
			<enumitem dispname = "GroupOR" value = "GroupOR"></enumitem>
			<enumitem dispname = "LogicalAND" value = "LogicalAND"></enumitem>
			<enumitem dispname = "GroupAND" value = "GroupAND"></enumitem>
		</attrdef>
		<attrdef name="ECFiltering" metaref = "1007" valuetype = "enum" defvalue = "basic (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "basic (default)" value = "basic (default)"></enumitem>
			<enumitem dispname = "prefix" value = "prefix"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECObserver" metaref = "1008" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "basic" value = "basic"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionFlag" metaref = "1009" valuetype = "enum" defvalue = "list (default)">
			<enumitem dispname = "list (default)" value = "list (default)"></enumitem>
			<enumitem dispname = "rb_tree" value = "rb_tree"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionIterator" metaref = "1010" valuetype = "enum" defvalue = "immediate (default)">
			<enumitem dispname = "copy_on_read" value = "copy_on_read"></enumitem>
			<enumitem dispname = "copy_on_write" value = "copy_on_write"></enumitem>
			<enumitem dispname = "delayed" value = "delayed"></enumitem>
			<enumitem dispname = "immediate (default)" value = "immediate (default)"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionSynch" metaref = "1011" valuetype = "enum" defvalue = "mt (default)">
			<enumitem dispname = "mt (default)" value = "mt (default)"></enumitem>
			<enumitem dispname = "st" value = "st"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionFlag" metaref = "1012" valuetype = "enum" defvalue = "list (default)">
			<enumitem dispname = "list (default)" value = "list (default)"></enumitem>
			<enumitem dispname = "rb_tree" value = "rb_tree"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionIterator" metaref = "1013" valuetype = "enum" defvalue = "immediate (default)">
			<enumitem dispname = "copy_on_read" value = "copy_on_read"></enumitem>
			<enumitem dispname = "copy_on_write" value = "copy_on_write"></enumitem>
			<enumitem dispname = "delayed" value = "delayed"></enumitem>
			<enumitem dispname = "immediate (default)" value = "immediate (default)"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionSynch" metaref = "1014" valuetype = "enum" defvalue = "mt (default)">
			<enumitem dispname = "mt (default)" value = "mt (default)"></enumitem>
			<enumitem dispname = "st" value = "st"></enumitem>
		</attrdef>
		<attrdef name="ECScheduling" metaref = "1015" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierControl" metaref = "1016" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "reactive" value = "reactive"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierControlPeriod" metaref = "1017" valuetype = "integer" defvalue = "5000000">
		</attrdef>
		<attrdef name="ECSupplierFiltering" metaref = "1018" valuetype = "enum" defvalue = "per-supplier (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "per-supplier (default)" value = "per-supplier (default)"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierLock" metaref = "1019" valuetype = "enum" defvalue = "thread (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "thread (default)" value = "thread (default)"></enumitem>
			<enumitem dispname = "recursive" value = "recursive"></enumitem>
		</attrdef>
		<attrdef name="ECTimeout" metaref = "1020" valuetype = "enum" defvalue = "reactive (default)">
			<enumitem dispname = "reactive (default)" value = "reactive (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECUseORBId" metaref = "1021" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="FilterType" metaref = "3948" valuetype = "enum" defvalue = "DISJUNCTION">
			<dispname>Type of filter, i.e. DISJUNCTION, CONJUNCTION or LOGICAL_AND group.</dispname>
			<enumitem dispname = "DISJUNCTION" value = "DISJUNCTION"></enumitem>
			<enumitem dispname = "CONJUNCTION" value = "CONJUNCTION"></enumitem>
			<enumitem dispname = "LOGICAL_AND" value = "LOGICAL_AND"></enumitem>
		</attrdef>
		<attrdef name="IntegrityLevel" metaref = "4215" valuetype = "enum" defvalue = "1">
			<enumitem dispname = "1" value = "1"></enumitem>
			<enumitem dispname = "2" value = "2"></enumitem>
			<enumitem dispname = "3" value = "3"></enumitem>
		</attrdef>
		<attrdef name="Location" metaref = "4620" valuetype = "string" defvalue = "">
			<dispname>Location</dispname>
			<regnode name="help" value = "Specifies the location of the object on disk. It can be a relative or absolute location."></regnode>
		</attrdef>
		<attrdef name="LogAction" metaref = "4621" valuetype = "boolean" defvalue = "false">
			<dispname>Enable Logging:</dispname>
			<regnode name="help" value = "This determines whether or not to log an action. The semantics of logging is dependent on the interpreter."></regnode>
		</attrdef>
		<attrdef name="Metric" metaref = "4218" valuetype = "double" defvalue = "0.0">
		</attrdef>
		<attrdef name="MultithreadedConsumer" metaref = "3823" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="MultithreadedSupplier" metaref = "3824" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="NonRepudiation" metaref = "4219" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="ORBServices" metaref = "1022" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Period" metaref = "4622" valuetype = "integer" defvalue = "1000">
			<dispname>Period (msec):</dispname>
			<regnode name="help" value = "The period of the action. The units of value is milliseconds."></regnode>
		</attrdef>
		<attrdef name="Postcondition" metaref = "4623" valuetype = "string" defvalue = "">
			<dispname>Postcondition:</dispname>
			<regnode name="help" value = "Defines the effects of executing the previous action."></regnode>
		</attrdef>
		<attrdef name="Precondition" metaref = "4624" valuetype = "string" defvalue = "">
			<dispname>Precondition:</dispname>
			<regnode name="help" value = "Defines the condition that allows execution of the next action."></regnode>
		</attrdef>
		<attrdef name="PrefixTag" metaref = "1023" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Probability" metaref = "4625" valuetype = "double" defvalue = "1.0">
			<dispname>Probability</dispname>
			<regnode name="help" value = "The probability of the action occurring."></regnode>
		</attrdef>
		<attrdef name="Repetitions" metaref = "4626" valuetype = "integer" defvalue = "1">
			<dispname>Number of Repetitions:</dispname>
			<regnode name="help" value = "Specifies the number of repetitions for an operation. Actions with 0 repetitions are considered non-repetitive actions."></regnode>
		</attrdef>
		<attrdef name="Replica" metaref = "4225" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="ReplicationStyle" metaref = "4226" valuetype = "enum" defvalue = "Active">
			<enumitem dispname = "Active" value = "Active"></enumitem>
			<enumitem dispname = "Passive" value = "Passive"></enumitem>
			<enumitem dispname = "Semiactive" value = "Semiactive"></enumitem>
		</attrdef>
		<attrdef name="ResourceUsageKind" metaref = "1024" valuetype = "enum" defvalue = "None">
			<dispname>resourceUsage</dispname>
			<enumitem dispname = "None" value = "None"></enumitem>
			<enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
			<enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesPort" value = "ResourceUsesPort"></enumitem>
		</attrdef>
		<attrdef name="SatisfierPropertyKind" metaref = "1025" valuetype = "enum" defvalue = "Quantity">
			<dispname>kind</dispname>
			<enumitem dispname = "Quantity" value = "Quantity"></enumitem>
			<enumitem dispname = "Capacity" value = "Capacity"></enumitem>
			<enumitem dispname = "Minimum" value = "Minimum"></enumitem>
			<enumitem dispname = "Maximum" value = "Maximum"></enumitem>
			<enumitem dispname = "Selection" value = "Selection"></enumitem>
			<enumitem dispname = "Attribute" value = "Attribute"></enumitem>
		</attrdef>
		<attrdef name="SecurityLevel" metaref = "4227" valuetype = "enum" defvalue = "1">
			<enumitem dispname = "1" value = "1"></enumitem>
			<enumitem dispname = "2" value = "2"></enumitem>
			<enumitem dispname = "3" value = "3"></enumitem>
		</attrdef>
		<attrdef name="SecurityPolicy" metaref = "4228" valuetype = "enum" defvalue = "SecureInvocationPolicy">
			<enumitem dispname = "DomainAccessPolicy" value = "DomainAccessPolicy"></enumitem>
			<enumitem dispname = "SecureInvocationPolicy" value = "SecureInvocationPolicy"></enumitem>
		</attrdef>
		<attrdef name="SpecifyIdTag" metaref = "1026" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="SupplierBasedFiltering" metaref = "3825" valuetype = "boolean" defvalue = "true">
			<dispname>EC tries to push to global collection of consumers if disabled</dispname>
		</attrdef>
		<attrdef name="SvcConf" metaref = "3747" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="UUID" metaref = "1027" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="VersionTag" metaref = "1028" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="admissionPriority" metaref = "3697" valuetype = "enum" defvalue = "NORMAL">
			<enumitem dispname = "NORMAL" value = "NORMAL"></enumitem>
			<enumitem dispname = "HIGH" value = "HIGH"></enumitem>
			<enumitem dispname = "LOW" value = "LOW"></enumitem>
		</attrdef>
		<attrdef name="allow" metaref = "4229" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="allow_borrowing" metaref = "2727" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="allow_request_buffering" metaref = "2728" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="architecture" metaref = "3883" valuetype = "enum" defvalue = "x86">
			<enumitem dispname = "x86" value = "x86"></enumitem>
			<enumitem dispname = "x86-64" value = "x86-64"></enumitem>
			<enumitem dispname = "PowerPC" value = "PowerPC"></enumitem>
			<enumitem dispname = "SPARC" value = "SPARC"></enumitem>
			<enumitem dispname = "MIPS" value = "MIPS"></enumitem>
			<enumitem dispname = "HPPA" value = "HPPA"></enumitem>
		</attrdef>
		<attrdef name="artifactVersion" metaref = "3884" valuetype = "string" defvalue = "0.0.0.0">
		</attrdef>
		<attrdef name="benchmarkIterations" metaref = "1029" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="cached_execution_time" metaref = "1030" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="combinator" metaref = "4230" valuetype = "enum" defvalue = "All">
			<enumitem dispname = "Any" value = "Any"></enumitem>
			<enumitem dispname = "All" value = "All"></enumitem>
		</attrdef>
		<attrdef name="componentPort" metaref = "1031" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="configuration" metaref = "1032" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="criticality" metaref = "1033" valuetype = "enum" defvalue = "MEDIUM_CRITICALITY">
			<enumitem dispname = "VERY_LOW_CRITICALITY" value = "VERY_LOW_CRITICALITY"></enumitem>
			<enumitem dispname = "LOW_CRITICALITY" value = "LOW_CRITICALITY"></enumitem>
			<enumitem dispname = "MEDIUM_CRITICALITY" value = "MEDIUM_CRITICALITY"></enumitem>
			<enumitem dispname = "HIGH_CRITICALITY" value = "HIGH_CRITICALITY"></enumitem>
			<enumitem dispname = "VERY_HIGH_CRITICALITY" value = "VERY_HIGH_CRITICALITY"></enumitem>
		</attrdef>
		<attrdef name="custom" metaref = "3738" valuetype = "string" defvalue = "">
			<regnode name="multiLine" value = "2"></regnode>
		</attrdef>
		<attrdef name="defaultVersion" metaref = "3885" valuetype = "string" defvalue = "0.0.0.0">
		</attrdef>
		<attrdef name="dynamic" metaref = "3175" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="dynamic_threads" metaref = "2729" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="enabled" metaref = "1034" valuetype = "enum" defvalue = "DEPENDENCY_NON_VOLATILE">
			<enumitem dispname = "DEPENDENCY_DISABLED" value = "DEPENDENCY_DISABLED"></enumitem>
			<enumitem dispname = "DEPENDENCY_ENABLED" value = "DEPENDENCY_ENABLED"></enumitem>
			<enumitem dispname = "DEPENDENCY_NON_VOLATILE" value = "DEPENDENCY_NON_VOLATILE"></enumitem>
		</attrdef>
		<attrdef name="entry_point" metaref = "1035" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="exclusiveProvider" metaref = "1036" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveUser" metaref = "1037" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="family" metaref = "4231" valuetype = "string" defvalue = "corba">
		</attrdef>
		<attrdef name="fileName" metaref = "1038" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="fwdBW" metaref = "3458" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="get" metaref = "4232" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="high" metaref = "2730" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="importance" metaref = "1039" valuetype = "enum" defvalue = "MEDIUM_IMPORTANCE">
			<enumitem dispname = "VERY_LOW_IMPORTANCE" value = "VERY_LOW_IMPORTANCE"></enumitem>
			<enumitem dispname = "LOW_IMPORTANCE" value = "LOW_IMPORTANCE"></enumitem>
			<enumitem dispname = "MEDIUM_IMPORTANCE" value = "MEDIUM_IMPORTANCE"></enumitem>
			<enumitem dispname = "HIGH_IMPORTANCE" value = "HIGH_IMPORTANCE"></enumitem>
			<enumitem dispname = "VERY_HIGH_IMPORTANCE" value = "VERY_HIGH_IMPORTANCE"></enumitem>
		</attrdef>
		<attrdef name="info_type" metaref = "1040" valuetype = "enum" defvalue = "OPERATION">
			<enumitem dispname = "OPERATION" value = "OPERATION"></enumitem>
			<enumitem dispname = "CONJUNCTION" value = "CONJUNCTION"></enumitem>
			<enumitem dispname = "DISJUNCTION" value = "DISJUNCTION"></enumitem>
			<enumitem dispname = "REMOTE_DEPENDANT" value = "REMOTE_DEPENDANT"></enumitem>
		</attrdef>
		<attrdef name="initial_thread_number" metaref = "3826" valuetype = "integer" defvalue = "2">
			<dispname>Steady state number of threads</dispname>
		</attrdef>
		<attrdef name="iterations" metaref = "1041" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="label" metaref = "1042" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="lane_priority" metaref = "2731" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="libraryexport" metaref = "1043" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="location" metaref = "1044" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="low" metaref = "2732" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="manage" metaref = "4233" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="max_buffer_size" metaref = "2733" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="max_buffered_requests" metaref = "2734" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="maximum_thread_number" metaref = "3827" valuetype = "integer" defvalue = "2">
			<dispname>The maximum number of threads </dispname>
		</attrdef>
		<attrdef name="operatingSystem" metaref = "3886" valuetype = "enum" defvalue = "Linux">
			<enumitem dispname = "Linux" value = "Linux"></enumitem>
			<enumitem dispname = "Win32" value = "Win32"></enumitem>
			<enumitem dispname = "Darwin" value = "Darwin"></enumitem>
			<enumitem dispname = "Win64" value = "Win64"></enumitem>
			<enumitem dispname = "SunOS" value = "SunOS"></enumitem>
			<enumitem dispname = "VxWorks" value = "VxWorks"></enumitem>
			<enumitem dispname = "FreeBSD" value = "FreeBSD"></enumitem>
			<enumitem dispname = "NetBSD" value = "NetBSD"></enumitem>
			<enumitem dispname = "OpenBSD" value = "OpenBSD"></enumitem>
			<enumitem dispname = "AIX" value = "AIX"></enumitem>
			<enumitem dispname = "BSDi" value = "BSDi"></enumitem>
			<enumitem dispname = "VMS" value = "VMS"></enumitem>
			<enumitem dispname = "Tru64" value = "Tru64"></enumitem>
			<enumitem dispname = "DigitalUnix" value = "DigitalUnix"></enumitem>
			<enumitem dispname = "HPUX" value = "HPUX"></enumitem>
			<enumitem dispname = "IRIX" value = "IRIX"></enumitem>
		</attrdef>
		<attrdef name="optional" metaref = "1045" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="out_event_port_type" metaref = "1046" valuetype = "enum" defvalue = "DirectConnect">
			<enumitem dispname = "DirectConnect" value = "DirectConnect"></enumitem>
			<enumitem dispname = "RTEventChannel" value = "RTEventChannel"></enumitem>
		</attrdef>
		<attrdef name="period" metaref = "1047" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="priority" metaref = "1048" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="priority_model" metaref = "3748" valuetype = "enum" defvalue = "CLIENT_PROPAGATED">
			<enumitem dispname = "CLIENT_PROPAGATED" value = "CLIENT_PROPAGATED"></enumitem>
			<enumitem dispname = "SERVER_DECLARED" value = "SERVER_DECLARED"></enumitem>
		</attrdef>
		<attrdef name="priority_value" metaref = "3749" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="quality" metaref = "3730" valuetype = "enum" defvalue = "BEST_EFFORT">
			<enumitem dispname = "BEST_EFFORT" value = "BEST_EFFORT"></enumitem>
			<enumitem dispname = "HIGH_PRIORITY" value = "HIGH_PRIORITY"></enumitem>
			<enumitem dispname = "HIGH_RELIABILITY" value = "HIGH_RELIABILITY"></enumitem>
			<enumitem dispname = "HIGH_THROUGHPUT" value = "HIGH_THROUGHPUT"></enumitem>
			<enumitem dispname = "VOICE" value = "VOICE"></enumitem>
			<enumitem dispname = "VIDEO" value = "VIDEO"></enumitem>
		</attrdef>
		<attrdef name="quantum" metaref = "1049" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="rate" metaref = "1050" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="require_banding" metaref = "3828" valuetype = "boolean" defvalue = "false">
			<dispname>Clients require banded connections, i.e. separate connection for a request.</dispname>
		</attrdef>
		<attrdef name="requiredName" metaref = "1051" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredType" metaref = "1052" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredUUID" metaref = "1053" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resolution" metaref = "1054" valuetype = "enum" defvalue = "microseconds">
			<enumitem dispname = "seconds" value = "seconds"></enumitem>
			<enumitem dispname = "miliseconds" value = "miliseconds"></enumitem>
			<enumitem dispname = "microseconds" value = "microseconds"></enumitem>
		</attrdef>
		<attrdef name="resourcePort" metaref = "1055" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resourceType" metaref = "1056" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="revBW" metaref = "3464" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="scheduling_enabled" metaref = "3750" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="set" metaref = "4234" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="sharedname" metaref = "1057" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="stacksize" metaref = "2735" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="static_threads" metaref = "2736" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="thread_priority" metaref = "3829" valuetype = "integer" defvalue = "127">
		</attrdef>
		<attrdef name="threads" metaref = "1058" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="timeperiod" metaref = "1059" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="typical_execution_time" metaref = "1060" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="use" metaref = "4235" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="warmup" metaref = "1061" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="worst_case_execution_time" metaref = "1062" valuetype = "integer" defvalue = "">
		</attrdef>
		<atom name = "CQML::AssemblyRule" metaref = "4236"  attributes = "allow">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="AssemblyRuleSemantics" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.connectedFCOs(AssemblyAccessConn)->size() = 1 and self.connectedFCOs(SecuredPathConn)->size() >= 1) and 
(self.connectedFCOs(OnAssemblyConn)->size() = 1)]]>
				<dispname>An Assembly Rule must be associated with exactly one Initiator Role, Path and an Assembly Reference.</dispname>
			</constraint>
			<constraint name="ValidCQML__AssemblyAccessConnsrcCardinality1" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::AssemblyAccessConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::AssemblyRule as &quot;src&quot; over CQML::AssemblyAccessConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__OnAssemblyConndstCardinality36" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OnAssemblyConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::AssemblyRule as &quot;dst&quot; over CQML::OnAssemblyConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__SecuredPathConndstCardinality62" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::SecuredPathConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::AssemblyRule as &quot;dst&quot; over CQML::SecuredPathConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="rule.bmp"></regnode>
				<regnode name = "icon" value ="assembly_rule.gif"></regnode>
		</atom>
		<atom name = "CQML::BandedConnection" metaref = "3751"  attributes = "low high">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "CQML::ComponentRule" metaref = "4237"  attributes = "allow">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ComponentRuleSemantics" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.connectedFCOs(ComponentAccessConn)->size() = 1 and self.connectedFCOs(AttributeManipulateConn)->size() >= 1) and 
(self.connectedFCOs(OnComponentConn)->size() = 1)  ]]>
				<dispname>A Component Rule must be associated with exactly one Initiator Role, Attribute, and an Component Reference.</dispname>
			</constraint>
			<constraint name="ValidCQML__AttributeManipulateConndstCardinality4" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::AttributeManipulateConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::ComponentRule as &quot;dst&quot; over CQML::AttributeManipulateConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__ComponentAccessConnsrcCardinality7" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ComponentAccessConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::ComponentRule as &quot;src&quot; over CQML::ComponentAccessConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__OnComponentConndstCardinality38" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OnComponentConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::ComponentRule as &quot;dst&quot; over CQML::OnComponentConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="rule.bmp"></regnode>
				<regnode name = "icon" value ="component_rule.gif"></regnode>
		</atom>
		<atom name = "CQML::EC_Filter_Group" metaref = "3752"  attributes = "FilterType">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "CQML::EnvironmentConf" metaref = "3753"  attributes = "CmdLineOptions SvcConf">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="EnvironmentConf.bmp"></regnode>
		</atom>
		<atom name = "CQML::GrantedRights" metaref = "4239"  attributes = "family get set use manage">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="GrantedRightsHasRole" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(RightsAssignmentConn)->size() = 1]]>
				<dispname>Granted Rights should have a user/group associated</dispname>
			</constraint>
				<regnode name = "icon" value ="rights.bmp"></regnode>
				<regnode name = "icon" value ="role_access_rights.bmp"></regnode>
		</atom>
		<atom name = "CQML::Lanes" metaref = "3967"  attributes = "static_threads lane_priority dynamic_threads">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "CQML::NetQoS" metaref = "3741"  attributes = "quality custom admissionPriority fwdBW revBW">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MustSetNetQoSProperty" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let deploymentplans = project.allInstancesOf (DeploymentPlan) in
deploymentplans->forAll (p: DeploymentPlan | let properties = p.models(Property) in 
properties->exists ( i : Property | i.name().trim() = "CIAONetworkQoS"))]]>
				<dispname>If a NetQoS element is defined, a CIAONetworkQoS infoProperty must be set in all the deployment plans. (A weaker constraint is being worked upon.)</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidNetQoSCharacteristicAssociation" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(QoSReq)->size() = 0
and
self.connectedFCOs(PortQoS)->size() = 0]]>
				<dispname>Can not connect to different QoSCharacteristic type</dispname>
			</constraint>
				<regnode name = "icon" value ="ns_qos.bmp"></regnode>
		</atom>
		<atom name = "CQML::PortRule" metaref = "4241"  attributes = "allow">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="PortRuleSemantics" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.connectedFCOs(ObjectAccessConn)->size() = 1 and self.connectedFCOs(OperationInvokeConn)->size() >= 1) and 
(self.connectedFCOs(OnInterfaceConn)->size() = 1)]]>
				<dispname>A Port Rule must be associate with exactly one Initiator Role, Operation Reference/OperationSet/RequiredRights, and an Object Reference</dispname>
			</constraint>
			<constraint name="ValidCQML__ObjectAccessConnsrcCardinality33" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ObjectAccessConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::PortRule as &quot;src&quot; over CQML::ObjectAccessConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__OnInterfaceConndstCardinality40" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OnInterfaceConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::PortRule as &quot;dst&quot; over CQML::OnInterfaceConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__OperationInvokeConndstCardinality44" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OperationInvokeConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::PortRule as &quot;dst&quot; over CQML::OperationInvokeConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="rule.bmp"></regnode>
				<regnode name = "icon" value ="port_rule.gif"></regnode>
		</atom>
		<atom name = "CQML::PriorityModelPolicy" metaref = "3755"  attributes = "priority_model priority_value">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "CQML::QoSConnector" metaref = "3469" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingPublishConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(EventSinkPublish) in
   let publishers = self.connectedFCOs(EventSourcePublish) in
      publishers->forAll ( i : OutEventPort | 
          let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
             consumers->forAll (j: InEventPort |
                    supertypes->one (k: gme::FCO | k.name() = j.refersTo().name()  )
             or i.refersTo().name() = j.refersTo().name()   )
)]]>
				<dispname>An OutEventPort connected to an InEventPort via a QoSConnector should be of the same type or a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="Require2Connections" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.connectedFCOs(EventSourcePublish)->size() = 1 and self.connectedFCOs(EventSinkPublish)->size() >= 1) or 
(self.connectedFCOs(RecepInvoke)->size() = 1 and self.connectedFCOs(FacetInvoke)->size() = 1) ]]>
				<dispname>A QoSConnector should be connected to one outgoing port and atleast one incoming port.</dispname>
			</constraint>
			<constraint name="ValidCQML__EventSourcePublishsrcCardinality17" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::EventSourcePublish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSConnector as &quot;src&quot; over CQML::EventSourcePublish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__FacetInvokedstCardinality22" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::FacetInvoke ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSConnector as &quot;dst&quot; over CQML::FacetInvoke, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__RecepInvokesrcCardinality55" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::RecepInvoke ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSConnector as &quot;src&quot; over CQML::RecepInvoke, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "CQML::RTEC_Factory_Behavior" metaref = "3970"  attributes = "ECUseORBId ECFiltering ECTimeout ECDispatchingThreads ECDispatching ECObserver ECScheduling">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="BasicFiltering_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Basic filtering limits nesting of filter groups to two levels</dispname>
			</constraint>
			<constraint name="ECDispatchingThreads_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.ECDispatchingThreads <> 1 implies
          self.ECDispatching = "mt"]]>
				<dispname>ECDispatchingThreads only valid with &quot;mt&quot; ECDispatchingStrategy</dispname>
			</constraint>
			<constraint name="ECDispatchingThreads_Positive_Integer_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.ECDispatchingThreads > 0]]>
				<dispname>ECDispatchingThreads must be greater than zero</dispname>
			</constraint>
			<constraint name="PriorityDispatching_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Priority dispatching requires priorities for all connected ports</dispname>
			</constraint>
				<regnode name = "icon" value ="rtec_resource_factory.bmp"></regnode>
				<regnode name = "porticon" value ="rtec_resource_factory-port.bmp"></regnode>
		</atom>
		<atom name = "CQML::RTEC_Factory_Consumer_Behavior" metaref = "3757"  attributes = "ECConsumerControl ECProxyPushConsumerCollectionSynch ECConsumerLock ECConsumerControlPeriod ECProxyPushConsumerCollectionFlag ECProxyPushConsumerCollectionIterator">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ECConsumerControlPeriod_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.ECConsumerControlPeriod <> 0 and self.ECConsumerControlPeriod <> 5000000)
          implies
          self.ECConsumerControl = "reactive"]]>
				<dispname>ECConsumerControlPeriod only valid with &quot;reactive&quot; ECConsumerControlPolicy.</dispname>
			</constraint>
		</atom>
		<atom name = "CQML::RTEC_Factory_Supplier_Behavior" metaref = "3758"  attributes = "ECSupplierControl ECSupplierLock ECSupplierControlPeriod ECProxyPushSupplierCollectionFlag ECProxyPushSupplierCollectionSynch ECSupplierFiltering ECProxyPushSupplierCollectionIterator">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ECSupplierControlPeriod_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.ECSupplierControlPeriod <> 0 and self.ECSupplierControlPeriod <> 5000000)
          implies
          self.ECSupplierControl = "reactive"]]>
				<dispname>ECSupplierControlPeriod only valid with &quot;reactive&quot; ECSupplierControlPolicy</dispname>
			</constraint>
		</atom>
		<atom name = "CQML::RT_Info" metaref = "3759"  attributes = "period entry_point criticality enabled importance quantum threads cached_execution_time worst_case_execution_time info_type typical_execution_time scheduling_enabled">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rt_info.bmp"></regnode>
				<regnode name = "porticon" value ="rt_info-port.bmp"></regnode>
		</atom>
		<atom name = "CQML::RequiredRights" metaref = "4242"  attributes = "combinator family get set use manage">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="RequiredRightsHasOperationOrInterface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.connectedFCOs(OperationClassificationConn)->size() = 1 or self.connectedFCOs(InterfaceClassificationConn)->size() 
= 1 or self.connectedFCOs(OperationInvokeConn)->size() = 1)]]>
				<dispname>Required Rights should have an operation/interface associated.</dispname>
			</constraint>
				<regnode name = "icon" value ="rights.bmp"></regnode>
				<regnode name = "icon" value ="rights.bmp"></regnode>
		</atom>
		<atom name = "CQML::Role" metaref = "4243" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidCQML__RightsAssignmentConndstCardinality58" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::RightsAssignmentConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::Role as &quot;dst&quot; over CQML::RightsAssignmentConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="role.bmp"></regnode>
		</atom>
		<atom name = "CQML::ThreadPool" metaref = "3760"  attributes = "allow_request_buffering max_buffered_requests stacksize max_buffer_size allow_borrowing">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="RequiresLaneConfiguration" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(Lanes)->size() >= 1]]>
				<dispname>ThreadPool should have atleast one Lane configuration</dispname>
			</constraint>
			<constraint name="RequiresPriorityModelConfiguration" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(PriorityModelPolicy)->size() >= 1]]>
				<dispname>Should have atleast one associated PriorityModelPolicy</dispname>
			</constraint>
		</atom>
		<atom name = "CQML::User" metaref = "4245"  attributes = "principal">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="principal" metaref = "4627" valuetype = "string" defvalue = "">
			</attrdef>
				<regnode name = "icon" value ="user.gif"></regnode>
		</atom>
		<atom name = "PICML::Average" metaref = "1063" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Average.bmp"></regnode>
		</atom>
		<atom name = "PICML::Boolean" metaref = "1064" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Byte" metaref = "1065" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ComponentPackage" metaref = "1066"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="SingleComponentInteface" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.connectedFCOs(PackageInterface)->size() = 1 
or
self.connectedFCOs(Implementation)->forAll (i : Reference | i.refersTo().kindName() = "ComponentAssembly")
]]>
				<dispname>A ComponentPackage that contains a reference to a MonolithicImplementation should also refer to the corresponding component interface</dispname>
			</constraint>
			<constraint name="UniqueMonolithicImpls" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let impls = self.bagConnectedFCOs(Implementation) in
   impls->isUnique (a : ComponentImplementationReference | a.refersTo().name.trim())
     and
   impls->isUnique (a: ComponentImplementationReference | a.name.trim())]]>
				<dispname>Monolithic Implementations of a ComponentPackage should be unique</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
   packages->forAll 
                       (x : ComponentPackage | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every Component Package should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPICML__ImplementationdstCardinality128" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Implementation ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentPackage as &quot;dst&quot; over PICML::Implementation, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageInterfacedstCardinality180" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::PackageInterface ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentPackage as &quot;dst&quot; over PICML::PackageInterface, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
		</atom>
		<atom name = "PICML::Connections" metaref = "3830"  attributes = "require_banding">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::DisplayNode" metaref = "2844" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="vertex.bmp"></regnode>
		</atom>
		<atom name = "PICML::ECBehavior" metaref = "3831"  attributes = "DisconnectDanglingConnections ConsumerBasedFiltering SupplierBasedFiltering MultithreadedSupplier MultithreadedConsumer DispatchingMultithreadingLevel">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::ECEventFilterConfiguration" metaref = "3832"  attributes = "ECFilterType">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::Edge" metaref = "2089" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__DstEdgesrcCardinality109" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::DstEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Edge as &quot;src&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgedstCardinality190" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::SrcEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Edge as &quot;dst&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "PICML::EnumValue" metaref = "1069" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enumvalue.bmp"></regnode>
		</atom>
		<atom name = "PICML::Environment" metaref = "4628" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="environment.gif"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::ExternalReferenceEndPoint" metaref = "2847"  attributes = "location">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ExternalReferenceEndPoint.bmp"></regnode>
		</atom>
		<atom name = "PICML::FixedIterationBenchmarks" metaref = "1071"  attributes = "benchmarkIterations">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__BenchmarkCharacteristicsdstCardinality92" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Discrete-Benchmark.bmp"></regnode>
		</atom>
		<atom name = "PICML::GenericObject" metaref = "1072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::GenericValue" metaref = "1073" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::GenericValueObject" metaref = "1074" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ImplementationArtifact" metaref = "1075"  attributes = "configuration operatingSystem artifactVersion UUID label architecture location">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueDependencies" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependsOn) in
   artifacts->isUnique (a : ImplementationArtifactReference | a.refersTo().name().trim())]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="UniqueDependentArtifacts" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependency) in
   artifacts->isUnique (a : ImplementationArtifact |  a.name().trim() )]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let digit = "[0-9]" in
let twodigits = digit + digit in
let threedigits = twodigits + digit in
let fourdigits = threedigits + digit in
let singleversion = "(" + digit + "|" + twodigits + "|" + threedigits + "|" + fourdigits + "|" 
                    + "[0-5]" + fourdigits + "|"
                    + "6[0-4]" + threedigits + "|"
                    + "65[0-4]" + twodigits + "|"
                    + "655[0-2]" + digit + "|"
                    + "65553[0-5]" + ")" in
let version = self.artifactVersion.trim() in
   version.match(singleversion + "\." + singleversion + "\." + singleversion + "\." + singleversion + "$")]]>
				<dispname>Version should be of the form n.n.n.n, where 0 &lt;= n &lt;= 65535</dispname>
			</constraint>
				<regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
		</atom>
		<atom name = "PICML::ImplementationDependency" metaref = "1076"  attributes = "requiredType">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
		</atom>
		<atom name = "PICML::Jitter" metaref = "1077" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Jitter.bmp"></regnode>
		</atom>
		<atom name = "PICML::Label" metaref = "1078" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__LabelConnectionsrcCardinality147" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::LabelConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Label as &quot;src&quot; over PICML::LabelConnection, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="label.bmp"></regnode>
		</atom>
		<atom name = "PICML::LongInteger" metaref = "1080" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Maximum" metaref = "1081" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Max.bmp"></regnode>
		</atom>
		<atom name = "PICML::Minimum" metaref = "1082" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Min.bmp"></regnode>
		</atom>
		<atom name = "PICML::MonolithicImplementation" metaref = "1083"  attributes = "UUID label defaultVersion">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="RequiredInterface" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.connectedFCOs (Implements)->size() = 1]]>
				<dispname>Every MonolithicComponentImplementation should implement a Component interface.</dispname>
			</constraint>
			<constraint name="UniqueArtifacts" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(MonolithprimaryArtifact) in
  artifacts->isUnique (a : ImplementationArtifactReference |  a.name().trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should be unique</dispname>
			</constraint>
			<constraint name="ValidPICML__ImplementsdstCardinality134" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentImplementation as &quot;dst&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__MonolithprimaryArtifactdstCardinality160" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::MonolithprimaryArtifact ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MonolithicImplementation as &quot;dst&quot; over PICML::MonolithprimaryArtifact, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let digit = "[0-9]" in
let twodigits = digit + digit in
let threedigits = twodigits + digit in
let fourdigits = threedigits + digit in
let singleversion = "(" + digit + "|" + twodigits + "|" + threedigits + "|" + fourdigits + "|" 
                    + "[0-5]" + fourdigits + "|"
                    + "6[0-4]" + threedigits + "|"
                    + "65[0-4]" + twodigits + "|"
                    + "655[0-2]" + digit + "|"
                    + "65553[0-5]" + ")" in
let version = self.defaultVersion.trim() in
   version.match(singleversion + "\." + singleversion + "\." + singleversion + "\." + singleversion + "$")]]>
				<dispname>Version should be of the form n.n.n.n, where 0 &lt;= n &lt;= 65535</dispname>
			</constraint>
				<regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
		</atom>
		<atom name = "PICML::Multithreading" metaref = "3833"  attributes = "initial_thread_number thread_priority maximum_thread_number">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::PackageConfiguration" metaref = "1085"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
          folder->isUnique (e1 : PackageConfiguration | e1.name)]]>
				<dispname>PackageConfiguration should be unique within a project</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (PackageConfiguration) in
   packages->forAll 
                       (x : PackageConfiguration | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every PackageConfiguration should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfBasePackagedstCardinality166" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfBasePackage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfReferencedstCardinality170" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfReference, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfSpecializedConfigdstCardinality174" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfSpecializedConfig, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
		</atom>
		<atom name = "PICML::PeriodicBenchmarks" metaref = "1086"  attributes = "timeperiod">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__BenchmarkCharacteristicsdstCardinality92" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Periodic-Bench.bmp"></regnode>
		</atom>
		<atom name = "PICML::PeriodicEvent" metaref = "4629"  attributes = "Period Probability">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__InputdstCardinality138" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::SingleInputBase as &quot;dst&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="periodic.gif"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::PrivateFlag" metaref = "1087" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__MakeMemberPrivatesrcCardinality149" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PrivateFlag as &quot;src&quot; over PICML::MakeMemberPrivate, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="private.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::PublishConnector" metaref = "2848" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingPublishConsumer" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(deliverTo) in
   let publishers = self.connectedFCOs(publish) in
      publishers->forAll ( i : OutEventPort | 
          let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
             consumers->forAll (j: InEventPort |
                    supertypes->one (k: gme::FCO | k.name() = j.refersTo().name()  )
             or i.refersTo().name() = j.refersTo().name()   )
)]]>
				<dispname>An OutEventPort connected to an InEventPort via a PublishConnector should be of the same type or a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="Require2Connections" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.connectedFCOs(publish)->size() = 1 and self.connectedFCOs(deliverTo)->size() >= 1]]>
				<dispname>A PublishConnector should connect one OutEventPort with one or more InEventPorts</dispname>
			</constraint>
			<constraint name="ValidPICML__publishsrcCardinality211" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::publish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PublishConnector as &quot;src&quot; over PICML::publish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPublishHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(publish)->forAll (x : FCO | x.parent() <> self.parent()) 
and
self.connectedFCOs(deliverTo)->forAll (x : FCO | x.parent() <> self.parent())]]>
				<dispname>A PublishConnector cannot be used to make connections between In/OutEventPorts that are delegates and not ports of component instances</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "PICML::RealNumber" metaref = "1091" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ShortInteger" metaref = "1092" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::State" metaref = "4630" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="HasPrecondition" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let conns = self.attachingConnections ("src", Transition) in

conns->size > 1 implies
  conns->forAll (iter : Transition | 
                        iter.Precondition.trim ().size > 0)
]]>
				<dispname>States with more than one transition must define a precondition for all transitions.</dispname>
			</constraint>
				<regnode name = "icon" value ="State.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::String" metaref = "1093" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Task" metaref = "1094" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__WorkLoadOperationConnectionsrcCardinality199" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::WorkLoadOperationConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Task as &quot;src&quot; over PICML::WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="task.bmp"></regnode>
		</atom>
		<atom name = "PICML::TimeProbe" metaref = "1095" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__TimerConnectionsrcCardinality193" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::TimerConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TimeProbe as &quot;src&quot; over PICML::TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TimerEventSinkConnsrcCardinality195" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::TimerEventSinkConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TimeProbe as &quot;src&quot; over PICML::TimerEventSinkConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="timer.bmp"></regnode>
		</atom>
		<atom name = "PICML::TopLevelPackage" metaref = "1096" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__packagedstCardinality210" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::package ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TopLevelPackage as &quot;dst&quot; over PICML::package, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
		</atom>
		<atom name = "PICML::TriggerBenchmarks" metaref = "1097" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__BenchmarkCharacteristicsdstCardinality92" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Trigger-Bench.bmp"></regnode>
		</atom>
		<atom name = "PICML::TypeEncoding" metaref = "1098" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::TypeKind" metaref = "1099" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<set name = "PICML::CollocationGroup" metaref = "1100" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setCollocationGroup"></regnode>
				<regnode name = "icon" value ="ComponentSet"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
				<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				<pointeritem desc = "PICML::SharedComponentReference"></pointeritem>
			</pointerspec>
		</set>
		<set name = "PICML::TaskSet" metaref = "1101" attributes = "priority rate" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setTaskSet"></regnode>
				<regnode name = "icon" value ="taskset.bmp"></regnode>
			<constraint name="ValidPICML__WorkloadCharacteristicssrcCardinality201" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::WorkloadCharacteristics ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TaskSet as &quot;src&quot; over PICML::WorkloadCharacteristics, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::Task"></pointeritem>
			</pointerspec>
		</set>
		<set name = "PICML::Workspaces" metaref = "1102" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setWorkspace"></regnode>
				<regnode name = "icon" value ="Workspace.bmp"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::Project"></pointeritem>
			</pointerspec>
		</set>
		<connection name = "CQML::AssemblyAccessConn" metaref = "4247" >
				<regnode name = "sName" value ="srcAssemblyAccessConn"></regnode>
				<regnode name = "dName" value ="dstAssemblyAccessConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "dstLabel1" value="accesses assembly"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::InitiatorRoleRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::AssemblyRule"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::AttributeManipulateConn" metaref = "4248" >
				<regnode name = "sName" value ="srcAttributeManipulateConn"></regnode>
				<regnode name = "dName" value ="dstAttributeManipulateConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "dstLabel1" value="attribute access"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::ComponentRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::AttributeRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::CommonRiskAssociation" metaref = "4249" >
				<regnode name = "sName" value ="srcCommonRiskAssociation"></regnode>
				<regnode name = "dName" value ="dstCommonRiskAssociation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::RootRiskGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::HostReference"></pointeritem>
					<pointeritem desc = "CQML::NodeGroup"></pointeritem>
					<pointeritem desc = "CQML::SharedRiskGroup"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ComponentAccessConn" metaref = "4250" >
				<regnode name = "sName" value ="srcComponentAccessConn"></regnode>
				<regnode name = "dName" value ="dstComponentAccessConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "dstLabel1" value="accesses component"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::InitiatorRoleRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ComponentRule"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ComponentAssemblyQoS" metaref = "3761" >
				<regnode name = "sName" value ="srcComponentAssemblyQoS"></regnode>
				<regnode name = "dName" value ="dstComponentAssemblyQoS"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ComponentAssemblySecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::ComponentSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
					<pointeritem desc = "CQML::FailOverUnit"></pointeritem>
					<pointeritem desc = "CQML::NetQoS"></pointeritem>
					<pointeritem desc = "CQML::PortSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::QoSCharRef"></pointeritem>
					<pointeritem desc = "CQML::RealTimeConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ComponentQoS" metaref = "3762" >
				<regnode name = "sName" value ="srcComponentQoS"></regnode>
				<regnode name = "dName" value ="dstComponentQoS"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ComponentAssemblySecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::ComponentSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
					<pointeritem desc = "CQML::FailOverUnit"></pointeritem>
					<pointeritem desc = "CQML::NetQoS"></pointeritem>
					<pointeritem desc = "CQML::PortSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::QoSCharRef"></pointeritem>
					<pointeritem desc = "CQML::RealTimeConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ConsumerFilterConnection" metaref = "3973" >
				<regnode name = "sName" value ="srcConsumerFilterConnection"></regnode>
				<regnode name = "dName" value ="dstConsumerFilterConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::EC_Out_Port"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::EventSinkPublish" metaref = "3699" >
				<regnode name = "sName" value ="srcEventSinkPublish"></regnode>
				<regnode name = "dName" value ="dstEventSinkPublish"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "dstLabel1" value="PublishDst"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::EventSourcePublish" metaref = "3700" >
				<regnode name = "sName" value ="srcEventSourcePublish"></regnode>
				<regnode name = "dName" value ="dstEventSourcePublish"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "srcLabel1" value="PublishSrc"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::QoSConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::FTDeployDepends" metaref = "4252" >
				<regnode name = "sName" value ="srcFTDeployDepends"></regnode>
				<regnode name = "dName" value ="dstFTDeployDepends"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "srcLabel1" value="Depends"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::DeploymentPlanRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ReliabilityAssesmentModel"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::FacetInvoke" metaref = "3701" >
				<regnode name = "sName" value ="srcFacetInvoke"></regnode>
				<regnode name = "dName" value ="dstFacetInvoke"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "dstLabel1" value="InvokeDst"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::InEventConnection" metaref = "3976" >
				<regnode name = "sName" value ="srcInEventConnection"></regnode>
				<regnode name = "dName" value ="dstInEventConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::EC_Out_Port"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::Include_EC_Filter_Group" metaref = "3764" >
				<regnode name = "sName" value ="srcInclude_RTEC_Filter_Group"></regnode>
				<regnode name = "dName" value ="dstInclude_RTEC_Filter_Group"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
			</connjoint>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::InterfaceClassificationConn" metaref = "4256" >
				<regnode name = "sName" value ="srcInterfaceClassificationConn"></regnode>
				<regnode name = "dName" value ="dstInterfaceClassificationConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="requires"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Object"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::RequiredRights"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::LanePerThreadPool" metaref = "3766" >
				<regnode name = "sName" value ="srcLanePerThreadPool"></regnode>
				<regnode name = "dName" value ="dstLanePerThreadPool"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::ThreadPool"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::Lanes"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::MonitorableGroupAssociation" metaref = "4257" >
				<regnode name = "sName" value ="srcMonitorable2RepG"></regnode>
				<regnode name = "dName" value ="dstMonitorable2RepG"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::RepicaGroupConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ObjectAccessConn" metaref = "4259" >
				<regnode name = "sName" value ="srcObjectAccessConn"></regnode>
				<regnode name = "dName" value ="dstObjectAccessConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "dstLabel1" value="accesses interface"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::InitiatorRoleRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::PortRule"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OnAssemblyConn" metaref = "4260" >
				<regnode name = "sName" value ="srcOnAssemblyConn"></regnode>
				<regnode name = "dName" value ="dstOnAssemblyConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="allow/deny"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::AssemblyRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OnComponentConn" metaref = "4261" >
				<regnode name = "sName" value ="srcOnComponentConn"></regnode>
				<regnode name = "dName" value ="dstOnComponentConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="allow/deny"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::ComponentRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OnInterfaceConn" metaref = "4262" >
				<regnode name = "sName" value ="srcOnInterfaceConn"></regnode>
				<regnode name = "dName" value ="dstOnInterfaceConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="allow/deny"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::PortRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::TargetObjectRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OperationClassificationConn" metaref = "4263" >
				<regnode name = "sName" value ="srcOperationClassificationConn"></regnode>
				<regnode name = "dName" value ="dstOperationClassificationConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="requires"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::FactoryOperation"></pointeritem>
					<pointeritem desc = "PICML::LookupOperation"></pointeritem>
					<pointeritem desc = "PICML::OnewayOperation"></pointeritem>
					<pointeritem desc = "PICML::TwowayOperation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::RequiredRights"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OperationInvokeConn" metaref = "4264" >
				<regnode name = "sName" value ="srcOperationInvokeConn"></regnode>
				<regnode name = "dName" value ="dstOperationInvokeConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "dstLabel1" value="invokes"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::PortRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::OperationSet"></pointeritem>
					<pointeritem desc = "CQML::RequiredRights"></pointeritem>
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::OutEventConnection" metaref = "3980" >
				<regnode name = "sName" value ="srcOutEventConnection"></regnode>
				<regnode name = "dName" value ="dstOutEventConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EC_In_Port"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::PolicyPerThreadPool" metaref = "3767" >
				<regnode name = "sName" value ="srcPolicyPerThreadPool"></regnode>
				<regnode name = "dName" value ="dstPolicyPerThreadPool"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::PriorityModelPolicy"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ThreadPool"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::PortQoS" metaref = "3735" >
				<regnode name = "sName" value ="srcPortQoS"></regnode>
				<regnode name = "dName" value ="dstPortQoS"></regnode>
				<regnode name = "color" value ="0xf4a460"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ComponentAssemblySecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::ComponentSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
					<pointeritem desc = "CQML::FailOverUnit"></pointeritem>
					<pointeritem desc = "CQML::NetQoS"></pointeritem>
					<pointeritem desc = "CQML::PortSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::QoSCharRef"></pointeritem>
					<pointeritem desc = "CQML::RealTimeConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::ProvidedRequestQoS" metaref = "3768" >
				<regnode name = "sName" value ="srcProvidedRequestQoS"></regnode>
				<regnode name = "dName" value ="dstProvidedRequestQoS"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::ComponentAssemblySecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::ComponentSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
					<pointeritem desc = "CQML::FailOverUnit"></pointeritem>
					<pointeritem desc = "CQML::NetQoS"></pointeritem>
					<pointeritem desc = "CQML::PortSecurityQoS"></pointeritem>
					<pointeritem desc = "CQML::QoSCharRef"></pointeritem>
					<pointeritem desc = "CQML::RealTimeConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::QoSReq" metaref = "3702" >
				<regnode name = "sName" value ="srcQoSReq"></regnode>
				<regnode name = "dName" value ="dstQoSReq"></regnode>
				<regnode name = "color" value ="0xf4a460"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::QoSConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
					<pointeritem desc = "CQML::NetQoS"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::RecepInvoke" metaref = "3703" >
				<regnode name = "sName" value ="srcRecepInvoke"></regnode>
				<regnode name = "dName" value ="dstRecepInvoke"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="InvokeSrc"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::QoSConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::RightsAssignmentConn" metaref = "4265" >
				<regnode name = "sName" value ="srcRightsAssignmentConn"></regnode>
				<regnode name = "dName" value ="dstRightsAssignmentConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "srcLabel1" value="rights assignment"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::Role"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::GrantedRights"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::RoleAssignmentConn" metaref = "4266" >
				<regnode name = "sName" value ="srcRoleAssignmentConn"></regnode>
				<regnode name = "dName" value ="dstRoleAssignmentConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "srcLabel1" value="role assignment"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::Group"></pointeritem>
					<pointeritem desc = "CQML::User"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::Role"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::SecuredPathConn" metaref = "4267" >
				<regnode name = "sName" value ="srcSecuredPathConn"></regnode>
				<regnode name = "dName" value ="dstSecuredPathConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
				<regnode name= "dstLabel1" value="secure"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::AssemblyRule"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::PathRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::SharedRiskAssociation" metaref = "4268" >
				<regnode name = "sName" value ="srcSharedRiskAssociation"></regnode>
				<regnode name = "dName" value ="dstSharedRiskAssociation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::HostReference"></pointeritem>
					<pointeritem desc = "CQML::NodeGroup"></pointeritem>
					<pointeritem desc = "CQML::SharedRiskGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::HostReference"></pointeritem>
					<pointeritem desc = "CQML::NodeGroup"></pointeritem>
					<pointeritem desc = "CQML::SharedRiskGroup"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CQML::SupplierFilterConnection" metaref = "3983" >
				<regnode name = "sName" value ="srcSupplierFilterConnection"></regnode>
				<regnode name = "dName" value ="dstSupplierFilterConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CQML::EC_In_Port"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CQML::EC_Filter_Group"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactDependency" metaref = "1103" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependency"></regnode>
				<regnode name = "dName" value ="dstArtifactDependency"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactDependsOn" metaref = "1104" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
				<regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactDeployRequirement" metaref = "1105" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ECConfiguration"></pointeritem>
					<pointeritem desc = "PICML::RTConfiguration"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactExecParameter" metaref = "1106" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
				<regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactInfoProperty" metaref = "1107" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
				<regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyConfigProperty" metaref = "2849" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
				<regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyDeployRequirement" metaref = "2850" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ECConfiguration"></pointeritem>
					<pointeritem desc = "PICML::RTConfiguration"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyselectRequirement" metaref = "2851" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ECConfiguration"></pointeritem>
					<pointeritem desc = "PICML::RTConfiguration"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeDelegate" metaref = "2852" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeDelegate"></regnode>
				<regnode name = "color" value ="0x408080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ReadonlyAttribute"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeMappingDelegate" metaref = "2853" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingDelegate"></regnode>
				<regnode name = "color" value ="0x008080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeMappingValue" metaref = "2854" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingValue"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingValue"></regnode>
				<regnode name = "color" value ="0x808000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeValue" metaref = "2855" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeValue"></regnode>
				<regnode name = "dName" value ="dstAttributeValue"></regnode>
				<regnode name = "color" value ="0x800080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ReadonlyAttribute"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::BenchmarkCharacteristics" metaref = "1115" >
				<regnode name = "sName" value ="srcBenchmarkCharacteristics"></regnode>
				<regnode name = "dName" value ="dstBenchmarkCharacteristics"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::FixedIterationBenchmarks"></pointeritem>
					<pointeritem desc = "PICML::PeriodicBenchmarks"></pointeritem>
					<pointeritem desc = "PICML::TriggerBenchmarks"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Bridge2Interconnect" metaref = "1116" >
				<regnode name = "sName" value ="srcBridge2Interconnect"></regnode>
				<regnode name = "dName" value ="dstBridge2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Bridge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentConfigProperty" metaref = "1117" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
				<regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentInfoProperty" metaref = "1118" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
				<regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentOperation" metaref = "1119" >
				<regnode name = "labelFormatStr" value ="benchmarks"></regnode>
				<regnode name = "sName" value ="srcComponentOperation"></regnode>
				<regnode name = "dName" value ="dstComponentOperation"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::CompRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentProperty" metaref = "1120" >
				<regnode name = "labelFormatStr" value ="property"></regnode>
				<regnode name = "sName" value ="srcComponentProperty"></regnode>
				<regnode name = "dName" value ="dstComponentProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPropertyDescription"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ConfigProperty" metaref = "1121" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcConfigProperty"></regnode>
				<regnode name = "dName" value ="dstConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Consumer2BehaviorConnection" metaref = "3834" >
				<regnode name = "sName" value ="srcConsumer2BehaviorConnection"></regnode>
				<regnode name = "dName" value ="dstConsumer2BehaviorConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ECConsumer"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::CriticalPath" metaref = "3062" >
				<regnode name = "labelFormatStr" value ="CriticalPath"></regnode>
				<regnode name = "sName" value ="srcCriticalPath"></regnode>
				<regnode name = "dName" value ="dstCriticalPath"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PathReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::DstEdge" metaref = "2094" >
				<regnode name = "sName" value ="srcDstEdge"></regnode>
				<regnode name = "dName" value ="dstDstEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ConnectedComponent"></pointeritem>
					<pointeritem desc = "PICML::DisplayNode"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EdgeProperty" metaref = "3063" >
				<regnode name = "sName" value ="srcPropertyConnector"></regnode>
				<regnode name = "dName" value ="dstPropertyConnector"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Effect" metaref = "4631" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcEffect"></regnode>
				<regnode name = "dName" value ="dstEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Action"></pointeritem>
					<pointeritem desc = "PICML::CompositeAction"></pointeritem>
					<pointeritem desc = "PICML::OutputAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EventSinkDelegate" metaref = "2856" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSinkDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSinkDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EventSourceDelegate" metaref = "2857" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSourceDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSourceDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ExtResourceConn" metaref = "1124" >
				<regnode name = "sName" value ="srcExtResourceConn"></regnode>
				<regnode name = "dName" value ="dstExtResourceConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ExecutorProject"></pointeritem>
					<pointeritem desc = "PICML::ServantProject"></pointeritem>
					<pointeritem desc = "PICML::StubProject"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ExternalResources"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ExternalDelegate" metaref = "2858" >
				<regnode name = "labelFormatStr" value ="references"></regnode>
				<regnode name = "sName" value ="srcExternalDelegate"></regnode>
				<regnode name = "dName" value ="dstExternalDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ExternalReferenceEndPoint"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::FacetDelegate" metaref = "2859" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcFacetDelegate"></regnode>
				<regnode name = "dName" value ="dstFacetDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Finish" metaref = "4632" >
				<regnode name = "sName" value ="srcFinish"></regnode>
				<regnode name = "dName" value ="dstFinish"></regnode>
				<regnode name = "color" value ="0xFF00FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Implementation" metaref = "1127" >
				<regnode name = "labelFormatStr" value ="implementation"></regnode>
				<regnode name = "sName" value ="srcImplementation"></regnode>
				<regnode name = "dName" value ="dstImplementation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentImplementationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ImplementationCapability" metaref = "1128" >
				<regnode name = "labelFormatStr" value ="capability"></regnode>
				<regnode name = "sName" value ="srcImplementationCapability"></regnode>
				<regnode name = "dName" value ="dstImplementationCapability"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Capability"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ImplementationDependsOn" metaref = "1129" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
				<regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationDependency"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Implements" metaref = "1130" >
				<regnode name = "labelFormatStr" value ="implements"></regnode>
				<regnode name = "sName" value ="srcImplements"></regnode>
				<regnode name = "dName" value ="dstImplements"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::InfoProperty" metaref = "1133" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcInfoProperty"></regnode>
				<regnode name = "dName" value ="dstInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Input" metaref = "4633" >
				<regnode name = "sName" value ="srcInput"></regnode>
				<regnode name = "dName" value ="dstInput"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::PeriodicEvent"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::InputEffect" metaref = "4634" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcInputEffect"></regnode>
				<regnode name = "dName" value ="dstInputEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::InstanceMapping" metaref = "1134" >
				<regnode name = "labelFormatStr" value ="runsOn"></regnode>
				<regnode name = "sName" value ="srcInstanceMapping"></regnode>
				<regnode name = "dName" value ="dstInstanceMapping"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::CollocationGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::NodeReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Interconnect2Bridge" metaref = "1135" >
				<regnode name = "sName" value ="srcInterconnect2Bridge"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Bridge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Bridge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Interconnect2Node" metaref = "1136" >
				<regnode name = "sName" value ="srcInterconnect2Node"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Node"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::LabelConnection" metaref = "1137" >
				<regnode name = "sName" value ="srcLabelConnection"></regnode>
				<regnode name = "dName" value ="dstLabelConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Label"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MakeMemberPrivate" metaref = "1138" >
				<regnode name = "sName" value ="srcMakeMemberPrivate"></regnode>
				<regnode name = "dName" value ="dstMakeMemberPrivate"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PrivateFlag"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ManagesComponent" metaref = "1139" >
				<regnode name = "sName" value ="srcManagesComponent"></regnode>
				<regnode name = "dName" value ="dstManagesComponent"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MetricConnection" metaref = "1140" >
				<regnode name = "labelFormatStr" value ="measures"></regnode>
				<regnode name = "sName" value ="srcMetricConnection"></regnode>
				<regnode name = "dName" value ="dstMetricConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithDeployRequirement" metaref = "1141" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationRequirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithExecParameter" metaref = "1142" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
				<regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithprimaryArtifact" metaref = "1143" >
				<regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
				<regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
				<regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MultiInput" metaref = "4635" >
				<regnode name = "sName" value ="srcMultiInput"></regnode>
				<regnode name = "dName" value ="dstMultiInput"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Environment"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Node2Interconnect" metaref = "1144" >
				<regnode name = "sName" value ="srcNode2Interconnect"></regnode>
				<regnode name = "dName" value ="dstNode2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfBasePackage" metaref = "1145" >
				<regnode name = "labelFormatStr" value ="basePackage"></regnode>
				<regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
				<regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfConfigProperty" metaref = "1146" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfReference" metaref = "1147" >
				<regnode name = "labelFormatStr" value ="reference"></regnode>
				<regnode name = "sName" value ="srcPackageConfReference"></regnode>
				<regnode name = "dName" value ="dstPackageConfReference"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPackageReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfSelectRequirement" metaref = "1148" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
				<regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ECConfiguration"></pointeritem>
					<pointeritem desc = "PICML::RTConfiguration"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfSpecializedConfig" metaref = "1149" >
				<regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
				<regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
				<regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfigProperty" metaref = "1150" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageInfoProperty" metaref = "1151" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
				<regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageInterface" metaref = "1152" >
				<regnode name = "labelFormatStr" value ="realizes"></regnode>
				<regnode name = "sName" value ="srcPackageInterface"></regnode>
				<regnode name = "dName" value ="dstPackageInterface"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PathProperty" metaref = "3064" >
				<regnode name = "labelFormatStr" value ="pathProperty"></regnode>
				<regnode name = "sName" value ="srcPathProperty"></regnode>
				<regnode name = "dName" value ="dstPathProperty"></regnode>
				<regnode name = "color" value ="0x00F000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Path"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ReceptacleDelegate" metaref = "2860" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcReceptacleDelegate"></regnode>
				<regnode name = "dName" value ="dstReceptacleDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::RecursiveFilterConnection" metaref = "3835" >
				<regnode name = "sName" value ="srcRecursiveFilterConnection"></regnode>
				<regnode name = "dName" value ="dstRecursiveFilterConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ECEventFilterConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ECEventFilterConfiguration"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Shares" metaref = "1155" >
				<regnode name = "labelFormatStr" value ="shares"></regnode>
				<regnode name = "sName" value ="srcShares"></regnode>
				<regnode name = "dName" value ="dstShares"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::SharedResource"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::SrcEdge" metaref = "2101" >
				<regnode name = "sName" value ="srcSrcEdge"></regnode>
				<regnode name = "dName" value ="dstSrcEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ConnectedComponent"></pointeritem>
					<pointeritem desc = "PICML::DisplayNode"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Supplier2FilterConnection" metaref = "3836" >
				<regnode name = "sName" value ="srcSupplier2FilterConnection"></regnode>
				<regnode name = "dName" value ="dstSupplier2FilterConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::TimerConnection" metaref = "1156" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerConnection"></regnode>
				<regnode name = "dName" value ="dstTimerConnection"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::TimerEventSinkConn" metaref = "1157" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerEventSinkConn"></regnode>
				<regnode name = "dName" value ="dstTimerEventSinkConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::EventRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Transition" metaref = "4636" attributes = "Precondition" >
				<regnode name = "sName" value ="srcInternalPrecondition"></regnode>
				<regnode name = "dName" value ="dstInternalPrecondition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Action"></pointeritem>
					<pointeritem desc = "PICML::CompositeAction"></pointeritem>
					<pointeritem desc = "PICML::OutputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::WorkLoadOperationConnection" metaref = "1160" >
				<regnode name = "sName" value ="srcWorkLoadOperationConnection"></regnode>
				<regnode name = "dName" value ="dstWorkLoadOperationConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Task"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::WorkloadCharacteristics" metaref = "1161" >
				<regnode name = "sName" value ="srcWorkloadCharacteristics"></regnode>
				<regnode name = "dName" value ="dstWorkloadCharacteristics"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TaskSet"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::deliverTo" metaref = "2861" >
				<regnode name = "labelFormatStr" value ="deliverTo"></regnode>
				<regnode name = "sName" value ="srcdeliverTo"></regnode>
				<regnode name = "dName" value ="dstdeliverTo"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::emit" metaref = "2862" >
				<regnode name = "labelFormatStr" value ="emits"></regnode>
				<regnode name = "sName" value ="srcemit"></regnode>
				<regnode name = "dName" value ="dstemit"></regnode>
				<regnode name = "color" value ="0x8F0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::invoke" metaref = "2863" >
				<regnode name = "labelFormatStr" value ="invokes"></regnode>
				<regnode name = "sName" value ="srcinvoke"></regnode>
				<regnode name = "dName" value ="dstinvoke"></regnode>
				<regnode name = "color" value ="0x00008F"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::package" metaref = "1165" >
				<regnode name = "labelFormatStr" value ="package"></regnode>
				<regnode name = "sName" value ="srcpackage"></regnode>
				<regnode name = "dName" value ="dstpackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::TopLevelPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PackageConfigurationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::publish" metaref = "2864" >
				<regnode name = "labelFormatStr" value ="publish"></regnode>
				<regnode name = "sName" value ="srcpublish"></regnode>
				<regnode name = "dName" value ="dstpublish"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<reference name = "CQML::AssemblyRuleRef" metaref = "4270">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAssemblyRuleRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CQML::AssemblyRule"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::AttributeRef" metaref = "4271">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Attribute"></pointeritem>
				<pointeritem desc = "PICML::ReadonlyAttribute"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::ComponentRuleRef" metaref = "4272">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentRuleRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CQML::ComponentRule"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::DeploymentPlanRef" metaref = "4273">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDeploymentPlanReference"></regnode>
			<constraint name="NoNullReference_DepPlan" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A null deployment plan reference is not allowed.</dispname>
			</constraint>
			<constraint name="ValidCQML__FTDeployDependsdstCardinality20" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::FTDeployDepends ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::DeploymentPlanRef as &quot;dst&quot; over CQML::FTDeployDepends, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="DeploymentPlan.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::DeploymentPlan"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::HostReference" metaref = "4274" attributes = "Metric">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyHostReference"></regnode>
			<constraint name="ValidCQML__CommonRiskAssociationsrcCardinality5" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::CommonRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::CommonRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__SharedRiskAssociationsrcCardinality63" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::SharedRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::SharedRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::InitiatorRoleRef" metaref = "4275">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInitiatorRoleRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CQML::Role"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::PathRef" metaref = "4276">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPathRef"></regnode>
			<constraint name="PathNotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Path reference should point to an existing Critical Path</dispname>
			</constraint>
			<regnode name = "icon" value ="critical_path_ref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Path"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::PortRuleRef" metaref = "4277">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPortRuleRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CQML::PortRule"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::QoSCharRef" metaref = "3771">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyQoSCharRef"></regnode>
			<constraint name="NoNullQoSCharReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null References to QoS charcteristics is not allowed.</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "CQML::ComponentAssemblySecurityQoS"></pointeritem>
				<pointeritem desc = "CQML::ComponentSecurityQoS"></pointeritem>
				<pointeritem desc = "CQML::EventChannelConfiguration"></pointeritem>
				<pointeritem desc = "CQML::FailOverUnit"></pointeritem>
				<pointeritem desc = "CQML::NetQoS"></pointeritem>
				<pointeritem desc = "CQML::PortSecurityQoS"></pointeritem>
				<pointeritem desc = "CQML::RealTimeConfiguration"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::SharedResourceReference" metaref = "4278">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedResourceReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::SharedResource"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CQML::TargetObjectRef" metaref = "4279">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyTargetObjectRef"></regnode>
			<constraint name="InterfaceNotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Object reference should point to an existing object</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Alias" metaref = "1167" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAlias"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="alias.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::AttributeMapping" metaref = "2865">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMapping"></regnode>
			<constraint name="MatchingAttributeMappingDelegateType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let myAttr : Model = self.refersTo() in
let attrs = myAttr.referenceParts(AttributeMember) in
let delegates = self.connectedFCOs(AttributeMappingDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate values to AttributeMappings of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let attr: Model = self.refersTo() in
let attrType = attr.referenceParts(AttributeMember) in
let props = self.connectedFCOs(AttributeMappingValue) in
    attrType->forAll (myType : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         myType.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate property values to attributes of the same type</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeMappingValue)->size() <= 1]]>
				<dispname>An AttributeMapping can only have a single Property value associated with it.</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeMappingDelegatesrcCardinality85" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::AttributeMappingDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::AttributeMapping as &quot;src&quot; over PICML::AttributeMappingDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeMappingValuedstCardinality88" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::AttributeMappingValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::AttributeMapping as &quot;dst&quot; over PICML::AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(AttributeMappingDelegate)->forAll (x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>An AttributeMapping of an assembly can only be delegated to an AttributeMapping in a different assembly</dispname>
			</constraint>
			<regnode name = "icon" value ="AttributeMapping.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Attribute"></pointeritem>
				<pointeritem desc = "PICML::ReadonlyAttribute"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::AttributeMember" metaref = "1169">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMember"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Boxed" metaref = "1170" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBoxed"></regnode>
			<constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let boxedref = refersTo () in
          boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
				<dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="boxed.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Collection" metaref = "1171" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCollection"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="variablecollection.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::CompRef" metaref = "1172">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCompRef"></regnode>
			<constraint name="ValidPICML__ComponentOperationsrcCardinality99" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::ComponentOperation ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::CompRef as &quot;src&quot; over PICML::ComponentOperation, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentAssemblyReference" metaref = "1173">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentAssemblyReference"></regnode>
			<constraint name="AssemblyNotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Assembly reference should point to an existing assembly.</dispname>
			</constraint>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NoNullAssemblyReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>The reference can&apos;t be null.</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="ValidCQML__MonitorableGroupAssociationdstCardinality32" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::MonitorableGroupAssociation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::FTMonitorable as &quot;dst&quot; over CQML::MonitorableGroupAssociation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentImplementationReference" metaref = "1174">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
				<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentPackageReference" metaref = "1175" attributes = "requiredType requiredUUID requiredName">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ComponentImplementationReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentRef" metaref = "1176">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentRef"></regnode>
			<constraint name="ComponentNotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Component reference should point to an existing component</dispname>
			</constraint>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NoNullComponentReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>The reference can&apos;t be null.</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidCQML__MonitorableGroupAssociationdstCardinality32" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::MonitorableGroupAssociation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::FTMonitorable as &quot;dst&quot; over CQML::MonitorableGroupAssociation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ImplementssrcCardinality133" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Implements ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentRef as &quot;src&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageInterfacesrcCardinality179" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::PackageInterface ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentRef as &quot;src&quot; over PICML::PackageInterface, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Constant" metaref = "1177" attributes = "VersionTag SpecifyIdTag value">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConstant"></regnode>
			<constraint name="LegalConstantType" eventmask = "0x400" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let x = refersTo () in
          x.isTypeOf (String) or
          x.isTypeOf (LongInteger) or
          x.isTypeOf (Enum) or
          x.isTypeOf (ShortInteger) or
          x.isTypeOf (RealNumber) or
          x.isTypeOf (Byte) or
          x.isTypeOf (Boolean)]]>
				<dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
			</constraint>
			<constraint name="LegalConstantValue" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let x = refersTo () in
    let y = value.toInteger () in
          (x.isTypeOf (Boolean) implies ((y = 0 or y = 1) or (let z = value.trim ().toUpper () in z = "TRUE" or z = "FALSE"))) and
          (x.isTypeOf (Byte) implies (y >= 0 and y < 256)) and
          (x.isTypeOf (ShortInteger) implies (y > -32769 and y < 32768)) and
          (x.isTypeOf (LongInteger) implies (value.toReal () >= -2147483648 and value.toReal () <= 2147483647)) and
          (x.isTypeOf (RealNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
          (x.isTypeOf (Enum) implies x.oclAsType (gme::Model).parts ()->collect (w : gme::FCO | w.name)->exists (z : ocl::String | z = value.trim ()))]]>
				<dispname>Constant&apos;s value does not match type or is out of range</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="value" metaref = "4976" valuetype = "string" defvalue = "">
			</attrdef>
			<regnode name = "icon" value ="const.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::DataType" metaref = "1179">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDataType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>DataType should reference a PredefinedType and cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="DataType.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Discriminator" metaref = "1180">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDiscriminator"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<regnode name = "icon" value ="discriminator.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::EventRef" metaref = "1181">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyEventRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="eventref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ExceptionRef" metaref = "1182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExceptionRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="exceptionref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ExternalResources" metaref = "1183">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExternalResources"></regnode>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::FileRef" metaref = "1184">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyFileRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="fileref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::File"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::GetException" metaref = "1185">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyGetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="getexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ImplementationArtifactReference" metaref = "1186">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InEventPort" metaref = "1187" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInEventPort"></regnode>
			<constraint name="MatchingEventSink" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(EventSinkDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>An InEventPort can only be delegated to another InEventPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent())]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__InputdstCardinality138" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::SingleInputBase as &quot;dst&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(EventSinkDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only InEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="ineventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InParameter" metaref = "1188">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="in.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Inherits" metaref = "1189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInherits"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InoutParameter" metaref = "1190">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInoutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inout.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::LookupKey" metaref = "1191">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyLookupKey"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="lookupkey.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Member" metaref = "1192">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMember"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ParentNameClash" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[name <> parent ().name]]>
				<dispname>A member may not have the same name as its container.</dispname>
			</constraint>
			<constraint name="ValidPICML__MakeMemberPrivatedstCardinality150" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Member as &quot;dst&quot; over PICML::MakeMemberPrivate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::NodeReference" metaref = "1193">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyNodeReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>NodeReference cannot be null</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OperationRef" metaref = "1194">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOperationRef"></regnode>
			<constraint name="MethodNotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Operation reference should point to an existing operation</dispname>
			</constraint>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentOperationdstCardinality100" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::ComponentOperation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::ComponentOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__MetricConnectiondstCardinality154" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::MetricConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::MetricConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TimerConnectiondstCardinality194" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::TimerConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__WorkLoadOperationConnectiondstCardinality200" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::WorkLoadOperationConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="operationref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::FactoryOperation"></pointeritem>
				<pointeritem desc = "PICML::LookupOperation"></pointeritem>
				<pointeritem desc = "PICML::OnewayOperation"></pointeritem>
				<pointeritem desc = "PICML::TwowayOperation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OutEventPort" metaref = "1195" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider single_destination out_event_port_type">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutEventPort"></regnode>
			<constraint name="MatchingEmitConsumer" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(emit)  in
 consumers->forAll ( i : InEventPort | 
     let supertypes = self.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         supertypes->one (k: gme::FCO | k.name() = i.refersTo().name())
     or self.refersTo().name() = i.refersTo().name()
)]]>
				<dispname>An OutEventPort should be connected to an InEventPort of the same type, or the OutEventPort should be a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="MatchingEventDelegate" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let publishers = self.connectedFCOs(EventSourceDelegate)  in
 publishers->forAll ( i : OutEventPort |  self.refersTo().name() = i.refersTo().name() 
                              and
                              self.single_destination = i.single_destination)]]>
				<dispname>An OutEventPort can only be delegated to another OutEventPort of the same type and should have consistent values for single_destination attribute</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="SingleConsumer" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(emit)->size() <= 1]]>
				<dispname>Every OutEventPort can emit events to only one InEventPort</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort only when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidEventConnection" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[if self.single_destination
then
     self.attachingConnections(publish)->size() = 0
else
     self.attachingConnections(emit)->size() = 0
endif
]]>
				<dispname>The type of an OutEventPort&apos;s connections  must agree with the value of its single_destination attribute.</dispname>
			</constraint>
			<constraint name="ValidEventSourcePublishConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let connectors = self.connectedFCOs (EventSourcePublish) in
     connectors->forAll ( c1, c2 |  c1 <> c2 => c1.parent() <> c2.parent() )]]>
				<dispname>An OutEventPort can only be connected to multiple QoSConnectors  when shared between a ComponentAssembly/Component and it&apos;s reference.</dispname>
			</constraint>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__emitdstCardinality206" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::emit ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OutEventPort as &quot;dst&quot; over PICML::emit, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(EventSourceDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only OutEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidPublishConnection" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let connectors = self.connectedFCOs (publish) in
     connectors->forAll ( c1, c2 |  c1 <> c2 => c1.parent() <> c2.parent() )]]>
				<dispname>An OutEventPort can only be connected to multiple PublishConnectors  when shared between a ComponentAssembly/Component and it&apos;s reference.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="single_destination" metaref = "4977" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OutParameter" metaref = "1197">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="out.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::PackageConfigurationReference" metaref = "1198">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>PackageConfigurationReference cannot be null</dispname>
			</constraint>
			<constraint name="ValidPICML__packagesrcCardinality209" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::package ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfigurationReference as &quot;src&quot; over PICML::package, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::PathReference" metaref = "3065">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPathReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<constraint name="ValidPICML__CriticalPathsrcCardinality107" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::CriticalPath ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PathReference as &quot;src&quot; over PICML::CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Path"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ProvidedRequestPort" metaref = "1199" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyProvidedRequestPort"></regnode>
			<constraint name="MatchingFacet" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(FacetDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>A ProvidedRequestPort can only be delegated to another ProvidedRequestPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, a ProvidedRequestPort can only be connected to a RequiredRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(FacetDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only ProvidedRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="providedrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::RequiredRequestPort" metaref = "1201" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider multiple_connections">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRequiredRequestPort"></regnode>
			<constraint name="MatchingProvidedRequestPort" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let facets = self.connectedFCOs(invoke) in
  facets->forAll ( i : ProvidedRequestPort | 
     let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         (supertypes->one (k: gme::FCO | k.name() = self.refersTo().name())
             or self.refersTo().name() = i.refersTo().name() )
         
)]]>
				<dispname>A RequiredRequestPort should be connected to a ProvidedRequestPort of the same type, or the RequiredRequestPort should be a supertype of ProvidedRequestPort</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an RequiredRequestPort can only be connected to an ProvidedRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.connectedFCOs(ReceptacleDelegate)->forAll (x | x.parent()  = self.parent() implies x <> self)]]>
				<dispname>Only RequiredRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidRecepInvokeConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.multiple_connections => self.attachingConnections(RecepInvoke)->size() <= 1]]>
				<dispname>A RequiredRequestPort can be connected to multiple QoSConnectors only if its multiple_connections attribute is true.</dispname>
			</constraint>
			<constraint name="ValidReceptacleConnection" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.multiple_connections => self.attachingConnections(invoke)->size() <= 1
]]>
				<dispname>A RequiredRequestPort can be connected to multiple ProvidedRequestPorts only if its multiple_connections attribute is true.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="multiple_connections" metaref = "4978" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ReturnType" metaref = "1203">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyReturnType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="return.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SetException" metaref = "1204">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="setexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SharedComponentReference" metaref = "3182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedComponentReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentRef"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Supports" metaref = "1205">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySupports"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="supports.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Variable" metaref = "4637">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyVariable"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined variable (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::WorkerType" metaref = "4638">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyWorkerType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined type (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="workerref.gif"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Worker"></pointeritem>
			</pointerspec>
		</reference>
		<model name = "CQML::ComponentAssemblySecurityQoS" metaref = "4343" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="assembly_qos.bmp"></regnode>
			<constraint name="AssemblySecQoSHasValidRules" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Assembly Secuirty QoS must have atleast one rule pertaining with its associated Target Assembly</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::AssemblyRuleRef" metaref = "4640" kind = "CQML::AssemblyRuleRef"></role>
			<role name = "CQML::PortRuleRef" metaref = "4641" kind = "CQML::PortRuleRef"></role>
			<aspect name = "QoS" metaref = "4642" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<part metaref = "4643" role = "CQML::AssemblyRuleRef" primary = "yes" linked = "no"></part>
				<part metaref = "4644" role = "CQML::PortRuleRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::ComponentSecurityQoS" metaref = "4358" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component_qos.bmp"></regnode>
			<constraint name="ComponentSecQoSHasValidRules" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Component Security QoS must have atleast one rule pertaining with its associated Target Component .</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::ComponentRuleRef" metaref = "4645" kind = "CQML::ComponentRuleRef"></role>
			<role name = "CQML::PortRuleRef" metaref = "4646" kind = "CQML::PortRuleRef"></role>
			<aspect name = "QoS" metaref = "4647" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<part metaref = "4648" role = "CQML::ComponentRuleRef" primary = "yes" linked = "no"></part>
				<part metaref = "4649" role = "CQML::PortRuleRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::EC_In_Port" metaref = "4094" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rtec_proxy_supplier.bmp"></regnode>
			<role name = "CQML::RTEC_Factory_Supplier_Behavior" metaref = "4650" kind = "CQML::RTEC_Factory_Supplier_Behavior"></role>
			<role name = "CQML::RT_Info" metaref = "4651" kind = "CQML::RT_Info"></role>
			<aspect name = "QoS" metaref = "4652" >
				<part metaref = "4653" role = "CQML::RTEC_Factory_Supplier_Behavior" primary = "yes" linked = "no"></part>
				<part metaref = "4654" role = "CQML::RT_Info" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::EC_Out_Port" metaref = "4100" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rtec_proxy_consumer.bmp"></regnode>
			<role name = "CQML::RTEC_Factory_Consumer_Behavior" metaref = "4655" kind = "CQML::RTEC_Factory_Consumer_Behavior"></role>
			<role name = "CQML::RT_Info" metaref = "4656" kind = "CQML::RT_Info"></role>
			<aspect name = "QoS" metaref = "4657" >
				<part metaref = "4658" role = "CQML::RTEC_Factory_Consumer_Behavior" primary = "yes" linked = "no"></part>
				<part metaref = "4659" role = "CQML::RT_Info" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::EventChannelConfiguration" metaref = "4399" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidECQoSCharacteristicAssociation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(QoSReq)->size() = 0
and
self.connectedFCOs(ComponentQoS)->size() = 0]]>
				<dispname>Can not connect to different QoSCharacteristic type</dispname>
			</constraint>
			<role name = "CQML::ConsumerFilterConnection" metaref = "4660" kind = "CQML::ConsumerFilterConnection"></role>
			<role name = "CQML::EC_Filter_Group" metaref = "4661" kind = "CQML::EC_Filter_Group"></role>
			<role name = "CQML::EC_In_Port" metaref = "4662" kind = "CQML::EC_In_Port"></role>
			<role name = "CQML::EC_Out_Port" metaref = "4663" kind = "CQML::EC_Out_Port"></role>
			<role name = "CQML::InEventConnection" metaref = "4664" kind = "CQML::InEventConnection"></role>
			<role name = "CQML::Include_EC_Filter_Group" metaref = "4665" kind = "CQML::Include_EC_Filter_Group"></role>
			<role name = "CQML::OutEventConnection" metaref = "4666" kind = "CQML::OutEventConnection"></role>
			<role name = "CQML::RTEC_Factory_Behavior" metaref = "4667" kind = "CQML::RTEC_Factory_Behavior"></role>
			<role name = "CQML::SupplierFilterConnection" metaref = "4668" kind = "CQML::SupplierFilterConnection"></role>
			<aspect name = "QoS" metaref = "4669" >
				<part metaref = "4670" role = "CQML::ConsumerFilterConnection" primary = "yes" linked = "no"></part>
				<part metaref = "4671" role = "CQML::EC_Filter_Group" primary = "yes" linked = "no"></part>
				<part metaref = "4672" role = "CQML::EC_In_Port" primary = "yes" linked = "yes"></part>
				<part metaref = "4673" role = "CQML::EC_Out_Port" primary = "yes" linked = "yes"></part>
				<part metaref = "4674" role = "CQML::InEventConnection" primary = "yes" linked = "no"></part>
				<part metaref = "4675" role = "CQML::Include_EC_Filter_Group" primary = "yes" linked = "no"></part>
				<part metaref = "4676" role = "CQML::OutEventConnection" primary = "yes" linked = "no"></part>
				<part metaref = "4677" role = "CQML::RTEC_Factory_Behavior" primary = "yes" linked = "no"></part>
				<part metaref = "4678" role = "CQML::SupplierFilterConnection" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::FailOverUnit" metaref = "4411" attributes = "Replica" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="FOU.bmp"></regnode>
			<constraint name="NotEmpty" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts().size() > 0]]>
				<dispname>FailOverUnit can&apos;t be empty.</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::MonitorableGroupAssociation" metaref = "4679" kind = "CQML::MonitorableGroupAssociation"></role>
			<role name = "CQML::RepicaGroupConfiguration" metaref = "4680" kind = "CQML::RepicaGroupConfiguration"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "4979" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentRef" metaref = "4980" kind = "PICML::ComponentRef"></role>
			<aspect name = "QoS" metaref = "4683" attributes = "Replica" >
				<part metaref = "4684" role = "CQML::MonitorableGroupAssociation" primary = "yes" linked = "no"></part>
				<part metaref = "4685" role = "CQML::RepicaGroupConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "4981" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "4982" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::FaultTolerance" metaref = "4419" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "CQML::DeploymentPlanRef" metaref = "4688" kind = "CQML::DeploymentPlanRef"></role>
			<role name = "CQML::FTDeployDepends" metaref = "4689" kind = "CQML::FTDeployDepends"></role>
			<role name = "CQML::ReliabilityAssesmentModel" metaref = "4690" kind = "CQML::ReliabilityAssesmentModel"></role>
			<aspect name = "QoS" metaref = "4691" >
				<part metaref = "4692" role = "CQML::DeploymentPlanRef" primary = "yes" linked = "no"></part>
				<part metaref = "4693" role = "CQML::FTDeployDepends" primary = "yes" linked = "no"></part>
				<part metaref = "4694" role = "CQML::ReliabilityAssesmentModel" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::Group" metaref = "4427" attributes = "principal" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="group.bmp"></regnode>
			<attrdef name="principal" metaref = "4695" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "CQML::Group" metaref = "4696" kind = "CQML::Group"></role>
			<role name = "CQML::User" metaref = "4697" kind = "CQML::User"></role>
			<aspect name = "QoS" metaref = "4698" attributes = "principal" >
				<part metaref = "4699" role = "CQML::Group" primary = "yes" linked = "no"></part>
				<part metaref = "4700" role = "CQML::User" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::NodeGroup" metaref = "4435" attributes = "Metric" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="NodeGroup.bmp"></regnode>
			<constraint name="ValidCQML__CommonRiskAssociationsrcCardinality5" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::CommonRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::CommonRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__SharedRiskAssociationsrcCardinality63" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::SharedRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::SharedRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::HostReference" metaref = "4701" kind = "CQML::HostReference"></role>
			<role name = "CQML::SharedResourceReference" metaref = "4702" kind = "CQML::SharedResourceReference"></role>
			<aspect name = "QoS" metaref = "4703" attributes = "Metric" >
				<part metaref = "4704" role = "CQML::HostReference" primary = "yes" linked = "no"></part>
				<part metaref = "4705" role = "CQML::SharedResourceReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::OperationSet" metaref = "4448" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="operation_set.bmp"></regnode>
			<role name = "PICML::OperationRef" metaref = "4983" kind = "PICML::OperationRef"></role>
			<aspect name = "QoS" metaref = "4707" >
				<part metaref = "4984" role = "PICML::OperationRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::Policy" metaref = "4461" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="security_policy.bmp"></regnode>
			<role name = "CQML::AssemblyAccessConn" metaref = "4709" kind = "CQML::AssemblyAccessConn"></role>
			<role name = "CQML::AssemblyRule" metaref = "4710" kind = "CQML::AssemblyRule"></role>
			<role name = "CQML::AttributeManipulateConn" metaref = "4711" kind = "CQML::AttributeManipulateConn"></role>
			<role name = "CQML::AttributeRef" metaref = "4712" kind = "CQML::AttributeRef"></role>
			<role name = "CQML::ComponentAccessConn" metaref = "4713" kind = "CQML::ComponentAccessConn"></role>
			<role name = "CQML::ComponentRule" metaref = "4714" kind = "CQML::ComponentRule"></role>
			<role name = "CQML::InitiatorRoleRef" metaref = "4715" kind = "CQML::InitiatorRoleRef"></role>
			<role name = "CQML::ObjectAccessConn" metaref = "4716" kind = "CQML::ObjectAccessConn"></role>
			<role name = "CQML::OnAssemblyConn" metaref = "4717" kind = "CQML::OnAssemblyConn"></role>
			<role name = "CQML::OnComponentConn" metaref = "4718" kind = "CQML::OnComponentConn"></role>
			<role name = "CQML::OnInterfaceConn" metaref = "4719" kind = "CQML::OnInterfaceConn"></role>
			<role name = "CQML::OperationInvokeConn" metaref = "4720" kind = "CQML::OperationInvokeConn"></role>
			<role name = "CQML::OperationSet" metaref = "4721" kind = "CQML::OperationSet"></role>
			<role name = "CQML::PathRef" metaref = "4722" kind = "CQML::PathRef"></role>
			<role name = "CQML::PortRule" metaref = "4723" kind = "CQML::PortRule"></role>
			<role name = "CQML::RequiredRights" metaref = "4724" kind = "CQML::RequiredRights"></role>
			<role name = "CQML::SecuredPathConn" metaref = "4725" kind = "CQML::SecuredPathConn"></role>
			<role name = "CQML::TargetObjectRef" metaref = "4726" kind = "CQML::TargetObjectRef"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "4985" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentRef" metaref = "4986" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::OperationRef" metaref = "4987" kind = "PICML::OperationRef"></role>
			<aspect name = "QoS" metaref = "4730" >
				<part metaref = "4731" role = "CQML::AssemblyAccessConn" primary = "yes" linked = "no"></part>
				<part metaref = "4732" role = "CQML::AssemblyRule" primary = "yes" linked = "no"></part>
				<part metaref = "4733" role = "CQML::AttributeManipulateConn" primary = "yes" linked = "no"></part>
				<part metaref = "4734" role = "CQML::AttributeRef" primary = "yes" linked = "no"></part>
				<part metaref = "4735" role = "CQML::ComponentAccessConn" primary = "yes" linked = "no"></part>
				<part metaref = "4736" role = "CQML::ComponentRule" primary = "yes" linked = "no"></part>
				<part metaref = "4737" role = "CQML::InitiatorRoleRef" primary = "yes" linked = "no"></part>
				<part metaref = "4738" role = "CQML::ObjectAccessConn" primary = "yes" linked = "no"></part>
				<part metaref = "4739" role = "CQML::OnAssemblyConn" primary = "yes" linked = "no"></part>
				<part metaref = "4740" role = "CQML::OnComponentConn" primary = "yes" linked = "no"></part>
				<part metaref = "4741" role = "CQML::OnInterfaceConn" primary = "yes" linked = "no"></part>
				<part metaref = "4742" role = "CQML::OperationInvokeConn" primary = "yes" linked = "no"></part>
				<part metaref = "4743" role = "CQML::OperationSet" primary = "yes" linked = "no"></part>
				<part metaref = "4744" role = "CQML::PathRef" primary = "yes" linked = "no"></part>
				<part metaref = "4745" role = "CQML::PortRule" primary = "yes" linked = "no"></part>
				<part metaref = "4746" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "4747" role = "CQML::SecuredPathConn" primary = "yes" linked = "no"></part>
				<part metaref = "4748" role = "CQML::TargetObjectRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "4988" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "4989" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "4990" role = "PICML::OperationRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::PolicySet" metaref = "4505" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="policy_set.bmp"></regnode>
			<role name = "CQML::Policy" metaref = "4752" kind = "CQML::Policy"></role>
			<aspect name = "QoS" metaref = "4753" >
				<part metaref = "4754" role = "CQML::Policy" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::PortSecurityQoS" metaref = "4509" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="port_qos.bmp"></regnode>
			<constraint name="PortSecQoSHasValidRules" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Port Security QoS must have atleast one rule pertaining with its associated Target</dispname>
			</constraint>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::PortRuleRef" metaref = "4755" kind = "CQML::PortRuleRef"></role>
			<aspect name = "QoS" metaref = "4756" attributes = "Authentication DelegationPolicy IntegrityLevel AuditLevel ConfidentialityLevel SecurityLevel SecurityPolicy NonRepudiation" >
				<part metaref = "4757" role = "CQML::PortRuleRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::RBAC" metaref = "4513" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rbac.bmp"></regnode>
			<role name = "CQML::GrantedRights" metaref = "4758" kind = "CQML::GrantedRights"></role>
			<role name = "CQML::Group" metaref = "4759" kind = "CQML::Group"></role>
			<role name = "CQML::RightsAssignmentConn" metaref = "4760" kind = "CQML::RightsAssignmentConn"></role>
			<role name = "CQML::Role" metaref = "4761" kind = "CQML::Role"></role>
			<role name = "CQML::RoleAssignmentConn" metaref = "4762" kind = "CQML::RoleAssignmentConn"></role>
			<role name = "CQML::SecurityDomain" metaref = "4763" kind = "CQML::SecurityDomain"></role>
			<role name = "CQML::User" metaref = "4764" kind = "CQML::User"></role>
			<aspect name = "QoS" metaref = "4765" >
				<part metaref = "4766" role = "CQML::GrantedRights" primary = "yes" linked = "no"></part>
				<part metaref = "4767" role = "CQML::Group" primary = "yes" linked = "no"></part>
				<part metaref = "4768" role = "CQML::RightsAssignmentConn" primary = "yes" linked = "no"></part>
				<part metaref = "4769" role = "CQML::Role" primary = "yes" linked = "no"></part>
				<part metaref = "4770" role = "CQML::RoleAssignmentConn" primary = "yes" linked = "no"></part>
				<part metaref = "4771" role = "CQML::SecurityDomain" primary = "yes" linked = "no"></part>
				<part metaref = "4772" role = "CQML::User" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::RealTimeConfiguration" metaref = "4529" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidCQML__ProvidedRequestQoSsrcCardinality51" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::ProvidedRequestQoS ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::QoSCharacteristicBase as &quot;src&quot; over CQML::ProvidedRequestQoS, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__RealTimeConfigurationPartCardinality213" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "CQML::PriorityModelPolicy" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by CQML::RealTimeConfiguration, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__RealTimeConfigurationPartCardinality214" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "CQML::EnvironmentConf" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by CQML::RealTimeConfiguration, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidRTQoSCharacteristicAssociation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(QoSReq)->size() = 0
and
self.connectedFCOs(PortQoS)->size() = 0]]>
				<dispname>Can not connect to different QoSCharacteristic type</dispname>
			</constraint>
			<role name = "CQML::BandedConnection" metaref = "4773" kind = "CQML::BandedConnection"></role>
			<role name = "CQML::EnvironmentConf" metaref = "4774" kind = "CQML::EnvironmentConf"></role>
			<role name = "CQML::LanePerThreadPool" metaref = "4775" kind = "CQML::LanePerThreadPool"></role>
			<role name = "CQML::Lanes" metaref = "4776" kind = "CQML::Lanes"></role>
			<role name = "CQML::PolicyPerThreadPool" metaref = "4777" kind = "CQML::PolicyPerThreadPool"></role>
			<role name = "CQML::PriorityModelPolicy" metaref = "4778" kind = "CQML::PriorityModelPolicy"></role>
			<role name = "CQML::ThreadPool" metaref = "4779" kind = "CQML::ThreadPool"></role>
			<aspect name = "QoS" metaref = "4780" >
				<part metaref = "4781" role = "CQML::BandedConnection" primary = "yes" linked = "no"></part>
				<part metaref = "4782" role = "CQML::EnvironmentConf" primary = "yes" linked = "no"></part>
				<part metaref = "4783" role = "CQML::LanePerThreadPool" primary = "yes" linked = "no"></part>
				<part metaref = "4784" role = "CQML::Lanes" primary = "yes" linked = "no"></part>
				<part metaref = "4785" role = "CQML::PolicyPerThreadPool" primary = "yes" linked = "no"></part>
				<part metaref = "4786" role = "CQML::PriorityModelPolicy" primary = "yes" linked = "no"></part>
				<part metaref = "4787" role = "CQML::ThreadPool" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::Realm" metaref = "4545" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="realm.bmp"></regnode>
			<role name = "CQML::Role" metaref = "4788" kind = "CQML::Role"></role>
			<aspect name = "QoS" metaref = "4789" >
				<part metaref = "4790" role = "CQML::Role" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::ReliabilityAssesmentModel" metaref = "4549" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="TargetReliabilityModel.bmp"></regnode>
			<constraint name="ValidCQML__ReliabilityAssesmentModelPartCardinality215" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "CQML::RootRiskGroup" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by CQML::ReliabilityAssesmentModel, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::CommonRiskAssociation" metaref = "4791" kind = "CQML::CommonRiskAssociation"></role>
			<role name = "CQML::HostReference" metaref = "4792" kind = "CQML::HostReference"></role>
			<role name = "CQML::NodeGroup" metaref = "4793" kind = "CQML::NodeGroup"></role>
			<role name = "CQML::RootRiskGroup" metaref = "4794" kind = "CQML::RootRiskGroup"></role>
			<role name = "CQML::SharedRiskAssociation" metaref = "4795" kind = "CQML::SharedRiskAssociation"></role>
			<role name = "CQML::SharedRiskGroup" metaref = "4796" kind = "CQML::SharedRiskGroup"></role>
			<aspect name = "QoS" metaref = "4797" >
				<part metaref = "4798" role = "CQML::CommonRiskAssociation" primary = "yes" linked = "no"></part>
				<part metaref = "4799" role = "CQML::HostReference" primary = "yes" linked = "no"></part>
				<part metaref = "4800" role = "CQML::NodeGroup" primary = "yes" linked = "no"></part>
				<part metaref = "4801" role = "CQML::RootRiskGroup" primary = "yes" linked = "no"></part>
				<part metaref = "4802" role = "CQML::SharedRiskAssociation" primary = "yes" linked = "no"></part>
				<part metaref = "4803" role = "CQML::SharedRiskGroup" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::RepicaGroupConfiguration" metaref = "4563" attributes = "ReplicationStyle" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="RPG.bmp"></regnode>
			<constraint name="ValidCQML__MonitorableGroupAssociationsrcCardinality31" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::MonitorableGroupAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::RepicaGroupConfiguration as &quot;src&quot; over CQML::MonitorableGroupAssociation, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "4991" kind = "PICML::Property"></role>
			<aspect name = "QoS" metaref = "4805" attributes = "ReplicationStyle" >
			</aspect>
		</model>
		<model name = "CQML::RootRiskGroup" metaref = "4566" attributes = "Metric" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="RootRiskGroup.bmp"></regnode>
			<role name = "CQML::SharedResourceReference" metaref = "4806" kind = "CQML::SharedResourceReference"></role>
			<aspect name = "QoS" metaref = "4807" attributes = "Metric" >
				<part metaref = "4808" role = "CQML::SharedResourceReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::Security" metaref = "4570" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "CQML::PolicySet" metaref = "4809" kind = "CQML::PolicySet"></role>
			<role name = "CQML::RBAC" metaref = "4810" kind = "CQML::RBAC"></role>
			<aspect name = "QoS" metaref = "4811" >
				<part metaref = "4812" role = "CQML::PolicySet" primary = "yes" linked = "no"></part>
				<part metaref = "4813" role = "CQML::RBAC" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::SecurityDomain" metaref = "4576" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="security_domain.bmp"></regnode>
			<role name = "CQML::Realm" metaref = "4814" kind = "CQML::Realm"></role>
			<aspect name = "QoS" metaref = "4815" >
				<part metaref = "4816" role = "CQML::Realm" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "CQML::SharedRiskGroup" metaref = "4580" attributes = "Metric" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedRiskGroup.bmp"></regnode>
			<constraint name="ValidCQML__CommonRiskAssociationsrcCardinality5" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::CommonRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::CommonRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidCQML__SharedRiskAssociationsrcCardinality63" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CQML::SharedRiskAssociation ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CQML::SRGBase as &quot;src&quot; over CQML::SharedRiskAssociation, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::SharedResourceReference" metaref = "4817" kind = "CQML::SharedResourceReference"></role>
			<aspect name = "QoS" metaref = "4818" attributes = "Metric" >
				<part metaref = "4819" role = "CQML::SharedResourceReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Action" metaref = "4639" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="DanglingAction" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[if self.kindName () = "Action" and self.isInstance () then
  let parent : Component = self.parent () in
  let workers = parent.parts (WorkerType) in

  workers.exists (iter : WorkerType | iter->name () = self.name ())
else
  true
endif]]>
				<dispname>The name of action instances must match the name of a worker.</dispname>
			</constraint>
			<constraint name="ValidPICML__EffectdstCardinality114" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TransitionsrcCardinality197" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "4992" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "4993" attributes = "Repetitions LogAction" >
				<part metaref = "4994" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Aggregate" metaref = "1206" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="aggregate.bmp"></regnode>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Member" metaref = "4995" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "4996" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "4997" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ArtifactContainer" metaref = "1210" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueImplementationArtifactReferences" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->forAll (i,j : ImplementationArtifactReference |
                      let p : ImplementationArtifact = i.refersTo() in
                      let q : ImplementationArtifact = j.refersTo() in
                        i.name.trim() = j.name.trim() => ( p = q or p.artifactVersion.trim() <> q.artifactVersion.trim() ))]]>
				<dispname>ImplementationArtifactReferences should have unique names</dispname>
			</constraint>
			<constraint name="UniqueImplementationArtifacts" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let artifacts = self.atomParts(ImplementationArtifact) in
artifacts->forAll ( i, j : ImplementationArtifact | 
                    i.name.trim() = j.name.trim() => (i = j or i.artifactVersion.trim() <> j.artifactVersion.trim() ))]]>
				<dispname>Implementation Artifacts should have unique names</dispname>
			</constraint>
			<constraint name="ValidPICML__ArtifactContainerPartCardinality216" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ArtifactContainer, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::ArtifactDependency" metaref = "4998" kind = "PICML::ArtifactDependency"></role>
			<role name = "PICML::ArtifactDependsOn" metaref = "4999" kind = "PICML::ArtifactDependsOn"></role>
			<role name = "PICML::ArtifactDeployRequirement" metaref = "5000" kind = "PICML::ArtifactDeployRequirement"></role>
			<role name = "PICML::ArtifactExecParameter" metaref = "5001" kind = "PICML::ArtifactExecParameter"></role>
			<role name = "PICML::ArtifactInfoProperty" metaref = "5002" kind = "PICML::ArtifactInfoProperty"></role>
			<role name = "PICML::ECConfiguration" metaref = "5003" kind = "PICML::ECConfiguration"></role>
			<role name = "PICML::ImplementationArtifact" metaref = "5004" kind = "PICML::ImplementationArtifact"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5005" kind = "PICML::ImplementationArtifactReference"></role>
			<role name = "PICML::Property" metaref = "5006" kind = "PICML::Property"></role>
			<role name = "PICML::RTConfiguration" metaref = "5007" kind = "PICML::RTConfiguration"></role>
			<role name = "PICML::Requirement" metaref = "5008" kind = "PICML::Requirement"></role>
			<aspect name = "Packaging" metaref = "5009" >
				<part metaref = "5010" role = "PICML::ArtifactDependency" primary = "yes" linked = "no"></part>
				<part metaref = "5011" role = "PICML::ArtifactDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "5012" role = "PICML::ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5013" role = "PICML::ArtifactExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5014" role = "PICML::ArtifactInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5015" role = "PICML::ECConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5016" role = "PICML::ImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "5017" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "5018" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5019" role = "PICML::RTConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5020" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Attribute" metaref = "1230" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
				<regnode name = "icon" value ="attribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeDelegatesrcCardinality83" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;src&quot; over PICML::AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeValuedstCardinality90" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;dst&quot; over PICML::AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ReadonlyAttributePartCardinality238" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::AttributeMember" metaref = "5021" kind = "PICML::AttributeMember"></role>
			<role name = "PICML::GetException" metaref = "5022" kind = "PICML::GetException"></role>
			<role name = "PICML::SetException" metaref = "5023" kind = "PICML::SetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "5024" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5025" role = "PICML::AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5026" role = "PICML::GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5027" role = "PICML::SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::BenchmarkAnalysis" metaref = "1238" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Average" metaref = "5028" kind = "PICML::Average"></role>
			<role name = "PICML::BenchmarkCharacteristics" metaref = "5029" kind = "PICML::BenchmarkCharacteristics"></role>
			<role name = "PICML::CompRef" metaref = "5030" kind = "PICML::CompRef"></role>
			<role name = "PICML::ComponentOperation" metaref = "5031" kind = "PICML::ComponentOperation"></role>
			<role name = "PICML::Event" metaref = "5032" kind = "PICML::Event"></role>
			<role name = "PICML::EventRef" metaref = "5033" kind = "PICML::EventRef"></role>
			<role name = "PICML::FactoryOperation" metaref = "5034" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::FixedIterationBenchmarks" metaref = "5035" kind = "PICML::FixedIterationBenchmarks"></role>
			<role name = "PICML::Jitter" metaref = "5036" kind = "PICML::Jitter"></role>
			<role name = "PICML::Latency" metaref = "5037" kind = "PICML::Latency"></role>
			<role name = "PICML::LookupOperation" metaref = "5038" kind = "PICML::LookupOperation"></role>
			<role name = "PICML::Maximum" metaref = "5039" kind = "PICML::Maximum"></role>
			<role name = "PICML::MetricConnection" metaref = "5040" kind = "PICML::MetricConnection"></role>
			<role name = "PICML::Minimum" metaref = "5041" kind = "PICML::Minimum"></role>
			<role name = "PICML::OnewayOperation" metaref = "5042" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::OperationRef" metaref = "5043" kind = "PICML::OperationRef"></role>
			<role name = "PICML::PeriodicBenchmarks" metaref = "5044" kind = "PICML::PeriodicBenchmarks"></role>
			<role name = "PICML::Task" metaref = "5045" kind = "PICML::Task"></role>
			<role name = "PICML::TaskSet" metaref = "5046" kind = "PICML::TaskSet"></role>
			<role name = "PICML::Throughput" metaref = "5047" kind = "PICML::Throughput"></role>
			<role name = "PICML::TimeProbe" metaref = "5048" kind = "PICML::TimeProbe"></role>
			<role name = "PICML::TimerConnection" metaref = "5049" kind = "PICML::TimerConnection"></role>
			<role name = "PICML::TimerEventSinkConn" metaref = "5050" kind = "PICML::TimerEventSinkConn"></role>
			<role name = "PICML::TriggerBenchmarks" metaref = "5051" kind = "PICML::TriggerBenchmarks"></role>
			<role name = "PICML::TwowayOperation" metaref = "5052" kind = "PICML::TwowayOperation"></role>
			<role name = "PICML::WorkLoadOperationConnection" metaref = "5053" kind = "PICML::WorkLoadOperationConnection"></role>
			<role name = "PICML::WorkloadCharacteristics" metaref = "5054" kind = "PICML::WorkloadCharacteristics"></role>
			<aspect name = "ComponentMetrics" metaref = "5055" >
				<part metaref = "5056" role = "PICML::BenchmarkCharacteristics" primary = "yes" linked = "no"></part>
				<part metaref = "5057" role = "PICML::CompRef" primary = "yes" linked = "no"></part>
				<part metaref = "5058" role = "PICML::ComponentOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5059" role = "PICML::EventRef" primary = "yes" linked = "no"></part>
				<part metaref = "5060" role = "PICML::FixedIterationBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5061" role = "PICML::Latency" primary = "yes" linked = "no"></part>
				<part metaref = "5062" role = "PICML::MetricConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5063" role = "PICML::OperationRef" primary = "yes" linked = "no"></part>
				<part metaref = "5064" role = "PICML::PeriodicBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5065" role = "PICML::Task" primary = "yes" linked = "no"></part>
				<part metaref = "5066" role = "PICML::TaskSet" primary = "yes" linked = "no"></part>
				<part metaref = "5067" role = "PICML::Throughput" primary = "yes" linked = "no"></part>
				<part metaref = "5068" role = "PICML::TimeProbe" primary = "yes" linked = "no"></part>
				<part metaref = "5069" role = "PICML::TimerConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5070" role = "PICML::TimerEventSinkConn" primary = "yes" linked = "no"></part>
				<part metaref = "5071" role = "PICML::TriggerBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5072" role = "PICML::WorkLoadOperationConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5073" role = "PICML::WorkloadCharacteristics" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Bridge" metaref = "1285" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Bridge"></regnode>
			<constraint name="ValidPICML__Bridge2InterconnectdstCardinality94" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Bridge2Interconnect ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Bridge as &quot;dst&quot; over PICML::Bridge2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__Interconnect2BridgesrcCardinality143" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Interconnect2Bridge ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Bridge as &quot;src&quot; over PICML::Interconnect2Bridge, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::Resource" metaref = "5074" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "5075" attributes = "label" >
				<part metaref = "5076" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Capability" metaref = "1289" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Capability.bmp"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let sp = self.modelParts(SatisfierProperty) in
          sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
				<dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "5077" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Packaging" metaref = "5078" attributes = "resourceType" >
				<part metaref = "5079" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Component" metaref = "1293" attributes = "VersionTag SpecifyIdTag UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoEmitsUsesPortNameClash" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[referenceParts ()->forAll (
  a, b : gme::Reference | (a.oclAsType (OutEventPort).single_destination = true
                                        and b.isTypeOf (RequiredRequestPort)
                                       )
  implies
    a.name <> b.name)]]>
				<dispname>None of a Component&apos;s RequiredRequestPort names can be the same as any of its single-destination OutEventPort names</dispname>
			</constraint>
			<constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
				<dispname>A component that has a base component may not also support interfaces</dispname>
			</constraint>
			<constraint name="NoSameTypePortNameClash" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[referenceParts (InEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (OutEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (ProvidedRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (RequiredRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)]]>
				<dispname>A Component&apos;s ports of the category must all have unique names</dispname>
			</constraint>
			<constraint name="NonRedundantProperties" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.bagConnectedFCOs (AssemblyConfigProperty)->isUnique( x: Property | x.name().trim())]]>
				<dispname>A Property can be associated with a Component only once.</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="PropertyAsAttribute" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let properties = self.connectedFCOs(AssemblyConfigProperty) in
  properties->forAll (x : AssemblyConfigProperty |
        let attributes = self.modelParts(ReadonlyAttribute) in
             not attributes->exists (attr : ReadonlyAttribute |
                           x.name() = attr.name() )) ]]>
				<dispname>A Property has the same name as an Attribute of the Component.  To specify values for the Component&apos;s attributes, connect the Property direcly to the attribute available as a port.</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let components = project.allInstancesOf (Component) in
   components->forAll  (x : Component | 
                         (self <> x)  
                            implies
                         (
                            (  x.UUID.trim() <> self.UUID.trim()  )
                              or
                            (  x.UUID.trim() = ""  or  self.UUID.trim() = ""   )
                         )
              )
                         ]]>
				<dispname>Every Component instance should have a unique UUID</dispname>
			</constraint>
			<constraint name="UniqueWorkerType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let workers = self->parts (WorkerType) in
   workers->isUnique (iter : WorkerType | iter->name ())]]>
				<dispname>Component contains duplicate worker names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML__TopLevelBehaviorPartCardinality247" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Environment" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelBehavior, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Action" metaref = "5080" kind = "PICML::Action"></role>
			<role name = "PICML::Attribute" metaref = "5081" kind = "PICML::Attribute"></role>
			<role name = "PICML::CompositeAction" metaref = "5082" kind = "PICML::CompositeAction"></role>
			<role name = "PICML::Effect" metaref = "5083" kind = "PICML::Effect"></role>
			<role name = "PICML::Environment" metaref = "5084" kind = "PICML::Environment"></role>
			<role name = "PICML::Finish" metaref = "5085" kind = "PICML::Finish"></role>
			<role name = "PICML::InEventPort" metaref = "5086" kind = "PICML::InEventPort"></role>
			<role name = "PICML::Input" metaref = "5087" kind = "PICML::Input"></role>
			<role name = "PICML::InputAction" metaref = "5088" kind = "PICML::InputAction"></role>
			<role name = "PICML::InputEffect" metaref = "5089" kind = "PICML::InputEffect"></role>
			<role name = "PICML::MultiInput" metaref = "5090" kind = "PICML::MultiInput"></role>
			<role name = "PICML::OutEventPort" metaref = "5091" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::OutputAction" metaref = "5092" kind = "PICML::OutputAction"></role>
			<role name = "PICML::PeriodicEvent" metaref = "5093" kind = "PICML::PeriodicEvent"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5094" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5095" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5096" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::State" metaref = "5097" kind = "PICML::State"></role>
			<role name = "PICML::Supports" metaref = "5098" kind = "PICML::Supports"></role>
			<role name = "PICML::Transition" metaref = "5099" kind = "PICML::Transition"></role>
			<role name = "PICML::Variable" metaref = "5100" kind = "PICML::Variable"></role>
			<role name = "PICML::WorkerType" metaref = "5101" kind = "PICML::WorkerType"></role>
			<aspect name = "InterfaceDefinition" metaref = "5102" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "5103" role = "PICML::Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5104" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5105" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5106" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5107" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5108" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5109" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
			<aspect name = "Behavior" metaref = "5110" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "5111" role = "PICML::Action" primary = "yes" linked = "no"></part>
				<part metaref = "5112" role = "PICML::CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "5113" role = "PICML::Effect" primary = "yes" linked = "no"></part>
				<part metaref = "5114" role = "PICML::Environment" primary = "yes" linked = "no"></part>
				<part metaref = "5115" role = "PICML::Finish" primary = "yes" linked = "no"></part>
				<part metaref = "5116" role = "PICML::InEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5117" role = "PICML::Input" primary = "yes" linked = "no"></part>
				<part metaref = "5118" role = "PICML::InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5119" role = "PICML::InputEffect" primary = "yes" linked = "no"></part>
				<part metaref = "5120" role = "PICML::MultiInput" primary = "yes" linked = "no"></part>
				<part metaref = "5121" role = "PICML::OutEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5122" role = "PICML::OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5123" role = "PICML::PeriodicEvent" primary = "yes" linked = "no"></part>
				<part metaref = "5124" role = "PICML::ProvidedRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5125" role = "PICML::RequiredRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5126" role = "PICML::State" primary = "yes" linked = "no"></part>
				<part metaref = "5127" role = "PICML::Transition" primary = "yes" linked = "no"></part>
				<part metaref = "5128" role = "PICML::Variable" primary = "yes" linked = "no"></part>
				<part metaref = "5129" role = "PICML::WorkerType" primary = "yes" kindaspect = "Behavior" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentAssembly" metaref = "1309" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="RequiredMonolithicImplementation" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let monolithicImpls = project.allInstancesOf (MonolithicImplementation) in
instances->forAll (x : Component | 
         let myType = x.ComponentParentType() in
                 monolithicImpls->exists ( impl : MonolithicImplementation | 
                    let interfaces = impl.connectedFCOs(Implements) in
                     interfaces->size() = 1 and
                         interfaces->exists (interface : Reference |
                             interface.refersTo().name() = myType.name() )  ) )
                                                            ]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation, or there should exist a MonolithicImplementation for the corresponding component type</dispname>
			</constraint>
			<constraint name="UniqueAttributeMappingNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts(AttributeMapping)->isUnique( x : AttributeMapping | x.name().trim())]]>
				<dispname>AttributeMappings used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueConnectorNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let connectors = self.atomParts(PublishConnector) in
          connectors->isUnique (i : PublishConnector | i.name.trim())]]>
				<dispname>Connectors used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueInstanceName" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let components = self.modelParts(Component) in
          components->isUnique (i : Component | i.name.trim())]]>
				<dispname>Components of an Assembly should have unique names</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingHierarchy" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let mappings = self.referenceParts (AttributeMapping) in
    let children = self.modelParts(ComponentAssembly) in
           mappings->forAll ( x : AttributeMapping | 
                let delegates = x.connectedFCOs("dstAttributeMappingDelegate", AttributeMappingDelegate) in
                       delegates->forAll ( y : FCO |
                              let  delParent : Model = y.parent() in
                                          children->exists ( z : ComponentAssembly | delParent.name() = z.name() ) ) ) ]]>
				<dispname>AttributeMappings can only be delegated from a high-level assembly to sub-assemblies, and not vice-versa (Change the connection direction)</dispname>
			</constraint>
			<constraint name="ValidPICML__CriticalPathdstCardinality108" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::CriticalPath ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentAssembly as &quot;dst&quot; over PICML::CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ImplementsdstCardinality134" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentImplementation as &quot;dst&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::ComponentAssemblyQoS" metaref = "5130" kind = "CQML::ComponentAssemblyQoS"></role>
			<role name = "CQML::ComponentAssemblySecurityQoS" metaref = "5131" kind = "CQML::ComponentAssemblySecurityQoS"></role>
			<role name = "CQML::ComponentQoS" metaref = "5132" kind = "CQML::ComponentQoS"></role>
			<role name = "CQML::ComponentSecurityQoS" metaref = "5133" kind = "CQML::ComponentSecurityQoS"></role>
			<role name = "CQML::EventChannelConfiguration" metaref = "5134" kind = "CQML::EventChannelConfiguration"></role>
			<role name = "CQML::EventSinkPublish" metaref = "5135" kind = "CQML::EventSinkPublish"></role>
			<role name = "CQML::EventSourcePublish" metaref = "5136" kind = "CQML::EventSourcePublish"></role>
			<role name = "CQML::FacetInvoke" metaref = "5137" kind = "CQML::FacetInvoke"></role>
			<role name = "CQML::FailOverUnit" metaref = "5138" kind = "CQML::FailOverUnit"></role>
			<role name = "CQML::NetQoS" metaref = "5139" kind = "CQML::NetQoS"></role>
			<role name = "CQML::PortQoS" metaref = "5140" kind = "CQML::PortQoS"></role>
			<role name = "CQML::PortSecurityQoS" metaref = "5141" kind = "CQML::PortSecurityQoS"></role>
			<role name = "CQML::ProvidedRequestQoS" metaref = "5142" kind = "CQML::ProvidedRequestQoS"></role>
			<role name = "CQML::QoSCharRef" metaref = "5143" kind = "CQML::QoSCharRef"></role>
			<role name = "CQML::QoSConnector" metaref = "5144" kind = "CQML::QoSConnector"></role>
			<role name = "CQML::QoSReq" metaref = "5145" kind = "CQML::QoSReq"></role>
			<role name = "CQML::RealTimeConfiguration" metaref = "5146" kind = "CQML::RealTimeConfiguration"></role>
			<role name = "CQML::RecepInvoke" metaref = "5147" kind = "CQML::RecepInvoke"></role>
			<role name = "PICML::AssemblyConfigProperty" metaref = "5148" kind = "PICML::AssemblyConfigProperty"></role>
			<role name = "PICML::AssemblyDeployRequirement" metaref = "5149" kind = "PICML::AssemblyDeployRequirement"></role>
			<role name = "PICML::AssemblyselectRequirement" metaref = "5150" kind = "PICML::AssemblyselectRequirement"></role>
			<role name = "PICML::AttributeDelegate" metaref = "5151" kind = "PICML::AttributeDelegate"></role>
			<role name = "PICML::AttributeMapping" metaref = "5152" kind = "PICML::AttributeMapping"></role>
			<role name = "PICML::AttributeMappingDelegate" metaref = "5153" kind = "PICML::AttributeMappingDelegate"></role>
			<role name = "PICML::AttributeMappingValue" metaref = "5154" kind = "PICML::AttributeMappingValue"></role>
			<role name = "PICML::AttributeValue" metaref = "5155" kind = "PICML::AttributeValue"></role>
			<role name = "PICML::Component" metaref = "5156" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentAssembly" metaref = "5157" kind = "PICML::ComponentAssembly"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "5158" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentPackage" metaref = "5159" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentPackageReference" metaref = "5160" kind = "PICML::ComponentPackageReference"></role>
			<role name = "PICML::ComponentRef" metaref = "5161" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::ECConfiguration" metaref = "5162" kind = "PICML::ECConfiguration"></role>
			<role name = "PICML::EventSinkDelegate" metaref = "5163" kind = "PICML::EventSinkDelegate"></role>
			<role name = "PICML::EventSourceDelegate" metaref = "5164" kind = "PICML::EventSourceDelegate"></role>
			<role name = "PICML::ExternalDelegate" metaref = "5165" kind = "PICML::ExternalDelegate"></role>
			<role name = "PICML::ExternalReferenceEndPoint" metaref = "5166" kind = "PICML::ExternalReferenceEndPoint"></role>
			<role name = "PICML::FacetDelegate" metaref = "5167" kind = "PICML::FacetDelegate"></role>
			<role name = "PICML::InEventPort" metaref = "5168" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5169" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::Property" metaref = "5170" kind = "PICML::Property"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5171" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::PublishConnector" metaref = "5172" kind = "PICML::PublishConnector"></role>
			<role name = "PICML::RTConfiguration" metaref = "5173" kind = "PICML::RTConfiguration"></role>
			<role name = "PICML::ReceptacleDelegate" metaref = "5174" kind = "PICML::ReceptacleDelegate"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5175" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::Requirement" metaref = "5176" kind = "PICML::Requirement"></role>
			<role name = "PICML::deliverTo" metaref = "5177" kind = "PICML::deliverTo"></role>
			<role name = "PICML::emit" metaref = "5178" kind = "PICML::emit"></role>
			<role name = "PICML::invoke" metaref = "5179" kind = "PICML::invoke"></role>
			<role name = "PICML::publish" metaref = "5180" kind = "PICML::publish"></role>
			<aspect name = "Packaging" metaref = "5181" attributes = "UUID label" >
				<part metaref = "5182" role = "PICML::AssemblyConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5183" role = "PICML::AssemblyDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5184" role = "PICML::AssemblyselectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5185" role = "PICML::AttributeDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5186" role = "PICML::AttributeMapping" primary = "yes" linked = "yes"></part>
				<part metaref = "5187" role = "PICML::AttributeMappingDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5188" role = "PICML::AttributeMappingValue" primary = "yes" linked = "no"></part>
				<part metaref = "5189" role = "PICML::AttributeValue" primary = "yes" linked = "no"></part>
				<part metaref = "5190" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5191" role = "PICML::ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "5192" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "5193" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5194" role = "PICML::ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "5195" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5196" role = "PICML::ECConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5197" role = "PICML::EventSinkDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5198" role = "PICML::EventSourceDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5199" role = "PICML::ExternalDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5200" role = "PICML::ExternalReferenceEndPoint" primary = "yes" linked = "no"></part>
				<part metaref = "5201" role = "PICML::FacetDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5202" role = "PICML::InEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5203" role = "PICML::OutEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5204" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5205" role = "PICML::ProvidedRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5206" role = "PICML::PublishConnector" primary = "yes" linked = "no"></part>
				<part metaref = "5207" role = "PICML::RTConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5208" role = "PICML::ReceptacleDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5209" role = "PICML::RequiredRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5210" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "5211" role = "PICML::deliverTo" primary = "yes" linked = "no"></part>
				<part metaref = "5212" role = "PICML::emit" primary = "yes" linked = "no"></part>
				<part metaref = "5213" role = "PICML::invoke" primary = "yes" linked = "no"></part>
				<part metaref = "5214" role = "PICML::publish" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5215" attributes = "UUID label" >
				<part metaref = "5216" role = "CQML::ComponentAssemblyQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5217" role = "CQML::ComponentAssemblySecurityQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5218" role = "CQML::ComponentQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5219" role = "CQML::ComponentSecurityQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5220" role = "CQML::EventChannelConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5221" role = "CQML::EventSinkPublish" primary = "yes" linked = "no"></part>
				<part metaref = "5222" role = "CQML::EventSourcePublish" primary = "yes" linked = "no"></part>
				<part metaref = "5223" role = "CQML::FacetInvoke" primary = "yes" linked = "no"></part>
				<part metaref = "5224" role = "CQML::FailOverUnit" primary = "yes" linked = "no"></part>
				<part metaref = "5225" role = "CQML::NetQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5226" role = "CQML::PortQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5227" role = "CQML::PortSecurityQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5228" role = "CQML::ProvidedRequestQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5229" role = "CQML::QoSCharRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5230" role = "CQML::QoSConnector" primary = "yes" linked = "no"></part>
				<part metaref = "5231" role = "CQML::QoSReq" primary = "yes" linked = "no"></part>
				<part metaref = "5232" role = "CQML::RealTimeConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5233" role = "CQML::RecepInvoke" primary = "yes" linked = "no"></part>
				<part metaref = "5234" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5235" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5236" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5237" role = "PICML::InEventPort" primary = "yes" kindaspect = "QoS" linked = "yes"></part>
				<part metaref = "5238" role = "PICML::OutEventPort" primary = "yes" kindaspect = "QoS" linked = "yes"></part>
				<part metaref = "5239" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "QoS" linked = "yes"></part>
				<part metaref = "5240" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "QoS" linked = "yes"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentContainer" metaref = "1369" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__ComponentContainerPartCardinality217" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentConfigProperty" metaref = "5241" kind = "PICML::ComponentConfigProperty"></role>
			<role name = "PICML::ComponentInfoProperty" metaref = "5242" kind = "PICML::ComponentInfoProperty"></role>
			<role name = "PICML::ComponentProperty" metaref = "5243" kind = "PICML::ComponentProperty"></role>
			<role name = "PICML::ComponentPropertyDescription" metaref = "5244" kind = "PICML::ComponentPropertyDescription"></role>
			<role name = "PICML::ComponentRef" metaref = "5245" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Property" metaref = "5246" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5247" >
				<part metaref = "5248" role = "PICML::ComponentConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5249" role = "PICML::ComponentInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5250" role = "PICML::ComponentProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5251" role = "PICML::ComponentPropertyDescription" primary = "yes" linked = "no"></part>
				<part metaref = "5252" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5253" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentFactory" metaref = "1383" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="componentfactory.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentFactoryPartCardinality218" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::LookupKey" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentFactory, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ManagesComponentdstCardinality152" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::ManagesComponent ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentFactory as &quot;dst&quot; over PICML::ManagesComponent, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "CQML::OperationClassificationConn" metaref = "5254" kind = "CQML::OperationClassificationConn"></role>
			<role name = "CQML::RequiredRights" metaref = "5255" kind = "CQML::RequiredRights"></role>
			<role name = "PICML::Aggregate" metaref = "5256" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5257" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5258" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5259" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5260" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5261" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5262" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "5263" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "5264" kind = "PICML::Inherits"></role>
			<role name = "PICML::LookupKey" metaref = "5265" kind = "PICML::LookupKey"></role>
			<role name = "PICML::LookupOperation" metaref = "5266" kind = "PICML::LookupOperation"></role>
			<role name = "PICML::OnewayOperation" metaref = "5267" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5268" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "5269" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5270" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5271" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5272" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5273" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5274" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5275" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5276" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5277" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5278" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5279" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5280" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5281" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5282" role = "PICML::LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5283" role = "PICML::LookupOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5284" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5285" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5286" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5287" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5288" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5289" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5290" role = "CQML::OperationClassificationConn" primary = "yes" linked = "no"></part>
				<part metaref = "5291" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "5292" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5293" role = "PICML::LookupOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5294" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5295" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentImplementationContainer" metaref = "1417" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
          (self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
				<dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
			</constraint>
			<constraint name="UniquePrimaryArtifacts" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->isUnique (i : ImplementationArtifactReference | i.name.trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should have unique names</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentImplementationContainerPartCardinality219" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Implements" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentImplementationContainerPartCardinality220" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentImplementation" ) -> size + self.parts( "PICML::MonolithicImplementation" ) -> size + self.parts( "PICML::ComponentAssembly" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentImplementationContainerPartCardinality221" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PathReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ComponentImplementationContainerPartCardinality222" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "CQML::ComponentAssemblyQoS" metaref = "5296" kind = "CQML::ComponentAssemblyQoS"></role>
			<role name = "CQML::ComponentAssemblySecurityQoS" metaref = "5297" kind = "CQML::ComponentAssemblySecurityQoS"></role>
			<role name = "CQML::FailOverUnit" metaref = "5298" kind = "CQML::FailOverUnit"></role>
			<role name = "CQML::PortSecurityQoS" metaref = "5299" kind = "CQML::PortSecurityQoS"></role>
			<role name = "PICML::Capability" metaref = "5300" kind = "PICML::Capability"></role>
			<role name = "PICML::ComponentAssembly" metaref = "5301" kind = "PICML::ComponentAssembly"></role>
			<role name = "PICML::ComponentRef" metaref = "5302" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::ConfigProperty" metaref = "5303" kind = "PICML::ConfigProperty"></role>
			<role name = "PICML::CriticalPath" metaref = "5304" kind = "PICML::CriticalPath"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5305" kind = "PICML::ImplementationArtifactReference"></role>
			<role name = "PICML::ImplementationCapability" metaref = "5306" kind = "PICML::ImplementationCapability"></role>
			<role name = "PICML::ImplementationDependency" metaref = "5307" kind = "PICML::ImplementationDependency"></role>
			<role name = "PICML::ImplementationDependsOn" metaref = "5308" kind = "PICML::ImplementationDependsOn"></role>
			<role name = "PICML::ImplementationRequirement" metaref = "5309" kind = "PICML::ImplementationRequirement"></role>
			<role name = "PICML::Implements" metaref = "5310" kind = "PICML::Implements"></role>
			<role name = "PICML::InfoProperty" metaref = "5311" kind = "PICML::InfoProperty"></role>
			<role name = "PICML::MonolithDeployRequirement" metaref = "5312" kind = "PICML::MonolithDeployRequirement"></role>
			<role name = "PICML::MonolithExecParameter" metaref = "5313" kind = "PICML::MonolithExecParameter"></role>
			<role name = "PICML::MonolithicImplementation" metaref = "5314" kind = "PICML::MonolithicImplementation"></role>
			<role name = "PICML::MonolithprimaryArtifact" metaref = "5315" kind = "PICML::MonolithprimaryArtifact"></role>
			<role name = "PICML::PathReference" metaref = "5316" kind = "PICML::PathReference"></role>
			<role name = "PICML::Property" metaref = "5317" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5318" >
				<part metaref = "5319" role = "PICML::Capability" primary = "yes" linked = "no"></part>
				<part metaref = "5320" role = "PICML::ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "5321" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5322" role = "PICML::ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5323" role = "PICML::CriticalPath" primary = "yes" linked = "no"></part>
				<part metaref = "5324" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "5325" role = "PICML::ImplementationCapability" primary = "yes" linked = "no"></part>
				<part metaref = "5326" role = "PICML::ImplementationDependency" primary = "yes" linked = "no"></part>
				<part metaref = "5327" role = "PICML::ImplementationDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "5328" role = "PICML::ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5329" role = "PICML::Implements" primary = "yes" linked = "no"></part>
				<part metaref = "5330" role = "PICML::InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5331" role = "PICML::MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5332" role = "PICML::MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5333" role = "PICML::MonolithicImplementation" primary = "yes" linked = "no"></part>
				<part metaref = "5334" role = "PICML::MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "5335" role = "PICML::PathReference" primary = "yes" linked = "no"></part>
				<part metaref = "5336" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5337" >
				<part metaref = "5338" role = "CQML::ComponentAssemblyQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5339" role = "CQML::ComponentAssemblySecurityQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5340" role = "CQML::FailOverUnit" primary = "yes" linked = "no"></part>
				<part metaref = "5341" role = "CQML::PortSecurityQoS" primary = "yes" linked = "no"></part>
				<part metaref = "5342" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentPropertyDescription" metaref = "1451" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
			<constraint name="ValidPICML__ComponentPropertyDescriptionPartCardinality223" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentPropertyDescription, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "5343" kind = "PICML::DataType"></role>
			<aspect name = "Packaging" metaref = "5344" >
				<part metaref = "5345" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::CompositeAction" metaref = "4905" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="composite.bmp"></regnode>
			<constraint name="SingleInputAction" eventmask = "0x4" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let inputs = self.models (InputAction) in
inputs.size () = 1
]]>
				<dispname>Composite actions must contain one InputAction</dispname>
			</constraint>
			<constraint name="ValidPICML__EffectdstCardinality114" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TransitionsrcCardinality197" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Action" metaref = "5346" kind = "PICML::Action"></role>
			<role name = "PICML::CompositeAction" metaref = "5347" kind = "PICML::CompositeAction"></role>
			<role name = "PICML::Effect" metaref = "5348" kind = "PICML::Effect"></role>
			<role name = "PICML::Finish" metaref = "5349" kind = "PICML::Finish"></role>
			<role name = "PICML::InputAction" metaref = "5350" kind = "PICML::InputAction"></role>
			<role name = "PICML::InputEffect" metaref = "5351" kind = "PICML::InputEffect"></role>
			<role name = "PICML::OutputAction" metaref = "5352" kind = "PICML::OutputAction"></role>
			<role name = "PICML::Property" metaref = "5353" kind = "PICML::Property"></role>
			<role name = "PICML::State" metaref = "5354" kind = "PICML::State"></role>
			<role name = "PICML::Transition" metaref = "5355" kind = "PICML::Transition"></role>
			<role name = "PICML::Variable" metaref = "5356" kind = "PICML::Variable"></role>
			<aspect name = "Behavior" metaref = "5357" >
				<part metaref = "5358" role = "PICML::Action" primary = "yes" linked = "no"></part>
				<part metaref = "5359" role = "PICML::CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "5360" role = "PICML::Effect" primary = "yes" linked = "no"></part>
				<part metaref = "5361" role = "PICML::Finish" primary = "yes" linked = "no"></part>
				<part metaref = "5362" role = "PICML::InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5363" role = "PICML::InputEffect" primary = "yes" linked = "no"></part>
				<part metaref = "5364" role = "PICML::OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5365" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5366" role = "PICML::State" primary = "yes" linked = "no"></part>
				<part metaref = "5367" role = "PICML::Transition" primary = "yes" linked = "no"></part>
				<part metaref = "5368" role = "PICML::Variable" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ConnectedComponent" metaref = "2011" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML__DstEdgedstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__SrcEdgesrcCardinality189" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::DstEdge" metaref = "5369" kind = "PICML::DstEdge"></role>
			<role name = "PICML::InEventPort" metaref = "5370" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5371" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5372" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5373" kind = "PICML::RequiredRequestPort"></role>
			<aspect name = "PathDiagram" metaref = "5374" >
				<part metaref = "5375" role = "PICML::DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "5376" role = "PICML::InEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5377" role = "PICML::OutEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5378" role = "PICML::ProvidedRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "5379" role = "PICML::RequiredRequestPort" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::DeploymentPlan" metaref = "1455" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePropertyNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let properties = self.modelParts(Property) in
          properties->isUnique (i : Property | i.name.trim())]]>
				<dispname>Names of the properties in a deployment plan should be unique</dispname>
			</constraint>
			<role name = "PICML::CollocationGroup" metaref = "5380" kind = "PICML::CollocationGroup"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "5381" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentRef" metaref = "5382" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::InstanceMapping" metaref = "5383" kind = "PICML::InstanceMapping"></role>
			<role name = "PICML::NodeReference" metaref = "5384" kind = "PICML::NodeReference"></role>
			<role name = "PICML::Property" metaref = "5385" kind = "PICML::Property"></role>
			<role name = "PICML::SharedComponentReference" metaref = "5386" kind = "PICML::SharedComponentReference"></role>
			<aspect name = "NodeMapping" metaref = "5387" attributes = "UUID label" >
				<part metaref = "5388" role = "PICML::CollocationGroup" primary = "yes" linked = "no"></part>
				<part metaref = "5389" role = "PICML::ComponentAssemblyReference" primary = "yes" linked = "no"></part>
				<part metaref = "5390" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5391" role = "PICML::InstanceMapping" primary = "yes" linked = "no"></part>
				<part metaref = "5392" role = "PICML::NodeReference" primary = "yes" linked = "no"></part>
				<part metaref = "5393" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5394" role = "PICML::SharedComponentReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Domain" metaref = "1467" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Domain"></regnode>
			<role name = "PICML::Bridge" metaref = "5395" kind = "PICML::Bridge"></role>
			<role name = "PICML::Bridge2Interconnect" metaref = "5396" kind = "PICML::Bridge2Interconnect"></role>
			<role name = "PICML::Interconnect" metaref = "5397" kind = "PICML::Interconnect"></role>
			<role name = "PICML::Interconnect2Bridge" metaref = "5398" kind = "PICML::Interconnect2Bridge"></role>
			<role name = "PICML::Interconnect2Node" metaref = "5399" kind = "PICML::Interconnect2Node"></role>
			<role name = "PICML::Node" metaref = "5400" kind = "PICML::Node"></role>
			<role name = "PICML::Node2Interconnect" metaref = "5401" kind = "PICML::Node2Interconnect"></role>
			<role name = "PICML::Property" metaref = "5402" kind = "PICML::Property"></role>
			<role name = "PICML::SharedResource" metaref = "5403" kind = "PICML::SharedResource"></role>
			<role name = "PICML::Shares" metaref = "5404" kind = "PICML::Shares"></role>
			<aspect name = "Target" metaref = "5405" attributes = "UUID label" >
				<part metaref = "5406" role = "PICML::Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "5407" role = "PICML::Bridge2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5408" role = "PICML::Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5409" role = "PICML::Interconnect2Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "5410" role = "PICML::Interconnect2Node" primary = "yes" linked = "no"></part>
				<part metaref = "5411" role = "PICML::Node" primary = "yes" linked = "no"></part>
				<part metaref = "5412" role = "PICML::Node2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5413" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5414" role = "PICML::SharedResource" primary = "yes" linked = "no"></part>
				<part metaref = "5415" role = "PICML::Shares" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ECConfiguration" metaref = "3845" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<role name = "PICML::Consumer2BehaviorConnection" metaref = "5416" kind = "PICML::Consumer2BehaviorConnection"></role>
			<role name = "PICML::ECConsumer" metaref = "5417" kind = "PICML::ECConsumer"></role>
			<role name = "PICML::ECSupplier" metaref = "5418" kind = "PICML::ECSupplier"></role>
			<role name = "PICML::Property" metaref = "5419" kind = "PICML::Property"></role>
			<role name = "PICML::RecursiveFilterConnection" metaref = "5420" kind = "PICML::RecursiveFilterConnection"></role>
			<aspect name = "Packaging" metaref = "5421" attributes = "resourceType" >
				<part metaref = "5422" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "EventChannelRequirement" metaref = "5423" attributes = "resourceType" >
				<part metaref = "5424" role = "PICML::Consumer2BehaviorConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5425" role = "PICML::ECConsumer" primary = "yes" linked = "no"></part>
				<part metaref = "5426" role = "PICML::ECSupplier" primary = "yes" linked = "no"></part>
				<part metaref = "5427" role = "PICML::RecursiveFilterConnection" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ECConsumer" metaref = "3858" attributes = "ConfigureRTQoS" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::ECBehavior" metaref = "5428" kind = "PICML::ECBehavior"></role>
			<role name = "PICML::ECEventFilterConfiguration" metaref = "5429" kind = "PICML::ECEventFilterConfiguration"></role>
			<role name = "PICML::RecursiveFilterConnection" metaref = "5430" kind = "PICML::RecursiveFilterConnection"></role>
			<aspect name = "EventChannelRequirement" metaref = "5431" attributes = "ConfigureRTQoS" >
				<part metaref = "5432" role = "PICML::ECBehavior" primary = "yes" linked = "no"></part>
				<part metaref = "5433" role = "PICML::ECEventFilterConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5434" role = "PICML::RecursiveFilterConnection" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ECSupplier" metaref = "3866" attributes = "ConfigureRTQoS" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Supplier2FilterConnection" metaref = "5435" kind = "PICML::Supplier2FilterConnection"></role>
			<aspect name = "EventChannelRequirement" metaref = "5436" attributes = "ConfigureRTQoS" >
				<part metaref = "5437" role = "PICML::Supplier2FilterConnection" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Enum" metaref = "1489" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enum.bmp"></regnode>
			<constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
				<dispname>An enum&apos;s member names must be unique</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML__EnumPartCardinality224" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::EnumValue" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::Enum, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::EnumValue" metaref = "5438" kind = "PICML::EnumValue"></role>
			<aspect name = "InterfaceDefinition" metaref = "5439" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5440" role = "PICML::EnumValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Event" metaref = "1493" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="event.bmp"></regnode>
			<constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "5441" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "CQML::OperationClassificationConn" metaref = "5442" kind = "CQML::OperationClassificationConn"></role>
			<role name = "CQML::RequiredRights" metaref = "5443" kind = "CQML::RequiredRights"></role>
			<role name = "PICML::Aggregate" metaref = "5444" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5445" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5446" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5447" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5448" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5449" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5450" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "5451" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "5452" kind = "PICML::Inherits"></role>
			<role name = "PICML::MakeMemberPrivate" metaref = "5453" kind = "PICML::MakeMemberPrivate"></role>
			<role name = "PICML::Member" metaref = "5454" kind = "PICML::Member"></role>
			<role name = "PICML::OnewayOperation" metaref = "5455" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::PrivateFlag" metaref = "5456" kind = "PICML::PrivateFlag"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5457" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "5458" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5459" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5460" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5461" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "5462" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5463" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5464" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5465" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5466" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5467" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5468" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5469" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5470" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5471" role = "PICML::MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "5472" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5473" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5474" role = "PICML::PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "5475" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5476" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5477" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5478" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5479" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "5480" role = "CQML::OperationClassificationConn" primary = "yes" linked = "no"></part>
				<part metaref = "5481" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "5482" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5483" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5484" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Exception" metaref = "1552" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="exception.bmp"></regnode>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Member" metaref = "5485" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "5486" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5487" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ExecutorProject" metaref = "1556" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML__ExecutorProjectPartCardinality225" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ExecutorProject, has to match 1.</dispname>
			</constraint>
			<constraint name="execOneInstance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>One An executor project can exist as a part of the Component Project</dispname>
			</constraint>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5488" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "5489" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "5490" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::FactoryOperation" metaref = "1560" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="factory.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidCQML__OperationClassificationConndstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OperationClassificationConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationBase as &quot;dst&quot; over CQML::OperationClassificationConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "5491" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "5492" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5493" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5494" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5495" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::File" metaref = "1566" attributes = "PrefixTag" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
				<dispname>A file cannot be included more than once</dispname>
			</constraint>
			<role name = "PICML::Aggregate" metaref = "5496" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5497" kind = "PICML::Alias"></role>
			<role name = "PICML::Boxed" metaref = "5498" kind = "PICML::Boxed"></role>
			<role name = "PICML::Collection" metaref = "5499" kind = "PICML::Collection"></role>
			<role name = "PICML::Component" metaref = "5500" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentFactory" metaref = "5501" kind = "PICML::ComponentFactory"></role>
			<role name = "PICML::ComponentRef" metaref = "5502" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Constant" metaref = "5503" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5504" kind = "PICML::Enum"></role>
			<role name = "PICML::Event" metaref = "5505" kind = "PICML::Event"></role>
			<role name = "PICML::Exception" metaref = "5506" kind = "PICML::Exception"></role>
			<role name = "PICML::FileRef" metaref = "5507" kind = "PICML::FileRef"></role>
			<role name = "PICML::ManagesComponent" metaref = "5508" kind = "PICML::ManagesComponent"></role>
			<role name = "PICML::Object" metaref = "5509" kind = "PICML::Object"></role>
			<role name = "PICML::Package" metaref = "5510" kind = "PICML::Package"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5511" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::ValueObject" metaref = "5512" kind = "PICML::ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "5513" attributes = "PrefixTag" >
				<part metaref = "5514" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5515" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5516" role = "PICML::Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5517" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5518" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5519" role = "PICML::ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5520" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5521" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5522" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5523" role = "PICML::Event" primary = "yes" linked = "no"></part>
				<part metaref = "5524" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5525" role = "PICML::FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5526" role = "PICML::ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5527" role = "PICML::Object" primary = "yes" linked = "no"></part>
				<part metaref = "5528" role = "PICML::Package" primary = "yes" linked = "no"></part>
				<part metaref = "5529" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5530" role = "PICML::ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ImplementationRequirement" metaref = "1602" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
			<role name = "PICML::Property" metaref = "5531" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5532" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<part metaref = "5533" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::InputAction" metaref = "4934" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
			<constraint name="MustHaveFinish" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections( "dst", Finish ) -> size = 1]]>
				<dispname>Input actions must have one finish connection</dispname>
			</constraint>
			<constraint name="ValidPICML__FinishsrcCardinality125" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__InputEffectdstCardinality140" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::InputEffect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;dst&quot; over PICML::InputEffect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__InputsrcCardinality137" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__MultiInputsrcCardinality161" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5534" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "5535" >
				<part metaref = "5536" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Interconnect" metaref = "1606" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Interconnect"></regnode>
			<constraint name="ValidPICML__Interconnect2NodedstCardinality146" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Interconnect2Node ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Interconnect as &quot;dst&quot; over PICML::Interconnect2Node, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__Node2InterconnectsrcCardinality163" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Node2Interconnect ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Interconnect as &quot;src&quot; over PICML::Node2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::Resource" metaref = "5537" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "5538" attributes = "label" >
				<part metaref = "5539" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Latency" metaref = "1610" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Latency.bmp"></regnode>
			<constraint name="ValidPICML__BenchmarkCharacteristicssrcCardinality91" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__MetricConnectionsrcCardinality153" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML__WorkloadCharacteristicsdstCardinality202" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;dst&quot; over PICML::WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Average" metaref = "5540" kind = "PICML::Average"></role>
			<role name = "PICML::Jitter" metaref = "5541" kind = "PICML::Jitter"></role>
			<role name = "PICML::Maximum" metaref = "5542" kind = "PICML::Maximum"></role>
			<role name = "PICML::Minimum" metaref = "5543" kind = "PICML::Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "5544" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "5545" role = "PICML::Average" primary = "yes" linked = "no"></part>
				<part metaref = "5546" role = "PICML::Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "5547" role = "PICML::Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "5548" role = "PICML::Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::LookupOperation" metaref = "1620" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="lookup.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidCQML__OperationClassificationConndstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OperationClassificationConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationBase as &quot;dst&quot; over CQML::OperationClassificationConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "5549" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "5550" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5551" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5552" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5553" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::MPC" metaref = "1626" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Project" metaref = "5554" kind = "PICML::Project"></role>
			<role name = "PICML::Workspaces" metaref = "5555" kind = "PICML::Workspaces"></role>
			<aspect name = "Workspace" metaref = "5556" >
				<part metaref = "5557" role = "PICML::Project" primary = "yes" linked = "no"></part>
				<part metaref = "5558" role = "PICML::Workspaces" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Node" metaref = "1632" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node"></regnode>
			<role name = "PICML::Resource" metaref = "5559" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "5560" attributes = "label" >
				<part metaref = "5561" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Object" metaref = "1636" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="object.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[if (self.local = true) then
          true
          else
          let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
          parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
          endif]]>
				<dispname>A non-local Object cannot inherit from a local one</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[not local or not abstract]]>
				<dispname>An ObjectDef cannot be both local and abstract</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidCQML__InterfaceClassificationConndstCardinality28" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::InterfaceClassificationConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Object as &quot;dst&quot; over CQML::InterfaceClassificationConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "5562" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<attrdef name="local" metaref = "5563" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "CQML::OperationClassificationConn" metaref = "5564" kind = "CQML::OperationClassificationConn"></role>
			<role name = "CQML::RequiredRights" metaref = "5565" kind = "CQML::RequiredRights"></role>
			<role name = "PICML::Aggregate" metaref = "5566" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5567" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5568" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5569" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5570" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5571" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5572" kind = "PICML::Exception"></role>
			<role name = "PICML::Inherits" metaref = "5573" kind = "PICML::Inherits"></role>
			<role name = "PICML::OnewayOperation" metaref = "5574" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5575" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5576" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5577" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5578" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<part metaref = "5579" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5580" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5581" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5582" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5583" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5584" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5585" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5586" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5587" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5588" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5589" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5590" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5591" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<part metaref = "5592" role = "CQML::OperationClassificationConn" primary = "yes" linked = "no"></part>
				<part metaref = "5593" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "5594" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5595" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::OnewayOperation" metaref = "1664" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="oneway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidCQML__OperationClassificationConndstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OperationClassificationConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationBase as &quot;dst&quot; over CQML::OperationClassificationConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::InParameter" metaref = "5596" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5597" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5598" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::OutputAction" metaref = "4942" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="OutputAction.bmp"></regnode>
			<constraint name="UnknownOutput" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let parent : Component = self.parent () in
let ports = parent.parts (OutEventPort) in

ports.exists (iter : OutEventPort | iter->name () = self.name ())]]>
				<dispname>Name of the output action must match the name of output port</dispname>
			</constraint>
			<constraint name="ValidPICML__EffectdstCardinality114" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TransitionsrcCardinality197" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5599" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "5600" >
				<part metaref = "5601" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Package" metaref = "1668" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.parts ()->size > 0]]>
				<dispname>A package cannot be empty</dispname>
			</constraint>
			<constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[parts ()->forAll (
          x, y : gme::FCO | x.name == y.name implies (x == y or
          (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
          (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
          )
          ]]>
				<dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "CQML::InterfaceClassificationConn" metaref = "5602" kind = "CQML::InterfaceClassificationConn"></role>
			<role name = "CQML::RequiredRights" metaref = "5603" kind = "CQML::RequiredRights"></role>
			<role name = "PICML::Aggregate" metaref = "5604" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5605" kind = "PICML::Alias"></role>
			<role name = "PICML::Boxed" metaref = "5606" kind = "PICML::Boxed"></role>
			<role name = "PICML::Collection" metaref = "5607" kind = "PICML::Collection"></role>
			<role name = "PICML::Component" metaref = "5608" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentFactory" metaref = "5609" kind = "PICML::ComponentFactory"></role>
			<role name = "PICML::ComponentRef" metaref = "5610" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Constant" metaref = "5611" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5612" kind = "PICML::Enum"></role>
			<role name = "PICML::Event" metaref = "5613" kind = "PICML::Event"></role>
			<role name = "PICML::Exception" metaref = "5614" kind = "PICML::Exception"></role>
			<role name = "PICML::ManagesComponent" metaref = "5615" kind = "PICML::ManagesComponent"></role>
			<role name = "PICML::Object" metaref = "5616" kind = "PICML::Object"></role>
			<role name = "PICML::Package" metaref = "5617" kind = "PICML::Package"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5618" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::ValueObject" metaref = "5619" kind = "PICML::ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "5620" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<part metaref = "5621" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5622" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5623" role = "PICML::Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5624" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5625" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5626" role = "PICML::ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5627" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5628" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5629" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5630" role = "PICML::Event" primary = "yes" linked = "no"></part>
				<part metaref = "5631" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5632" role = "PICML::ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5633" role = "PICML::Object" primary = "yes" linked = "no"></part>
				<part metaref = "5634" role = "PICML::Package" primary = "yes" linked = "no"></part>
				<part metaref = "5635" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5636" role = "PICML::ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5637" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<part metaref = "5638" role = "CQML::InterfaceClassificationConn" primary = "yes" linked = "no"></part>
				<part metaref = "5639" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "5640" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5641" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5642" role = "PICML::Object" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PackageConfigurationContainer" metaref = "1702" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="PackageConfXor" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1
          xor self.referenceParts(ComponentPackageReference)->size = 1
          xor self.atomParts(ComponentPackage)->size = 1]]>
				<dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality226" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality227" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfiguration" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality228" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality229" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality230" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageConfigurationContainerPartCardinality231" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentPackage" metaref = "5643" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentPackageReference" metaref = "5644" kind = "PICML::ComponentPackageReference"></role>
			<role name = "PICML::ECConfiguration" metaref = "5645" kind = "PICML::ECConfiguration"></role>
			<role name = "PICML::PackageConfBasePackage" metaref = "5646" kind = "PICML::PackageConfBasePackage"></role>
			<role name = "PICML::PackageConfConfigProperty" metaref = "5647" kind = "PICML::PackageConfConfigProperty"></role>
			<role name = "PICML::PackageConfReference" metaref = "5648" kind = "PICML::PackageConfReference"></role>
			<role name = "PICML::PackageConfSelectRequirement" metaref = "5649" kind = "PICML::PackageConfSelectRequirement"></role>
			<role name = "PICML::PackageConfSpecializedConfig" metaref = "5650" kind = "PICML::PackageConfSpecializedConfig"></role>
			<role name = "PICML::PackageConfiguration" metaref = "5651" kind = "PICML::PackageConfiguration"></role>
			<role name = "PICML::Property" metaref = "5652" kind = "PICML::Property"></role>
			<role name = "PICML::RTConfiguration" metaref = "5653" kind = "PICML::RTConfiguration"></role>
			<role name = "PICML::Requirement" metaref = "5654" kind = "PICML::Requirement"></role>
			<aspect name = "Packaging" metaref = "5655" >
				<part metaref = "5656" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5657" role = "PICML::ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "5658" role = "PICML::ECConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5659" role = "PICML::PackageConfBasePackage" primary = "yes" linked = "no"></part>
				<part metaref = "5660" role = "PICML::PackageConfConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5661" role = "PICML::PackageConfReference" primary = "yes" linked = "no"></part>
				<part metaref = "5662" role = "PICML::PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5663" role = "PICML::PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
				<part metaref = "5664" role = "PICML::PackageConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5665" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5666" role = "PICML::RTConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5667" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PackageContainer" metaref = "1724" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingInterfaces" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let pkgInterface = self.referenceParts (ComponentRef) in
let impls = self.referenceParts(ComponentImplementationReference) in
  impls->forAll (i : ComponentImplementationReference | 
        let implementation: ComponentImplementation = i.refersTo() in
        let interfaces = implementation.connectedFCOs(Implements) in
            interfaces->forAll ( j: Component | 
               pkgInterface->forAll ( k: ComponentRef |
                       j.name() = k.refersTo().name() ) ) )]]>
				<dispname>Monolithic implementation in a ComponentPackage should all implement the same component interface</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageContainerPartCardinality232" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageContainerPartCardinality233" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PackageContainerPartCardinality234" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageInterface" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentImplementationReference" metaref = "5668" kind = "PICML::ComponentImplementationReference"></role>
			<role name = "PICML::ComponentPackage" metaref = "5669" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentRef" metaref = "5670" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Implementation" metaref = "5671" kind = "PICML::Implementation"></role>
			<role name = "PICML::PackageConfigProperty" metaref = "5672" kind = "PICML::PackageConfigProperty"></role>
			<role name = "PICML::PackageInfoProperty" metaref = "5673" kind = "PICML::PackageInfoProperty"></role>
			<role name = "PICML::PackageInterface" metaref = "5674" kind = "PICML::PackageInterface"></role>
			<role name = "PICML::Property" metaref = "5675" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5676" >
				<part metaref = "5677" role = "PICML::ComponentImplementationReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "5678" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5679" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5680" role = "PICML::Implementation" primary = "yes" linked = "no"></part>
				<part metaref = "5681" role = "PICML::PackageConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5682" role = "PICML::PackageInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5683" role = "PICML::PackageInterface" primary = "yes" linked = "no"></part>
				<part metaref = "5684" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Path" metaref = "2116" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::ComponentRef" metaref = "5685" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::ConnectedComponent" metaref = "5686" kind = "PICML::ConnectedComponent"></role>
			<role name = "PICML::DisplayNode" metaref = "5687" kind = "PICML::DisplayNode"></role>
			<role name = "PICML::DstEdge" metaref = "5688" kind = "PICML::DstEdge"></role>
			<role name = "PICML::Edge" metaref = "5689" kind = "PICML::Edge"></role>
			<role name = "PICML::EdgeProperty" metaref = "5690" kind = "PICML::EdgeProperty"></role>
			<role name = "PICML::InEventPort" metaref = "5691" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5692" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::Property" metaref = "5693" kind = "PICML::Property"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5694" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5695" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::SrcEdge" metaref = "5696" kind = "PICML::SrcEdge"></role>
			<aspect name = "PathDiagram" metaref = "5697" >
				<part metaref = "5698" role = "PICML::ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "5699" role = "PICML::ConnectedComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5700" role = "PICML::DisplayNode" primary = "yes" linked = "no"></part>
				<part metaref = "5701" role = "PICML::DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "5702" role = "PICML::Edge" primary = "yes" linked = "no"></part>
				<part metaref = "5703" role = "PICML::EdgeProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5704" role = "PICML::InEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5705" role = "PICML::OutEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5706" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5707" role = "PICML::ProvidedRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "5708" role = "PICML::RequiredRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "5709" role = "PICML::SrcEdge" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Paths" metaref = "3072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Path" metaref = "5710" kind = "PICML::Path"></role>
			<role name = "PICML::PathProperty" metaref = "5711" kind = "PICML::PathProperty"></role>
			<role name = "PICML::Property" metaref = "5712" kind = "PICML::Property"></role>
			<aspect name = "PathDiagram" metaref = "5713" >
				<part metaref = "5714" role = "PICML::Path" primary = "yes" linked = "no"></part>
				<part metaref = "5715" role = "PICML::PathProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5716" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Project" metaref = "1742" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="comp-proj.bmp"></regnode>
			<role name = "PICML::ExecutorProject" metaref = "5717" kind = "PICML::ExecutorProject"></role>
			<role name = "PICML::ExtResourceConn" metaref = "5718" kind = "PICML::ExtResourceConn"></role>
			<role name = "PICML::ExternalResources" metaref = "5719" kind = "PICML::ExternalResources"></role>
			<role name = "PICML::ImplementationArtifact" metaref = "5720" kind = "PICML::ImplementationArtifact"></role>
			<role name = "PICML::ServantProject" metaref = "5721" kind = "PICML::ServantProject"></role>
			<role name = "PICML::StubProject" metaref = "5722" kind = "PICML::StubProject"></role>
			<aspect name = "ComponentLibraries" metaref = "5723" >
				<part metaref = "5724" role = "PICML::ExecutorProject" primary = "yes" linked = "no"></part>
				<part metaref = "5725" role = "PICML::ExtResourceConn" primary = "yes" linked = "no"></part>
				<part metaref = "5726" role = "PICML::ExternalResources" primary = "yes" linked = "no"></part>
				<part metaref = "5727" role = "PICML::ServantProject" primary = "yes" linked = "no"></part>
				<part metaref = "5728" role = "PICML::StubProject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Property" metaref = "1755" attributes = "DataValue" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Property.bmp"></regnode>
			<constraint name="ValidPICML__AttributeMappingValuesrcCardinality87" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::AttributeMappingValue ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Property as &quot;src&quot; over PICML::AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__PropertyPartCardinality235" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::Property, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "5729" kind = "PICML::DataType"></role>
			<aspect name = "Packaging" metaref = "5730" attributes = "DataValue" >
				<part metaref = "5731" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::RTConfiguration" metaref = "3874" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<constraint name="ValidPICML__RTConfigurationPartCardinality236" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Connections" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTConfiguration, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__RTConfigurationPartCardinality237" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Multithreading" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTConfiguration, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::Connections" metaref = "5732" kind = "PICML::Connections"></role>
			<role name = "PICML::Multithreading" metaref = "5733" kind = "PICML::Multithreading"></role>
			<role name = "PICML::Property" metaref = "5734" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5735" attributes = "resourceType" >
				<part metaref = "5736" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "RealTimeRequirement" metaref = "5737" attributes = "resourceType" >
				<part metaref = "5738" role = "PICML::Connections" primary = "yes" linked = "no"></part>
				<part metaref = "5739" role = "PICML::Multithreading" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ReadonlyAttribute" metaref = "1785" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeDelegatesrcCardinality83" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;src&quot; over PICML::AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__AttributeValuedstCardinality90" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;dst&quot; over PICML::AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ReadonlyAttributePartCardinality238" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::AttributeMember" metaref = "5740" kind = "PICML::AttributeMember"></role>
			<role name = "PICML::GetException" metaref = "5741" kind = "PICML::GetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "5742" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5743" role = "PICML::AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5744" role = "PICML::GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Requirement" metaref = "1791" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<role name = "PICML::Property" metaref = "5745" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "5746" attributes = "resourceType" >
				<part metaref = "5747" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Resource" metaref = "1795" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Resource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "5748" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Target" metaref = "5749" attributes = "resourceType" >
				<part metaref = "5750" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SatisfierProperty" metaref = "1799" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
			<constraint name="ValidPICML__SatisfierPropertyPartCardinality239" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SatisfierProperty, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "5751" kind = "PICML::DataType"></role>
			<aspect name = "Target" metaref = "5752" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "5753" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "Packaging" metaref = "5754" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "5755" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ServantProject" metaref = "1803" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML__ServantProjectPartCardinality240" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::FileRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ServantProject, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__ServantProjectPartCardinality241" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ServantProject, has to match 1.</dispname>
			</constraint>
			<constraint name="servantOneInstance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only A servant project can exists as a part of the Component project</dispname>
			</constraint>
			<role name = "PICML::FileRef" metaref = "5756" kind = "PICML::FileRef"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5757" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "5758" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "5759" role = "PICML::FileRef" primary = "yes" linked = "no"></part>
				<part metaref = "5760" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SharedResource" metaref = "1809" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedResource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="ValidPICML__SharessrcCardinality187" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::Shares ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::SharedResource as &quot;src&quot; over PICML::Shares, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "5761" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Target" metaref = "5762" attributes = "resourceType" >
				<part metaref = "5763" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::StubProject" metaref = "1813" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML__StubProjectPartCardinality242" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::FileRef" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML__StubProjectPartCardinality243" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="stubOneInstance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only One stub project can exisit as a part of the Component project</dispname>
			</constraint>
			<role name = "PICML::FileRef" metaref = "5764" kind = "PICML::FileRef"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5765" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "5766" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "5767" role = "PICML::FileRef" primary = "yes" linked = "no"></part>
				<part metaref = "5768" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SwitchedAggregate" metaref = "1819" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
			<constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[parts (Member)->forAll (
          x : gme::FCO | let labels = x.connectedFCOs ()
          in
          labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
          )]]>
				<dispname>A default member cannot have multiple labels</dispname>
			</constraint>
			<constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[referenceParts (Discriminator) -> forAll (
          x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
          x.refersTo ().isTypeOf (Boolean) or
          x.refersTo ().isTypeOf (Byte) or
          x.refersTo ().isTypeOf (ShortInteger) or
          x.refersTo ().isTypeOf (LongInteger))]]>
				<dispname>Discriminator must have integer, character, boolean or enum type</dispname>
			</constraint>
			<constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
				<dispname>Labels in the same scope must be unique</dispname>
			</constraint>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML__SwitchedAggregatePartCardinality244" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::LabelConnection" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__SwitchedAggregatePartCardinality245" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Label" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML__SwitchedAggregatePartCardinality246" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Discriminator" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Discriminator" metaref = "5769" kind = "PICML::Discriminator"></role>
			<role name = "PICML::Label" metaref = "5770" kind = "PICML::Label"></role>
			<role name = "PICML::LabelConnection" metaref = "5771" kind = "PICML::LabelConnection"></role>
			<role name = "PICML::Member" metaref = "5772" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "5773" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5774" role = "PICML::Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5775" role = "PICML::Label" primary = "yes" linked = "no"></part>
				<part metaref = "5776" role = "PICML::LabelConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5777" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Throughput" metaref = "1829" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Throughput.bmp"></regnode>
			<constraint name="ValidPICML__BenchmarkCharacteristicssrcCardinality91" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__MetricConnectionsrcCardinality153" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PICML::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML__WorkloadCharacteristicsdstCardinality202" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PICML::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;dst&quot; over PICML::WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Average" metaref = "5778" kind = "PICML::Average"></role>
			<role name = "PICML::Jitter" metaref = "5779" kind = "PICML::Jitter"></role>
			<role name = "PICML::Maximum" metaref = "5780" kind = "PICML::Maximum"></role>
			<role name = "PICML::Minimum" metaref = "5781" kind = "PICML::Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "5782" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "5783" role = "PICML::Average" primary = "yes" linked = "no"></part>
				<part metaref = "5784" role = "PICML::Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "5785" role = "PICML::Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "5786" role = "PICML::Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::TopLevelPackageContainer" metaref = "1839" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
			<constraint name="ValidPICML__TopLevelPackageContainerPartCardinality248" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TopLevelPackageContainerPartCardinality249" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TopLevelPackageContainerPartCardinality250" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::package" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::PackageConfigurationReference" metaref = "5787" kind = "PICML::PackageConfigurationReference"></role>
			<role name = "PICML::TopLevelPackage" metaref = "5788" kind = "PICML::TopLevelPackage"></role>
			<role name = "PICML::package" metaref = "5789" kind = "PICML::package"></role>
			<aspect name = "Packaging" metaref = "5790" >
				<part metaref = "5791" role = "PICML::PackageConfigurationReference" primary = "yes" linked = "no"></part>
				<part metaref = "5792" role = "PICML::TopLevelPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5793" role = "PICML::package" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::TwowayOperation" metaref = "1847" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="twoway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidCQML__OperationClassificationConndstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CQML::OperationClassificationConn ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationBase as &quot;dst&quot; over CQML::OperationClassificationConn, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML__TwowayOperationPartCardinality251" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ReturnType" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TwowayOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "5794" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "5795" kind = "PICML::InParameter"></role>
			<role name = "PICML::InoutParameter" metaref = "5796" kind = "PICML::InoutParameter"></role>
			<role name = "PICML::OutParameter" metaref = "5797" kind = "PICML::OutParameter"></role>
			<role name = "PICML::ReturnType" metaref = "5798" kind = "PICML::ReturnType"></role>
			<aspect name = "InterfaceDefinition" metaref = "5799" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5800" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5801" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5802" role = "PICML::InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5803" role = "PICML::OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5804" role = "PICML::ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ValueObject" metaref = "1859" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="value.bmp"></regnode>
			<constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let concrete_parents =
          self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" defdfornamesp = "PICML" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "5805" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "CQML::OperationClassificationConn" metaref = "5806" kind = "CQML::OperationClassificationConn"></role>
			<role name = "CQML::RequiredRights" metaref = "5807" kind = "CQML::RequiredRights"></role>
			<role name = "PICML::Aggregate" metaref = "5808" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5809" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5810" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5811" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5812" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5813" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5814" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "5815" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "5816" kind = "PICML::Inherits"></role>
			<role name = "PICML::MakeMemberPrivate" metaref = "5817" kind = "PICML::MakeMemberPrivate"></role>
			<role name = "PICML::Member" metaref = "5818" kind = "PICML::Member"></role>
			<role name = "PICML::OnewayOperation" metaref = "5819" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::PrivateFlag" metaref = "5820" kind = "PICML::PrivateFlag"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5821" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "5822" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5823" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5824" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5825" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "5826" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5827" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5828" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5829" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5830" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5831" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5832" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5833" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5834" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5835" role = "PICML::MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "5836" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5837" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5838" role = "PICML::PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "5839" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5840" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5841" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5842" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "5843" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "5844" role = "CQML::OperationClassificationConn" primary = "yes" linked = "no"></part>
				<part metaref = "5845" role = "CQML::RequiredRights" primary = "yes" linked = "no"></part>
				<part metaref = "5846" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5847" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5848" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Worker" metaref = "4959" attributes = "Abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="worker.gif"></regnode>
			<role name = "PICML::Action" metaref = "5849" kind = "PICML::Action"></role>
			<aspect name = "Behavior" metaref = "5850" attributes = "Abstract" >
				<part metaref = "5851" role = "PICML::Action" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerFile" metaref = "4962" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="file.bmp"></regnode>
			<role name = "PICML::Worker" metaref = "5852" kind = "PICML::Worker"></role>
			<role name = "PICML::WorkerPackage" metaref = "5853" kind = "PICML::WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "5854" attributes = "Location" >
				<part metaref = "5855" role = "PICML::Worker" primary = "yes" linked = "no"></part>
				<part metaref = "5856" role = "PICML::WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerLibrary" metaref = "4967" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueWorker" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let workers = self->parts (Worker) in
    workers->isUnique (iter : Worker | iter->name ())]]>
				<dispname>Worker library constains duplicate worker names</dispname>
			</constraint>
			<role name = "PICML::WorkerFile" metaref = "5857" kind = "PICML::WorkerFile"></role>
			<aspect name = "Behavior" metaref = "5858" attributes = "Location" >
				<part metaref = "5859" role = "PICML::WorkerFile" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerPackage" metaref = "4970" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<role name = "PICML::Worker" metaref = "5860" kind = "PICML::Worker"></role>
			<role name = "PICML::WorkerPackage" metaref = "5861" kind = "PICML::WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "5862" >
				<part metaref = "5863" role = "PICML::Worker" primary = "yes" linked = "no"></part>
				<part metaref = "5864" role = "PICML::WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<folder name = "PICML::ComponentAnalyses" metaref = "1896"  rootobjects = "PICML::BenchmarkAnalysis" >
		</folder>
		<folder name = "PICML::ComponentBuild" metaref = "1897"  rootobjects = "PICML::MPC" >
		</folder>
		<folder name = "PICML::ComponentImplementations" metaref = "1898"  rootobjects = "PICML::ComponentImplementationContainer" >
			<constraint name="UniqueComponentImplementations" eventmask = "0x0" depth = "1" defdfornamesp = "PICML" priority = "2">
				<![CDATA[let artifacts = self.models(ComponentImplementationContainer) in
   artifacts->isUnique (i : ComponentImplementationContainer | i.name.trim())]]>
				<dispname>ComponentImplementationContainers should have unique names</dispname>
			</constraint>
		</folder>
		<folder name = "PICML::ComponentPackages" metaref = "1899"  rootobjects = "PICML::PackageContainer" >
		</folder>
		<folder name = "PICML::ComponentTypes" metaref = "1900"  rootobjects = "PICML::ComponentContainer" >
		</folder>
		<folder name = "PICML::DeploymentPlans" metaref = "1901"  rootobjects = "PICML::DeploymentPlan" >
		</folder>
		<folder name = "PICML::ImplementationArtifacts" metaref = "1903"  rootobjects = "PICML::ArtifactContainer" >
		</folder>
		<folder name = "PICML::InterfaceDefinitions" metaref = "1904"  rootobjects = "PICML::File" >
			<constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" defdfornamesp = "PICML" priority = "1">
				<![CDATA[allFileScopeDecls ()->forAll (
          x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
          )]]>
				<dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
			</constraint>
		</folder>
		<folder name = "PICML::PackageConfigurations" metaref = "1905"  rootobjects = "PICML::PackageConfigurationContainer" >
		</folder>
		<folder name = "PICML::PathDiagrams" metaref = "3173"  rootobjects = "PICML::Paths" >
		</folder>
		<folder name = "PICML::PredefinedTypes" metaref = "1906"  rootobjects = "PICML::Boolean PICML::Byte PICML::GenericObject PICML::GenericValue PICML::GenericValueObject PICML::LongInteger PICML::RealNumber PICML::ShortInteger PICML::String PICML::TypeEncoding PICML::TypeKind" >
		</folder>
		<folder name = "PICML::Targets" metaref = "1907"  rootobjects = "PICML::Domain" >
		</folder>
		<folder name = "PICML::TopLevelPackages" metaref = "1908"  rootobjects = "PICML::TopLevelPackageContainer" >
		</folder>
		<folder name = "PICML::WorkerLibraries" metaref = "4975"  rootobjects = "PICML::WorkerLibrary" >
		</folder>
	</folder>
</paradigm>
