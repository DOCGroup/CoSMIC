<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name="SIML" version="0.1" guid="{223189F3-87FA-4C95-A03D-0F711E25DDB5}" cdate="Fri Aug 04 12:13:22 2006" mdate="Fri Aug 04 12:13:22 2006" >

	<comment>System Integration Modeling Language (SIML) is a domain-specific modeling 
language that allows integration of systems using different middleware 
technologies like CORBA Component Model (CCM) and Web Services.</comment>

	<author>Krishnakumar B</author>

	<folder name = "RootFolder" metaref = "1000"  subfolders = "PICML::ComponentAnalyses PICML::ComponentBuild PICML::ComponentImplementations PICML::ComponentPackages PICML::ComponentTypes PICML::DeploymentPlans PICML::EventChannelConfig PICML::FaultTolerance PICML::ImplementationArtifacts PICML::InterfaceDefinitions PICML::PackageConfigurations PICML::PathDiagrams PICML::PredefinedTypes PICML::QoSModeling PICML::Targets PICML::TopLevelPackages PICML::WorkerLibraries" rootobjects = "PICML::FTRequirements PICML::RTConfiguration SIML::System WSML::Definitions WSML::Schema WSML::SchemaBuiltins" >
		<constraint name="PriorityDispatching_Constraint" eventmask = "0x0" depth = "1" priority = "2">
			<![CDATA[true]]>
			<dispname>Priority dispatching requires priorities for all connected ports</dispname>
		</constraint>
		<constraint type="function" name="AllParams" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
		</constraint>
		<constraint type="function" name="ComponentParentType" defdfornamesp = "PICML">
			<![CDATA[method;gme::FCO;;gme::FCO;
			if self.isInstance()
then
   let myType = self.type() in
   if myType.isType()
   then
      myType
   else
      myType.ComponentParentType()
   endif
else
   self
endif]]>
		</constraint>
		<constraint type="function" name="ConnectorParents" defdfornamesp = "PICML">
			<![CDATA[method;gme::Reference;;ocl::Bag;
			self.connectedFCOs(publish)->iterate (c : gme::FCO; acc = Bag{} | acc + Bag{c.parent()})]]>
		</constraint>
		<constraint type="function" name="MonolithicImpls" defdfornamesp = "PICML">
			<![CDATA[method;gme::Atom;;ocl::Set;
			self.connectedFCOs(Implementation)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="allAscendants" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;visited: ocl::Set;ocl::Set;
			let parents = self.ascendants() in
   let visited = visited.including(self) in
   parents->iterate( i : gme::Model ; accu = Set{} |
      if ( visited.includes(i) or i = self ) then
         accu.including(i)
      else
         accu.including(i) + i.allAscendants(visited)
      endif
)]]>
		</constraint>
		<constraint type="function" name="allFileScopeDecls" defdfornamesp = "PICML">
			<![CDATA[method;gme::Folder;;ocl::Set;
			let closure = self.models ("File") in
          if (closure->size < 1) then
          Set{}
          else
          closure->iterate (x ; accu = Set{} | accu
          + x.parts ()
          - x.parts ("FileRef")
          - x.parts ("ComponentRef")
          - x.parts ("ManagesComponent"))
          endif]]>
		</constraint>
		<constraint type="function" name="allOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
			let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
          ret]]>
		</constraint>
		<constraint type="function" name="ascendants" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.referenceParts(Inherits)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="getNodeGroupNodes" defdfornamesp = "PICML">
			<![CDATA[method;NodeGroup;;ocl::Bag;
			self.referenceParts(NodeRef)->iterate (s: NodeRef; refbag : Bag = Bag{} | refbag + Bag{s.refersTo()} )]]>
		</constraint>
		<constraint type="function" name="getNodes" defdfornamesp = "PICML">
			<![CDATA[method;SharedRiskGroup;;ocl::Bag;
			self.referenceParts(NodeRef)->iterate (s: NodeRef; refbag : Bag = Bag{} | refbag + Bag{s.refersTo()} )]]>
		</constraint>
		<constraint type="function" name="inheritedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let parents = self.referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          if (parent == top) then Set{}
          else
          parent.localOps () + parent.inheritedOps (top)
          endif))]]>
		</constraint>
		<constraint type="function" name="inheritedSupportedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			let parents= referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
		</constraint>
		<constraint type="function" name="inheritsRecursive" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let inherits = referenceParts ("Inherits") in
          inherits->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          Set {parent} +
          (if (parent != top) then parent.inheritsRecursive (top)
          else Set {}
          endif)))]]>
		</constraint>
		<constraint type="function" name="localOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
          self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
		</constraint>
		<constraint type="function" name="supportedOps" defdfornamesp = "PICML">
			<![CDATA[method;gme::Model;;ocl::Set;
			let supported_set = referenceParts ("Supports") in
          supported_set->iterate (ref; accu = Set{} | accu +
          (let supported = ref.refersTo ().oclAsType (gme::Model) in
          supported.localOps () + supported.inheritedOps (supported)))]]>
		</constraint>
		<attrdef name="Abstract" metaref = "5100" valuetype = "boolean" defvalue = "false">
			<dispname>Abstract:</dispname>
			<regnode name="help" value = "Flag that specifys if the worker is abstract. An abstract worker is one that cannot be used directly in a class as a worker. However, it can be subclassed by other workers."></regnode>
		</attrdef>
		<attrdef name="Arch" metaref = "2400" valuetype = "enum" defvalue = "i386">
			<dispname>Archetecture</dispname>
			<enumitem dispname = "i386" value = "i386"></enumitem>
			<enumitem dispname = "PPC" value = "PPC"></enumitem>
			<enumitem dispname = "SPARC" value = "SPARC"></enumitem>
		</attrdef>
		<attrdef name="CmdLineOptions" metaref = "2723" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="DataValue" metaref = "1001" valuetype = "string" defvalue = "">
			<dispname>value</dispname>
		</attrdef>
		<attrdef name="DocText" metaref = "3448" valuetype = "string" defvalue = "">
			<regnode name="multiLine" value = "10"></regnode>
		</attrdef>
		<attrdef name="ECConsumerControl" metaref = "1002" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "reactive" value = "reactive"></enumitem>
		</attrdef>
		<attrdef name="ECConsumerControlPeriod" metaref = "1003" valuetype = "integer" defvalue = "5000000">
		</attrdef>
		<attrdef name="ECConsumerLock" metaref = "1004" valuetype = "enum" defvalue = "thread (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "thread (default)" value = "thread (default)"></enumitem>
			<enumitem dispname = "recursive" value = "recursive"></enumitem>
		</attrdef>
		<attrdef name="ECDispatching" metaref = "1005" valuetype = "enum" defvalue = "reactive (default)">
			<enumitem dispname = "reactive (default)" value = "reactive (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
			<enumitem dispname = "mt" value = "mt"></enumitem>
		</attrdef>
		<attrdef name="ECDispatchingThreads" metaref = "1006" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="ECFiltering" metaref = "1007" valuetype = "enum" defvalue = "basic (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "basic (default)" value = "basic (default)"></enumitem>
			<enumitem dispname = "prefix" value = "prefix"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECObserver" metaref = "1008" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "basic" value = "basic"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionFlag" metaref = "1009" valuetype = "enum" defvalue = "list (default)">
			<enumitem dispname = "list (default)" value = "list (default)"></enumitem>
			<enumitem dispname = "rb_tree" value = "rb_tree"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionIterator" metaref = "1010" valuetype = "enum" defvalue = "immediate (default)">
			<enumitem dispname = "copy_on_read" value = "copy_on_read"></enumitem>
			<enumitem dispname = "copy_on_write" value = "copy_on_write"></enumitem>
			<enumitem dispname = "delayed" value = "delayed"></enumitem>
			<enumitem dispname = "immediate (default)" value = "immediate (default)"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushConsumerCollectionSynch" metaref = "1011" valuetype = "enum" defvalue = "mt (default)">
			<enumitem dispname = "mt (default)" value = "mt (default)"></enumitem>
			<enumitem dispname = "st" value = "st"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionFlag" metaref = "1012" valuetype = "enum" defvalue = "list (default)">
			<enumitem dispname = "list (default)" value = "list (default)"></enumitem>
			<enumitem dispname = "rb_tree" value = "rb_tree"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionIterator" metaref = "1013" valuetype = "enum" defvalue = "immediate (default)">
			<enumitem dispname = "copy_on_read" value = "copy_on_read"></enumitem>
			<enumitem dispname = "copy_on_write" value = "copy_on_write"></enumitem>
			<enumitem dispname = "delayed" value = "delayed"></enumitem>
			<enumitem dispname = "immediate (default)" value = "immediate (default)"></enumitem>
		</attrdef>
		<attrdef name="ECProxyPushSupplierCollectionSynch" metaref = "1014" valuetype = "enum" defvalue = "mt (default)">
			<enumitem dispname = "mt (default)" value = "mt (default)"></enumitem>
			<enumitem dispname = "st" value = "st"></enumitem>
		</attrdef>
		<attrdef name="ECScheduling" metaref = "1015" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierControl" metaref = "1016" valuetype = "enum" defvalue = "null (default)">
			<enumitem dispname = "null (default)" value = "null (default)"></enumitem>
			<enumitem dispname = "reactive" value = "reactive"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierControlPeriod" metaref = "1017" valuetype = "integer" defvalue = "5000000">
		</attrdef>
		<attrdef name="ECSupplierFiltering" metaref = "1018" valuetype = "enum" defvalue = "per-supplier (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "per-supplier (default)" value = "per-supplier (default)"></enumitem>
		</attrdef>
		<attrdef name="ECSupplierLock" metaref = "1019" valuetype = "enum" defvalue = "thread (default)">
			<enumitem dispname = "null" value = "null"></enumitem>
			<enumitem dispname = "thread (default)" value = "thread (default)"></enumitem>
			<enumitem dispname = "recursive" value = "recursive"></enumitem>
		</attrdef>
		<attrdef name="ECTimeout" metaref = "1020" valuetype = "enum" defvalue = "reactive (default)">
			<enumitem dispname = "reactive (default)" value = "reactive (default)"></enumitem>
			<enumitem dispname = "priority" value = "priority"></enumitem>
		</attrdef>
		<attrdef name="ECUseORBId" metaref = "1021" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Latency" metaref = "2401" valuetype = "double" defvalue = "">
			<dispname>Latency (ms)</dispname>
		</attrdef>
		<attrdef name="LinkSpeed" metaref = "2402" valuetype = "double" defvalue = "0">
			<dispname>Link Speed (kBps)</dispname>
		</attrdef>
		<attrdef name="Location" metaref = "5101" valuetype = "string" defvalue = "">
			<dispname>Location</dispname>
			<regnode name="help" value = "Specifies the location of the object on disk. It can be a relative or absolute location."></regnode>
		</attrdef>
		<attrdef name="LogAction" metaref = "5102" valuetype = "boolean" defvalue = "false">
			<dispname>Enable Logging:</dispname>
			<regnode name="help" value = "This determines whether or not to log an action. The semantics of logging is dependent on the interpreter."></regnode>
		</attrdef>
		<attrdef name="MaxRequests" metaref = "2403" valuetype = "double" defvalue = "">
		</attrdef>
		<attrdef name="Metric" metaref = "3270" valuetype = "double" defvalue = "0.0">
		</attrdef>
		<attrdef name="Mixed" metaref = "3451" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="ORBServices" metaref = "1022" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Order" metaref = "3452" valuetype = "integer" defvalue = "0">
			<regnode name="help" value = "Determines the processing order of child Elements of an Element"></regnode>
		</attrdef>
		<attrdef name="Period" metaref = "5103" valuetype = "integer" defvalue = "1000">
			<dispname>Period (msec):</dispname>
			<regnode name="help" value = "The period of the action. The units of value is milliseconds."></regnode>
		</attrdef>
		<attrdef name="Postcondition" metaref = "5104" valuetype = "string" defvalue = "">
			<dispname>Postcondition:</dispname>
			<regnode name="help" value = "Defines the effects of executing the previous action."></regnode>
		</attrdef>
		<attrdef name="Precondition" metaref = "5105" valuetype = "string" defvalue = "">
			<dispname>Precondition:</dispname>
			<regnode name="help" value = "Defines the condition that allows execution of the next action."></regnode>
		</attrdef>
		<attrdef name="PrefixTag" metaref = "1023" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Priority" metaref = "2724" valuetype = "string" defvalue = "0">
		</attrdef>
		<attrdef name="PriorityModel" metaref = "2725" valuetype = "enum" defvalue = "CLIENT_PROPAGATED">
			<enumitem dispname = "CLIENT_PROPAGATED" value = "CLIENT_PROPAGATED"></enumitem>
			<enumitem dispname = "SERVER_DECLARED" value = "SERVER_DECLARED"></enumitem>
		</attrdef>
		<attrdef name="Probability" metaref = "5106" valuetype = "double" defvalue = "1.0">
			<dispname>Probability</dispname>
			<regnode name="help" value = "The probability of the action occurring."></regnode>
		</attrdef>
		<attrdef name="ProcessPriority" metaref = "2404" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Protocol" metaref = "2405" valuetype = "enum" defvalue = "TCP">
			<dispname>Protocol</dispname>
			<enumitem dispname = "TCP" value = "TCP"></enumitem>
			<enumitem dispname = "UDP" value = "UDP"></enumitem>
			<enumitem dispname = "SCTP" value = "SCTP"></enumitem>
		</attrdef>
		<attrdef name="Qualification" metaref = "2309" valuetype = "enum" defvalue = "Gaurantee">
			<enumitem dispname = "Gaurantee" value = "Gaurantee"></enumitem>
			<enumitem dispname = "BestEffort" value = "BestEffort"></enumitem>
			<enumitem dispname = "ThresholdBestEffort" value = "ThresholdBestEffort"></enumitem>
			<enumitem dispname = "CompulsoryBestEffort" value = "CompulsoryBestEffort"></enumitem>
			<enumitem dispname = "None" value = "None"></enumitem>
		</attrdef>
		<attrdef name="Repetitions" metaref = "5107" valuetype = "integer" defvalue = "1">
			<dispname>Number of Repeitions:</dispname>
			<regnode name="help" value = "Specifies the number of repetitions for an operation. Actions with 0 repetitions are considered non-repetitive actions."></regnode>
		</attrdef>
		<attrdef name="ResourceUsageKind" metaref = "1024" valuetype = "enum" defvalue = "None">
			<dispname>resourceUsage</dispname>
			<enumitem dispname = "None" value = "None"></enumitem>
			<enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
			<enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesPort" value = "ResourceUsesPort"></enumitem>
		</attrdef>
		<attrdef name="SMP" metaref = "2406" valuetype = "integer" defvalue = "1">
			<dispname>No. of Proc</dispname>
		</attrdef>
		<attrdef name="SatisfierPropertyKind" metaref = "1025" valuetype = "enum" defvalue = "Quantity">
			<dispname>kind</dispname>
			<enumitem dispname = "Quantity" value = "Quantity"></enumitem>
			<enumitem dispname = "Capacity" value = "Capacity"></enumitem>
			<enumitem dispname = "Minimum" value = "Minimum"></enumitem>
			<enumitem dispname = "Maximum" value = "Maximum"></enumitem>
			<enumitem dispname = "Selection" value = "Selection"></enumitem>
			<enumitem dispname = "Attribute" value = "Attribute"></enumitem>
		</attrdef>
		<attrdef name="Scheduling" metaref = "2407" valuetype = "enum" defvalue = "FIFO">
			<enumitem dispname = "FIFO" value = "FIFO"></enumitem>
			<enumitem dispname = "RR" value = "RR"></enumitem>
			<enumitem dispname = "OTHER" value = "OTHER"></enumitem>
		</attrdef>
		<attrdef name="SpecifyIdTag" metaref = "1026" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="SvcConf" metaref = "2726" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Transport" metaref = "2679" valuetype = "enum" defvalue = "IPv4">
			<enumitem dispname = "IPv4" value = "IPv4"></enumitem>
			<enumitem dispname = "IPv6" value = "IPv6"></enumitem>
		</attrdef>
		<attrdef name="UUID" metaref = "1027" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Value" metaref = "3458" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="VersionTag" metaref = "1028" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="allow_borrowing" metaref = "2727" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="allow_request_buffering" metaref = "2728" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="benchmarkIterations" metaref = "1029" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="cached_execution_time" metaref = "1030" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="componentPort" metaref = "1031" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="configuration" metaref = "1032" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="criticality" metaref = "1033" valuetype = "enum" defvalue = "MEDIUM_CRITICALITY">
			<enumitem dispname = "VERY_LOW_CRITICALITY" value = "VERY_LOW_CRITICALITY"></enumitem>
			<enumitem dispname = "LOW_CRITICALITY" value = "LOW_CRITICALITY"></enumitem>
			<enumitem dispname = "MEDIUM_CRITICALITY" value = "MEDIUM_CRITICALITY"></enumitem>
			<enumitem dispname = "HIGH_CRITICALITY" value = "HIGH_CRITICALITY"></enumitem>
			<enumitem dispname = "VERY_HIGH_CRITICALITY" value = "VERY_HIGH_CRITICALITY"></enumitem>
		</attrdef>
		<attrdef name="direction" metaref = "2310" valuetype = "enum" defvalue = "Undefined">
			<dispname>Order relation</dispname>
			<enumitem dispname = "Increasing" value = "Increasing"></enumitem>
			<enumitem dispname = "Decreasing" value = "Decreasing"></enumitem>
			<enumitem dispname = "Undefined" value = "Undefined"></enumitem>
		</attrdef>
		<attrdef name="dynamic" metaref = "3175" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="dynamic_threads" metaref = "2729" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="enabled" metaref = "1034" valuetype = "enum" defvalue = "DEPENDENCY_NON_VOLATILE">
			<enumitem dispname = "DEPENDENCY_DISABLED" value = "DEPENDENCY_DISABLED"></enumitem>
			<enumitem dispname = "DEPENDENCY_ENABLED" value = "DEPENDENCY_ENABLED"></enumitem>
			<enumitem dispname = "DEPENDENCY_NON_VOLATILE" value = "DEPENDENCY_NON_VOLATILE"></enumitem>
		</attrdef>
		<attrdef name="encodingStyle" metaref = "3459" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="entry_point" metaref = "1035" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="exclusiveProvider" metaref = "1036" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveUser" metaref = "1037" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="fileName" metaref = "1038" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="high" metaref = "2730" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="id" metaref = "3460" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="importance" metaref = "1039" valuetype = "enum" defvalue = "MEDIUM_IMPORTANCE">
			<enumitem dispname = "VERY_LOW_IMPORTANCE" value = "VERY_LOW_IMPORTANCE"></enumitem>
			<enumitem dispname = "LOW_IMPORTANCE" value = "LOW_IMPORTANCE"></enumitem>
			<enumitem dispname = "MEDIUM_IMPORTANCE" value = "MEDIUM_IMPORTANCE"></enumitem>
			<enumitem dispname = "HIGH_IMPORTANCE" value = "HIGH_IMPORTANCE"></enumitem>
			<enumitem dispname = "VERY_HIGH_IMPORTANCE" value = "VERY_HIGH_IMPORTANCE"></enumitem>
		</attrdef>
		<attrdef name="info_type" metaref = "1040" valuetype = "enum" defvalue = "OPERATION">
			<enumitem dispname = "OPERATION" value = "OPERATION"></enumitem>
			<enumitem dispname = "CONJUNCTION" value = "CONJUNCTION"></enumitem>
			<enumitem dispname = "DISJUNCTION" value = "DISJUNCTION"></enumitem>
			<enumitem dispname = "REMOTE_DEPENDANT" value = "REMOTE_DEPENDANT"></enumitem>
		</attrdef>
		<attrdef name="isInvariant" metaref = "2311" valuetype = "boolean" defvalue = "false">
			<dispname>Updateable at runtime?</dispname>
		</attrdef>
		<attrdef name="isQoSObservation" metaref = "2312" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="iterations" metaref = "1041" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="label" metaref = "1042" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="lane_priority" metaref = "2731" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="language" metaref = "6402" valuetype = "enum" defvalue = "CPP">
			<enumitem dispname = "CPP" value = "CPP"></enumitem>
			<enumitem dispname = "Java" value = "Java"></enumitem>
			<enumitem dispname = "CSharp" value = "CSharp"></enumitem>
		</attrdef>
		<attrdef name="libraryexport" metaref = "1043" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="location" metaref = "1044" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="low" metaref = "2732" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="max_buffer_size" metaref = "2733" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="max_buffered_requests" metaref = "2734" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="optional" metaref = "1045" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="out_event_port_type" metaref = "1046" valuetype = "enum" defvalue = "DirectConnect">
			<enumitem dispname = "DirectConnect" value = "DirectConnect"></enumitem>
			<enumitem dispname = "RTEventChannel" value = "RTEventChannel"></enumitem>
		</attrdef>
		<attrdef name="parameterOrder" metaref = "3462" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="period" metaref = "1047" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="portName" metaref = "6411" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="portType" metaref = "6404" valuetype = "enum" defvalue = "Facet">
			<enumitem dispname = "Facet" value = "Facet"></enumitem>
			<enumitem dispname = "Receptacle" value = "Receptacle"></enumitem>
			<enumitem dispname = "EventSource" value = "EventSource"></enumitem>
			<enumitem dispname = "EventSink" value = "EventSink"></enumitem>
			<enumitem dispname = "RequestResponse" value = "RequestResponse"></enumitem>
			<enumitem dispname = "Oneway" value = "Oneway"></enumitem>
		</attrdef>
		<attrdef name="priority" metaref = "1048" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="quantum" metaref = "1049" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="rate" metaref = "1050" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="required" metaref = "3463" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="requiredName" metaref = "1051" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredType" metaref = "1052" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredUUID" metaref = "1053" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resolution" metaref = "1054" valuetype = "enum" defvalue = "microseconds">
			<enumitem dispname = "seconds" value = "seconds"></enumitem>
			<enumitem dispname = "miliseconds" value = "miliseconds"></enumitem>
			<enumitem dispname = "microseconds" value = "microseconds"></enumitem>
		</attrdef>
		<attrdef name="resourcePort" metaref = "1055" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resourceType" metaref = "1056" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="schemaLocation" metaref = "3464" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="schemaType" metaref = "3465" valuetype = "enum" defvalue = "local">
			<enumitem dispname = "local" value = "local"></enumitem>
			<enumitem dispname = "element" value = "element"></enumitem>
			<enumitem dispname = "attribute" value = "attribute"></enumitem>
			<enumitem dispname = "complexType" value = "complexType"></enumitem>
			<enumitem dispname = "simpleType" value = "simpleType"></enumitem>
			<enumitem dispname = "include" value = "include"></enumitem>
			<enumitem dispname = "import" value = "import"></enumitem>
			<enumitem dispname = "redefine" value = "redefine"></enumitem>
			<enumitem dispname = "any" value = "any"></enumitem>
			<enumitem dispname = "anyAttribute" value = "anyAttribute"></enumitem>
			<enumitem dispname = "group" value = "group"></enumitem>
			<enumitem dispname = "attributeGroup" value = "attributeGroup"></enumitem>
			<enumitem dispname = "key" value = "key"></enumitem>
			<enumitem dispname = "keyref" value = "keyref"></enumitem>
			<enumitem dispname = "unique" value = "unique"></enumitem>
			<enumitem dispname = "annotation" value = "annotation"></enumitem>
			<enumitem dispname = "documentation" value = "documentation"></enumitem>
			<enumitem dispname = "appinfo" value = "appinfo"></enumitem>
			<enumitem dispname = "notation" value = "notation"></enumitem>
		</attrdef>
		<attrdef name="sharedname" metaref = "1057" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="soapAction" metaref = "3466" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="stacksize" metaref = "2735" valuetype = "integer" defvalue = "0">
		</attrdef>
		<attrdef name="static_threads" metaref = "2736" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="statisticalQualifier" metaref = "2313" valuetype = "enum" defvalue = "MaxValue">
			<dispname>Relational Comparitor?</dispname>
			<enumitem dispname = "MaxValue" value = "MaxValue"></enumitem>
			<enumitem dispname = "MinValue" value = "MinValue"></enumitem>
			<enumitem dispname = "Range" value = "Range"></enumitem>
			<enumitem dispname = "Mean" value = "Mean"></enumitem>
			<enumitem dispname = "Variance" value = "Variance"></enumitem>
			<enumitem dispname = "StdDev" value = "StdDev"></enumitem>
			<enumitem dispname = "Percentile" value = "Percentile"></enumitem>
			<enumitem dispname = "Frequency" value = "Frequency"></enumitem>
			<enumitem dispname = "Moment" value = "Moment"></enumitem>
			<enumitem dispname = "Distribution" value = "Distribution"></enumitem>
		</attrdef>
		<attrdef name="style" metaref = "3467" valuetype = "enum" defvalue = "document">
			<enumitem dispname = "document" value = "document"></enumitem>
			<enumitem dispname = "rpc" value = "rpc"></enumitem>
		</attrdef>
		<attrdef name="threads" metaref = "1058" valuetype = "integer" defvalue = "1">
		</attrdef>
		<attrdef name="timeperiod" metaref = "1059" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="transport" metaref = "3468" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="typeCode" metaref = "1554" valuetype = "enum" defvalue = "string">
			<enumitem dispname = "string" value = "string"></enumitem>
			<enumitem dispname = "boolean" value = "boolean"></enumitem>
			<enumitem dispname = "float" value = "float"></enumitem>
			<enumitem dispname = "double" value = "double"></enumitem>
			<enumitem dispname = "decimal" value = "decimal"></enumitem>
			<enumitem dispname = "duration" value = "duration"></enumitem>
			<enumitem dispname = "dateTime" value = "dateTime"></enumitem>
			<enumitem dispname = "time" value = "time"></enumitem>
			<enumitem dispname = "date" value = "date"></enumitem>
			<enumitem dispname = "gYearMonth" value = "gYearMonth"></enumitem>
			<enumitem dispname = "gYear" value = "gYear"></enumitem>
			<enumitem dispname = "gMonthDay" value = "gMonthDay"></enumitem>
			<enumitem dispname = "gDay" value = "gDay"></enumitem>
			<enumitem dispname = "gMonth" value = "gMonth"></enumitem>
			<enumitem dispname = "hexBinary" value = "hexBinary"></enumitem>
			<enumitem dispname = "base64Binary" value = "base64Binary"></enumitem>
			<enumitem dispname = "anyURI" value = "anyURI"></enumitem>
			<enumitem dispname = "QName" value = "QName"></enumitem>
			<enumitem dispname = "NOTATION" value = "NOTATION"></enumitem>
			<enumitem dispname = "normalizedString" value = "normalizedString"></enumitem>
			<enumitem dispname = "token" value = "token"></enumitem>
			<enumitem dispname = "language" value = "language"></enumitem>
			<enumitem dispname = "IDREFS" value = "IDREFS"></enumitem>
			<enumitem dispname = "ENTITIES" value = "ENTITIES"></enumitem>
			<enumitem dispname = "NMTOKEN" value = "NMTOKEN"></enumitem>
			<enumitem dispname = "NMTOKENS" value = "NMTOKENS"></enumitem>
			<enumitem dispname = "name" value = "name"></enumitem>
			<enumitem dispname = "NCName" value = "NCName"></enumitem>
			<enumitem dispname = "ID" value = "ID"></enumitem>
			<enumitem dispname = "IDREF" value = "IDREF"></enumitem>
			<enumitem dispname = "ENTITY" value = "ENTITY"></enumitem>
			<enumitem dispname = "integer" value = "integer"></enumitem>
			<enumitem dispname = "nonPositiveInteger" value = "nonPositiveInteger"></enumitem>
			<enumitem dispname = "negativeInteger" value = "negativeInteger"></enumitem>
			<enumitem dispname = "long" value = "long"></enumitem>
			<enumitem dispname = "int" value = "int"></enumitem>
			<enumitem dispname = "short" value = "short"></enumitem>
			<enumitem dispname = "byte" value = "byte"></enumitem>
			<enumitem dispname = "nonNegativeInteger" value = "nonNegativeInteger"></enumitem>
			<enumitem dispname = "unsignedLong" value = "unsignedLong"></enumitem>
			<enumitem dispname = "unsignedInt" value = "unsignedInt"></enumitem>
			<enumitem dispname = "unsignedShort" value = "unsignedShort"></enumitem>
			<enumitem dispname = "unsignedByte" value = "unsignedByte"></enumitem>
			<enumitem dispname = "positiveInteger" value = "positiveInteger"></enumitem>
		</attrdef>
		<attrdef name="typical_execution_time" metaref = "1060" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="units" metaref = "2314" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="use" metaref = "3469" valuetype = "enum" defvalue = "literal">
			<enumitem dispname = "literal" value = "literal"></enumitem>
			<enumitem dispname = "encoded" value = "encoded"></enumitem>
		</attrdef>
		<attrdef name="warmup" metaref = "1061" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="worst_case_execution_time" metaref = "1062" valuetype = "integer" defvalue = "">
		</attrdef>
		<atom name = "PICML::Average" metaref = "1063" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Average.bmp"></regnode>
		</atom>
		<atom name = "PICML::Boolean" metaref = "1064" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Byte" metaref = "1065" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ComponentPackage" metaref = "1066"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="SingleComponentInteface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(PackageInterface)->size() = 1 
or
self.connectedFCOs(Implementation)->forAll (i : Reference | i.refersTo().kindName() = "ComponentAssembly")
]]>
				<dispname>A ComponentPackage that contains a reference to a MonolithicImplementation should also refer to the corresponding component interface</dispname>
			</constraint>
			<constraint name="UniqueMonolithicImpls" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let impls = self.bagConnectedFCOs(Implementation) in
   impls->isUnique (a : ComponentImplementationReference | a.refersTo().name.trim())
     and
   impls->isUnique (a: ComponentImplementationReference | a.name.trim())]]>
				<dispname>Monolithic Implementations of a ComponentPackage should be unique</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
   packages->forAll 
                       (x : ComponentPackage | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every Component Package should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPICML::ImplementationdstCardinality60" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Implementation ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentPackage as &quot;dst&quot; over PICML::Implementation, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageInterfacedstCardinality116" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::PackageInterface ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentPackage as &quot;dst&quot; over PICML::PackageInterface, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
		</atom>
		<atom name = "PICML::ConjunctionGroup" metaref = "1067" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="OneSourcePerRTFilter_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.attachingConnections ( Use_RTEC_Filter ) -> size < 2]]>
				<dispname>A filter specification can only be connected to one event sink</dispname>
			</constraint>
				<regnode name = "icon" value ="conjunction_group.bmp"></regnode>
		</atom>
		<atom name = "PICML::ConnectionBand" metaref = "2737"  attributes = "low high">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ConnectionBand.bmp"></regnode>
		</atom>
		<atom name = "PICML::DisjunctionGroup" metaref = "1068" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="OneSourcePerRTFilter_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.attachingConnections ( Use_RTEC_Filter ) -> size < 2]]>
				<dispname>A filter specification can only be connected to one event sink</dispname>
			</constraint>
				<regnode name = "icon" value ="disjunction_group.bmp"></regnode>
		</atom>
		<atom name = "PICML::DisplayNode" metaref = "2844" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="vertex.bmp"></regnode>
		</atom>
		<atom name = "PICML::Edge" metaref = "2089" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::DstEdgesrcCardinality41" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::DstEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Edge as &quot;src&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgedstCardinality132" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::SrcEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Edge as &quot;dst&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "PICML::EnumValue" metaref = "1069" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enumvalue.bmp"></regnode>
		</atom>
		<atom name = "PICML::Environment" metaref = "5108" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::EnvironmentConf" metaref = "2738"  attributes = "CmdLineOptions SvcConf">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="EnvironmentConf.bmp"></regnode>
		</atom>
		<atom name = "PICML::ExternalReferenceEndPoint" metaref = "2847"  attributes = "location">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ExternalReferenceEndPoint.bmp"></regnode>
		</atom>
		<atom name = "PICML::FixedIterationBenchmarks" metaref = "1071"  attributes = "benchmarkIterations">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::BenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Discrete-Benchmark.bmp"></regnode>
		</atom>
		<atom name = "PICML::GenericObject" metaref = "1072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::GenericValue" metaref = "1073" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::GenericValueObject" metaref = "1074" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ImplementationArtifact" metaref = "1075"  attributes = "configuration UUID label location">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueDependencies" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependsOn) in
   artifacts->isUnique (a : ImplementationArtifactReference | a.refersTo().name().trim())]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="UniqueDependentArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependency) in
   artifacts->isUnique (a : ImplementationArtifact |  a.name().trim() )]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
				<regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
		</atom>
		<atom name = "PICML::ImplementationDependency" metaref = "1076"  attributes = "requiredType">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
		</atom>
		<atom name = "PICML::Jitter" metaref = "1077" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Jitter.bmp"></regnode>
		</atom>
		<atom name = "PICML::Label" metaref = "1078" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::LabelConnectionsrcCardinality81" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::LabelConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Label as &quot;src&quot; over PICML::LabelConnection, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="label.bmp"></regnode>
		</atom>
		<atom name = "PICML::LogicalANDGroup" metaref = "1079" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="OneSourcePerRTFilter_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.attachingConnections ( Use_RTEC_Filter ) -> size < 2]]>
				<dispname>A filter specification can only be connected to one event sink</dispname>
			</constraint>
				<regnode name = "icon" value ="logical_and_group.bmp"></regnode>
		</atom>
		<atom name = "PICML::LongInteger" metaref = "1080" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Maximum" metaref = "1081" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Max.bmp"></regnode>
		</atom>
		<atom name = "PICML::Minimum" metaref = "1082" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Min.bmp"></regnode>
		</atom>
		<atom name = "PICML::MonolithicImplementation" metaref = "1083"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="RequiredInterface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs (Implements)->size() = 1]]>
				<dispname>Every MonolithicComponentImplementation should implement a Component interface.</dispname>
			</constraint>
			<constraint name="UniqueArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(MonolithprimaryArtifact) in
  artifacts->isUnique (a : ImplementationArtifactReference |  a.name().trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should be unique</dispname>
			</constraint>
			<constraint name="ValidPICML::ImplementsdstCardinality66" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentImplementation as &quot;dst&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MonolithprimaryArtifactdstCardinality96" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::MonolithprimaryArtifact ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MonolithicImplementation as &quot;dst&quot; over PICML::MonolithprimaryArtifact, has to match 1..*.</dispname>
			</constraint>
				<regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
		</atom>
		<atom name = "PICML::Null_RT_Info" metaref = "1084" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rt_info.bmp"></regnode>
				<regnode name = "porticon" value ="rt_info-port.bmp"></regnode>
		</atom>
		<atom name = "PICML::PackageConfiguration" metaref = "1085"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
          folder->isUnique (e1 : PackageConfiguration | e1.name)]]>
				<dispname>PackageConfiguration should be unique within a project</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (PackageConfiguration) in
   packages->forAll 
                       (x : PackageConfiguration | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every PackageConfiguration should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfBasePackagedstCardinality102" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfBasePackage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfReferencedstCardinality106" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfReference, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfSpecializedConfigdstCardinality110" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfiguration as &quot;dst&quot; over PICML::PackageConfSpecializedConfig, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
		</atom>
		<atom name = "PICML::PeriodicBenchmarks" metaref = "1086"  attributes = "timeperiod">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::BenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Periodic-Bench.bmp"></regnode>
		</atom>
		<atom name = "PICML::PriorityModelPolicy" metaref = "2739"  attributes = "Priority PriorityModel">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="PriorityModelPolicy.bmp"></regnode>
		</atom>
		<atom name = "PICML::PrivateFlag" metaref = "1087" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::MakeMemberPrivatesrcCardinality83" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PrivateFlag as &quot;src&quot; over PICML::MakeMemberPrivate, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="private.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::PublishConnector" metaref = "2848" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingPublishConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(deliverTo) in
   let publishers = self.connectedFCOs(publish) in
      publishers->forAll ( i : OutEventPort | 
          let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
             consumers->forAll (j: InEventPort |
                    supertypes->one (k: gme::FCO | k.name() = j.refersTo().name()  )
             or i.refersTo().name() = j.refersTo().name()   )
)]]>
				<dispname>An OutEventPort connected to an InEventPort via a PublishConnector should be of the same type or a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="Require2Connections" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(publish)->size() = 1 and self.connectedFCOs(deliverTo)->size() >= 1]]>
				<dispname>A PublishConnector should connect one OutEventPort with one or more InEventPorts</dispname>
			</constraint>
			<constraint name="ValidPICML::publishsrcCardinality155" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::publish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PublishConnector as &quot;src&quot; over PICML::publish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPublishHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(publish)->forAll (x : FCO | x.parent() <> self.parent()) 
and
self.connectedFCOs(deliverTo)->forAll (x : FCO | x.parent() <> self.parent())]]>
				<dispname>A PublishConnector cannot be used to make connections between In/OutEventPorts that are delegates and not ports of component instances</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "PICML::QoSContract" metaref = "2384"  attributes = "Qualification">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::QoSDimension" metaref = "2315"  attributes = "statisticalQualifier units direction">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::QoSDimensionSlot" metaref = "2612"  attributes = "value">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="value" metaref = "5426" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "PICML::QoSOffered" metaref = "2385"  attributes = "Qualification">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::QoSParameter" metaref = "2318"  attributes = "value">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="value" metaref = "5427" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "PICML::QoSRequired" metaref = "2386"  attributes = "Qualification">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "PICML::RTEC_Resource_Factory" metaref = "1089"  attributes = "ECConsumerLock ECSupplierFiltering ECDispatching ECTimeout ECConsumerControlPeriod ECSupplierLock ECSupplierControl ECObserver ECFiltering ECConsumerControl ECProxyPushConsumerCollectionSynch ECUseORBId ECProxyPushConsumerCollectionFlag ECScheduling ECSupplierControlPeriod ECProxyPushConsumerCollectionIterator ECProxyPushSupplierCollectionFlag ECDispatchingThreads ECProxyPushSupplierCollectionIterator ECProxyPushSupplierCollectionSynch">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="BasicFiltering_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[true]]>
				<dispname>Basic filtering limits nesting of filter groups to two levels</dispname>
			</constraint>
			<constraint name="ECConsumerControlPeriod_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.ECConsumerControlPeriod <> 0 and self.ECConsumerControlPeriod <> 5000000)
          implies
          self.ECConsumerControl = "reactive"]]>
				<dispname>ECConsumerControlPeriod only valid with &quot;reactive&quot; ECConsumerControlPolicy.</dispname>
			</constraint>
			<constraint name="ECDispatchingThreads_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.ECDispatchingThreads <> 1 implies
          self.ECDispatching = "mt"]]>
				<dispname>ECDispatchingThreads only valid with &quot;mt&quot; ECDispatchingStrategy</dispname>
			</constraint>
			<constraint name="ECDispatchingThreads_Positive_Integer_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.ECDispatchingThreads > 0]]>
				<dispname>ECDispatchingThreads must be greater than zero</dispname>
			</constraint>
			<constraint name="ECSupplierControlPeriod_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[(self.ECSupplierControlPeriod <> 0 and self.ECSupplierControlPeriod <> 5000000)
          implies
          self.ECSupplierControl = "reactive"]]>
				<dispname>ECSupplierControlPeriod only valid with &quot;reactive&quot; ECSupplierControlPolicy</dispname>
			</constraint>
				<regnode name = "icon" value ="rtec_resource_factory.bmp"></regnode>
				<regnode name = "porticon" value ="rtec_resource_factory-port.bmp"></regnode>
		</atom>
		<atom name = "PICML::RT_Info" metaref = "1090"  attributes = "period entry_point criticality enabled importance quantum threads cached_execution_time worst_case_execution_time info_type typical_execution_time">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rt_info.bmp"></regnode>
				<regnode name = "porticon" value ="rt_info-port.bmp"></regnode>
		</atom>
		<atom name = "PICML::RealNumber" metaref = "1091" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::ShortInteger" metaref = "1092" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::State" metaref = "5109" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="HasPrecondition" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let conns = self.attachingConnections ("src", Transition) in

conns->size > 1 implies
  conns->forAll (iter : Transition | 
                        iter.Precondition.trim ().size > 0)
]]>
				<dispname>States with more than one transition must define a precondition for all transitions.</dispname>
			</constraint>
			<constraint name="ValidPICML::FinishdstCardinality58" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Finish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::State as &quot;dst&quot; over PICML::Finish, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="State.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "PICML::String" metaref = "1093" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::Task" metaref = "1094" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::WorkLoadOperationConnectionsrcCardinality143" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::WorkLoadOperationConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Task as &quot;src&quot; over PICML::WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="task.bmp"></regnode>
		</atom>
		<atom name = "PICML::ThreadPoolLane" metaref = "2740"  attributes = "static_threads lane_priority dynamic_threads">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ThreadPoolLane.bmp"></regnode>
		</atom>
		<atom name = "PICML::TimeProbe" metaref = "1095" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::TimerConnectionsrcCardinality133" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::TimerConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TimeProbe as &quot;src&quot; over PICML::TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TimerEventSinkConnsrcCardinality135" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::TimerEventSinkConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TimeProbe as &quot;src&quot; over PICML::TimerEventSinkConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="timer.bmp"></regnode>
		</atom>
		<atom name = "PICML::TopLevelPackage" metaref = "1096" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::packagedstCardinality154" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::package ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TopLevelPackage as &quot;dst&quot; over PICML::package, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
		</atom>
		<atom name = "PICML::TriggerBenchmarks" metaref = "1097" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::BenchmarkCharacteristicsdstCardinality26" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::BenchmarkType as &quot;dst&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Trigger-Bench.bmp"></regnode>
		</atom>
		<atom name = "PICML::TypeEncoding" metaref = "1098" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "PICML::TypeKind" metaref = "1099" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
		</atom>
		<atom name = "SIML::Module" metaref = "6405"  attributes = "portName portType">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidSIML::PortProxydstCardinality158" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", SIML::PortProxy ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SIML::Module as &quot;dst&quot; over SIML::PortProxy, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSIML::PortProxysrcCardinality157" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", SIML::PortProxy ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SIML::Module as &quot;src&quot; over SIML::PortProxy, has to match 0..1.</dispname>
			</constraint>
		</atom>
		<atom name = "WSML::AtomicType" metaref = "3470"  attributes = "typeCode">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "WSML::Attribute" metaref = "3471"  attributes = "Value">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "WSML::SOAPAddress" metaref = "3476"  attributes = "required location">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="location" metaref = "4700" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "WSML::SOAPBinding" metaref = "3478"  attributes = "required transport style">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "WSML::SOAPBody" metaref = "3479"  attributes = "use required encodingStyle namespace">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="namespace" metaref = "4701" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "WSML::SOAPFault" metaref = "3481"  attributes = "use required encodingStyle namespace">
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="namespace" metaref = "4702" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "WSML::SOAPHeaderFault" metaref = "3483"  attributes = "use required encodingStyle namespace">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::HeaderMessagedstCardinality172" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::HeaderMessage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::SOAPHeaders as &quot;dst&quot; over WSML::HeaderMessage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::HeaderPartdstCardinality174" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::HeaderPart ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::SOAPHeaders as &quot;dst&quot; over WSML::HeaderPart, has to match 1.</dispname>
			</constraint>
			<attrdef name="namespace" metaref = "4703" valuetype = "string" defvalue = "">
			</attrdef>
		</atom>
		<atom name = "WSML::SOAPOperation" metaref = "3485"  attributes = "required soapAction style">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<set name = "PICML::CollocationGroup" metaref = "1100" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setCollocationGroup"></regnode>
				<regnode name = "icon" value ="ComponentSet"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
				<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				<pointeritem desc = "PICML::SharedComponentReference"></pointeritem>
			</pointerspec>
		</set>
		<set name = "PICML::TaskSet" metaref = "1101" attributes = "priority rate" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setTaskSet"></regnode>
				<regnode name = "icon" value ="taskset.bmp"></regnode>
			<constraint name="ValidPICML::WorkloadCharacteristicssrcCardinality145" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::WorkloadCharacteristics ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::TaskSet as &quot;src&quot; over PICML::WorkloadCharacteristics, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::Task"></pointeritem>
			</pointerspec>
		</set>
		<set name = "PICML::Workspaces" metaref = "1102" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setWorkspace"></regnode>
				<regnode name = "icon" value ="Workspace.bmp"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "PICML::Project"></pointeritem>
			</pointerspec>
		</set>
		<connection name = "PICML::ArtifactDependency" metaref = "1103" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependency"></regnode>
				<regnode name = "dName" value ="dstArtifactDependency"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactDependsOn" metaref = "1104" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
				<regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactDeployRequirement" metaref = "1105" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::FOU_Requirement"></pointeritem>
					<pointeritem desc = "PICML::RepGRequirement"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactExecParameter" metaref = "1106" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
				<regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ArtifactInfoProperty" metaref = "1107" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
				<regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyConfigProperty" metaref = "2849" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
				<regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyDeployRequirement" metaref = "2850" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::FOU_Requirement"></pointeritem>
					<pointeritem desc = "PICML::RepGRequirement"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AssemblyselectRequirement" metaref = "2851" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::FOU_Requirement"></pointeritem>
					<pointeritem desc = "PICML::RepGRequirement"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeDelegate" metaref = "2852" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeDelegate"></regnode>
				<regnode name = "color" value ="0x408080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ReadonlyAttribute"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeMappingDelegate" metaref = "2853" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingDelegate"></regnode>
				<regnode name = "color" value ="0x008080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeMappingValue" metaref = "2854" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingValue"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingValue"></regnode>
				<regnode name = "color" value ="0x808000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::AttributeMapping"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::AttributeValue" metaref = "2855" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeValue"></regnode>
				<regnode name = "dName" value ="dstAttributeValue"></regnode>
				<regnode name = "color" value ="0x800080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::Component PICML::ReadonlyAttribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::Attribute"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ReadonlyAttribute"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::BenchmarkCharacteristics" metaref = "1115" >
				<regnode name = "sName" value ="srcBenchmarkCharacteristics"></regnode>
				<regnode name = "dName" value ="dstBenchmarkCharacteristics"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::FixedIterationBenchmarks"></pointeritem>
					<pointeritem desc = "PICML::PeriodicBenchmarks"></pointeritem>
					<pointeritem desc = "PICML::TriggerBenchmarks"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Bridge2Interconnect" metaref = "1116" >
				<regnode name = "sName" value ="srcBridge2Interconnect"></regnode>
				<regnode name = "dName" value ="dstBridge2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Bridge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentConfigProperty" metaref = "1117" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
				<regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentInfoProperty" metaref = "1118" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
				<regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentOperation" metaref = "1119" >
				<regnode name = "labelFormatStr" value ="benchmarks"></regnode>
				<regnode name = "sName" value ="srcComponentOperation"></regnode>
				<regnode name = "dName" value ="dstComponentOperation"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::CompRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ComponentProperty" metaref = "1120" >
				<regnode name = "labelFormatStr" value ="property"></regnode>
				<regnode name = "sName" value ="srcComponentProperty"></regnode>
				<regnode name = "dName" value ="dstComponentProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPropertyDescription"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ConfigProperty" metaref = "1121" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcConfigProperty"></regnode>
				<regnode name = "dName" value ="dstConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::CriticalPath" metaref = "3062" >
				<regnode name = "labelFormatStr" value ="CriticalPath"></regnode>
				<regnode name = "sName" value ="srcCriticalPath"></regnode>
				<regnode name = "dName" value ="dstCriticalPath"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PathReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::DstEdge" metaref = "2094" >
				<regnode name = "sName" value ="srcDstEdge"></regnode>
				<regnode name = "dName" value ="dstDstEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ConnectedComponent"></pointeritem>
					<pointeritem desc = "PICML::DisplayNode"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EdgeProperty" metaref = "3063" >
				<regnode name = "sName" value ="srcPropertyConnector"></regnode>
				<regnode name = "dName" value ="dstPropertyConnector"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Effect" metaref = "5110" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcInputEffect"></regnode>
				<regnode name = "dName" value ="dstInputEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Action"></pointeritem>
					<pointeritem desc = "PICML::CompositeAction"></pointeritem>
					<pointeritem desc = "PICML::InputAction"></pointeritem>
					<pointeritem desc = "PICML::OutputAction"></pointeritem>
					<pointeritem desc = "PICML::PeriodicAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EventSinkDelegate" metaref = "2856" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSinkDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSinkDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::EventSourceDelegate" metaref = "2857" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSourceDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSourceDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ExtResourceConn" metaref = "1124" >
				<regnode name = "sName" value ="srcExtResourceConn"></regnode>
				<regnode name = "dName" value ="dstExtResourceConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ExecutorProject"></pointeritem>
					<pointeritem desc = "PICML::ServantProject"></pointeritem>
					<pointeritem desc = "PICML::StubProject"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ExternalResources"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ExternalDelegate" metaref = "2858" >
				<regnode name = "labelFormatStr" value ="references"></regnode>
				<regnode name = "sName" value ="srcExternalDelegate"></regnode>
				<regnode name = "dName" value ="dstExternalDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ExternalReferenceEndPoint"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::FacetDelegate" metaref = "2859" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcFacetDelegate"></regnode>
				<regnode name = "dName" value ="dstFacetDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Finish" metaref = "5111" >
				<regnode name = "sName" value ="srcFinish"></regnode>
				<regnode name = "dName" value ="dstFinish"></regnode>
				<regnode name = "color" value ="0xFF00FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
					<pointeritem desc = "PICML::PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Implementation" metaref = "1127" >
				<regnode name = "labelFormatStr" value ="implementation"></regnode>
				<regnode name = "sName" value ="srcImplementation"></regnode>
				<regnode name = "dName" value ="dstImplementation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentImplementationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ImplementationCapability" metaref = "1128" >
				<regnode name = "labelFormatStr" value ="capability"></regnode>
				<regnode name = "sName" value ="srcImplementationCapability"></regnode>
				<regnode name = "dName" value ="dstImplementationCapability"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Capability"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ImplementationDependsOn" metaref = "1129" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
				<regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationDependency"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Implements" metaref = "1130" >
				<regnode name = "labelFormatStr" value ="implements"></regnode>
				<regnode name = "sName" value ="srcImplements"></regnode>
				<regnode name = "dName" value ="dstImplements"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Include_RTEC_Filter_Group" metaref = "1131" >
				<regnode name = "sName" value ="srcInclude_RTEC_Filter_Group"></regnode>
				<regnode name = "dName" value ="dstInclude_RTEC_Filter_Group"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
			</connjoint>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Include_RT_Info" metaref = "1132" >
				<regnode name = "sName" value ="srcInclude_RT_Info"></regnode>
				<regnode name = "dName" value ="dstInclude_RT_Info"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RT_Info"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::InfoProperty" metaref = "1133" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcInfoProperty"></regnode>
				<regnode name = "dName" value ="dstInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Input" metaref = "5112" >
				<regnode name = "sName" value ="srcInput"></regnode>
				<regnode name = "dName" value ="dstInput"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
					<pointeritem desc = "PICML::PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::InstanceMapping" metaref = "1134" >
				<regnode name = "labelFormatStr" value ="runsOn"></regnode>
				<regnode name = "sName" value ="srcInstanceMapping"></regnode>
				<regnode name = "dName" value ="dstInstanceMapping"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::CollocationGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::NodeReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Interconnect2Bridge" metaref = "1135" >
				<regnode name = "sName" value ="srcInterconnect2Bridge"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Bridge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Bridge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Interconnect2Node" metaref = "1136" >
				<regnode name = "sName" value ="srcInterconnect2Node"></regnode>
				<regnode name = "dName" value ="dstInterconnect2Node"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::LabelConnection" metaref = "1137" >
				<regnode name = "sName" value ="srcLabelConnection"></regnode>
				<regnode name = "dName" value ="dstLabelConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Label"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MakeMemberPrivate" metaref = "1138" >
				<regnode name = "sName" value ="srcMakeMemberPrivate"></regnode>
				<regnode name = "dName" value ="dstMakeMemberPrivate"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PrivateFlag"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ManagesComponent" metaref = "1139" >
				<regnode name = "sName" value ="srcManagesComponent"></regnode>
				<regnode name = "dName" value ="dstManagesComponent"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MetricConnection" metaref = "1140" >
				<regnode name = "labelFormatStr" value ="measures"></regnode>
				<regnode name = "sName" value ="srcMetricConnection"></regnode>
				<regnode name = "dName" value ="dstMetricConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Monitorable2RepG" metaref = "3186" >
				<regnode name = "sName" value ="srcMonitorable2RepG"></regnode>
				<regnode name = "dName" value ="dstMonitorable2RepG"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentAssemblyReference"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::RepGRequirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithDeployRequirement" metaref = "1141" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationRequirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithExecParameter" metaref = "1142" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
				<regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MonolithprimaryArtifact" metaref = "1143" >
				<regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
				<regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
				<regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::MultiInput" metaref = "5113" >
				<regnode name = "sName" value ="srcMultiInput"></regnode>
				<regnode name = "dName" value ="dstMultiInput"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Environment"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::InputAction"></pointeritem>
					<pointeritem desc = "PICML::PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Node2Interconnect" metaref = "1144" >
				<regnode name = "sName" value ="srcNode2Interconnect"></regnode>
				<regnode name = "dName" value ="dstNode2Interconnect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfBasePackage" metaref = "1145" >
				<regnode name = "labelFormatStr" value ="basePackage"></regnode>
				<regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
				<regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfConfigProperty" metaref = "1146" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfReference" metaref = "1147" >
				<regnode name = "labelFormatStr" value ="reference"></regnode>
				<regnode name = "sName" value ="srcPackageConfReference"></regnode>
				<regnode name = "dName" value ="dstPackageConfReference"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentPackageReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfSelectRequirement" metaref = "1148" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
				<regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::FOU_Requirement"></pointeritem>
					<pointeritem desc = "PICML::RepGRequirement"></pointeritem>
					<pointeritem desc = "PICML::Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfSpecializedConfig" metaref = "1149" >
				<regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
				<regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
				<regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageConfigProperty" metaref = "1150" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageInfoProperty" metaref = "1151" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
				<regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PackageInterface" metaref = "1152" >
				<regnode name = "labelFormatStr" value ="realizes"></regnode>
				<regnode name = "sName" value ="srcPackageInterface"></regnode>
				<regnode name = "dName" value ="dstPackageInterface"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::PathProperty" metaref = "3064" >
				<regnode name = "labelFormatStr" value ="pathProperty"></regnode>
				<regnode name = "sName" value ="srcPathProperty"></regnode>
				<regnode name = "dName" value ="dstPathProperty"></regnode>
				<regnode name = "color" value ="0x00F000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Path"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::QoSDecoration" metaref = "2664" >
				<regnode name = "sName" value ="srcQoSDecoration"></regnode>
				<regnode name = "dName" value ="dstQoSDecoration"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::QoSValue"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::QoSDimensionQualifier" metaref = "2321" >
				<regnode name = "sName" value ="srcQoSDimensionQualifier"></regnode>
				<regnode name = "dName" value ="dstQoSDimensionQualifier"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::QoSDimensionSlot"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::CPU PICML::QoSDimension"></pointeritem>
					<pointeritem desc = "PICML::Concurrency PICML::QoSDimension"></pointeritem>
					<pointeritem desc = "PICML::Connection PICML::QoSDimension"></pointeritem>
					<pointeritem desc = "PICML::Process PICML::QoSDimension"></pointeritem>
					<pointeritem desc = "PICML::QoSCharacteristic PICML::QoSDimension"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::RTEC_Connection" metaref = "1153" >
				<regnode name = "sName" value ="srcRTEC_Connection"></regnode>
				<regnode name = "dName" value ="dstRTEC_Connection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::RTEC_Proxy_Consumer PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Consumer PICML::RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::RT_Info"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ReceptacleDelegate" metaref = "2860" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcReceptacleDelegate"></regnode>
				<regnode name = "dName" value ="dstReceptacleDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::ReqConnection" metaref = "3187" >
				<regnode name = "sName" value ="srcReqConnection"></regnode>
				<regnode name = "dName" value ="dstReqConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::FailOverUnit"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::FOU_Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Shares" metaref = "1155" >
				<regnode name = "labelFormatStr" value ="shares"></regnode>
				<regnode name = "sName" value ="srcShares"></regnode>
				<regnode name = "dName" value ="dstShares"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::SharedResource"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::SrcEdge" metaref = "2101" >
				<regnode name = "sName" value ="srcSrcEdge"></regnode>
				<regnode name = "dName" value ="dstSrcEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Edge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ConnectedComponent"></pointeritem>
					<pointeritem desc = "PICML::DisplayNode"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::TimerConnection" metaref = "1156" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerConnection"></regnode>
				<regnode name = "dName" value ="dstTimerConnection"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::TimerEventSinkConn" metaref = "1157" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerEventSinkConn"></regnode>
				<regnode name = "dName" value ="dstTimerEventSinkConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::EventRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Transition" metaref = "5114" attributes = "Precondition" >
				<regnode name = "sName" value ="srcInternalPrecondition"></regnode>
				<regnode name = "dName" value ="dstInternalPrecondition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Action"></pointeritem>
					<pointeritem desc = "PICML::CompositeAction"></pointeritem>
					<pointeritem desc = "PICML::InputAction"></pointeritem>
					<pointeritem desc = "PICML::OutputAction"></pointeritem>
					<pointeritem desc = "PICML::PeriodicAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Use_RTEC_Filter" metaref = "1158" >
				<regnode name = "sName" value ="srcUse_RTEC_Filter"></regnode>
				<regnode name = "dName" value ="dstUse_RTEC_Filter"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::ConjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::DisjunctionGroup"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::LogicalANDGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::Use_RT_Info" metaref = "1159" >
				<regnode name = "sName" value ="srcUse_RT_Info"></regnode>
				<regnode name = "dName" value ="dstUse_RT_Info"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Consumer PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Consumer PICML::RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::Null_RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Proxy_Supplier PICML::RT_Info"></pointeritem>
					<pointeritem desc = "PICML::RT_Info"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::RTEC_Proxy_Consumer PICML::RTEC_Resource_Factory_Reference"></pointeritem>
					<pointeritem desc = "PICML::RTEC_Resource_Factory_Reference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::WorkLoadOperationConnection" metaref = "1160" >
				<regnode name = "sName" value ="srcWorkLoadOperationConnection"></regnode>
				<regnode name = "dName" value ="dstWorkLoadOperationConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Task"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::WorkloadCharacteristics" metaref = "1161" >
				<regnode name = "sName" value ="srcWorkloadCharacteristics"></regnode>
				<regnode name = "dName" value ="dstWorkloadCharacteristics"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Latency"></pointeritem>
					<pointeritem desc = "PICML::Throughput"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::TaskSet"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::deliverTo" metaref = "2861" >
				<regnode name = "labelFormatStr" value ="deliverTo"></regnode>
				<regnode name = "sName" value ="srcdeliverTo"></regnode>
				<regnode name = "dName" value ="dstdeliverTo"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::emit" metaref = "2862" >
				<regnode name = "labelFormatStr" value ="emits"></regnode>
				<regnode name = "sName" value ="srcemit"></regnode>
				<regnode name = "dName" value ="dstemit"></regnode>
				<regnode name = "color" value ="0x8F0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::InEventPort"></pointeritem>
					<pointeritem desc = "PICML::InEventPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::invoke" metaref = "2863" >
				<regnode name = "labelFormatStr" value ="invokes"></regnode>
				<regnode name = "sName" value ="srcinvoke"></regnode>
				<regnode name = "dName" value ="dstinvoke"></regnode>
				<regnode name = "color" value ="0x00008F"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::RequiredRequestPort"></pointeritem>
					<pointeritem desc = "PICML::RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::Component PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "PICML::ProvidedRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::package" metaref = "1165" >
				<regnode name = "labelFormatStr" value ="package"></regnode>
				<regnode name = "sName" value ="srcpackage"></regnode>
				<regnode name = "dName" value ="dstpackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::TopLevelPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PackageConfigurationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PICML::publish" metaref = "2864" >
				<regnode name = "labelFormatStr" value ="publish"></regnode>
				<regnode name = "sName" value ="srcpublish"></regnode>
				<regnode name = "dName" value ="dstpublish"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PICML::Component PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssembly PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentAssemblyReference PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::ComponentRef PICML::OutEventPort"></pointeritem>
					<pointeritem desc = "PICML::OutEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PICML::PublishConnector"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "SIML::PortProxy" metaref = "6406" attributes = "language" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "color" value ="0x0000F0"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="bullet"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "SIML::Module"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "SIML::Module"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::BindingPortType" metaref = "3486" >
				<regnode name = "labelFormatStr" value ="boundPortType"></regnode>
				<regnode name = "sName" value ="srcBindingPortType"></regnode>
				<regnode name = "dName" value ="dstBindingPortType"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::Binding"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::PortType"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::BindsOperation" metaref = "3487" >
				<regnode name = "labelFormatStr" value ="bindsOperation"></regnode>
				<regnode name = "sName" value ="srcBindsOperation"></regnode>
				<regnode name = "dName" value ="dstBindsOperation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::BindingOperation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::OperationRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::BodyBinding" metaref = "3488" >
				<regnode name = "labelFormatStr" value ="bodyBinding"></regnode>
				<regnode name = "sName" value ="srcBodyBinding"></regnode>
				<regnode name = "dName" value ="dstBodyBinding"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::InputRef"></pointeritem>
					<pointeritem desc = "WSML::OutputRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::SOAPBody"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::BodyParts" metaref = "3489" >
				<regnode name = "labelFormatStr" value ="bodyParts"></regnode>
				<regnode name = "sName" value ="srcBodyParts"></regnode>
				<regnode name = "dName" value ="dstBodyParts"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::SOAPBody"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::PartRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::FaultMessage" metaref = "3491" >
				<regnode name = "labelFormatStr" value ="faultMessageType"></regnode>
				<regnode name = "sName" value ="srcFaultMessage"></regnode>
				<regnode name = "dName" value ="dstFaultMessage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::Fault"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::MessageRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::HeaderBinding" metaref = "3492" >
				<regnode name = "labelFormatStr" value ="headerBinding"></regnode>
				<regnode name = "sName" value ="srcHeaderBinding"></regnode>
				<regnode name = "dName" value ="dstHeaderBinding"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::InputRef"></pointeritem>
					<pointeritem desc = "WSML::OutputRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::SOAPHeader"></pointeritem>
					<pointeritem desc = "WSML::SOAPHeaderFault"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::HeaderMessage" metaref = "3493" >
				<regnode name = "labelFormatStr" value ="headerMessage"></regnode>
				<regnode name = "sName" value ="srcHeaderMessage"></regnode>
				<regnode name = "dName" value ="dstHeaderMessage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::SOAPHeader"></pointeritem>
					<pointeritem desc = "WSML::SOAPHeaderFault"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::MessageRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::HeaderPart" metaref = "3494" >
				<regnode name = "labelFormatStr" value ="headerPart"></regnode>
				<regnode name = "sName" value ="srcHeaderPart"></regnode>
				<regnode name = "dName" value ="dstHeaderPart"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::SOAPHeader"></pointeritem>
					<pointeritem desc = "WSML::SOAPHeaderFault"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::PartRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::InputMessage" metaref = "3495" >
				<regnode name = "labelFormatStr" value ="inputMessageType"></regnode>
				<regnode name = "sName" value ="srcInputMessage"></regnode>
				<regnode name = "dName" value ="dstInputMessage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::Input"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::MessageRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::OutputMessage" metaref = "3496" >
				<regnode name = "labelFormatStr" value ="outputMessageType"></regnode>
				<regnode name = "sName" value ="srcOutputMessage"></regnode>
				<regnode name = "dName" value ="dstOutputMessage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::Output"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::MessageRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::PortBinding" metaref = "3502" >
				<regnode name = "labelFormatStr" value ="boundPort"></regnode>
				<regnode name = "sName" value ="srcPortBinding"></regnode>
				<regnode name = "dName" value ="dstPortBinding"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::Port"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::BindingRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WSML::SOAPFaultExtension" metaref = "3503" >
				<regnode name = "labelFormatStr" value ="soapFault"></regnode>
				<regnode name = "sName" value ="srcSOAPFaultExtension"></regnode>
				<regnode name = "dName" value ="dstSOAPFaultExtension"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "WSML::FaultRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "WSML::SOAPFault"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<reference name = "PICML::Alias" metaref = "1167" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAlias"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="alias.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::AttributeMapping" metaref = "2865">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMapping"></regnode>
			<constraint name="MatchingAttributeMappingDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let myAttr : Model = self.refersTo() in
let attrs = myAttr.referenceParts(AttributeMember) in
let delegates = self.connectedFCOs(AttributeMappingDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate values to AttributeMappings of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attr: Model = self.refersTo() in
let attrType = attr.referenceParts(AttributeMember) in
let props = self.connectedFCOs(AttributeMappingValue) in
    attrType->forAll (myType : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         myType.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate property values to attributes of the same type</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeMappingValue)->size() <= 1]]>
				<dispname>An AttributeMapping can only have a single Property value associated with it.</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeMappingDelegatesrcCardinality19" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::AttributeMappingDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::AttributeMapping as &quot;src&quot; over PICML::AttributeMappingDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeMappingValuedstCardinality22" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::AttributeMappingValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::AttributeMapping as &quot;dst&quot; over PICML::AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(AttributeMappingDelegate)->forAll (x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>An AttributeMapping of an assembly can only be delegated to an AttributeMapping in a different assembly</dispname>
			</constraint>
			<regnode name = "icon" value ="AttributeMapping.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Attribute"></pointeritem>
				<pointeritem desc = "PICML::ReadonlyAttribute"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::AttributeMember" metaref = "1169">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMember"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::BandedConnectionRef" metaref = "2741">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBandedConnectionRef"></regnode>
			<regnode name = "icon" value ="BandedConnectionRef.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::BandedConnection"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Boxed" metaref = "1170" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBoxed"></regnode>
			<constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[let boxedref = refersTo () in
          boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
				<dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="boxed.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Collection" metaref = "1171" attributes = "VersionTag SpecifyIdTag">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCollection"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="variablecollection.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::CompRef" metaref = "1172">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCompRef"></regnode>
			<constraint name="ValidPICML::ComponentOperationsrcCardinality33" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::ComponentOperation ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::CompRef as &quot;src&quot; over PICML::ComponentOperation, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentAssemblyReference" metaref = "1173">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentAssemblyReference"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NoNullReference_CompAssem" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>The reference can&apos;t be null.</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="ValidPICML::Monitorable2RepGdstCardinality90" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Monitorable2RepG ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::FTMonitorable as &quot;dst&quot; over PICML::Monitorable2RepG, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentImplementationReference" metaref = "1174">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentAssembly"></pointeritem>
				<pointeritem desc = "PICML::MonolithicImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentPackageReference" metaref = "1175" attributes = "requiredType requiredUUID requiredName">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ComponentImplementationReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentPackage"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ComponentRef" metaref = "1176">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentRef"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="NoNullReference_CompAssem" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>The reference can&apos;t be null.</dispname>
			</constraint>
			<constraint name="ValidPICML::ImplementssrcCardinality65" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Implements ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentRef as &quot;src&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::Monitorable2RepGdstCardinality90" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Monitorable2RepG ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::FTMonitorable as &quot;dst&quot; over PICML::Monitorable2RepG, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageInterfacesrcCardinality115" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::PackageInterface ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentRef as &quot;src&quot; over PICML::PackageInterface, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Constant" metaref = "1177" attributes = "VersionTag SpecifyIdTag value">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConstant"></regnode>
			<constraint name="LegalConstantType" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[let x = refersTo () in
          x.isTypeOf (String) or
          x.isTypeOf (LongInteger) or
          x.isTypeOf (Enum) or
          x.isTypeOf (ShortInteger) or
          x.isTypeOf (RealNumber) or
          x.isTypeOf (Byte) or
          x.isTypeOf (Boolean)]]>
				<dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
			</constraint>
			<constraint name="LegalConstantValue" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = refersTo () in
    let y = value.toInteger () in
          (x.isTypeOf (Boolean) implies ((y = 0 or y = 1) or (let z = value.trim ().toUpper () in z = "TRUE" or z = "FALSE"))) and
          (x.isTypeOf (Byte) implies (y >= 0 and y < 256)) and
          (x.isTypeOf (ShortInteger) implies (y > -32769 and y < 32768)) and
          (x.isTypeOf (LongInteger) implies (value.toReal () >= -2147483648 and value.toReal () <= 2147483647)) and
          (x.isTypeOf (RealNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
          (x.isTypeOf (Enum) implies x.oclAsType (gme::Model).parts ()->collect (w : gme::FCO | w.name)->exists (z : ocl::String | z = value.trim ()))]]>
				<dispname>Constant&apos;s value does not match type or is out of range</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="value" metaref = "5428" valuetype = "string" defvalue = "">
			</attrdef>
			<regnode name = "icon" value ="const.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::DataType" metaref = "1179">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDataType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>DataType should reference a PredefinedType and cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="DataType.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::DeploymentPlanRef" metaref = "3260">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDeploymentPlanReference"></regnode>
			<constraint name="NoNullReference_DepPlan" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A null deployment plan reference is not allowed.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::DeploymentPlan"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Discriminator" metaref = "1180">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDiscriminator"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<regnode name = "icon" value ="discriminator.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::EventRef" metaref = "1181">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyEventRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="eventref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ExceptionRef" metaref = "1182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExceptionRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="exceptionref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ExternalResources" metaref = "1183">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExternalResources"></regnode>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::FileRef" metaref = "1184">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyFileRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="fileref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::File"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::GetException" metaref = "1185">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyGetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="getexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ImplementationArtifactReference" metaref = "1186">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InEventPort" metaref = "1187" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInEventPort"></regnode>
			<constraint name="MatchingEventSink" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(EventSinkDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>An InEventPort can only be delegated to another InEventPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="OneRTECProxyPerSink_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.attachingConnections ( Use_RTEC_Filter ) -> size < 2]]>
				<dispname>An event sink can only be connected to one RTEC proxy</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent())]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::InputdstCardinality74" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InEventPort as &quot;dst&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(EventSinkDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only InEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="ineventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InParameter" metaref = "1188">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="in.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Inherits" metaref = "1189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInherits"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::InoutParameter" metaref = "1190">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInoutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inout.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::LookupKey" metaref = "1191">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyLookupKey"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="lookupkey.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Member" metaref = "1192">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMember"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ParentNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[name <> parent ().name]]>
				<dispname>A member may not have the same name as its container.</dispname>
			</constraint>
			<constraint name="ValidPICML::MakeMemberPrivatedstCardinality84" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Member as &quot;dst&quot; over PICML::MakeMemberPrivate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::NodeRef" metaref = "3188">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyNodeRef"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Null node reference (Every node should refer to a distinct node in the target domain.)</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::NodeReference" metaref = "1193">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyNodeReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>NodeReference cannot be null</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OperationRef" metaref = "1194">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOperationRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentOperationdstCardinality34" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::ComponentOperation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::ComponentOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MetricConnectiondstCardinality88" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::MetricConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::MetricConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TimerConnectiondstCardinality134" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::TimerConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::WorkLoadOperationConnectiondstCardinality144" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::WorkLoadOperationConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OperationRef as &quot;dst&quot; over PICML::WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="operationref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::FactoryOperation"></pointeritem>
				<pointeritem desc = "PICML::LookupOperation"></pointeritem>
				<pointeritem desc = "PICML::OnewayOperation"></pointeritem>
				<pointeritem desc = "PICML::TwowayOperation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OutEventPort" metaref = "1195" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider single_destination out_event_port_type">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutEventPort"></regnode>
			<constraint name="MatchingEmitConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(emit)  in
 consumers->forAll ( i : InEventPort | 
     let supertypes = self.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         supertypes->one (k: gme::FCO | k.name() = i.refersTo().name())
     or self.refersTo().name() = i.refersTo().name()
)]]>
				<dispname>An OutEventPort should be connected to an InEventPort of the same type, or the OutEventPort should be a subtype of InEventPort</dispname>
			</constraint>
			<constraint name="MatchingEventDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let publishers = self.connectedFCOs(EventSourceDelegate)  in
 publishers->forAll ( i : OutEventPort |  self.refersTo().name() = i.refersTo().name() 
                              and
                              self.single_destination = i.single_destination)]]>
				<dispname>An OutEventPort can only be delegated to another OutEventPort of the same type and should have consistent values for single_destination attribute</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="OneRTECProxyPerSource_Constraint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.attachingConnections ( RTEC_Connection ) -> size < 2]]>
				<dispname>An event source can only be connected to one RTEC proxy</dispname>
			</constraint>
			<constraint name="SingleConsumer" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->size() <= 1]]>
				<dispname>Every OutEventPort can emit events to only one InEventPort</dispname>
			</constraint>
			<constraint name="ValidEmitsHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(emit)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an InEventPort can be connected to an OutEventPort only when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidEventConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[if self.single_destination
then
     self.attachingConnections(publish)->size() = 0
else
     self.attachingConnections(emit)->size() = 0
endif
]]>
				<dispname>The type of an OutEventPort&apos;s connections  must agree with the value of its single_destination attribute.</dispname>
			</constraint>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::emitdstCardinality150" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::emit ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::OutEventPort as &quot;dst&quot; over PICML::emit, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(EventSourceDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only OutEventPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidPublishConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let connectors = self.connectedFCOs (publish) in
     connectors->forAll ( c1, c2 |  c1 <> c2 => c1.parent() <> c2.parent() )]]>
				<dispname>An OutEventPort can only be connected to multiple PublishConnectors  when shared between a ComponentAssembly/Component and it&apos;s reference.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="single_destination" metaref = "5429" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::OutParameter" metaref = "1197">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="out.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::PackageConfigurationReference" metaref = "1198">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>PackageConfigurationReference cannot be null</dispname>
			</constraint>
			<constraint name="ValidPICML::packagesrcCardinality153" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::package ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PackageConfigurationReference as &quot;src&quot; over PICML::package, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::PackageConfiguration"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::PathReference" metaref = "3065">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPathReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<constraint name="ValidPICML::CriticalPathsrcCardinality39" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::CriticalPath ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::PathReference as &quot;src&quot; over PICML::CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Path"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::PolicySetRef" metaref = "2742">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPolicySetRef"></regnode>
			<regnode name = "icon" value ="PolicySetRef.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::PolicySet"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ProvidedRequestPort" metaref = "1199" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyProvidedRequestPort"></regnode>
			<constraint name="MatchingFacet" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs(FacetDelegate)  in
 consumers->forAll ( i : InEventPort |  self.refersTo().name() = i.refersTo().name() )]]>
				<dispname>A ProvidedRequestPort can only be delegated to another ProvidedRequestPort of the same type</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, a ProvidedRequestPort can only be connected to a RequiredRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(FacetDelegate)->forAll ( x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>Only ProvidedRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="providedrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::QoSCharacteristicRef" metaref = "2712">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyQoSCharacteristicRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::CPU"></pointeritem>
				<pointeritem desc = "PICML::Concurrency"></pointeritem>
				<pointeritem desc = "PICML::Connection"></pointeritem>
				<pointeritem desc = "PICML::Process"></pointeritem>
				<pointeritem desc = "PICML::QoSCharacteristic"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::RTEC_Resource_Factory_Reference" metaref = "1200">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRTEC_Resource_Factory_Reference"></regnode>
			<regnode name = "icon" value ="rtec_resource_factory.bmp"></regnode>
			<regnode name = "porticon" value ="rtec_resource_factory-port.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::RTEC_Resource_Factory"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::RequiredRequestPort" metaref = "1201" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider multiple_connections">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRequiredRequestPort"></regnode>
			<constraint name="MatchingProvidedRequestPort" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let facets = self.connectedFCOs(invoke) in
  facets->forAll ( i : ProvidedRequestPort | 
     let supertypes = i.refersTo().oclAsType(gme::Model).allAscendants(Set{}) in
         (supertypes->one (k: gme::FCO | k.name() = self.refersTo().name())
             or self.refersTo().name() = i.refersTo().name() )
         
)]]>
				<dispname>A RequiredRequestPort should be connected to a ProvidedRequestPort of the same type, or the RequiredRequestPort should be a supertype of ProvidedRequestPort</dispname>
			</constraint>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an RequiredRequestPort can only be connected to an ProvidedRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(ReceptacleDelegate)->forAll (x | x.parent()  = self.parent() implies x <> self)]]>
				<dispname>Only RequiredRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidReceptacleConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.multiple_connections => self.attachingConnections(invoke)->size() <= 1
]]>
				<dispname>A RequiredRequestPort can be connected to multiple ProvidedRequestPorts only if its multiple_connections attribute is true.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="multiple_connections" metaref = "5430" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ReturnType" metaref = "1203">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyReturnType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="return.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Aggregate"></pointeritem>
				<pointeritem desc = "PICML::Alias"></pointeritem>
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Boxed"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::Collection"></pointeritem>
				<pointeritem desc = "PICML::Component"></pointeritem>
				<pointeritem desc = "PICML::ComponentFactory"></pointeritem>
				<pointeritem desc = "PICML::Enum"></pointeritem>
				<pointeritem desc = "PICML::Event"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::Object"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::SwitchedAggregate"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
				<pointeritem desc = "PICML::ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SRGContainerRef" metaref = "3261">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedRiskGroupContainerReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::SRGContainer"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SetException" metaref = "1204">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="setexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SharedComponentReference" metaref = "3182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedComponentReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::ComponentRef"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::SharedResourceRef" metaref = "3189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySharedResourceRef"></regnode>
			<constraint name="NoNullReference_SRG" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A null shared resource reference is not allowed.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::SharedResource"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Supports" metaref = "1205">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySupports"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="supports.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::ThreadPoolRef" metaref = "2743">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyThreadPoolRef"></regnode>
			<regnode name = "icon" value ="ThreadPoolRef.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::SimpleThreadPool"></pointeritem>
				<pointeritem desc = "PICML::ThreadPoolWithLanes"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::Variable" metaref = "5115">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyVariable"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined variable (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Boolean"></pointeritem>
				<pointeritem desc = "PICML::Byte"></pointeritem>
				<pointeritem desc = "PICML::GenericObject"></pointeritem>
				<pointeritem desc = "PICML::GenericValue"></pointeritem>
				<pointeritem desc = "PICML::GenericValueObject"></pointeritem>
				<pointeritem desc = "PICML::LongInteger"></pointeritem>
				<pointeritem desc = "PICML::RealNumber"></pointeritem>
				<pointeritem desc = "PICML::ShortInteger"></pointeritem>
				<pointeritem desc = "PICML::String"></pointeritem>
				<pointeritem desc = "PICML::TypeEncoding"></pointeritem>
				<pointeritem desc = "PICML::TypeKind"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PICML::WorkerType" metaref = "5116">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyWorkerType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined type (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="workerref.gif"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PICML::Worker"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::BindingRef" metaref = "3504">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBindingRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Binding"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::FaultRef" metaref = "3505">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyFaultRef"></regnode>
			<constraint name="ValidWSML::SOAPFaultExtensiondstCardinality182" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::SOAPFaultExtension ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::FaultRef as &quot;dst&quot; over WSML::SOAPFaultExtension, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Fault"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::InputRef" metaref = "3506">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInputRef"></regnode>
			<constraint name="ValidWSML::BodyBindingdstCardinality164" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::BodyBinding ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::IORef as &quot;dst&quot; over WSML::BodyBinding, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Input"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::MessageRef" metaref = "3507">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMessageRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Message"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::OperationRef" metaref = "3508">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOperationRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::NotificationOperation"></pointeritem>
				<pointeritem desc = "WSML::OneWayOperation"></pointeritem>
				<pointeritem desc = "WSML::RequestResponseOperation"></pointeritem>
				<pointeritem desc = "WSML::SolicitResponseOperation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::OutputRef" metaref = "3509">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutputRef"></regnode>
			<constraint name="ValidWSML::BodyBindingdstCardinality164" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::BodyBinding ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::IORef as &quot;dst&quot; over WSML::BodyBinding, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Output"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::Part" metaref = "3515">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPart"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::AtomicType"></pointeritem>
				<pointeritem desc = "WSML::Element"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WSML::PartRef" metaref = "3516">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPartRef"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "WSML::Part"></pointeritem>
			</pointerspec>
		</reference>
		<model name = "PICML::Action" metaref = "5117" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="ValidPICML::EffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TransitionsrcCardinality137" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5432" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "3706" attributes = "Repetitions LogAction" >
				<part metaref = "5433" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Aggregate" metaref = "1206" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="aggregate.bmp"></regnode>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Member" metaref = "5434" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "3709" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5435" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ArtifactContainer" metaref = "1210" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueImplementationArtifactReferences" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->isUnique (i : ImplementationArtifactReference | i.name.trim())]]>
				<dispname>ImplementationArtifactReferences should have unique names</dispname>
			</constraint>
			<constraint name="UniqueImplementationArtifacts" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.atomParts(ImplementationArtifact) in
   artifacts->isUnique (i : ImplementationArtifact | i.name.trim())]]>
				<dispname>Implementation Artifacts should have unique names</dispname>
			</constraint>
			<constraint name="ValidPICML::ArtifactContainerPartCardinality183" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ArtifactContainer, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::ArtifactDependency" metaref = "5436" kind = "PICML::ArtifactDependency"></role>
			<role name = "PICML::ArtifactDependsOn" metaref = "5437" kind = "PICML::ArtifactDependsOn"></role>
			<role name = "PICML::ArtifactDeployRequirement" metaref = "5438" kind = "PICML::ArtifactDeployRequirement"></role>
			<role name = "PICML::ArtifactExecParameter" metaref = "5439" kind = "PICML::ArtifactExecParameter"></role>
			<role name = "PICML::ArtifactInfoProperty" metaref = "5440" kind = "PICML::ArtifactInfoProperty"></role>
			<role name = "PICML::FOU_Requirement" metaref = "5441" kind = "PICML::FOU_Requirement"></role>
			<role name = "PICML::ImplementationArtifact" metaref = "5442" kind = "PICML::ImplementationArtifact"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5443" kind = "PICML::ImplementationArtifactReference"></role>
			<role name = "PICML::Property" metaref = "5444" kind = "PICML::Property"></role>
			<role name = "PICML::RepGRequirement" metaref = "5445" kind = "PICML::RepGRequirement"></role>
			<role name = "PICML::Requirement" metaref = "5446" kind = "PICML::Requirement"></role>
			<aspect name = "Packaging" metaref = "3722" >
				<part metaref = "5447" role = "PICML::ArtifactDependency" primary = "yes" linked = "no"></part>
				<part metaref = "5448" role = "PICML::ArtifactDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "5449" role = "PICML::ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5450" role = "PICML::ArtifactExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5451" role = "PICML::ArtifactInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5452" role = "PICML::FOU_Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "5453" role = "PICML::ImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "5454" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "5455" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5456" role = "PICML::RepGRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5457" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Attribute" metaref = "1230" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
				<regnode name = "icon" value ="attribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeDelegatesrcCardinality17" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;src&quot; over PICML::AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeValuedstCardinality24" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;dst&quot; over PICML::AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ReadonlyAttributePartCardinality218" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::AttributeMember" metaref = "5458" kind = "PICML::AttributeMember"></role>
			<role name = "PICML::GetException" metaref = "5459" kind = "PICML::GetException"></role>
			<role name = "PICML::SetException" metaref = "5460" kind = "PICML::SetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "3737" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5461" role = "PICML::AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5462" role = "PICML::GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5463" role = "PICML::SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::BandedConnection" metaref = "2744" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="BandedConnection.bmp"></regnode>
			<constraint name="ValidPICML::BandedConnectionPartCardinality184" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ConnectionBand" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::BandedConnection, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::ConnectionBand" metaref = "5464" kind = "PICML::ConnectionBand"></role>
			<aspect name = "QoS" metaref = "3742" >
				<part metaref = "5465" role = "PICML::ConnectionBand" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::BenchmarkAnalysis" metaref = "1238" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Average" metaref = "5466" kind = "PICML::Average"></role>
			<role name = "PICML::BenchmarkCharacteristics" metaref = "5467" kind = "PICML::BenchmarkCharacteristics"></role>
			<role name = "PICML::CompRef" metaref = "5468" kind = "PICML::CompRef"></role>
			<role name = "PICML::ComponentOperation" metaref = "5469" kind = "PICML::ComponentOperation"></role>
			<role name = "PICML::Event" metaref = "5470" kind = "PICML::Event"></role>
			<role name = "PICML::EventRef" metaref = "5471" kind = "PICML::EventRef"></role>
			<role name = "PICML::FactoryOperation" metaref = "5472" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::FixedIterationBenchmarks" metaref = "5473" kind = "PICML::FixedIterationBenchmarks"></role>
			<role name = "PICML::Jitter" metaref = "5474" kind = "PICML::Jitter"></role>
			<role name = "PICML::Latency" metaref = "5475" kind = "PICML::Latency"></role>
			<role name = "PICML::LookupOperation" metaref = "5476" kind = "PICML::LookupOperation"></role>
			<role name = "PICML::Maximum" metaref = "5477" kind = "PICML::Maximum"></role>
			<role name = "PICML::MetricConnection" metaref = "5478" kind = "PICML::MetricConnection"></role>
			<role name = "PICML::Minimum" metaref = "5479" kind = "PICML::Minimum"></role>
			<role name = "PICML::OnewayOperation" metaref = "5480" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::OperationRef" metaref = "5481" kind = "PICML::OperationRef"></role>
			<role name = "PICML::PeriodicBenchmarks" metaref = "5482" kind = "PICML::PeriodicBenchmarks"></role>
			<role name = "PICML::Task" metaref = "5483" kind = "PICML::Task"></role>
			<role name = "PICML::TaskSet" metaref = "5484" kind = "PICML::TaskSet"></role>
			<role name = "PICML::Throughput" metaref = "5485" kind = "PICML::Throughput"></role>
			<role name = "PICML::TimeProbe" metaref = "5486" kind = "PICML::TimeProbe"></role>
			<role name = "PICML::TimerConnection" metaref = "5487" kind = "PICML::TimerConnection"></role>
			<role name = "PICML::TimerEventSinkConn" metaref = "5488" kind = "PICML::TimerEventSinkConn"></role>
			<role name = "PICML::TriggerBenchmarks" metaref = "5489" kind = "PICML::TriggerBenchmarks"></role>
			<role name = "PICML::TwowayOperation" metaref = "5490" kind = "PICML::TwowayOperation"></role>
			<role name = "PICML::WorkLoadOperationConnection" metaref = "5491" kind = "PICML::WorkLoadOperationConnection"></role>
			<role name = "PICML::WorkloadCharacteristics" metaref = "5492" kind = "PICML::WorkloadCharacteristics"></role>
			<aspect name = "ComponentMetrics" metaref = "3771" >
				<part metaref = "5493" role = "PICML::BenchmarkCharacteristics" primary = "yes" linked = "no"></part>
				<part metaref = "5494" role = "PICML::CompRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5495" role = "PICML::ComponentOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5496" role = "PICML::EventRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5497" role = "PICML::FixedIterationBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5498" role = "PICML::Latency" primary = "yes" linked = "no"></part>
				<part metaref = "5499" role = "PICML::MetricConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5500" role = "PICML::OperationRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5501" role = "PICML::PeriodicBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5502" role = "PICML::Task" primary = "yes" linked = "no"></part>
				<part metaref = "5503" role = "PICML::TaskSet" primary = "yes" linked = "no"></part>
				<part metaref = "5504" role = "PICML::Throughput" primary = "yes" linked = "no"></part>
				<part metaref = "5505" role = "PICML::TimeProbe" primary = "yes" linked = "no"></part>
				<part metaref = "5506" role = "PICML::TimerConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5507" role = "PICML::TimerEventSinkConn" primary = "yes" linked = "no"></part>
				<part metaref = "5508" role = "PICML::TriggerBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "5509" role = "PICML::WorkLoadOperationConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5510" role = "PICML::WorkloadCharacteristics" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Bridge" metaref = "1285" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Bridge"></regnode>
			<constraint name="ValidPICML::Bridge2InterconnectdstCardinality28" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Bridge2Interconnect ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Bridge as &quot;dst&quot; over PICML::Bridge2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::Interconnect2BridgesrcCardinality77" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Interconnect2Bridge ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Bridge as &quot;src&quot; over PICML::Interconnect2Bridge, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::Resource" metaref = "5511" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "3791" attributes = "label" >
				<part metaref = "5512" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::CPU" metaref = "2554" attributes = "Arch SMP isInvariant" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::QoSCharacteristicRef" metaref = "5513" kind = "PICML::QoSCharacteristicRef"></role>
			<role name = "PICML::QoSDimension" metaref = "5514" kind = "PICML::QoSDimension"></role>
			<role name = "PICML::QoSParameter" metaref = "5515" kind = "PICML::QoSParameter"></role>
			<aspect name = "QoS" metaref = "3796" attributes = "Arch SMP isInvariant" >
				<part metaref = "5516" role = "PICML::QoSCharacteristicRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5517" role = "PICML::QoSDimension" primary = "yes" linked = "yes"></part>
				<part metaref = "5518" role = "PICML::QoSParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Capability" metaref = "1289" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Capability.bmp"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let sp = self.modelParts(SatisfierProperty) in
          sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
				<dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "5519" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Packaging" metaref = "3801" attributes = "resourceType" >
				<part metaref = "5520" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Component" metaref = "1293" attributes = "VersionTag SpecifyIdTag UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoEmitsUsesPortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ()->forAll (
  a, b : gme::Reference | (a.oclAsType (OutEventPort).single_destination = true
                                        and b.isTypeOf (RequiredRequestPort)
                                       )
  implies
    a.name <> b.name)]]>
				<dispname>None of a Component&apos;s RequiredRequestPort names can be the same as any of its single-destination OutEventPort names</dispname>
			</constraint>
			<constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
				<dispname>A component that has a base component may not also support interfaces</dispname>
			</constraint>
			<constraint name="NoSameTypePortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts (InEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (OutEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (ProvidedRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (RequiredRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)]]>
				<dispname>A Component&apos;s ports of the category must all have unique names</dispname>
			</constraint>
			<constraint name="NonRedundantProperties" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.bagConnectedFCOs (AssemblyConfigProperty)->isUnique( x: Property | x.name().trim())]]>
				<dispname>A Property can be associated with a Component only once.</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="PropertyAsAttribute" eventmask = "0x800" depth = "1" priority = "2">
				<![CDATA[let properties = self.connectedFCOs(AssemblyConfigProperty) in
  properties->forAll (x : AssemblyConfigProperty |
        let attributes = self.modelParts(ReadonlyAttribute) in
             not attributes->exists (attr : ReadonlyAttribute |
                           x.name() = attr.name() )) ]]>
				<dispname>A Property has the same name as an Attribute of the Component.  To specify values for the Component&apos;s attributes, connect the Property direcly to the attribute available as a port.</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let components = project.allInstancesOf (Component) in
   components->forAll  (x : Component | 
                         (self <> x)  
                            implies
                         (
                            (  x.UUID.trim() <> self.UUID.trim()  )
                              or
                            (  x.UUID.trim() = ""  or  self.UUID.trim() = ""   )
                         )
              )
                         ]]>
				<dispname>Every Component instance should have a unique UUID</dispname>
			</constraint>
			<constraint name="UniqueWorkerType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (WorkerType) in
   workers->isUnique (iter : WorkerType | iter->name ())]]>
				<dispname>Component contains duplicate worker names</dispname>
			</constraint>
			<constraint name="UnknownOutput" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let actions = self.parts (OutputAction) in
let outports = self.parts (OutEventPort) in

actions.forAll (
    action : OutputAction |
    outports.exists (
        outport : OutEventPort | outport->name () = action->name ()))]]>
				<dispname>The component contains a known output action. Please verify the names of output actions match the name of a output port.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentPartCardinality185" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Environment" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::Component, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Action" metaref = "5521" kind = "PICML::Action"></role>
			<role name = "PICML::Attribute" metaref = "5522" kind = "PICML::Attribute"></role>
			<role name = "PICML::CompositeAction" metaref = "5523" kind = "PICML::CompositeAction"></role>
			<role name = "PICML::Effect" metaref = "5524" kind = "PICML::Effect"></role>
			<role name = "PICML::Environment" metaref = "5525" kind = "PICML::Environment"></role>
			<role name = "PICML::Finish" metaref = "5526" kind = "PICML::Finish"></role>
			<role name = "PICML::InEventPort" metaref = "5527" kind = "PICML::InEventPort"></role>
			<role name = "PICML::Input" metaref = "5528" kind = "PICML::Input"></role>
			<role name = "PICML::InputAction" metaref = "5529" kind = "PICML::InputAction"></role>
			<role name = "PICML::MultiInput" metaref = "5530" kind = "PICML::MultiInput"></role>
			<role name = "PICML::OutEventPort" metaref = "5531" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::OutputAction" metaref = "5532" kind = "PICML::OutputAction"></role>
			<role name = "PICML::PeriodicAction" metaref = "5533" kind = "PICML::PeriodicAction"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5534" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5535" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5536" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::State" metaref = "5537" kind = "PICML::State"></role>
			<role name = "PICML::Supports" metaref = "5538" kind = "PICML::Supports"></role>
			<role name = "PICML::Transition" metaref = "5539" kind = "PICML::Transition"></role>
			<role name = "PICML::Variable" metaref = "5540" kind = "PICML::Variable"></role>
			<role name = "PICML::WorkerType" metaref = "5541" kind = "PICML::WorkerType"></role>
			<aspect name = "InterfaceDefinition" metaref = "3824" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "5542" role = "PICML::Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5543" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5544" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5545" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5546" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5547" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5548" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
			<aspect name = "Behavior" metaref = "3832" attributes = "VersionTag SpecifyIdTag UUID label" >
				<part metaref = "5549" role = "PICML::Action" primary = "yes" linked = "no"></part>
				<part metaref = "5550" role = "PICML::CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "5551" role = "PICML::Effect" primary = "yes" linked = "no"></part>
				<part metaref = "5552" role = "PICML::Environment" primary = "yes" linked = "no"></part>
				<part metaref = "5553" role = "PICML::Finish" primary = "yes" linked = "no"></part>
				<part metaref = "5554" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5555" role = "PICML::Input" primary = "yes" linked = "no"></part>
				<part metaref = "5556" role = "PICML::InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5557" role = "PICML::MultiInput" primary = "yes" linked = "no"></part>
				<part metaref = "5558" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5559" role = "PICML::OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5560" role = "PICML::PeriodicAction" primary = "yes" linked = "no"></part>
				<part metaref = "5561" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5562" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5563" role = "PICML::State" primary = "yes" linked = "no"></part>
				<part metaref = "5564" role = "PICML::Transition" primary = "yes" linked = "no"></part>
				<part metaref = "5565" role = "PICML::Variable" primary = "yes" linked = "no"></part>
				<part metaref = "5566" role = "PICML::WorkerType" primary = "yes" kindaspect = "Behavior" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentAssembly" metaref = "1309" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x80000004" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" implies self.isInstance()
   endif]]>
				<dispname>Only assembly or component instances can be created inside a Component Assembly</dispname>
			</constraint>
			<constraint name="RequiredComponentPackage" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let packages = project.allInstancesOf (ComponentPackage) in
instances->forAll (x : Component |
    let myType = x.ComponentParentType() in
         packages->exists (pkg: ComponentPackage | 
               let pkgInterfaces = pkg.connectedFCOs(PackageInterface) in 
               let mimpls = pkg.MonolithicImpls() in
               mimpls->size() >= 1 and pkgInterfaces->size() = 1 and
               mimpls->forAll (impl  : MonolithicImplementation | 
                     let impleIfs = impl.connectedFCOs(Implements) in 
                          impleIfs->size() = 1 and
                          impleIfs->forAll (ref1 : Reference | 
                                              pkgInterfaces->forAll (ref2 : Reference |  
                                                                     ref1.refersTo().name = ref2.refersTo().name
                                                                      and 
                                                                     ref1.refersTo().name = myType.name() 
                                                                    )
                                           ) 
                               )
                          )
                   )]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation implementing its interface and packaged in a ComponentPackage.</dispname>
			</constraint>
			<constraint name="RequiredMonolithicImplementation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let monolithicImpls = project.allInstancesOf (MonolithicImplementation) in
instances->forAll (x : Component | 
         let myType = x.ComponentParentType() in
                 monolithicImpls->exists ( impl : MonolithicImplementation | 
                    let interfaces = impl.connectedFCOs(Implements) in
                     interfaces->size() = 1 and
                         interfaces->exists (interface : Reference |
                             interface.refersTo().name() = myType.name() )  ) )
                                                            ]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation, or there should exist a MonolithicImplementation for the corresponding component type</dispname>
			</constraint>
			<constraint name="UniqueAttributeMappingNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(AttributeMapping)->isUnique( x : AttributeMapping | x.name().trim())]]>
				<dispname>AttributeMappings used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueConnectorNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let connectors = self.atomParts(PublishConnector) in
          connectors->isUnique (i : PublishConnector | i.name.trim())]]>
				<dispname>Connectors used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueInstanceName" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let components = self.modelParts(Component) in
          components->isUnique (i : Component | i.name.trim())]]>
				<dispname>Components of an Assembly should have unique names</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let mappings = self.referenceParts (AttributeMapping) in
    let children = self.modelParts(ComponentAssembly) in
           mappings->forAll ( x : AttributeMapping | 
                let delegates = x.connectedFCOs("dstAttributeMappingDelegate", AttributeMappingDelegate) in
                       delegates->forAll ( y : FCO |
                              let  delParent : Model = y.parent() in
                                          children->exists ( z : ComponentAssembly | delParent.name() = z.name() ) ) ) ]]>
				<dispname>AttributeMappings can only be delegated from a high-level assembly to sub-assemblies, and not vice-versa (Change the connection direction)</dispname>
			</constraint>
			<constraint name="ValidPICML::CriticalPathdstCardinality40" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::CriticalPath ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentAssembly as &quot;dst&quot; over PICML::CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ImplementsdstCardinality66" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentImplementation as &quot;dst&quot; over PICML::Implements, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::AssemblyConfigProperty" metaref = "6317" kind = "PICML::AssemblyConfigProperty"></role>
			<role name = "PICML::AssemblyDeployRequirement" metaref = "6318" kind = "PICML::AssemblyDeployRequirement"></role>
			<role name = "PICML::AssemblyselectRequirement" metaref = "6319" kind = "PICML::AssemblyselectRequirement"></role>
			<role name = "PICML::AttributeDelegate" metaref = "6320" kind = "PICML::AttributeDelegate"></role>
			<role name = "PICML::AttributeMapping" metaref = "6321" kind = "PICML::AttributeMapping"></role>
			<role name = "PICML::AttributeMappingDelegate" metaref = "6322" kind = "PICML::AttributeMappingDelegate"></role>
			<role name = "PICML::AttributeMappingValue" metaref = "6323" kind = "PICML::AttributeMappingValue"></role>
			<role name = "PICML::AttributeValue" metaref = "6324" kind = "PICML::AttributeValue"></role>
			<role name = "PICML::Component" metaref = "6325" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentAssembly" metaref = "6326" kind = "PICML::ComponentAssembly"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "6327" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentPackage" metaref = "6328" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentPackageReference" metaref = "6329" kind = "PICML::ComponentPackageReference"></role>
			<role name = "PICML::ComponentRef" metaref = "6330" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::EventSinkDelegate" metaref = "6331" kind = "PICML::EventSinkDelegate"></role>
			<role name = "PICML::EventSourceDelegate" metaref = "6332" kind = "PICML::EventSourceDelegate"></role>
			<role name = "PICML::ExternalDelegate" metaref = "6333" kind = "PICML::ExternalDelegate"></role>
			<role name = "PICML::ExternalReferenceEndPoint" metaref = "6334" kind = "PICML::ExternalReferenceEndPoint"></role>
			<role name = "PICML::FOU_Requirement" metaref = "6335" kind = "PICML::FOU_Requirement"></role>
			<role name = "PICML::FacetDelegate" metaref = "6336" kind = "PICML::FacetDelegate"></role>
			<role name = "PICML::InEventPort" metaref = "6337" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "6338" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::Property" metaref = "6339" kind = "PICML::Property"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "6340" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::PublishConnector" metaref = "6341" kind = "PICML::PublishConnector"></role>
			<role name = "PICML::QoSDecoration" metaref = "6342" kind = "PICML::QoSDecoration"></role>
			<role name = "PICML::QoSValue" metaref = "6343" kind = "PICML::QoSValue"></role>
			<role name = "PICML::ReceptacleDelegate" metaref = "6344" kind = "PICML::ReceptacleDelegate"></role>
			<role name = "PICML::RepGRequirement" metaref = "6345" kind = "PICML::RepGRequirement"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "6346" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::Requirement" metaref = "6347" kind = "PICML::Requirement"></role>
			<role name = "PICML::deliverTo" metaref = "6348" kind = "PICML::deliverTo"></role>
			<role name = "PICML::emit" metaref = "6349" kind = "PICML::emit"></role>
			<role name = "PICML::invoke" metaref = "6350" kind = "PICML::invoke"></role>
			<role name = "PICML::publish" metaref = "6351" kind = "PICML::publish"></role>
			<aspect name = "Packaging" metaref = "6357" attributes = "UUID label" >
				<part metaref = "6358" role = "PICML::AssemblyConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "6359" role = "PICML::AssemblyDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "6360" role = "PICML::AssemblyselectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "6361" role = "PICML::AttributeDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6362" role = "PICML::AttributeMapping" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "6363" role = "PICML::AttributeMappingDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6364" role = "PICML::AttributeMappingValue" primary = "yes" linked = "no"></part>
				<part metaref = "6365" role = "PICML::AttributeValue" primary = "yes" linked = "no"></part>
				<part metaref = "6366" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "6367" role = "PICML::ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "6368" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "6369" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "6370" role = "PICML::ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "6371" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6372" role = "PICML::EventSinkDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6373" role = "PICML::EventSourceDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6374" role = "PICML::ExternalDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6375" role = "PICML::ExternalReferenceEndPoint" primary = "yes" linked = "no"></part>
				<part metaref = "6376" role = "PICML::FOU_Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "6377" role = "PICML::FacetDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6378" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "6379" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "6380" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "6381" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "6382" role = "PICML::PublishConnector" primary = "yes" linked = "no"></part>
				<part metaref = "6383" role = "PICML::ReceptacleDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "6384" role = "PICML::RepGRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "6385" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "6386" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "6387" role = "PICML::deliverTo" primary = "yes" linked = "no"></part>
				<part metaref = "6388" role = "PICML::emit" primary = "yes" linked = "no"></part>
				<part metaref = "6389" role = "PICML::invoke" primary = "yes" linked = "no"></part>
				<part metaref = "6390" role = "PICML::publish" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "QoS" metaref = "6352" attributes = "UUID label" >
				<part metaref = "6353" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "6354" role = "PICML::ComponentAssembly" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "6355" role = "PICML::QoSDecoration" primary = "yes" linked = "no"></part>
				<part metaref = "6356" role = "PICML::QoSValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentContainer" metaref = "1369" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::ComponentContainerPartCardinality186" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentConfigProperty" metaref = "5567" kind = "PICML::ComponentConfigProperty"></role>
			<role name = "PICML::ComponentInfoProperty" metaref = "5568" kind = "PICML::ComponentInfoProperty"></role>
			<role name = "PICML::ComponentProperty" metaref = "5569" kind = "PICML::ComponentProperty"></role>
			<role name = "PICML::ComponentPropertyDescription" metaref = "5570" kind = "PICML::ComponentPropertyDescription"></role>
			<role name = "PICML::ComponentRef" metaref = "5571" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Property" metaref = "5572" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "3857" >
				<part metaref = "5573" role = "PICML::ComponentConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5574" role = "PICML::ComponentInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5575" role = "PICML::ComponentProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5576" role = "PICML::ComponentPropertyDescription" primary = "yes" linked = "no"></part>
				<part metaref = "5577" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5578" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentFactory" metaref = "1383" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="componentfactory.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentFactoryPartCardinality187" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::LookupKey" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentFactory, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ManagesComponentdstCardinality86" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::ManagesComponent ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ComponentFactory as &quot;dst&quot; over PICML::ManagesComponent, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Aggregate" metaref = "5579" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5580" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5581" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5582" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5583" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5584" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5585" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "5586" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "5587" kind = "PICML::Inherits"></role>
			<role name = "PICML::LookupKey" metaref = "5588" kind = "PICML::LookupKey"></role>
			<role name = "PICML::LookupOperation" metaref = "5589" kind = "PICML::LookupOperation"></role>
			<role name = "PICML::OnewayOperation" metaref = "5590" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5591" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "5592" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5593" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5594" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "3880" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5595" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5596" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5597" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5598" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5599" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5600" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5601" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5602" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5603" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5604" role = "PICML::LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5605" role = "PICML::LookupOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5606" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5607" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5608" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5609" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5610" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentImplementationContainer" metaref = "1417" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
          (self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
				<dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
			</constraint>
			<constraint name="UniquePrimaryArtifacts" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.referenceParts(ImplementationArtifactReference) in
   artifacts->isUnique (i : ImplementationArtifactReference | i.name.trim())]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should have unique names</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentImplementationContainerPartCardinality188" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentImplementationContainerPartCardinality189" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PathReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentImplementationContainerPartCardinality190" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Implements" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ComponentImplementationContainerPartCardinality191" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentImplementation" ) -> size + self.parts( "PICML::MonolithicImplementation" ) -> size + self.parts( "PICML::ComponentAssembly" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentImplementationContainer, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::Capability" metaref = "5611" kind = "PICML::Capability"></role>
			<role name = "PICML::ComponentAssembly" metaref = "6391" kind = "PICML::ComponentAssembly"></role>
			<role name = "PICML::ComponentRef" metaref = "5612" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::ConfigProperty" metaref = "5613" kind = "PICML::ConfigProperty"></role>
			<role name = "PICML::CriticalPath" metaref = "5614" kind = "PICML::CriticalPath"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5615" kind = "PICML::ImplementationArtifactReference"></role>
			<role name = "PICML::ImplementationCapability" metaref = "5616" kind = "PICML::ImplementationCapability"></role>
			<role name = "PICML::ImplementationDependency" metaref = "5617" kind = "PICML::ImplementationDependency"></role>
			<role name = "PICML::ImplementationDependsOn" metaref = "5618" kind = "PICML::ImplementationDependsOn"></role>
			<role name = "PICML::ImplementationRequirement" metaref = "5619" kind = "PICML::ImplementationRequirement"></role>
			<role name = "PICML::Implements" metaref = "5620" kind = "PICML::Implements"></role>
			<role name = "PICML::InfoProperty" metaref = "5621" kind = "PICML::InfoProperty"></role>
			<role name = "PICML::MonolithDeployRequirement" metaref = "5622" kind = "PICML::MonolithDeployRequirement"></role>
			<role name = "PICML::MonolithExecParameter" metaref = "5623" kind = "PICML::MonolithExecParameter"></role>
			<role name = "PICML::MonolithicImplementation" metaref = "5624" kind = "PICML::MonolithicImplementation"></role>
			<role name = "PICML::MonolithprimaryArtifact" metaref = "5625" kind = "PICML::MonolithprimaryArtifact"></role>
			<role name = "PICML::PathReference" metaref = "5626" kind = "PICML::PathReference"></role>
			<role name = "PICML::Property" metaref = "5627" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "3915" >
				<part metaref = "5629" role = "PICML::Capability" primary = "yes" linked = "no"></part>
				<part metaref = "6392" role = "PICML::ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "5630" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5631" role = "PICML::ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5632" role = "PICML::CriticalPath" primary = "yes" linked = "no"></part>
				<part metaref = "5633" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "5634" role = "PICML::ImplementationCapability" primary = "yes" linked = "no"></part>
				<part metaref = "5635" role = "PICML::ImplementationDependency" primary = "yes" linked = "no"></part>
				<part metaref = "5636" role = "PICML::ImplementationDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "5637" role = "PICML::ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5638" role = "PICML::Implements" primary = "yes" linked = "no"></part>
				<part metaref = "5639" role = "PICML::InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5640" role = "PICML::MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5641" role = "PICML::MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5642" role = "PICML::MonolithicImplementation" primary = "yes" linked = "no"></part>
				<part metaref = "5643" role = "PICML::MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "5644" role = "PICML::PathReference" primary = "yes" kindaspect = "PathDiagram" linked = "no"></part>
				<part metaref = "5645" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ComponentPropertyDescription" metaref = "1451" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
			<constraint name="ValidPICML::ComponentPropertyDescriptionPartCardinality192" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ComponentPropertyDescription, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "5647" kind = "PICML::DataType"></role>
			<aspect name = "Packaging" metaref = "3935" >
				<part metaref = "5648" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::CompositeAction" metaref = "5168" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="composite.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="ValidPICML::CompositeActionPartCardinality193" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::InputAction" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::CompositeAction, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::CompositeActionPartCardinality194" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Finish" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::CompositeAction, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::EffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TransitionsrcCardinality137" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Action" metaref = "5649" kind = "PICML::Action"></role>
			<role name = "PICML::CompositeAction" metaref = "5650" kind = "PICML::CompositeAction"></role>
			<role name = "PICML::Effect" metaref = "5651" kind = "PICML::Effect"></role>
			<role name = "PICML::Finish" metaref = "5652" kind = "PICML::Finish"></role>
			<role name = "PICML::InputAction" metaref = "5653" kind = "PICML::InputAction"></role>
			<role name = "PICML::OutputAction" metaref = "5654" kind = "PICML::OutputAction"></role>
			<role name = "PICML::Property" metaref = "5655" kind = "PICML::Property"></role>
			<role name = "PICML::State" metaref = "5656" kind = "PICML::State"></role>
			<role name = "PICML::Transition" metaref = "5657" kind = "PICML::Transition"></role>
			<aspect name = "Behavior" metaref = "3947" attributes = "Repetitions LogAction" >
				<part metaref = "5658" role = "PICML::Action" primary = "yes" linked = "no"></part>
				<part metaref = "5659" role = "PICML::CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "5660" role = "PICML::Effect" primary = "yes" linked = "no"></part>
				<part metaref = "5661" role = "PICML::Finish" primary = "yes" linked = "no"></part>
				<part metaref = "5662" role = "PICML::InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5663" role = "PICML::OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5664" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5665" role = "PICML::State" primary = "yes" linked = "no"></part>
				<part metaref = "5666" role = "PICML::Transition" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Concurrency" metaref = "2562" attributes = "isInvariant MaxRequests" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::QoSCharacteristicRef" metaref = "5667" kind = "PICML::QoSCharacteristicRef"></role>
			<role name = "PICML::QoSDimension" metaref = "5668" kind = "PICML::QoSDimension"></role>
			<role name = "PICML::QoSParameter" metaref = "5669" kind = "PICML::QoSParameter"></role>
			<aspect name = "QoS" metaref = "3960" attributes = "isInvariant MaxRequests" >
				<part metaref = "5670" role = "PICML::QoSCharacteristicRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5671" role = "PICML::QoSDimension" primary = "yes" linked = "yes"></part>
				<part metaref = "5672" role = "PICML::QoSParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ConnectedComponent" metaref = "2011" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::DstEdgedstCardinality42" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;dst&quot; over PICML::DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::SrcEdgesrcCardinality131" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::GraphVertex as &quot;src&quot; over PICML::SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::DstEdge" metaref = "5673" kind = "PICML::DstEdge"></role>
			<role name = "PICML::InEventPort" metaref = "5674" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5675" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5676" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5677" kind = "PICML::RequiredRequestPort"></role>
			<aspect name = "PathDiagram" metaref = "3969" >
				<part metaref = "5678" role = "PICML::DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "5679" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5680" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5681" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5682" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Connection" metaref = "2684" attributes = "isInvariant Transport" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::QoSCharacteristicRef" metaref = "5683" kind = "PICML::QoSCharacteristicRef"></role>
			<role name = "PICML::QoSDimension" metaref = "5684" kind = "PICML::QoSDimension"></role>
			<role name = "PICML::QoSParameter" metaref = "5685" kind = "PICML::QoSParameter"></role>
			<aspect name = "QoS" metaref = "3978" attributes = "isInvariant Transport" >
				<part metaref = "5686" role = "PICML::QoSCharacteristicRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5687" role = "PICML::QoSDimension" primary = "yes" linked = "yes"></part>
				<part metaref = "5688" role = "PICML::QoSParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::DeploymentPlan" metaref = "1455" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::CollocationGroup" metaref = "5689" kind = "PICML::CollocationGroup"></role>
			<role name = "PICML::ComponentAssemblyReference" metaref = "5690" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentRef" metaref = "5691" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::InstanceMapping" metaref = "5692" kind = "PICML::InstanceMapping"></role>
			<role name = "PICML::NodeReference" metaref = "5693" kind = "PICML::NodeReference"></role>
			<role name = "PICML::SharedComponentReference" metaref = "5694" kind = "PICML::SharedComponentReference"></role>
			<aspect name = "NodeMapping" metaref = "3988" attributes = "UUID label" >
				<part metaref = "5695" role = "PICML::CollocationGroup" primary = "yes" linked = "no"></part>
				<part metaref = "5696" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5697" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5698" role = "PICML::InstanceMapping" primary = "yes" linked = "no"></part>
				<part metaref = "5699" role = "PICML::NodeReference" primary = "yes" kindaspect = "Target" linked = "no"></part>
				<part metaref = "5700" role = "PICML::SharedComponentReference" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Domain" metaref = "1467" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Domain"></regnode>
			<role name = "PICML::Bridge" metaref = "5701" kind = "PICML::Bridge"></role>
			<role name = "PICML::Bridge2Interconnect" metaref = "5702" kind = "PICML::Bridge2Interconnect"></role>
			<role name = "PICML::Interconnect" metaref = "5703" kind = "PICML::Interconnect"></role>
			<role name = "PICML::Interconnect2Bridge" metaref = "5704" kind = "PICML::Interconnect2Bridge"></role>
			<role name = "PICML::Interconnect2Node" metaref = "5705" kind = "PICML::Interconnect2Node"></role>
			<role name = "PICML::Node" metaref = "5706" kind = "PICML::Node"></role>
			<role name = "PICML::Node2Interconnect" metaref = "5707" kind = "PICML::Node2Interconnect"></role>
			<role name = "PICML::Property" metaref = "5708" kind = "PICML::Property"></role>
			<role name = "PICML::SharedResource" metaref = "5709" kind = "PICML::SharedResource"></role>
			<role name = "PICML::Shares" metaref = "5710" kind = "PICML::Shares"></role>
			<aspect name = "Target" metaref = "4005" attributes = "UUID label" >
				<part metaref = "5711" role = "PICML::Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "5712" role = "PICML::Bridge2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5713" role = "PICML::Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5714" role = "PICML::Interconnect2Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "5715" role = "PICML::Interconnect2Node" primary = "yes" linked = "no"></part>
				<part metaref = "5716" role = "PICML::Node" primary = "yes" linked = "no"></part>
				<part metaref = "5717" role = "PICML::Node2Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "5718" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5719" role = "PICML::SharedResource" primary = "yes" linked = "no"></part>
				<part metaref = "5720" role = "PICML::Shares" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Enum" metaref = "1489" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enum.bmp"></regnode>
			<constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
				<dispname>An enum&apos;s member names must be unique</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML::EnumPartCardinality195" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::EnumValue" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::Enum, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::EnumValue" metaref = "5721" kind = "PICML::EnumValue"></role>
			<aspect name = "InterfaceDefinition" metaref = "4017" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5722" role = "PICML::EnumValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Event" metaref = "1493" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="event.bmp"></regnode>
			<constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "5723" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "PICML::Aggregate" metaref = "5724" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5725" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5726" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5727" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5728" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5729" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5730" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "5731" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "5732" kind = "PICML::Inherits"></role>
			<role name = "PICML::MakeMemberPrivate" metaref = "5733" kind = "PICML::MakeMemberPrivate"></role>
			<role name = "PICML::Member" metaref = "5734" kind = "PICML::Member"></role>
			<role name = "PICML::OnewayOperation" metaref = "5735" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::PrivateFlag" metaref = "5736" kind = "PICML::PrivateFlag"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5737" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "5738" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5739" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5740" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "4037" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "5741" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5742" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5743" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5744" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5745" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5746" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5747" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5748" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5749" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5750" role = "PICML::MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "5751" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5752" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5753" role = "PICML::PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "5754" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5755" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5756" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5757" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::EventChannelConfiguration" metaref = "1530" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::ComponentRef" metaref = "5758" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::InEventPort" metaref = "5759" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5760" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5761" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::RTEC_Connection" metaref = "5762" kind = "PICML::RTEC_Connection"></role>
			<role name = "PICML::RTEC_Proxy_Consumer" metaref = "5763" kind = "PICML::RTEC_Proxy_Consumer"></role>
			<role name = "PICML::RTEC_Proxy_Supplier" metaref = "5764" kind = "PICML::RTEC_Proxy_Supplier"></role>
			<role name = "PICML::RTEC_Resource_Factory" metaref = "5765" kind = "PICML::RTEC_Resource_Factory"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5766" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::Use_RTEC_Filter" metaref = "5767" kind = "PICML::Use_RTEC_Filter"></role>
			<role name = "PICML::Use_RT_Info" metaref = "5768" kind = "PICML::Use_RT_Info"></role>
			<aspect name = "RtecConfigAspect" metaref = "4066" >
				<part metaref = "5769" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5770" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5771" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5772" role = "PICML::RTEC_Connection" primary = "yes" linked = "no"></part>
				<part metaref = "5773" role = "PICML::RTEC_Proxy_Consumer" primary = "yes" linked = "no"></part>
				<part metaref = "5774" role = "PICML::RTEC_Proxy_Supplier" primary = "yes" linked = "no"></part>
				<part metaref = "5775" role = "PICML::RTEC_Resource_Factory" primary = "yes" linked = "no"></part>
				<part metaref = "5776" role = "PICML::Use_RTEC_Filter" primary = "yes" linked = "no"></part>
				<part metaref = "5777" role = "PICML::Use_RT_Info" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Exception" metaref = "1552" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="exception.bmp"></regnode>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Member" metaref = "5778" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "4077" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5779" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ExecutorProject" metaref = "1556" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML::ExecutorProjectPartCardinality196" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ExecutorProject, has to match 1.</dispname>
			</constraint>
			<constraint name="execOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>One An executor project can exist as a part of the Component Project</dispname>
			</constraint>
			<role name = "PICML::ImplementationArtifactReference" metaref = "5780" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "4080" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "5781" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::FOU_Requirement" metaref = "3275" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<constraint name="NotEmpty" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts().size() > 0]]>
				<dispname>FOU Requirements can&apos;t be empty.</dispname>
			</constraint>
			<constraint name="ValidPICML::ReqConnectionsrcCardinality127" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::ReqConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::FOU_Requirement as &quot;src&quot; over PICML::ReqConnection, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5782" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "4083" attributes = "resourceType" >
				<part metaref = "5783" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::FTRequirements" metaref = "3249" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::FTRequirementsPartCardinality197" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DeploymentPlanRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::FTRequirements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::FTRequirementsPartCardinality198" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::SRGContainerRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::FTRequirements, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::DeploymentPlanRef" metaref = "5784" kind = "PICML::DeploymentPlanRef"></role>
			<role name = "PICML::FOU_Requirement" metaref = "5785" kind = "PICML::FOU_Requirement"></role>
			<role name = "PICML::FailOverUnit" metaref = "5786" kind = "PICML::FailOverUnit"></role>
			<role name = "PICML::ReqConnection" metaref = "5787" kind = "PICML::ReqConnection"></role>
			<role name = "PICML::SRGContainerRef" metaref = "5788" kind = "PICML::SRGContainerRef"></role>
			<aspect name = "FT" metaref = "4090" >
				<part metaref = "5789" role = "PICML::DeploymentPlanRef" primary = "yes" kindaspect = "NodeMapping" linked = "no"></part>
				<part metaref = "5790" role = "PICML::FOU_Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "5791" role = "PICML::FailOverUnit" primary = "yes" linked = "no"></part>
				<part metaref = "5792" role = "PICML::ReqConnection" primary = "yes" linked = "no"></part>
				<part metaref = "5793" role = "PICML::SRGContainerRef" primary = "yes" kindaspect = "FT" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::FactoryOperation" metaref = "1560" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="factory.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "5794" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "5795" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "4098" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5796" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5797" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::FailOverUnit" metaref = "3210" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="FOU.bmp"></regnode>
			<constraint name="NotEmpty" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts().size() > 0]]>
				<dispname>FailOverUnit can&apos;t be empty.</dispname>
			</constraint>
			<constraint name="ValidPICML::ReqConnectiondstCardinality128" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::ReqConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::FTComposite as &quot;dst&quot; over PICML::ReqConnection, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentAssemblyReference" metaref = "5798" kind = "PICML::ComponentAssemblyReference"></role>
			<role name = "PICML::ComponentRef" metaref = "5799" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Monitorable2RepG" metaref = "5800" kind = "PICML::Monitorable2RepG"></role>
			<role name = "PICML::RepGRequirement" metaref = "5801" kind = "PICML::RepGRequirement"></role>
			<aspect name = "FT" metaref = "4105" >
				<part metaref = "5802" role = "PICML::ComponentAssemblyReference" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "5803" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5804" role = "PICML::Monitorable2RepG" primary = "yes" linked = "no"></part>
				<part metaref = "5805" role = "PICML::RepGRequirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::File" metaref = "1566" attributes = "PrefixTag" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
				<dispname>A file cannot be included more than once</dispname>
			</constraint>
			<role name = "PICML::Aggregate" metaref = "5806" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5807" kind = "PICML::Alias"></role>
			<role name = "PICML::Boxed" metaref = "5808" kind = "PICML::Boxed"></role>
			<role name = "PICML::Collection" metaref = "5809" kind = "PICML::Collection"></role>
			<role name = "PICML::Component" metaref = "5810" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentFactory" metaref = "5811" kind = "PICML::ComponentFactory"></role>
			<role name = "PICML::ComponentRef" metaref = "5812" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Constant" metaref = "5813" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5814" kind = "PICML::Enum"></role>
			<role name = "PICML::Event" metaref = "5815" kind = "PICML::Event"></role>
			<role name = "PICML::Exception" metaref = "5816" kind = "PICML::Exception"></role>
			<role name = "PICML::FileRef" metaref = "5817" kind = "PICML::FileRef"></role>
			<role name = "PICML::ManagesComponent" metaref = "5818" kind = "PICML::ManagesComponent"></role>
			<role name = "PICML::Object" metaref = "5819" kind = "PICML::Object"></role>
			<role name = "PICML::Package" metaref = "5820" kind = "PICML::Package"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5821" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::ValueObject" metaref = "5822" kind = "PICML::ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "4127" attributes = "PrefixTag" >
				<part metaref = "5823" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5824" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5825" role = "PICML::Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5826" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5827" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5828" role = "PICML::ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5829" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5830" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5831" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5832" role = "PICML::Event" primary = "yes" linked = "no"></part>
				<part metaref = "5833" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5834" role = "PICML::FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5835" role = "PICML::ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5836" role = "PICML::Object" primary = "yes" linked = "no"></part>
				<part metaref = "5837" role = "PICML::Package" primary = "yes" linked = "no"></part>
				<part metaref = "5838" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5839" role = "PICML::ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ImplementationRequirement" metaref = "1602" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
			<role name = "PICML::Property" metaref = "5840" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "4146" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<part metaref = "5841" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::InputAction" metaref = "5205" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
			<constraint name="ValidPICML::FinishsrcCardinality57" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::InputsrcCardinality73" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MultiInputsrcCardinality97" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5842" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "4150" >
				<part metaref = "5843" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Interconnect" metaref = "1606" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Interconnect"></regnode>
			<constraint name="ValidPICML::Interconnect2NodedstCardinality80" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Interconnect2Node ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Interconnect as &quot;dst&quot; over PICML::Interconnect2Node, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::Node2InterconnectsrcCardinality99" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Node2Interconnect ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Interconnect as &quot;src&quot; over PICML::Node2Interconnect, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::Resource" metaref = "5844" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "4153" attributes = "label" >
				<part metaref = "5845" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Latency" metaref = "1610" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Latency.bmp"></regnode>
			<constraint name="ValidPICML::BenchmarkCharacteristicssrcCardinality25" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MetricConnectionsrcCardinality87" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::WorkloadCharacteristicsdstCardinality146" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;dst&quot; over PICML::WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Average" metaref = "5846" kind = "PICML::Average"></role>
			<role name = "PICML::Jitter" metaref = "5847" kind = "PICML::Jitter"></role>
			<role name = "PICML::Maximum" metaref = "5848" kind = "PICML::Maximum"></role>
			<role name = "PICML::Minimum" metaref = "5849" kind = "PICML::Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "4159" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "5850" role = "PICML::Average" primary = "yes" linked = "no"></part>
				<part metaref = "5851" role = "PICML::Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "5852" role = "PICML::Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "5853" role = "PICML::Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::LookupOperation" metaref = "1620" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="lookup.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "5854" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "5855" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "4166" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5856" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5857" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::MPC" metaref = "1626" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Project" metaref = "5858" kind = "PICML::Project"></role>
			<role name = "PICML::Workspaces" metaref = "5859" kind = "PICML::Workspaces"></role>
			<aspect name = "Workspace" metaref = "4171" >
				<part metaref = "5860" role = "PICML::Project" primary = "yes" linked = "no"></part>
				<part metaref = "5861" role = "PICML::Workspaces" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Node" metaref = "1632" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node"></regnode>
			<role name = "PICML::Resource" metaref = "5862" kind = "PICML::Resource"></role>
			<aspect name = "Target" metaref = "4175" attributes = "label" >
				<part metaref = "5863" role = "PICML::Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::NodeGroup" metaref = "3220" attributes = "Metric" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="NodeGroup.bmp"></regnode>
			<role name = "PICML::NodeRef" metaref = "5864" kind = "PICML::NodeRef"></role>
			<aspect name = "FT" metaref = "4178" attributes = "Metric" >
				<part metaref = "5865" role = "PICML::NodeRef" primary = "yes" kindaspect = "Target" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Object" metaref = "1636" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="object.bmp"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if (self.local = true) then
          true
          else
          let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
          parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
          endif]]>
				<dispname>A non-local Object cannot inherit from a local one</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not local or not abstract]]>
				<dispname>An ObjectDef cannot be both local and abstract</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "5866" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<attrdef name="local" metaref = "5867" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "PICML::Aggregate" metaref = "5868" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5869" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "5870" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "5871" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "5872" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5873" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "5874" kind = "PICML::Exception"></role>
			<role name = "PICML::Inherits" metaref = "5875" kind = "PICML::Inherits"></role>
			<role name = "PICML::OnewayOperation" metaref = "5876" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "5877" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5878" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "5879" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "4194" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
				<part metaref = "5880" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5881" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5882" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5883" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5884" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5885" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5886" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5887" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5888" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5889" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5890" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5891" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::OnewayOperation" metaref = "1664" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="oneway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::InParameter" metaref = "5892" kind = "PICML::InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "4208" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "5893" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::OutputAction" metaref = "5215" attributes = "Repetitions LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "icon" value ="OutputAction.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
			<constraint name="ValidPICML::EffectdstCardinality46" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;dst&quot; over PICML::Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TransitionsrcCardinality137" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ActionBase as &quot;src&quot; over PICML::Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5894" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "4212" attributes = "Repetitions LogAction" >
				<part metaref = "5895" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Package" metaref = "1668" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.parts ()->size > 0]]>
				<dispname>A package cannot be empty</dispname>
			</constraint>
			<constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ()->forAll (
          x, y : gme::FCO | x.name == y.name implies (x == y or
          (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
          (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
          )
          ]]>
				<dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Aggregate" metaref = "5896" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "5897" kind = "PICML::Alias"></role>
			<role name = "PICML::Boxed" metaref = "5898" kind = "PICML::Boxed"></role>
			<role name = "PICML::Collection" metaref = "5899" kind = "PICML::Collection"></role>
			<role name = "PICML::Component" metaref = "5900" kind = "PICML::Component"></role>
			<role name = "PICML::ComponentFactory" metaref = "5901" kind = "PICML::ComponentFactory"></role>
			<role name = "PICML::ComponentRef" metaref = "5902" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Constant" metaref = "5903" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "5904" kind = "PICML::Enum"></role>
			<role name = "PICML::Event" metaref = "5905" kind = "PICML::Event"></role>
			<role name = "PICML::Exception" metaref = "5906" kind = "PICML::Exception"></role>
			<role name = "PICML::ManagesComponent" metaref = "5907" kind = "PICML::ManagesComponent"></role>
			<role name = "PICML::Object" metaref = "5908" kind = "PICML::Object"></role>
			<role name = "PICML::Package" metaref = "5909" kind = "PICML::Package"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "5910" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::ValueObject" metaref = "5911" kind = "PICML::ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "4230" attributes = "VersionTag PrefixTag SpecifyIdTag" >
				<part metaref = "5912" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5913" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5914" role = "PICML::Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5915" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5916" role = "PICML::Component" primary = "yes" linked = "no"></part>
				<part metaref = "5917" role = "PICML::ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5918" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5919" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5920" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "5921" role = "PICML::Event" primary = "yes" linked = "no"></part>
				<part metaref = "5922" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5923" role = "PICML::ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5924" role = "PICML::Object" primary = "yes" linked = "no"></part>
				<part metaref = "5925" role = "PICML::Package" primary = "yes" linked = "no"></part>
				<part metaref = "5926" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5927" role = "PICML::ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PackageConfigurationContainer" metaref = "1702" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="PackageConfXor" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1
          xor self.referenceParts(ComponentPackageReference)->size = 1
          xor self.atomParts(ComponentPackage)->size = 1]]>
				<dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality199" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality200" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality201" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfiguration" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality202" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality203" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageConfigurationContainerPartCardinality204" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentPackage" metaref = "5928" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentPackageReference" metaref = "5929" kind = "PICML::ComponentPackageReference"></role>
			<role name = "PICML::FOU_Requirement" metaref = "5930" kind = "PICML::FOU_Requirement"></role>
			<role name = "PICML::PackageConfBasePackage" metaref = "5931" kind = "PICML::PackageConfBasePackage"></role>
			<role name = "PICML::PackageConfConfigProperty" metaref = "5932" kind = "PICML::PackageConfConfigProperty"></role>
			<role name = "PICML::PackageConfReference" metaref = "5933" kind = "PICML::PackageConfReference"></role>
			<role name = "PICML::PackageConfSelectRequirement" metaref = "5934" kind = "PICML::PackageConfSelectRequirement"></role>
			<role name = "PICML::PackageConfSpecializedConfig" metaref = "5935" kind = "PICML::PackageConfSpecializedConfig"></role>
			<role name = "PICML::PackageConfiguration" metaref = "5936" kind = "PICML::PackageConfiguration"></role>
			<role name = "PICML::Property" metaref = "5937" kind = "PICML::Property"></role>
			<role name = "PICML::RepGRequirement" metaref = "5938" kind = "PICML::RepGRequirement"></role>
			<role name = "PICML::Requirement" metaref = "5939" kind = "PICML::Requirement"></role>
			<aspect name = "Packaging" metaref = "4259" >
				<part metaref = "5940" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5941" role = "PICML::ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "5942" role = "PICML::FOU_Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "5943" role = "PICML::PackageConfBasePackage" primary = "yes" linked = "no"></part>
				<part metaref = "5944" role = "PICML::PackageConfConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5945" role = "PICML::PackageConfReference" primary = "yes" linked = "no"></part>
				<part metaref = "5946" role = "PICML::PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5947" role = "PICML::PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
				<part metaref = "5948" role = "PICML::PackageConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "5949" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5950" role = "PICML::RepGRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5951" role = "PICML::Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PackageContainer" metaref = "1724" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="MatchingInterfaces" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let pkgInterface = self.referenceParts (ComponentRef) in
let impls = self.referenceParts(ComponentImplementationReference) in
  impls->forAll (i : ComponentImplementationReference | 
        let implementation: ComponentImplementation = i.refersTo() in
        let interfaces = implementation.connectedFCOs(Implements) in
            interfaces->forAll ( j: Component | 
               pkgInterface->forAll ( k: ComponentRef |
                       j.name() = k.refersTo().name() ) ) )]]>
				<dispname>Monolithic implementation in a ComponentPackage should all implement the same component interface</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageContainerPartCardinality205" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageContainerPartCardinality206" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageInterface" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PackageContainerPartCardinality207" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::ComponentImplementationReference" metaref = "5952" kind = "PICML::ComponentImplementationReference"></role>
			<role name = "PICML::ComponentPackage" metaref = "5953" kind = "PICML::ComponentPackage"></role>
			<role name = "PICML::ComponentRef" metaref = "5954" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::Implementation" metaref = "5955" kind = "PICML::Implementation"></role>
			<role name = "PICML::PackageConfigProperty" metaref = "5956" kind = "PICML::PackageConfigProperty"></role>
			<role name = "PICML::PackageInfoProperty" metaref = "5957" kind = "PICML::PackageInfoProperty"></role>
			<role name = "PICML::PackageInterface" metaref = "5958" kind = "PICML::PackageInterface"></role>
			<role name = "PICML::Property" metaref = "5959" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "4280" >
				<part metaref = "5960" role = "PICML::ComponentImplementationReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "5961" role = "PICML::ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5962" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5963" role = "PICML::Implementation" primary = "yes" linked = "no"></part>
				<part metaref = "5964" role = "PICML::PackageConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5965" role = "PICML::PackageInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5966" role = "PICML::PackageInterface" primary = "yes" linked = "no"></part>
				<part metaref = "5967" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Path" metaref = "2116" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::ComponentRef" metaref = "5968" kind = "PICML::ComponentRef"></role>
			<role name = "PICML::ConnectedComponent" metaref = "5969" kind = "PICML::ConnectedComponent"></role>
			<role name = "PICML::DisplayNode" metaref = "5970" kind = "PICML::DisplayNode"></role>
			<role name = "PICML::DstEdge" metaref = "5971" kind = "PICML::DstEdge"></role>
			<role name = "PICML::Edge" metaref = "5972" kind = "PICML::Edge"></role>
			<role name = "PICML::EdgeProperty" metaref = "5973" kind = "PICML::EdgeProperty"></role>
			<role name = "PICML::InEventPort" metaref = "5974" kind = "PICML::InEventPort"></role>
			<role name = "PICML::OutEventPort" metaref = "5975" kind = "PICML::OutEventPort"></role>
			<role name = "PICML::Property" metaref = "5976" kind = "PICML::Property"></role>
			<role name = "PICML::ProvidedRequestPort" metaref = "5977" kind = "PICML::ProvidedRequestPort"></role>
			<role name = "PICML::RequiredRequestPort" metaref = "5978" kind = "PICML::RequiredRequestPort"></role>
			<role name = "PICML::SrcEdge" metaref = "5979" kind = "PICML::SrcEdge"></role>
			<aspect name = "PathDiagram" metaref = "4301" >
				<part metaref = "5980" role = "PICML::ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5981" role = "PICML::ConnectedComponent" primary = "yes" linked = "no"></part>
				<part metaref = "5982" role = "PICML::DisplayNode" primary = "yes" linked = "no"></part>
				<part metaref = "5983" role = "PICML::DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "5984" role = "PICML::Edge" primary = "yes" linked = "no"></part>
				<part metaref = "5985" role = "PICML::EdgeProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5986" role = "PICML::InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5987" role = "PICML::OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5988" role = "PICML::Property" primary = "yes" linked = "no"></part>
				<part metaref = "5989" role = "PICML::ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5990" role = "PICML::RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5991" role = "PICML::SrcEdge" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Paths" metaref = "3072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::Path" metaref = "5992" kind = "PICML::Path"></role>
			<role name = "PICML::PathProperty" metaref = "5993" kind = "PICML::PathProperty"></role>
			<role name = "PICML::Property" metaref = "5994" kind = "PICML::Property"></role>
			<aspect name = "PathDiagram" metaref = "4317" >
				<part metaref = "5995" role = "PICML::Path" primary = "yes" linked = "no"></part>
				<part metaref = "5996" role = "PICML::PathProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5997" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PeriodicAction" metaref = "5224" attributes = "Period Probability" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="timer.bmp"></regnode>
			<constraint name="ValidPICML::FinishsrcCardinality57" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::InputsrcCardinality73" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MultiInputsrcCardinality97" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::InputActionBase as &quot;src&quot; over PICML::MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "5998" kind = "PICML::Property"></role>
			<aspect name = "Behavior" metaref = "4323" attributes = "Period Probability" >
				<part metaref = "5999" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::PolicySet" metaref = "2747" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="PolicySet.bmp"></regnode>
			<constraint name="ValidPICML::PolicySetPartCardinality208" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ThreadPoolRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PolicySet, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PolicySetPartCardinality209" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PriorityModelPolicy" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PolicySet, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PolicySetPartCardinality210" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::BandedConnectionRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::PolicySet, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::BandedConnectionRef" metaref = "6000" kind = "PICML::BandedConnectionRef"></role>
			<role name = "PICML::PriorityModelPolicy" metaref = "6001" kind = "PICML::PriorityModelPolicy"></role>
			<role name = "PICML::ThreadPoolRef" metaref = "6002" kind = "PICML::ThreadPoolRef"></role>
			<aspect name = "QoS" metaref = "4328" >
				<part metaref = "6003" role = "PICML::BandedConnectionRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "6004" role = "PICML::PriorityModelPolicy" primary = "yes" linked = "no"></part>
				<part metaref = "6005" role = "PICML::ThreadPoolRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Process" metaref = "2570" attributes = "isInvariant Scheduling ProcessPriority" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::QoSCharacteristicRef" metaref = "6006" kind = "PICML::QoSCharacteristicRef"></role>
			<role name = "PICML::QoSDimension" metaref = "6007" kind = "PICML::QoSDimension"></role>
			<role name = "PICML::QoSParameter" metaref = "6008" kind = "PICML::QoSParameter"></role>
			<aspect name = "QoS" metaref = "4335" attributes = "isInvariant Scheduling ProcessPriority" >
				<part metaref = "6009" role = "PICML::QoSCharacteristicRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "6010" role = "PICML::QoSDimension" primary = "yes" linked = "yes"></part>
				<part metaref = "6011" role = "PICML::QoSParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Project" metaref = "1742" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="comp-proj.bmp"></regnode>
			<role name = "PICML::ExecutorProject" metaref = "6012" kind = "PICML::ExecutorProject"></role>
			<role name = "PICML::ExtResourceConn" metaref = "6013" kind = "PICML::ExtResourceConn"></role>
			<role name = "PICML::ExternalResources" metaref = "6014" kind = "PICML::ExternalResources"></role>
			<role name = "PICML::ImplementationArtifact" metaref = "6015" kind = "PICML::ImplementationArtifact"></role>
			<role name = "PICML::ServantProject" metaref = "6016" kind = "PICML::ServantProject"></role>
			<role name = "PICML::StubProject" metaref = "6017" kind = "PICML::StubProject"></role>
			<aspect name = "ComponentLibraries" metaref = "4345" >
				<part metaref = "6018" role = "PICML::ExecutorProject" primary = "yes" linked = "no"></part>
				<part metaref = "6019" role = "PICML::ExtResourceConn" primary = "yes" linked = "no"></part>
				<part metaref = "6020" role = "PICML::ExternalResources" primary = "yes" linked = "no"></part>
				<part metaref = "6021" role = "PICML::ServantProject" primary = "yes" linked = "no"></part>
				<part metaref = "6022" role = "PICML::StubProject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Property" metaref = "1755" attributes = "DataValue" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Property.bmp"></regnode>
			<constraint name="ValidPICML::AttributeMappingValuesrcCardinality21" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::AttributeMappingValue ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::Property as &quot;src&quot; over PICML::AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::PropertyPartCardinality211" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::Property, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "6023" kind = "PICML::DataType"></role>
			<aspect name = "Packaging" metaref = "4352" attributes = "DataValue" >
				<part metaref = "6024" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::QoSCategory" metaref = "2324" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::QoSCategoryPartCardinality212" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::QoSCharacteristic" ) -> size + self.parts( "PICML::CPU" ) -> size + self.parts( "PICML::Concurrency" ) -> size + self.parts( "PICML::Connection" ) -> size + self.parts( "PICML::Process" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::QoSCategory, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::CPU" metaref = "6025" kind = "PICML::CPU"></role>
			<role name = "PICML::Concurrency" metaref = "6026" kind = "PICML::Concurrency"></role>
			<role name = "PICML::Connection" metaref = "6027" kind = "PICML::Connection"></role>
			<role name = "PICML::Process" metaref = "6028" kind = "PICML::Process"></role>
			<role name = "PICML::QoSCharacteristic" metaref = "6029" kind = "PICML::QoSCharacteristic"></role>
			<aspect name = "QoS" metaref = "4359" >
				<part metaref = "6030" role = "PICML::CPU" primary = "yes" linked = "no"></part>
				<part metaref = "6031" role = "PICML::Concurrency" primary = "yes" linked = "no"></part>
				<part metaref = "6032" role = "PICML::Connection" primary = "yes" linked = "no"></part>
				<part metaref = "6033" role = "PICML::Process" primary = "yes" linked = "no"></part>
				<part metaref = "6034" role = "PICML::QoSCharacteristic" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::QoSCharacteristic" metaref = "2326" attributes = "isInvariant" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::QoSCharacteristicRef" metaref = "6035" kind = "PICML::QoSCharacteristicRef"></role>
			<role name = "PICML::QoSDimension" metaref = "6036" kind = "PICML::QoSDimension"></role>
			<role name = "PICML::QoSParameter" metaref = "6037" kind = "PICML::QoSParameter"></role>
			<aspect name = "QoS" metaref = "4368" attributes = "isInvariant" >
				<part metaref = "6038" role = "PICML::QoSCharacteristicRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "6039" role = "PICML::QoSDimension" primary = "yes" linked = "yes"></part>
				<part metaref = "6040" role = "PICML::QoSParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::QoSContext" metaref = "2330" attributes = "isQoSObservation" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "PICML::CPU" metaref = "6041" kind = "PICML::CPU"></role>
			<role name = "PICML::Concurrency" metaref = "6042" kind = "PICML::Concurrency"></role>
			<role name = "PICML::Connection" metaref = "6043" kind = "PICML::Connection"></role>
			<role name = "PICML::Process" metaref = "6044" kind = "PICML::Process"></role>
			<role name = "PICML::QoSCharacteristic" metaref = "6045" kind = "PICML::QoSCharacteristic"></role>
			<role name = "PICML::QoSContext" metaref = "6046" kind = "PICML::QoSContext"></role>
			<role name = "PICML::QoSContract" metaref = "6047" kind = "PICML::QoSContract"></role>
			<role name = "PICML::QoSOffered" metaref = "6048" kind = "PICML::QoSOffered"></role>
			<role name = "PICML::QoSRequired" metaref = "6049" kind = "PICML::QoSRequired"></role>
			<aspect name = "QoS" metaref = "4381" attributes = "isQoSObservation" >
				<part metaref = "6050" role = "PICML::CPU" primary = "yes" linked = "no"></part>
				<part metaref = "6051" role = "PICML::Concurrency" primary = "yes" linked = "no"></part>
				<part metaref = "6052" role = "PICML::Connection" primary = "yes" linked = "no"></part>
				<part metaref = "6053" role = "PICML::Process" primary = "yes" linked = "no"></part>
				<part metaref = "6054" role = "PICML::QoSCharacteristic" primary = "yes" linked = "no"></part>
				<part metaref = "6055" role = "PICML::QoSContext" primary = "yes" linked = "no"></part>
				<part metaref = "6056" role = "PICML::QoSContract" primary = "yes" linked = "no"></part>
				<part metaref = "6057" role = "PICML::QoSOffered" primary = "yes" linked = "no"></part>
				<part metaref = "6058" role = "PICML::QoSRequired" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::QoSValue" metaref = "2333" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::QoSValuePartCardinality213" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::QoSCharacteristic" ) -> size + self.parts( "PICML::CPU" ) -> size + self.parts( "PICML::Concurrency" ) -> size + self.parts( "PICML::Connection" ) -> size + self.parts( "PICML::Process" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::QoSValue, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::CPU" metaref = "6059" kind = "PICML::CPU"></role>
			<role name = "PICML::Concurrency" metaref = "6060" kind = "PICML::Concurrency"></role>
			<role name = "PICML::Connection" metaref = "6061" kind = "PICML::Connection"></role>
			<role name = "PICML::Process" metaref = "6062" kind = "PICML::Process"></role>
			<role name = "PICML::QoSCharacteristic" metaref = "6063" kind = "PICML::QoSCharacteristic"></role>
			<role name = "PICML::QoSDimensionQualifier" metaref = "6064" kind = "PICML::QoSDimensionQualifier"></role>
			<role name = "PICML::QoSDimensionSlot" metaref = "6065" kind = "PICML::QoSDimensionSlot"></role>
			<aspect name = "QoS" metaref = "4398" >
				<part metaref = "6066" role = "PICML::CPU" primary = "yes" linked = "no"></part>
				<part metaref = "6067" role = "PICML::Concurrency" primary = "yes" linked = "no"></part>
				<part metaref = "6068" role = "PICML::Connection" primary = "yes" linked = "no"></part>
				<part metaref = "6069" role = "PICML::Process" primary = "yes" linked = "no"></part>
				<part metaref = "6070" role = "PICML::QoSCharacteristic" primary = "yes" linked = "no"></part>
				<part metaref = "6071" role = "PICML::QoSDimensionQualifier" primary = "yes" linked = "no"></part>
				<part metaref = "6072" role = "PICML::QoSDimensionSlot" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::RTConfiguration" metaref = "2754" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidPICML::RTConfigurationPartCardinality214" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::RTModel" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTConfiguration, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::RTModel" metaref = "6073" kind = "PICML::RTModel"></role>
			<aspect name = "QoS" metaref = "4407" >
				<part metaref = "6074" role = "PICML::RTModel" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::RTEC_Proxy_Consumer" metaref = "1759" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rtec_proxy_consumer.bmp"></regnode>
			<constraint name="ValidPICML::RTEC_Proxy_ConsumerPartCardinality215" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::RTEC_Resource_Factory_Reference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTEC_Proxy_Consumer, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::Null_RT_Info" metaref = "6075" kind = "PICML::Null_RT_Info"></role>
			<role name = "PICML::RTEC_Resource_Factory_Reference" metaref = "6076" kind = "PICML::RTEC_Resource_Factory_Reference"></role>
			<role name = "PICML::RT_Info" metaref = "6077" kind = "PICML::RT_Info"></role>
			<role name = "PICML::Use_RT_Info" metaref = "6078" kind = "PICML::Use_RT_Info"></role>
			<aspect name = "RtecConfigAspect" metaref = "4413" >
				<part metaref = "6079" role = "PICML::Null_RT_Info" primary = "yes" linked = "yes"></part>
				<part metaref = "6080" role = "PICML::RTEC_Resource_Factory_Reference" primary = "yes" linked = "yes"></part>
				<part metaref = "6081" role = "PICML::RT_Info" primary = "yes" linked = "yes"></part>
				<part metaref = "6082" role = "PICML::Use_RT_Info" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::RTEC_Proxy_Supplier" metaref = "1769" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="rtec_proxy_supplier.bmp"></regnode>
			<role name = "PICML::ConjunctionGroup" metaref = "6083" kind = "PICML::ConjunctionGroup"></role>
			<role name = "PICML::DisjunctionGroup" metaref = "6084" kind = "PICML::DisjunctionGroup"></role>
			<role name = "PICML::Include_RTEC_Filter_Group" metaref = "6085" kind = "PICML::Include_RTEC_Filter_Group"></role>
			<role name = "PICML::Include_RT_Info" metaref = "6086" kind = "PICML::Include_RT_Info"></role>
			<role name = "PICML::LogicalANDGroup" metaref = "6087" kind = "PICML::LogicalANDGroup"></role>
			<role name = "PICML::Null_RT_Info" metaref = "6088" kind = "PICML::Null_RT_Info"></role>
			<role name = "PICML::RT_Info" metaref = "6089" kind = "PICML::RT_Info"></role>
			<aspect name = "RtecConfigAspect" metaref = "4425" >
				<part metaref = "6090" role = "PICML::ConjunctionGroup" primary = "yes" linked = "yes"></part>
				<part metaref = "6091" role = "PICML::DisjunctionGroup" primary = "yes" linked = "yes"></part>
				<part metaref = "6092" role = "PICML::Include_RTEC_Filter_Group" primary = "yes" linked = "no"></part>
				<part metaref = "6093" role = "PICML::Include_RT_Info" primary = "yes" linked = "no"></part>
				<part metaref = "6094" role = "PICML::LogicalANDGroup" primary = "yes" linked = "yes"></part>
				<part metaref = "6095" role = "PICML::Null_RT_Info" primary = "yes" linked = "yes"></part>
				<part metaref = "6096" role = "PICML::RT_Info" primary = "yes" linked = "yes"></part>
			</aspect>
		</model>
		<model name = "PICML::RTModel" metaref = "2758" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="RTModel.bmp"></regnode>
			<constraint name="ValidPICML::RTModelPartCardinality216" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ResourceContainer" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTModel, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::RTModelPartCardinality217" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::EnvironmentConf" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::RTModel, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::EnvironmentConf" metaref = "6097" kind = "PICML::EnvironmentConf"></role>
			<role name = "PICML::PolicySet" metaref = "6098" kind = "PICML::PolicySet"></role>
			<role name = "PICML::PolicySetRef" metaref = "6099" kind = "PICML::PolicySetRef"></role>
			<role name = "PICML::ResourceContainer" metaref = "6100" kind = "PICML::ResourceContainer"></role>
			<aspect name = "QoS" metaref = "4437" >
				<part metaref = "6101" role = "PICML::EnvironmentConf" primary = "yes" linked = "no"></part>
				<part metaref = "6102" role = "PICML::PolicySet" primary = "yes" linked = "no"></part>
				<part metaref = "6103" role = "PICML::PolicySetRef" primary = "yes" kindaspect = "QoS" linked = "no"></part>
				<part metaref = "6104" role = "PICML::ResourceContainer" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ReadonlyAttribute" metaref = "1785" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
			<constraint name="DelegateOrValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size = 1 implies self.attachingConnections(AttributeDelegate)->size = 0]]>
				<dispname>A value can be specified for an Attribute directly, or it can have a value delegated to it via an AttributeMapping, but not both.</dispname>
			</constraint>
			<constraint name="MatchingAttributeDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let delegates = self.connectedFCOs(AttributeDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can be used to delegate values to attributes of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attrs = self.referenceParts(AttributeMember) in 
let props = self.connectedFCOs(AttributeValue) in
    attrs->forAll (attr : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="SingleDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeDelegate)->size() <= 1]]>
				<dispname>An attribute can be delegated to from only one AttributeMapping</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeValue)->size() <= 1]]>
				<dispname>Only one value can be specified for an attribute</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeDelegatesrcCardinality17" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;src&quot; over PICML::AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::AttributeValuedstCardinality24" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::ReadonlyAttribute as &quot;dst&quot; over PICML::AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ReadonlyAttributePartCardinality218" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::AttributeMember" metaref = "6105" kind = "PICML::AttributeMember"></role>
			<role name = "PICML::GetException" metaref = "6106" kind = "PICML::GetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "4444" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "6107" role = "PICML::AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6108" role = "PICML::GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::RepGRequirement" metaref = "3228" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
				<regnode name = "icon" value ="RPG.bmp"></regnode>
			<constraint name="NotEmpty" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts().size() > 0]]>
				<dispname>Replica Group Requirements can&apos;t be empty.</dispname>
			</constraint>
			<constraint name="ValidPICML::Monitorable2RepGsrcCardinality89" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Monitorable2RepG ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::RepGRequirement as &quot;src&quot; over PICML::Monitorable2RepG, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Property" metaref = "6109" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "4448" attributes = "resourceType" >
				<part metaref = "6110" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Requirement" metaref = "1791" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
			<role name = "PICML::Property" metaref = "6111" kind = "PICML::Property"></role>
			<aspect name = "Packaging" metaref = "4451" attributes = "resourceType" >
				<part metaref = "6112" role = "PICML::Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Resource" metaref = "1795" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Resource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "6113" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Target" metaref = "4454" attributes = "resourceType" >
				<part metaref = "6114" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ResourceContainer" metaref = "2768" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ResourceContainer.bmp"></regnode>
			<role name = "PICML::BandedConnection" metaref = "6115" kind = "PICML::BandedConnection"></role>
			<role name = "PICML::SimpleThreadPool" metaref = "6116" kind = "PICML::SimpleThreadPool"></role>
			<role name = "PICML::ThreadPoolWithLanes" metaref = "6117" kind = "PICML::ThreadPoolWithLanes"></role>
			<aspect name = "QoS" metaref = "4459" >
				<part metaref = "6118" role = "PICML::BandedConnection" primary = "yes" linked = "no"></part>
				<part metaref = "6119" role = "PICML::SimpleThreadPool" primary = "yes" linked = "no"></part>
				<part metaref = "6120" role = "PICML::ThreadPoolWithLanes" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SRGContainer" metaref = "3266" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueNodeNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let SRGs = self.models (SharedRiskGroup) in
let nodegroups = self.models(NodeGroup) in 
let directnodes = SRGs->iterate (s: SharedRiskGroup; 
                                        nodebag = Bag{} | 
                                              nodebag + s.getNodes()) in
let indirectnodes = nodegroups->iterate (n: NodeGroup;
                              nodegroupbag = Bag{} | 
                                 nodegroupbag + n.getNodeGroupNodes()) in
let nodes = directnodes + indirectnodes in
     nodes->isUnique (x: Node | x.name().trim())]]>
				<dispname>There should not be duplicate node names in the SRG hierarchy</dispname>
			</constraint>
			<role name = "PICML::NodeGroup" metaref = "6121" kind = "PICML::NodeGroup"></role>
			<role name = "PICML::SharedRiskGroup" metaref = "6122" kind = "PICML::SharedRiskGroup"></role>
			<aspect name = "FT" metaref = "4465" >
				<part metaref = "6123" role = "PICML::NodeGroup" primary = "yes" linked = "no"></part>
				<part metaref = "6124" role = "PICML::SharedRiskGroup" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SatisfierProperty" metaref = "1799" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
			<constraint name="ValidPICML::SatisfierPropertyPartCardinality219" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SatisfierProperty, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::DataType" metaref = "6125" kind = "PICML::DataType"></role>
			<aspect name = "Packaging" metaref = "4471" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "6127" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "Target" metaref = "4469" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "6126" role = "PICML::DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ServantProject" metaref = "1803" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML::ServantProjectPartCardinality220" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::FileRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ServantProject, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::ServantProjectPartCardinality221" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ServantProject, has to match 1.</dispname>
			</constraint>
			<constraint name="servantOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only A servant project can exists as a part of the Component project</dispname>
			</constraint>
			<role name = "PICML::FileRef" metaref = "6128" kind = "PICML::FileRef"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "6129" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "4475" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "6130" role = "PICML::FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6131" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SharedResource" metaref = "1809" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedResource"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="ValidPICML::SharessrcCardinality129" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::Shares ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::SharedResource as &quot;src&quot; over PICML::Shares, has to match 1..*.</dispname>
			</constraint>
			<role name = "PICML::SatisfierProperty" metaref = "6132" kind = "PICML::SatisfierProperty"></role>
			<aspect name = "Target" metaref = "4479" attributes = "resourceType" >
				<part metaref = "6133" role = "PICML::SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SharedRiskGroup" metaref = "3232" attributes = "Metric" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedRiskGroup.bmp"></regnode>
			<role name = "PICML::NodeGroup" metaref = "6134" kind = "PICML::NodeGroup"></role>
			<role name = "PICML::NodeRef" metaref = "6135" kind = "PICML::NodeRef"></role>
			<role name = "PICML::SharedResourceRef" metaref = "6136" kind = "PICML::SharedResourceRef"></role>
			<role name = "PICML::SharedRiskGroup" metaref = "6137" kind = "PICML::SharedRiskGroup"></role>
			<aspect name = "FT" metaref = "4485" attributes = "Metric" >
				<part metaref = "6138" role = "PICML::NodeGroup" primary = "yes" linked = "no"></part>
				<part metaref = "6139" role = "PICML::NodeRef" primary = "yes" kindaspect = "Target" linked = "no"></part>
				<part metaref = "6140" role = "PICML::SharedResourceRef" primary = "yes" kindaspect = "Target" linked = "no"></part>
				<part metaref = "6141" role = "PICML::SharedRiskGroup" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SimpleThreadPool" metaref = "2775" attributes = "max_buffered_requests allow_request_buffering stacksize max_buffer_size" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SimpleThreadPool.bmp"></regnode>
			<constraint name="ValidPICML::SimpleThreadPoolPartCardinality222" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ThreadPoolLane" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SimpleThreadPool, has to match 1.</dispname>
			</constraint>
			<role name = "PICML::ThreadPoolLane" metaref = "6142" kind = "PICML::ThreadPoolLane"></role>
			<aspect name = "QoS" metaref = "4491" attributes = "max_buffered_requests allow_request_buffering stacksize max_buffer_size" >
				<part metaref = "6143" role = "PICML::ThreadPoolLane" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::StubProject" metaref = "1813" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
			<constraint name="ValidPICML::StubProjectPartCardinality223" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::FileRef" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::StubProjectPartCardinality224" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ImplementationArtifactReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="stubOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only One stub project can exisit as a part of the Component project</dispname>
			</constraint>
			<role name = "PICML::FileRef" metaref = "6144" kind = "PICML::FileRef"></role>
			<role name = "PICML::ImplementationArtifactReference" metaref = "6145" kind = "PICML::ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "4495" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "6146" role = "PICML::FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6147" role = "PICML::ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::SwitchedAggregate" metaref = "1819" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
			<constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[parts (Member)->forAll (
          x : gme::FCO | let labels = x.connectedFCOs ()
          in
          labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
          )]]>
				<dispname>A default member cannot have multiple labels</dispname>
			</constraint>
			<constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[referenceParts (Discriminator) -> forAll (
          x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
          x.refersTo ().isTypeOf (Boolean) or
          x.refersTo ().isTypeOf (Byte) or
          x.refersTo ().isTypeOf (ShortInteger) or
          x.refersTo ().isTypeOf (LongInteger))]]>
				<dispname>Discriminator must have integer, character, boolean or enum type</dispname>
			</constraint>
			<constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
				<dispname>Labels in the same scope must be unique</dispname>
			</constraint>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidPICML::SwitchedAggregatePartCardinality225" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Label" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::SwitchedAggregatePartCardinality226" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::LabelConnection" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPICML::SwitchedAggregatePartCardinality227" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::Discriminator" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::SwitchedAggregate, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::Discriminator" metaref = "6148" kind = "PICML::Discriminator"></role>
			<role name = "PICML::Label" metaref = "6149" kind = "PICML::Label"></role>
			<role name = "PICML::LabelConnection" metaref = "6150" kind = "PICML::LabelConnection"></role>
			<role name = "PICML::Member" metaref = "6151" kind = "PICML::Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "4502" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "6152" role = "PICML::Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6153" role = "PICML::Label" primary = "yes" linked = "no"></part>
				<part metaref = "6154" role = "PICML::LabelConnection" primary = "yes" linked = "no"></part>
				<part metaref = "6155" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ThreadPoolWithLanes" metaref = "2778" attributes = "max_buffered_requests allow_request_buffering stacksize max_buffer_size allow_borrowing" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ThreadPoolWithLanes.bmp"></regnode>
			<constraint name="ValidPICML::ThreadPoolWithLanesPartCardinality228" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ThreadPoolLane" ) -> size in
                     (partCount >= 2)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::ThreadPoolWithLanes, has to match 2..*.</dispname>
			</constraint>
			<role name = "PICML::ThreadPoolLane" metaref = "6156" kind = "PICML::ThreadPoolLane"></role>
			<aspect name = "QoS" metaref = "4508" attributes = "max_buffered_requests allow_request_buffering stacksize max_buffer_size allow_borrowing" >
				<part metaref = "6157" role = "PICML::ThreadPoolLane" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Throughput" metaref = "1829" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Throughput.bmp"></regnode>
			<constraint name="ValidPICML::BenchmarkCharacteristicssrcCardinality25" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::MetricConnectionsrcCardinality87" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", PICML::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;src&quot; over PICML::MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::WorkloadCharacteristicsdstCardinality146" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", PICML::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PICML::MetricsBase as &quot;dst&quot; over PICML::WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::Average" metaref = "6158" kind = "PICML::Average"></role>
			<role name = "PICML::Jitter" metaref = "6159" kind = "PICML::Jitter"></role>
			<role name = "PICML::Maximum" metaref = "6160" kind = "PICML::Maximum"></role>
			<role name = "PICML::Minimum" metaref = "6161" kind = "PICML::Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "4514" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "6162" role = "PICML::Average" primary = "yes" linked = "no"></part>
				<part metaref = "6163" role = "PICML::Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "6164" role = "PICML::Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "6165" role = "PICML::Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::TopLevelPackageContainer" metaref = "1839" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
			<constraint name="ValidPICML::TopLevelPackageContainerPartCardinality229" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TopLevelPackageContainerPartCardinality230" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPICML::TopLevelPackageContainerPartCardinality231" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::package" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "PICML::PackageConfigurationReference" metaref = "6166" kind = "PICML::PackageConfigurationReference"></role>
			<role name = "PICML::TopLevelPackage" metaref = "6167" kind = "PICML::TopLevelPackage"></role>
			<role name = "PICML::package" metaref = "6168" kind = "PICML::package"></role>
			<aspect name = "Packaging" metaref = "4522" >
				<part metaref = "6169" role = "PICML::PackageConfigurationReference" primary = "yes" linked = "no"></part>
				<part metaref = "6170" role = "PICML::TopLevelPackage" primary = "yes" linked = "no"></part>
				<part metaref = "6171" role = "PICML::package" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::TwowayOperation" metaref = "1847" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="twoway.bmp"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidPICML::TwowayOperationPartCardinality232" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PICML::ReturnType" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PICML::TwowayOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "PICML::ExceptionRef" metaref = "6172" kind = "PICML::ExceptionRef"></role>
			<role name = "PICML::InParameter" metaref = "6173" kind = "PICML::InParameter"></role>
			<role name = "PICML::InoutParameter" metaref = "6174" kind = "PICML::InoutParameter"></role>
			<role name = "PICML::OutParameter" metaref = "6175" kind = "PICML::OutParameter"></role>
			<role name = "PICML::ReturnType" metaref = "6176" kind = "PICML::ReturnType"></role>
			<aspect name = "InterfaceDefinition" metaref = "4531" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "6177" role = "PICML::ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6178" role = "PICML::InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6179" role = "PICML::InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6180" role = "PICML::OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6181" role = "PICML::ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::ValueObject" metaref = "1859" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="value.bmp"></regnode>
			<constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents =
          self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "2">
				<![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "6182" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "PICML::Aggregate" metaref = "6183" kind = "PICML::Aggregate"></role>
			<role name = "PICML::Alias" metaref = "6184" kind = "PICML::Alias"></role>
			<role name = "PICML::Attribute" metaref = "6185" kind = "PICML::Attribute"></role>
			<role name = "PICML::Collection" metaref = "6186" kind = "PICML::Collection"></role>
			<role name = "PICML::Constant" metaref = "6187" kind = "PICML::Constant"></role>
			<role name = "PICML::Enum" metaref = "6188" kind = "PICML::Enum"></role>
			<role name = "PICML::Exception" metaref = "6189" kind = "PICML::Exception"></role>
			<role name = "PICML::FactoryOperation" metaref = "6190" kind = "PICML::FactoryOperation"></role>
			<role name = "PICML::Inherits" metaref = "6191" kind = "PICML::Inherits"></role>
			<role name = "PICML::MakeMemberPrivate" metaref = "6192" kind = "PICML::MakeMemberPrivate"></role>
			<role name = "PICML::Member" metaref = "6193" kind = "PICML::Member"></role>
			<role name = "PICML::OnewayOperation" metaref = "6194" kind = "PICML::OnewayOperation"></role>
			<role name = "PICML::PrivateFlag" metaref = "6195" kind = "PICML::PrivateFlag"></role>
			<role name = "PICML::ReadonlyAttribute" metaref = "6196" kind = "PICML::ReadonlyAttribute"></role>
			<role name = "PICML::Supports" metaref = "6197" kind = "PICML::Supports"></role>
			<role name = "PICML::SwitchedAggregate" metaref = "6198" kind = "PICML::SwitchedAggregate"></role>
			<role name = "PICML::TwowayOperation" metaref = "6199" kind = "PICML::TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "4555" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
				<part metaref = "6200" role = "PICML::Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "6201" role = "PICML::Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6202" role = "PICML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "6203" role = "PICML::Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6204" role = "PICML::Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6205" role = "PICML::Enum" primary = "yes" linked = "no"></part>
				<part metaref = "6206" role = "PICML::Exception" primary = "yes" linked = "no"></part>
				<part metaref = "6207" role = "PICML::FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "6208" role = "PICML::Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6209" role = "PICML::MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "6210" role = "PICML::Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6211" role = "PICML::OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "6212" role = "PICML::PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "6213" role = "PICML::ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "6214" role = "PICML::Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "6215" role = "PICML::SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "6216" role = "PICML::TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::Worker" metaref = "5401" attributes = "Abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="worker.gif"></regnode>
			<constraint name="DuplicateAction" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let actions = self.parts (Action) in

actions->isUnique (iter : Action | iter->name ())
]]>
				<dispname>Worker contains duplicate actions</dispname>
			</constraint>
			<role name = "PICML::Action" metaref = "6217" kind = "PICML::Action"></role>
			<role name = "PICML::CompositeAction" metaref = "6218" kind = "PICML::CompositeAction"></role>
			<role name = "PICML::OutputAction" metaref = "6219" kind = "PICML::OutputAction"></role>
			<aspect name = "Behavior" metaref = "4577" attributes = "Abstract" >
				<part metaref = "6220" role = "PICML::Action" primary = "yes" linked = "no"></part>
				<part metaref = "6221" role = "PICML::CompositeAction" primary = "yes" linked = "no"></part>
				<part metaref = "6222" role = "PICML::OutputAction" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerFile" metaref = "5409" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
				<regnode name = "icon" value ="file.bmp"></regnode>
			<role name = "PICML::Worker" metaref = "6223" kind = "PICML::Worker"></role>
			<role name = "PICML::WorkerPackage" metaref = "6224" kind = "PICML::WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "4584" attributes = "Location" >
				<part metaref = "6225" role = "PICML::Worker" primary = "yes" linked = "no"></part>
				<part metaref = "6226" role = "PICML::WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerLibrary" metaref = "5415" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueWorker" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (Worker) in
    workers->isUnique (iter : Worker | iter->name ())]]>
				<dispname>Worker library constains duplicate worker names</dispname>
			</constraint>
			<role name = "PICML::WorkerFile" metaref = "6227" kind = "PICML::WorkerFile"></role>
			<aspect name = "Behavior" metaref = "4589" attributes = "Location" >
				<part metaref = "6228" role = "PICML::WorkerFile" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PICML::WorkerPackage" metaref = "5419" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
			<role name = "PICML::Worker" metaref = "6229" kind = "PICML::Worker"></role>
			<role name = "PICML::WorkerPackage" metaref = "6230" kind = "PICML::WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "4594" >
				<part metaref = "6231" role = "PICML::Worker" primary = "yes" linked = "no"></part>
				<part metaref = "6232" role = "PICML::WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SIML::System" metaref = "4685" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "SIML::Module" metaref = "6407" kind = "SIML::Module"></role>
			<role name = "SIML::PortProxy" metaref = "6408" kind = "SIML::PortProxy"></role>
			<aspect name = "Integration" metaref = "4803" >
				<part metaref = "6409" role = "SIML::Module" primary = "yes" linked = "no"></part>
				<part metaref = "6410" role = "SIML::PortProxy" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Binding" metaref = "3517" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::BindingPartCardinality233" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Binding, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::BindingPartCardinality234" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::ExtensibleBinding" ) -> size + self.parts( "WSML::SOAPBinding" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Binding, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::BindingPortTypedstCardinality160" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::BindingPortType ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::Binding as &quot;dst&quot; over WSML::BindingPortType, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::BindingOperation" metaref = "4807" kind = "WSML::BindingOperation"></role>
			<role name = "WSML::BindsOperation" metaref = "4808" kind = "WSML::BindsOperation"></role>
			<role name = "WSML::Documentation" metaref = "4809" kind = "WSML::Documentation"></role>
			<role name = "WSML::OperationRef" metaref = "4810" kind = "WSML::OperationRef"></role>
			<role name = "WSML::SOAPBinding" metaref = "4811" kind = "WSML::SOAPBinding"></role>
			<aspect name = "ServiceDefinition" metaref = "4812" >
				<part metaref = "4813" role = "WSML::BindingOperation" primary = "yes" linked = "no"></part>
				<part metaref = "4814" role = "WSML::BindsOperation" primary = "yes" linked = "no"></part>
				<part metaref = "4815" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4816" role = "WSML::OperationRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4817" role = "WSML::SOAPBinding" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::BindingOperation" metaref = "3529" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::BindingOperationPartCardinality235" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::ExtensibleMessage" ) -> size + self.parts( "WSML::SOAPBody" ) -> size + self.parts( "WSML::SOAPFault" ) -> size + self.parts( "WSML::SOAPHeaderFault" ) -> size + self.parts( "WSML::SOAPHeader" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::BindingOperation, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidWSML::BindingOperationPartCardinality236" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::BindingOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::BindingOperationPartCardinality237" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::ExtensibleOperation" ) -> size + self.parts( "WSML::SOAPOperation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::BindingOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::BindsOperationdstCardinality162" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::BindsOperation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::BindingOperation as &quot;dst&quot; over WSML::BindsOperation, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::BodyBinding" metaref = "4818" kind = "WSML::BodyBinding"></role>
			<role name = "WSML::BodyParts" metaref = "4819" kind = "WSML::BodyParts"></role>
			<role name = "WSML::Documentation" metaref = "4820" kind = "WSML::Documentation"></role>
			<role name = "WSML::FaultRef" metaref = "4821" kind = "WSML::FaultRef"></role>
			<role name = "WSML::HeaderBinding" metaref = "4822" kind = "WSML::HeaderBinding"></role>
			<role name = "WSML::HeaderMessage" metaref = "4823" kind = "WSML::HeaderMessage"></role>
			<role name = "WSML::HeaderPart" metaref = "4824" kind = "WSML::HeaderPart"></role>
			<role name = "WSML::InputRef" metaref = "4825" kind = "WSML::InputRef"></role>
			<role name = "WSML::MessageRef" metaref = "4826" kind = "WSML::MessageRef"></role>
			<role name = "WSML::OutputRef" metaref = "4827" kind = "WSML::OutputRef"></role>
			<role name = "WSML::PartRef" metaref = "4828" kind = "WSML::PartRef"></role>
			<role name = "WSML::SOAPBody" metaref = "4829" kind = "WSML::SOAPBody"></role>
			<role name = "WSML::SOAPFault" metaref = "4830" kind = "WSML::SOAPFault"></role>
			<role name = "WSML::SOAPFaultExtension" metaref = "4831" kind = "WSML::SOAPFaultExtension"></role>
			<role name = "WSML::SOAPHeader" metaref = "4832" kind = "WSML::SOAPHeader"></role>
			<role name = "WSML::SOAPHeaderFault" metaref = "4833" kind = "WSML::SOAPHeaderFault"></role>
			<role name = "WSML::SOAPOperation" metaref = "4834" kind = "WSML::SOAPOperation"></role>
			<aspect name = "ServiceDefinition" metaref = "4835" >
				<part metaref = "4836" role = "WSML::BodyBinding" primary = "yes" linked = "no"></part>
				<part metaref = "4837" role = "WSML::BodyParts" primary = "yes" linked = "no"></part>
				<part metaref = "4838" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4839" role = "WSML::FaultRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4840" role = "WSML::HeaderBinding" primary = "yes" linked = "no"></part>
				<part metaref = "4841" role = "WSML::HeaderMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4842" role = "WSML::HeaderPart" primary = "yes" linked = "no"></part>
				<part metaref = "4843" role = "WSML::InputRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4844" role = "WSML::MessageRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4845" role = "WSML::OutputRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4846" role = "WSML::PartRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4847" role = "WSML::SOAPBody" primary = "yes" linked = "no"></part>
				<part metaref = "4848" role = "WSML::SOAPFault" primary = "yes" linked = "no"></part>
				<part metaref = "4849" role = "WSML::SOAPFaultExtension" primary = "yes" linked = "no"></part>
				<part metaref = "4850" role = "WSML::SOAPHeader" primary = "yes" linked = "no"></part>
				<part metaref = "4851" role = "WSML::SOAPHeaderFault" primary = "yes" linked = "no"></part>
				<part metaref = "4852" role = "WSML::SOAPOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Definitions" metaref = "3632" attributes = "targetNamespace" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::DefinitionsPartCardinality238" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Messages" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Definitions, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::DefinitionsPartCardinality239" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Definitions, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::DefinitionsPartCardinality240" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Types" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Definitions, has to match 0..1.</dispname>
			</constraint>
			<attrdef name="targetNamespace" metaref = "4853" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "WSML::Attribute" metaref = "4855" kind = "WSML::Attribute"></role>
			<role name = "WSML::Binding" metaref = "4856" kind = "WSML::Binding"></role>
			<role name = "WSML::BindingPortType" metaref = "4857" kind = "WSML::BindingPortType"></role>
			<role name = "WSML::Documentation" metaref = "4858" kind = "WSML::Documentation"></role>
			<role name = "WSML::Import" metaref = "4859" kind = "WSML::Import"></role>
			<role name = "WSML::Messages" metaref = "4860" kind = "WSML::Messages"></role>
			<role name = "WSML::PortType" metaref = "4861" kind = "WSML::PortType"></role>
			<role name = "WSML::Service" metaref = "6393" kind = "WSML::Service"></role>
			<role name = "WSML::Types" metaref = "4862" kind = "WSML::Types"></role>
			<aspect name = "ServiceDefinition" metaref = "4863" attributes = "targetNamespace" >
				<part metaref = "4865" role = "WSML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "4866" role = "WSML::Binding" primary = "yes" linked = "no"></part>
				<part metaref = "4867" role = "WSML::BindingPortType" primary = "yes" linked = "no"></part>
				<part metaref = "4868" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4869" role = "WSML::Import" primary = "yes" linked = "no"></part>
				<part metaref = "4870" role = "WSML::Messages" primary = "yes" linked = "no"></part>
				<part metaref = "4871" role = "WSML::PortType" primary = "yes" linked = "no"></part>
				<part metaref = "6394" role = "WSML::Service" primary = "yes" linked = "no"></part>
				<part metaref = "4872" role = "WSML::Types" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Documentation" metaref = "1113" attributes = "DocText Mixed" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::Element" metaref = "4873" kind = "WSML::Element"></role>
			<aspect name = "ServiceDefinition" metaref = "4874" attributes = "DocText Mixed" >
				<part metaref = "4875" role = "WSML::Element" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Element" metaref = "3651" attributes = "schemaType Order" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::Attribute" metaref = "4876" kind = "WSML::Attribute"></role>
			<role name = "WSML::Element" metaref = "4877" kind = "WSML::Element"></role>
			<aspect name = "ServiceDefinition" metaref = "4878" attributes = "schemaType Order" >
				<part metaref = "4879" role = "WSML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "4880" role = "WSML::Element" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Fault" metaref = "1123" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::FaultMessagedstCardinality168" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::FaultMessage ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::Fault as &quot;dst&quot; over WSML::FaultMessage, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4881" kind = "WSML::Documentation"></role>
			<aspect name = "ServiceDefinition" metaref = "4882" >
				<part metaref = "4883" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Import" metaref = "3658" attributes = "namespace location" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::ImportPartCardinality241" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Definitions" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Import, has to match 1.</dispname>
			</constraint>
			<attrdef name="location" metaref = "4884" valuetype = "string" defvalue = "">
			</attrdef>
			<attrdef name="namespace" metaref = "4885" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "WSML::Definitions" metaref = "4886" kind = "WSML::Definitions"></role>
			<role name = "WSML::Documentation" metaref = "4887" kind = "WSML::Documentation"></role>
			<aspect name = "ServiceDefinition" metaref = "4888" attributes = "namespace location" >
				<part metaref = "4889" role = "WSML::Definitions" primary = "yes" linked = "no"></part>
				<part metaref = "4890" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Input" metaref = "3666" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::InputMessagedstCardinality176" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::InputMessage ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::Input as &quot;dst&quot; over WSML::InputMessage, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4891" kind = "WSML::Documentation"></role>
			<aspect name = "ServiceDefinition" metaref = "4892" >
				<part metaref = "4893" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Message" metaref = "3670" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::Part" metaref = "4894" kind = "WSML::Part"></role>
			<aspect name = "ServiceDefinition" metaref = "4895" >
				<part metaref = "4896" role = "WSML::Part" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Messages" metaref = "3674" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::Message" metaref = "4897" kind = "WSML::Message"></role>
			<aspect name = "ServiceDefinition" metaref = "4898" >
				<part metaref = "4899" role = "WSML::Message" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::NotificationOperation" metaref = "3678" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::NotificationOperationPartCardinality242" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Output" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::NotificationOperation, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::OperationPartCardinality244" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Operation, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4900" kind = "WSML::Documentation"></role>
			<role name = "WSML::FaultMessage" metaref = "4901" kind = "WSML::FaultMessage"></role>
			<role name = "WSML::InputMessage" metaref = "4902" kind = "WSML::InputMessage"></role>
			<role name = "WSML::MessageRef" metaref = "4903" kind = "WSML::MessageRef"></role>
			<role name = "WSML::Output" metaref = "4904" kind = "WSML::Output"></role>
			<role name = "WSML::OutputMessage" metaref = "4905" kind = "WSML::OutputMessage"></role>
			<aspect name = "ServiceDefinition" metaref = "4906" >
				<part metaref = "4907" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4908" role = "WSML::FaultMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4909" role = "WSML::InputMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4910" role = "WSML::MessageRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4911" role = "WSML::Output" primary = "yes" linked = "no"></part>
				<part metaref = "4912" role = "WSML::OutputMessage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::OneWayOperation" metaref = "3691" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::OneWayOperationPartCardinality243" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Input" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::OneWayOperation, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::OperationPartCardinality244" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Operation, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4913" kind = "WSML::Documentation"></role>
			<role name = "WSML::FaultMessage" metaref = "4914" kind = "WSML::FaultMessage"></role>
			<role name = "WSML::Input" metaref = "4915" kind = "WSML::Input"></role>
			<role name = "WSML::InputMessage" metaref = "4916" kind = "WSML::InputMessage"></role>
			<role name = "WSML::MessageRef" metaref = "4917" kind = "WSML::MessageRef"></role>
			<role name = "WSML::OutputMessage" metaref = "4918" kind = "WSML::OutputMessage"></role>
			<aspect name = "ServiceDefinition" metaref = "4919" >
				<part metaref = "4920" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4921" role = "WSML::FaultMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4922" role = "WSML::Input" primary = "yes" linked = "no"></part>
				<part metaref = "4923" role = "WSML::InputMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4924" role = "WSML::MessageRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4925" role = "WSML::OutputMessage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Output" metaref = "3701" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::OutputMessagedstCardinality178" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::OutputMessage ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::Output as &quot;dst&quot; over WSML::OutputMessage, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4926" kind = "WSML::Documentation"></role>
			<aspect name = "ServiceDefinition" metaref = "4927" >
				<part metaref = "4928" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Port" metaref = "4597" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::PortBindingdstCardinality180" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::PortBinding ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::Port as &quot;dst&quot; over WSML::PortBinding, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::PortPartCardinality245" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::ExtensiblePort" ) -> size + self.parts( "WSML::SOAPAddress" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Port, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::PortPartCardinality246" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Port, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "6306" kind = "WSML::Documentation"></role>
			<role name = "WSML::SOAPAddress" metaref = "6307" kind = "WSML::SOAPAddress"></role>
			<aspect name = "ServiceDefinition" metaref = "6308" >
				<part metaref = "6309" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "6310" role = "WSML::SOAPAddress" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::PortType" metaref = "4603" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::PortTypePartCardinality247" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::PortType, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4929" kind = "WSML::Documentation"></role>
			<role name = "WSML::NotificationOperation" metaref = "4930" kind = "WSML::NotificationOperation"></role>
			<role name = "WSML::OneWayOperation" metaref = "4931" kind = "WSML::OneWayOperation"></role>
			<role name = "WSML::RequestResponseOperation" metaref = "4932" kind = "WSML::RequestResponseOperation"></role>
			<role name = "WSML::SolicitResponseOperation" metaref = "4933" kind = "WSML::SolicitResponseOperation"></role>
			<aspect name = "ServiceDefinition" metaref = "4934" >
				<part metaref = "4935" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4936" role = "WSML::NotificationOperation" primary = "yes" linked = "yes"></part>
				<part metaref = "4937" role = "WSML::OneWayOperation" primary = "yes" linked = "yes"></part>
				<part metaref = "4938" role = "WSML::RequestResponseOperation" primary = "yes" linked = "yes"></part>
				<part metaref = "4939" role = "WSML::SolicitResponseOperation" primary = "yes" linked = "yes"></part>
			</aspect>
		</model>
		<model name = "WSML::RequestResponseOperation" metaref = "4615" attributes = "parameterOrder" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::OperationPartCardinality244" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Operation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::RequestResponseOperationPartCardinality248" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Input" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::RequestResponseOperation, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::RequestResponseOperationPartCardinality249" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Output" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::RequestResponseOperation, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4940" kind = "WSML::Documentation"></role>
			<role name = "WSML::Fault" metaref = "4941" kind = "WSML::Fault"></role>
			<role name = "WSML::FaultMessage" metaref = "4942" kind = "WSML::FaultMessage"></role>
			<role name = "WSML::Input" metaref = "4943" kind = "WSML::Input"></role>
			<role name = "WSML::InputMessage" metaref = "4944" kind = "WSML::InputMessage"></role>
			<role name = "WSML::MessageRef" metaref = "4945" kind = "WSML::MessageRef"></role>
			<role name = "WSML::Output" metaref = "4946" kind = "WSML::Output"></role>
			<role name = "WSML::OutputMessage" metaref = "4947" kind = "WSML::OutputMessage"></role>
			<aspect name = "ServiceDefinition" metaref = "4948" attributes = "parameterOrder" >
				<part metaref = "4949" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4950" role = "WSML::Fault" primary = "yes" linked = "no"></part>
				<part metaref = "4951" role = "WSML::FaultMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4952" role = "WSML::Input" primary = "yes" linked = "no"></part>
				<part metaref = "4953" role = "WSML::InputMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4954" role = "WSML::MessageRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4955" role = "WSML::Output" primary = "yes" linked = "no"></part>
				<part metaref = "4956" role = "WSML::OutputMessage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::SOAPHeader" metaref = "4633" attributes = "use required encodingStyle namespace" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::HeaderMessagedstCardinality172" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::HeaderMessage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::SOAPHeaders as &quot;dst&quot; over WSML::HeaderMessage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::HeaderPartdstCardinality174" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", WSML::HeaderPart ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to WSML::SOAPHeaders as &quot;dst&quot; over WSML::HeaderPart, has to match 1.</dispname>
			</constraint>
			<attrdef name="namespace" metaref = "4957" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "WSML::SOAPHeaderFault" metaref = "4958" kind = "WSML::SOAPHeaderFault"></role>
			<aspect name = "ServiceDefinition" metaref = "4959" attributes = "use required encodingStyle namespace" >
				<part metaref = "4960" role = "WSML::SOAPHeaderFault" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Schema" metaref = "4638" attributes = "targetNamespace" >
				<regnode name = "namePosition" value ="4"></regnode>
			<attrdef name="targetNamespace" metaref = "4961" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "WSML::Attribute" metaref = "4962" kind = "WSML::Attribute"></role>
			<role name = "WSML::Element" metaref = "4963" kind = "WSML::Element"></role>
			<role name = "WSML::SchemaImport" metaref = "4964" kind = "WSML::SchemaImport"></role>
			<role name = "WSML::SchemaReference" metaref = "4965" kind = "WSML::SchemaReference"></role>
			<aspect name = "ServiceDefinition" metaref = "4966" attributes = "targetNamespace" >
				<part metaref = "4967" role = "WSML::Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "4968" role = "WSML::Element" primary = "yes" linked = "no"></part>
				<part metaref = "4969" role = "WSML::SchemaImport" primary = "yes" linked = "no"></part>
				<part metaref = "4970" role = "WSML::SchemaReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::SchemaBuiltins" metaref = "4648" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::AtomicType" metaref = "4971" kind = "WSML::AtomicType"></role>
			<aspect name = "ServiceDefinition" metaref = "4972" >
				<part metaref = "4973" role = "WSML::AtomicType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::SchemaImport" metaref = "4651" attributes = "id namespace schemaLocation" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::SchemaReferencePartCardinality250" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Schema" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::SchemaReference, has to match 1.</dispname>
			</constraint>
			<attrdef name="namespace" metaref = "4974" valuetype = "string" defvalue = "">
			</attrdef>
			<role name = "WSML::Schema" metaref = "4975" kind = "WSML::Schema"></role>
			<aspect name = "ServiceDefinition" metaref = "4976" attributes = "id namespace schemaLocation" >
				<part metaref = "4977" role = "WSML::Schema" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::SchemaReference" metaref = "4656" attributes = "id schemaLocation" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::SchemaReferencePartCardinality250" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Schema" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::SchemaReference, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Schema" metaref = "4978" kind = "WSML::Schema"></role>
			<aspect name = "ServiceDefinition" metaref = "4979" attributes = "id schemaLocation" >
				<part metaref = "4980" role = "WSML::Schema" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Service" metaref = "4660" >
				<regnode name = "namePosition" value ="4"></regnode>
			<role name = "WSML::BindingRef" metaref = "6395" kind = "WSML::BindingRef"></role>
			<role name = "WSML::Port" metaref = "6396" kind = "WSML::Port"></role>
			<role name = "WSML::PortBinding" metaref = "6397" kind = "WSML::PortBinding"></role>
			<aspect name = "ServiceDefinition" metaref = "6398" >
				<part metaref = "6399" role = "WSML::BindingRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "6400" role = "WSML::Port" primary = "yes" linked = "yes"></part>
				<part metaref = "6401" role = "WSML::PortBinding" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::SolicitResponseOperation" metaref = "1234" attributes = "parameterOrder" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::OperationPartCardinality244" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Operation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWSML::SolicitResponseOperationPartCardinality251" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Input" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::SolicitResponseOperation, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWSML::SolicitResponseOperationPartCardinality252" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Output" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::SolicitResponseOperation, has to match 1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4981" kind = "WSML::Documentation"></role>
			<role name = "WSML::Fault" metaref = "4982" kind = "WSML::Fault"></role>
			<role name = "WSML::FaultMessage" metaref = "4983" kind = "WSML::FaultMessage"></role>
			<role name = "WSML::Input" metaref = "4984" kind = "WSML::Input"></role>
			<role name = "WSML::InputMessage" metaref = "4985" kind = "WSML::InputMessage"></role>
			<role name = "WSML::MessageRef" metaref = "4986" kind = "WSML::MessageRef"></role>
			<role name = "WSML::Output" metaref = "4987" kind = "WSML::Output"></role>
			<role name = "WSML::OutputMessage" metaref = "4988" kind = "WSML::OutputMessage"></role>
			<aspect name = "ServiceDefinition" metaref = "4989" attributes = "parameterOrder" >
				<part metaref = "4990" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "4991" role = "WSML::Fault" primary = "yes" linked = "no"></part>
				<part metaref = "4992" role = "WSML::FaultMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4993" role = "WSML::Input" primary = "yes" linked = "no"></part>
				<part metaref = "4994" role = "WSML::InputMessage" primary = "yes" linked = "no"></part>
				<part metaref = "4995" role = "WSML::MessageRef" primary = "yes" kindaspect = "ServiceDefinition" linked = "no"></part>
				<part metaref = "4996" role = "WSML::Output" primary = "yes" linked = "no"></part>
				<part metaref = "4997" role = "WSML::OutputMessage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WSML::Types" metaref = "4693" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWSML::TypesPartCardinality253" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "WSML::Documentation" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by WSML::Types, has to match 0..1.</dispname>
			</constraint>
			<role name = "WSML::Documentation" metaref = "4998" kind = "WSML::Documentation"></role>
			<role name = "WSML::Schema" metaref = "4999" kind = "WSML::Schema"></role>
			<aspect name = "ServiceDefinition" metaref = "5000" >
				<part metaref = "5001" role = "WSML::Documentation" primary = "yes" linked = "no"></part>
				<part metaref = "5002" role = "WSML::Schema" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<folder name = "PICML::ComponentAnalyses" metaref = "1896"  rootobjects = "PICML::BenchmarkAnalysis" >
		</folder>
		<folder name = "PICML::ComponentBuild" metaref = "1897"  rootobjects = "PICML::MPC" >
		</folder>
		<folder name = "PICML::ComponentImplementations" metaref = "1898"  rootobjects = "PICML::ComponentImplementationContainer" >
			<constraint name="UniqueComponentImplementations" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.models(ComponentImplementationContainer) in
   artifacts->isUnique (i : ComponentImplementationContainer | i.name.trim())]]>
				<dispname>ComponentImplementationContainers should have unique names</dispname>
			</constraint>
		</folder>
		<folder name = "PICML::ComponentPackages" metaref = "1899"  rootobjects = "PICML::PackageContainer" >
		</folder>
		<folder name = "PICML::ComponentTypes" metaref = "1900"  rootobjects = "PICML::ComponentContainer" >
		</folder>
		<folder name = "PICML::DeploymentPlans" metaref = "1901"  rootobjects = "PICML::DeploymentPlan" >
		</folder>
		<folder name = "PICML::EventChannelConfig" metaref = "1902"  rootobjects = "PICML::EventChannelConfiguration" >
		</folder>
		<folder name = "PICML::FaultTolerance" metaref = "3246"  rootobjects = "PICML::FTRequirements PICML::SRGContainer" >
		</folder>
		<folder name = "PICML::ImplementationArtifacts" metaref = "1903"  rootobjects = "PICML::ArtifactContainer" >
		</folder>
		<folder name = "PICML::InterfaceDefinitions" metaref = "1904"  rootobjects = "PICML::File" >
			<constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
				<![CDATA[allFileScopeDecls ()->forAll (
          x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
          )]]>
				<dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
			</constraint>
		</folder>
		<folder name = "PICML::PackageConfigurations" metaref = "1905"  rootobjects = "PICML::PackageConfigurationContainer" >
		</folder>
		<folder name = "PICML::PathDiagrams" metaref = "3173"  rootobjects = "PICML::Paths" >
		</folder>
		<folder name = "PICML::PredefinedTypes" metaref = "1906"  rootobjects = "PICML::Boolean PICML::Byte PICML::GenericObject PICML::GenericValue PICML::GenericValueObject PICML::LongInteger PICML::RealNumber PICML::ShortInteger PICML::String PICML::TypeEncoding PICML::TypeKind" >
		</folder>
		<folder name = "PICML::QoSModeling" metaref = "2365"  rootobjects = "PICML::CPU PICML::Concurrency PICML::Connection PICML::Process PICML::QoSCategory PICML::QoSCharacteristic" >
		</folder>
		<folder name = "PICML::Targets" metaref = "1907"  rootobjects = "PICML::Domain" >
		</folder>
		<folder name = "PICML::TopLevelPackages" metaref = "1908"  rootobjects = "PICML::TopLevelPackageContainer" >
		</folder>
		<folder name = "PICML::WorkerLibraries" metaref = "5425"  rootobjects = "PICML::WorkerLibrary" >
		</folder>
	</folder>
</paradigm>
