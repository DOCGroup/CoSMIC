//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.07.10 at 10:44:21 PM EDT 
//


package edu.vanderbilt.isis.gme.xme;

import javax.xml.bind.annotation.XmlRegistry;
import edu.vanderbilt.isis.gme.xme.Atom;
import edu.vanderbilt.isis.gme.xme.Attribute;
import edu.vanderbilt.isis.gme.xme.Author;
import edu.vanderbilt.isis.gme.xme.Comment;
import edu.vanderbilt.isis.gme.xme.Connection;
import edu.vanderbilt.isis.gme.xme.Connpoint;
import edu.vanderbilt.isis.gme.xme.Constraint;
import edu.vanderbilt.isis.gme.xme.Folder;
import edu.vanderbilt.isis.gme.xme.Model;
import edu.vanderbilt.isis.gme.xme.Name;
import edu.vanderbilt.isis.gme.xme.ObjectFactory;
import edu.vanderbilt.isis.gme.xme.Project;
import edu.vanderbilt.isis.gme.xme.Reference;
import edu.vanderbilt.isis.gme.xme.Regnode;
import edu.vanderbilt.isis.gme.xme.Set;
import edu.vanderbilt.isis.gme.xme.Value;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.vanderbilt.isis.gme.xme package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.vanderbilt.isis.gme.xme
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Connpoint }
     * 
     */
    public Connpoint createConnpoint() {
        return new Connpoint();
    }

    /**
     * Create an instance of {@link Set }
     * 
     */
    public Set createSet() {
        return new Set();
    }

    /**
     * Create an instance of {@link Atom }
     * 
     */
    public Atom createAtom() {
        return new Atom();
    }

    /**
     * Create an instance of {@link Folder }
     * 
     */
    public Folder createFolder() {
        return new Folder();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link Name }
     * 
     */
    public Name createName() {
        return new Name();
    }

    /**
     * Create an instance of {@link Comment }
     * 
     */
    public Comment createComment() {
        return new Comment();
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link Author }
     * 
     */
    public Author createAuthor() {
        return new Author();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Connection }
     * 
     */
    public Connection createConnection() {
        return new Connection();
    }

    /**
     * Create an instance of {@link Regnode }
     * 
     */
    public Regnode createRegnode() {
        return new Regnode();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link Constraint }
     * 
     */
    public Constraint createConstraint() {
        return new Constraint();
    }

    /**
     * Create an instance of {@link Project }
     * 
     */
    public Project createProject() {
        return new Project();
    }

}
