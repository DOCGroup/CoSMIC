

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0361 */
/* at Mon May 31 22:30:03 2004
 */
/* Compiler settings for C:\Program Files\GME\SDK\BON\ComponentLib.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __ComponentLib_h__
#define __ComponentLib_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMgaMetaRegNode_FWD_DEFINED__
#define __IMgaMetaRegNode_FWD_DEFINED__
typedef interface IMgaMetaRegNode IMgaMetaRegNode;
#endif 	/* __IMgaMetaRegNode_FWD_DEFINED__ */


#ifndef __IMgaConstraint_FWD_DEFINED__
#define __IMgaConstraint_FWD_DEFINED__
typedef interface IMgaConstraint IMgaConstraint;
#endif 	/* __IMgaConstraint_FWD_DEFINED__ */


#ifndef __IMgaMetaProject_FWD_DEFINED__
#define __IMgaMetaProject_FWD_DEFINED__
typedef interface IMgaMetaProject IMgaMetaProject;
#endif 	/* __IMgaMetaProject_FWD_DEFINED__ */


#ifndef __IMgaMetaBase_FWD_DEFINED__
#define __IMgaMetaBase_FWD_DEFINED__
typedef interface IMgaMetaBase IMgaMetaBase;
#endif 	/* __IMgaMetaBase_FWD_DEFINED__ */


#ifndef __IMgaMetaFolder_FWD_DEFINED__
#define __IMgaMetaFolder_FWD_DEFINED__
typedef interface IMgaMetaFolder IMgaMetaFolder;
#endif 	/* __IMgaMetaFolder_FWD_DEFINED__ */


#ifndef __IMgaMetaFCO_FWD_DEFINED__
#define __IMgaMetaFCO_FWD_DEFINED__
typedef interface IMgaMetaFCO IMgaMetaFCO;
#endif 	/* __IMgaMetaFCO_FWD_DEFINED__ */


#ifndef __IMgaMetaModel_FWD_DEFINED__
#define __IMgaMetaModel_FWD_DEFINED__
typedef interface IMgaMetaModel IMgaMetaModel;
#endif 	/* __IMgaMetaModel_FWD_DEFINED__ */


#ifndef __IMgaMetaAspect_FWD_DEFINED__
#define __IMgaMetaAspect_FWD_DEFINED__
typedef interface IMgaMetaAspect IMgaMetaAspect;
#endif 	/* __IMgaMetaAspect_FWD_DEFINED__ */


#ifndef __IMgaMetaRole_FWD_DEFINED__
#define __IMgaMetaRole_FWD_DEFINED__
typedef interface IMgaMetaRole IMgaMetaRole;
#endif 	/* __IMgaMetaRole_FWD_DEFINED__ */


#ifndef __IMgaMetaPart_FWD_DEFINED__
#define __IMgaMetaPart_FWD_DEFINED__
typedef interface IMgaMetaPart IMgaMetaPart;
#endif 	/* __IMgaMetaPart_FWD_DEFINED__ */


#ifndef __IMgaMetaAtom_FWD_DEFINED__
#define __IMgaMetaAtom_FWD_DEFINED__
typedef interface IMgaMetaAtom IMgaMetaAtom;
#endif 	/* __IMgaMetaAtom_FWD_DEFINED__ */


#ifndef __IMgaMetaAttribute_FWD_DEFINED__
#define __IMgaMetaAttribute_FWD_DEFINED__
typedef interface IMgaMetaAttribute IMgaMetaAttribute;
#endif 	/* __IMgaMetaAttribute_FWD_DEFINED__ */


#ifndef __IMgaMetaEnumItem_FWD_DEFINED__
#define __IMgaMetaEnumItem_FWD_DEFINED__
typedef interface IMgaMetaEnumItem IMgaMetaEnumItem;
#endif 	/* __IMgaMetaEnumItem_FWD_DEFINED__ */


#ifndef __IMgaMetaReference_FWD_DEFINED__
#define __IMgaMetaReference_FWD_DEFINED__
typedef interface IMgaMetaReference IMgaMetaReference;
#endif 	/* __IMgaMetaReference_FWD_DEFINED__ */


#ifndef __IMgaMetaSet_FWD_DEFINED__
#define __IMgaMetaSet_FWD_DEFINED__
typedef interface IMgaMetaSet IMgaMetaSet;
#endif 	/* __IMgaMetaSet_FWD_DEFINED__ */


#ifndef __IMgaMetaConnection_FWD_DEFINED__
#define __IMgaMetaConnection_FWD_DEFINED__
typedef interface IMgaMetaConnection IMgaMetaConnection;
#endif 	/* __IMgaMetaConnection_FWD_DEFINED__ */


#ifndef __IMgaMetaConnJoint_FWD_DEFINED__
#define __IMgaMetaConnJoint_FWD_DEFINED__
typedef interface IMgaMetaConnJoint IMgaMetaConnJoint;
#endif 	/* __IMgaMetaConnJoint_FWD_DEFINED__ */


#ifndef __IMgaMetaPointerSpec_FWD_DEFINED__
#define __IMgaMetaPointerSpec_FWD_DEFINED__
typedef interface IMgaMetaPointerSpec IMgaMetaPointerSpec;
#endif 	/* __IMgaMetaPointerSpec_FWD_DEFINED__ */


#ifndef __IMgaMetaPointerItem_FWD_DEFINED__
#define __IMgaMetaPointerItem_FWD_DEFINED__
typedef interface IMgaMetaPointerItem IMgaMetaPointerItem;
#endif 	/* __IMgaMetaPointerItem_FWD_DEFINED__ */


#ifndef __IMgaMetaAspects_FWD_DEFINED__
#define __IMgaMetaAspects_FWD_DEFINED__
typedef interface IMgaMetaAspects IMgaMetaAspects;
#endif 	/* __IMgaMetaAspects_FWD_DEFINED__ */


#ifndef __IMgaMetaRoles_FWD_DEFINED__
#define __IMgaMetaRoles_FWD_DEFINED__
typedef interface IMgaMetaRoles IMgaMetaRoles;
#endif 	/* __IMgaMetaRoles_FWD_DEFINED__ */


#ifndef __IMgaMetaFCOs_FWD_DEFINED__
#define __IMgaMetaFCOs_FWD_DEFINED__
typedef interface IMgaMetaFCOs IMgaMetaFCOs;
#endif 	/* __IMgaMetaFCOs_FWD_DEFINED__ */


#ifndef __IMgaMetaAttributes_FWD_DEFINED__
#define __IMgaMetaAttributes_FWD_DEFINED__
typedef interface IMgaMetaAttributes IMgaMetaAttributes;
#endif 	/* __IMgaMetaAttributes_FWD_DEFINED__ */


#ifndef __IMgaMetaFolders_FWD_DEFINED__
#define __IMgaMetaFolders_FWD_DEFINED__
typedef interface IMgaMetaFolders IMgaMetaFolders;
#endif 	/* __IMgaMetaFolders_FWD_DEFINED__ */


#ifndef __IMgaMetaPointerSpecs_FWD_DEFINED__
#define __IMgaMetaPointerSpecs_FWD_DEFINED__
typedef interface IMgaMetaPointerSpecs IMgaMetaPointerSpecs;
#endif 	/* __IMgaMetaPointerSpecs_FWD_DEFINED__ */


#ifndef __IMgaMetaRegNodes_FWD_DEFINED__
#define __IMgaMetaRegNodes_FWD_DEFINED__
typedef interface IMgaMetaRegNodes IMgaMetaRegNodes;
#endif 	/* __IMgaMetaRegNodes_FWD_DEFINED__ */


#ifndef __IMgaConstraints_FWD_DEFINED__
#define __IMgaConstraints_FWD_DEFINED__
typedef interface IMgaConstraints IMgaConstraints;
#endif 	/* __IMgaConstraints_FWD_DEFINED__ */


#ifndef __IMgaMetaParts_FWD_DEFINED__
#define __IMgaMetaParts_FWD_DEFINED__
typedef interface IMgaMetaParts IMgaMetaParts;
#endif 	/* __IMgaMetaParts_FWD_DEFINED__ */


#ifndef __IMgaMetaModels_FWD_DEFINED__
#define __IMgaMetaModels_FWD_DEFINED__
typedef interface IMgaMetaModels IMgaMetaModels;
#endif 	/* __IMgaMetaModels_FWD_DEFINED__ */


#ifndef __IMgaMetaConnJoints_FWD_DEFINED__
#define __IMgaMetaConnJoints_FWD_DEFINED__
typedef interface IMgaMetaConnJoints IMgaMetaConnJoints;
#endif 	/* __IMgaMetaConnJoints_FWD_DEFINED__ */


#ifndef __IMgaMetaPointerItems_FWD_DEFINED__
#define __IMgaMetaPointerItems_FWD_DEFINED__
typedef interface IMgaMetaPointerItems IMgaMetaPointerItems;
#endif 	/* __IMgaMetaPointerItems_FWD_DEFINED__ */


#ifndef __IMgaMetaEnumItems_FWD_DEFINED__
#define __IMgaMetaEnumItems_FWD_DEFINED__
typedef interface IMgaMetaEnumItems IMgaMetaEnumItems;
#endif 	/* __IMgaMetaEnumItems_FWD_DEFINED__ */


#ifndef __IMgaProject_FWD_DEFINED__
#define __IMgaProject_FWD_DEFINED__
typedef interface IMgaProject IMgaProject;
#endif 	/* __IMgaProject_FWD_DEFINED__ */


#ifndef __IMgaEventSink_FWD_DEFINED__
#define __IMgaEventSink_FWD_DEFINED__
typedef interface IMgaEventSink IMgaEventSink;
#endif 	/* __IMgaEventSink_FWD_DEFINED__ */


#ifndef __IMgaAddOn_FWD_DEFINED__
#define __IMgaAddOn_FWD_DEFINED__
typedef interface IMgaAddOn IMgaAddOn;
#endif 	/* __IMgaAddOn_FWD_DEFINED__ */


#ifndef __IMgaComponent_FWD_DEFINED__
#define __IMgaComponent_FWD_DEFINED__
typedef interface IMgaComponent IMgaComponent;
#endif 	/* __IMgaComponent_FWD_DEFINED__ */


#ifndef __IMgaComponentEx_FWD_DEFINED__
#define __IMgaComponentEx_FWD_DEFINED__
typedef interface IMgaComponentEx IMgaComponentEx;
#endif 	/* __IMgaComponentEx_FWD_DEFINED__ */


#ifndef __IMgaClient_FWD_DEFINED__
#define __IMgaClient_FWD_DEFINED__
typedef interface IMgaClient IMgaClient;
#endif 	/* __IMgaClient_FWD_DEFINED__ */


#ifndef __IMgaComponentDispatch_FWD_DEFINED__
#define __IMgaComponentDispatch_FWD_DEFINED__
typedef interface IMgaComponentDispatch IMgaComponentDispatch;
#endif 	/* __IMgaComponentDispatch_FWD_DEFINED__ */


#ifndef __IMgaTerritory_FWD_DEFINED__
#define __IMgaTerritory_FWD_DEFINED__
typedef interface IMgaTerritory IMgaTerritory;
#endif 	/* __IMgaTerritory_FWD_DEFINED__ */


#ifndef __IMgaObject_FWD_DEFINED__
#define __IMgaObject_FWD_DEFINED__
typedef interface IMgaObject IMgaObject;
#endif 	/* __IMgaObject_FWD_DEFINED__ */


#ifndef __IMgaFCO_FWD_DEFINED__
#define __IMgaFCO_FWD_DEFINED__
typedef interface IMgaFCO IMgaFCO;
#endif 	/* __IMgaFCO_FWD_DEFINED__ */


#ifndef __IMgaFolder_FWD_DEFINED__
#define __IMgaFolder_FWD_DEFINED__
typedef interface IMgaFolder IMgaFolder;
#endif 	/* __IMgaFolder_FWD_DEFINED__ */


#ifndef __IMgaModel_FWD_DEFINED__
#define __IMgaModel_FWD_DEFINED__
typedef interface IMgaModel IMgaModel;
#endif 	/* __IMgaModel_FWD_DEFINED__ */


#ifndef __IMgaAtom_FWD_DEFINED__
#define __IMgaAtom_FWD_DEFINED__
typedef interface IMgaAtom IMgaAtom;
#endif 	/* __IMgaAtom_FWD_DEFINED__ */


#ifndef __IMgaPart_FWD_DEFINED__
#define __IMgaPart_FWD_DEFINED__
typedef interface IMgaPart IMgaPart;
#endif 	/* __IMgaPart_FWD_DEFINED__ */


#ifndef __IMgaReference_FWD_DEFINED__
#define __IMgaReference_FWD_DEFINED__
typedef interface IMgaReference IMgaReference;
#endif 	/* __IMgaReference_FWD_DEFINED__ */


#ifndef __IMgaSet_FWD_DEFINED__
#define __IMgaSet_FWD_DEFINED__
typedef interface IMgaSet IMgaSet;
#endif 	/* __IMgaSet_FWD_DEFINED__ */


#ifndef __IMgaConnection_FWD_DEFINED__
#define __IMgaConnection_FWD_DEFINED__
typedef interface IMgaConnection IMgaConnection;
#endif 	/* __IMgaConnection_FWD_DEFINED__ */


#ifndef __IMgaSimpleConnection_FWD_DEFINED__
#define __IMgaSimpleConnection_FWD_DEFINED__
typedef interface IMgaSimpleConnection IMgaSimpleConnection;
#endif 	/* __IMgaSimpleConnection_FWD_DEFINED__ */


#ifndef __IMgaConnPoint_FWD_DEFINED__
#define __IMgaConnPoint_FWD_DEFINED__
typedef interface IMgaConnPoint IMgaConnPoint;
#endif 	/* __IMgaConnPoint_FWD_DEFINED__ */


#ifndef __IMgaRegNode_FWD_DEFINED__
#define __IMgaRegNode_FWD_DEFINED__
typedef interface IMgaRegNode IMgaRegNode;
#endif 	/* __IMgaRegNode_FWD_DEFINED__ */


#ifndef __IMgaFilter_FWD_DEFINED__
#define __IMgaFilter_FWD_DEFINED__
typedef interface IMgaFilter IMgaFilter;
#endif 	/* __IMgaFilter_FWD_DEFINED__ */


#ifndef __IMgaAttribute_FWD_DEFINED__
#define __IMgaAttribute_FWD_DEFINED__
typedef interface IMgaAttribute IMgaAttribute;
#endif 	/* __IMgaAttribute_FWD_DEFINED__ */


#ifndef __IMgaFolders_FWD_DEFINED__
#define __IMgaFolders_FWD_DEFINED__
typedef interface IMgaFolders IMgaFolders;
#endif 	/* __IMgaFolders_FWD_DEFINED__ */


#ifndef __IMgaFCOs_FWD_DEFINED__
#define __IMgaFCOs_FWD_DEFINED__
typedef interface IMgaFCOs IMgaFCOs;
#endif 	/* __IMgaFCOs_FWD_DEFINED__ */


#ifndef __IMgaAttributes_FWD_DEFINED__
#define __IMgaAttributes_FWD_DEFINED__
typedef interface IMgaAttributes IMgaAttributes;
#endif 	/* __IMgaAttributes_FWD_DEFINED__ */


#ifndef __IMgaParts_FWD_DEFINED__
#define __IMgaParts_FWD_DEFINED__
typedef interface IMgaParts IMgaParts;
#endif 	/* __IMgaParts_FWD_DEFINED__ */


#ifndef __IMgaConnPoints_FWD_DEFINED__
#define __IMgaConnPoints_FWD_DEFINED__
typedef interface IMgaConnPoints IMgaConnPoints;
#endif 	/* __IMgaConnPoints_FWD_DEFINED__ */


#ifndef __IMgaRegNodes_FWD_DEFINED__
#define __IMgaRegNodes_FWD_DEFINED__
typedef interface IMgaRegNodes IMgaRegNodes;
#endif 	/* __IMgaRegNodes_FWD_DEFINED__ */


#ifndef __IMgaAddOns_FWD_DEFINED__
#define __IMgaAddOns_FWD_DEFINED__
typedef interface IMgaAddOns IMgaAddOns;
#endif 	/* __IMgaAddOns_FWD_DEFINED__ */


#ifndef __IMgaTerritories_FWD_DEFINED__
#define __IMgaTerritories_FWD_DEFINED__
typedef interface IMgaTerritories IMgaTerritories;
#endif 	/* __IMgaTerritories_FWD_DEFINED__ */


#ifndef __IMgaComponents_FWD_DEFINED__
#define __IMgaComponents_FWD_DEFINED__
typedef interface IMgaComponents IMgaComponents;
#endif 	/* __IMgaComponents_FWD_DEFINED__ */


#ifndef __IMgaClients_FWD_DEFINED__
#define __IMgaClients_FWD_DEFINED__
typedef interface IMgaClients IMgaClients;
#endif 	/* __IMgaClients_FWD_DEFINED__ */


#ifndef __IMgaObjects_FWD_DEFINED__
#define __IMgaObjects_FWD_DEFINED__
typedef interface IMgaObjects IMgaObjects;
#endif 	/* __IMgaObjects_FWD_DEFINED__ */


#ifndef __IMgaO_FWD_DEFINED__
#define __IMgaO_FWD_DEFINED__
typedef interface IMgaO IMgaO;
#endif 	/* __IMgaO_FWD_DEFINED__ */


#ifndef __IMgaResolver_FWD_DEFINED__
#define __IMgaResolver_FWD_DEFINED__
typedef interface IMgaResolver IMgaResolver;
#endif 	/* __IMgaResolver_FWD_DEFINED__ */


#ifndef __IMgaRegistrar_FWD_DEFINED__
#define __IMgaRegistrar_FWD_DEFINED__
typedef interface IMgaRegistrar IMgaRegistrar;
#endif 	/* __IMgaRegistrar_FWD_DEFINED__ */


#ifndef __IMgaLauncher_FWD_DEFINED__
#define __IMgaLauncher_FWD_DEFINED__
typedef interface IMgaLauncher IMgaLauncher;
#endif 	/* __IMgaLauncher_FWD_DEFINED__ */


#ifndef __IMgaProgressDlg_FWD_DEFINED__
#define __IMgaProgressDlg_FWD_DEFINED__
typedef interface IMgaProgressDlg IMgaProgressDlg;
#endif 	/* __IMgaProgressDlg_FWD_DEFINED__ */


#ifndef __IMgaComponentProxy_FWD_DEFINED__
#define __IMgaComponentProxy_FWD_DEFINED__
typedef interface IMgaComponentProxy IMgaComponentProxy;
#endif 	/* __IMgaComponentProxy_FWD_DEFINED__ */


#ifndef __IMgaXsltFileSel_FWD_DEFINED__
#define __IMgaXsltFileSel_FWD_DEFINED__
typedef interface IMgaXsltFileSel IMgaXsltFileSel;
#endif 	/* __IMgaXsltFileSel_FWD_DEFINED__ */


#ifndef __IMgaDataSource_FWD_DEFINED__
#define __IMgaDataSource_FWD_DEFINED__
typedef interface IMgaDataSource IMgaDataSource;
#endif 	/* __IMgaDataSource_FWD_DEFINED__ */


#ifndef __IMgaVersionInfo_FWD_DEFINED__
#define __IMgaVersionInfo_FWD_DEFINED__
typedef interface IMgaVersionInfo IMgaVersionInfo;
#endif 	/* __IMgaVersionInfo_FWD_DEFINED__ */


#ifndef __MgaComponent_FWD_DEFINED__
#define __MgaComponent_FWD_DEFINED__

#ifdef __cplusplus
typedef class MgaComponent MgaComponent;
#else
typedef struct MgaComponent MgaComponent;
#endif /* __cplusplus */

#endif 	/* __MgaComponent_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_ComponentLib_0000 */
/* [local] */ 

#ifndef INTERFACECOLL_INCLUDED
#define INTERFACECOLL_INCLUDED
extern "C++"											
{														
	template<class COLL> struct TypeName_MgaColl2Elem		
	{														
		typedef IUnknown element_type;						
		typedef IUnknown collection_type;					
	};														
	template<class ELEM> struct TypeName_MgaElem2Coll		
	{														
		typedef IUnknown element_type;						
		typedef IUnknown collection_type;					
	};														
}														
#define TYPENAME_COLL2ELEM(COLL) ::TypeName_MgaColl2Elem<COLL>::element_type	
#define TYPENAME_ELEM2COLL(ELEM) ::TypeName_MgaElem2Coll<ELEM>::collection_type
#endif
#ifndef INTERFACE_VERSION
#define INTERFACE_VERSION 0x0002001F
#endif //INTERFACE_VERSION
typedef long metaref_type;

typedef 
enum objtype_enum
    {	OBJTYPE_NULL	= 0,
	OBJTYPE_MODEL	= 1,
	OBJTYPE_ATOM	= 2,
	OBJTYPE_REFERENCE	= 3,
	OBJTYPE_CONNECTION	= 4,
	OBJTYPE_SET	= 5,
	OBJTYPE_FOLDER	= 6,
	OBJTYPE_ASPECT	= OBJTYPE_FOLDER + 1,
	OBJTYPE_ROLE	= OBJTYPE_ASPECT + 1,
	OBJTYPE_ATTRIBUTE	= OBJTYPE_ROLE + 1,
	OBJTYPE_PART	= OBJTYPE_ATTRIBUTE + 1
    } 	objtype_enum;

typedef 
enum attval_enum
    {	ATTVAL_NULL	= 0,
	ATTVAL_STRING	= 1,
	ATTVAL_INTEGER	= 2,
	ATTVAL_DOUBLE	= 3,
	ATTVAL_BOOLEAN	= 4,
	ATTVAL_REFERENCE	= 5,
	ATTVAL_ENUM	= ATTVAL_REFERENCE + 1,
	ATTVAL_DYNAMIC	= ATTVAL_ENUM + 1
    } 	attval_enum;

typedef 
enum constraint_depth_enum
    {	CONSTRAINT_DEPTH_ZERO	= 0,
	CONSTRAINT_DEPTH_ONE	= CONSTRAINT_DEPTH_ZERO + 1,
	CONSTRAINT_DEPTH_ANY	= CONSTRAINT_DEPTH_ONE + 1
    } 	constraint_depth_enum;

typedef 
enum constraint_type_enum
    {	CONSTRAINT_TYPE_EVENTBASED	= 0,
	CONSTRAINT_TYPE_ONDEMAND	= CONSTRAINT_TYPE_EVENTBASED + 1,
	CONSTRAINT_TYPE_FUNCTION	= CONSTRAINT_TYPE_ONDEMAND + 1
    } 	constraint_type_enum;

































extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0000_v0_0_s_ifspec;

#ifndef __IMgaMetaRegNode_INTERFACE_DEFINED__
#define __IMgaMetaRegNode_INTERFACE_DEFINED__

/* interface IMgaMetaRegNode */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaRegNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA323D-B758-11D3-ABAE-000002387500")
    IMgaMetaRegNode : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNodes( 
            /* [retval][out] */ IMgaMetaRegNodes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaRegNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaRegNode * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaRegNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaRegNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaRegNode * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaRegNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaRegNode * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaRegNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaRegNode * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IMgaMetaRegNode * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IMgaMetaRegNode * This,
            /* [in] */ BSTR p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaRegNode * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaRegNode * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaRegNode * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaRegNode * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaRegNode * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        END_INTERFACE
    } IMgaMetaRegNodeVtbl;

    interface IMgaMetaRegNode
    {
        CONST_VTBL struct IMgaMetaRegNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaRegNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaRegNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaRegNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaRegNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaRegNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaRegNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaRegNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaRegNode_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaRegNode_get_Value(This,p)	\
    (This)->lpVtbl -> get_Value(This,p)

#define IMgaMetaRegNode_put_Value(This,p)	\
    (This)->lpVtbl -> put_Value(This,p)

#define IMgaMetaRegNode_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaRegNode_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaRegNode_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaRegNode_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaRegNode_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_get_Name_Proxy( 
    IMgaMetaRegNode * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaRegNode_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_get_Value_Proxy( 
    IMgaMetaRegNode * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaRegNode_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_put_Value_Proxy( 
    IMgaMetaRegNode * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaRegNode_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_Delete_Proxy( 
    IMgaMetaRegNode * This);


void __RPC_STUB IMgaMetaRegNode_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_get_RegistryNodes_Proxy( 
    IMgaMetaRegNode * This,
    /* [retval][out] */ IMgaMetaRegNodes **p);


void __RPC_STUB IMgaMetaRegNode_get_RegistryNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_get_RegistryNode_Proxy( 
    IMgaMetaRegNode * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaMetaRegNode **p);


void __RPC_STUB IMgaMetaRegNode_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_get_RegistryValue_Proxy( 
    IMgaMetaRegNode * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaRegNode_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNode_put_RegistryValue_Proxy( 
    IMgaMetaRegNode * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaRegNode_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaRegNode_INTERFACE_DEFINED__ */


#ifndef __IMgaConstraint_INTERFACE_DEFINED__
#define __IMgaConstraint_INTERFACE_DEFINED__

/* interface IMgaConstraint */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaConstraint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3241-B758-11D3-ABAE-000000000000")
    IMgaConstraint : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayedName( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DisplayedName( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Expression( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Expression( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EventMask( 
            /* [retval][out] */ unsigned long *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventMask( 
            /* [in] */ unsigned long p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Depth( 
            /* [retval][out] */ constraint_depth_enum *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Depth( 
            /* [in] */ constraint_depth_enum p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Priority( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Priority( 
            /* [in] */ long p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ constraint_type_enum *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ constraint_type_enum p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaConstraintVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaConstraint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaConstraint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaConstraint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaConstraint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaConstraint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaConstraint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaConstraint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaConstraint * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaConstraint * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaConstraint * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaConstraint * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expression )( 
            IMgaConstraint * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expression )( 
            IMgaConstraint * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventMask )( 
            IMgaConstraint * This,
            /* [retval][out] */ unsigned long *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventMask )( 
            IMgaConstraint * This,
            /* [in] */ unsigned long p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Depth )( 
            IMgaConstraint * This,
            /* [retval][out] */ constraint_depth_enum *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Depth )( 
            IMgaConstraint * This,
            /* [in] */ constraint_depth_enum p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            IMgaConstraint * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            IMgaConstraint * This,
            /* [in] */ long p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaConstraint * This,
            /* [retval][out] */ constraint_type_enum *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IMgaConstraint * This,
            /* [in] */ constraint_type_enum p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaConstraint * This);
        
        END_INTERFACE
    } IMgaConstraintVtbl;

    interface IMgaConstraint
    {
        CONST_VTBL struct IMgaConstraintVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaConstraint_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaConstraint_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaConstraint_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaConstraint_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaConstraint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaConstraint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaConstraint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaConstraint_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaConstraint_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaConstraint_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaConstraint_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaConstraint_get_Expression(This,p)	\
    (This)->lpVtbl -> get_Expression(This,p)

#define IMgaConstraint_put_Expression(This,p)	\
    (This)->lpVtbl -> put_Expression(This,p)

#define IMgaConstraint_get_EventMask(This,p)	\
    (This)->lpVtbl -> get_EventMask(This,p)

#define IMgaConstraint_put_EventMask(This,p)	\
    (This)->lpVtbl -> put_EventMask(This,p)

#define IMgaConstraint_get_Depth(This,p)	\
    (This)->lpVtbl -> get_Depth(This,p)

#define IMgaConstraint_put_Depth(This,p)	\
    (This)->lpVtbl -> put_Depth(This,p)

#define IMgaConstraint_get_Priority(This,p)	\
    (This)->lpVtbl -> get_Priority(This,p)

#define IMgaConstraint_put_Priority(This,p)	\
    (This)->lpVtbl -> put_Priority(This,p)

#define IMgaConstraint_get_Type(This,p)	\
    (This)->lpVtbl -> get_Type(This,p)

#define IMgaConstraint_put_Type(This,p)	\
    (This)->lpVtbl -> put_Type(This,p)

#define IMgaConstraint_Remove(This)	\
    (This)->lpVtbl -> Remove(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_Name_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaConstraint_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_Name_Proxy( 
    IMgaConstraint * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaConstraint_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_DisplayedName_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaConstraint_get_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_DisplayedName_Proxy( 
    IMgaConstraint * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaConstraint_put_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_Expression_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaConstraint_get_Expression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_Expression_Proxy( 
    IMgaConstraint * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaConstraint_put_Expression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_EventMask_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ unsigned long *p);


void __RPC_STUB IMgaConstraint_get_EventMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_EventMask_Proxy( 
    IMgaConstraint * This,
    /* [in] */ unsigned long p);


void __RPC_STUB IMgaConstraint_put_EventMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_Depth_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ constraint_depth_enum *p);


void __RPC_STUB IMgaConstraint_get_Depth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_Depth_Proxy( 
    IMgaConstraint * This,
    /* [in] */ constraint_depth_enum p);


void __RPC_STUB IMgaConstraint_put_Depth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_Priority_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaConstraint_get_Priority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_Priority_Proxy( 
    IMgaConstraint * This,
    /* [in] */ long p);


void __RPC_STUB IMgaConstraint_put_Priority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_get_Type_Proxy( 
    IMgaConstraint * This,
    /* [retval][out] */ constraint_type_enum *p);


void __RPC_STUB IMgaConstraint_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_put_Type_Proxy( 
    IMgaConstraint * This,
    /* [in] */ constraint_type_enum p);


void __RPC_STUB IMgaConstraint_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraint_Remove_Proxy( 
    IMgaConstraint * This);


void __RPC_STUB IMgaConstraint_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaConstraint_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaProject_INTERFACE_DEFINED__
#define __IMgaMetaProject_INTERFACE_DEFINED__

/* interface IMgaMetaProject */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaProject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3243-B758-11D3-ABAE-000000000000")
    IMgaMetaProject : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ BSTR connection) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ BSTR connection) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BeginTransaction( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CommitTransaction( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AbortTransaction( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ VARIANT *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_GUID( 
            /* [in] */ VARIANT p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayedName( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DisplayedName( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Version( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CreatedAt( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ModifiedAt( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RootFolder( 
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FindObject( 
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaBase **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaProjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaProject * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaProject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaProject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaProject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaProject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaProject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaProject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR connection);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaMetaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR connection);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BeginTransaction )( 
            IMgaMetaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CommitTransaction )( 
            IMgaMetaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AbortTransaction )( 
            IMgaMetaProject * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GUID )( 
            IMgaMetaProject * This,
            /* [retval][out] */ VARIANT *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_GUID )( 
            IMgaMetaProject * This,
            /* [in] */ VARIANT p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Version )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            IMgaMetaProject * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreatedAt )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModifiedAt )( 
            IMgaMetaProject * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFolder )( 
            IMgaMetaProject * This,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FindObject )( 
            IMgaMetaProject * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaBase **p);
        
        END_INTERFACE
    } IMgaMetaProjectVtbl;

    interface IMgaMetaProject
    {
        CONST_VTBL struct IMgaMetaProjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaProject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaProject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaProject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaProject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaProject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaProject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaProject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaProject_Open(This,connection)	\
    (This)->lpVtbl -> Open(This,connection)

#define IMgaMetaProject_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaMetaProject_Create(This,connection)	\
    (This)->lpVtbl -> Create(This,connection)

#define IMgaMetaProject_BeginTransaction(This)	\
    (This)->lpVtbl -> BeginTransaction(This)

#define IMgaMetaProject_CommitTransaction(This)	\
    (This)->lpVtbl -> CommitTransaction(This)

#define IMgaMetaProject_AbortTransaction(This)	\
    (This)->lpVtbl -> AbortTransaction(This)

#define IMgaMetaProject_get_GUID(This,p)	\
    (This)->lpVtbl -> get_GUID(This,p)

#define IMgaMetaProject_put_GUID(This,p)	\
    (This)->lpVtbl -> put_GUID(This,p)

#define IMgaMetaProject_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaProject_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaProject_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaProject_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaProject_get_Version(This,p)	\
    (This)->lpVtbl -> get_Version(This,p)

#define IMgaMetaProject_put_Version(This,p)	\
    (This)->lpVtbl -> put_Version(This,p)

#define IMgaMetaProject_get_Author(This,p)	\
    (This)->lpVtbl -> get_Author(This,p)

#define IMgaMetaProject_put_Author(This,p)	\
    (This)->lpVtbl -> put_Author(This,p)

#define IMgaMetaProject_get_Comment(This,p)	\
    (This)->lpVtbl -> get_Comment(This,p)

#define IMgaMetaProject_put_Comment(This,p)	\
    (This)->lpVtbl -> put_Comment(This,p)

#define IMgaMetaProject_get_CreatedAt(This,p)	\
    (This)->lpVtbl -> get_CreatedAt(This,p)

#define IMgaMetaProject_get_ModifiedAt(This,p)	\
    (This)->lpVtbl -> get_ModifiedAt(This,p)

#define IMgaMetaProject_get_RootFolder(This,p)	\
    (This)->lpVtbl -> get_RootFolder(This,p)

#define IMgaMetaProject_get_FindObject(This,mref,p)	\
    (This)->lpVtbl -> get_FindObject(This,mref,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_Open_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR connection);


void __RPC_STUB IMgaMetaProject_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_Close_Proxy( 
    IMgaMetaProject * This);


void __RPC_STUB IMgaMetaProject_Close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_Create_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR connection);


void __RPC_STUB IMgaMetaProject_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_BeginTransaction_Proxy( 
    IMgaMetaProject * This);


void __RPC_STUB IMgaMetaProject_BeginTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_CommitTransaction_Proxy( 
    IMgaMetaProject * This);


void __RPC_STUB IMgaMetaProject_CommitTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_AbortTransaction_Proxy( 
    IMgaMetaProject * This);


void __RPC_STUB IMgaMetaProject_AbortTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_GUID_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ VARIANT *p);


void __RPC_STUB IMgaMetaProject_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_GUID_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ VARIANT p);


void __RPC_STUB IMgaMetaProject_put_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_Name_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_Name_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaProject_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_DisplayedName_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_DisplayedName_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaProject_put_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_Version_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_Version_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaProject_put_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_Author_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_Author_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaProject_put_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_Comment_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_Comment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_put_Comment_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaProject_put_Comment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_CreatedAt_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_CreatedAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_ModifiedAt_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaProject_get_ModifiedAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_RootFolder_Proxy( 
    IMgaMetaProject * This,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaProject_get_RootFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaProject_get_FindObject_Proxy( 
    IMgaMetaProject * This,
    /* [in] */ metaref_type mref,
    /* [retval][out] */ IMgaMetaBase **p);


void __RPC_STUB IMgaMetaProject_get_FindObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaProject_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaBase_INTERFACE_DEFINED__
#define __IMgaMetaBase_INTERFACE_DEFINED__

/* interface IMgaMetaBase */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB1E0FB7-C9CB-11D3-9AD2-00AA00B6FE26")
    IMgaMetaBase : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaRef( 
            /* [retval][out] */ metaref_type *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_MetaRef( 
            /* [in] */ metaref_type p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaProject( 
            /* [retval][out] */ IMgaMetaProject **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayedName( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DisplayedName( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjType( 
            /* [retval][out] */ objtype_enum *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNodes( 
            /* [retval][out] */ IMgaMetaRegNodes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Constraints( 
            /* [retval][out] */ IMgaConstraints **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateConstraint( 
            /* [retval][out] */ IMgaConstraint **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaBase * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaBase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaBase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaBase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaBase * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaBase * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaBase * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaBase * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaBase * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaBase * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaBase * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaBase * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaBase * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaBase * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaBase * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaBase * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaBase * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaBase * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaBase * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaBase * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        END_INTERFACE
    } IMgaMetaBaseVtbl;

    interface IMgaMetaBase
    {
        CONST_VTBL struct IMgaMetaBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaBase_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaBase_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaBase_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaBase_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaBase_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaBase_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaBase_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaBase_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaBase_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaBase_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaBase_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaBase_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaBase_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaBase_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaBase_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaBase_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaBase_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaBase_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaBase_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_MetaRef_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ metaref_type *p);


void __RPC_STUB IMgaMetaBase_get_MetaRef_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_put_MetaRef_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ metaref_type p);


void __RPC_STUB IMgaMetaBase_put_MetaRef_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_MetaProject_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ IMgaMetaProject **p);


void __RPC_STUB IMgaMetaBase_get_MetaProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_Name_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaBase_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_put_Name_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaBase_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_DisplayedName_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaBase_get_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_put_DisplayedName_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaBase_put_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_ObjType_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ objtype_enum *p);


void __RPC_STUB IMgaMetaBase_get_ObjType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_Delete_Proxy( 
    IMgaMetaBase * This);


void __RPC_STUB IMgaMetaBase_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_RegistryNodes_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ IMgaMetaRegNodes **p);


void __RPC_STUB IMgaMetaBase_get_RegistryNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_RegistryNode_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaMetaRegNode **p);


void __RPC_STUB IMgaMetaBase_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_RegistryValue_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaBase_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_put_RegistryValue_Proxy( 
    IMgaMetaBase * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaBase_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_get_Constraints_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ IMgaConstraints **p);


void __RPC_STUB IMgaMetaBase_get_Constraints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaBase_CreateConstraint_Proxy( 
    IMgaMetaBase * This,
    /* [retval][out] */ IMgaConstraint **p);


void __RPC_STUB IMgaMetaBase_CreateConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaBase_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaFolder_INTERFACE_DEFINED__
#define __IMgaMetaFolder_INTERFACE_DEFINED__

/* interface IMgaMetaFolder */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3245-B758-11D3-ABAE-000000000000")
    IMgaMetaFolder : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedIn( 
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFolders( 
            /* [retval][out] */ IMgaMetaFolders **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFolderByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFCOs( 
            /* [retval][out] */ IMgaMetaFCOs **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFCOByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedAttributes( 
            /* [retval][out] */ IMgaMetaAttributes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedAttributeByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineFolder( 
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineModel( 
            /* [retval][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineAtom( 
            /* [retval][out] */ IMgaMetaAtom **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineReference( 
            /* [retval][out] */ IMgaMetaReference **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineSet( 
            /* [retval][out] */ IMgaMetaSet **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineConnection( 
            /* [retval][out] */ IMgaMetaConnection **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineAttribute( 
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LegalChildFolders( 
            /* [retval][out] */ IMgaMetaFolders **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LegalChildFolderByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LegalRootObjects( 
            /* [retval][out] */ IMgaMetaFCOs **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LegalRootObjectByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsedInFolders( 
            /* [retval][out] */ IMgaMetaFolders **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddLegalChildFolder( 
            /* [in] */ IMgaMetaFolder *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveLegalChildFolder( 
            /* [in] */ IMgaMetaFolder *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddLegalRootObject( 
            /* [in] */ IMgaMetaFCO *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveLegalRootObject( 
            /* [in] */ IMgaMetaFCO *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaFolder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaFolder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaFolder * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaFolder * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFolders )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFolderByName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFCOs )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFCOs **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFCOByName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineFolder )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineModel )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaModel **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAtom )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaAtom **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineReference )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaReference **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineSet )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaSet **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineConnection )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaConnection **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LegalChildFolders )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LegalChildFolderByName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LegalRootObjects )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFCOs **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LegalRootObjectByName )( 
            IMgaMetaFolder * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaFolder * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLegalChildFolder )( 
            IMgaMetaFolder * This,
            /* [in] */ IMgaMetaFolder *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveLegalChildFolder )( 
            IMgaMetaFolder * This,
            /* [in] */ IMgaMetaFolder *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddLegalRootObject )( 
            IMgaMetaFolder * This,
            /* [in] */ IMgaMetaFCO *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveLegalRootObject )( 
            IMgaMetaFolder * This,
            /* [in] */ IMgaMetaFCO *p);
        
        END_INTERFACE
    } IMgaMetaFolderVtbl;

    interface IMgaMetaFolder
    {
        CONST_VTBL struct IMgaMetaFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaFolder_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaFolder_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaFolder_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaFolder_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaFolder_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaFolder_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaFolder_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaFolder_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaFolder_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaFolder_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaFolder_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaFolder_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaFolder_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaFolder_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaFolder_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaFolder_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaFolder_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaFolder_get_DefinedFolders(This,p)	\
    (This)->lpVtbl -> get_DefinedFolders(This,p)

#define IMgaMetaFolder_get_DefinedFolderByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedFolderByName(This,name,inscope,p)

#define IMgaMetaFolder_get_DefinedFCOs(This,p)	\
    (This)->lpVtbl -> get_DefinedFCOs(This,p)

#define IMgaMetaFolder_get_DefinedFCOByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedFCOByName(This,name,inscope,p)

#define IMgaMetaFolder_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaFolder_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaFolder_DefineFolder(This,p)	\
    (This)->lpVtbl -> DefineFolder(This,p)

#define IMgaMetaFolder_DefineModel(This,p)	\
    (This)->lpVtbl -> DefineModel(This,p)

#define IMgaMetaFolder_DefineAtom(This,p)	\
    (This)->lpVtbl -> DefineAtom(This,p)

#define IMgaMetaFolder_DefineReference(This,p)	\
    (This)->lpVtbl -> DefineReference(This,p)

#define IMgaMetaFolder_DefineSet(This,p)	\
    (This)->lpVtbl -> DefineSet(This,p)

#define IMgaMetaFolder_DefineConnection(This,p)	\
    (This)->lpVtbl -> DefineConnection(This,p)

#define IMgaMetaFolder_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaFolder_get_LegalChildFolders(This,p)	\
    (This)->lpVtbl -> get_LegalChildFolders(This,p)

#define IMgaMetaFolder_get_LegalChildFolderByName(This,name,p)	\
    (This)->lpVtbl -> get_LegalChildFolderByName(This,name,p)

#define IMgaMetaFolder_get_LegalRootObjects(This,p)	\
    (This)->lpVtbl -> get_LegalRootObjects(This,p)

#define IMgaMetaFolder_get_LegalRootObjectByName(This,name,p)	\
    (This)->lpVtbl -> get_LegalRootObjectByName(This,name,p)

#define IMgaMetaFolder_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaFolder_AddLegalChildFolder(This,p)	\
    (This)->lpVtbl -> AddLegalChildFolder(This,p)

#define IMgaMetaFolder_RemoveLegalChildFolder(This,p)	\
    (This)->lpVtbl -> RemoveLegalChildFolder(This,p)

#define IMgaMetaFolder_AddLegalRootObject(This,p)	\
    (This)->lpVtbl -> AddLegalRootObject(This,p)

#define IMgaMetaFolder_RemoveLegalRootObject(This,p)	\
    (This)->lpVtbl -> RemoveLegalRootObject(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedIn_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedFolders_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFolders **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedFolders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedFolderByName_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL inscope,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedFolderByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedFCOs_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFCOs **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedFCOByName_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL inscope,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedFCOByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedAttributes_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaAttributes **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_DefinedAttributeByName_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL inscope,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFolder_get_DefinedAttributeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineFolder_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolder_DefineFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineModel_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaFolder_DefineModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineAtom_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaAtom **p);


void __RPC_STUB IMgaMetaFolder_DefineAtom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineReference_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaReference **p);


void __RPC_STUB IMgaMetaFolder_DefineReference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineSet_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaSet **p);


void __RPC_STUB IMgaMetaFolder_DefineSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineConnection_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaConnection **p);


void __RPC_STUB IMgaMetaFolder_DefineConnection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_DefineAttribute_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFolder_DefineAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_LegalChildFolders_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFolders **p);


void __RPC_STUB IMgaMetaFolder_get_LegalChildFolders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_LegalChildFolderByName_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolder_get_LegalChildFolderByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_LegalRootObjects_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFCOs **p);


void __RPC_STUB IMgaMetaFolder_get_LegalRootObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_LegalRootObjectByName_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaFolder_get_LegalRootObjectByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_get_UsedInFolders_Proxy( 
    IMgaMetaFolder * This,
    /* [retval][out] */ IMgaMetaFolders **p);


void __RPC_STUB IMgaMetaFolder_get_UsedInFolders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_AddLegalChildFolder_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ IMgaMetaFolder *p);


void __RPC_STUB IMgaMetaFolder_AddLegalChildFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_RemoveLegalChildFolder_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ IMgaMetaFolder *p);


void __RPC_STUB IMgaMetaFolder_RemoveLegalChildFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_AddLegalRootObject_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ IMgaMetaFCO *p);


void __RPC_STUB IMgaMetaFolder_AddLegalRootObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolder_RemoveLegalRootObject_Proxy( 
    IMgaMetaFolder * This,
    /* [in] */ IMgaMetaFCO *p);


void __RPC_STUB IMgaMetaFolder_RemoveLegalRootObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaFolder_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaFCO_INTERFACE_DEFINED__
#define __IMgaMetaFCO_INTERFACE_DEFINED__

/* interface IMgaMetaFCO */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaFCO;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3247-B758-11D3-ABAE-000000000000")
    IMgaMetaFCO : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedIn( 
            /* [retval][out] */ IMgaMetaBase **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedAttributes( 
            /* [retval][out] */ IMgaMetaAttributes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedAttributeByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineAttribute( 
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsedInRoles( 
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsedInFolders( 
            /* [retval][out] */ IMgaMetaFolders **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ IMgaMetaAttributes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AttributeByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AttributeByRef( 
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AliasingEnabled( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            /* [in] */ IMgaMetaAttribute *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAttribute( 
            /* [in] */ IMgaMetaAttribute *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_AliasingEnabled( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaFCOVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaFCO * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaFCO * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaFCO * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaFCO * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaFCO * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaFCO * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaFCO * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaFCO * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaFCO * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaFCO * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaFCO * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaFCO * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaFCO * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IMgaMetaFCOVtbl;

    interface IMgaMetaFCO
    {
        CONST_VTBL struct IMgaMetaFCOVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaFCO_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaFCO_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaFCO_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaFCO_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaFCO_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaFCO_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaFCO_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaFCO_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaFCO_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaFCO_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaFCO_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaFCO_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaFCO_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaFCO_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaFCO_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaFCO_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaFCO_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaFCO_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaFCO_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaFCO_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaFCO_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaFCO_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaFCO_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaFCO_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaFCO_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaFCO_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaFCO_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaFCO_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaFCO_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaFCO_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaFCO_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaFCO_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaFCO_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaFCO_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaFCO_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_DefinedIn_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaBase **p);


void __RPC_STUB IMgaMetaFCO_get_DefinedIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_DefinedAttributes_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaAttributes **p);


void __RPC_STUB IMgaMetaFCO_get_DefinedAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_DefinedAttributeByName_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL inscope,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFCO_get_DefinedAttributeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_DefineAttribute_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFCO_DefineAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_UsedInRoles_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaFCO_get_UsedInRoles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_UsedInFolders_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaFolders **p);


void __RPC_STUB IMgaMetaFCO_get_UsedInFolders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_Attributes_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ IMgaMetaAttributes **p);


void __RPC_STUB IMgaMetaFCO_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_AttributeByName_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFCO_get_AttributeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_AttributeByRef_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ metaref_type mref,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaFCO_get_AttributeByRef_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_get_AliasingEnabled_Proxy( 
    IMgaMetaFCO * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaMetaFCO_get_AliasingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_AddAttribute_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ IMgaMetaAttribute *p);


void __RPC_STUB IMgaMetaFCO_AddAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_RemoveAttribute_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ IMgaMetaAttribute *p);


void __RPC_STUB IMgaMetaFCO_RemoveAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCO_put_AliasingEnabled_Proxy( 
    IMgaMetaFCO * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMgaMetaFCO_put_AliasingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaFCO_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaModel_INTERFACE_DEFINED__
#define __IMgaMetaModel_INTERFACE_DEFINED__

/* interface IMgaMetaModel */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaModel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3249-B758-11D3-ABAE-000000000000")
    IMgaMetaModel : public IMgaMetaFCO
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFCOs( 
            /* [retval][out] */ IMgaMetaFCOs **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedFCOByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineModel( 
            /* [retval][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineAtom( 
            /* [retval][out] */ IMgaMetaAtom **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineReference( 
            /* [retval][out] */ IMgaMetaReference **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineSet( 
            /* [retval][out] */ IMgaMetaSet **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DefineConnection( 
            /* [retval][out] */ IMgaMetaConnection **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Roles( 
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoleByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Aspects( 
            /* [retval][out] */ IMgaMetaAspects **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AspectByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAspect **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateRole( 
            /* [in] */ IMgaMetaFCO *kind,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateAspect( 
            /* [retval][out] */ IMgaMetaAspect **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LegalConnectionRoles( 
            /* [in] */ BSTR paths,
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LegalReferenceRoles( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LegalSetRoles( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LegalRoles( 
            /* [in] */ IMgaMetaFCO *kind,
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaModelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaModel * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaModel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaModel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaModel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaModel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaModel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaModel * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaModel * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaModel * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaModel * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaModel * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaModel * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaModel * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaModel * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaModel * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaModel * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaModel * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaModel * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFCOs )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaFCOs **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedFCOByName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineModel )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaModel **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAtom )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAtom **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineReference )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaReference **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineSet )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaSet **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineConnection )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaConnection **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleByName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Aspects )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAspects **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectByName )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAspect **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            IMgaMetaModel * This,
            /* [in] */ IMgaMetaFCO *kind,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateAspect )( 
            IMgaMetaModel * This,
            /* [retval][out] */ IMgaMetaAspect **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LegalConnectionRoles )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR paths,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LegalReferenceRoles )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LegalSetRoles )( 
            IMgaMetaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LegalRoles )( 
            IMgaMetaModel * This,
            /* [in] */ IMgaMetaFCO *kind,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        END_INTERFACE
    } IMgaMetaModelVtbl;

    interface IMgaMetaModel
    {
        CONST_VTBL struct IMgaMetaModelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaModel_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaModel_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaModel_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaModel_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaModel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaModel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaModel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaModel_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaModel_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaModel_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaModel_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaModel_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaModel_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaModel_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaModel_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaModel_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaModel_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaModel_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaModel_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaModel_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaModel_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaModel_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaModel_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaModel_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaModel_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaModel_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaModel_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaModel_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaModel_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaModel_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaModel_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaModel_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaModel_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaModel_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaModel_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)


#define IMgaMetaModel_get_DefinedFCOs(This,p)	\
    (This)->lpVtbl -> get_DefinedFCOs(This,p)

#define IMgaMetaModel_get_DefinedFCOByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedFCOByName(This,name,inscope,p)

#define IMgaMetaModel_DefineModel(This,p)	\
    (This)->lpVtbl -> DefineModel(This,p)

#define IMgaMetaModel_DefineAtom(This,p)	\
    (This)->lpVtbl -> DefineAtom(This,p)

#define IMgaMetaModel_DefineReference(This,p)	\
    (This)->lpVtbl -> DefineReference(This,p)

#define IMgaMetaModel_DefineSet(This,p)	\
    (This)->lpVtbl -> DefineSet(This,p)

#define IMgaMetaModel_DefineConnection(This,p)	\
    (This)->lpVtbl -> DefineConnection(This,p)

#define IMgaMetaModel_get_Roles(This,p)	\
    (This)->lpVtbl -> get_Roles(This,p)

#define IMgaMetaModel_get_RoleByName(This,name,p)	\
    (This)->lpVtbl -> get_RoleByName(This,name,p)

#define IMgaMetaModel_get_Aspects(This,p)	\
    (This)->lpVtbl -> get_Aspects(This,p)

#define IMgaMetaModel_get_AspectByName(This,name,p)	\
    (This)->lpVtbl -> get_AspectByName(This,name,p)

#define IMgaMetaModel_CreateRole(This,kind,p)	\
    (This)->lpVtbl -> CreateRole(This,kind,p)

#define IMgaMetaModel_CreateAspect(This,p)	\
    (This)->lpVtbl -> CreateAspect(This,p)

#define IMgaMetaModel_LegalConnectionRoles(This,paths,p)	\
    (This)->lpVtbl -> LegalConnectionRoles(This,paths,p)

#define IMgaMetaModel_LegalReferenceRoles(This,path,p)	\
    (This)->lpVtbl -> LegalReferenceRoles(This,path,p)

#define IMgaMetaModel_LegalSetRoles(This,path,p)	\
    (This)->lpVtbl -> LegalSetRoles(This,path,p)

#define IMgaMetaModel_LegalRoles(This,kind,p)	\
    (This)->lpVtbl -> LegalRoles(This,kind,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_DefinedFCOs_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaFCOs **p);


void __RPC_STUB IMgaMetaModel_get_DefinedFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_DefinedFCOByName_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL inscope,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaModel_get_DefinedFCOByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_DefineModel_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaModel_DefineModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_DefineAtom_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaAtom **p);


void __RPC_STUB IMgaMetaModel_DefineAtom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_DefineReference_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaReference **p);


void __RPC_STUB IMgaMetaModel_DefineReference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_DefineSet_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaSet **p);


void __RPC_STUB IMgaMetaModel_DefineSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_DefineConnection_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaConnection **p);


void __RPC_STUB IMgaMetaModel_DefineConnection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_Roles_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaModel_get_Roles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_RoleByName_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaMetaModel_get_RoleByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_Aspects_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaAspects **p);


void __RPC_STUB IMgaMetaModel_get_Aspects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_get_AspectByName_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaAspect **p);


void __RPC_STUB IMgaMetaModel_get_AspectByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_CreateRole_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ IMgaMetaFCO *kind,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaMetaModel_CreateRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_CreateAspect_Proxy( 
    IMgaMetaModel * This,
    /* [retval][out] */ IMgaMetaAspect **p);


void __RPC_STUB IMgaMetaModel_CreateAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_LegalConnectionRoles_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR paths,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaModel_LegalConnectionRoles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_LegalReferenceRoles_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaModel_LegalReferenceRoles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_LegalSetRoles_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaModel_LegalSetRoles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModel_LegalRoles_Proxy( 
    IMgaMetaModel * This,
    /* [in] */ IMgaMetaFCO *kind,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaMetaModel_LegalRoles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaModel_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaAspect_INTERFACE_DEFINED__
#define __IMgaMetaAspect_INTERFACE_DEFINED__

/* interface IMgaMetaAspect */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaAspect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA324B-B758-11D3-ABAE-000000000000")
    IMgaMetaAspect : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentModel( 
            /* [retval][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ IMgaMetaParts **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ IMgaMetaAttributes **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePart( 
            /* [in] */ IMgaMetaRole *role,
            /* [retval][out] */ IMgaMetaPart **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddAttribute( 
            /* [in] */ IMgaMetaAttribute *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAttribute( 
            /* [in] */ IMgaMetaAttribute *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaAspectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaAspect * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaAspect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaAspect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaAspect * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaAspect * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaAspect * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaAspect * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaAspect * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaAspect * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaAspect * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaAspect * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaAspect * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaAspect * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaAspect * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaMetaModel **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaMetaParts **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaAspect * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePart )( 
            IMgaMetaAspect * This,
            /* [in] */ IMgaMetaRole *role,
            /* [retval][out] */ IMgaMetaPart **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaAspect * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaAspect * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        END_INTERFACE
    } IMgaMetaAspectVtbl;

    interface IMgaMetaAspect
    {
        CONST_VTBL struct IMgaMetaAspectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaAspect_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaAspect_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaAspect_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaAspect_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaAspect_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaAspect_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaAspect_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaAspect_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaAspect_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaAspect_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaAspect_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaAspect_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaAspect_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaAspect_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaAspect_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaAspect_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaAspect_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaAspect_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaAspect_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaAspect_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaAspect_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaAspect_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaAspect_get_ParentModel(This,p)	\
    (This)->lpVtbl -> get_ParentModel(This,p)

#define IMgaMetaAspect_get_Parts(This,p)	\
    (This)->lpVtbl -> get_Parts(This,p)

#define IMgaMetaAspect_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaAspect_CreatePart(This,role,p)	\
    (This)->lpVtbl -> CreatePart(This,role,p)

#define IMgaMetaAspect_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaAspect_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_get_ParentModel_Proxy( 
    IMgaMetaAspect * This,
    /* [retval][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaAspect_get_ParentModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_get_Parts_Proxy( 
    IMgaMetaAspect * This,
    /* [retval][out] */ IMgaMetaParts **p);


void __RPC_STUB IMgaMetaAspect_get_Parts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_get_Attributes_Proxy( 
    IMgaMetaAspect * This,
    /* [retval][out] */ IMgaMetaAttributes **p);


void __RPC_STUB IMgaMetaAspect_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_CreatePart_Proxy( 
    IMgaMetaAspect * This,
    /* [in] */ IMgaMetaRole *role,
    /* [retval][out] */ IMgaMetaPart **p);


void __RPC_STUB IMgaMetaAspect_CreatePart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_AddAttribute_Proxy( 
    IMgaMetaAspect * This,
    /* [in] */ IMgaMetaAttribute *p);


void __RPC_STUB IMgaMetaAspect_AddAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspect_RemoveAttribute_Proxy( 
    IMgaMetaAspect * This,
    /* [in] */ IMgaMetaAttribute *p);


void __RPC_STUB IMgaMetaAspect_RemoveAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaAspect_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaRole_INTERFACE_DEFINED__
#define __IMgaMetaRole_INTERFACE_DEFINED__

/* interface IMgaMetaRole */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaRole;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA324D-B758-11D3-ABAE-000000000000")
    IMgaMetaRole : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentModel( 
            /* [retval][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ IMgaMetaParts **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaRoleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaRole * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaRole * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaRole * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaRole * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaRole * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaRole * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaRole * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaRole * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaRole * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaRole * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaRole * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaRole * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaRole * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaRole * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaRole * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaRole * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaRole * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaRole * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaMetaModel **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaMetaParts **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            IMgaMetaRole * This,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        END_INTERFACE
    } IMgaMetaRoleVtbl;

    interface IMgaMetaRole
    {
        CONST_VTBL struct IMgaMetaRoleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaRole_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaRole_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaRole_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaRole_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaRole_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaRole_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaRole_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaRole_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaRole_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaRole_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaRole_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaRole_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaRole_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaRole_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaRole_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaRole_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaRole_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaRole_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaRole_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaRole_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaRole_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaRole_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaRole_get_ParentModel(This,p)	\
    (This)->lpVtbl -> get_ParentModel(This,p)

#define IMgaMetaRole_get_Parts(This,p)	\
    (This)->lpVtbl -> get_Parts(This,p)

#define IMgaMetaRole_get_Kind(This,p)	\
    (This)->lpVtbl -> get_Kind(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRole_get_ParentModel_Proxy( 
    IMgaMetaRole * This,
    /* [retval][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaRole_get_ParentModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRole_get_Parts_Proxy( 
    IMgaMetaRole * This,
    /* [retval][out] */ IMgaMetaParts **p);


void __RPC_STUB IMgaMetaRole_get_Parts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRole_get_Kind_Proxy( 
    IMgaMetaRole * This,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaRole_get_Kind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaRole_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaPart_INTERFACE_DEFINED__
#define __IMgaMetaPart_INTERFACE_DEFINED__

/* interface IMgaMetaPart */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaPart;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A70CAB45-DD94-11D3-9308-444553540000")
    IMgaMetaPart : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Role( 
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentAspect( 
            /* [retval][out] */ IMgaMetaAspect **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsPrimary( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IsPrimary( 
            /* [in] */ VARIANT_BOOL p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsLinked( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IsLinked( 
            /* [in] */ VARIANT_BOOL p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_KindAspect( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_KindAspect( 
            /* [in] */ BSTR p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPartVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaPart * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaPart * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaPart * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaPart * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaPart * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaPart * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaPart * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaPart * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaPart * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaPart * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaPart * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaPart * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaPart * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Role )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentAspect )( 
            IMgaMetaPart * This,
            /* [retval][out] */ IMgaMetaAspect **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimary )( 
            IMgaMetaPart * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsPrimary )( 
            IMgaMetaPart * This,
            /* [in] */ VARIANT_BOOL p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLinked )( 
            IMgaMetaPart * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsLinked )( 
            IMgaMetaPart * This,
            /* [in] */ VARIANT_BOOL p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_KindAspect )( 
            IMgaMetaPart * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_KindAspect )( 
            IMgaMetaPart * This,
            /* [in] */ BSTR p);
        
        END_INTERFACE
    } IMgaMetaPartVtbl;

    interface IMgaMetaPart
    {
        CONST_VTBL struct IMgaMetaPartVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaPart_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaPart_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaPart_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaPart_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaPart_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaPart_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaPart_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaPart_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaPart_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaPart_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaPart_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaPart_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaPart_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaPart_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaPart_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaPart_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaPart_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaPart_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaPart_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaPart_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaPart_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaPart_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaPart_get_Role(This,p)	\
    (This)->lpVtbl -> get_Role(This,p)

#define IMgaMetaPart_get_ParentAspect(This,p)	\
    (This)->lpVtbl -> get_ParentAspect(This,p)

#define IMgaMetaPart_get_IsPrimary(This,p)	\
    (This)->lpVtbl -> get_IsPrimary(This,p)

#define IMgaMetaPart_put_IsPrimary(This,p)	\
    (This)->lpVtbl -> put_IsPrimary(This,p)

#define IMgaMetaPart_get_IsLinked(This,p)	\
    (This)->lpVtbl -> get_IsLinked(This,p)

#define IMgaMetaPart_put_IsLinked(This,p)	\
    (This)->lpVtbl -> put_IsLinked(This,p)

#define IMgaMetaPart_get_KindAspect(This,p)	\
    (This)->lpVtbl -> get_KindAspect(This,p)

#define IMgaMetaPart_put_KindAspect(This,p)	\
    (This)->lpVtbl -> put_KindAspect(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_get_Role_Proxy( 
    IMgaMetaPart * This,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaMetaPart_get_Role_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_get_ParentAspect_Proxy( 
    IMgaMetaPart * This,
    /* [retval][out] */ IMgaMetaAspect **p);


void __RPC_STUB IMgaMetaPart_get_ParentAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_get_IsPrimary_Proxy( 
    IMgaMetaPart * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaPart_get_IsPrimary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_put_IsPrimary_Proxy( 
    IMgaMetaPart * This,
    /* [in] */ VARIANT_BOOL p);


void __RPC_STUB IMgaMetaPart_put_IsPrimary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_get_IsLinked_Proxy( 
    IMgaMetaPart * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaPart_get_IsLinked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_put_IsLinked_Proxy( 
    IMgaMetaPart * This,
    /* [in] */ VARIANT_BOOL p);


void __RPC_STUB IMgaMetaPart_put_IsLinked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_get_KindAspect_Proxy( 
    IMgaMetaPart * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaPart_get_KindAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaPart_put_KindAspect_Proxy( 
    IMgaMetaPart * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaPart_put_KindAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaPart_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaAtom_INTERFACE_DEFINED__
#define __IMgaMetaAtom_INTERFACE_DEFINED__

/* interface IMgaMetaAtom */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaAtom;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA324F-B758-11D3-ABAE-000000000000")
    IMgaMetaAtom : public IMgaMetaFCO
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaAtomVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaAtom * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaAtom * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaAtom * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaAtom * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaAtom * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaAtom * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaAtom * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaAtom * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaAtom * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaAtom * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaAtom * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaAtom * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaAtom * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IMgaMetaAtomVtbl;

    interface IMgaMetaAtom
    {
        CONST_VTBL struct IMgaMetaAtomVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaAtom_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaAtom_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaAtom_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaAtom_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaAtom_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaAtom_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaAtom_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaAtom_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaAtom_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaAtom_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaAtom_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaAtom_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaAtom_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaAtom_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaAtom_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaAtom_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaAtom_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaAtom_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaAtom_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaAtom_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaAtom_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaAtom_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaAtom_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaAtom_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaAtom_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaAtom_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaAtom_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaAtom_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaAtom_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaAtom_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaAtom_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaAtom_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaAtom_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaAtom_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaAtom_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMgaMetaAtom_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaAttribute_INTERFACE_DEFINED__
#define __IMgaMetaAttribute_INTERFACE_DEFINED__

/* interface IMgaMetaAttribute */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3259-B758-11D3-ABAE-000000000000")
    IMgaMetaAttribute : public IMgaMetaBase
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefinedIn( 
            /* [retval][out] */ IMgaMetaBase **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsedIn( 
            /* [retval][out] */ IMgaMetaFCOs **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultValue( 
            /* [retval][out] */ VARIANT *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ValueType( 
            /* [retval][out] */ attval_enum *attval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EnumItems( 
            /* [retval][out] */ IMgaMetaEnumItems **p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DefaultValue( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ValueType( 
            /* [in] */ attval_enum attval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateEnumItem( 
            /* [retval][out] */ IMgaMetaEnumItem **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaAttribute * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaAttribute * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaAttribute * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedIn )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaFCOs **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultValue )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ VARIANT *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueType )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ attval_enum *attval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnumItems )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaEnumItems **p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultValue )( 
            IMgaMetaAttribute * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ValueType )( 
            IMgaMetaAttribute * This,
            /* [in] */ attval_enum attval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateEnumItem )( 
            IMgaMetaAttribute * This,
            /* [retval][out] */ IMgaMetaEnumItem **p);
        
        END_INTERFACE
    } IMgaMetaAttributeVtbl;

    interface IMgaMetaAttribute
    {
        CONST_VTBL struct IMgaMetaAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaAttribute_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaAttribute_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaAttribute_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaAttribute_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaAttribute_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaAttribute_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaAttribute_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaAttribute_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaAttribute_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaAttribute_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaAttribute_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaAttribute_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaAttribute_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaAttribute_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaAttribute_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaAttribute_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaAttribute_get_UsedIn(This,p)	\
    (This)->lpVtbl -> get_UsedIn(This,p)

#define IMgaMetaAttribute_get_DefaultValue(This,p)	\
    (This)->lpVtbl -> get_DefaultValue(This,p)

#define IMgaMetaAttribute_get_ValueType(This,attval)	\
    (This)->lpVtbl -> get_ValueType(This,attval)

#define IMgaMetaAttribute_get_EnumItems(This,p)	\
    (This)->lpVtbl -> get_EnumItems(This,p)

#define IMgaMetaAttribute_put_DefaultValue(This,p)	\
    (This)->lpVtbl -> put_DefaultValue(This,p)

#define IMgaMetaAttribute_put_ValueType(This,attval)	\
    (This)->lpVtbl -> put_ValueType(This,attval)

#define IMgaMetaAttribute_CreateEnumItem(This,p)	\
    (This)->lpVtbl -> CreateEnumItem(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_get_DefinedIn_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ IMgaMetaBase **p);


void __RPC_STUB IMgaMetaAttribute_get_DefinedIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_get_UsedIn_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ IMgaMetaFCOs **p);


void __RPC_STUB IMgaMetaAttribute_get_UsedIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_get_DefaultValue_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ VARIANT *p);


void __RPC_STUB IMgaMetaAttribute_get_DefaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_get_ValueType_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ attval_enum *attval);


void __RPC_STUB IMgaMetaAttribute_get_ValueType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_get_EnumItems_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ IMgaMetaEnumItems **p);


void __RPC_STUB IMgaMetaAttribute_get_EnumItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_put_DefaultValue_Proxy( 
    IMgaMetaAttribute * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaAttribute_put_DefaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_put_ValueType_Proxy( 
    IMgaMetaAttribute * This,
    /* [in] */ attval_enum attval);


void __RPC_STUB IMgaMetaAttribute_put_ValueType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttribute_CreateEnumItem_Proxy( 
    IMgaMetaAttribute * This,
    /* [retval][out] */ IMgaMetaEnumItem **p);


void __RPC_STUB IMgaMetaAttribute_CreateEnumItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaAttribute_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaEnumItem_INTERFACE_DEFINED__
#define __IMgaMetaEnumItem_INTERFACE_DEFINED__

/* interface IMgaMetaEnumItem */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaEnumItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83254259-B758-21D3-7BAE-000000000000")
    IMgaMetaEnumItem : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayedName( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DisplayedName( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ BSTR p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaEnumItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaEnumItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaEnumItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaEnumItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaEnumItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaEnumItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaEnumItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaEnumItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMgaMetaEnumItem * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaEnumItem * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IMgaMetaEnumItem * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaEnumItem * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IMgaMetaEnumItem * This,
            /* [in] */ BSTR p);
        
        END_INTERFACE
    } IMgaMetaEnumItemVtbl;

    interface IMgaMetaEnumItem
    {
        CONST_VTBL struct IMgaMetaEnumItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaEnumItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaEnumItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaEnumItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaEnumItem_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaEnumItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaEnumItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaEnumItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaEnumItem_get_Parent(This,p)	\
    (This)->lpVtbl -> get_Parent(This,p)

#define IMgaMetaEnumItem_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaEnumItem_get_Value(This,p)	\
    (This)->lpVtbl -> get_Value(This,p)

#define IMgaMetaEnumItem_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaEnumItem_put_Value(This,p)	\
    (This)->lpVtbl -> put_Value(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItem_get_Parent_Proxy( 
    IMgaMetaEnumItem * This,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaEnumItem_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItem_get_DisplayedName_Proxy( 
    IMgaMetaEnumItem * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaEnumItem_get_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItem_get_Value_Proxy( 
    IMgaMetaEnumItem * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaEnumItem_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItem_put_DisplayedName_Proxy( 
    IMgaMetaEnumItem * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaEnumItem_put_DisplayedName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItem_put_Value_Proxy( 
    IMgaMetaEnumItem * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaEnumItem_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaEnumItem_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaReference_INTERFACE_DEFINED__
#define __IMgaMetaReference_INTERFACE_DEFINED__

/* interface IMgaMetaReference */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3251-B758-11D3-ABAE-000000000000")
    IMgaMetaReference : public IMgaMetaFCO
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RefSpec( 
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckPath( 
            /* [in] */ BSTR path,
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaReference * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaReference * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaReference * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaReference * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaReference * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaReference * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaReference * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaReference * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaReference * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaReference * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefSpec )( 
            IMgaMetaReference * This,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckPath )( 
            IMgaMetaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        END_INTERFACE
    } IMgaMetaReferenceVtbl;

    interface IMgaMetaReference
    {
        CONST_VTBL struct IMgaMetaReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaReference_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaReference_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaReference_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaReference_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaReference_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaReference_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaReference_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaReference_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaReference_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaReference_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaReference_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaReference_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaReference_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaReference_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaReference_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaReference_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaReference_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaReference_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaReference_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaReference_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaReference_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaReference_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaReference_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaReference_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaReference_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaReference_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaReference_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaReference_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaReference_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaReference_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaReference_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaReference_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)


#define IMgaMetaReference_get_RefSpec(This,p)	\
    (This)->lpVtbl -> get_RefSpec(This,p)

#define IMgaMetaReference_CheckPath(This,path,p)	\
    (This)->lpVtbl -> CheckPath(This,path,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaReference_get_RefSpec_Proxy( 
    IMgaMetaReference * This,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaReference_get_RefSpec_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaReference_CheckPath_Proxy( 
    IMgaMetaReference * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaReference_CheckPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaReference_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaSet_INTERFACE_DEFINED__
#define __IMgaMetaSet_INTERFACE_DEFINED__

/* interface IMgaMetaSet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3253-B758-11D3-ABAE-000000000000")
    IMgaMetaSet : public IMgaMetaFCO
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MemberSpec( 
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckPath( 
            /* [in] */ BSTR path,
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaSet * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaSet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaSet * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaSet * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaSet * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaSet * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaSet * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaSet * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaSet * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaSet * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaSet * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaSet * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberSpec )( 
            IMgaMetaSet * This,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckPath )( 
            IMgaMetaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        END_INTERFACE
    } IMgaMetaSetVtbl;

    interface IMgaMetaSet
    {
        CONST_VTBL struct IMgaMetaSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaSet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaSet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaSet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaSet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaSet_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaSet_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaSet_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaSet_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaSet_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaSet_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaSet_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaSet_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaSet_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaSet_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaSet_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaSet_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaSet_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaSet_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaSet_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaSet_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaSet_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaSet_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaSet_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaSet_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaSet_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaSet_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaSet_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaSet_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaSet_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaSet_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaSet_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaSet_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)


#define IMgaMetaSet_get_MemberSpec(This,p)	\
    (This)->lpVtbl -> get_MemberSpec(This,p)

#define IMgaMetaSet_CheckPath(This,path,p)	\
    (This)->lpVtbl -> CheckPath(This,path,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaSet_get_MemberSpec_Proxy( 
    IMgaMetaSet * This,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaSet_get_MemberSpec_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaSet_CheckPath_Proxy( 
    IMgaMetaSet * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaSet_CheckPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaSet_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaConnection_INTERFACE_DEFINED__
#define __IMgaMetaConnection_INTERFACE_DEFINED__

/* interface IMgaMetaConnection */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaConnection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3255-B758-11D3-ABAE-000000000000")
    IMgaMetaConnection : public IMgaMetaFCO
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Joints( 
            /* [retval][out] */ IMgaMetaConnJoints **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckPaths( 
            /* [in] */ BSTR paths,
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsSimple( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateJoint( 
            /* [retval][out] */ IMgaMetaConnJoint **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaConnectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaConnection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaConnection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaConnection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaConnection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaConnection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaConnection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaConnection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRef )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ metaref_type *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MetaRef )( 
            IMgaMetaConnection * This,
            /* [in] */ metaref_type p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaProject )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayedName )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayedName )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ objtype_enum *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMgaMetaConnection * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNodes )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaConstraints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateConstraint )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedIn )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaBase **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributes )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefinedAttributeByName )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL inscope,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DefineAttribute )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInRoles )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedInFolders )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaFolders **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaAttributes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByRef )( 
            IMgaMetaConnection * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AliasingEnabled )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddAttribute )( 
            IMgaMetaConnection * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAttribute )( 
            IMgaMetaConnection * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AliasingEnabled )( 
            IMgaMetaConnection * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Joints )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaConnJoints **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckPaths )( 
            IMgaMetaConnection * This,
            /* [in] */ BSTR paths,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSimple )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateJoint )( 
            IMgaMetaConnection * This,
            /* [retval][out] */ IMgaMetaConnJoint **p);
        
        END_INTERFACE
    } IMgaMetaConnectionVtbl;

    interface IMgaMetaConnection
    {
        CONST_VTBL struct IMgaMetaConnectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaConnection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaConnection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaConnection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaConnection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaConnection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaConnection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaConnection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaConnection_get_MetaRef(This,p)	\
    (This)->lpVtbl -> get_MetaRef(This,p)

#define IMgaMetaConnection_put_MetaRef(This,p)	\
    (This)->lpVtbl -> put_MetaRef(This,p)

#define IMgaMetaConnection_get_MetaProject(This,p)	\
    (This)->lpVtbl -> get_MetaProject(This,p)

#define IMgaMetaConnection_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaConnection_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaConnection_get_DisplayedName(This,p)	\
    (This)->lpVtbl -> get_DisplayedName(This,p)

#define IMgaMetaConnection_put_DisplayedName(This,p)	\
    (This)->lpVtbl -> put_DisplayedName(This,p)

#define IMgaMetaConnection_get_ObjType(This,p)	\
    (This)->lpVtbl -> get_ObjType(This,p)

#define IMgaMetaConnection_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define IMgaMetaConnection_get_RegistryNodes(This,p)	\
    (This)->lpVtbl -> get_RegistryNodes(This,p)

#define IMgaMetaConnection_get_RegistryNode(This,path,p)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,p)

#define IMgaMetaConnection_get_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,p)

#define IMgaMetaConnection_put_RegistryValue(This,path,p)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,p)

#define IMgaMetaConnection_get_Constraints(This,p)	\
    (This)->lpVtbl -> get_Constraints(This,p)

#define IMgaMetaConnection_CreateConstraint(This,p)	\
    (This)->lpVtbl -> CreateConstraint(This,p)


#define IMgaMetaConnection_get_DefinedIn(This,p)	\
    (This)->lpVtbl -> get_DefinedIn(This,p)

#define IMgaMetaConnection_get_DefinedAttributes(This,p)	\
    (This)->lpVtbl -> get_DefinedAttributes(This,p)

#define IMgaMetaConnection_get_DefinedAttributeByName(This,name,inscope,p)	\
    (This)->lpVtbl -> get_DefinedAttributeByName(This,name,inscope,p)

#define IMgaMetaConnection_DefineAttribute(This,p)	\
    (This)->lpVtbl -> DefineAttribute(This,p)

#define IMgaMetaConnection_get_UsedInRoles(This,p)	\
    (This)->lpVtbl -> get_UsedInRoles(This,p)

#define IMgaMetaConnection_get_UsedInFolders(This,p)	\
    (This)->lpVtbl -> get_UsedInFolders(This,p)

#define IMgaMetaConnection_get_Attributes(This,p)	\
    (This)->lpVtbl -> get_Attributes(This,p)

#define IMgaMetaConnection_get_AttributeByName(This,name,p)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,p)

#define IMgaMetaConnection_get_AttributeByRef(This,mref,p)	\
    (This)->lpVtbl -> get_AttributeByRef(This,mref,p)

#define IMgaMetaConnection_get_AliasingEnabled(This,pVal)	\
    (This)->lpVtbl -> get_AliasingEnabled(This,pVal)

#define IMgaMetaConnection_AddAttribute(This,p)	\
    (This)->lpVtbl -> AddAttribute(This,p)

#define IMgaMetaConnection_RemoveAttribute(This,p)	\
    (This)->lpVtbl -> RemoveAttribute(This,p)

#define IMgaMetaConnection_put_AliasingEnabled(This,newVal)	\
    (This)->lpVtbl -> put_AliasingEnabled(This,newVal)


#define IMgaMetaConnection_get_Joints(This,p)	\
    (This)->lpVtbl -> get_Joints(This,p)

#define IMgaMetaConnection_CheckPaths(This,paths,p)	\
    (This)->lpVtbl -> CheckPaths(This,paths,p)

#define IMgaMetaConnection_get_IsSimple(This,p)	\
    (This)->lpVtbl -> get_IsSimple(This,p)

#define IMgaMetaConnection_CreateJoint(This,p)	\
    (This)->lpVtbl -> CreateJoint(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnection_get_Joints_Proxy( 
    IMgaMetaConnection * This,
    /* [retval][out] */ IMgaMetaConnJoints **p);


void __RPC_STUB IMgaMetaConnection_get_Joints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnection_CheckPaths_Proxy( 
    IMgaMetaConnection * This,
    /* [in] */ BSTR paths,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaConnection_CheckPaths_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnection_get_IsSimple_Proxy( 
    IMgaMetaConnection * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaMetaConnection_get_IsSimple_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnection_CreateJoint_Proxy( 
    IMgaMetaConnection * This,
    /* [retval][out] */ IMgaMetaConnJoint **p);


void __RPC_STUB IMgaMetaConnection_CreateJoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaConnection_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaConnJoint_INTERFACE_DEFINED__
#define __IMgaMetaConnJoint_INTERFACE_DEFINED__

/* interface IMgaMetaConnJoint */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaConnJoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3257-B758-11D3-ABAE-000000000000")
    IMgaMetaConnJoint : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IMgaMetaConnection **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PointerSpecs( 
            /* [retval][out] */ IMgaMetaPointerSpecs **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PointerSpecByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePointerSpec( 
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaConnJointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaConnJoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaConnJoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaConnJoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaConnJoint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaConnJoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaConnJoint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaConnJoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMgaMetaConnJoint * This,
            /* [retval][out] */ IMgaMetaConnection **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerSpecs )( 
            IMgaMetaConnJoint * This,
            /* [retval][out] */ IMgaMetaPointerSpecs **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerSpecByName )( 
            IMgaMetaConnJoint * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePointerSpec )( 
            IMgaMetaConnJoint * This,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        END_INTERFACE
    } IMgaMetaConnJointVtbl;

    interface IMgaMetaConnJoint
    {
        CONST_VTBL struct IMgaMetaConnJointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaConnJoint_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaConnJoint_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaConnJoint_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaConnJoint_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaConnJoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaConnJoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaConnJoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaConnJoint_get_Parent(This,p)	\
    (This)->lpVtbl -> get_Parent(This,p)

#define IMgaMetaConnJoint_get_PointerSpecs(This,p)	\
    (This)->lpVtbl -> get_PointerSpecs(This,p)

#define IMgaMetaConnJoint_get_PointerSpecByName(This,name,p)	\
    (This)->lpVtbl -> get_PointerSpecByName(This,name,p)

#define IMgaMetaConnJoint_CreatePointerSpec(This,p)	\
    (This)->lpVtbl -> CreatePointerSpec(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoint_get_Parent_Proxy( 
    IMgaMetaConnJoint * This,
    /* [retval][out] */ IMgaMetaConnection **p);


void __RPC_STUB IMgaMetaConnJoint_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoint_get_PointerSpecs_Proxy( 
    IMgaMetaConnJoint * This,
    /* [retval][out] */ IMgaMetaPointerSpecs **p);


void __RPC_STUB IMgaMetaConnJoint_get_PointerSpecs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoint_get_PointerSpecByName_Proxy( 
    IMgaMetaConnJoint * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaConnJoint_get_PointerSpecByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoint_CreatePointerSpec_Proxy( 
    IMgaMetaConnJoint * This,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaConnJoint_CreatePointerSpec_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaConnJoint_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaPointerSpec_INTERFACE_DEFINED__
#define __IMgaMetaPointerSpec_INTERFACE_DEFINED__

/* interface IMgaMetaPointerSpec */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaPointerSpec;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA325B-B758-11D3-ABAE-000000000000")
    IMgaMetaPointerSpec : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Items( 
            /* [retval][out] */ IMgaMetaPointerItems **p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateItem( 
            /* [retval][out] */ IMgaMetaPointerItem **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPointerSpecVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaPointerSpec * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaPointerSpec * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaPointerSpec * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaPointerSpec * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaPointerSpec * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaPointerSpec * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaPointerSpec * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMgaMetaPointerSpec * This,
            /* [retval][out] */ IDispatch **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaMetaPointerSpec * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            IMgaMetaPointerSpec * This,
            /* [retval][out] */ IMgaMetaPointerItems **p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaMetaPointerSpec * This,
            /* [in] */ BSTR p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateItem )( 
            IMgaMetaPointerSpec * This,
            /* [retval][out] */ IMgaMetaPointerItem **p);
        
        END_INTERFACE
    } IMgaMetaPointerSpecVtbl;

    interface IMgaMetaPointerSpec
    {
        CONST_VTBL struct IMgaMetaPointerSpecVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaPointerSpec_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaPointerSpec_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaPointerSpec_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaPointerSpec_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaPointerSpec_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaPointerSpec_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaPointerSpec_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaPointerSpec_get_Parent(This,p)	\
    (This)->lpVtbl -> get_Parent(This,p)

#define IMgaMetaPointerSpec_get_Name(This,p)	\
    (This)->lpVtbl -> get_Name(This,p)

#define IMgaMetaPointerSpec_get_Items(This,p)	\
    (This)->lpVtbl -> get_Items(This,p)

#define IMgaMetaPointerSpec_put_Name(This,p)	\
    (This)->lpVtbl -> put_Name(This,p)

#define IMgaMetaPointerSpec_CreateItem(This,p)	\
    (This)->lpVtbl -> CreateItem(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpec_get_Parent_Proxy( 
    IMgaMetaPointerSpec * This,
    /* [retval][out] */ IDispatch **p);


void __RPC_STUB IMgaMetaPointerSpec_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpec_get_Name_Proxy( 
    IMgaMetaPointerSpec * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaPointerSpec_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpec_get_Items_Proxy( 
    IMgaMetaPointerSpec * This,
    /* [retval][out] */ IMgaMetaPointerItems **p);


void __RPC_STUB IMgaMetaPointerSpec_get_Items_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpec_put_Name_Proxy( 
    IMgaMetaPointerSpec * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaPointerSpec_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpec_CreateItem_Proxy( 
    IMgaMetaPointerSpec * This,
    /* [retval][out] */ IMgaMetaPointerItem **p);


void __RPC_STUB IMgaMetaPointerSpec_CreateItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaPointerSpec_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaPointerItem_INTERFACE_DEFINED__
#define __IMgaMetaPointerItem_INTERFACE_DEFINED__

/* interface IMgaMetaPointerItem */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaPointerItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83518A5B-B758-11D3-ABAE-006928360000")
    IMgaMetaPointerItem : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Desc( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Desc( 
            /* [in] */ BSTR p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPointerItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaPointerItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaPointerItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaPointerItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaPointerItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaPointerItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaPointerItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaPointerItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IMgaMetaPointerItem * This,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Desc )( 
            IMgaMetaPointerItem * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Desc )( 
            IMgaMetaPointerItem * This,
            /* [in] */ BSTR p);
        
        END_INTERFACE
    } IMgaMetaPointerItemVtbl;

    interface IMgaMetaPointerItem
    {
        CONST_VTBL struct IMgaMetaPointerItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaPointerItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaPointerItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaPointerItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaPointerItem_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaPointerItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaPointerItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaPointerItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaPointerItem_get_Parent(This,p)	\
    (This)->lpVtbl -> get_Parent(This,p)

#define IMgaMetaPointerItem_get_Desc(This,p)	\
    (This)->lpVtbl -> get_Desc(This,p)

#define IMgaMetaPointerItem_put_Desc(This,p)	\
    (This)->lpVtbl -> put_Desc(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItem_get_Parent_Proxy( 
    IMgaMetaPointerItem * This,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaPointerItem_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItem_get_Desc_Proxy( 
    IMgaMetaPointerItem * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaMetaPointerItem_get_Desc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItem_put_Desc_Proxy( 
    IMgaMetaPointerItem * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaMetaPointerItem_put_Desc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaPointerItem_INTERFACE_DEFINED__ */


#ifndef __IMgaMetaAspects_INTERFACE_DEFINED__
#define __IMgaMetaAspects_INTERFACE_DEFINED__

/* interface IMgaMetaAspects */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaAspects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c61352b0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaAspects : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaAspect **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaAspect **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaAspect *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaAspect *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaAspect *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaAspectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaAspects * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaAspects * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaAspects * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaAspects * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaAspects * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaAspects * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaAspects * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaAspects * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaAspects * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaAspect **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaAspects * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaAspects * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaAspect **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaAspects * This,
            /* [in] */ IMgaMetaAspect *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaAspects * This,
            /* [in] */ IMgaMetaAspect *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaAspects * This,
            /* [in] */ IMgaMetaAspect *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaAspects * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaAspectsVtbl;

    interface IMgaMetaAspects
    {
        CONST_VTBL struct IMgaMetaAspectsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaAspects_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaAspects_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaAspects_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaAspects_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaAspects_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaAspects_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaAspects_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaAspects_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaAspects_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaAspects_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaAspects_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaAspects_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaAspects_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaAspects_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaAspects_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_get_Count_Proxy( 
    IMgaMetaAspects * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaAspects_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_get_Item_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaAspect **p);


void __RPC_STUB IMgaMetaAspects_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_get__NewEnum_Proxy( 
    IMgaMetaAspects * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaAspects_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_GetAll_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaAspect **p);


void __RPC_STUB IMgaMetaAspects_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_Insert_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ IMgaMetaAspect *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaAspects_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_Append_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ IMgaMetaAspect *p);


void __RPC_STUB IMgaMetaAspects_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_Find_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ IMgaMetaAspect *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaAspects_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAspects_Remove_Proxy( 
    IMgaMetaAspects * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaAspects_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaAspects_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0276 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaAspects>
{ typedef IMgaMetaAspects collection_type; typedef IMgaMetaAspect element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaAspect>
{ typedef IMgaMetaAspects collection_type; typedef IMgaMetaAspect element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0276_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0276_v0_0_s_ifspec;

#ifndef __IMgaMetaRoles_INTERFACE_DEFINED__
#define __IMgaMetaRoles_INTERFACE_DEFINED__

/* interface IMgaMetaRoles */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaRoles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c851e130-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaRoles : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaRole *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaRole *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaRole *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaRolesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaRoles * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaRoles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaRoles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaRoles * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaRoles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaRoles * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaRoles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaRoles * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaRoles * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaRoles * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaRoles * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaRole **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaRoles * This,
            /* [in] */ IMgaMetaRole *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaRoles * This,
            /* [in] */ IMgaMetaRole *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaRoles * This,
            /* [in] */ IMgaMetaRole *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaRoles * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaRolesVtbl;

    interface IMgaMetaRoles
    {
        CONST_VTBL struct IMgaMetaRolesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaRoles_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaRoles_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaRoles_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaRoles_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaRoles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaRoles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaRoles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaRoles_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaRoles_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaRoles_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaRoles_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaRoles_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaRoles_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaRoles_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaRoles_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_get_Count_Proxy( 
    IMgaMetaRoles * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaRoles_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_get_Item_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaMetaRoles_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_get__NewEnum_Proxy( 
    IMgaMetaRoles * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaRoles_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_GetAll_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaMetaRoles_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_Insert_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ IMgaMetaRole *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaRoles_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_Append_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ IMgaMetaRole *p);


void __RPC_STUB IMgaMetaRoles_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_Find_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ IMgaMetaRole *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaRoles_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRoles_Remove_Proxy( 
    IMgaMetaRoles * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaRoles_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaRoles_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0277 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaRoles>
{ typedef IMgaMetaRoles collection_type; typedef IMgaMetaRole element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaRole>
{ typedef IMgaMetaRoles collection_type; typedef IMgaMetaRole element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0277_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0277_v0_0_s_ifspec;

#ifndef __IMgaMetaFCOs_INTERFACE_DEFINED__
#define __IMgaMetaFCOs_INTERFACE_DEFINED__

/* interface IMgaMetaFCOs */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaFCOs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c66a6c60-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaFCOs : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaFCO *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaFCO *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaFCO *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaFCOsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaFCOs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaFCOs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaFCOs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaFCOs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaFCOs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaFCOs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaFCOs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaFCOs * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaFCOs * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaFCOs * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaFCOs * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaFCO **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaFCOs * This,
            /* [in] */ IMgaMetaFCO *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaFCOs * This,
            /* [in] */ IMgaMetaFCO *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaFCOs * This,
            /* [in] */ IMgaMetaFCO *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaFCOs * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaFCOsVtbl;

    interface IMgaMetaFCOs
    {
        CONST_VTBL struct IMgaMetaFCOsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaFCOs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaFCOs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaFCOs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaFCOs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaFCOs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaFCOs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaFCOs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaFCOs_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaFCOs_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaFCOs_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaFCOs_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaFCOs_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaFCOs_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaFCOs_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaFCOs_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_get_Count_Proxy( 
    IMgaMetaFCOs * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaFCOs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_get_Item_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaFCOs_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_get__NewEnum_Proxy( 
    IMgaMetaFCOs * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaFCOs_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_GetAll_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaMetaFCOs_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_Insert_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ IMgaMetaFCO *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaFCOs_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_Append_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ IMgaMetaFCO *p);


void __RPC_STUB IMgaMetaFCOs_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_Find_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ IMgaMetaFCO *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaFCOs_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFCOs_Remove_Proxy( 
    IMgaMetaFCOs * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaFCOs_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaFCOs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0278 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaFCOs>
{ typedef IMgaMetaFCOs collection_type; typedef IMgaMetaFCO element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaFCO>
{ typedef IMgaMetaFCOs collection_type; typedef IMgaMetaFCO element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0278_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0278_v0_0_s_ifspec;

#ifndef __IMgaMetaAttributes_INTERFACE_DEFINED__
#define __IMgaMetaAttributes_INTERFACE_DEFINED__

/* interface IMgaMetaAttributes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c6922740-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaAttributes : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaAttribute *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaAttribute *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaAttribute *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaAttributes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaAttributes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaAttributes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaAttributes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaAttributes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaAttributes * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaAttributes * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaAttributes * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaAttributes * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaAttributes * This,
            /* [in] */ IMgaMetaAttribute *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaAttributes * This,
            /* [in] */ IMgaMetaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaAttributes * This,
            /* [in] */ IMgaMetaAttribute *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaAttributes * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaAttributesVtbl;

    interface IMgaMetaAttributes
    {
        CONST_VTBL struct IMgaMetaAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaAttributes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaAttributes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaAttributes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaAttributes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaAttributes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaAttributes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaAttributes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaAttributes_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaAttributes_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaAttributes_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaAttributes_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaAttributes_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaAttributes_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaAttributes_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaAttributes_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_get_Count_Proxy( 
    IMgaMetaAttributes * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaAttributes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_get_Item_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaAttributes_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_get__NewEnum_Proxy( 
    IMgaMetaAttributes * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaAttributes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_GetAll_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaMetaAttributes_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_Insert_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ IMgaMetaAttribute *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaAttributes_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_Append_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ IMgaMetaAttribute *p);


void __RPC_STUB IMgaMetaAttributes_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_Find_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ IMgaMetaAttribute *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaAttributes_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaAttributes_Remove_Proxy( 
    IMgaMetaAttributes * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaAttributes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaAttributes_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0279 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaAttributes>
{ typedef IMgaMetaAttributes collection_type; typedef IMgaMetaAttribute element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaAttribute>
{ typedef IMgaMetaAttributes collection_type; typedef IMgaMetaAttribute element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0279_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0279_v0_0_s_ifspec;

#ifndef __IMgaMetaFolders_INTERFACE_DEFINED__
#define __IMgaMetaFolders_INTERFACE_DEFINED__

/* interface IMgaMetaFolders */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c6b85af0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaFolders : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaFolder *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaFolder *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaFolder *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaFolders * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaFolders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaFolders * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaFolders * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaFolders * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaFolders * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaFolder **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaFolders * This,
            /* [in] */ IMgaMetaFolder *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaFolders * This,
            /* [in] */ IMgaMetaFolder *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaFolders * This,
            /* [in] */ IMgaMetaFolder *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaFolders * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaFoldersVtbl;

    interface IMgaMetaFolders
    {
        CONST_VTBL struct IMgaMetaFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaFolders_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaFolders_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaFolders_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaFolders_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaFolders_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaFolders_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaFolders_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaFolders_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaFolders_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaFolders_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaFolders_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaFolders_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_get_Count_Proxy( 
    IMgaMetaFolders * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaFolders_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_get_Item_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolders_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_get__NewEnum_Proxy( 
    IMgaMetaFolders * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaFolders_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_GetAll_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaMetaFolders_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_Insert_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ IMgaMetaFolder *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaFolders_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_Append_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ IMgaMetaFolder *p);


void __RPC_STUB IMgaMetaFolders_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_Find_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ IMgaMetaFolder *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaFolders_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaFolders_Remove_Proxy( 
    IMgaMetaFolders * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaFolders_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaFolders_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0280 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaFolders>
{ typedef IMgaMetaFolders collection_type; typedef IMgaMetaFolder element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaFolder>
{ typedef IMgaMetaFolders collection_type; typedef IMgaMetaFolder element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0280_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0280_v0_0_s_ifspec;

#ifndef __IMgaMetaPointerSpecs_INTERFACE_DEFINED__
#define __IMgaMetaPointerSpecs_INTERFACE_DEFINED__

/* interface IMgaMetaPointerSpecs */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaPointerSpecs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c761f8c0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaMetaPointerSpecs : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPointerSpec **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaPointerSpec *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaPointerSpec *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaPointerSpec *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPointerSpecsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaPointerSpecs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaPointerSpecs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaPointerSpecs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaPointerSpecs * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaPointerSpecs * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPointerSpec **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ IMgaMetaPointerSpec *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ IMgaMetaPointerSpec *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ IMgaMetaPointerSpec *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaPointerSpecs * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaPointerSpecsVtbl;

    interface IMgaMetaPointerSpecs
    {
        CONST_VTBL struct IMgaMetaPointerSpecsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaPointerSpecs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaPointerSpecs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaPointerSpecs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaPointerSpecs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaPointerSpecs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaPointerSpecs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaPointerSpecs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaPointerSpecs_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaPointerSpecs_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaPointerSpecs_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaPointerSpecs_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaPointerSpecs_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaPointerSpecs_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaPointerSpecs_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaPointerSpecs_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_get_Count_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaPointerSpecs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_get_Item_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaPointerSpecs_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_get__NewEnum_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaPointerSpecs_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_GetAll_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaPointerSpec **p);


void __RPC_STUB IMgaMetaPointerSpecs_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_Insert_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ IMgaMetaPointerSpec *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaPointerSpecs_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_Append_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ IMgaMetaPointerSpec *p);


void __RPC_STUB IMgaMetaPointerSpecs_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_Find_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ IMgaMetaPointerSpec *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaPointerSpecs_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerSpecs_Remove_Proxy( 
    IMgaMetaPointerSpecs * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaPointerSpecs_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaPointerSpecs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0281 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaPointerSpecs>
{ typedef IMgaMetaPointerSpecs collection_type; typedef IMgaMetaPointerSpec element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaPointerSpec>
{ typedef IMgaMetaPointerSpecs collection_type; typedef IMgaMetaPointerSpec element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0281_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0281_v0_0_s_ifspec;

#ifndef __IMgaMetaRegNodes_INTERFACE_DEFINED__
#define __IMgaMetaRegNodes_INTERFACE_DEFINED__

/* interface IMgaMetaRegNodes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaRegNodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c795ed20-c1fd-11d3-9ad2-00aa00b6fe27")
    IMgaMetaRegNodes : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaRegNode **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaRegNode **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaRegNode *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaRegNode *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaRegNode *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaRegNodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaRegNodes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaRegNodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaRegNodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaRegNodes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaRegNodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaRegNodes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaRegNodes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaRegNodes * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaRegNodes * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaRegNodes * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaRegNodes * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaRegNode **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaRegNodes * This,
            /* [in] */ IMgaMetaRegNode *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaRegNodes * This,
            /* [in] */ IMgaMetaRegNode *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaRegNodes * This,
            /* [in] */ IMgaMetaRegNode *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaRegNodes * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaRegNodesVtbl;

    interface IMgaMetaRegNodes
    {
        CONST_VTBL struct IMgaMetaRegNodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaRegNodes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaRegNodes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaRegNodes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaRegNodes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaRegNodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaRegNodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaRegNodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaRegNodes_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaRegNodes_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaRegNodes_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaRegNodes_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaRegNodes_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaRegNodes_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaRegNodes_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaRegNodes_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_get_Count_Proxy( 
    IMgaMetaRegNodes * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaRegNodes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_get_Item_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaRegNode **p);


void __RPC_STUB IMgaMetaRegNodes_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_get__NewEnum_Proxy( 
    IMgaMetaRegNodes * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaRegNodes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_GetAll_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaRegNode **p);


void __RPC_STUB IMgaMetaRegNodes_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_Insert_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ IMgaMetaRegNode *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaRegNodes_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_Append_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ IMgaMetaRegNode *p);


void __RPC_STUB IMgaMetaRegNodes_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_Find_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ IMgaMetaRegNode *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaRegNodes_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaRegNodes_Remove_Proxy( 
    IMgaMetaRegNodes * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaRegNodes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaRegNodes_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0282 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaRegNodes>
{ typedef IMgaMetaRegNodes collection_type; typedef IMgaMetaRegNode element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaRegNode>
{ typedef IMgaMetaRegNodes collection_type; typedef IMgaMetaRegNode element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0282_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0282_v0_0_s_ifspec;

#ifndef __IMgaConstraints_INTERFACE_DEFINED__
#define __IMgaConstraints_INTERFACE_DEFINED__

/* interface IMgaConstraints */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaConstraints;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8ec3720-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaConstraints : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaConstraint **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaConstraint **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaConstraint *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaConstraint *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaConstraint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaConstraintsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaConstraints * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaConstraints * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaConstraints * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaConstraints * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaConstraints * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaConstraints * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaConstraints * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaConstraints * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaConstraints * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaConstraint **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaConstraints * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaConstraints * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaConstraint **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaConstraints * This,
            /* [in] */ IMgaConstraint *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaConstraints * This,
            /* [in] */ IMgaConstraint *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaConstraints * This,
            /* [in] */ IMgaConstraint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaConstraints * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaConstraintsVtbl;

    interface IMgaConstraints
    {
        CONST_VTBL struct IMgaConstraintsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaConstraints_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaConstraints_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaConstraints_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaConstraints_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaConstraints_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaConstraints_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaConstraints_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaConstraints_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaConstraints_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaConstraints_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaConstraints_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaConstraints_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaConstraints_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaConstraints_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaConstraints_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_get_Count_Proxy( 
    IMgaConstraints * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaConstraints_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_get_Item_Proxy( 
    IMgaConstraints * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaConstraint **p);


void __RPC_STUB IMgaConstraints_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_get__NewEnum_Proxy( 
    IMgaConstraints * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaConstraints_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_GetAll_Proxy( 
    IMgaConstraints * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaConstraint **p);


void __RPC_STUB IMgaConstraints_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_Insert_Proxy( 
    IMgaConstraints * This,
    /* [in] */ IMgaConstraint *p,
    /* [in] */ long at);


void __RPC_STUB IMgaConstraints_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_Append_Proxy( 
    IMgaConstraints * This,
    /* [in] */ IMgaConstraint *p);


void __RPC_STUB IMgaConstraints_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_Find_Proxy( 
    IMgaConstraints * This,
    /* [in] */ IMgaConstraint *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaConstraints_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConstraints_Remove_Proxy( 
    IMgaConstraints * This,
    /* [in] */ long n);


void __RPC_STUB IMgaConstraints_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaConstraints_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0283 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaConstraints>
{ typedef IMgaConstraints collection_type; typedef IMgaConstraint element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaConstraint>
{ typedef IMgaConstraints collection_type; typedef IMgaConstraint element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0283_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0283_v0_0_s_ifspec;

#ifndef __IMgaMetaParts_INTERFACE_DEFINED__
#define __IMgaMetaParts_INTERFACE_DEFINED__

/* interface IMgaMetaParts */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaParts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8ec3720-c1fd-11d3-9ad2-00aa00b6fe27")
    IMgaMetaParts : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPart **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPart **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaPart *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaPart *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaPart *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPartsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaParts * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaParts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaParts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaParts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaParts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaParts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaParts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaParts * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaParts * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPart **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaParts * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaParts * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPart **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaParts * This,
            /* [in] */ IMgaMetaPart *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaParts * This,
            /* [in] */ IMgaMetaPart *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaParts * This,
            /* [in] */ IMgaMetaPart *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaParts * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaPartsVtbl;

    interface IMgaMetaParts
    {
        CONST_VTBL struct IMgaMetaPartsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaParts_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaParts_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaParts_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaParts_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaParts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaParts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaParts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaParts_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaParts_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaParts_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaParts_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaParts_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaParts_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaParts_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaParts_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_get_Count_Proxy( 
    IMgaMetaParts * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaParts_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_get_Item_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaPart **p);


void __RPC_STUB IMgaMetaParts_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_get__NewEnum_Proxy( 
    IMgaMetaParts * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaParts_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_GetAll_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaPart **p);


void __RPC_STUB IMgaMetaParts_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_Insert_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ IMgaMetaPart *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaParts_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_Append_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ IMgaMetaPart *p);


void __RPC_STUB IMgaMetaParts_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_Find_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ IMgaMetaPart *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaParts_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaParts_Remove_Proxy( 
    IMgaMetaParts * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaParts_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaParts_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0284 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaParts>
{ typedef IMgaMetaParts collection_type; typedef IMgaMetaPart element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaPart>
{ typedef IMgaMetaParts collection_type; typedef IMgaMetaPart element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0284_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0284_v0_0_s_ifspec;

#ifndef __IMgaMetaModels_INTERFACE_DEFINED__
#define __IMgaMetaModels_INTERFACE_DEFINED__

/* interface IMgaMetaModels */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaModels;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8ec3723-c1fd-11d3-9ad2-00aa00b6fe27")
    IMgaMetaModels : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaModel **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaModel *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaModel *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaModel *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaModelsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaModels * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaModels * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaModels * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaModels * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaModels * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaModels * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaModels * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaModels * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaModels * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaModel **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaModels * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaModels * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaModel **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaModels * This,
            /* [in] */ IMgaMetaModel *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaModels * This,
            /* [in] */ IMgaMetaModel *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaModels * This,
            /* [in] */ IMgaMetaModel *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaModels * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaModelsVtbl;

    interface IMgaMetaModels
    {
        CONST_VTBL struct IMgaMetaModelsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaModels_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaModels_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaModels_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaModels_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaModels_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaModels_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaModels_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaModels_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaModels_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaModels_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaModels_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaModels_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaModels_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaModels_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaModels_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_get_Count_Proxy( 
    IMgaMetaModels * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaModels_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_get_Item_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaModels_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_get__NewEnum_Proxy( 
    IMgaMetaModels * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaModels_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_GetAll_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaModel **p);


void __RPC_STUB IMgaMetaModels_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_Insert_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ IMgaMetaModel *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaModels_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_Append_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ IMgaMetaModel *p);


void __RPC_STUB IMgaMetaModels_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_Find_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ IMgaMetaModel *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaModels_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaModels_Remove_Proxy( 
    IMgaMetaModels * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaModels_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaModels_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0285 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaModels>
{ typedef IMgaMetaModels collection_type; typedef IMgaMetaModel element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaModel>
{ typedef IMgaMetaModels collection_type; typedef IMgaMetaModel element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0285_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0285_v0_0_s_ifspec;

#ifndef __IMgaMetaConnJoints_INTERFACE_DEFINED__
#define __IMgaMetaConnJoints_INTERFACE_DEFINED__

/* interface IMgaMetaConnJoints */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaConnJoints;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8432623-c1fd-11d3-9ad2-00aa00b6fe27")
    IMgaMetaConnJoints : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaConnJoint **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaConnJoint **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaConnJoint *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaConnJoint *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaConnJoint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaConnJointsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaConnJoints * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaConnJoints * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaConnJoints * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaConnJoints * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaConnJoints * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaConnJoints * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaConnJoints * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaConnJoints * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaConnJoints * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaConnJoint **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaConnJoints * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaConnJoints * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaConnJoint **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaConnJoints * This,
            /* [in] */ IMgaMetaConnJoint *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaConnJoints * This,
            /* [in] */ IMgaMetaConnJoint *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaConnJoints * This,
            /* [in] */ IMgaMetaConnJoint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaConnJoints * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaConnJointsVtbl;

    interface IMgaMetaConnJoints
    {
        CONST_VTBL struct IMgaMetaConnJointsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaConnJoints_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaConnJoints_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaConnJoints_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaConnJoints_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaConnJoints_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaConnJoints_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaConnJoints_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaConnJoints_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaConnJoints_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaConnJoints_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaConnJoints_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaConnJoints_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaConnJoints_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaConnJoints_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaConnJoints_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_get_Count_Proxy( 
    IMgaMetaConnJoints * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaConnJoints_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_get_Item_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaConnJoint **p);


void __RPC_STUB IMgaMetaConnJoints_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_get__NewEnum_Proxy( 
    IMgaMetaConnJoints * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaConnJoints_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_GetAll_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaConnJoint **p);


void __RPC_STUB IMgaMetaConnJoints_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_Insert_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ IMgaMetaConnJoint *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaConnJoints_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_Append_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ IMgaMetaConnJoint *p);


void __RPC_STUB IMgaMetaConnJoints_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_Find_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ IMgaMetaConnJoint *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaConnJoints_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaConnJoints_Remove_Proxy( 
    IMgaMetaConnJoints * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaConnJoints_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaConnJoints_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0286 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaConnJoints>
{ typedef IMgaMetaConnJoints collection_type; typedef IMgaMetaConnJoint element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaConnJoint>
{ typedef IMgaMetaConnJoints collection_type; typedef IMgaMetaConnJoint element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0286_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0286_v0_0_s_ifspec;

#ifndef __IMgaMetaPointerItems_INTERFACE_DEFINED__
#define __IMgaMetaPointerItems_INTERFACE_DEFINED__

/* interface IMgaMetaPointerItems */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaPointerItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8124623-c51d-11d3-9ad2-00aa00b6fe27")
    IMgaMetaPointerItems : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPointerItem **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPointerItem **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaPointerItem *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaPointerItem *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaPointerItem *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaPointerItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaPointerItems * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaPointerItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaPointerItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaPointerItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaPointerItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaPointerItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaPointerItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaPointerItems * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaPointerItems * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaPointerItem **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaPointerItems * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaPointerItems * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaPointerItem **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaPointerItems * This,
            /* [in] */ IMgaMetaPointerItem *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaPointerItems * This,
            /* [in] */ IMgaMetaPointerItem *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaPointerItems * This,
            /* [in] */ IMgaMetaPointerItem *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaPointerItems * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaPointerItemsVtbl;

    interface IMgaMetaPointerItems
    {
        CONST_VTBL struct IMgaMetaPointerItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaPointerItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaPointerItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaPointerItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaPointerItems_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaPointerItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaPointerItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaPointerItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaPointerItems_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaPointerItems_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaPointerItems_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaPointerItems_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaPointerItems_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaPointerItems_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaPointerItems_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaPointerItems_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_get_Count_Proxy( 
    IMgaMetaPointerItems * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaPointerItems_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_get_Item_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaPointerItem **p);


void __RPC_STUB IMgaMetaPointerItems_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_get__NewEnum_Proxy( 
    IMgaMetaPointerItems * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaPointerItems_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_GetAll_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaPointerItem **p);


void __RPC_STUB IMgaMetaPointerItems_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_Insert_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ IMgaMetaPointerItem *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaPointerItems_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_Append_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ IMgaMetaPointerItem *p);


void __RPC_STUB IMgaMetaPointerItems_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_Find_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ IMgaMetaPointerItem *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaPointerItems_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaPointerItems_Remove_Proxy( 
    IMgaMetaPointerItems * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaPointerItems_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaPointerItems_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0287 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaPointerItems>
{ typedef IMgaMetaPointerItems collection_type; typedef IMgaMetaPointerItem element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaPointerItem>
{ typedef IMgaMetaPointerItems collection_type; typedef IMgaMetaPointerItem element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0287_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0287_v0_0_s_ifspec;

#ifndef __IMgaMetaEnumItems_INTERFACE_DEFINED__
#define __IMgaMetaEnumItems_INTERFACE_DEFINED__

/* interface IMgaMetaEnumItems */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaMetaEnumItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8124623-c51d-1ad3-9ad2-11aa0176fe27")
    IMgaMetaEnumItems : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaEnumItem **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaEnumItem **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaMetaEnumItem *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaMetaEnumItem *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaMetaEnumItem *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaMetaEnumItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaMetaEnumItems * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaMetaEnumItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaMetaEnumItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaMetaEnumItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaMetaEnumItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaMetaEnumItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaMetaEnumItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaMetaEnumItems * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaMetaEnumItems * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaMetaEnumItem **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaMetaEnumItems * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaMetaEnumItems * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaMetaEnumItem **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaMetaEnumItems * This,
            /* [in] */ IMgaMetaEnumItem *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaMetaEnumItems * This,
            /* [in] */ IMgaMetaEnumItem *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaMetaEnumItems * This,
            /* [in] */ IMgaMetaEnumItem *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaMetaEnumItems * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaMetaEnumItemsVtbl;

    interface IMgaMetaEnumItems
    {
        CONST_VTBL struct IMgaMetaEnumItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaMetaEnumItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaMetaEnumItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaMetaEnumItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaMetaEnumItems_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaMetaEnumItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaMetaEnumItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaMetaEnumItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaMetaEnumItems_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaMetaEnumItems_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaMetaEnumItems_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaMetaEnumItems_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaMetaEnumItems_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaMetaEnumItems_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaMetaEnumItems_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaMetaEnumItems_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_get_Count_Proxy( 
    IMgaMetaEnumItems * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaMetaEnumItems_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_get_Item_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaMetaEnumItem **p);


void __RPC_STUB IMgaMetaEnumItems_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_get__NewEnum_Proxy( 
    IMgaMetaEnumItems * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaMetaEnumItems_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_GetAll_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaMetaEnumItem **p);


void __RPC_STUB IMgaMetaEnumItems_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_Insert_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ IMgaMetaEnumItem *p,
    /* [in] */ long at);


void __RPC_STUB IMgaMetaEnumItems_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_Append_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ IMgaMetaEnumItem *p);


void __RPC_STUB IMgaMetaEnumItems_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_Find_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ IMgaMetaEnumItem *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaMetaEnumItems_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaMetaEnumItems_Remove_Proxy( 
    IMgaMetaEnumItems * This,
    /* [in] */ long n);


void __RPC_STUB IMgaMetaEnumItems_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaMetaEnumItems_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0288 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaMetaEnumItems>
{ typedef IMgaMetaEnumItems collection_type; typedef IMgaMetaEnumItem element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaMetaEnumItem>
{ typedef IMgaMetaEnumItems collection_type; typedef IMgaMetaEnumItem element_type; };
}            
#endif































typedef 
enum accesstype_enum
    {	ACC_NULL	= 0,
	ACC_READ	= 1,
	ACC_WRITE	= 2,
	ACC_LINK	= 4
    } 	accesstype_enum;

typedef 
enum transactiontype_enum
    {	TRANSACTION_GENERAL	= 0,
	TRANSACTION_READ_ONLY	= TRANSACTION_GENERAL + 1,
	TRANSACTION_NON_NESTED	= TRANSACTION_READ_ONLY + 1
    } 	transactiontype_enum;

typedef 
enum attstatus_enum
    {	ATTSTATUS_HERE	= 0,
	ATTSTATUS_METADEFAULT	= -1,
	ATTSTATUS_UNDEFINED	= -2,
	ATTSTATUS_INVALID	= -3,
	ATTSTATUS_IN_ARCHETYPE1	= 1,
	ATTSTATUS_IN_ARCHETYPE2	= 2,
	ATTSTATUS_IN_ARCHETYPE3	= 3,
	ATTSTATUS_IN_ARCHETYPE4	= 4
    } 	attstatus_enum;

typedef BSTR ID_type;

typedef 
enum openmode
    {	OPEN_READ	= 1,
	OPEN_READWRITE	= 3
    } 	openmode;

typedef 
enum globalevent_enum
    {	GLOBALEVENT_OPEN_PROJECT	= 0,
	GLOBALEVENT_CLOSE_PROJECT	= GLOBALEVENT_OPEN_PROJECT + 1,
	GLOBALEVENT_NEW_TERRITORY	= GLOBALEVENT_CLOSE_PROJECT + 1,
	GLOBALEVENT_DESTROY_TERRITORY	= GLOBALEVENT_NEW_TERRITORY + 1,
	GLOBALEVENT_COMMIT_TRANSACTION	= GLOBALEVENT_DESTROY_TERRITORY + 1,
	GLOBALEVENT_ABORT_TRANSACTION	= GLOBALEVENT_COMMIT_TRANSACTION + 1,
	GLOBALEVENT_UNDO	= GLOBALEVENT_ABORT_TRANSACTION + 1,
	GLOBALEVENT_REDO	= GLOBALEVENT_UNDO + 1,
	GLOBALEVENT_PROJECT_PROPERTIES	= GLOBALEVENT_REDO + 1,
	GLOBALEVENT_NOTIFICATION_READY	= GLOBALEVENT_PROJECT_PROPERTIES + 1,
	APPEVENT_XML_IMPORT_BEGIN	= 0xff,
	APPEVENT_XML_IMPORT_END	= APPEVENT_XML_IMPORT_BEGIN + 1
    } 	globalevent_enum;

#define	RELID_BASE_MAX	( 0x7ffffff )

#define	RELID_VALUE_MAX	( 0x7fffffff )

typedef 
enum objectevent_enum
    {	OBJEVENT_CREATED	= 0x80000000,
	OBJEVENT_DESTROYED	= 0x40000000,
	OBJEVENT_ATTR	= 0x1,
	OBJEVENT_REGISTRY	= 0x2,
	OBJEVENT_NEWCHILD	= 0x4,
	OBJEVENT_RELATION	= 0x8,
	OBJEVENT_PROPERTIES	= 0x10,
	OBJEVENT_SUBT_INST	= 0x20,
	OBJEVENT_PARENT	= 0x100,
	OBJEVENT_LOSTCHILD	= 0x200,
	OBJEVENT_REFERENCED	= 0x400,
	OBJEVENT_CONNECTED	= 0x800,
	OBJEVENT_SETINCLUDED	= 0x1000,
	OBJEVENT_REFRELEASED	= 0x2000,
	OBJEVENT_DISCONNECTED	= 0x4000,
	OBJEVENT_SETEXCLUDED	= 0x8000,
	OBJEVENT_USERBITS	= 0xff0000,
	OBJEVENT_CLOSEMODEL	= 0x800000
    } 	objectevent_enum;

typedef 
enum objectstatus_enum
    {	OBJECT_EXISTS	= 0,
	OBJECT_DELETED	= OBJECT_EXISTS + 1,
	OBJECT_ZOMBIE	= OBJECT_DELETED + 1
    } 	objectstatus_enum;

typedef 
enum preference_flags
    {	MGAPREF_NODUPLICATENAMES	= 0x1,
	MGAPREF_NAMENEWOBJECTS	= 0x2,
	MGAPREF_IGNORECONNCHECKS	= 0x4,
	MGAPREF_FREEINSTANCEREFS	= 0x8,
	MGAPREF_RELAXED_RDATTRTYPES	= 0x10,
	MGAPREF_RELAXED_WRATTRTYPES	= 0x20,
	MGAPREF_MANUAL_RELIDS	= 0x40
    } 	preference_flags;

typedef 
enum opmask_codes
    {	MM_ERROR	= 0,
	MM_CLEAR	= 1,
	MM_DO	= 2,
	MM_FULLDELETE	= 0x40
    } 	opmask_codes;

typedef 
enum opmask_shifts
    {	MM_REF	= 0,
	MM_CONN	= 8,
	MM_SET	= 16,
	MM_INTERNAL	= 0,
	MM_INTO	= 2,
	MM_OUTOF	= 4
    } 	opmask_shifts;

typedef 
enum componenttype_enum
    {	COMPONENTTYPE_NONE	= 0,
	COMPONENTTYPE_INTERPRETER	= 0x1,
	COMPONENTTYPE_ADDON	= 0x2,
	COMPONENTTYPE_PLUGIN	= 0x4,
	COMPONENTTYPE_ALL	= 0x7,
	COMPONENTTYPE_EVENT_BASED	= COMPONENTTYPE_ADDON,
	COMPONENTTYPE_PARADIGM_INDEPENDENT	= 0x8,
	COMPONENTTYPE_EXECENGINE	= 0x10,
	COMPONENTTYPE_SCRIPT	= 0x20,
	COMPONENTTYPE_SYSREGREF	= 0x80
    } 	componenttype_enum;

typedef 
enum component_startmode_enum
    {	GME_MAIN_START	= 0,
	GME_BROWSER_START	= 1,
	GME_CONTEXT_START	= 2,
	GME_EMBEDDED_START	= 3,
	GME_MENU_START	= 16,
	GME_BGCONTEXT_START	= 18,
	GME_ICON_START	= 32,
	METAMODEL_CHECK_SYNTAX	= 101,
	CONSTMGR_SHOW_CONSTRAINTS	= 102
    } 	component_startmode_enum;

typedef 
enum mgaerrors
    {	E_MGA_NOT_IMPLEMENTED	= 0x87650000,
	E_MGA_NOT_SUPPORTED	= 0x87650001,
	E_MGA_MODULE_INCOMPATIBILITY	= 0x87650010,
	E_MGA_PARADIGM_NOTREG	= 0x87650011,
	E_MGA_PARADIGM_INVALID	= 0x87650012,
	E_MGA_COMPONENT_ERROR	= 0x87650013,
	E_MGA_DATA_INCONSISTENCY	= 0x87650021,
	E_MGA_META_INCOMPATIBILITY	= 0x87650022,
	E_MGA_PROJECT_OPEN	= 0x87650031,
	E_MGA_PROJECT_NOT_OPEN	= 0x87650032,
	E_MGA_READ_ONLY_ACCESS	= 0x87650033,
	E_MGA_NOT_IN_TERRITORY	= 0x87650034,
	E_MGA_NOT_IN_TRANSACTION	= 0x87650035,
	E_MGA_ALREADY_IN_TRANSACTION	= 0x87650036,
	E_MGA_MUST_ABORT	= 0x87650037,
	E_MGA_TARGET_DESTROYED	= 0x87650038,
	E_MGA_FOREIGN_PROJECT	= 0x87650041,
	E_MGA_FOREIGN_OBJECT	= 0x87650042,
	E_MGA_OBJECT_DELETED	= 0x87650051,
	E_MGA_OBJECT_ZOMBIE	= 0x87650052,
	E_MGA_ZOMBIE_NOPROJECT	= 0x87650053,
	E_MGA_ZOMBIE_CLOSED_PROJECT	= 0x87650054,
	E_MGA_INVALID_ARG	= 0x87650060,
	E_MGA_ARG_RANGE	= 0x87650061,
	E_MGA_INPTR_NULL	= 0x87650062,
	E_MGA_OUTPTR_NONEMPTY	= 0x87650063,
	E_MGA_OUTPTR_NULL	= 0x87650064,
	E_MGA_NAME_NOT_FOUND	= 0x87650070,
	E_MGA_NAME_DUPLICATE	= 0x87650071,
	E_MGA_META_VIOLATION	= 0x87650072,
	E_MGA_NOT_CHANGEABLE	= 0x87650073,
	E_MGA_OP_REFUSED	= 0x87650074,
	E_MGA_LIBOBJECT	= 0x87650075,
	E_META_INVALIDATTR	= 0x87650080,
	E_META_INVALIDASPECT	= 0x87650081,
	E_MGA_ACCESS_TYPE	= 0x87650082,
	E_MGA_BAD_ENUMVALUE	= 0x87650083,
	E_MGA_REFPORTS_USED	= 0x87650131,
	E_MGA_VIRTUAL_NODE	= 0x87650136,
	E_MGA_BAD_POSITIONVALUE	= 0x87650137,
	E_MGA_ROOTFCO	= 0x87650138,
	E_MGA_NOT_ROOTOBJECT	= 0x87650138,
	E_MGA_BAD_COLLENGTH	= 0x87650140,
	E_MGA_INVALID_ROLE	= 0x87650142,
	E_MGA_BAD_ID	= 0x87650143,
	E_MGA_NOT_DERIVABLE	= 0x87650144,
	E_MGA_OBJECT_NOT_MEMBER	= 0x87650145,
	E_MGA_NOT_CONNECTIBLE	= 0x87650146,
	E_MGA_NO_ROLE	= 0x87650147,
	E_MGA_CONNROLE_USED	= 0x87650148,
	E_MGA_NOT_DERIVED	= 0x87650149,
	E_MGA_NOT_INSTANCE	= 0x87650150,
	E_MGA_INSTANCE	= 0x87650151,
	E_MGA_REFERENCE_EXPECTED	= 0x87650152,
	E_MGA_FILTERFORMAT	= 0x87650153,
	E_MGA_GEN_OUT_OF_SPACE	= 0x87650154,
	E_MGA_INVALID_TARGET	= 0x87650155,
	E_MGA_LONG_DERIVCHAIN	= 0x87650156,
	E_MGA_LIB_DIFF	= 0x87650157,
	E_MGA_BAD_MASKVALUE	= 0x87650170,
	E_MGA_CONSTRAINT_VIOLATION	= 0x87657fff,
	E_MGA_ERRCODE_ERROR	= 0x87658000
    } 	mgaerrors;



extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0288_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0288_v0_0_s_ifspec;

#ifndef __IMgaProject_INTERFACE_DEFINED__
#define __IMgaProject_INTERFACE_DEFINED__

/* interface IMgaProject */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaProject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F92-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaProject : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateEx( 
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname,
            /* [in] */ VARIANT paradigmGUID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ BSTR projectname,
            /* [defaultvalue][out] */ VARIANT_BOOL *ro_mode = 0) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OpenEx( 
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname,
            /* [in] */ VARIANT paradigmGUID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [defaultvalue][in] */ VARIANT_BOOL abort = 0) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [defaultvalue][in] */ BSTR save_as_conn = L"",
            /* [defaultvalue][in] */ VARIANT_BOOL keepoldname = 0) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckLocks( 
            /* [in] */ BSTR filename,
            /* [defaultvalue][in] */ VARIANT_BOOL clearlocks = ( VARIANT_BOOL  )-1) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Preferences( 
            /* [in] */ long prefmask) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Preferences( 
            /* [retval][out] */ long *prefmask) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_OperationsMask( 
            /* [in] */ long opmask) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OperationsMask( 
            /* [retval][out] */ long *opmask) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateTerritory( 
            /* [in] */ IMgaEventSink *handler,
            /* [out] */ IMgaTerritory **terr,
            /* [defaultvalue][in] */ IMgaEventSink *rwhandler = 0) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateAddOn( 
            /* [in] */ IMgaEventSink *handler,
            /* [out] */ IMgaAddOn **addon) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AddOns( 
            /* [retval][out] */ IMgaAddOns **addons) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Territories( 
            /* [retval][out] */ IMgaTerritories **terrs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnableAutoAddOns( 
            /* [in] */ VARIANT_BOOL bEnable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AddOnComponents( 
            /* [retval][out] */ IMgaComponents **comps) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ActiveTerritory( 
            /* [retval][out] */ IMgaTerritory **aterr) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BeginTransaction( 
            /* [in] */ IMgaTerritory *terr,
            /* [defaultvalue][in] */ transactiontype_enum mode = TRANSACTION_GENERAL) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProjectStatus( 
            /* [retval][out] */ long *stat) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ globalevent_enum event) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CommitTransaction( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AbortTransaction( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckSupress( 
            /* [in] */ VARIANT_BOOL mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Undo( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Redo( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UndoRedoSize( 
            /* [out] */ short *undosize,
            /* [out] */ short *redosize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FlushUndoQueue( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RootMeta( 
            /* [retval][out] */ IMgaMetaProject **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RootFolder( 
            /* [retval][out] */ IMgaFolder **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateFilter( 
            /* [retval][out] */ IMgaFilter **filter) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AllFCOs( 
            /* [in] */ IMgaFilter *filter,
            /* [retval][out] */ IMgaFCOs **returnset) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetObjectByID( 
            /* [in] */ ID_type id,
            /* [retval][out] */ IMgaObject **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFCOByID( 
            /* [in] */ ID_type id,
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFCOsByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFolderByPath( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaFolder **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumExtReferences( 
            /* [in] */ IMgaFCOs *fcos,
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjectByPath( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStatistics( 
            /* [retval][out] */ BSTR *statstr) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaGUID( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_GUID( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CreateTime( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ChangeTime( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Comment( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Comment( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProjectConnStr( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParadigmConnStr( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaObj( 
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaBase **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryProjectInfo( 
            /* [in] */ BSTR projectname,
            /* [out] */ long *mgaversion,
            /* [out] */ BSTR *paradigmname,
            /* [out] */ VARIANT *paradigmGUID,
            /* [out] */ VARIANT_BOOL *ro_mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Clients( 
            /* [retval][out] */ IMgaClients **clients) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterClient( 
            /* [in] */ BSTR name,
            /* [in] */ IDispatch *OLEServer,
            /* [retval][out] */ IMgaClient **client) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetClientByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaClient **client) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaProjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaProject * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaProject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaProject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaProject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaProject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaProject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaProject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            IMgaProject * This,
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateEx )( 
            IMgaProject * This,
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname,
            /* [in] */ VARIANT paradigmGUID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaProject * This,
            /* [in] */ BSTR projectname,
            /* [defaultvalue][out] */ VARIANT_BOOL *ro_mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OpenEx )( 
            IMgaProject * This,
            /* [in] */ BSTR projectname,
            /* [in] */ BSTR paradigmname,
            /* [in] */ VARIANT paradigmGUID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaProject * This,
            /* [defaultvalue][in] */ VARIANT_BOOL abort);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            IMgaProject * This,
            /* [defaultvalue][in] */ BSTR save_as_conn,
            /* [defaultvalue][in] */ VARIANT_BOOL keepoldname);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckLocks )( 
            IMgaProject * This,
            /* [in] */ BSTR filename,
            /* [defaultvalue][in] */ VARIANT_BOOL clearlocks);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preferences )( 
            IMgaProject * This,
            /* [in] */ long prefmask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preferences )( 
            IMgaProject * This,
            /* [retval][out] */ long *prefmask);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OperationsMask )( 
            IMgaProject * This,
            /* [in] */ long opmask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OperationsMask )( 
            IMgaProject * This,
            /* [retval][out] */ long *opmask);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateTerritory )( 
            IMgaProject * This,
            /* [in] */ IMgaEventSink *handler,
            /* [out] */ IMgaTerritory **terr,
            /* [defaultvalue][in] */ IMgaEventSink *rwhandler);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateAddOn )( 
            IMgaProject * This,
            /* [in] */ IMgaEventSink *handler,
            /* [out] */ IMgaAddOn **addon);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddOns )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaAddOns **addons);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territories )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaTerritories **terrs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnableAutoAddOns )( 
            IMgaProject * This,
            /* [in] */ VARIANT_BOOL bEnable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddOnComponents )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaComponents **comps);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveTerritory )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaTerritory **aterr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BeginTransaction )( 
            IMgaProject * This,
            /* [in] */ IMgaTerritory *terr,
            /* [defaultvalue][in] */ transactiontype_enum mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectStatus )( 
            IMgaProject * This,
            /* [retval][out] */ long *stat);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Notify )( 
            IMgaProject * This,
            /* [in] */ globalevent_enum event);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CommitTransaction )( 
            IMgaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AbortTransaction )( 
            IMgaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckSupress )( 
            IMgaProject * This,
            /* [in] */ VARIANT_BOOL mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Undo )( 
            IMgaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Redo )( 
            IMgaProject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndoRedoSize )( 
            IMgaProject * This,
            /* [out] */ short *undosize,
            /* [out] */ short *redosize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FlushUndoQueue )( 
            IMgaProject * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootMeta )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaMetaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFolder )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateFilter )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaFilter **filter);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AllFCOs )( 
            IMgaProject * This,
            /* [in] */ IMgaFilter *filter,
            /* [retval][out] */ IMgaFCOs **returnset);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetObjectByID )( 
            IMgaProject * This,
            /* [in] */ ID_type id,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFCOByID )( 
            IMgaProject * This,
            /* [in] */ ID_type id,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFCOsByName )( 
            IMgaProject * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFolderByPath )( 
            IMgaProject * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumExtReferences )( 
            IMgaProject * This,
            /* [in] */ IMgaFCOs *fcos,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaProject * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStatistics )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *statstr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaProject * This,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaGUID )( 
            IMgaProject * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GUID )( 
            IMgaProject * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_GUID )( 
            IMgaProject * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreateTime )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChangeTime )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            IMgaProject * This,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Comment )( 
            IMgaProject * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectConnStr )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParadigmConnStr )( 
            IMgaProject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaObj )( 
            IMgaProject * This,
            /* [in] */ metaref_type mref,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryProjectInfo )( 
            IMgaProject * This,
            /* [in] */ BSTR projectname,
            /* [out] */ long *mgaversion,
            /* [out] */ BSTR *paradigmname,
            /* [out] */ VARIANT *paradigmGUID,
            /* [out] */ VARIANT_BOOL *ro_mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Clients )( 
            IMgaProject * This,
            /* [retval][out] */ IMgaClients **clients);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterClient )( 
            IMgaProject * This,
            /* [in] */ BSTR name,
            /* [in] */ IDispatch *OLEServer,
            /* [retval][out] */ IMgaClient **client);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetClientByName )( 
            IMgaProject * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaClient **client);
        
        END_INTERFACE
    } IMgaProjectVtbl;

    interface IMgaProject
    {
        CONST_VTBL struct IMgaProjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaProject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaProject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaProject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaProject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaProject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaProject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaProject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaProject_Create(This,projectname,paradigmname)	\
    (This)->lpVtbl -> Create(This,projectname,paradigmname)

#define IMgaProject_CreateEx(This,projectname,paradigmname,paradigmGUID)	\
    (This)->lpVtbl -> CreateEx(This,projectname,paradigmname,paradigmGUID)

#define IMgaProject_Open(This,projectname,ro_mode)	\
    (This)->lpVtbl -> Open(This,projectname,ro_mode)

#define IMgaProject_OpenEx(This,projectname,paradigmname,paradigmGUID)	\
    (This)->lpVtbl -> OpenEx(This,projectname,paradigmname,paradigmGUID)

#define IMgaProject_Close(This,abort)	\
    (This)->lpVtbl -> Close(This,abort)

#define IMgaProject_Save(This,save_as_conn,keepoldname)	\
    (This)->lpVtbl -> Save(This,save_as_conn,keepoldname)

#define IMgaProject_CheckLocks(This,filename,clearlocks)	\
    (This)->lpVtbl -> CheckLocks(This,filename,clearlocks)

#define IMgaProject_put_Preferences(This,prefmask)	\
    (This)->lpVtbl -> put_Preferences(This,prefmask)

#define IMgaProject_get_Preferences(This,prefmask)	\
    (This)->lpVtbl -> get_Preferences(This,prefmask)

#define IMgaProject_put_OperationsMask(This,opmask)	\
    (This)->lpVtbl -> put_OperationsMask(This,opmask)

#define IMgaProject_get_OperationsMask(This,opmask)	\
    (This)->lpVtbl -> get_OperationsMask(This,opmask)

#define IMgaProject_CreateTerritory(This,handler,terr,rwhandler)	\
    (This)->lpVtbl -> CreateTerritory(This,handler,terr,rwhandler)

#define IMgaProject_CreateAddOn(This,handler,addon)	\
    (This)->lpVtbl -> CreateAddOn(This,handler,addon)

#define IMgaProject_get_AddOns(This,addons)	\
    (This)->lpVtbl -> get_AddOns(This,addons)

#define IMgaProject_get_Territories(This,terrs)	\
    (This)->lpVtbl -> get_Territories(This,terrs)

#define IMgaProject_EnableAutoAddOns(This,bEnable)	\
    (This)->lpVtbl -> EnableAutoAddOns(This,bEnable)

#define IMgaProject_get_AddOnComponents(This,comps)	\
    (This)->lpVtbl -> get_AddOnComponents(This,comps)

#define IMgaProject_get_ActiveTerritory(This,aterr)	\
    (This)->lpVtbl -> get_ActiveTerritory(This,aterr)

#define IMgaProject_BeginTransaction(This,terr,mode)	\
    (This)->lpVtbl -> BeginTransaction(This,terr,mode)

#define IMgaProject_get_ProjectStatus(This,stat)	\
    (This)->lpVtbl -> get_ProjectStatus(This,stat)

#define IMgaProject_Notify(This,event)	\
    (This)->lpVtbl -> Notify(This,event)

#define IMgaProject_CommitTransaction(This)	\
    (This)->lpVtbl -> CommitTransaction(This)

#define IMgaProject_AbortTransaction(This)	\
    (This)->lpVtbl -> AbortTransaction(This)

#define IMgaProject_CheckSupress(This,mode)	\
    (This)->lpVtbl -> CheckSupress(This,mode)

#define IMgaProject_Undo(This)	\
    (This)->lpVtbl -> Undo(This)

#define IMgaProject_Redo(This)	\
    (This)->lpVtbl -> Redo(This)

#define IMgaProject_UndoRedoSize(This,undosize,redosize)	\
    (This)->lpVtbl -> UndoRedoSize(This,undosize,redosize)

#define IMgaProject_FlushUndoQueue(This)	\
    (This)->lpVtbl -> FlushUndoQueue(This)

#define IMgaProject_get_RootMeta(This,pVal)	\
    (This)->lpVtbl -> get_RootMeta(This,pVal)

#define IMgaProject_get_RootFolder(This,pVal)	\
    (This)->lpVtbl -> get_RootFolder(This,pVal)

#define IMgaProject_CreateFilter(This,filter)	\
    (This)->lpVtbl -> CreateFilter(This,filter)

#define IMgaProject_AllFCOs(This,filter,returnset)	\
    (This)->lpVtbl -> AllFCOs(This,filter,returnset)

#define IMgaProject_GetObjectByID(This,id,pVal)	\
    (This)->lpVtbl -> GetObjectByID(This,id,pVal)

#define IMgaProject_GetFCOByID(This,id,pVal)	\
    (This)->lpVtbl -> GetFCOByID(This,id,pVal)

#define IMgaProject_GetFCOsByName(This,name,pVal)	\
    (This)->lpVtbl -> GetFCOsByName(This,name,pVal)

#define IMgaProject_GetFolderByPath(This,path,pVal)	\
    (This)->lpVtbl -> GetFolderByPath(This,path,pVal)

#define IMgaProject_EnumExtReferences(This,fcos,pVal)	\
    (This)->lpVtbl -> EnumExtReferences(This,fcos,pVal)

#define IMgaProject_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)

#define IMgaProject_GetStatistics(This,statstr)	\
    (This)->lpVtbl -> GetStatistics(This,statstr)

#define IMgaProject_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaProject_put_Name(This,newval)	\
    (This)->lpVtbl -> put_Name(This,newval)

#define IMgaProject_get_MetaGUID(This,pVal)	\
    (This)->lpVtbl -> get_MetaGUID(This,pVal)

#define IMgaProject_get_GUID(This,pVal)	\
    (This)->lpVtbl -> get_GUID(This,pVal)

#define IMgaProject_put_GUID(This,newVal)	\
    (This)->lpVtbl -> put_GUID(This,newVal)

#define IMgaProject_get_CreateTime(This,pVal)	\
    (This)->lpVtbl -> get_CreateTime(This,pVal)

#define IMgaProject_get_ChangeTime(This,pVal)	\
    (This)->lpVtbl -> get_ChangeTime(This,pVal)

#define IMgaProject_get_Author(This,pVal)	\
    (This)->lpVtbl -> get_Author(This,pVal)

#define IMgaProject_put_Author(This,newval)	\
    (This)->lpVtbl -> put_Author(This,newval)

#define IMgaProject_get_Comment(This,pVal)	\
    (This)->lpVtbl -> get_Comment(This,pVal)

#define IMgaProject_put_Comment(This,newVal)	\
    (This)->lpVtbl -> put_Comment(This,newVal)

#define IMgaProject_get_ProjectConnStr(This,pVal)	\
    (This)->lpVtbl -> get_ProjectConnStr(This,pVal)

#define IMgaProject_get_ParadigmConnStr(This,pVal)	\
    (This)->lpVtbl -> get_ParadigmConnStr(This,pVal)

#define IMgaProject_get_MetaObj(This,mref,pVal)	\
    (This)->lpVtbl -> get_MetaObj(This,mref,pVal)

#define IMgaProject_QueryProjectInfo(This,projectname,mgaversion,paradigmname,paradigmGUID,ro_mode)	\
    (This)->lpVtbl -> QueryProjectInfo(This,projectname,mgaversion,paradigmname,paradigmGUID,ro_mode)

#define IMgaProject_get_Clients(This,clients)	\
    (This)->lpVtbl -> get_Clients(This,clients)

#define IMgaProject_RegisterClient(This,name,OLEServer,client)	\
    (This)->lpVtbl -> RegisterClient(This,name,OLEServer,client)

#define IMgaProject_GetClientByName(This,name,client)	\
    (This)->lpVtbl -> GetClientByName(This,name,client)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Create_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR projectname,
    /* [in] */ BSTR paradigmname);


void __RPC_STUB IMgaProject_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CreateEx_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR projectname,
    /* [in] */ BSTR paradigmname,
    /* [in] */ VARIANT paradigmGUID);


void __RPC_STUB IMgaProject_CreateEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Open_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR projectname,
    /* [defaultvalue][out] */ VARIANT_BOOL *ro_mode);


void __RPC_STUB IMgaProject_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_OpenEx_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR projectname,
    /* [in] */ BSTR paradigmname,
    /* [in] */ VARIANT paradigmGUID);


void __RPC_STUB IMgaProject_OpenEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Close_Proxy( 
    IMgaProject * This,
    /* [defaultvalue][in] */ VARIANT_BOOL abort);


void __RPC_STUB IMgaProject_Close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Save_Proxy( 
    IMgaProject * This,
    /* [defaultvalue][in] */ BSTR save_as_conn,
    /* [defaultvalue][in] */ VARIANT_BOOL keepoldname);


void __RPC_STUB IMgaProject_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CheckLocks_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR filename,
    /* [defaultvalue][in] */ VARIANT_BOOL clearlocks);


void __RPC_STUB IMgaProject_CheckLocks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_Preferences_Proxy( 
    IMgaProject * This,
    /* [in] */ long prefmask);


void __RPC_STUB IMgaProject_put_Preferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Preferences_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ long *prefmask);


void __RPC_STUB IMgaProject_get_Preferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_OperationsMask_Proxy( 
    IMgaProject * This,
    /* [in] */ long opmask);


void __RPC_STUB IMgaProject_put_OperationsMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_OperationsMask_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ long *opmask);


void __RPC_STUB IMgaProject_get_OperationsMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CreateTerritory_Proxy( 
    IMgaProject * This,
    /* [in] */ IMgaEventSink *handler,
    /* [out] */ IMgaTerritory **terr,
    /* [defaultvalue][in] */ IMgaEventSink *rwhandler);


void __RPC_STUB IMgaProject_CreateTerritory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CreateAddOn_Proxy( 
    IMgaProject * This,
    /* [in] */ IMgaEventSink *handler,
    /* [out] */ IMgaAddOn **addon);


void __RPC_STUB IMgaProject_CreateAddOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_AddOns_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaAddOns **addons);


void __RPC_STUB IMgaProject_get_AddOns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Territories_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaTerritories **terrs);


void __RPC_STUB IMgaProject_get_Territories_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_EnableAutoAddOns_Proxy( 
    IMgaProject * This,
    /* [in] */ VARIANT_BOOL bEnable);


void __RPC_STUB IMgaProject_EnableAutoAddOns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_AddOnComponents_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaComponents **comps);


void __RPC_STUB IMgaProject_get_AddOnComponents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ActiveTerritory_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaTerritory **aterr);


void __RPC_STUB IMgaProject_get_ActiveTerritory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_BeginTransaction_Proxy( 
    IMgaProject * This,
    /* [in] */ IMgaTerritory *terr,
    /* [defaultvalue][in] */ transactiontype_enum mode);


void __RPC_STUB IMgaProject_BeginTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ProjectStatus_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ long *stat);


void __RPC_STUB IMgaProject_get_ProjectStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Notify_Proxy( 
    IMgaProject * This,
    /* [in] */ globalevent_enum event);


void __RPC_STUB IMgaProject_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CommitTransaction_Proxy( 
    IMgaProject * This);


void __RPC_STUB IMgaProject_CommitTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_AbortTransaction_Proxy( 
    IMgaProject * This);


void __RPC_STUB IMgaProject_AbortTransaction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CheckSupress_Proxy( 
    IMgaProject * This,
    /* [in] */ VARIANT_BOOL mode);


void __RPC_STUB IMgaProject_CheckSupress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Undo_Proxy( 
    IMgaProject * This);


void __RPC_STUB IMgaProject_Undo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_Redo_Proxy( 
    IMgaProject * This);


void __RPC_STUB IMgaProject_Redo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_UndoRedoSize_Proxy( 
    IMgaProject * This,
    /* [out] */ short *undosize,
    /* [out] */ short *redosize);


void __RPC_STUB IMgaProject_UndoRedoSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_FlushUndoQueue_Proxy( 
    IMgaProject * This);


void __RPC_STUB IMgaProject_FlushUndoQueue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_RootMeta_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaMetaProject **pVal);


void __RPC_STUB IMgaProject_get_RootMeta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_RootFolder_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaFolder **pVal);


void __RPC_STUB IMgaProject_get_RootFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_CreateFilter_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaFilter **filter);


void __RPC_STUB IMgaProject_CreateFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_AllFCOs_Proxy( 
    IMgaProject * This,
    /* [in] */ IMgaFilter *filter,
    /* [retval][out] */ IMgaFCOs **returnset);


void __RPC_STUB IMgaProject_AllFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetObjectByID_Proxy( 
    IMgaProject * This,
    /* [in] */ ID_type id,
    /* [retval][out] */ IMgaObject **pVal);


void __RPC_STUB IMgaProject_GetObjectByID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetFCOByID_Proxy( 
    IMgaProject * This,
    /* [in] */ ID_type id,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaProject_GetFCOByID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetFCOsByName_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaProject_GetFCOsByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetFolderByPath_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaFolder **pVal);


void __RPC_STUB IMgaProject_GetFolderByPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_EnumExtReferences_Proxy( 
    IMgaProject * This,
    /* [in] */ IMgaFCOs *fcos,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaProject_EnumExtReferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ObjectByPath_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaObject **pVal);


void __RPC_STUB IMgaProject_get_ObjectByPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetStatistics_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *statstr);


void __RPC_STUB IMgaProject_GetStatistics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Name_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_Name_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaProject_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_MetaGUID_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaProject_get_MetaGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_GUID_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaProject_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_GUID_Proxy( 
    IMgaProject * This,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IMgaProject_put_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_CreateTime_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_CreateTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ChangeTime_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_ChangeTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Author_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_Author_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaProject_put_Author_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Comment_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_Comment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaProject_put_Comment_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaProject_put_Comment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ProjectConnStr_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_ProjectConnStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_ParadigmConnStr_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaProject_get_ParadigmConnStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_MetaObj_Proxy( 
    IMgaProject * This,
    /* [in] */ metaref_type mref,
    /* [retval][out] */ IMgaMetaBase **pVal);


void __RPC_STUB IMgaProject_get_MetaObj_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_QueryProjectInfo_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR projectname,
    /* [out] */ long *mgaversion,
    /* [out] */ BSTR *paradigmname,
    /* [out] */ VARIANT *paradigmGUID,
    /* [out] */ VARIANT_BOOL *ro_mode);


void __RPC_STUB IMgaProject_QueryProjectInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaProject_get_Clients_Proxy( 
    IMgaProject * This,
    /* [retval][out] */ IMgaClients **clients);


void __RPC_STUB IMgaProject_get_Clients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_RegisterClient_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR name,
    /* [in] */ IDispatch *OLEServer,
    /* [retval][out] */ IMgaClient **client);


void __RPC_STUB IMgaProject_RegisterClient_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProject_GetClientByName_Proxy( 
    IMgaProject * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaClient **client);


void __RPC_STUB IMgaProject_GetClientByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaProject_INTERFACE_DEFINED__ */


#ifndef __IMgaEventSink_INTERFACE_DEFINED__
#define __IMgaEventSink_INTERFACE_DEFINED__

/* interface IMgaEventSink */
/* [unique][helpstring][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IMgaEventSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("32D1F3A5-D276-11D3-9AD5-00AA00B6FE26")
    IMgaEventSink : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GlobalEvent( 
            /* [in] */ globalevent_enum event) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ObjectEvent( 
            /* [in] */ IMgaObject *obj,
            /* [in] */ unsigned long eventmask,
            /* [in] */ VARIANT v) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaEventSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaEventSink * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaEventSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaEventSink * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GlobalEvent )( 
            IMgaEventSink * This,
            /* [in] */ globalevent_enum event);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ObjectEvent )( 
            IMgaEventSink * This,
            /* [in] */ IMgaObject *obj,
            /* [in] */ unsigned long eventmask,
            /* [in] */ VARIANT v);
        
        END_INTERFACE
    } IMgaEventSinkVtbl;

    interface IMgaEventSink
    {
        CONST_VTBL struct IMgaEventSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaEventSink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaEventSink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaEventSink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaEventSink_GlobalEvent(This,event)	\
    (This)->lpVtbl -> GlobalEvent(This,event)

#define IMgaEventSink_ObjectEvent(This,obj,eventmask,v)	\
    (This)->lpVtbl -> ObjectEvent(This,obj,eventmask,v)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaEventSink_GlobalEvent_Proxy( 
    IMgaEventSink * This,
    /* [in] */ globalevent_enum event);


void __RPC_STUB IMgaEventSink_GlobalEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaEventSink_ObjectEvent_Proxy( 
    IMgaEventSink * This,
    /* [in] */ IMgaObject *obj,
    /* [in] */ unsigned long eventmask,
    /* [in] */ VARIANT v);


void __RPC_STUB IMgaEventSink_ObjectEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaEventSink_INTERFACE_DEFINED__ */


#ifndef __IMgaAddOn_INTERFACE_DEFINED__
#define __IMgaAddOn_INTERFACE_DEFINED__

/* interface IMgaAddOn */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaAddOn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("80A6D661-D411-11D3-9AD5-00AA00B6FE26")
    IMgaAddOn : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Priority( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Priority( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventMask( 
            /* [in] */ unsigned long eventmask) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Destroy( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IMgaProject **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckProject( 
            /* [in] */ IMgaProject *project) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaAddOnVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaAddOn * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaAddOn * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaAddOn * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaAddOn * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaAddOn * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaAddOn * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaAddOn * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Priority )( 
            IMgaAddOn * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Priority )( 
            IMgaAddOn * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventMask )( 
            IMgaAddOn * This,
            /* [in] */ unsigned long eventmask);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            IMgaAddOn * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaAddOn * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaAddOn * This,
            /* [in] */ IMgaProject *project);
        
        END_INTERFACE
    } IMgaAddOnVtbl;

    interface IMgaAddOn
    {
        CONST_VTBL struct IMgaAddOnVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaAddOn_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaAddOn_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaAddOn_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaAddOn_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaAddOn_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaAddOn_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaAddOn_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaAddOn_get_Priority(This,pVal)	\
    (This)->lpVtbl -> get_Priority(This,pVal)

#define IMgaAddOn_put_Priority(This,newVal)	\
    (This)->lpVtbl -> put_Priority(This,newVal)

#define IMgaAddOn_put_EventMask(This,eventmask)	\
    (This)->lpVtbl -> put_EventMask(This,eventmask)

#define IMgaAddOn_Destroy(This)	\
    (This)->lpVtbl -> Destroy(This)

#define IMgaAddOn_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaAddOn_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_get_Priority_Proxy( 
    IMgaAddOn * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaAddOn_get_Priority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_put_Priority_Proxy( 
    IMgaAddOn * This,
    /* [in] */ long newVal);


void __RPC_STUB IMgaAddOn_put_Priority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_put_EventMask_Proxy( 
    IMgaAddOn * This,
    /* [in] */ unsigned long eventmask);


void __RPC_STUB IMgaAddOn_put_EventMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_Destroy_Proxy( 
    IMgaAddOn * This);


void __RPC_STUB IMgaAddOn_Destroy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_get_Project_Proxy( 
    IMgaAddOn * This,
    /* [retval][out] */ IMgaProject **pVal);


void __RPC_STUB IMgaAddOn_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOn_CheckProject_Proxy( 
    IMgaAddOn * This,
    /* [in] */ IMgaProject *project);


void __RPC_STUB IMgaAddOn_CheckProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaAddOn_INTERFACE_DEFINED__ */


#ifndef __IMgaComponent_INTERFACE_DEFINED__
#define __IMgaComponent_INTERFACE_DEFINED__

/* interface IMgaComponent */
/* [unique][helpstring][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IMgaComponent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11BB02D9-2E2C-11D3-B36D-0060082DF884")
    IMgaComponent : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Initialize( 
            IMgaProject *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Enable( 
            VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InteractiveMode( 
            /* [retval][out] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_InteractiveMode( 
            /* [in] */ VARIANT_BOOL enabled) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentType( 
            /* [retval][out] */ componenttype_enum *t) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Paradigm( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaComponentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaComponent * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaComponent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaComponent * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaComponent * This,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IMgaComponent * This,
            IMgaProject *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Enable )( 
            IMgaComponent * This,
            VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InteractiveMode )( 
            IMgaComponent * This,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InteractiveMode )( 
            IMgaComponent * This,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentName )( 
            IMgaComponent * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentType )( 
            IMgaComponent * This,
            /* [retval][out] */ componenttype_enum *t);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Paradigm )( 
            IMgaComponent * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IMgaComponentVtbl;

    interface IMgaComponent
    {
        CONST_VTBL struct IMgaComponentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaComponent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaComponent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaComponent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaComponent_Invoke(This,project,selectedobjs,param)	\
    (This)->lpVtbl -> Invoke(This,project,selectedobjs,param)

#define IMgaComponent_Initialize(This,p)	\
    (This)->lpVtbl -> Initialize(This,p)

#define IMgaComponent_Enable(This,newVal)	\
    (This)->lpVtbl -> Enable(This,newVal)

#define IMgaComponent_get_InteractiveMode(This,enabled)	\
    (This)->lpVtbl -> get_InteractiveMode(This,enabled)

#define IMgaComponent_put_InteractiveMode(This,enabled)	\
    (This)->lpVtbl -> put_InteractiveMode(This,enabled)

#define IMgaComponent_get_ComponentName(This,pVal)	\
    (This)->lpVtbl -> get_ComponentName(This,pVal)

#define IMgaComponent_get_ComponentType(This,t)	\
    (This)->lpVtbl -> get_ComponentType(This,t)

#define IMgaComponent_get_Paradigm(This,pVal)	\
    (This)->lpVtbl -> get_Paradigm(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponent_Invoke_Proxy( 
    IMgaComponent * This,
    /* [in] */ IMgaProject *project,
    /* [in] */ IMgaFCOs *selectedobjs,
    /* [in] */ long param);


void __RPC_STUB IMgaComponent_Invoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponent_Initialize_Proxy( 
    IMgaComponent * This,
    IMgaProject *p);


void __RPC_STUB IMgaComponent_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponent_Enable_Proxy( 
    IMgaComponent * This,
    VARIANT_BOOL newVal);


void __RPC_STUB IMgaComponent_Enable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponent_get_InteractiveMode_Proxy( 
    IMgaComponent * This,
    /* [retval][out] */ VARIANT_BOOL *enabled);


void __RPC_STUB IMgaComponent_get_InteractiveMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaComponent_put_InteractiveMode_Proxy( 
    IMgaComponent * This,
    /* [in] */ VARIANT_BOOL enabled);


void __RPC_STUB IMgaComponent_put_InteractiveMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponent_get_ComponentName_Proxy( 
    IMgaComponent * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaComponent_get_ComponentName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponent_get_ComponentType_Proxy( 
    IMgaComponent * This,
    /* [retval][out] */ componenttype_enum *t);


void __RPC_STUB IMgaComponent_get_ComponentType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponent_get_Paradigm_Proxy( 
    IMgaComponent * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaComponent_get_Paradigm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaComponent_INTERFACE_DEFINED__ */


#ifndef __IMgaComponentEx_INTERFACE_DEFINED__
#define __IMgaComponentEx_INTERFACE_DEFINED__

/* interface IMgaComponentEx */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMgaComponentEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11BB44D9-2E2C-11D3-B36D-0060082DF884")
    IMgaComponentEx : public IMgaComponent
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeEx( 
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCO *currentobj,
            /* [out][in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ObjectsInvokeEx( 
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaObject *currentobj,
            /* [out][in] */ IMgaObjects *selectedobjs,
            /* [in] */ long param) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentProgID( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ComponentParameter( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentParameter( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaComponentExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaComponentEx * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaComponentEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaComponentEx * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaComponentEx * This,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IMgaComponentEx * This,
            IMgaProject *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Enable )( 
            IMgaComponentEx * This,
            VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InteractiveMode )( 
            IMgaComponentEx * This,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InteractiveMode )( 
            IMgaComponentEx * This,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentName )( 
            IMgaComponentEx * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentType )( 
            IMgaComponentEx * This,
            /* [retval][out] */ componenttype_enum *t);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Paradigm )( 
            IMgaComponentEx * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeEx )( 
            IMgaComponentEx * This,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCO *currentobj,
            /* [out][in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ObjectsInvokeEx )( 
            IMgaComponentEx * This,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaObject *currentobj,
            /* [out][in] */ IMgaObjects *selectedobjs,
            /* [in] */ long param);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentProgID )( 
            IMgaComponentEx * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ComponentParameter )( 
            IMgaComponentEx * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentParameter )( 
            IMgaComponentEx * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        END_INTERFACE
    } IMgaComponentExVtbl;

    interface IMgaComponentEx
    {
        CONST_VTBL struct IMgaComponentExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaComponentEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaComponentEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaComponentEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaComponentEx_Invoke(This,project,selectedobjs,param)	\
    (This)->lpVtbl -> Invoke(This,project,selectedobjs,param)

#define IMgaComponentEx_Initialize(This,p)	\
    (This)->lpVtbl -> Initialize(This,p)

#define IMgaComponentEx_Enable(This,newVal)	\
    (This)->lpVtbl -> Enable(This,newVal)

#define IMgaComponentEx_get_InteractiveMode(This,enabled)	\
    (This)->lpVtbl -> get_InteractiveMode(This,enabled)

#define IMgaComponentEx_put_InteractiveMode(This,enabled)	\
    (This)->lpVtbl -> put_InteractiveMode(This,enabled)

#define IMgaComponentEx_get_ComponentName(This,pVal)	\
    (This)->lpVtbl -> get_ComponentName(This,pVal)

#define IMgaComponentEx_get_ComponentType(This,t)	\
    (This)->lpVtbl -> get_ComponentType(This,t)

#define IMgaComponentEx_get_Paradigm(This,pVal)	\
    (This)->lpVtbl -> get_Paradigm(This,pVal)


#define IMgaComponentEx_InvokeEx(This,project,currentobj,selectedobjs,param)	\
    (This)->lpVtbl -> InvokeEx(This,project,currentobj,selectedobjs,param)

#define IMgaComponentEx_ObjectsInvokeEx(This,project,currentobj,selectedobjs,param)	\
    (This)->lpVtbl -> ObjectsInvokeEx(This,project,currentobj,selectedobjs,param)

#define IMgaComponentEx_get_ComponentProgID(This,pVal)	\
    (This)->lpVtbl -> get_ComponentProgID(This,pVal)

#define IMgaComponentEx_put_ComponentParameter(This,name,newVal)	\
    (This)->lpVtbl -> put_ComponentParameter(This,name,newVal)

#define IMgaComponentEx_get_ComponentParameter(This,name,pVal)	\
    (This)->lpVtbl -> get_ComponentParameter(This,name,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponentEx_InvokeEx_Proxy( 
    IMgaComponentEx * This,
    /* [in] */ IMgaProject *project,
    /* [in] */ IMgaFCO *currentobj,
    /* [out][in] */ IMgaFCOs *selectedobjs,
    /* [in] */ long param);


void __RPC_STUB IMgaComponentEx_InvokeEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponentEx_ObjectsInvokeEx_Proxy( 
    IMgaComponentEx * This,
    /* [in] */ IMgaProject *project,
    /* [in] */ IMgaObject *currentobj,
    /* [out][in] */ IMgaObjects *selectedobjs,
    /* [in] */ long param);


void __RPC_STUB IMgaComponentEx_ObjectsInvokeEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponentEx_get_ComponentProgID_Proxy( 
    IMgaComponentEx * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaComponentEx_get_ComponentProgID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaComponentEx_put_ComponentParameter_Proxy( 
    IMgaComponentEx * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IMgaComponentEx_put_ComponentParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponentEx_get_ComponentParameter_Proxy( 
    IMgaComponentEx * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaComponentEx_get_ComponentParameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaComponentEx_INTERFACE_DEFINED__ */


#ifndef __IMgaClient_INTERFACE_DEFINED__
#define __IMgaClient_INTERFACE_DEFINED__

/* interface IMgaClient */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F07EE1A2-2D53-449b-A2DA-45A1A9110E53")
    IMgaClient : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OLEServer( 
            /* [retval][out] */ IDispatch **pServer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IMgaProject **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Destroy( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaClient * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaClient * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaClient * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaClient * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaClient * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaClient * This,
            /* [retval][out] */ BSTR *pName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OLEServer )( 
            IMgaClient * This,
            /* [retval][out] */ IDispatch **pServer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaClient * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            IMgaClient * This);
        
        END_INTERFACE
    } IMgaClientVtbl;

    interface IMgaClient
    {
        CONST_VTBL struct IMgaClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaClient_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaClient_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaClient_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaClient_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaClient_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaClient_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaClient_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaClient_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IMgaClient_get_OLEServer(This,pServer)	\
    (This)->lpVtbl -> get_OLEServer(This,pServer)

#define IMgaClient_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaClient_Destroy(This)	\
    (This)->lpVtbl -> Destroy(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaClient_get_Name_Proxy( 
    IMgaClient * This,
    /* [retval][out] */ BSTR *pName);


void __RPC_STUB IMgaClient_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaClient_get_OLEServer_Proxy( 
    IMgaClient * This,
    /* [retval][out] */ IDispatch **pServer);


void __RPC_STUB IMgaClient_get_OLEServer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaClient_get_Project_Proxy( 
    IMgaClient * This,
    /* [retval][out] */ IMgaProject **pVal);


void __RPC_STUB IMgaClient_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClient_Destroy_Proxy( 
    IMgaClient * This);


void __RPC_STUB IMgaClient_Destroy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaClient_INTERFACE_DEFINED__ */


#ifndef __IMgaTerritory_INTERFACE_DEFINED__
#define __IMgaTerritory_INTERFACE_DEFINED__

/* interface IMgaTerritory */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaTerritory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("32D1F3A3-D276-11D3-9AD5-00AA00B6FE26")
    IMgaTerritory : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Destroy( void) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventMask( 
            /* [in] */ unsigned long eventmask) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RWEventMask( 
            /* [in] */ unsigned long eventmask) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Associate( 
            /* [in] */ IMgaObject *obj,
            /* [in] */ VARIANT userdata) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OpenObj( 
            /* [in] */ IMgaObject *obj,
            /* [out][in] */ IMgaObject **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OpenFCO( 
            /* [in] */ IMgaFCO *obj,
            /* [out][in] */ IMgaFCO **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OpenFCOs( 
            /* [in] */ IMgaFCOs *obj,
            /* [out][in] */ IMgaFCOs **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CloseObj( 
            /* [in] */ IMgaObject *obj) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IMgaProject **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckProject( 
            /* [in] */ IMgaProject *project) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaTerritoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaTerritory * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaTerritory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaTerritory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaTerritory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaTerritory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaTerritory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaTerritory * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMgaTerritory * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            IMgaTerritory * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventMask )( 
            IMgaTerritory * This,
            /* [in] */ unsigned long eventmask);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RWEventMask )( 
            IMgaTerritory * This,
            /* [in] */ unsigned long eventmask);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaTerritory * This,
            /* [in] */ IMgaObject *obj,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OpenObj )( 
            IMgaTerritory * This,
            /* [in] */ IMgaObject *obj,
            /* [out][in] */ IMgaObject **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OpenFCO )( 
            IMgaTerritory * This,
            /* [in] */ IMgaFCO *obj,
            /* [out][in] */ IMgaFCO **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OpenFCOs )( 
            IMgaTerritory * This,
            /* [in] */ IMgaFCOs *obj,
            /* [out][in] */ IMgaFCOs **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CloseObj )( 
            IMgaTerritory * This,
            /* [in] */ IMgaObject *obj);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaTerritory * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaTerritory * This,
            /* [in] */ IMgaProject *project);
        
        END_INTERFACE
    } IMgaTerritoryVtbl;

    interface IMgaTerritory
    {
        CONST_VTBL struct IMgaTerritoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaTerritory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaTerritory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaTerritory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaTerritory_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaTerritory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaTerritory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaTerritory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaTerritory_Flush(This)	\
    (This)->lpVtbl -> Flush(This)

#define IMgaTerritory_Destroy(This)	\
    (This)->lpVtbl -> Destroy(This)

#define IMgaTerritory_put_EventMask(This,eventmask)	\
    (This)->lpVtbl -> put_EventMask(This,eventmask)

#define IMgaTerritory_put_RWEventMask(This,eventmask)	\
    (This)->lpVtbl -> put_RWEventMask(This,eventmask)

#define IMgaTerritory_Associate(This,obj,userdata)	\
    (This)->lpVtbl -> Associate(This,obj,userdata)

#define IMgaTerritory_OpenObj(This,obj,newobj)	\
    (This)->lpVtbl -> OpenObj(This,obj,newobj)

#define IMgaTerritory_OpenFCO(This,obj,newobj)	\
    (This)->lpVtbl -> OpenFCO(This,obj,newobj)

#define IMgaTerritory_OpenFCOs(This,obj,newobj)	\
    (This)->lpVtbl -> OpenFCOs(This,obj,newobj)

#define IMgaTerritory_CloseObj(This,obj)	\
    (This)->lpVtbl -> CloseObj(This,obj)

#define IMgaTerritory_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaTerritory_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_Flush_Proxy( 
    IMgaTerritory * This);


void __RPC_STUB IMgaTerritory_Flush_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_Destroy_Proxy( 
    IMgaTerritory * This);


void __RPC_STUB IMgaTerritory_Destroy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_put_EventMask_Proxy( 
    IMgaTerritory * This,
    /* [in] */ unsigned long eventmask);


void __RPC_STUB IMgaTerritory_put_EventMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_put_RWEventMask_Proxy( 
    IMgaTerritory * This,
    /* [in] */ unsigned long eventmask);


void __RPC_STUB IMgaTerritory_put_RWEventMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_Associate_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaObject *obj,
    /* [in] */ VARIANT userdata);


void __RPC_STUB IMgaTerritory_Associate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_OpenObj_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaObject *obj,
    /* [out][in] */ IMgaObject **newobj);


void __RPC_STUB IMgaTerritory_OpenObj_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_OpenFCO_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaFCO *obj,
    /* [out][in] */ IMgaFCO **newobj);


void __RPC_STUB IMgaTerritory_OpenFCO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_OpenFCOs_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaFCOs *obj,
    /* [out][in] */ IMgaFCOs **newobj);


void __RPC_STUB IMgaTerritory_OpenFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_CloseObj_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaObject *obj);


void __RPC_STUB IMgaTerritory_CloseObj_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_get_Project_Proxy( 
    IMgaTerritory * This,
    /* [retval][out] */ IMgaProject **pVal);


void __RPC_STUB IMgaTerritory_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritory_CheckProject_Proxy( 
    IMgaTerritory * This,
    /* [in] */ IMgaProject *project);


void __RPC_STUB IMgaTerritory_CheckProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaTerritory_INTERFACE_DEFINED__ */


#ifndef __IMgaObject_INTERFACE_DEFINED__
#define __IMgaObject_INTERFACE_DEFINED__

/* interface IMgaObject */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("32D1F3A7-D276-11D3-9AD5-00AA00B6FE26")
    IMgaObject : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsWritable( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ ID_type *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaBase( 
            /* [retval][out] */ IMgaMetaBase **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjType( 
            /* [retval][out] */ objtype_enum *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IMgaProject **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Territory( 
            /* [retval][out] */ IMgaTerritory **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsEqual( 
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParent( 
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype = 0) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckProject( 
            /* [in] */ IMgaProject *project) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DestroyObject( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [defaultvalue][in] */ openmode mode = OPEN_READ) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Associate( 
            /* [in] */ VARIANT userdata) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentAssociation( 
            /* [retval][out] */ VARIANT *userdata) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SendEvent( 
            /* [in] */ long mask) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RelID( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RelID( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsLibObject( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Check( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckTree( void) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Exempt( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Exempt( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ChildObjects( 
            /* [retval][out] */ IMgaObjects **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ChildObjectByRelID( 
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjectByPath( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaObject * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaObject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaObject * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaObject * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaObject * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaObject * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaObject * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaObject * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaObject * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaObject * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaObject * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaObject * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaObject * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaObject * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaObject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaObject * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaObject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaObject * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaObject * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaObject * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaObject * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaObject * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaObject * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaObject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaObject * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaObject * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaObject * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaObject * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaObject * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaObject * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        END_INTERFACE
    } IMgaObjectVtbl;

    interface IMgaObject
    {
        CONST_VTBL struct IMgaObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaObject_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaObject_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaObject_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaObject_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaObject_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaObject_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaObject_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaObject_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaObject_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaObject_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaObject_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaObject_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaObject_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaObject_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaObject_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaObject_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaObject_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaObject_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaObject_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaObject_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaObject_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaObject_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaObject_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaObject_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaObject_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaObject_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaObject_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaObject_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_Status_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaObject_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_IsWritable_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaObject_get_IsWritable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_ID_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ ID_type *pVal);


void __RPC_STUB IMgaObject_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_Name_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaObject_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaObject_put_Name_Proxy( 
    IMgaObject * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaObject_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_MetaBase_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ IMgaMetaBase **pVal);


void __RPC_STUB IMgaObject_get_MetaBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_ObjType_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ objtype_enum *pVal);


void __RPC_STUB IMgaObject_get_ObjType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_Project_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ IMgaProject **pVal);


void __RPC_STUB IMgaObject_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_Territory_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ IMgaTerritory **pVal);


void __RPC_STUB IMgaObject_get_Territory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_IsEqual_Proxy( 
    IMgaObject * This,
    /* [in] */ IMgaObject *o,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaObject_get_IsEqual_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_GetParent_Proxy( 
    IMgaObject * This,
    /* [out] */ IMgaObject **pVal,
    /* [defaultvalue][out] */ objtype_enum *objtype);


void __RPC_STUB IMgaObject_GetParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_CheckProject_Proxy( 
    IMgaObject * This,
    /* [in] */ IMgaProject *project);


void __RPC_STUB IMgaObject_CheckProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_DestroyObject_Proxy( 
    IMgaObject * This);


void __RPC_STUB IMgaObject_DestroyObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_Open_Proxy( 
    IMgaObject * This,
    /* [defaultvalue][in] */ openmode mode);


void __RPC_STUB IMgaObject_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_Close_Proxy( 
    IMgaObject * This);


void __RPC_STUB IMgaObject_Close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_Associate_Proxy( 
    IMgaObject * This,
    /* [in] */ VARIANT userdata);


void __RPC_STUB IMgaObject_Associate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_CurrentAssociation_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ VARIANT *userdata);


void __RPC_STUB IMgaObject_get_CurrentAssociation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_SendEvent_Proxy( 
    IMgaObject * This,
    /* [in] */ long mask);


void __RPC_STUB IMgaObject_SendEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_RelID_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaObject_get_RelID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaObject_put_RelID_Proxy( 
    IMgaObject * This,
    /* [in] */ long newVal);


void __RPC_STUB IMgaObject_put_RelID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_IsLibObject_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaObject_get_IsLibObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_Check_Proxy( 
    IMgaObject * This);


void __RPC_STUB IMgaObject_Check_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObject_CheckTree_Proxy( 
    IMgaObject * This);


void __RPC_STUB IMgaObject_CheckTree_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaObject_put_Exempt_Proxy( 
    IMgaObject * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMgaObject_put_Exempt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_Exempt_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaObject_get_Exempt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_ChildObjects_Proxy( 
    IMgaObject * This,
    /* [retval][out] */ IMgaObjects **pVal);


void __RPC_STUB IMgaObject_get_ChildObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_ChildObjectByRelID_Proxy( 
    IMgaObject * This,
    /* [in] */ long relid,
    /* [retval][out] */ IMgaObject **pVal);


void __RPC_STUB IMgaObject_get_ChildObjectByRelID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObject_get_ObjectByPath_Proxy( 
    IMgaObject * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaObject **pVal);


void __RPC_STUB IMgaObject_get_ObjectByPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaObject_INTERFACE_DEFINED__ */


#ifndef __IMgaFCO_INTERFACE_DEFINED__
#define __IMgaFCO_INTERFACE_DEFINED__

/* interface IMgaFCO */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaFCO;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F98-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaFCO : public IMgaObject
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Meta( 
            /* [retval][out] */ IMgaMetaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaRole( 
            /* [retval][out] */ IMgaMetaRole **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentModel( 
            /* [retval][out] */ IMgaModel **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentFolder( 
            /* [retval][out] */ IMgaFolder **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parts( 
            /* [retval][out] */ IMgaParts **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Part( 
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PartByMetaPart( 
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ IMgaAttributes **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Attribute( 
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AttributeByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AttributeByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StrAttrByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_StrAttrByName( 
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IntAttrByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IntAttrByName( 
            /* [in] */ BSTR name,
            /* [in] */ long newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FloatAttrByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_FloatAttrByName( 
            /* [in] */ BSTR name,
            /* [in] */ double newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BoolAttrByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_BoolAttrByName( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RefAttrByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RefAttrByName( 
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ClearAttrByName( 
            /* [in] */ BSTR name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Registry( 
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Constraints( 
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddConstraint( 
            /* [in] */ IMgaConstraint *constraint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DefineConstraint( 
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DerivedFrom( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DerivedObjects( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BaseType( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ArcheType( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsInstance( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsPrimaryDerived( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AttachToArcheType( 
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DetachFromArcheType( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAbsMetaPath( 
            /* [out][in] */ BSTR *abspath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetRelMetaPath( 
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs = 0) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PartOfConns( 
            /* [retval][out] */ IMgaConnPoints **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MemberOfSets( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ReferencedBy( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateCollection( 
            /* [out][in] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RootFCO( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaFCOVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaFCO * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaFCO * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaFCO * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaFCO * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaFCO * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaFCO * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaFCO * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaFCO * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaFCO * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaFCO * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaFCO * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaFCO * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaFCO * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaFCO * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaFCO * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaFCO * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaFCO * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaFCO * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaFCO * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaFCO * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaFCO * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaFCO * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaFCO * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaFCO * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaFCO * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaFCO * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaFCO * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaFCO * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaFCO * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaFCO * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaFCO * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaFCO * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaFCO * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaFCO * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaFCO * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaFCO * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaFCO * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaFCO * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaFCO * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaFCO * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaFCO * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaFCO * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaFCO * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaFCO * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaFCO * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        END_INTERFACE
    } IMgaFCOVtbl;

    interface IMgaFCO
    {
        CONST_VTBL struct IMgaFCOVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaFCO_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaFCO_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaFCO_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaFCO_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaFCO_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaFCO_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaFCO_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaFCO_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaFCO_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaFCO_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaFCO_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaFCO_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaFCO_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaFCO_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaFCO_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaFCO_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaFCO_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaFCO_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaFCO_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaFCO_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaFCO_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaFCO_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaFCO_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaFCO_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaFCO_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaFCO_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaFCO_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaFCO_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaFCO_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaFCO_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaFCO_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaFCO_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaFCO_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaFCO_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaFCO_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaFCO_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaFCO_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaFCO_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaFCO_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaFCO_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaFCO_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaFCO_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaFCO_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaFCO_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaFCO_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaFCO_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaFCO_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaFCO_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaFCO_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaFCO_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaFCO_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaFCO_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaFCO_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaFCO_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaFCO_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaFCO_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaFCO_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaFCO_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaFCO_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaFCO_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaFCO_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaFCO_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaFCO_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaFCO_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaFCO_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaFCO_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaFCO_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaFCO_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaFCO_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaFCO_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaFCO_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaFCO_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaFCO_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaFCO_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaFCO_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaFCO_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaFCO_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaFCO_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaFCO_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaFCO_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Meta_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaMetaFCO **pVal);


void __RPC_STUB IMgaFCO_get_Meta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_MetaRole_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaMetaRole **pVal);


void __RPC_STUB IMgaFCO_get_MetaRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_ParentModel_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaModel **pVal);


void __RPC_STUB IMgaFCO_get_ParentModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_ParentFolder_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFolder **pVal);


void __RPC_STUB IMgaFCO_get_ParentFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Parts_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaParts **pVal);


void __RPC_STUB IMgaFCO_get_Parts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Part_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaMetaAspect *asp,
    /* [retval][out] */ IMgaPart **pVal);


void __RPC_STUB IMgaFCO_get_Part_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_PartByMetaPart_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaMetaPart *part,
    /* [retval][out] */ IMgaPart **pVal);


void __RPC_STUB IMgaFCO_get_PartByMetaPart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Attributes_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaAttributes **pVal);


void __RPC_STUB IMgaFCO_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Attribute_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaMetaAttribute *meta,
    /* [retval][out] */ IMgaAttribute **pVal);


void __RPC_STUB IMgaFCO_get_Attribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_AttributeByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaFCO_get_AttributeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_AttributeByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT newval);


void __RPC_STUB IMgaFCO_put_AttributeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_StrAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFCO_get_StrAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_StrAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaFCO_put_StrAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_IntAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaFCO_get_IntAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_IntAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ long newval);


void __RPC_STUB IMgaFCO_put_IntAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_FloatAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IMgaFCO_get_FloatAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_FloatAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ double newval);


void __RPC_STUB IMgaFCO_put_FloatAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_BoolAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaFCO_get_BoolAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_BoolAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT_BOOL newval);


void __RPC_STUB IMgaFCO_put_BoolAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_RefAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_RefAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_RefAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ IMgaFCO *newval);


void __RPC_STUB IMgaFCO_put_RefAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_ClearAttrByName_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name);


void __RPC_STUB IMgaFCO_ClearAttrByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_RegistryNode_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaRegNode **pVal);


void __RPC_STUB IMgaFCO_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Registry_Proxy( 
    IMgaFCO * This,
    /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
    /* [retval][out] */ IMgaRegNodes **pVal);


void __RPC_STUB IMgaFCO_get_Registry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_RegistryValue_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFCO_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_put_RegistryValue_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaFCO_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Constraints_Proxy( 
    IMgaFCO * This,
    /* [in] */ VARIANT_BOOL includemeta,
    /* [retval][out] */ IMgaConstraints **pVal);


void __RPC_STUB IMgaFCO_get_Constraints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_AddConstraint_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaConstraint *constraint);


void __RPC_STUB IMgaFCO_AddConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFCO_DefineConstraint_Proxy( 
    IMgaFCO * This,
    /* [in] */ BSTR name,
    /* [in] */ long mask,
    /* [in] */ BSTR expr,
    /* [out] */ IMgaConstraint **nconstraint);


void __RPC_STUB IMgaFCO_DefineConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_DerivedFrom_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_DerivedFrom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_DerivedObjects_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaFCO_get_DerivedObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_Type_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_BaseType_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_BaseType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_ArcheType_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_ArcheType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_IsInstance_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaFCO_get_IsInstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_IsPrimaryDerived_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaFCO_get_IsPrimaryDerived_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_AttachToArcheType_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaFCO *newtype,
    /* [in] */ VARIANT_BOOL instance);


void __RPC_STUB IMgaFCO_AttachToArcheType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_DetachFromArcheType_Proxy( 
    IMgaFCO * This);


void __RPC_STUB IMgaFCO_DetachFromArcheType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_GetAbsMetaPath_Proxy( 
    IMgaFCO * This,
    /* [out][in] */ BSTR *abspath);


void __RPC_STUB IMgaFCO_GetAbsMetaPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_GetRelMetaPath_Proxy( 
    IMgaFCO * This,
    /* [in] */ IMgaFCO *begfco,
    /* [out][in] */ BSTR *relpath,
    /* [defaultvalue][in] */ IMgaFCOs *refs);


void __RPC_STUB IMgaFCO_GetRelMetaPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_PartOfConns_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaConnPoints **pVal);


void __RPC_STUB IMgaFCO_get_PartOfConns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_MemberOfSets_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaFCO_get_MemberOfSets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_ReferencedBy_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaFCO_get_ReferencedBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCO_CreateCollection_Proxy( 
    IMgaFCO * This,
    /* [out][in] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaFCO_CreateCollection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCO_get_RootFCO_Proxy( 
    IMgaFCO * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFCO_get_RootFCO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaFCO_INTERFACE_DEFINED__ */


#ifndef __IMgaFolder_INTERFACE_DEFINED__
#define __IMgaFolder_INTERFACE_DEFINED__

/* interface IMgaFolder */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F96-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaFolder : public IMgaObject
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaFolder( 
            /* [retval][out] */ IMgaMetaFolder **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentFolder( 
            /* [retval][out] */ IMgaFolder **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ChildFolders( 
            /* [retval][out] */ IMgaFolders **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateFolder( 
            /* [in] */ IMgaMetaFolder *meta,
            /* [out] */ IMgaFolder **nf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateRootObject( 
            /* [in] */ IMgaMetaFCO *meta,
            /* [out] */ IMgaFCO **nobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeriveRootObject( 
            /* [in] */ IMgaFCO *base,
            /* [in] */ VARIANT_BOOL instance,
            /* [out] */ IMgaFCO **nobj) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Registry( 
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Constraints( 
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddConstraint( 
            /* [in] */ IMgaConstraint *constraint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DefineConstraint( 
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveFCOs( 
            /* [in] */ IMgaFCOs *to_copy,
            /* [out] */ IMgaFCOs **objs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyFCOs( 
            /* [in] */ IMgaFCOs *to_move,
            /* [out] */ IMgaFCOs **objs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildFCOs( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildFCO( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDescendantFCOs( 
            /* [in] */ IMgaFilter *filter,
            /* [out] */ IMgaFCOs **returnset) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetChildrenOfKind( 
            /* [in] */ BSTR kindname,
            /* [out] */ IMgaFCOs **returnset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildRelIDCounter( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ChildRelIDCounter( 
            /* [in] */ long pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AttachLibrary( 
            /* [in] */ BSTR connstring,
            /* [out] */ IMgaFolder **nf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RefreshLibrary( 
            /* [in] */ BSTR connstring) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LibraryName( 
            /* [retval][out] */ BSTR *connstring) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_LibraryName( 
            /* [in] */ BSTR connstring) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaFolder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaFolder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaFolder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaFolder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaFolder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaFolder * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaFolder * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaFolder * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaFolder * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaFolder * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaFolder * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaFolder * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaFolder * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaFolder * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaFolder * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaFolder * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaFolder * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaFolder * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaFolder * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaFolder * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaFolder * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaFolder * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaFolder * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaFolder * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaFolder * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaFolder * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaFolder * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaFolder * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaFolder * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaFolder )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaMetaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildFolders )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaFolders **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateFolder )( 
            IMgaFolder * This,
            /* [in] */ IMgaMetaFolder *meta,
            /* [out] */ IMgaFolder **nf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateRootObject )( 
            IMgaFolder * This,
            /* [in] */ IMgaMetaFCO *meta,
            /* [out] */ IMgaFCO **nobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeriveRootObject )( 
            IMgaFolder * This,
            /* [in] */ IMgaFCO *base,
            /* [in] */ VARIANT_BOOL instance,
            /* [out] */ IMgaFCO **nobj);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaFolder * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaFolder * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaFolder * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaFolder * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaFolder * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaFolder * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaFolder * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveFCOs )( 
            IMgaFolder * This,
            /* [in] */ IMgaFCOs *to_copy,
            /* [out] */ IMgaFCOs **objs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFCOs )( 
            IMgaFolder * This,
            /* [in] */ IMgaFCOs *to_move,
            /* [out] */ IMgaFCOs **objs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildFCOs )( 
            IMgaFolder * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildFCO )( 
            IMgaFolder * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDescendantFCOs )( 
            IMgaFolder * This,
            /* [in] */ IMgaFilter *filter,
            /* [out] */ IMgaFCOs **returnset);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetChildrenOfKind )( 
            IMgaFolder * This,
            /* [in] */ BSTR kindname,
            /* [out] */ IMgaFCOs **returnset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildRelIDCounter )( 
            IMgaFolder * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ChildRelIDCounter )( 
            IMgaFolder * This,
            /* [in] */ long pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachLibrary )( 
            IMgaFolder * This,
            /* [in] */ BSTR connstring,
            /* [out] */ IMgaFolder **nf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshLibrary )( 
            IMgaFolder * This,
            /* [in] */ BSTR connstring);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LibraryName )( 
            IMgaFolder * This,
            /* [retval][out] */ BSTR *connstring);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LibraryName )( 
            IMgaFolder * This,
            /* [in] */ BSTR connstring);
        
        END_INTERFACE
    } IMgaFolderVtbl;

    interface IMgaFolder
    {
        CONST_VTBL struct IMgaFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaFolder_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaFolder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaFolder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaFolder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaFolder_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaFolder_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaFolder_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaFolder_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaFolder_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaFolder_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaFolder_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaFolder_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaFolder_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaFolder_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaFolder_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaFolder_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaFolder_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaFolder_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaFolder_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaFolder_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaFolder_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaFolder_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaFolder_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaFolder_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaFolder_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaFolder_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaFolder_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaFolder_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaFolder_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaFolder_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaFolder_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaFolder_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaFolder_get_MetaFolder(This,pVal)	\
    (This)->lpVtbl -> get_MetaFolder(This,pVal)

#define IMgaFolder_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaFolder_get_ChildFolders(This,pVal)	\
    (This)->lpVtbl -> get_ChildFolders(This,pVal)

#define IMgaFolder_CreateFolder(This,meta,nf)	\
    (This)->lpVtbl -> CreateFolder(This,meta,nf)

#define IMgaFolder_CreateRootObject(This,meta,nobj)	\
    (This)->lpVtbl -> CreateRootObject(This,meta,nobj)

#define IMgaFolder_DeriveRootObject(This,base,instance,nobj)	\
    (This)->lpVtbl -> DeriveRootObject(This,base,instance,nobj)

#define IMgaFolder_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaFolder_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaFolder_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaFolder_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaFolder_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaFolder_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaFolder_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaFolder_MoveFCOs(This,to_copy,objs)	\
    (This)->lpVtbl -> MoveFCOs(This,to_copy,objs)

#define IMgaFolder_CopyFCOs(This,to_move,objs)	\
    (This)->lpVtbl -> CopyFCOs(This,to_move,objs)

#define IMgaFolder_get_ChildFCOs(This,pVal)	\
    (This)->lpVtbl -> get_ChildFCOs(This,pVal)

#define IMgaFolder_get_ChildFCO(This,name,pVal)	\
    (This)->lpVtbl -> get_ChildFCO(This,name,pVal)

#define IMgaFolder_GetDescendantFCOs(This,filter,returnset)	\
    (This)->lpVtbl -> GetDescendantFCOs(This,filter,returnset)

#define IMgaFolder_GetChildrenOfKind(This,kindname,returnset)	\
    (This)->lpVtbl -> GetChildrenOfKind(This,kindname,returnset)

#define IMgaFolder_get_ChildRelIDCounter(This,pVal)	\
    (This)->lpVtbl -> get_ChildRelIDCounter(This,pVal)

#define IMgaFolder_put_ChildRelIDCounter(This,pVal)	\
    (This)->lpVtbl -> put_ChildRelIDCounter(This,pVal)

#define IMgaFolder_AttachLibrary(This,connstring,nf)	\
    (This)->lpVtbl -> AttachLibrary(This,connstring,nf)

#define IMgaFolder_RefreshLibrary(This,connstring)	\
    (This)->lpVtbl -> RefreshLibrary(This,connstring)

#define IMgaFolder_get_LibraryName(This,connstring)	\
    (This)->lpVtbl -> get_LibraryName(This,connstring)

#define IMgaFolder_put_LibraryName(This,connstring)	\
    (This)->lpVtbl -> put_LibraryName(This,connstring)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_MetaFolder_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ IMgaMetaFolder **pVal);


void __RPC_STUB IMgaFolder_get_MetaFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_ParentFolder_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ IMgaFolder **pVal);


void __RPC_STUB IMgaFolder_get_ParentFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_ChildFolders_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ IMgaFolders **pVal);


void __RPC_STUB IMgaFolder_get_ChildFolders_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolder_CreateFolder_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaMetaFolder *meta,
    /* [out] */ IMgaFolder **nf);


void __RPC_STUB IMgaFolder_CreateFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolder_CreateRootObject_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaMetaFCO *meta,
    /* [out] */ IMgaFCO **nobj);


void __RPC_STUB IMgaFolder_CreateRootObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolder_DeriveRootObject_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaFCO *base,
    /* [in] */ VARIANT_BOOL instance,
    /* [out] */ IMgaFCO **nobj);


void __RPC_STUB IMgaFolder_DeriveRootObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_RegistryNode_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaRegNode **pVal);


void __RPC_STUB IMgaFolder_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_Registry_Proxy( 
    IMgaFolder * This,
    /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
    /* [retval][out] */ IMgaRegNodes **pVal);


void __RPC_STUB IMgaFolder_get_Registry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_RegistryValue_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFolder_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_put_RegistryValue_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaFolder_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_Constraints_Proxy( 
    IMgaFolder * This,
    /* [in] */ VARIANT_BOOL includemeta,
    /* [retval][out] */ IMgaConstraints **pVal);


void __RPC_STUB IMgaFolder_get_Constraints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_AddConstraint_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaConstraint *constraint);


void __RPC_STUB IMgaFolder_AddConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_DefineConstraint_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR name,
    /* [in] */ long mask,
    /* [in] */ BSTR expr,
    /* [out] */ IMgaConstraint **nconstraint);


void __RPC_STUB IMgaFolder_DefineConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_MoveFCOs_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaFCOs *to_copy,
    /* [out] */ IMgaFCOs **objs);


void __RPC_STUB IMgaFolder_MoveFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_CopyFCOs_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaFCOs *to_move,
    /* [out] */ IMgaFCOs **objs);


void __RPC_STUB IMgaFolder_CopyFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_ChildFCOs_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaFolder_get_ChildFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_ChildFCO_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaFolder_get_ChildFCO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_GetDescendantFCOs_Proxy( 
    IMgaFolder * This,
    /* [in] */ IMgaFilter *filter,
    /* [out] */ IMgaFCOs **returnset);


void __RPC_STUB IMgaFolder_GetDescendantFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_GetChildrenOfKind_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR kindname,
    /* [out] */ IMgaFCOs **returnset);


void __RPC_STUB IMgaFolder_GetChildrenOfKind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_ChildRelIDCounter_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaFolder_get_ChildRelIDCounter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IMgaFolder_put_ChildRelIDCounter_Proxy( 
    IMgaFolder * This,
    /* [in] */ long pVal);


void __RPC_STUB IMgaFolder_put_ChildRelIDCounter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolder_AttachLibrary_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR connstring,
    /* [out] */ IMgaFolder **nf);


void __RPC_STUB IMgaFolder_AttachLibrary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolder_RefreshLibrary_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR connstring);


void __RPC_STUB IMgaFolder_RefreshLibrary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolder_get_LibraryName_Proxy( 
    IMgaFolder * This,
    /* [retval][out] */ BSTR *connstring);


void __RPC_STUB IMgaFolder_get_LibraryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFolder_put_LibraryName_Proxy( 
    IMgaFolder * This,
    /* [in] */ BSTR connstring);


void __RPC_STUB IMgaFolder_put_LibraryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaFolder_INTERFACE_DEFINED__ */


#ifndef __IMgaModel_INTERFACE_DEFINED__
#define __IMgaModel_INTERFACE_DEFINED__

/* interface IMgaModel */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaModel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F9A-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaModel : public IMgaFCO
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateChildObject( 
            /* [in] */ IMgaMetaRole *meta,
            /* [out] */ IMgaFCO **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeriveChildObject( 
            /* [in] */ IMgaFCO *base,
            /* [in] */ IMgaMetaRole *role,
            /* [in] */ VARIANT_BOOL instance,
            /* [out] */ IMgaFCO **newobj) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ChildDerivedFrom( 
            /* [in] */ IMgaFCO *baseobj,
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AspectParts( 
            /* [in] */ IMgaMetaAspect *asp,
            /* [in] */ unsigned int filter,
            /* [retval][out] */ IMgaParts **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateSimpleConn( 
            /* [in] */ IMgaMetaRole *meta,
            /* [in] */ IMgaFCO *src,
            /* [in] */ IMgaFCO *dst,
            /* [in] */ IMgaFCOs *srcrefs,
            /* [in] */ IMgaFCOs *dstrefs,
            /* [out] */ IMgaFCO **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateReference( 
            /* [in] */ IMgaMetaRole *meta,
            /* [in] */ IMgaFCO *target,
            /* [out] */ IMgaFCO **newobj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddInternalConnections( 
            /* [in] */ IMgaFCOs *inobjs,
            /* [out] */ IMgaFCOs **outobjs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveFCOs( 
            /* [in] */ IMgaFCOs *to_copy,
            /* [in] */ IMgaMetaRoles *destroles,
            /* [out] */ IMgaFCOs **objs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyFCOs( 
            /* [in] */ IMgaFCOs *to_move,
            /* [in] */ IMgaMetaRoles *destroles,
            /* [out] */ IMgaFCOs **objs) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildFCOs( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildFCO( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDescendantFCOs( 
            /* [in] */ IMgaFilter *filter,
            /* [out] */ IMgaFCOs **returnset) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetChildrenOfKind( 
            /* [in] */ BSTR kindname,
            /* [out] */ IMgaFCOs **returnset) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChildRelIDCounter( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ChildRelIDCounter( 
            /* [in] */ long pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaModelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaModel * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaModel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaModel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaModel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaModel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaModel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaModel * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaModel * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaModel * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaModel * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaModel * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaModel * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaModel * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaModel * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaModel * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaModel * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaModel * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaModel * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaModel * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaModel * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaModel * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaModel * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaModel * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaModel * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaModel * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaModel * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaModel * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaModel * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaModel * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaModel * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaModel * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaModel * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaModel * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaModel * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaModel * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaModel * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaModel * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaModel * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateChildObject )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaRole *meta,
            /* [out] */ IMgaFCO **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeriveChildObject )( 
            IMgaModel * This,
            /* [in] */ IMgaFCO *base,
            /* [in] */ IMgaMetaRole *role,
            /* [in] */ VARIANT_BOOL instance,
            /* [out] */ IMgaFCO **newobj);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildDerivedFrom )( 
            IMgaModel * This,
            /* [in] */ IMgaFCO *baseobj,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectParts )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [in] */ unsigned int filter,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateSimpleConn )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaRole *meta,
            /* [in] */ IMgaFCO *src,
            /* [in] */ IMgaFCO *dst,
            /* [in] */ IMgaFCOs *srcrefs,
            /* [in] */ IMgaFCOs *dstrefs,
            /* [out] */ IMgaFCO **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateReference )( 
            IMgaModel * This,
            /* [in] */ IMgaMetaRole *meta,
            /* [in] */ IMgaFCO *target,
            /* [out] */ IMgaFCO **newobj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddInternalConnections )( 
            IMgaModel * This,
            /* [in] */ IMgaFCOs *inobjs,
            /* [out] */ IMgaFCOs **outobjs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveFCOs )( 
            IMgaModel * This,
            /* [in] */ IMgaFCOs *to_copy,
            /* [in] */ IMgaMetaRoles *destroles,
            /* [out] */ IMgaFCOs **objs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyFCOs )( 
            IMgaModel * This,
            /* [in] */ IMgaFCOs *to_move,
            /* [in] */ IMgaMetaRoles *destroles,
            /* [out] */ IMgaFCOs **objs);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildFCOs )( 
            IMgaModel * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildFCO )( 
            IMgaModel * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDescendantFCOs )( 
            IMgaModel * This,
            /* [in] */ IMgaFilter *filter,
            /* [out] */ IMgaFCOs **returnset);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetChildrenOfKind )( 
            IMgaModel * This,
            /* [in] */ BSTR kindname,
            /* [out] */ IMgaFCOs **returnset);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChildRelIDCounter )( 
            IMgaModel * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ChildRelIDCounter )( 
            IMgaModel * This,
            /* [in] */ long pVal);
        
        END_INTERFACE
    } IMgaModelVtbl;

    interface IMgaModel
    {
        CONST_VTBL struct IMgaModelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaModel_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaModel_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaModel_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaModel_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaModel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaModel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaModel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaModel_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaModel_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaModel_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaModel_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaModel_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaModel_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaModel_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaModel_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaModel_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaModel_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaModel_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaModel_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaModel_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaModel_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaModel_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaModel_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaModel_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaModel_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaModel_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaModel_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaModel_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaModel_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaModel_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaModel_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaModel_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaModel_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaModel_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaModel_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaModel_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaModel_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaModel_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaModel_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaModel_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaModel_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaModel_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaModel_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaModel_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaModel_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaModel_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaModel_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaModel_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaModel_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaModel_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaModel_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaModel_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaModel_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaModel_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaModel_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaModel_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaModel_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaModel_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaModel_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaModel_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaModel_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaModel_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaModel_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaModel_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaModel_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaModel_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaModel_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaModel_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaModel_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaModel_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaModel_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaModel_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaModel_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaModel_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaModel_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaModel_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaModel_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaModel_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaModel_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaModel_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#define IMgaModel_CreateChildObject(This,meta,newobj)	\
    (This)->lpVtbl -> CreateChildObject(This,meta,newobj)

#define IMgaModel_DeriveChildObject(This,base,role,instance,newobj)	\
    (This)->lpVtbl -> DeriveChildObject(This,base,role,instance,newobj)

#define IMgaModel_get_ChildDerivedFrom(This,baseobj,pVal)	\
    (This)->lpVtbl -> get_ChildDerivedFrom(This,baseobj,pVal)

#define IMgaModel_get_AspectParts(This,asp,filter,pVal)	\
    (This)->lpVtbl -> get_AspectParts(This,asp,filter,pVal)

#define IMgaModel_CreateSimpleConn(This,meta,src,dst,srcrefs,dstrefs,newobj)	\
    (This)->lpVtbl -> CreateSimpleConn(This,meta,src,dst,srcrefs,dstrefs,newobj)

#define IMgaModel_CreateReference(This,meta,target,newobj)	\
    (This)->lpVtbl -> CreateReference(This,meta,target,newobj)

#define IMgaModel_AddInternalConnections(This,inobjs,outobjs)	\
    (This)->lpVtbl -> AddInternalConnections(This,inobjs,outobjs)

#define IMgaModel_MoveFCOs(This,to_copy,destroles,objs)	\
    (This)->lpVtbl -> MoveFCOs(This,to_copy,destroles,objs)

#define IMgaModel_CopyFCOs(This,to_move,destroles,objs)	\
    (This)->lpVtbl -> CopyFCOs(This,to_move,destroles,objs)

#define IMgaModel_get_ChildFCOs(This,pVal)	\
    (This)->lpVtbl -> get_ChildFCOs(This,pVal)

#define IMgaModel_get_ChildFCO(This,name,pVal)	\
    (This)->lpVtbl -> get_ChildFCO(This,name,pVal)

#define IMgaModel_GetDescendantFCOs(This,filter,returnset)	\
    (This)->lpVtbl -> GetDescendantFCOs(This,filter,returnset)

#define IMgaModel_GetChildrenOfKind(This,kindname,returnset)	\
    (This)->lpVtbl -> GetChildrenOfKind(This,kindname,returnset)

#define IMgaModel_get_ChildRelIDCounter(This,pVal)	\
    (This)->lpVtbl -> get_ChildRelIDCounter(This,pVal)

#define IMgaModel_put_ChildRelIDCounter(This,pVal)	\
    (This)->lpVtbl -> put_ChildRelIDCounter(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaModel_CreateChildObject_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaMetaRole *meta,
    /* [out] */ IMgaFCO **newobj);


void __RPC_STUB IMgaModel_CreateChildObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaModel_DeriveChildObject_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFCO *base,
    /* [in] */ IMgaMetaRole *role,
    /* [in] */ VARIANT_BOOL instance,
    /* [out] */ IMgaFCO **newobj);


void __RPC_STUB IMgaModel_DeriveChildObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaModel_get_ChildDerivedFrom_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFCO *baseobj,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaModel_get_ChildDerivedFrom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaModel_get_AspectParts_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaMetaAspect *asp,
    /* [in] */ unsigned int filter,
    /* [retval][out] */ IMgaParts **pVal);


void __RPC_STUB IMgaModel_get_AspectParts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaModel_CreateSimpleConn_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaMetaRole *meta,
    /* [in] */ IMgaFCO *src,
    /* [in] */ IMgaFCO *dst,
    /* [in] */ IMgaFCOs *srcrefs,
    /* [in] */ IMgaFCOs *dstrefs,
    /* [out] */ IMgaFCO **newobj);


void __RPC_STUB IMgaModel_CreateSimpleConn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaModel_CreateReference_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaMetaRole *meta,
    /* [in] */ IMgaFCO *target,
    /* [out] */ IMgaFCO **newobj);


void __RPC_STUB IMgaModel_CreateReference_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaModel_AddInternalConnections_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFCOs *inobjs,
    /* [out] */ IMgaFCOs **outobjs);


void __RPC_STUB IMgaModel_AddInternalConnections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_MoveFCOs_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFCOs *to_copy,
    /* [in] */ IMgaMetaRoles *destroles,
    /* [out] */ IMgaFCOs **objs);


void __RPC_STUB IMgaModel_MoveFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_CopyFCOs_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFCOs *to_move,
    /* [in] */ IMgaMetaRoles *destroles,
    /* [out] */ IMgaFCOs **objs);


void __RPC_STUB IMgaModel_CopyFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_get_ChildFCOs_Proxy( 
    IMgaModel * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaModel_get_ChildFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_get_ChildFCO_Proxy( 
    IMgaModel * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaModel_get_ChildFCO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_GetDescendantFCOs_Proxy( 
    IMgaModel * This,
    /* [in] */ IMgaFilter *filter,
    /* [out] */ IMgaFCOs **returnset);


void __RPC_STUB IMgaModel_GetDescendantFCOs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_GetChildrenOfKind_Proxy( 
    IMgaModel * This,
    /* [in] */ BSTR kindname,
    /* [out] */ IMgaFCOs **returnset);


void __RPC_STUB IMgaModel_GetChildrenOfKind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_get_ChildRelIDCounter_Proxy( 
    IMgaModel * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaModel_get_ChildRelIDCounter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE IMgaModel_put_ChildRelIDCounter_Proxy( 
    IMgaModel * This,
    /* [in] */ long pVal);


void __RPC_STUB IMgaModel_put_ChildRelIDCounter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaModel_INTERFACE_DEFINED__ */


#ifndef __IMgaAtom_INTERFACE_DEFINED__
#define __IMgaAtom_INTERFACE_DEFINED__

/* interface IMgaAtom */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaAtom;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F9C-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaAtom : public IMgaFCO
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IMgaAtomVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaAtom * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaAtom * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaAtom * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaAtom * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaAtom * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaAtom * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaAtom * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaAtom * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaAtom * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaAtom * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaAtom * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaAtom * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaAtom * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaAtom * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaAtom * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaAtom * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaAtom * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaAtom * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaAtom * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaAtom * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaAtom * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaAtom * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaAtom * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaAtom * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaAtom * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaAtom * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaAtom * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaAtom * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaAtom * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaAtom * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaAtom * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaAtom * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaAtom * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaAtom * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaAtom * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaAtom * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaAtom * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaAtom * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaAtom * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaAtom * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaAtom * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaAtom * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaAtom * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaAtom * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaAtom * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        END_INTERFACE
    } IMgaAtomVtbl;

    interface IMgaAtom
    {
        CONST_VTBL struct IMgaAtomVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaAtom_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaAtom_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaAtom_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaAtom_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaAtom_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaAtom_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaAtom_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaAtom_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaAtom_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaAtom_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaAtom_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaAtom_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaAtom_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaAtom_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaAtom_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaAtom_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaAtom_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaAtom_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaAtom_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaAtom_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaAtom_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaAtom_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaAtom_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaAtom_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaAtom_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaAtom_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaAtom_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaAtom_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaAtom_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaAtom_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaAtom_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaAtom_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaAtom_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaAtom_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaAtom_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaAtom_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaAtom_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaAtom_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaAtom_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaAtom_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaAtom_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaAtom_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaAtom_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaAtom_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaAtom_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaAtom_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaAtom_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaAtom_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaAtom_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaAtom_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaAtom_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaAtom_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaAtom_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaAtom_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaAtom_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaAtom_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaAtom_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaAtom_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaAtom_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaAtom_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaAtom_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaAtom_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaAtom_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaAtom_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaAtom_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaAtom_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaAtom_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaAtom_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaAtom_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaAtom_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaAtom_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaAtom_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaAtom_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaAtom_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaAtom_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaAtom_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaAtom_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaAtom_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaAtom_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaAtom_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMgaAtom_INTERFACE_DEFINED__ */


#ifndef __IMgaPart_INTERFACE_DEFINED__
#define __IMgaPart_INTERFACE_DEFINED__

/* interface IMgaPart */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaPart;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4F9E-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaPart : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Model( 
            /* [retval][out] */ IMgaModel **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Meta( 
            /* [retval][out] */ IMgaMetaPart **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaAspect( 
            /* [retval][out] */ IMgaMetaAspect **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_MetaRole( 
            /* [retval][out] */ IMgaMetaRole **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FCO( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AccessMask( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryMode( 
            /* [retval][out] */ VARIANT_BOOL *own) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RegistryMode( 
            /* [in] */ VARIANT_BOOL own) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Registry( 
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGmeAttrs( 
            /* [out] */ BSTR *Icon,
            /* [out] */ long *xpos,
            /* [out] */ long *ypos) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetGmeAttrs( 
            /* [in] */ BSTR Icon,
            /* [in] */ long xpos,
            /* [in] */ long ypos) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaPartVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaPart * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaPart * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaPart * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaPart * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaPart * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaPart * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaPart * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Model )( 
            IMgaPart * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaPart * This,
            /* [retval][out] */ IMgaMetaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaAspect )( 
            IMgaPart * This,
            /* [retval][out] */ IMgaMetaAspect **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaPart * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FCO )( 
            IMgaPart * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AccessMask )( 
            IMgaPart * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryMode )( 
            IMgaPart * This,
            /* [retval][out] */ VARIANT_BOOL *own);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryMode )( 
            IMgaPart * This,
            /* [in] */ VARIANT_BOOL own);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaPart * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaPart * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaPart * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaPart * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGmeAttrs )( 
            IMgaPart * This,
            /* [out] */ BSTR *Icon,
            /* [out] */ long *xpos,
            /* [out] */ long *ypos);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetGmeAttrs )( 
            IMgaPart * This,
            /* [in] */ BSTR Icon,
            /* [in] */ long xpos,
            /* [in] */ long ypos);
        
        END_INTERFACE
    } IMgaPartVtbl;

    interface IMgaPart
    {
        CONST_VTBL struct IMgaPartVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaPart_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaPart_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaPart_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaPart_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaPart_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaPart_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaPart_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaPart_get_Model(This,pVal)	\
    (This)->lpVtbl -> get_Model(This,pVal)

#define IMgaPart_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaPart_get_MetaAspect(This,pVal)	\
    (This)->lpVtbl -> get_MetaAspect(This,pVal)

#define IMgaPart_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaPart_get_FCO(This,pVal)	\
    (This)->lpVtbl -> get_FCO(This,pVal)

#define IMgaPart_get_AccessMask(This,pVal)	\
    (This)->lpVtbl -> get_AccessMask(This,pVal)

#define IMgaPart_get_RegistryMode(This,own)	\
    (This)->lpVtbl -> get_RegistryMode(This,own)

#define IMgaPart_put_RegistryMode(This,own)	\
    (This)->lpVtbl -> put_RegistryMode(This,own)

#define IMgaPart_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaPart_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaPart_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaPart_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaPart_GetGmeAttrs(This,Icon,xpos,ypos)	\
    (This)->lpVtbl -> GetGmeAttrs(This,Icon,xpos,ypos)

#define IMgaPart_SetGmeAttrs(This,Icon,xpos,ypos)	\
    (This)->lpVtbl -> SetGmeAttrs(This,Icon,xpos,ypos)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_Model_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ IMgaModel **pVal);


void __RPC_STUB IMgaPart_get_Model_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_Meta_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ IMgaMetaPart **pVal);


void __RPC_STUB IMgaPart_get_Meta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_MetaAspect_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ IMgaMetaAspect **pVal);


void __RPC_STUB IMgaPart_get_MetaAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_MetaRole_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ IMgaMetaRole **pVal);


void __RPC_STUB IMgaPart_get_MetaRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_FCO_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaPart_get_FCO_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_AccessMask_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaPart_get_AccessMask_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_RegistryMode_Proxy( 
    IMgaPart * This,
    /* [retval][out] */ VARIANT_BOOL *own);


void __RPC_STUB IMgaPart_get_RegistryMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaPart_put_RegistryMode_Proxy( 
    IMgaPart * This,
    /* [in] */ VARIANT_BOOL own);


void __RPC_STUB IMgaPart_put_RegistryMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_RegistryNode_Proxy( 
    IMgaPart * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaRegNode **pVal);


void __RPC_STUB IMgaPart_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_Registry_Proxy( 
    IMgaPart * This,
    /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
    /* [retval][out] */ IMgaRegNodes **pVal);


void __RPC_STUB IMgaPart_get_Registry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaPart_get_RegistryValue_Proxy( 
    IMgaPart * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaPart_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaPart_put_RegistryValue_Proxy( 
    IMgaPart * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaPart_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaPart_GetGmeAttrs_Proxy( 
    IMgaPart * This,
    /* [out] */ BSTR *Icon,
    /* [out] */ long *xpos,
    /* [out] */ long *ypos);


void __RPC_STUB IMgaPart_GetGmeAttrs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaPart_SetGmeAttrs_Proxy( 
    IMgaPart * This,
    /* [in] */ BSTR Icon,
    /* [in] */ long xpos,
    /* [in] */ long ypos);


void __RPC_STUB IMgaPart_SetGmeAttrs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaPart_INTERFACE_DEFINED__ */


#ifndef __IMgaReference_INTERFACE_DEFINED__
#define __IMgaReference_INTERFACE_DEFINED__

/* interface IMgaReference */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3233-B758-11D3-ABAE-000000000000")
    IMgaReference : public IMgaFCO
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Referred( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Referred( 
            /* [in] */ IMgaFCO *newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RefAspect( 
            /* [retval][out] */ IMgaMetaAspect **pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RefAspect( 
            /* [in] */ IMgaMetaAspect *newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsedByConns( 
            /* [retval][out] */ IMgaConnPoints **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CompareToBase( 
            /* [out] */ short *status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RevertToBase( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaReference * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaReference * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaReference * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaReference * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaReference * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaReference * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaReference * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaReference * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaReference * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaReference * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaReference * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaReference * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaReference * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaReference * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaReference * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaReference * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaReference * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaReference * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaReference * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaReference * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaReference * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaReference * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaReference * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaReference * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaReference * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaReference * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaReference * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaReference * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaReference * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaReference * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaReference * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaReference * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaReference * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaReference * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Referred )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Referred )( 
            IMgaReference * This,
            /* [in] */ IMgaFCO *newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAspect )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaMetaAspect **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAspect )( 
            IMgaReference * This,
            /* [in] */ IMgaMetaAspect *newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsedByConns )( 
            IMgaReference * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CompareToBase )( 
            IMgaReference * This,
            /* [out] */ short *status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RevertToBase )( 
            IMgaReference * This);
        
        END_INTERFACE
    } IMgaReferenceVtbl;

    interface IMgaReference
    {
        CONST_VTBL struct IMgaReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaReference_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaReference_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaReference_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaReference_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaReference_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaReference_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaReference_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaReference_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaReference_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaReference_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaReference_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaReference_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaReference_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaReference_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaReference_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaReference_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaReference_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaReference_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaReference_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaReference_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaReference_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaReference_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaReference_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaReference_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaReference_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaReference_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaReference_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaReference_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaReference_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaReference_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaReference_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaReference_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaReference_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaReference_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaReference_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaReference_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaReference_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaReference_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaReference_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaReference_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaReference_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaReference_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaReference_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaReference_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaReference_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaReference_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaReference_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaReference_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaReference_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaReference_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaReference_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaReference_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaReference_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaReference_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaReference_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaReference_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaReference_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaReference_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaReference_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaReference_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaReference_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaReference_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaReference_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaReference_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaReference_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaReference_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaReference_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaReference_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaReference_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaReference_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaReference_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaReference_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaReference_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaReference_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaReference_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaReference_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaReference_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#define IMgaReference_get_Referred(This,pVal)	\
    (This)->lpVtbl -> get_Referred(This,pVal)

#define IMgaReference_put_Referred(This,newVal)	\
    (This)->lpVtbl -> put_Referred(This,newVal)

#define IMgaReference_get_RefAspect(This,pVal)	\
    (This)->lpVtbl -> get_RefAspect(This,pVal)

#define IMgaReference_put_RefAspect(This,newVal)	\
    (This)->lpVtbl -> put_RefAspect(This,newVal)

#define IMgaReference_get_UsedByConns(This,pVal)	\
    (This)->lpVtbl -> get_UsedByConns(This,pVal)

#define IMgaReference_CompareToBase(This,status)	\
    (This)->lpVtbl -> CompareToBase(This,status)

#define IMgaReference_RevertToBase(This)	\
    (This)->lpVtbl -> RevertToBase(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaReference_get_Referred_Proxy( 
    IMgaReference * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaReference_get_Referred_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaReference_put_Referred_Proxy( 
    IMgaReference * This,
    /* [in] */ IMgaFCO *newVal);


void __RPC_STUB IMgaReference_put_Referred_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaReference_get_RefAspect_Proxy( 
    IMgaReference * This,
    /* [retval][out] */ IMgaMetaAspect **pVal);


void __RPC_STUB IMgaReference_get_RefAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaReference_put_RefAspect_Proxy( 
    IMgaReference * This,
    /* [in] */ IMgaMetaAspect *newVal);


void __RPC_STUB IMgaReference_put_RefAspect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaReference_get_UsedByConns_Proxy( 
    IMgaReference * This,
    /* [retval][out] */ IMgaConnPoints **pVal);


void __RPC_STUB IMgaReference_get_UsedByConns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaReference_CompareToBase_Proxy( 
    IMgaReference * This,
    /* [out] */ short *status);


void __RPC_STUB IMgaReference_CompareToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaReference_RevertToBase_Proxy( 
    IMgaReference * This);


void __RPC_STUB IMgaReference_RevertToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaReference_INTERFACE_DEFINED__ */


#ifndef __IMgaSet_INTERFACE_DEFINED__
#define __IMgaSet_INTERFACE_DEFINED__

/* interface IMgaSet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3235-B758-11D3-ABAE-000000000000")
    IMgaSet : public IMgaFCO
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddMember( 
            /* [in] */ IMgaFCO *mem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            /* [in] */ IMgaFCO *member) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsMember( 
            /* [in] */ IMgaFCO *obj,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CompareToBase( 
            /* [out] */ short *status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RevertToBase( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaSet * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaSet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaSet * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaSet * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaSet * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaSet * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaSet * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaSet * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaSet * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaSet * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaSet * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaSet * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaSet * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaSet * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaSet * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaSet * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaSet * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaSet * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaSet * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaSet * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaSet * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaSet * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaSet * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaSet * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaSet * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaSet * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaSet * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaSet * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaSet * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaSet * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaSet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaSet * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaSet * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaSet * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            IMgaSet * This,
            /* [in] */ IMgaFCO *mem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            IMgaSet * This,
            /* [in] */ IMgaFCO *member);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IMgaSet * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            IMgaSet * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMember )( 
            IMgaSet * This,
            /* [in] */ IMgaFCO *obj,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CompareToBase )( 
            IMgaSet * This,
            /* [out] */ short *status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RevertToBase )( 
            IMgaSet * This);
        
        END_INTERFACE
    } IMgaSetVtbl;

    interface IMgaSet
    {
        CONST_VTBL struct IMgaSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaSet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaSet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaSet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaSet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaSet_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaSet_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaSet_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaSet_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaSet_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaSet_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaSet_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaSet_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaSet_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaSet_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaSet_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaSet_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaSet_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaSet_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaSet_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaSet_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaSet_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaSet_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaSet_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaSet_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaSet_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaSet_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaSet_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaSet_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaSet_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaSet_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaSet_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaSet_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaSet_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaSet_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaSet_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaSet_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaSet_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaSet_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaSet_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaSet_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaSet_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaSet_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaSet_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaSet_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaSet_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaSet_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaSet_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaSet_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaSet_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaSet_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaSet_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaSet_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaSet_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaSet_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaSet_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaSet_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaSet_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaSet_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaSet_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaSet_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaSet_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaSet_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaSet_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaSet_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaSet_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaSet_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaSet_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaSet_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaSet_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaSet_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaSet_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaSet_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaSet_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaSet_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaSet_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaSet_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaSet_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#define IMgaSet_AddMember(This,mem)	\
    (This)->lpVtbl -> AddMember(This,mem)

#define IMgaSet_RemoveMember(This,member)	\
    (This)->lpVtbl -> RemoveMember(This,member)

#define IMgaSet_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#define IMgaSet_get_Members(This,pVal)	\
    (This)->lpVtbl -> get_Members(This,pVal)

#define IMgaSet_get_IsMember(This,obj,pVal)	\
    (This)->lpVtbl -> get_IsMember(This,obj,pVal)

#define IMgaSet_CompareToBase(This,status)	\
    (This)->lpVtbl -> CompareToBase(This,status)

#define IMgaSet_RevertToBase(This)	\
    (This)->lpVtbl -> RevertToBase(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaSet_AddMember_Proxy( 
    IMgaSet * This,
    /* [in] */ IMgaFCO *mem);


void __RPC_STUB IMgaSet_AddMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaSet_RemoveMember_Proxy( 
    IMgaSet * This,
    /* [in] */ IMgaFCO *member);


void __RPC_STUB IMgaSet_RemoveMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaSet_RemoveAll_Proxy( 
    IMgaSet * This);


void __RPC_STUB IMgaSet_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSet_get_Members_Proxy( 
    IMgaSet * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaSet_get_Members_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSet_get_IsMember_Proxy( 
    IMgaSet * This,
    /* [in] */ IMgaFCO *obj,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaSet_get_IsMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaSet_CompareToBase_Proxy( 
    IMgaSet * This,
    /* [out] */ short *status);


void __RPC_STUB IMgaSet_CompareToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMgaSet_RevertToBase_Proxy( 
    IMgaSet * This);


void __RPC_STUB IMgaSet_RevertToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaSet_INTERFACE_DEFINED__ */


#ifndef __IMgaConnection_INTERFACE_DEFINED__
#define __IMgaConnection_INTERFACE_DEFINED__

/* interface IMgaConnection */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaConnection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("270B4FA0-B17C-11D3-9AD1-00AA00B6FE26")
    IMgaConnection : public IMgaFCO
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddConnPoint( 
            /* [in] */ BSTR rolename,
            /* [in] */ long maxinrole,
            /* [in] */ IMgaFCO *target,
            /* [in] */ IMgaFCOs *refs,
            /* [out] */ IMgaConnPoint **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConnPoints( 
            /* [retval][out] */ IMgaConnPoints **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompareToBase( 
            /* [in] */ IMgaConnPoint *connpoint,
            /* [out] */ short *status) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RevertToBase( 
            /* [in] */ IMgaConnPoint *connpoint) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaConnectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaConnection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaConnection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaConnection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaConnection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaConnection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaConnection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaConnection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaConnection * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaConnection * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaConnection * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaConnection * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaConnection * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaConnection * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaConnection * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaConnection * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaConnection * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaConnection * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaConnection * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaConnection * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaConnection * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaConnection * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaConnection * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaConnection * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaConnection * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaConnection * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaConnection * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaConnection * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaConnection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaConnection * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaConnection * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaConnection * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaConnection * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaConnection * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaConnection * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaConnection * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddConnPoint )( 
            IMgaConnection * This,
            /* [in] */ BSTR rolename,
            /* [in] */ long maxinrole,
            /* [in] */ IMgaFCO *target,
            /* [in] */ IMgaFCOs *refs,
            /* [out] */ IMgaConnPoint **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnPoints )( 
            IMgaConnection * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareToBase )( 
            IMgaConnection * This,
            /* [in] */ IMgaConnPoint *connpoint,
            /* [out] */ short *status);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RevertToBase )( 
            IMgaConnection * This,
            /* [in] */ IMgaConnPoint *connpoint);
        
        END_INTERFACE
    } IMgaConnectionVtbl;

    interface IMgaConnection
    {
        CONST_VTBL struct IMgaConnectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaConnection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaConnection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaConnection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaConnection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaConnection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaConnection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaConnection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaConnection_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaConnection_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaConnection_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaConnection_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaConnection_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaConnection_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaConnection_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaConnection_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaConnection_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaConnection_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaConnection_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaConnection_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaConnection_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaConnection_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaConnection_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaConnection_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaConnection_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaConnection_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaConnection_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaConnection_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaConnection_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaConnection_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaConnection_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaConnection_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaConnection_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaConnection_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaConnection_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaConnection_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaConnection_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaConnection_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaConnection_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaConnection_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaConnection_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaConnection_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaConnection_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaConnection_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaConnection_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaConnection_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaConnection_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaConnection_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaConnection_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaConnection_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaConnection_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaConnection_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaConnection_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaConnection_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaConnection_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaConnection_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaConnection_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaConnection_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaConnection_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaConnection_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaConnection_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaConnection_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaConnection_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaConnection_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaConnection_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaConnection_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaConnection_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaConnection_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaConnection_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaConnection_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaConnection_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaConnection_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaConnection_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaConnection_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaConnection_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaConnection_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaConnection_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaConnection_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaConnection_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaConnection_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaConnection_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#define IMgaConnection_AddConnPoint(This,rolename,maxinrole,target,refs,pVal)	\
    (This)->lpVtbl -> AddConnPoint(This,rolename,maxinrole,target,refs,pVal)

#define IMgaConnection_get_ConnPoints(This,pVal)	\
    (This)->lpVtbl -> get_ConnPoints(This,pVal)

#define IMgaConnection_CompareToBase(This,connpoint,status)	\
    (This)->lpVtbl -> CompareToBase(This,connpoint,status)

#define IMgaConnection_RevertToBase(This,connpoint)	\
    (This)->lpVtbl -> RevertToBase(This,connpoint)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnection_AddConnPoint_Proxy( 
    IMgaConnection * This,
    /* [in] */ BSTR rolename,
    /* [in] */ long maxinrole,
    /* [in] */ IMgaFCO *target,
    /* [in] */ IMgaFCOs *refs,
    /* [out] */ IMgaConnPoint **pVal);


void __RPC_STUB IMgaConnection_AddConnPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnection_get_ConnPoints_Proxy( 
    IMgaConnection * This,
    /* [retval][out] */ IMgaConnPoints **pVal);


void __RPC_STUB IMgaConnection_get_ConnPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnection_CompareToBase_Proxy( 
    IMgaConnection * This,
    /* [in] */ IMgaConnPoint *connpoint,
    /* [out] */ short *status);


void __RPC_STUB IMgaConnection_CompareToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnection_RevertToBase_Proxy( 
    IMgaConnection * This,
    /* [in] */ IMgaConnPoint *connpoint);


void __RPC_STUB IMgaConnection_RevertToBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaConnection_INTERFACE_DEFINED__ */


#ifndef __IMgaSimpleConnection_INTERFACE_DEFINED__
#define __IMgaSimpleConnection_INTERFACE_DEFINED__

/* interface IMgaSimpleConnection */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaSimpleConnection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA3237-B758-11D3-ABAE-000000000000")
    IMgaSimpleConnection : public IMgaConnection
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Src( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Dst( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SrcReferences( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DstReferences( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetDst( 
            /* [in] */ IMgaFCOs *references,
            /* [in] */ IMgaFCO *target) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSrc( 
            /* [in] */ IMgaFCOs *references,
            /* [in] */ IMgaFCO *target) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaSimpleConnectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaSimpleConnection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaSimpleConnection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaSimpleConnection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaSimpleConnection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaSimpleConnection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaSimpleConnection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaSimpleConnection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsWritable )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ ID_type *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaBase )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaMetaBase **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ objtype_enum *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Territory )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaTerritory **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEqual )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaObject *o,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IMgaSimpleConnection * This,
            /* [out] */ IMgaObject **pVal,
            /* [defaultvalue][out] */ objtype_enum *objtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckProject )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaProject *project);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyObject )( 
            IMgaSimpleConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IMgaSimpleConnection * This,
            /* [defaultvalue][in] */ openmode mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IMgaSimpleConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaSimpleConnection * This,
            /* [in] */ VARIANT userdata);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAssociation )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT *userdata);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            IMgaSimpleConnection * This,
            /* [in] */ long mask);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelID )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelID )( 
            IMgaSimpleConnection * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLibObject )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMgaSimpleConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckTree )( 
            IMgaSimpleConnection * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exempt )( 
            IMgaSimpleConnection * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exempt )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjects )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaObjects **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildObjectByRelID )( 
            IMgaSimpleConnection * This,
            /* [in] */ long relid,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectByPath )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaObject **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaMetaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MetaRole )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaMetaRole **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentModel )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaModel **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFolder **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parts )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaParts **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Part )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaMetaAspect *asp,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartByMetaPart )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaMetaPart *part,
            /* [retval][out] */ IMgaPart **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaAttributes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attribute )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaMetaAttribute *meta,
            /* [retval][out] */ IMgaAttribute **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttributeByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AttributeByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StrAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StrAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ long newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ double newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL newval);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RefAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ IMgaFCO *newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ClearAttrByName )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaSimpleConnection * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Constraints )( 
            IMgaSimpleConnection * This,
            /* [in] */ VARIANT_BOOL includemeta,
            /* [retval][out] */ IMgaConstraints **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaConstraint *constraint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DefineConstraint )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR name,
            /* [in] */ long mask,
            /* [in] */ BSTR expr,
            /* [out] */ IMgaConstraint **nconstraint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedFrom )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DerivedObjects )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseType )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ArcheType )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInstance )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsPrimaryDerived )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttachToArcheType )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaFCO *newtype,
            /* [in] */ VARIANT_BOOL instance);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DetachFromArcheType )( 
            IMgaSimpleConnection * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAbsMetaPath )( 
            IMgaSimpleConnection * This,
            /* [out][in] */ BSTR *abspath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetRelMetaPath )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaFCO *begfco,
            /* [out][in] */ BSTR *relpath,
            /* [defaultvalue][in] */ IMgaFCOs *refs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PartOfConns )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MemberOfSets )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferencedBy )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCollection )( 
            IMgaSimpleConnection * This,
            /* [out][in] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootFCO )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddConnPoint )( 
            IMgaSimpleConnection * This,
            /* [in] */ BSTR rolename,
            /* [in] */ long maxinrole,
            /* [in] */ IMgaFCO *target,
            /* [in] */ IMgaFCOs *refs,
            /* [out] */ IMgaConnPoint **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnPoints )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaConnPoints **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareToBase )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaConnPoint *connpoint,
            /* [out] */ short *status);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RevertToBase )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaConnPoint *connpoint);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Src )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Dst )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SrcReferences )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DstReferences )( 
            IMgaSimpleConnection * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDst )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaFCOs *references,
            /* [in] */ IMgaFCO *target);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSrc )( 
            IMgaSimpleConnection * This,
            /* [in] */ IMgaFCOs *references,
            /* [in] */ IMgaFCO *target);
        
        END_INTERFACE
    } IMgaSimpleConnectionVtbl;

    interface IMgaSimpleConnection
    {
        CONST_VTBL struct IMgaSimpleConnectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaSimpleConnection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaSimpleConnection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaSimpleConnection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaSimpleConnection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaSimpleConnection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaSimpleConnection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaSimpleConnection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaSimpleConnection_get_Status(This,p)	\
    (This)->lpVtbl -> get_Status(This,p)

#define IMgaSimpleConnection_get_IsWritable(This,p)	\
    (This)->lpVtbl -> get_IsWritable(This,p)

#define IMgaSimpleConnection_get_ID(This,pVal)	\
    (This)->lpVtbl -> get_ID(This,pVal)

#define IMgaSimpleConnection_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaSimpleConnection_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaSimpleConnection_get_MetaBase(This,pVal)	\
    (This)->lpVtbl -> get_MetaBase(This,pVal)

#define IMgaSimpleConnection_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaSimpleConnection_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#define IMgaSimpleConnection_get_Territory(This,pVal)	\
    (This)->lpVtbl -> get_Territory(This,pVal)

#define IMgaSimpleConnection_get_IsEqual(This,o,pVal)	\
    (This)->lpVtbl -> get_IsEqual(This,o,pVal)

#define IMgaSimpleConnection_GetParent(This,pVal,objtype)	\
    (This)->lpVtbl -> GetParent(This,pVal,objtype)

#define IMgaSimpleConnection_CheckProject(This,project)	\
    (This)->lpVtbl -> CheckProject(This,project)

#define IMgaSimpleConnection_DestroyObject(This)	\
    (This)->lpVtbl -> DestroyObject(This)

#define IMgaSimpleConnection_Open(This,mode)	\
    (This)->lpVtbl -> Open(This,mode)

#define IMgaSimpleConnection_Close(This)	\
    (This)->lpVtbl -> Close(This)

#define IMgaSimpleConnection_Associate(This,userdata)	\
    (This)->lpVtbl -> Associate(This,userdata)

#define IMgaSimpleConnection_get_CurrentAssociation(This,userdata)	\
    (This)->lpVtbl -> get_CurrentAssociation(This,userdata)

#define IMgaSimpleConnection_SendEvent(This,mask)	\
    (This)->lpVtbl -> SendEvent(This,mask)

#define IMgaSimpleConnection_get_RelID(This,pVal)	\
    (This)->lpVtbl -> get_RelID(This,pVal)

#define IMgaSimpleConnection_put_RelID(This,newVal)	\
    (This)->lpVtbl -> put_RelID(This,newVal)

#define IMgaSimpleConnection_get_IsLibObject(This,pVal)	\
    (This)->lpVtbl -> get_IsLibObject(This,pVal)

#define IMgaSimpleConnection_Check(This)	\
    (This)->lpVtbl -> Check(This)

#define IMgaSimpleConnection_CheckTree(This)	\
    (This)->lpVtbl -> CheckTree(This)

#define IMgaSimpleConnection_put_Exempt(This,newVal)	\
    (This)->lpVtbl -> put_Exempt(This,newVal)

#define IMgaSimpleConnection_get_Exempt(This,pVal)	\
    (This)->lpVtbl -> get_Exempt(This,pVal)

#define IMgaSimpleConnection_get_ChildObjects(This,pVal)	\
    (This)->lpVtbl -> get_ChildObjects(This,pVal)

#define IMgaSimpleConnection_get_ChildObjectByRelID(This,relid,pVal)	\
    (This)->lpVtbl -> get_ChildObjectByRelID(This,relid,pVal)

#define IMgaSimpleConnection_get_ObjectByPath(This,path,pVal)	\
    (This)->lpVtbl -> get_ObjectByPath(This,path,pVal)


#define IMgaSimpleConnection_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaSimpleConnection_get_MetaRole(This,pVal)	\
    (This)->lpVtbl -> get_MetaRole(This,pVal)

#define IMgaSimpleConnection_get_ParentModel(This,pVal)	\
    (This)->lpVtbl -> get_ParentModel(This,pVal)

#define IMgaSimpleConnection_get_ParentFolder(This,pVal)	\
    (This)->lpVtbl -> get_ParentFolder(This,pVal)

#define IMgaSimpleConnection_get_Parts(This,pVal)	\
    (This)->lpVtbl -> get_Parts(This,pVal)

#define IMgaSimpleConnection_get_Part(This,asp,pVal)	\
    (This)->lpVtbl -> get_Part(This,asp,pVal)

#define IMgaSimpleConnection_get_PartByMetaPart(This,part,pVal)	\
    (This)->lpVtbl -> get_PartByMetaPart(This,part,pVal)

#define IMgaSimpleConnection_get_Attributes(This,pVal)	\
    (This)->lpVtbl -> get_Attributes(This,pVal)

#define IMgaSimpleConnection_get_Attribute(This,meta,pVal)	\
    (This)->lpVtbl -> get_Attribute(This,meta,pVal)

#define IMgaSimpleConnection_get_AttributeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_AttributeByName(This,name,pVal)

#define IMgaSimpleConnection_put_AttributeByName(This,name,newval)	\
    (This)->lpVtbl -> put_AttributeByName(This,name,newval)

#define IMgaSimpleConnection_get_StrAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_StrAttrByName(This,name,pVal)

#define IMgaSimpleConnection_put_StrAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_StrAttrByName(This,name,newval)

#define IMgaSimpleConnection_get_IntAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_IntAttrByName(This,name,pVal)

#define IMgaSimpleConnection_put_IntAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_IntAttrByName(This,name,newval)

#define IMgaSimpleConnection_get_FloatAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_FloatAttrByName(This,name,pVal)

#define IMgaSimpleConnection_put_FloatAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_FloatAttrByName(This,name,newval)

#define IMgaSimpleConnection_get_BoolAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_BoolAttrByName(This,name,pVal)

#define IMgaSimpleConnection_put_BoolAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_BoolAttrByName(This,name,newval)

#define IMgaSimpleConnection_get_RefAttrByName(This,name,pVal)	\
    (This)->lpVtbl -> get_RefAttrByName(This,name,pVal)

#define IMgaSimpleConnection_put_RefAttrByName(This,name,newval)	\
    (This)->lpVtbl -> put_RefAttrByName(This,name,newval)

#define IMgaSimpleConnection_ClearAttrByName(This,name)	\
    (This)->lpVtbl -> ClearAttrByName(This,name)

#define IMgaSimpleConnection_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaSimpleConnection_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaSimpleConnection_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaSimpleConnection_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaSimpleConnection_get_Constraints(This,includemeta,pVal)	\
    (This)->lpVtbl -> get_Constraints(This,includemeta,pVal)

#define IMgaSimpleConnection_AddConstraint(This,constraint)	\
    (This)->lpVtbl -> AddConstraint(This,constraint)

#define IMgaSimpleConnection_DefineConstraint(This,name,mask,expr,nconstraint)	\
    (This)->lpVtbl -> DefineConstraint(This,name,mask,expr,nconstraint)

#define IMgaSimpleConnection_get_DerivedFrom(This,pVal)	\
    (This)->lpVtbl -> get_DerivedFrom(This,pVal)

#define IMgaSimpleConnection_get_DerivedObjects(This,pVal)	\
    (This)->lpVtbl -> get_DerivedObjects(This,pVal)

#define IMgaSimpleConnection_get_Type(This,pVal)	\
    (This)->lpVtbl -> get_Type(This,pVal)

#define IMgaSimpleConnection_get_BaseType(This,pVal)	\
    (This)->lpVtbl -> get_BaseType(This,pVal)

#define IMgaSimpleConnection_get_ArcheType(This,pVal)	\
    (This)->lpVtbl -> get_ArcheType(This,pVal)

#define IMgaSimpleConnection_get_IsInstance(This,pVal)	\
    (This)->lpVtbl -> get_IsInstance(This,pVal)

#define IMgaSimpleConnection_get_IsPrimaryDerived(This,pVal)	\
    (This)->lpVtbl -> get_IsPrimaryDerived(This,pVal)

#define IMgaSimpleConnection_AttachToArcheType(This,newtype,instance)	\
    (This)->lpVtbl -> AttachToArcheType(This,newtype,instance)

#define IMgaSimpleConnection_DetachFromArcheType(This)	\
    (This)->lpVtbl -> DetachFromArcheType(This)

#define IMgaSimpleConnection_GetAbsMetaPath(This,abspath)	\
    (This)->lpVtbl -> GetAbsMetaPath(This,abspath)

#define IMgaSimpleConnection_GetRelMetaPath(This,begfco,relpath,refs)	\
    (This)->lpVtbl -> GetRelMetaPath(This,begfco,relpath,refs)

#define IMgaSimpleConnection_get_PartOfConns(This,pVal)	\
    (This)->lpVtbl -> get_PartOfConns(This,pVal)

#define IMgaSimpleConnection_get_MemberOfSets(This,pVal)	\
    (This)->lpVtbl -> get_MemberOfSets(This,pVal)

#define IMgaSimpleConnection_get_ReferencedBy(This,pVal)	\
    (This)->lpVtbl -> get_ReferencedBy(This,pVal)

#define IMgaSimpleConnection_CreateCollection(This,pVal)	\
    (This)->lpVtbl -> CreateCollection(This,pVal)

#define IMgaSimpleConnection_get_RootFCO(This,pVal)	\
    (This)->lpVtbl -> get_RootFCO(This,pVal)


#define IMgaSimpleConnection_AddConnPoint(This,rolename,maxinrole,target,refs,pVal)	\
    (This)->lpVtbl -> AddConnPoint(This,rolename,maxinrole,target,refs,pVal)

#define IMgaSimpleConnection_get_ConnPoints(This,pVal)	\
    (This)->lpVtbl -> get_ConnPoints(This,pVal)

#define IMgaSimpleConnection_CompareToBase(This,connpoint,status)	\
    (This)->lpVtbl -> CompareToBase(This,connpoint,status)

#define IMgaSimpleConnection_RevertToBase(This,connpoint)	\
    (This)->lpVtbl -> RevertToBase(This,connpoint)


#define IMgaSimpleConnection_get_Src(This,pVal)	\
    (This)->lpVtbl -> get_Src(This,pVal)

#define IMgaSimpleConnection_get_Dst(This,pVal)	\
    (This)->lpVtbl -> get_Dst(This,pVal)

#define IMgaSimpleConnection_get_SrcReferences(This,pVal)	\
    (This)->lpVtbl -> get_SrcReferences(This,pVal)

#define IMgaSimpleConnection_get_DstReferences(This,pVal)	\
    (This)->lpVtbl -> get_DstReferences(This,pVal)

#define IMgaSimpleConnection_SetDst(This,references,target)	\
    (This)->lpVtbl -> SetDst(This,references,target)

#define IMgaSimpleConnection_SetSrc(This,references,target)	\
    (This)->lpVtbl -> SetSrc(This,references,target)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_get_Src_Proxy( 
    IMgaSimpleConnection * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaSimpleConnection_get_Src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_get_Dst_Proxy( 
    IMgaSimpleConnection * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaSimpleConnection_get_Dst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_get_SrcReferences_Proxy( 
    IMgaSimpleConnection * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaSimpleConnection_get_SrcReferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_get_DstReferences_Proxy( 
    IMgaSimpleConnection * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaSimpleConnection_get_DstReferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_SetDst_Proxy( 
    IMgaSimpleConnection * This,
    /* [in] */ IMgaFCOs *references,
    /* [in] */ IMgaFCO *target);


void __RPC_STUB IMgaSimpleConnection_SetDst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaSimpleConnection_SetSrc_Proxy( 
    IMgaSimpleConnection * This,
    /* [in] */ IMgaFCOs *references,
    /* [in] */ IMgaFCO *target);


void __RPC_STUB IMgaSimpleConnection_SetSrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaSimpleConnection_INTERFACE_DEFINED__ */


#ifndef __IMgaConnPoint_INTERFACE_DEFINED__
#define __IMgaConnPoint_INTERFACE_DEFINED__

/* interface IMgaConnPoint */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaConnPoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cb8fa000-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaConnPoint : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Owner( 
            /* [retval][out] */ IMgaConnection **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConnRole( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ConnRole( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_References( 
            /* [retval][out] */ IMgaFCOs **pVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaConnPointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaConnPoint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaConnPoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaConnPoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaConnPoint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaConnPoint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaConnPoint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaConnPoint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            IMgaConnPoint * This,
            /* [retval][out] */ IMgaConnection **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnRole )( 
            IMgaConnPoint * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConnRole )( 
            IMgaConnPoint * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IMgaConnPoint * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_References )( 
            IMgaConnPoint * This,
            /* [retval][out] */ IMgaFCOs **pVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaConnPoint * This);
        
        END_INTERFACE
    } IMgaConnPointVtbl;

    interface IMgaConnPoint
    {
        CONST_VTBL struct IMgaConnPointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaConnPoint_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaConnPoint_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaConnPoint_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaConnPoint_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaConnPoint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaConnPoint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaConnPoint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaConnPoint_get_Owner(This,pVal)	\
    (This)->lpVtbl -> get_Owner(This,pVal)

#define IMgaConnPoint_get_ConnRole(This,pVal)	\
    (This)->lpVtbl -> get_ConnRole(This,pVal)

#define IMgaConnPoint_put_ConnRole(This,newVal)	\
    (This)->lpVtbl -> put_ConnRole(This,newVal)

#define IMgaConnPoint_get_Target(This,pVal)	\
    (This)->lpVtbl -> get_Target(This,pVal)

#define IMgaConnPoint_get_References(This,pVal)	\
    (This)->lpVtbl -> get_References(This,pVal)

#define IMgaConnPoint_Remove(This)	\
    (This)->lpVtbl -> Remove(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_get_Owner_Proxy( 
    IMgaConnPoint * This,
    /* [retval][out] */ IMgaConnection **pVal);


void __RPC_STUB IMgaConnPoint_get_Owner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_get_ConnRole_Proxy( 
    IMgaConnPoint * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaConnPoint_get_ConnRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_put_ConnRole_Proxy( 
    IMgaConnPoint * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaConnPoint_put_ConnRole_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_get_Target_Proxy( 
    IMgaConnPoint * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaConnPoint_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_get_References_Proxy( 
    IMgaConnPoint * This,
    /* [retval][out] */ IMgaFCOs **pVal);


void __RPC_STUB IMgaConnPoint_get_References_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoint_Remove_Proxy( 
    IMgaConnPoint * This);


void __RPC_STUB IMgaConnPoint_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaConnPoint_INTERFACE_DEFINED__ */


#ifndef __IMgaRegNode_INTERFACE_DEFINED__
#define __IMgaRegNode_INTERFACE_DEFINED__

/* interface IMgaRegNode */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaRegNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83BA323D-B758-11D3-ABAE-000000000000")
    IMgaRegNode : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FCOValue( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_FCOValue( 
            /* [in] */ IMgaFCO *newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SubNodes( 
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SubNodeByName( 
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaRegNode **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentNode( 
            /* [retval][out] */ IMgaRegNode **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [out] */ long *status) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Opacity( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Opacity( 
            /* [in] */ VARIANT_BOOL p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveTree( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaRegNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaRegNode * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaRegNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaRegNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaRegNode * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaRegNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaRegNode * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaRegNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaRegNode * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IMgaRegNode * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IMgaRegNode * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IMgaRegNode * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FCOValue )( 
            IMgaRegNode * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FCOValue )( 
            IMgaRegNode * This,
            /* [in] */ IMgaFCO *newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubNodes )( 
            IMgaRegNode * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubNodeByName )( 
            IMgaRegNode * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentNode )( 
            IMgaRegNode * This,
            /* [retval][out] */ IMgaRegNode **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaRegNode * This,
            /* [out] */ long *status);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Opacity )( 
            IMgaRegNode * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Opacity )( 
            IMgaRegNode * This,
            /* [in] */ VARIANT_BOOL p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IMgaRegNode * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveTree )( 
            IMgaRegNode * This);
        
        END_INTERFACE
    } IMgaRegNodeVtbl;

    interface IMgaRegNode
    {
        CONST_VTBL struct IMgaRegNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaRegNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaRegNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaRegNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaRegNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaRegNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaRegNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaRegNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaRegNode_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaRegNode_get_Path(This,pVal)	\
    (This)->lpVtbl -> get_Path(This,pVal)

#define IMgaRegNode_get_Value(This,pVal)	\
    (This)->lpVtbl -> get_Value(This,pVal)

#define IMgaRegNode_put_Value(This,newVal)	\
    (This)->lpVtbl -> put_Value(This,newVal)

#define IMgaRegNode_get_FCOValue(This,pVal)	\
    (This)->lpVtbl -> get_FCOValue(This,pVal)

#define IMgaRegNode_put_FCOValue(This,newVal)	\
    (This)->lpVtbl -> put_FCOValue(This,newVal)

#define IMgaRegNode_get_SubNodes(This,virtuals,p)	\
    (This)->lpVtbl -> get_SubNodes(This,virtuals,p)

#define IMgaRegNode_get_SubNodeByName(This,name,pVal)	\
    (This)->lpVtbl -> get_SubNodeByName(This,name,pVal)

#define IMgaRegNode_get_ParentNode(This,p)	\
    (This)->lpVtbl -> get_ParentNode(This,p)

#define IMgaRegNode_get_Status(This,status)	\
    (This)->lpVtbl -> get_Status(This,status)

#define IMgaRegNode_get_Opacity(This,p)	\
    (This)->lpVtbl -> get_Opacity(This,p)

#define IMgaRegNode_put_Opacity(This,p)	\
    (This)->lpVtbl -> put_Opacity(This,p)

#define IMgaRegNode_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#define IMgaRegNode_RemoveTree(This)	\
    (This)->lpVtbl -> RemoveTree(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_Name_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaRegNode_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_Path_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaRegNode_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_Value_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaRegNode_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_put_Value_Proxy( 
    IMgaRegNode * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaRegNode_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_FCOValue_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaRegNode_get_FCOValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_put_FCOValue_Proxy( 
    IMgaRegNode * This,
    /* [in] */ IMgaFCO *newVal);


void __RPC_STUB IMgaRegNode_put_FCOValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_SubNodes_Proxy( 
    IMgaRegNode * This,
    /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
    /* [retval][out] */ IMgaRegNodes **p);


void __RPC_STUB IMgaRegNode_get_SubNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_SubNodeByName_Proxy( 
    IMgaRegNode * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ IMgaRegNode **pVal);


void __RPC_STUB IMgaRegNode_get_SubNodeByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_ParentNode_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ IMgaRegNode **p);


void __RPC_STUB IMgaRegNode_get_ParentNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_Status_Proxy( 
    IMgaRegNode * This,
    /* [out] */ long *status);


void __RPC_STUB IMgaRegNode_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_get_Opacity_Proxy( 
    IMgaRegNode * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaRegNode_get_Opacity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_put_Opacity_Proxy( 
    IMgaRegNode * This,
    /* [in] */ VARIANT_BOOL p);


void __RPC_STUB IMgaRegNode_put_Opacity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_Clear_Proxy( 
    IMgaRegNode * This);


void __RPC_STUB IMgaRegNode_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNode_RemoveTree_Proxy( 
    IMgaRegNode * This);


void __RPC_STUB IMgaRegNode_RemoveTree_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaRegNode_INTERFACE_DEFINED__ */


#ifndef __IMgaFilter_INTERFACE_DEFINED__
#define __IMgaFilter_INTERFACE_DEFINED__

/* interface IMgaFilter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8f6e970-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaFilter : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Kind( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Kind( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Role( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Role( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ObjType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ObjType( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Level( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Level( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IMgaProject **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaFilter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaFilter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IMgaFilter * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IMgaFilter * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Kind )( 
            IMgaFilter * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Kind )( 
            IMgaFilter * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Role )( 
            IMgaFilter * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Role )( 
            IMgaFilter * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjType )( 
            IMgaFilter * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ObjType )( 
            IMgaFilter * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Level )( 
            IMgaFilter * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Level )( 
            IMgaFilter * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaFilter * This,
            /* [retval][out] */ IMgaProject **pVal);
        
        END_INTERFACE
    } IMgaFilterVtbl;

    interface IMgaFilter
    {
        CONST_VTBL struct IMgaFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaFilter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaFilter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaFilter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaFilter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaFilter_get_Name(This,pVal)	\
    (This)->lpVtbl -> get_Name(This,pVal)

#define IMgaFilter_put_Name(This,newVal)	\
    (This)->lpVtbl -> put_Name(This,newVal)

#define IMgaFilter_get_Kind(This,pVal)	\
    (This)->lpVtbl -> get_Kind(This,pVal)

#define IMgaFilter_put_Kind(This,newVal)	\
    (This)->lpVtbl -> put_Kind(This,newVal)

#define IMgaFilter_get_Role(This,pVal)	\
    (This)->lpVtbl -> get_Role(This,pVal)

#define IMgaFilter_put_Role(This,newVal)	\
    (This)->lpVtbl -> put_Role(This,newVal)

#define IMgaFilter_get_ObjType(This,pVal)	\
    (This)->lpVtbl -> get_ObjType(This,pVal)

#define IMgaFilter_put_ObjType(This,newVal)	\
    (This)->lpVtbl -> put_ObjType(This,newVal)

#define IMgaFilter_get_Level(This,pVal)	\
    (This)->lpVtbl -> get_Level(This,pVal)

#define IMgaFilter_put_Level(This,newVal)	\
    (This)->lpVtbl -> put_Level(This,newVal)

#define IMgaFilter_get_Project(This,pVal)	\
    (This)->lpVtbl -> get_Project(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_Name_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFilter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFilter_put_Name_Proxy( 
    IMgaFilter * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaFilter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_Kind_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFilter_get_Kind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFilter_put_Kind_Proxy( 
    IMgaFilter * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaFilter_put_Kind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_Role_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFilter_get_Role_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFilter_put_Role_Proxy( 
    IMgaFilter * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaFilter_put_Role_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_ObjType_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFilter_get_ObjType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFilter_put_ObjType_Proxy( 
    IMgaFilter * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaFilter_put_ObjType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_Level_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaFilter_get_Level_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaFilter_put_Level_Proxy( 
    IMgaFilter * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaFilter_put_Level_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFilter_get_Project_Proxy( 
    IMgaFilter * This,
    /* [retval][out] */ IMgaProject **pVal);


void __RPC_STUB IMgaFilter_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaFilter_INTERFACE_DEFINED__ */


#ifndef __IMgaAttribute_INTERFACE_DEFINED__
#define __IMgaAttribute_INTERFACE_DEFINED__

/* interface IMgaAttribute */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CBF20084-BD43-11D3-9AD2-00AA00B6FE26")
    IMgaAttribute : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Meta( 
            /* [retval][out] */ IMgaMetaAttribute **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Owner( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long *status) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OrigValue( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasChanged( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StringValue( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_StringValue( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IntValue( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IntValue( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_BoolValue( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_BoolValue( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FloatValue( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_FloatValue( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FCOValue( 
            /* [retval][out] */ IMgaFCO **pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_FCOValue( 
            /* [in] */ IMgaFCO *newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryNode( 
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Registry( 
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryValue( 
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_RegistryValue( 
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaAttribute * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Meta )( 
            IMgaAttribute * This,
            /* [retval][out] */ IMgaMetaAttribute **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IMgaAttribute * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IMgaAttribute * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            IMgaAttribute * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            IMgaAttribute * This,
            /* [retval][out] */ long *status);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OrigValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasChanged )( 
            IMgaAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StringValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StringValue )( 
            IMgaAttribute * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IntValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IntValue )( 
            IMgaAttribute * This,
            /* [in] */ long newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BoolValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BoolValue )( 
            IMgaAttribute * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FloatValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FloatValue )( 
            IMgaAttribute * This,
            /* [in] */ double newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FCOValue )( 
            IMgaAttribute * This,
            /* [retval][out] */ IMgaFCO **pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FCOValue )( 
            IMgaAttribute * This,
            /* [in] */ IMgaFCO *newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryNode )( 
            IMgaAttribute * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ IMgaRegNode **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Registry )( 
            IMgaAttribute * This,
            /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
            /* [retval][out] */ IMgaRegNodes **pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryValue )( 
            IMgaAttribute * This,
            /* [in] */ BSTR path,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RegistryValue )( 
            IMgaAttribute * This,
            /* [in] */ BSTR path,
            /* [in] */ BSTR newval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IMgaAttribute * This);
        
        END_INTERFACE
    } IMgaAttributeVtbl;

    interface IMgaAttribute
    {
        CONST_VTBL struct IMgaAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaAttribute_get_Meta(This,pVal)	\
    (This)->lpVtbl -> get_Meta(This,pVal)

#define IMgaAttribute_get_Value(This,pVal)	\
    (This)->lpVtbl -> get_Value(This,pVal)

#define IMgaAttribute_put_Value(This,newVal)	\
    (This)->lpVtbl -> put_Value(This,newVal)

#define IMgaAttribute_get_Owner(This,pVal)	\
    (This)->lpVtbl -> get_Owner(This,pVal)

#define IMgaAttribute_get_Status(This,status)	\
    (This)->lpVtbl -> get_Status(This,status)

#define IMgaAttribute_get_OrigValue(This,pVal)	\
    (This)->lpVtbl -> get_OrigValue(This,pVal)

#define IMgaAttribute_get_HasChanged(This,pVal)	\
    (This)->lpVtbl -> get_HasChanged(This,pVal)

#define IMgaAttribute_get_StringValue(This,pVal)	\
    (This)->lpVtbl -> get_StringValue(This,pVal)

#define IMgaAttribute_put_StringValue(This,newVal)	\
    (This)->lpVtbl -> put_StringValue(This,newVal)

#define IMgaAttribute_get_IntValue(This,pVal)	\
    (This)->lpVtbl -> get_IntValue(This,pVal)

#define IMgaAttribute_put_IntValue(This,newVal)	\
    (This)->lpVtbl -> put_IntValue(This,newVal)

#define IMgaAttribute_get_BoolValue(This,pVal)	\
    (This)->lpVtbl -> get_BoolValue(This,pVal)

#define IMgaAttribute_put_BoolValue(This,newVal)	\
    (This)->lpVtbl -> put_BoolValue(This,newVal)

#define IMgaAttribute_get_FloatValue(This,pVal)	\
    (This)->lpVtbl -> get_FloatValue(This,pVal)

#define IMgaAttribute_put_FloatValue(This,newVal)	\
    (This)->lpVtbl -> put_FloatValue(This,newVal)

#define IMgaAttribute_get_FCOValue(This,pVal)	\
    (This)->lpVtbl -> get_FCOValue(This,pVal)

#define IMgaAttribute_put_FCOValue(This,newVal)	\
    (This)->lpVtbl -> put_FCOValue(This,newVal)

#define IMgaAttribute_get_RegistryNode(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryNode(This,path,pVal)

#define IMgaAttribute_get_Registry(This,virtuals,pVal)	\
    (This)->lpVtbl -> get_Registry(This,virtuals,pVal)

#define IMgaAttribute_get_RegistryValue(This,path,pVal)	\
    (This)->lpVtbl -> get_RegistryValue(This,path,pVal)

#define IMgaAttribute_put_RegistryValue(This,path,newval)	\
    (This)->lpVtbl -> put_RegistryValue(This,path,newval)

#define IMgaAttribute_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_Meta_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ IMgaMetaAttribute **pVal);


void __RPC_STUB IMgaAttribute_get_Meta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_Value_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaAttribute_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_Value_Proxy( 
    IMgaAttribute * This,
    /* [in] */ VARIANT newVal);


void __RPC_STUB IMgaAttribute_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_Owner_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaAttribute_get_Owner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_Status_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ long *status);


void __RPC_STUB IMgaAttribute_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_OrigValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ VARIANT *pVal);


void __RPC_STUB IMgaAttribute_get_OrigValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_HasChanged_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaAttribute_get_HasChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_StringValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaAttribute_get_StringValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_StringValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaAttribute_put_StringValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_IntValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IMgaAttribute_get_IntValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_IntValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ long newVal);


void __RPC_STUB IMgaAttribute_put_IntValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_BoolValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IMgaAttribute_get_BoolValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_BoolValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IMgaAttribute_put_BoolValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_FloatValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IMgaAttribute_get_FloatValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_FloatValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ double newVal);


void __RPC_STUB IMgaAttribute_put_FloatValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_FCOValue_Proxy( 
    IMgaAttribute * This,
    /* [retval][out] */ IMgaFCO **pVal);


void __RPC_STUB IMgaAttribute_get_FCOValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_FCOValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ IMgaFCO *newVal);


void __RPC_STUB IMgaAttribute_put_FCOValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_RegistryNode_Proxy( 
    IMgaAttribute * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ IMgaRegNode **pVal);


void __RPC_STUB IMgaAttribute_get_RegistryNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_Registry_Proxy( 
    IMgaAttribute * This,
    /* [defaultvalue][in] */ VARIANT_BOOL virtuals,
    /* [retval][out] */ IMgaRegNodes **pVal);


void __RPC_STUB IMgaAttribute_get_Registry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_get_RegistryValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ BSTR path,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaAttribute_get_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_put_RegistryValue_Proxy( 
    IMgaAttribute * This,
    /* [in] */ BSTR path,
    /* [in] */ BSTR newval);


void __RPC_STUB IMgaAttribute_put_RegistryValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttribute_Clear_Proxy( 
    IMgaAttribute * This);


void __RPC_STUB IMgaAttribute_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaAttribute_INTERFACE_DEFINED__ */


#ifndef __IMgaFolders_INTERFACE_DEFINED__
#define __IMgaFolders_INTERFACE_DEFINED__

/* interface IMgaFolders */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaFolders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c59c2210-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaFolders : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaFolder **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaFolder **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaFolder *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaFolder *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaFolder *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaFoldersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaFolders * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaFolders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaFolders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaFolders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaFolders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaFolders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaFolders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaFolders * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaFolders * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaFolder **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaFolders * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaFolders * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaFolder **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaFolders * This,
            /* [in] */ IMgaFolder *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaFolders * This,
            /* [in] */ IMgaFolder *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaFolders * This,
            /* [in] */ IMgaFolder *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaFolders * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaFoldersVtbl;

    interface IMgaFolders
    {
        CONST_VTBL struct IMgaFoldersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaFolders_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaFolders_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaFolders_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaFolders_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaFolders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaFolders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaFolders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaFolders_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaFolders_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaFolders_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaFolders_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaFolders_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaFolders_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaFolders_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaFolders_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolders_get_Count_Proxy( 
    IMgaFolders * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaFolders_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolders_get_Item_Proxy( 
    IMgaFolders * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaFolder **p);


void __RPC_STUB IMgaFolders_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaFolders_get__NewEnum_Proxy( 
    IMgaFolders * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaFolders_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolders_GetAll_Proxy( 
    IMgaFolders * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaFolder **p);


void __RPC_STUB IMgaFolders_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolders_Insert_Proxy( 
    IMgaFolders * This,
    /* [in] */ IMgaFolder *p,
    /* [in] */ long at);


void __RPC_STUB IMgaFolders_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolders_Append_Proxy( 
    IMgaFolders * This,
    /* [in] */ IMgaFolder *p);


void __RPC_STUB IMgaFolders_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolders_Find_Proxy( 
    IMgaFolders * This,
    /* [in] */ IMgaFolder *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaFolders_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFolders_Remove_Proxy( 
    IMgaFolders * This,
    /* [in] */ long n);


void __RPC_STUB IMgaFolders_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaFolders_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0313 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaFolders>
{ typedef IMgaFolders collection_type; typedef IMgaFolder element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaFolder>
{ typedef IMgaFolders collection_type; typedef IMgaFolder element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0313_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0313_v0_0_s_ifspec;

#ifndef __IMgaFCOs_INTERFACE_DEFINED__
#define __IMgaFCOs_INTERFACE_DEFINED__

/* interface IMgaFCOs */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaFCOs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c5f4c2f0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaFCOs : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaFCO **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaFCO **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaFCO *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaFCO *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaFCO *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaFCOsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaFCOs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaFCOs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaFCOs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaFCOs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaFCOs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaFCOs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaFCOs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaFCOs * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaFCOs * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaFCO **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaFCOs * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaFCOs * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaFCO **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaFCOs * This,
            /* [in] */ IMgaFCO *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaFCOs * This,
            /* [in] */ IMgaFCO *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaFCOs * This,
            /* [in] */ IMgaFCO *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaFCOs * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaFCOsVtbl;

    interface IMgaFCOs
    {
        CONST_VTBL struct IMgaFCOsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaFCOs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaFCOs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaFCOs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaFCOs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaFCOs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaFCOs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaFCOs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaFCOs_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaFCOs_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaFCOs_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaFCOs_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaFCOs_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaFCOs_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaFCOs_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaFCOs_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_get_Count_Proxy( 
    IMgaFCOs * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaFCOs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_get_Item_Proxy( 
    IMgaFCOs * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaFCO **p);


void __RPC_STUB IMgaFCOs_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_get__NewEnum_Proxy( 
    IMgaFCOs * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaFCOs_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_GetAll_Proxy( 
    IMgaFCOs * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaFCO **p);


void __RPC_STUB IMgaFCOs_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_Insert_Proxy( 
    IMgaFCOs * This,
    /* [in] */ IMgaFCO *p,
    /* [in] */ long at);


void __RPC_STUB IMgaFCOs_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_Append_Proxy( 
    IMgaFCOs * This,
    /* [in] */ IMgaFCO *p);


void __RPC_STUB IMgaFCOs_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_Find_Proxy( 
    IMgaFCOs * This,
    /* [in] */ IMgaFCO *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaFCOs_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaFCOs_Remove_Proxy( 
    IMgaFCOs * This,
    /* [in] */ long n);


void __RPC_STUB IMgaFCOs_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaFCOs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0314 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaFCOs>
{ typedef IMgaFCOs collection_type; typedef IMgaFCO element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaFCO>
{ typedef IMgaFCOs collection_type; typedef IMgaFCO element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0314_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0314_v0_0_s_ifspec;

#ifndef __IMgaAttributes_INTERFACE_DEFINED__
#define __IMgaAttributes_INTERFACE_DEFINED__

/* interface IMgaAttributes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c6f3f340-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaAttributes : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaAttribute **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaAttribute **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaAttribute *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaAttribute *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaAttribute *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaAttributes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaAttributes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaAttributes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaAttributes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaAttributes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaAttributes * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaAttributes * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaAttribute **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaAttributes * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaAttributes * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaAttribute **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaAttributes * This,
            /* [in] */ IMgaAttribute *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaAttributes * This,
            /* [in] */ IMgaAttribute *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaAttributes * This,
            /* [in] */ IMgaAttribute *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaAttributes * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaAttributesVtbl;

    interface IMgaAttributes
    {
        CONST_VTBL struct IMgaAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaAttributes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaAttributes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaAttributes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaAttributes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaAttributes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaAttributes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaAttributes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaAttributes_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaAttributes_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaAttributes_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaAttributes_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaAttributes_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaAttributes_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaAttributes_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaAttributes_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_get_Count_Proxy( 
    IMgaAttributes * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaAttributes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_get_Item_Proxy( 
    IMgaAttributes * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaAttribute **p);


void __RPC_STUB IMgaAttributes_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_get__NewEnum_Proxy( 
    IMgaAttributes * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaAttributes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_GetAll_Proxy( 
    IMgaAttributes * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaAttribute **p);


void __RPC_STUB IMgaAttributes_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_Insert_Proxy( 
    IMgaAttributes * This,
    /* [in] */ IMgaAttribute *p,
    /* [in] */ long at);


void __RPC_STUB IMgaAttributes_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_Append_Proxy( 
    IMgaAttributes * This,
    /* [in] */ IMgaAttribute *p);


void __RPC_STUB IMgaAttributes_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_Find_Proxy( 
    IMgaAttributes * This,
    /* [in] */ IMgaAttribute *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaAttributes_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAttributes_Remove_Proxy( 
    IMgaAttributes * This,
    /* [in] */ long n);


void __RPC_STUB IMgaAttributes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaAttributes_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0315 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaAttributes>
{ typedef IMgaAttributes collection_type; typedef IMgaAttribute element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaAttribute>
{ typedef IMgaAttributes collection_type; typedef IMgaAttribute element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0315_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0315_v0_0_s_ifspec;

#ifndef __IMgaParts_INTERFACE_DEFINED__
#define __IMgaParts_INTERFACE_DEFINED__

/* interface IMgaParts */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaParts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c71a26f0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaParts : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaPart **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaPart **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaPart *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaPart *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaPart *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaPartsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaParts * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaParts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaParts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaParts * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaParts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaParts * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaParts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaParts * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaParts * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaPart **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaParts * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaParts * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaPart **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaParts * This,
            /* [in] */ IMgaPart *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaParts * This,
            /* [in] */ IMgaPart *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaParts * This,
            /* [in] */ IMgaPart *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaParts * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaPartsVtbl;

    interface IMgaParts
    {
        CONST_VTBL struct IMgaPartsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaParts_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaParts_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaParts_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaParts_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaParts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaParts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaParts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaParts_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaParts_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaParts_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaParts_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaParts_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaParts_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaParts_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaParts_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaParts_get_Count_Proxy( 
    IMgaParts * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaParts_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaParts_get_Item_Proxy( 
    IMgaParts * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaPart **p);


void __RPC_STUB IMgaParts_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaParts_get__NewEnum_Proxy( 
    IMgaParts * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaParts_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaParts_GetAll_Proxy( 
    IMgaParts * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaPart **p);


void __RPC_STUB IMgaParts_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaParts_Insert_Proxy( 
    IMgaParts * This,
    /* [in] */ IMgaPart *p,
    /* [in] */ long at);


void __RPC_STUB IMgaParts_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaParts_Append_Proxy( 
    IMgaParts * This,
    /* [in] */ IMgaPart *p);


void __RPC_STUB IMgaParts_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaParts_Find_Proxy( 
    IMgaParts * This,
    /* [in] */ IMgaPart *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaParts_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaParts_Remove_Proxy( 
    IMgaParts * This,
    /* [in] */ long n);


void __RPC_STUB IMgaParts_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaParts_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0316 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaParts>
{ typedef IMgaParts collection_type; typedef IMgaPart element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaPart>
{ typedef IMgaParts collection_type; typedef IMgaPart element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0316_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0316_v0_0_s_ifspec;

#ifndef __IMgaConnPoints_INTERFACE_DEFINED__
#define __IMgaConnPoints_INTERFACE_DEFINED__

/* interface IMgaConnPoints */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaConnPoints;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c7f19c60-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaConnPoints : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaConnPoint **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaConnPoint **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaConnPoint *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaConnPoint *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaConnPoint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaConnPointsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaConnPoints * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaConnPoints * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaConnPoints * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaConnPoints * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaConnPoints * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaConnPoints * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaConnPoints * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaConnPoints * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaConnPoints * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaConnPoint **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaConnPoints * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaConnPoints * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaConnPoint **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaConnPoints * This,
            /* [in] */ IMgaConnPoint *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaConnPoints * This,
            /* [in] */ IMgaConnPoint *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaConnPoints * This,
            /* [in] */ IMgaConnPoint *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaConnPoints * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaConnPointsVtbl;

    interface IMgaConnPoints
    {
        CONST_VTBL struct IMgaConnPointsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaConnPoints_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaConnPoints_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaConnPoints_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaConnPoints_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaConnPoints_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaConnPoints_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaConnPoints_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaConnPoints_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaConnPoints_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaConnPoints_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaConnPoints_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaConnPoints_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaConnPoints_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaConnPoints_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaConnPoints_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_get_Count_Proxy( 
    IMgaConnPoints * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaConnPoints_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_get_Item_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaConnPoint **p);


void __RPC_STUB IMgaConnPoints_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_get__NewEnum_Proxy( 
    IMgaConnPoints * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaConnPoints_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_GetAll_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaConnPoint **p);


void __RPC_STUB IMgaConnPoints_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_Insert_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ IMgaConnPoint *p,
    /* [in] */ long at);


void __RPC_STUB IMgaConnPoints_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_Append_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ IMgaConnPoint *p);


void __RPC_STUB IMgaConnPoints_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_Find_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ IMgaConnPoint *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaConnPoints_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaConnPoints_Remove_Proxy( 
    IMgaConnPoints * This,
    /* [in] */ long n);


void __RPC_STUB IMgaConnPoints_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaConnPoints_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0317 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaConnPoints>
{ typedef IMgaConnPoints collection_type; typedef IMgaConnPoint element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaConnPoint>
{ typedef IMgaConnPoints collection_type; typedef IMgaConnPoint element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0317_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0317_v0_0_s_ifspec;

#ifndef __IMgaRegNodes_INTERFACE_DEFINED__
#define __IMgaRegNodes_INTERFACE_DEFINED__

/* interface IMgaRegNodes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaRegNodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c79f1840-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaRegNodes : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaRegNode **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaRegNode **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaRegNode *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaRegNode *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaRegNode *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaRegNodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaRegNodes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaRegNodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaRegNodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaRegNodes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaRegNodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaRegNodes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaRegNodes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaRegNodes * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaRegNodes * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaRegNode **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaRegNodes * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaRegNodes * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaRegNode **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaRegNodes * This,
            /* [in] */ IMgaRegNode *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaRegNodes * This,
            /* [in] */ IMgaRegNode *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaRegNodes * This,
            /* [in] */ IMgaRegNode *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaRegNodes * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaRegNodesVtbl;

    interface IMgaRegNodes
    {
        CONST_VTBL struct IMgaRegNodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaRegNodes_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaRegNodes_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaRegNodes_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaRegNodes_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaRegNodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaRegNodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaRegNodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaRegNodes_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaRegNodes_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaRegNodes_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaRegNodes_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaRegNodes_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaRegNodes_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaRegNodes_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaRegNodes_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_get_Count_Proxy( 
    IMgaRegNodes * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaRegNodes_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_get_Item_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaRegNode **p);


void __RPC_STUB IMgaRegNodes_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_get__NewEnum_Proxy( 
    IMgaRegNodes * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaRegNodes_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_GetAll_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaRegNode **p);


void __RPC_STUB IMgaRegNodes_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_Insert_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ IMgaRegNode *p,
    /* [in] */ long at);


void __RPC_STUB IMgaRegNodes_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_Append_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ IMgaRegNode *p);


void __RPC_STUB IMgaRegNodes_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_Find_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ IMgaRegNode *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaRegNodes_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegNodes_Remove_Proxy( 
    IMgaRegNodes * This,
    /* [in] */ long n);


void __RPC_STUB IMgaRegNodes_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaRegNodes_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0318 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaRegNodes>
{ typedef IMgaRegNodes collection_type; typedef IMgaRegNode element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaRegNode>
{ typedef IMgaRegNodes collection_type; typedef IMgaRegNode element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0318_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0318_v0_0_s_ifspec;

#ifndef __IMgaAddOns_INTERFACE_DEFINED__
#define __IMgaAddOns_INTERFACE_DEFINED__

/* interface IMgaAddOns */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaAddOns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8a5ec80-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaAddOns : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaAddOn **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaAddOn **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaAddOn *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaAddOn *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaAddOn *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaAddOnsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaAddOns * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaAddOns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaAddOns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaAddOns * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaAddOns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaAddOns * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaAddOns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaAddOns * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaAddOns * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaAddOn **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaAddOns * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaAddOns * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaAddOn **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaAddOns * This,
            /* [in] */ IMgaAddOn *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaAddOns * This,
            /* [in] */ IMgaAddOn *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaAddOns * This,
            /* [in] */ IMgaAddOn *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaAddOns * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaAddOnsVtbl;

    interface IMgaAddOns
    {
        CONST_VTBL struct IMgaAddOnsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaAddOns_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaAddOns_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaAddOns_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaAddOns_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaAddOns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaAddOns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaAddOns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaAddOns_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaAddOns_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaAddOns_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaAddOns_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaAddOns_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaAddOns_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaAddOns_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaAddOns_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_get_Count_Proxy( 
    IMgaAddOns * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaAddOns_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_get_Item_Proxy( 
    IMgaAddOns * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaAddOn **p);


void __RPC_STUB IMgaAddOns_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_get__NewEnum_Proxy( 
    IMgaAddOns * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaAddOns_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_GetAll_Proxy( 
    IMgaAddOns * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaAddOn **p);


void __RPC_STUB IMgaAddOns_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_Insert_Proxy( 
    IMgaAddOns * This,
    /* [in] */ IMgaAddOn *p,
    /* [in] */ long at);


void __RPC_STUB IMgaAddOns_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_Append_Proxy( 
    IMgaAddOns * This,
    /* [in] */ IMgaAddOn *p);


void __RPC_STUB IMgaAddOns_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_Find_Proxy( 
    IMgaAddOns * This,
    /* [in] */ IMgaAddOn *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaAddOns_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaAddOns_Remove_Proxy( 
    IMgaAddOns * This,
    /* [in] */ long n);


void __RPC_STUB IMgaAddOns_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaAddOns_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0319 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaAddOns>
{ typedef IMgaAddOns collection_type; typedef IMgaAddOn element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaAddOn>
{ typedef IMgaAddOns collection_type; typedef IMgaAddOn element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0319_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0319_v0_0_s_ifspec;

#ifndef __IMgaTerritories_INTERFACE_DEFINED__
#define __IMgaTerritories_INTERFACE_DEFINED__

/* interface IMgaTerritories */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaTerritories;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c87caa70-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaTerritories : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaTerritory **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaTerritory **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaTerritory *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaTerritory *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaTerritory *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaTerritoriesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaTerritories * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaTerritories * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaTerritories * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaTerritories * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaTerritories * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaTerritories * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaTerritories * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaTerritories * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaTerritories * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaTerritory **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaTerritories * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaTerritories * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaTerritory **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaTerritories * This,
            /* [in] */ IMgaTerritory *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaTerritories * This,
            /* [in] */ IMgaTerritory *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaTerritories * This,
            /* [in] */ IMgaTerritory *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaTerritories * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaTerritoriesVtbl;

    interface IMgaTerritories
    {
        CONST_VTBL struct IMgaTerritoriesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaTerritories_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaTerritories_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaTerritories_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaTerritories_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaTerritories_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaTerritories_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaTerritories_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaTerritories_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaTerritories_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaTerritories_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaTerritories_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaTerritories_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaTerritories_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaTerritories_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaTerritories_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_get_Count_Proxy( 
    IMgaTerritories * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaTerritories_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_get_Item_Proxy( 
    IMgaTerritories * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaTerritory **p);


void __RPC_STUB IMgaTerritories_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_get__NewEnum_Proxy( 
    IMgaTerritories * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaTerritories_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_GetAll_Proxy( 
    IMgaTerritories * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaTerritory **p);


void __RPC_STUB IMgaTerritories_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_Insert_Proxy( 
    IMgaTerritories * This,
    /* [in] */ IMgaTerritory *p,
    /* [in] */ long at);


void __RPC_STUB IMgaTerritories_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_Append_Proxy( 
    IMgaTerritories * This,
    /* [in] */ IMgaTerritory *p);


void __RPC_STUB IMgaTerritories_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_Find_Proxy( 
    IMgaTerritories * This,
    /* [in] */ IMgaTerritory *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaTerritories_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaTerritories_Remove_Proxy( 
    IMgaTerritories * This,
    /* [in] */ long n);


void __RPC_STUB IMgaTerritories_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaTerritories_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0320 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaTerritories>
{ typedef IMgaTerritories collection_type; typedef IMgaTerritory element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaTerritory>
{ typedef IMgaTerritories collection_type; typedef IMgaTerritory element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0320_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0320_v0_0_s_ifspec;

#ifndef __IMgaComponents_INTERFACE_DEFINED__
#define __IMgaComponents_INTERFACE_DEFINED__

/* interface IMgaComponents */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaComponents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8cda760-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaComponents : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaComponent **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaComponent **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaComponent *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaComponent *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaComponent *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaComponentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaComponents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaComponents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaComponents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaComponents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaComponents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaComponents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaComponents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaComponents * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaComponents * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaComponent **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaComponents * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaComponents * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaComponent **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaComponents * This,
            /* [in] */ IMgaComponent *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaComponents * This,
            /* [in] */ IMgaComponent *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaComponents * This,
            /* [in] */ IMgaComponent *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaComponents * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaComponentsVtbl;

    interface IMgaComponents
    {
        CONST_VTBL struct IMgaComponentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaComponents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaComponents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaComponents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaComponents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaComponents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaComponents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaComponents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaComponents_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaComponents_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaComponents_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaComponents_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaComponents_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaComponents_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaComponents_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaComponents_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponents_get_Count_Proxy( 
    IMgaComponents * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaComponents_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponents_get_Item_Proxy( 
    IMgaComponents * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaComponent **p);


void __RPC_STUB IMgaComponents_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaComponents_get__NewEnum_Proxy( 
    IMgaComponents * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaComponents_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponents_GetAll_Proxy( 
    IMgaComponents * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaComponent **p);


void __RPC_STUB IMgaComponents_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponents_Insert_Proxy( 
    IMgaComponents * This,
    /* [in] */ IMgaComponent *p,
    /* [in] */ long at);


void __RPC_STUB IMgaComponents_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponents_Append_Proxy( 
    IMgaComponents * This,
    /* [in] */ IMgaComponent *p);


void __RPC_STUB IMgaComponents_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponents_Find_Proxy( 
    IMgaComponents * This,
    /* [in] */ IMgaComponent *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaComponents_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaComponents_Remove_Proxy( 
    IMgaComponents * This,
    /* [in] */ long n);


void __RPC_STUB IMgaComponents_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaComponents_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0321 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaComponents>
{ typedef IMgaComponents collection_type; typedef IMgaComponent element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaComponent>
{ typedef IMgaComponents collection_type; typedef IMgaComponent element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0321_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0321_v0_0_s_ifspec;

#ifndef __IMgaClients_INTERFACE_DEFINED__
#define __IMgaClients_INTERFACE_DEFINED__

/* interface IMgaClients */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaClients;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c9d8df93-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaClients : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaClient **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaClient **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaClient *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaClient *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaClient *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaClientsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaClients * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaClients * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaClients * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaClients * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaClients * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaClients * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaClients * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaClients * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaClients * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaClient **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaClients * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaClients * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaClient **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaClients * This,
            /* [in] */ IMgaClient *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaClients * This,
            /* [in] */ IMgaClient *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaClients * This,
            /* [in] */ IMgaClient *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaClients * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaClientsVtbl;

    interface IMgaClients
    {
        CONST_VTBL struct IMgaClientsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaClients_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaClients_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaClients_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaClients_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaClients_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaClients_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaClients_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaClients_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaClients_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaClients_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaClients_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaClients_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaClients_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaClients_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaClients_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaClients_get_Count_Proxy( 
    IMgaClients * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaClients_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaClients_get_Item_Proxy( 
    IMgaClients * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaClient **p);


void __RPC_STUB IMgaClients_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaClients_get__NewEnum_Proxy( 
    IMgaClients * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaClients_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClients_GetAll_Proxy( 
    IMgaClients * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaClient **p);


void __RPC_STUB IMgaClients_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClients_Insert_Proxy( 
    IMgaClients * This,
    /* [in] */ IMgaClient *p,
    /* [in] */ long at);


void __RPC_STUB IMgaClients_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClients_Append_Proxy( 
    IMgaClients * This,
    /* [in] */ IMgaClient *p);


void __RPC_STUB IMgaClients_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClients_Find_Proxy( 
    IMgaClients * This,
    /* [in] */ IMgaClient *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaClients_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaClients_Remove_Proxy( 
    IMgaClients * This,
    /* [in] */ long n);


void __RPC_STUB IMgaClients_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaClients_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0322 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaClients>
{ typedef IMgaClients collection_type; typedef IMgaClient element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaClient>
{ typedef IMgaClients collection_type; typedef IMgaClient element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0322_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0322_v0_0_s_ifspec;

#ifndef __IMgaObjects_INTERFACE_DEFINED__
#define __IMgaObjects_INTERFACE_DEFINED__

/* interface IMgaObjects */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaObjects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c5aac2f0-c1fd-11d3-9ad2-00aa00b6fe26")
    IMgaObjects : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long n,
            /* [retval][out] */ IMgaObject **p) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAll( 
            /* [in] */ long count,
            /* [size_is][out] */ IMgaObject **p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ IMgaObject *p,
            /* [in] */ long at) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ IMgaObject *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ IMgaObject *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long n) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaObjectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaObjects * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaObjects * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaObjects * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaObjects * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaObjects * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaObjects * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaObjects * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IMgaObjects * This,
            /* [retval][out] */ long *p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IMgaObjects * This,
            /* [in] */ long n,
            /* [retval][out] */ IMgaObject **p);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IMgaObjects * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAll )( 
            IMgaObjects * This,
            /* [in] */ long count,
            /* [size_is][out] */ IMgaObject **p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMgaObjects * This,
            /* [in] */ IMgaObject *p,
            /* [in] */ long at);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            IMgaObjects * This,
            /* [in] */ IMgaObject *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IMgaObjects * This,
            /* [in] */ IMgaObject *p,
            /* [in] */ long start,
            /* [retval][out] */ long *res);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IMgaObjects * This,
            /* [in] */ long n);
        
        END_INTERFACE
    } IMgaObjectsVtbl;

    interface IMgaObjects
    {
        CONST_VTBL struct IMgaObjectsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaObjects_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaObjects_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaObjects_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaObjects_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaObjects_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaObjects_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaObjects_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaObjects_get_Count(This,p)	\
    (This)->lpVtbl -> get_Count(This,p)

#define IMgaObjects_get_Item(This,n,p)	\
    (This)->lpVtbl -> get_Item(This,n,p)

#define IMgaObjects_get__NewEnum(This,p)	\
    (This)->lpVtbl -> get__NewEnum(This,p)

#define IMgaObjects_GetAll(This,count,p)	\
    (This)->lpVtbl -> GetAll(This,count,p)

#define IMgaObjects_Insert(This,p,at)	\
    (This)->lpVtbl -> Insert(This,p,at)

#define IMgaObjects_Append(This,p)	\
    (This)->lpVtbl -> Append(This,p)

#define IMgaObjects_Find(This,p,start,res)	\
    (This)->lpVtbl -> Find(This,p,start,res)

#define IMgaObjects_Remove(This,n)	\
    (This)->lpVtbl -> Remove(This,n)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaObjects_get_Count_Proxy( 
    IMgaObjects * This,
    /* [retval][out] */ long *p);


void __RPC_STUB IMgaObjects_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaObjects_get_Item_Proxy( 
    IMgaObjects * This,
    /* [in] */ long n,
    /* [retval][out] */ IMgaObject **p);


void __RPC_STUB IMgaObjects_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMgaObjects_get__NewEnum_Proxy( 
    IMgaObjects * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaObjects_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObjects_GetAll_Proxy( 
    IMgaObjects * This,
    /* [in] */ long count,
    /* [size_is][out] */ IMgaObject **p);


void __RPC_STUB IMgaObjects_GetAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObjects_Insert_Proxy( 
    IMgaObjects * This,
    /* [in] */ IMgaObject *p,
    /* [in] */ long at);


void __RPC_STUB IMgaObjects_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObjects_Append_Proxy( 
    IMgaObjects * This,
    /* [in] */ IMgaObject *p);


void __RPC_STUB IMgaObjects_Append_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObjects_Find_Proxy( 
    IMgaObjects * This,
    /* [in] */ IMgaObject *p,
    /* [in] */ long start,
    /* [retval][out] */ long *res);


void __RPC_STUB IMgaObjects_Find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaObjects_Remove_Proxy( 
    IMgaObjects * This,
    /* [in] */ long n);


void __RPC_STUB IMgaObjects_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaObjects_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0323 */
/* [local] */ 

#ifdef __cplusplus
extern "C++"    
{            
template<> struct ::TypeName_MgaColl2Elem<IMgaObjects>
{ typedef IMgaObjects collection_type; typedef IMgaObject element_type; };
template<> struct ::TypeName_MgaElem2Coll<IMgaObject>
{ typedef IMgaObjects collection_type; typedef IMgaObject element_type; };
}            
#endif


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0323_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0323_v0_0_s_ifspec;

#ifndef __IMgaO_INTERFACE_DEFINED__
#define __IMgaO_INTERFACE_DEFINED__

/* interface IMgaO */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaO;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C356B135-961D-4B6C-8B1F-257E19117CC1")
    IMgaO : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IMgaOVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaO * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaO * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaO * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaO * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaO * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaO * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaO * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IMgaOVtbl;

    interface IMgaO
    {
        CONST_VTBL struct IMgaOVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaO_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaO_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaO_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaO_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaO_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaO_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaO_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMgaO_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0324 */
/* [local] */ 

typedef 
enum mgautil_error
    {	E_MGAUTIL_COMPONENTPROXY_NOTINITIALIZED	= 0x80737001
    } 	mgautil_error;



extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0324_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0324_v0_0_s_ifspec;

#ifndef __IMgaResolver_INTERFACE_DEFINED__
#define __IMgaResolver_INTERFACE_DEFINED__

/* interface IMgaResolver */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaResolver;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("461F30B0-3BF0-11D4-B3F0-005004D38590")
    IMgaResolver : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IsInteractive( 
            /* [in] */ VARIANT_BOOL p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsInteractive( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IsStickyEnabled( 
            /* [in] */ VARIANT_BOOL p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsStickyEnabled( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FolderByStr( 
            /* [in] */ IMgaFolder *parent,
            /* [in] */ BSTR kind,
            /* [retval][out] */ IMgaMetaFolder **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_KindByStr( 
            /* [in] */ IMgaFolder *parent,
            /* [in] */ BSTR kind,
            /* [in] */ objtype_enum objtype,
            /* [retval][out] */ IMgaMetaFCO **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoleByStr( 
            /* [in] */ IMgaModel *parent,
            /* [in] */ BSTR kind,
            /* [in] */ objtype_enum objtype,
            /* [in] */ BSTR role,
            /* [in] */ BSTR aspect,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AttrByStr( 
            /* [in] */ IMgaFCO *parent,
            /* [in] */ BSTR kind,
            /* [retval][out] */ IMgaMetaAttribute **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RoleByMeta( 
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaFCO *kind,
            /* [in] */ objtype_enum objtype,
            /* [in] */ IMgaMetaRole *role,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConnRoleByMeta( 
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ IMgaFCO *src,
            /* [in] */ IMgaFCO *src_port,
            /* [in] */ IMgaFCO *dst,
            /* [in] */ IMgaFCO *dst_port,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RefRoleByMeta( 
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ IMgaFCO *src,
            /* [retval][out] */ IMgaMetaRole **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RolesByMetas( 
            /* [in] */ IMgaModel *dst_parent,
            /* [in] */ IMgaFCOs *src,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ BSTR sz_aspect,
            /* [retval][out] */ IMgaMetaRoles **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaResolverVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaResolver * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaResolver * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaResolver * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaResolver * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaResolver * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaResolver * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaResolver * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IMgaResolver * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsInteractive )( 
            IMgaResolver * This,
            /* [in] */ VARIANT_BOOL p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsInteractive )( 
            IMgaResolver * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStickyEnabled )( 
            IMgaResolver * This,
            /* [in] */ VARIANT_BOOL p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStickyEnabled )( 
            IMgaResolver * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FolderByStr )( 
            IMgaResolver * This,
            /* [in] */ IMgaFolder *parent,
            /* [in] */ BSTR kind,
            /* [retval][out] */ IMgaMetaFolder **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_KindByStr )( 
            IMgaResolver * This,
            /* [in] */ IMgaFolder *parent,
            /* [in] */ BSTR kind,
            /* [in] */ objtype_enum objtype,
            /* [retval][out] */ IMgaMetaFCO **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleByStr )( 
            IMgaResolver * This,
            /* [in] */ IMgaModel *parent,
            /* [in] */ BSTR kind,
            /* [in] */ objtype_enum objtype,
            /* [in] */ BSTR role,
            /* [in] */ BSTR aspect,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AttrByStr )( 
            IMgaResolver * This,
            /* [in] */ IMgaFCO *parent,
            /* [in] */ BSTR kind,
            /* [retval][out] */ IMgaMetaAttribute **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleByMeta )( 
            IMgaResolver * This,
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaFCO *kind,
            /* [in] */ objtype_enum objtype,
            /* [in] */ IMgaMetaRole *role,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnRoleByMeta )( 
            IMgaResolver * This,
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ IMgaFCO *src,
            /* [in] */ IMgaFCO *src_port,
            /* [in] */ IMgaFCO *dst,
            /* [in] */ IMgaFCO *dst_port,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RefRoleByMeta )( 
            IMgaResolver * This,
            /* [in] */ IMgaModel *parent,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ IMgaFCO *src,
            /* [retval][out] */ IMgaMetaRole **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RolesByMetas )( 
            IMgaResolver * This,
            /* [in] */ IMgaModel *dst_parent,
            /* [in] */ IMgaFCOs *src,
            /* [in] */ IMgaMetaAspect *aspect,
            /* [in] */ BSTR sz_aspect,
            /* [retval][out] */ IMgaMetaRoles **p);
        
        END_INTERFACE
    } IMgaResolverVtbl;

    interface IMgaResolver
    {
        CONST_VTBL struct IMgaResolverVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaResolver_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaResolver_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaResolver_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaResolver_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaResolver_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaResolver_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaResolver_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaResolver_Clear(This)	\
    (This)->lpVtbl -> Clear(This)

#define IMgaResolver_put_IsInteractive(This,p)	\
    (This)->lpVtbl -> put_IsInteractive(This,p)

#define IMgaResolver_get_IsInteractive(This,p)	\
    (This)->lpVtbl -> get_IsInteractive(This,p)

#define IMgaResolver_put_IsStickyEnabled(This,p)	\
    (This)->lpVtbl -> put_IsStickyEnabled(This,p)

#define IMgaResolver_get_IsStickyEnabled(This,p)	\
    (This)->lpVtbl -> get_IsStickyEnabled(This,p)

#define IMgaResolver_get_FolderByStr(This,parent,kind,p)	\
    (This)->lpVtbl -> get_FolderByStr(This,parent,kind,p)

#define IMgaResolver_get_KindByStr(This,parent,kind,objtype,p)	\
    (This)->lpVtbl -> get_KindByStr(This,parent,kind,objtype,p)

#define IMgaResolver_get_RoleByStr(This,parent,kind,objtype,role,aspect,p)	\
    (This)->lpVtbl -> get_RoleByStr(This,parent,kind,objtype,role,aspect,p)

#define IMgaResolver_get_AttrByStr(This,parent,kind,p)	\
    (This)->lpVtbl -> get_AttrByStr(This,parent,kind,p)

#define IMgaResolver_get_RoleByMeta(This,parent,kind,objtype,role,aspect,p)	\
    (This)->lpVtbl -> get_RoleByMeta(This,parent,kind,objtype,role,aspect,p)

#define IMgaResolver_get_ConnRoleByMeta(This,parent,aspect,src,src_port,dst,dst_port,p)	\
    (This)->lpVtbl -> get_ConnRoleByMeta(This,parent,aspect,src,src_port,dst,dst_port,p)

#define IMgaResolver_get_RefRoleByMeta(This,parent,aspect,src,p)	\
    (This)->lpVtbl -> get_RefRoleByMeta(This,parent,aspect,src,p)

#define IMgaResolver_get_RolesByMetas(This,dst_parent,src,aspect,sz_aspect,p)	\
    (This)->lpVtbl -> get_RolesByMetas(This,dst_parent,src,aspect,sz_aspect,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaResolver_Clear_Proxy( 
    IMgaResolver * This);


void __RPC_STUB IMgaResolver_Clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaResolver_put_IsInteractive_Proxy( 
    IMgaResolver * This,
    /* [in] */ VARIANT_BOOL p);


void __RPC_STUB IMgaResolver_put_IsInteractive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_IsInteractive_Proxy( 
    IMgaResolver * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaResolver_get_IsInteractive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaResolver_put_IsStickyEnabled_Proxy( 
    IMgaResolver * This,
    /* [in] */ VARIANT_BOOL p);


void __RPC_STUB IMgaResolver_put_IsStickyEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_IsStickyEnabled_Proxy( 
    IMgaResolver * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaResolver_get_IsStickyEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_FolderByStr_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaFolder *parent,
    /* [in] */ BSTR kind,
    /* [retval][out] */ IMgaMetaFolder **p);


void __RPC_STUB IMgaResolver_get_FolderByStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_KindByStr_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaFolder *parent,
    /* [in] */ BSTR kind,
    /* [in] */ objtype_enum objtype,
    /* [retval][out] */ IMgaMetaFCO **p);


void __RPC_STUB IMgaResolver_get_KindByStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_RoleByStr_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaModel *parent,
    /* [in] */ BSTR kind,
    /* [in] */ objtype_enum objtype,
    /* [in] */ BSTR role,
    /* [in] */ BSTR aspect,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaResolver_get_RoleByStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_AttrByStr_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaFCO *parent,
    /* [in] */ BSTR kind,
    /* [retval][out] */ IMgaMetaAttribute **p);


void __RPC_STUB IMgaResolver_get_AttrByStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_RoleByMeta_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaModel *parent,
    /* [in] */ IMgaMetaFCO *kind,
    /* [in] */ objtype_enum objtype,
    /* [in] */ IMgaMetaRole *role,
    /* [in] */ IMgaMetaAspect *aspect,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaResolver_get_RoleByMeta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_ConnRoleByMeta_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaModel *parent,
    /* [in] */ IMgaMetaAspect *aspect,
    /* [in] */ IMgaFCO *src,
    /* [in] */ IMgaFCO *src_port,
    /* [in] */ IMgaFCO *dst,
    /* [in] */ IMgaFCO *dst_port,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaResolver_get_ConnRoleByMeta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_RefRoleByMeta_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaModel *parent,
    /* [in] */ IMgaMetaAspect *aspect,
    /* [in] */ IMgaFCO *src,
    /* [retval][out] */ IMgaMetaRole **p);


void __RPC_STUB IMgaResolver_get_RefRoleByMeta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaResolver_get_RolesByMetas_Proxy( 
    IMgaResolver * This,
    /* [in] */ IMgaModel *dst_parent,
    /* [in] */ IMgaFCOs *src,
    /* [in] */ IMgaMetaAspect *aspect,
    /* [in] */ BSTR sz_aspect,
    /* [retval][out] */ IMgaMetaRoles **p);


void __RPC_STUB IMgaResolver_get_RolesByMetas_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaResolver_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0327 */
/* [local] */ 

typedef 
enum regaccessmode_enum
    {	REGACCESS_NONE	= 0,
	REGACCESS_USER	= 1,
	REGACCESS_SYSTEM	= 2,
	REGACCESS_PRIORITY	= 5,
	REGACCESS_BOTH	= 3,
	REGACCESS_TEST	= 8
    } 	regaccessmode_enum;



extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0327_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0327_v0_0_s_ifspec;

#ifndef __IMgaRegistrar_INTERFACE_DEFINED__
#define __IMgaRegistrar_INTERFACE_DEFINED__

/* interface IMgaRegistrar */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaRegistrar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1D6BB05-42EE-11D4-B3F4-005004D38590")
    IMgaRegistrar : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconPath( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *path) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IconPath( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR path) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowMultipleView( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ShowMultipleView( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EventLoggingEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventLoggingEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AutosaveEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_AutosaveEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AutosaveFreq( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ long *secs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_AutosaveFreq( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ long secs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AutosaveUseDir( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *use) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_AutosaveUseDir( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL use) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AutosaveDir( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *dir) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_AutosaveDir( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR dir) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExternalEditorEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ExternalEditorEnabled( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExternalEditor( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *path) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ExternalEditor( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR path) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Paradigms( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *names) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterParadigmFromData( 
            /* [in] */ BSTR connstr,
            /* [out] */ BSTR *newname,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterParadigm( 
            /* [in] */ BSTR name,
            /* [in] */ BSTR connstr,
            /* [in] */ VARIANT guid,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryParadigm( 
            /* [in] */ BSTR name,
            /* [out] */ BSTR *connstr,
            /* [out][in] */ VARIANT *guid,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParadigmGUIDString( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *guidstr) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryParadigmAllGUIDs( 
            /* [in] */ BSTR name,
            /* [out] */ VARIANT *names,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterParadigm( 
            /* [in] */ BSTR name,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterParadigmGUID( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT guid,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Components( 
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *progids) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterComponent( 
            /* [in] */ BSTR progid,
            /* [in] */ componenttype_enum type,
            /* [in] */ BSTR desc,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryComponent( 
            /* [in] */ BSTR progid,
            /* [out] */ componenttype_enum *type,
            /* [out] */ BSTR *desc,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterComponent( 
            /* [in] */ BSTR progid,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ComponentExtraInfo( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentExtraInfo( 
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LocalDllPath( 
            /* [in] */ BSTR progid,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AssociatedComponents( 
            /* [in] */ BSTR paradigm,
            /* [in] */ componenttype_enum type,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *progids) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AssociatedParadigms( 
            /* [in] */ BSTR progid,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *paradigms) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Associate( 
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Disassociate( 
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsAssociated( 
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [out] */ VARIANT_BOOL *is_ass,
            /* [out] */ VARIANT_BOOL *can_ass,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterComponentLibrary( 
            /* [in] */ BSTR path,
            /* [in] */ regaccessmode_enum mode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterComponentLibrary( 
            /* [in] */ BSTR path,
            /* [in] */ regaccessmode_enum mode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaRegistrarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaRegistrar * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaRegistrar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaRegistrar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaRegistrar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaRegistrar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaRegistrar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaRegistrar * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconPath )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *path);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IconPath )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR path);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowMultipleView )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowMultipleView )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventLoggingEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventLoggingEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutosaveEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutosaveEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutosaveFreq )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ long *secs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutosaveFreq )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ long secs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutosaveUseDir )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *use);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutosaveUseDir )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL use);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutosaveDir )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *dir);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutosaveDir )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR dir);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExternalEditorEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT_BOOL *enabled);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExternalEditorEnabled )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ VARIANT_BOOL enabled);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExternalEditor )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ BSTR *path);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExternalEditor )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR path);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Paradigms )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *names);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterParadigmFromData )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR connstr,
            /* [out] */ BSTR *newname,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterParadigm )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR connstr,
            /* [in] */ VARIANT guid,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryParadigm )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR name,
            /* [out] */ BSTR *connstr,
            /* [out][in] */ VARIANT *guid,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParadigmGUIDString )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *guidstr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryParadigmAllGUIDs )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR name,
            /* [out] */ VARIANT *names,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterParadigm )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR name,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterParadigmGUID )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT guid,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Components )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *progids);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterComponent )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ componenttype_enum type,
            /* [in] */ BSTR desc,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryComponent )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [out] */ componenttype_enum *type,
            /* [out] */ BSTR *desc,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterComponent )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ComponentExtraInfo )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR name,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentExtraInfo )( 
            IMgaRegistrar * This,
            /* [in] */ regaccessmode_enum mode,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR name,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalDllPath )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AssociatedComponents )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR paradigm,
            /* [in] */ componenttype_enum type,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *progids);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AssociatedParadigms )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ regaccessmode_enum mode,
            /* [retval][out] */ VARIANT *paradigms);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Associate )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Disassociate )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsAssociated )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR progid,
            /* [in] */ BSTR paradigm,
            /* [out] */ VARIANT_BOOL *is_ass,
            /* [out] */ VARIANT_BOOL *can_ass,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterComponentLibrary )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR path,
            /* [in] */ regaccessmode_enum mode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterComponentLibrary )( 
            IMgaRegistrar * This,
            /* [in] */ BSTR path,
            /* [in] */ regaccessmode_enum mode);
        
        END_INTERFACE
    } IMgaRegistrarVtbl;

    interface IMgaRegistrar
    {
        CONST_VTBL struct IMgaRegistrarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaRegistrar_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaRegistrar_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaRegistrar_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaRegistrar_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaRegistrar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaRegistrar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaRegistrar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaRegistrar_get_IconPath(This,mode,path)	\
    (This)->lpVtbl -> get_IconPath(This,mode,path)

#define IMgaRegistrar_put_IconPath(This,mode,path)	\
    (This)->lpVtbl -> put_IconPath(This,mode,path)

#define IMgaRegistrar_get_ShowMultipleView(This,mode,enabled)	\
    (This)->lpVtbl -> get_ShowMultipleView(This,mode,enabled)

#define IMgaRegistrar_put_ShowMultipleView(This,mode,enabled)	\
    (This)->lpVtbl -> put_ShowMultipleView(This,mode,enabled)

#define IMgaRegistrar_get_EventLoggingEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> get_EventLoggingEnabled(This,mode,enabled)

#define IMgaRegistrar_put_EventLoggingEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> put_EventLoggingEnabled(This,mode,enabled)

#define IMgaRegistrar_get_AutosaveEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> get_AutosaveEnabled(This,mode,enabled)

#define IMgaRegistrar_put_AutosaveEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> put_AutosaveEnabled(This,mode,enabled)

#define IMgaRegistrar_get_AutosaveFreq(This,mode,secs)	\
    (This)->lpVtbl -> get_AutosaveFreq(This,mode,secs)

#define IMgaRegistrar_put_AutosaveFreq(This,mode,secs)	\
    (This)->lpVtbl -> put_AutosaveFreq(This,mode,secs)

#define IMgaRegistrar_get_AutosaveUseDir(This,mode,use)	\
    (This)->lpVtbl -> get_AutosaveUseDir(This,mode,use)

#define IMgaRegistrar_put_AutosaveUseDir(This,mode,use)	\
    (This)->lpVtbl -> put_AutosaveUseDir(This,mode,use)

#define IMgaRegistrar_get_AutosaveDir(This,mode,dir)	\
    (This)->lpVtbl -> get_AutosaveDir(This,mode,dir)

#define IMgaRegistrar_put_AutosaveDir(This,mode,dir)	\
    (This)->lpVtbl -> put_AutosaveDir(This,mode,dir)

#define IMgaRegistrar_get_ExternalEditorEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> get_ExternalEditorEnabled(This,mode,enabled)

#define IMgaRegistrar_put_ExternalEditorEnabled(This,mode,enabled)	\
    (This)->lpVtbl -> put_ExternalEditorEnabled(This,mode,enabled)

#define IMgaRegistrar_get_ExternalEditor(This,mode,path)	\
    (This)->lpVtbl -> get_ExternalEditor(This,mode,path)

#define IMgaRegistrar_put_ExternalEditor(This,mode,path)	\
    (This)->lpVtbl -> put_ExternalEditor(This,mode,path)

#define IMgaRegistrar_get_Paradigms(This,mode,names)	\
    (This)->lpVtbl -> get_Paradigms(This,mode,names)

#define IMgaRegistrar_RegisterParadigmFromData(This,connstr,newname,mode)	\
    (This)->lpVtbl -> RegisterParadigmFromData(This,connstr,newname,mode)

#define IMgaRegistrar_RegisterParadigm(This,name,connstr,guid,mode)	\
    (This)->lpVtbl -> RegisterParadigm(This,name,connstr,guid,mode)

#define IMgaRegistrar_QueryParadigm(This,name,connstr,guid,mode)	\
    (This)->lpVtbl -> QueryParadigm(This,name,connstr,guid,mode)

#define IMgaRegistrar_get_ParadigmGUIDString(This,mode,name,guidstr)	\
    (This)->lpVtbl -> get_ParadigmGUIDString(This,mode,name,guidstr)

#define IMgaRegistrar_QueryParadigmAllGUIDs(This,name,names,mode)	\
    (This)->lpVtbl -> QueryParadigmAllGUIDs(This,name,names,mode)

#define IMgaRegistrar_UnregisterParadigm(This,name,mode)	\
    (This)->lpVtbl -> UnregisterParadigm(This,name,mode)

#define IMgaRegistrar_UnregisterParadigmGUID(This,name,guid,mode)	\
    (This)->lpVtbl -> UnregisterParadigmGUID(This,name,guid,mode)

#define IMgaRegistrar_get_Components(This,mode,progids)	\
    (This)->lpVtbl -> get_Components(This,mode,progids)

#define IMgaRegistrar_RegisterComponent(This,progid,type,desc,mode)	\
    (This)->lpVtbl -> RegisterComponent(This,progid,type,desc,mode)

#define IMgaRegistrar_QueryComponent(This,progid,type,desc,mode)	\
    (This)->lpVtbl -> QueryComponent(This,progid,type,desc,mode)

#define IMgaRegistrar_UnregisterComponent(This,progid,mode)	\
    (This)->lpVtbl -> UnregisterComponent(This,progid,mode)

#define IMgaRegistrar_put_ComponentExtraInfo(This,mode,progid,name,newVal)	\
    (This)->lpVtbl -> put_ComponentExtraInfo(This,mode,progid,name,newVal)

#define IMgaRegistrar_get_ComponentExtraInfo(This,mode,progid,name,pVal)	\
    (This)->lpVtbl -> get_ComponentExtraInfo(This,mode,progid,name,pVal)

#define IMgaRegistrar_get_LocalDllPath(This,progid,pVal)	\
    (This)->lpVtbl -> get_LocalDllPath(This,progid,pVal)

#define IMgaRegistrar_get_AssociatedComponents(This,paradigm,type,mode,progids)	\
    (This)->lpVtbl -> get_AssociatedComponents(This,paradigm,type,mode,progids)

#define IMgaRegistrar_get_AssociatedParadigms(This,progid,mode,paradigms)	\
    (This)->lpVtbl -> get_AssociatedParadigms(This,progid,mode,paradigms)

#define IMgaRegistrar_Associate(This,progid,paradigm,mode)	\
    (This)->lpVtbl -> Associate(This,progid,paradigm,mode)

#define IMgaRegistrar_Disassociate(This,progid,paradigm,mode)	\
    (This)->lpVtbl -> Disassociate(This,progid,paradigm,mode)

#define IMgaRegistrar_IsAssociated(This,progid,paradigm,is_ass,can_ass,mode)	\
    (This)->lpVtbl -> IsAssociated(This,progid,paradigm,is_ass,can_ass,mode)

#define IMgaRegistrar_RegisterComponentLibrary(This,path,mode)	\
    (This)->lpVtbl -> RegisterComponentLibrary(This,path,mode)

#define IMgaRegistrar_UnregisterComponentLibrary(This,path,mode)	\
    (This)->lpVtbl -> UnregisterComponentLibrary(This,path,mode)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_IconPath_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ BSTR *path);


void __RPC_STUB IMgaRegistrar_get_IconPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_IconPath_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR path);


void __RPC_STUB IMgaRegistrar_put_IconPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_ShowMultipleView_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT_BOOL *enabled);


void __RPC_STUB IMgaRegistrar_get_ShowMultipleView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_ShowMultipleView_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ VARIANT_BOOL enabled);


void __RPC_STUB IMgaRegistrar_put_ShowMultipleView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_EventLoggingEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT_BOOL *enabled);


void __RPC_STUB IMgaRegistrar_get_EventLoggingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_EventLoggingEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ VARIANT_BOOL enabled);


void __RPC_STUB IMgaRegistrar_put_EventLoggingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AutosaveEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT_BOOL *enabled);


void __RPC_STUB IMgaRegistrar_get_AutosaveEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_AutosaveEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ VARIANT_BOOL enabled);


void __RPC_STUB IMgaRegistrar_put_AutosaveEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AutosaveFreq_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ long *secs);


void __RPC_STUB IMgaRegistrar_get_AutosaveFreq_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_AutosaveFreq_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ long secs);


void __RPC_STUB IMgaRegistrar_put_AutosaveFreq_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AutosaveUseDir_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT_BOOL *use);


void __RPC_STUB IMgaRegistrar_get_AutosaveUseDir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_AutosaveUseDir_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ VARIANT_BOOL use);


void __RPC_STUB IMgaRegistrar_put_AutosaveUseDir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AutosaveDir_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ BSTR *dir);


void __RPC_STUB IMgaRegistrar_get_AutosaveDir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_AutosaveDir_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR dir);


void __RPC_STUB IMgaRegistrar_put_AutosaveDir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_ExternalEditorEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT_BOOL *enabled);


void __RPC_STUB IMgaRegistrar_get_ExternalEditorEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_ExternalEditorEnabled_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ VARIANT_BOOL enabled);


void __RPC_STUB IMgaRegistrar_put_ExternalEditorEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_ExternalEditor_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ BSTR *path);


void __RPC_STUB IMgaRegistrar_get_ExternalEditor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_ExternalEditor_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR path);


void __RPC_STUB IMgaRegistrar_put_ExternalEditor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_Paradigms_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT *names);


void __RPC_STUB IMgaRegistrar_get_Paradigms_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_RegisterParadigmFromData_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR connstr,
    /* [out] */ BSTR *newname,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_RegisterParadigmFromData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_RegisterParadigm_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR name,
    /* [in] */ BSTR connstr,
    /* [in] */ VARIANT guid,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_RegisterParadigm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_QueryParadigm_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR name,
    /* [out] */ BSTR *connstr,
    /* [out][in] */ VARIANT *guid,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_QueryParadigm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_ParadigmGUIDString_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR name,
    /* [retval][out] */ BSTR *guidstr);


void __RPC_STUB IMgaRegistrar_get_ParadigmGUIDString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_QueryParadigmAllGUIDs_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR name,
    /* [out] */ VARIANT *names,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_QueryParadigmAllGUIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_UnregisterParadigm_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR name,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_UnregisterParadigm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_UnregisterParadigmGUID_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT guid,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_UnregisterParadigmGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_Components_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT *progids);


void __RPC_STUB IMgaRegistrar_get_Components_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_RegisterComponent_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ componenttype_enum type,
    /* [in] */ BSTR desc,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_RegisterComponent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_QueryComponent_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [out] */ componenttype_enum *type,
    /* [out] */ BSTR *desc,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_QueryComponent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_UnregisterComponent_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_UnregisterComponent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_put_ComponentExtraInfo_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR progid,
    /* [in] */ BSTR name,
    /* [in] */ BSTR newVal);


void __RPC_STUB IMgaRegistrar_put_ComponentExtraInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_ComponentExtraInfo_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ regaccessmode_enum mode,
    /* [in] */ BSTR progid,
    /* [in] */ BSTR name,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaRegistrar_get_ComponentExtraInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_LocalDllPath_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IMgaRegistrar_get_LocalDllPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AssociatedComponents_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR paradigm,
    /* [in] */ componenttype_enum type,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT *progids);


void __RPC_STUB IMgaRegistrar_get_AssociatedComponents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_get_AssociatedParadigms_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ regaccessmode_enum mode,
    /* [retval][out] */ VARIANT *paradigms);


void __RPC_STUB IMgaRegistrar_get_AssociatedParadigms_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_Associate_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ BSTR paradigm,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_Associate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_Disassociate_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ BSTR paradigm,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_Disassociate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_IsAssociated_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR progid,
    /* [in] */ BSTR paradigm,
    /* [out] */ VARIANT_BOOL *is_ass,
    /* [out] */ VARIANT_BOOL *can_ass,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_IsAssociated_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_RegisterComponentLibrary_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR path,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_RegisterComponentLibrary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaRegistrar_UnregisterComponentLibrary_Proxy( 
    IMgaRegistrar * This,
    /* [in] */ BSTR path,
    /* [in] */ regaccessmode_enum mode);


void __RPC_STUB IMgaRegistrar_UnregisterComponentLibrary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaRegistrar_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0328 */
/* [local] */ 

typedef 
enum metadlg_enum
    {	METADLG_NONE	= 0,
	METADLG_NEWFILE	= 0x1,
	METADLG_PARREG	= 0x2
    } 	metadlg_enum;

typedef 
enum componentdlg_enum
    {	COMPONENTDLG_NONE	= 0,
	COMPONENTDLG_INTERP	= 0x1
    } 	componentdlg_enum;



extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0328_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0328_v0_0_s_ifspec;

#ifndef __IMgaLauncher_INTERFACE_DEFINED__
#define __IMgaLauncher_INTERFACE_DEFINED__

/* interface IMgaLauncher */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMgaLauncher;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D03EC326-447B-11D4-B3F6-005004D38590")
    IMgaLauncher : public IDispatch
    {
    public:
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ParadigmName( 
            /* [in] */ BSTR p) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ComponentType( 
            /* [in] */ componenttype_enum type) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Parameter( 
            /* [in] */ VARIANT p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParadigmName( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConnStr( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Paradigm( 
            /* [retval][out] */ IMgaMetaProject **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProgID( 
            /* [retval][out] */ BSTR *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MetaDlg( 
            metadlg_enum flags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GmeDlg( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ComponentDlg( 
            componentdlg_enum flags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PropDlg( 
            /* [in] */ IMgaObject *obj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AttrDlg( 
            /* [in] */ IMgaObject *obj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowHelp( 
            /* [in] */ IMgaObject *obj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegistryBrowser( 
            /* [in] */ IMgaObject *obj) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AnnotationBrowser( 
            /* [in] */ IMgaObject *obj,
            /* [in] */ IMgaRegNode *focus) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RunComponent( 
            /* [in] */ BSTR progid,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCO *focusobj,
            /* [in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaLauncherVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaLauncher * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaLauncher * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaLauncher * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMgaLauncher * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMgaLauncher * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMgaLauncher * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMgaLauncher * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParadigmName )( 
            IMgaLauncher * This,
            /* [in] */ BSTR p);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ComponentType )( 
            IMgaLauncher * This,
            /* [in] */ componenttype_enum type);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Parameter )( 
            IMgaLauncher * This,
            /* [in] */ VARIANT p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParadigmName )( 
            IMgaLauncher * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnStr )( 
            IMgaLauncher * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Paradigm )( 
            IMgaLauncher * This,
            /* [retval][out] */ IMgaMetaProject **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProgID )( 
            IMgaLauncher * This,
            /* [retval][out] */ BSTR *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MetaDlg )( 
            IMgaLauncher * This,
            metadlg_enum flags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GmeDlg )( 
            IMgaLauncher * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ComponentDlg )( 
            IMgaLauncher * This,
            componentdlg_enum flags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PropDlg )( 
            IMgaLauncher * This,
            /* [in] */ IMgaObject *obj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AttrDlg )( 
            IMgaLauncher * This,
            /* [in] */ IMgaObject *obj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowHelp )( 
            IMgaLauncher * This,
            /* [in] */ IMgaObject *obj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegistryBrowser )( 
            IMgaLauncher * This,
            /* [in] */ IMgaObject *obj);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AnnotationBrowser )( 
            IMgaLauncher * This,
            /* [in] */ IMgaObject *obj,
            /* [in] */ IMgaRegNode *focus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RunComponent )( 
            IMgaLauncher * This,
            /* [in] */ BSTR progid,
            /* [in] */ IMgaProject *project,
            /* [in] */ IMgaFCO *focusobj,
            /* [in] */ IMgaFCOs *selectedobjs,
            /* [in] */ long param);
        
        END_INTERFACE
    } IMgaLauncherVtbl;

    interface IMgaLauncher
    {
        CONST_VTBL struct IMgaLauncherVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaLauncher_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaLauncher_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaLauncher_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaLauncher_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMgaLauncher_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMgaLauncher_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMgaLauncher_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMgaLauncher_put_ParadigmName(This,p)	\
    (This)->lpVtbl -> put_ParadigmName(This,p)

#define IMgaLauncher_put_ComponentType(This,type)	\
    (This)->lpVtbl -> put_ComponentType(This,type)

#define IMgaLauncher_put_Parameter(This,p)	\
    (This)->lpVtbl -> put_Parameter(This,p)

#define IMgaLauncher_get_ParadigmName(This,p)	\
    (This)->lpVtbl -> get_ParadigmName(This,p)

#define IMgaLauncher_get_ConnStr(This,p)	\
    (This)->lpVtbl -> get_ConnStr(This,p)

#define IMgaLauncher_get_Paradigm(This,p)	\
    (This)->lpVtbl -> get_Paradigm(This,p)

#define IMgaLauncher_get_ProgID(This,p)	\
    (This)->lpVtbl -> get_ProgID(This,p)

#define IMgaLauncher_MetaDlg(This,flags)	\
    (This)->lpVtbl -> MetaDlg(This,flags)

#define IMgaLauncher_GmeDlg(This)	\
    (This)->lpVtbl -> GmeDlg(This)

#define IMgaLauncher_ComponentDlg(This,flags)	\
    (This)->lpVtbl -> ComponentDlg(This,flags)

#define IMgaLauncher_PropDlg(This,obj)	\
    (This)->lpVtbl -> PropDlg(This,obj)

#define IMgaLauncher_AttrDlg(This,obj)	\
    (This)->lpVtbl -> AttrDlg(This,obj)

#define IMgaLauncher_ShowHelp(This,obj)	\
    (This)->lpVtbl -> ShowHelp(This,obj)

#define IMgaLauncher_RegistryBrowser(This,obj)	\
    (This)->lpVtbl -> RegistryBrowser(This,obj)

#define IMgaLauncher_AnnotationBrowser(This,obj,focus)	\
    (This)->lpVtbl -> AnnotationBrowser(This,obj,focus)

#define IMgaLauncher_RunComponent(This,progid,project,focusobj,selectedobjs,param)	\
    (This)->lpVtbl -> RunComponent(This,progid,project,focusobj,selectedobjs,param)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_put_ParadigmName_Proxy( 
    IMgaLauncher * This,
    /* [in] */ BSTR p);


void __RPC_STUB IMgaLauncher_put_ParadigmName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_put_ComponentType_Proxy( 
    IMgaLauncher * This,
    /* [in] */ componenttype_enum type);


void __RPC_STUB IMgaLauncher_put_ComponentType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_put_Parameter_Proxy( 
    IMgaLauncher * This,
    /* [in] */ VARIANT p);


void __RPC_STUB IMgaLauncher_put_Parameter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_get_ParadigmName_Proxy( 
    IMgaLauncher * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaLauncher_get_ParadigmName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_get_ConnStr_Proxy( 
    IMgaLauncher * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaLauncher_get_ConnStr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_get_Paradigm_Proxy( 
    IMgaLauncher * This,
    /* [retval][out] */ IMgaMetaProject **p);


void __RPC_STUB IMgaLauncher_get_Paradigm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_get_ProgID_Proxy( 
    IMgaLauncher * This,
    /* [retval][out] */ BSTR *p);


void __RPC_STUB IMgaLauncher_get_ProgID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_MetaDlg_Proxy( 
    IMgaLauncher * This,
    metadlg_enum flags);


void __RPC_STUB IMgaLauncher_MetaDlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_GmeDlg_Proxy( 
    IMgaLauncher * This);


void __RPC_STUB IMgaLauncher_GmeDlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_ComponentDlg_Proxy( 
    IMgaLauncher * This,
    componentdlg_enum flags);


void __RPC_STUB IMgaLauncher_ComponentDlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_PropDlg_Proxy( 
    IMgaLauncher * This,
    /* [in] */ IMgaObject *obj);


void __RPC_STUB IMgaLauncher_PropDlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_AttrDlg_Proxy( 
    IMgaLauncher * This,
    /* [in] */ IMgaObject *obj);


void __RPC_STUB IMgaLauncher_AttrDlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_ShowHelp_Proxy( 
    IMgaLauncher * This,
    /* [in] */ IMgaObject *obj);


void __RPC_STUB IMgaLauncher_ShowHelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_RegistryBrowser_Proxy( 
    IMgaLauncher * This,
    /* [in] */ IMgaObject *obj);


void __RPC_STUB IMgaLauncher_RegistryBrowser_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_AnnotationBrowser_Proxy( 
    IMgaLauncher * This,
    /* [in] */ IMgaObject *obj,
    /* [in] */ IMgaRegNode *focus);


void __RPC_STUB IMgaLauncher_AnnotationBrowser_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaLauncher_RunComponent_Proxy( 
    IMgaLauncher * This,
    /* [in] */ BSTR progid,
    /* [in] */ IMgaProject *project,
    /* [in] */ IMgaFCO *focusobj,
    /* [in] */ IMgaFCOs *selectedobjs,
    /* [in] */ long param);


void __RPC_STUB IMgaLauncher_RunComponent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaLauncher_INTERFACE_DEFINED__ */


#ifndef __IMgaProgressDlg_INTERFACE_DEFINED__
#define __IMgaProgressDlg_INTERFACE_DEFINED__

/* interface IMgaProgressDlg */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMgaProgressDlg;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0317326-447B-12D4-B3F6-005004D38590")
    IMgaProgressDlg : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTitle( 
            /* [in] */ BSTR title) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetLine( 
            /* [in] */ int line,
            /* [in] */ BSTR msg) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE StartProgressDialog( 
            /* [in] */ HWND hwndParent) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE HasUserCancelled( 
            /* [retval][out] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetProgress( 
            /* [in] */ long completed,
            /* [in] */ long total) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE StopProgressDialog( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaProgressDlgVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaProgressDlg * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaProgressDlg * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaProgressDlg * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTitle )( 
            IMgaProgressDlg * This,
            /* [in] */ BSTR title);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetLine )( 
            IMgaProgressDlg * This,
            /* [in] */ int line,
            /* [in] */ BSTR msg);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *StartProgressDialog )( 
            IMgaProgressDlg * This,
            /* [in] */ HWND hwndParent);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *HasUserCancelled )( 
            IMgaProgressDlg * This,
            /* [retval][out] */ VARIANT_BOOL *p);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetProgress )( 
            IMgaProgressDlg * This,
            /* [in] */ long completed,
            /* [in] */ long total);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *StopProgressDialog )( 
            IMgaProgressDlg * This);
        
        END_INTERFACE
    } IMgaProgressDlgVtbl;

    interface IMgaProgressDlg
    {
        CONST_VTBL struct IMgaProgressDlgVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaProgressDlg_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaProgressDlg_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaProgressDlg_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaProgressDlg_SetTitle(This,title)	\
    (This)->lpVtbl -> SetTitle(This,title)

#define IMgaProgressDlg_SetLine(This,line,msg)	\
    (This)->lpVtbl -> SetLine(This,line,msg)

#define IMgaProgressDlg_StartProgressDialog(This,hwndParent)	\
    (This)->lpVtbl -> StartProgressDialog(This,hwndParent)

#define IMgaProgressDlg_HasUserCancelled(This,p)	\
    (This)->lpVtbl -> HasUserCancelled(This,p)

#define IMgaProgressDlg_SetProgress(This,completed,total)	\
    (This)->lpVtbl -> SetProgress(This,completed,total)

#define IMgaProgressDlg_StopProgressDialog(This)	\
    (This)->lpVtbl -> StopProgressDialog(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_SetTitle_Proxy( 
    IMgaProgressDlg * This,
    /* [in] */ BSTR title);


void __RPC_STUB IMgaProgressDlg_SetTitle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_SetLine_Proxy( 
    IMgaProgressDlg * This,
    /* [in] */ int line,
    /* [in] */ BSTR msg);


void __RPC_STUB IMgaProgressDlg_SetLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_StartProgressDialog_Proxy( 
    IMgaProgressDlg * This,
    /* [in] */ HWND hwndParent);


void __RPC_STUB IMgaProgressDlg_StartProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_HasUserCancelled_Proxy( 
    IMgaProgressDlg * This,
    /* [retval][out] */ VARIANT_BOOL *p);


void __RPC_STUB IMgaProgressDlg_HasUserCancelled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_SetProgress_Proxy( 
    IMgaProgressDlg * This,
    /* [in] */ long completed,
    /* [in] */ long total);


void __RPC_STUB IMgaProgressDlg_SetProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaProgressDlg_StopProgressDialog_Proxy( 
    IMgaProgressDlg * This);


void __RPC_STUB IMgaProgressDlg_StopProgressDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaProgressDlg_INTERFACE_DEFINED__ */


#ifndef __IMgaComponentProxy_INTERFACE_DEFINED__
#define __IMgaComponentProxy_INTERFACE_DEFINED__

/* interface IMgaComponentProxy */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMgaComponentProxy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF01497A-36EB-4EA7-BE44-2FA98BD703DB")
    IMgaComponentProxy : public IUnknown
    {
    public:
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DispatchComponent( 
            /* [in] */ IDispatch *component) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaComponentProxyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaComponentProxy * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaComponentProxy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaComponentProxy * This);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DispatchComponent )( 
            IMgaComponentProxy * This,
            /* [in] */ IDispatch *component);
        
        END_INTERFACE
    } IMgaComponentProxyVtbl;

    interface IMgaComponentProxy
    {
        CONST_VTBL struct IMgaComponentProxyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaComponentProxy_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaComponentProxy_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaComponentProxy_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaComponentProxy_put_DispatchComponent(This,component)	\
    (This)->lpVtbl -> put_DispatchComponent(This,component)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IMgaComponentProxy_put_DispatchComponent_Proxy( 
    IMgaComponentProxy * This,
    /* [in] */ IDispatch *component);


void __RPC_STUB IMgaComponentProxy_put_DispatchComponent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaComponentProxy_INTERFACE_DEFINED__ */


#ifndef __IMgaXsltFileSel_INTERFACE_DEFINED__
#define __IMgaXsltFileSel_INTERFACE_DEFINED__

/* interface IMgaXsltFileSel */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMgaXsltFileSel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B3E98D4-96AF-4640-B947-7555E2E6A60B")
    IMgaXsltFileSel : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE StartXslt( 
            /* [in] */ BSTR in_f,
            /* [out] */ BSTR *out_f) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaXsltFileSelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaXsltFileSel * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaXsltFileSel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaXsltFileSel * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *StartXslt )( 
            IMgaXsltFileSel * This,
            /* [in] */ BSTR in_f,
            /* [out] */ BSTR *out_f);
        
        END_INTERFACE
    } IMgaXsltFileSelVtbl;

    interface IMgaXsltFileSel
    {
        CONST_VTBL struct IMgaXsltFileSelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaXsltFileSel_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaXsltFileSel_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaXsltFileSel_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaXsltFileSel_StartXslt(This,in_f,out_f)	\
    (This)->lpVtbl -> StartXslt(This,in_f,out_f)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IMgaXsltFileSel_StartXslt_Proxy( 
    IMgaXsltFileSel * This,
    /* [in] */ BSTR in_f,
    /* [out] */ BSTR *out_f);


void __RPC_STUB IMgaXsltFileSel_StartXslt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaXsltFileSel_INTERFACE_DEFINED__ */


#ifndef __IMgaDataSource_INTERFACE_DEFINED__
#define __IMgaDataSource_INTERFACE_DEFINED__

/* interface IMgaDataSource */
/* [object][uuid] */ 


EXTERN_C const IID IID_IMgaDataSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9FF8F4E0-E0C9-11d3-B376-005004D38590")
    IMgaDataSource : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RegistryData( 
            /* [retval][out] */ IUnknown **p) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Project( 
            /* [retval][out] */ IUnknown **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaDataSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaDataSource * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaDataSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaDataSource * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            IMgaDataSource * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RegistryData )( 
            IMgaDataSource * This,
            /* [retval][out] */ IUnknown **p);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Project )( 
            IMgaDataSource * This,
            /* [retval][out] */ IUnknown **p);
        
        END_INTERFACE
    } IMgaDataSourceVtbl;

    interface IMgaDataSource
    {
        CONST_VTBL struct IMgaDataSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaDataSource_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaDataSource_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaDataSource_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaDataSource_get_Data(This,p)	\
    (This)->lpVtbl -> get_Data(This,p)

#define IMgaDataSource_get_RegistryData(This,p)	\
    (This)->lpVtbl -> get_RegistryData(This,p)

#define IMgaDataSource_get_Project(This,p)	\
    (This)->lpVtbl -> get_Project(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaDataSource_get_Data_Proxy( 
    IMgaDataSource * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaDataSource_get_Data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaDataSource_get_RegistryData_Proxy( 
    IMgaDataSource * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaDataSource_get_RegistryData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaDataSource_get_Project_Proxy( 
    IMgaDataSource * This,
    /* [retval][out] */ IUnknown **p);


void __RPC_STUB IMgaDataSource_get_Project_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaDataSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_ComponentLib_0335 */
/* [local] */ 

typedef 
enum MgaInterfaceVersion_enum
    {	MgaInterfaceVersion_None	= 0,
	MgaInterfaceVersion_Legacy	= 4,
	MgaInterfaceVersion_Current	= 0x2001f
    } 	MgaInterfaceVersion_enum;

#define MgaInterfaceVersion MgaInterfaceVersion_enum


extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0335_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ComponentLib_0335_v0_0_s_ifspec;

#ifndef __IMgaVersionInfo_INTERFACE_DEFINED__
#define __IMgaVersionInfo_INTERFACE_DEFINED__

/* interface IMgaVersionInfo */
/* [object][helpstring][uuid][oleautomation] */ 


EXTERN_C const IID IID_IMgaVersionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9A228010-020B-11d2-BBB3-0040051F7117")
    IMgaVersionInfo : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_version( 
            /* [retval][out] */ MgaInterfaceVersion_enum *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMgaVersionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMgaVersionInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMgaVersionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMgaVersionInfo * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_version )( 
            IMgaVersionInfo * This,
            /* [retval][out] */ MgaInterfaceVersion_enum *pVal);
        
        END_INTERFACE
    } IMgaVersionInfoVtbl;

    interface IMgaVersionInfo
    {
        CONST_VTBL struct IMgaVersionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMgaVersionInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMgaVersionInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMgaVersionInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMgaVersionInfo_get_version(This,pVal)	\
    (This)->lpVtbl -> get_version(This,pVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMgaVersionInfo_get_version_Proxy( 
    IMgaVersionInfo * This,
    /* [retval][out] */ MgaInterfaceVersion_enum *pVal);


void __RPC_STUB IMgaVersionInfo_get_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMgaVersionInfo_INTERFACE_DEFINED__ */



#ifndef __MgaComponentLib_LIBRARY_DEFINED__
#define __MgaComponentLib_LIBRARY_DEFINED__

/* library MgaComponentLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_MgaComponentLib;

EXTERN_C const CLSID CLSID_MgaComponent;

#ifdef __cplusplus

class DECLSPEC_UUID("E9D28F15-DE39-4BD6-9DDE-05D31A597E39")
MgaComponent;
#endif
#endif /* __MgaComponentLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long *, unsigned long            , HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  unsigned long *, unsigned char *, HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long *, HWND * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


