<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name ="IDML">

   <comment> Generated by the MetaGME2004 interpreter </comment>

   <folder name = "RootFolder" metaref = "1000"  subfolders = "InterfaceDefinitions PredefinedTypes" >
      <constraint type="function" name="AllParams">
         <![CDATA[method;gme::Model;;ocl::Set;
         parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
      </constraint>
      <constraint type="function" name="allFileScopeDecls">
         <![CDATA[method;gme::Folder;;ocl::Set;
         let closure = self.models ("File") in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (x ; accu = Set{} | accu 
                                                                     + x.parts () 
                                                                     - x.parts ("FileRef") 
                                                                     - x.parts ("ComponentRef") 
                                                                     - x.parts ("ManagesComponent"))
  endif]]>
      </constraint>
      <constraint type="function" name="allOps">
         <![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
         let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
  ret]]>
      </constraint>
      <constraint type="function" name="inheritedOps">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let parents = self.referenceParts ("Inherits") in
parents->iterate (ref; accu = Set{} | accu + 
(let parent = ref.refersTo ().oclAsType (gme::Model) in
if (parent == top) then Set{}
else
parent.localOps () + parent.inheritedOps (top)
endif))]]>
      </constraint>
      <constraint type="function" name="inheritedSupportedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let parents= referenceParts ("Inherits") in
parents->iterate (ref; accu = Set{} | accu +
(let parent = ref.refersTo ().oclAsType (gme::Model) in
parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
      </constraint>
      <constraint type="function" name="inheritsRecursive">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let inherits = referenceParts ("Inherits") in
inherits->iterate (ref; accu = Set{} | accu +
(let parent = ref.refersTo ().oclAsType (gme::Model) in
Set {parent} + 
(if (parent != top) then parent.inheritsRecursive (top)
else Set {}
endif)))]]>
      </constraint>
      <constraint type="function" name="localOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
      </constraint>
      <constraint type="function" name="supportedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let supported_set = referenceParts ("Supports") in
supported_set->iterate (ref; accu = Set{} | accu +
(let supported = ref.refersTo ().oclAsType (gme::Model) in
supported.localOps () + supported.inheritedOps (supported)))]]>
      </constraint>
      <attrdef name="PrefixTag" metaref = "2748" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="SpecifyIdTag" metaref = "2749" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="VersionTag" metaref = "2750" valuetype = "string" defvalue = "">
      </attrdef>
      <atom name = "Boolean" metaref = "2914" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "Byte" metaref = "2915" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "EnumValue" metaref = "1791" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enumvalue.bmp"></regnode>
      </atom>
      <atom name = "GenericObject" metaref = "2916" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValue" metaref = "2917" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValueObject" metaref = "2918" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "Label" metaref = "1793" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidLabelConnectionsrcCardinality1" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", LabelConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to Label as "src" over LabelConnection, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="label.bmp"></regnode>
      </atom>
      <atom name = "LongInteger" metaref = "2919" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "PrivateFlag" metaref = "2302" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidMakeMemberPrivatesrcCardinality3" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PrivateFlag as "src" over MakeMemberPrivate, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="private.bmp"></regnode>
            <regnode name = "isNameEnabled" value ="false"></regnode>
      </atom>
      <atom name = "RealNumber" metaref = "2920" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ShortInteger" metaref = "2921" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "String" metaref = "2922" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TypeEncoding" metaref = "2923" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TypeKind" metaref = "2924" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <connection name = "LabelConnection" metaref = "1796" >
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Label"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MakeMemberPrivate" metaref = "2303" >
            <regnode name = "color" value ="0xFF0000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PrivateFlag"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ManagesComponent" metaref = "3238" >
            <regnode name = "color" value ="0x00FF00"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentFactory"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component"></pointeritem>
               <pointeritem desc = "ComponentRef"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <reference name = "Alias" metaref = "3119" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="alias.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "AttributeMember" metaref = "3239">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Boxed" metaref = "3120" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[let boxedref = refersTo () in
   boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
            <dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
         </constraint>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="boxed.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Collection" metaref = "3121" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="variablecollection.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentRef" metaref = "3240">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="componentref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Constant" metaref = "3112" attributes = "VersionTag SpecifyIdTag value">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="LegalConstantType" eventmask = "0x400" depth = "1" priority = "1">
            <![CDATA[let x = refersTo () in
  x.isTypeOf (String) or
  x.isTypeOf (LongInteger) or
  x.isTypeOf (Enum) or
  x.isTypeOf (ShortInteger) or
  x.isTypeOf (RealNumber) or
  x.isTypeOf (Byte) or
  x.isTypeOf (Boolean)]]>
            <dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
         </constraint>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="value" metaref = "3113" valuetype = "string" defvalue = "">
         </attrdef>
         <regnode name = "icon" value ="const.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Discriminator" metaref = "3122">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <regnode name = "icon" value ="discriminator.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ExceptionRef" metaref = "2312">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="exceptionref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "FileRef" metaref = "2627">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="fileref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "File"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "GetException" metaref = "2264">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="getexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InEventPort" metaref = "2753" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="ineventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InParameter" metaref = "3123">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="in.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Inherits" metaref = "1401">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="inherits.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InoutParameter" metaref = "3124">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="inout.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "LookupKey" metaref = "1800">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="lookupkey.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Member" metaref = "3125">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutEventPort" metaref = "2754" attributes = "VersionTag SpecifyIdTag single_destination">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="single_destination" metaref = "2190" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="outeventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutParameter" metaref = "3126">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="out.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ProvidedRequestPort" metaref = "2755" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="providedrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "RequiredRequestPort" metaref = "2756" attributes = "VersionTag SpecifyIdTag multiple_connections">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="multiple_connections" metaref = "2195" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ReturnType" metaref = "3127">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="return.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "SetException" metaref = "1701">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="setexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Supports" metaref = "1404">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="supports.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <model name = "Aggregate" metaref = "2928" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="aggregate.bmp"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3128" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "2930" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3129" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Attribute" metaref = "1405" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
            <regnode name = "icon" value ="attribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality9" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3241" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2265" kind = "GetException"></role>
         <role name = "SetException" metaref = "1702" kind = "SetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "2372" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3242" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2376" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2379" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Component" metaref = "1822" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="component.bmp"></regnode>
            <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
            <regnode name = "isTypeShown" value ="true"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
            <dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
            <dispname>A component that has a base component may not also support interfaces</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Attribute" metaref = "1420" kind = "Attribute"></role>
         <role name = "InEventPort" metaref = "3243" kind = "InEventPort"></role>
         <role name = "Inherits" metaref = "1422" kind = "Inherits"></role>
         <role name = "OutEventPort" metaref = "3244" kind = "OutEventPort"></role>
         <role name = "ProvidedRequestPort" metaref = "3245" kind = "ProvidedRequestPort"></role>
         <role name = "ReadonlyAttribute" metaref = "1423" kind = "ReadonlyAttribute"></role>
         <role name = "RequiredRequestPort" metaref = "3246" kind = "RequiredRequestPort"></role>
         <role name = "Supports" metaref = "1424" kind = "Supports"></role>
         <aspect name = "InterfaceDefinition" metaref = "3247" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3248" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3249" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3250" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3251" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3252" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3253" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3254" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3255" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentFactory" metaref = "3256" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="componentfactory.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
            <dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality7" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidManagesComponentdstCardinality6" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", ManagesComponent ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentFactory as "dst" over ManagesComponent, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "2940" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3132" kind = "Alias"></role>
         <role name = "Attribute" metaref = "2708" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3133" kind = "Collection"></role>
         <role name = "Constant" metaref = "3136" kind = "Constant"></role>
         <role name = "Enum" metaref = "2942" kind = "Enum"></role>
         <role name = "Exception" metaref = "2943" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2712" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2713" kind = "Inherits"></role>
         <role name = "LookupKey" metaref = "2714" kind = "LookupKey"></role>
         <role name = "LookupOperation" metaref = "2715" kind = "LookupOperation"></role>
         <role name = "OnewayOperation" metaref = "2717" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "2718" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2720" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2944" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2722" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "2724" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2945" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3140" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2727" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3141" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3144" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2947" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2948" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2731" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2732" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2733" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2734" role = "LookupOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2736" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2737" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2739" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2949" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2741" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Enum" metaref = "2950" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enum.bmp"></regnode>
         <constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
            <dispname>An enum's member names must be unique</dispname>
         </constraint>
         <constraint name="ValidEnumPartCardinality8" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Enum, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "EnumValue" metaref = "2951" kind = "EnumValue"></role>
         <aspect name = "InterfaceDefinition" metaref = "2952" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2953" role = "EnumValue" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Event" metaref = "2954" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="event.bmp"></regnode>
         <constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2955" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "2958" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3148" kind = "Alias"></role>
         <role name = "Attribute" metaref = "2960" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3149" kind = "Collection"></role>
         <role name = "Constant" metaref = "3152" kind = "Constant"></role>
         <role name = "Enum" metaref = "2962" kind = "Enum"></role>
         <role name = "Exception" metaref = "2963" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2964" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2965" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "2966" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3154" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "2968" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "2969" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "2970" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2971" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2972" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2973" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "2974" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "2975" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3157" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2977" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3158" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3161" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2979" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2980" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2981" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2982" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2983" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3163" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2985" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2986" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "2987" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2988" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2989" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2990" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Exception" metaref = "2991" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="exception.bmp"></regnode>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3166" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "2992" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3167" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FactoryOperation" metaref = "1927" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="factory.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2324" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3168" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2470" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2471" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3169" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "File" metaref = "2326" attributes = "PrefixTag" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" priority = "1">
            <![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
            <dispname>A file cannot be included more than once</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "2994" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3170" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3171" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3172" kind = "Collection"></role>
         <role name = "Component" metaref = "1939" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3265" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3266" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3114" kind = "Constant"></role>
         <role name = "Enum" metaref = "2997" kind = "Enum"></role>
         <role name = "Event" metaref = "2999" kind = "Event"></role>
         <role name = "Exception" metaref = "3000" kind = "Exception"></role>
         <role name = "FileRef" metaref = "2628" kind = "FileRef"></role>
         <role name = "ManagesComponent" metaref = "3267" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3001" kind = "Object"></role>
         <role name = "Package" metaref = "2330" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3003" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3004" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "2475" attributes = "PrefixTag" >
            <part metaref = "3005" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3174" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3175" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3176" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3268" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3269" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3270" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3115" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3008" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3010" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3011" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2629" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3271" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3012" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2487" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3014" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3015" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "LookupOperation" metaref = "1980" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="lookup.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2339" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3178" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2523" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2524" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3179" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Object" metaref = "3016" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="object.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[if (self.local = true) then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
endif]]>
            <dispname>A non-local Object cannot inherit from a local one</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not local or not abstract]]>
            <dispname>An ObjectDef cannot be both local and abstract</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3017" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <attrdef name="local" metaref = "3018" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3019" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3180" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3021" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3181" kind = "Collection"></role>
         <role name = "Constant" metaref = "3184" kind = "Constant"></role>
         <role name = "Enum" metaref = "3023" kind = "Enum"></role>
         <role name = "Exception" metaref = "3024" kind = "Exception"></role>
         <role name = "Inherits" metaref = "3025" kind = "Inherits"></role>
         <role name = "OnewayOperation" metaref = "3026" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "3027" kind = "ReadonlyAttribute"></role>
         <role name = "SwitchedAggregate" metaref = "3028" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3029" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3030" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <part metaref = "3031" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3188" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3033" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3189" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3192" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3035" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3036" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3037" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3038" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3039" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3040" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3041" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OnewayOperation" metaref = "1592" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="oneway.bmp"></regnode>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "InParameter" metaref = "3196" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2528" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3197" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Package" metaref = "2341" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="package.bmp"></regnode>
         <constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.parts ()->size > 0]]>
            <dispname>A package cannot be empty</dispname>
         </constraint>
         <constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ()->forAll (
    x, y : gme::FCO | x.name == y.name implies (x == y or
                                                                                        (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
                                                                                        (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
  )
  ]]>
            <dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "3042" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3198" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3199" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3200" kind = "Collection"></role>
         <role name = "Component" metaref = "2001" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3276" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3277" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3116" kind = "Constant"></role>
         <role name = "Enum" metaref = "3045" kind = "Enum"></role>
         <role name = "Event" metaref = "3047" kind = "Event"></role>
         <role name = "Exception" metaref = "3048" kind = "Exception"></role>
         <role name = "ManagesComponent" metaref = "3278" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3049" kind = "Object"></role>
         <role name = "Package" metaref = "2344" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3051" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3052" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "2539" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <part metaref = "3053" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3202" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3203" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3204" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3279" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3280" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3281" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3117" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3056" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3058" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3059" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3282" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3060" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2550" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3062" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3063" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReadonlyAttribute" metaref = "1626" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality9" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3283" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2267" kind = "GetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "2560" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3284" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2564" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SwitchedAggregate" metaref = "3064" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
         <constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts (Member)->forAll (
    x : gme::FCO | let labels = x.connectedFCOs ()
                                in
    labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
)]]>
            <dispname>A default member cannot have multiple labels</dispname>
         </constraint>
         <constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[referenceParts (Discriminator) -> forAll (
    x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
                                     x.refersTo ().isTypeOf (Boolean) or
                                     x.refersTo ().isTypeOf (ShortInteger) or
                                     x.refersTo ().isTypeOf (LongInteger))]]>
            <dispname>Discriminator must have integer, character, boolean or enum type</dispname>
         </constraint>
         <constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
            <dispname>Labels in the same scope must be unique</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality10" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality11" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality12" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Discriminator" metaref = "3208" kind = "Discriminator"></role>
         <role name = "Label" metaref = "3066" kind = "Label"></role>
         <role name = "LabelConnection" metaref = "3067" kind = "LabelConnection"></role>
         <role name = "Member" metaref = "3209" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3069" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3210" role = "Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3071" role = "Label" primary = "yes" linked = "no"></part>
            <part metaref = "3072" role = "LabelConnection" primary = "yes" linked = "no"></part>
            <part metaref = "3211" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TwowayOperation" metaref = "2040" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="twoway.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidTwowayOperationPartCardinality13" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ReturnType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2348" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3212" kind = "InParameter"></role>
         <role name = "InoutParameter" metaref = "3213" kind = "InoutParameter"></role>
         <role name = "OutParameter" metaref = "3214" kind = "OutParameter"></role>
         <role name = "ReturnType" metaref = "3215" kind = "ReturnType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2587" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2588" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3216" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3217" role = "InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3218" role = "OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3219" role = "ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ValueObject" metaref = "3074" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="value.bmp"></regnode>
         <constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = 
  self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3075" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3078" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3220" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3080" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3221" kind = "Collection"></role>
         <role name = "Constant" metaref = "3224" kind = "Constant"></role>
         <role name = "Enum" metaref = "3082" kind = "Enum"></role>
         <role name = "Exception" metaref = "3083" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "3084" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "3085" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "3086" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3226" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "3088" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "3089" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "3090" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "3091" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "3092" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3093" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3094" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "3095" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3229" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3097" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3230" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3233" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3099" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3100" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3101" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3102" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3103" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3235" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3105" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3106" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "3107" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3108" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3109" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3110" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <folder name = "InterfaceDefinitions" metaref = "2775"  rootobjects = "File" >
         <constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
            <![CDATA[allFileScopeDecls ()->forAll (
    x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
  )]]>
            <dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
         </constraint>
      </folder>
      <folder name = "PredefinedTypes" metaref = "3111"  rootobjects = "Boolean Byte GenericObject GenericValue GenericValueObject LongInteger RealNumber ShortInteger String TypeEncoding TypeKind" >
      </folder>
   </folder>
</paradigm>
