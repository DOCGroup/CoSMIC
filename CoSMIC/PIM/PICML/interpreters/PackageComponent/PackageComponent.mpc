project (PackageComponent): mfc, picmllib {
  after += PICML Package

  Define_Custom(MIDL) {
    automatic            = 0
    command              = midl
    commandflags         = -I. -server none -client none
    source_pre_extension = _i,_p
    source_outputext     = .c
    header_outputext     = .h
    resource_outputext   = .tlb
    inputext             = .idl
  }

  MIDL_Files {
    gendir = .
    $(GME_ROOT)/SDK/BON/ComponentLib.idl
  }

  sharedname = PackageComponent
  includes += $(PICML_ROOT)/interpreters/PICML \
              $(PICML_ROOT)/interpreters/Package \
              $(PICML_ROOT)/interpreters/PackageComponent
  libs += PICML Package
  pch_header = StdAfx.h
  pch_source = StdAfx.cpp
  Source_Files {
    StdAfx.cpp
    $(GME_ROOT)/SDK/BON/ComHelp.cpp
    $(GME_ROOT)/SDK/BON/ComponentDll.cpp
    $(GME_ROOT)/SDK/BON/ComponentObj.cpp
    PackageComponent.def
    PackageComponent.rc
    RawComponent.cpp
    UdmApp.cpp
  }

  Header_Files {
    ComponentConfig.h
    ComponentLib.h
    $(GME_ROOT)/SDK/BON/ComHelp.h
    $(GME_ROOT)/SDK/BON/ComponentDll.h
    $(GME_ROOT)/SDK/BON/ComponentObj.h
    $(GME_ROOT)/SDK/BON/GMECOM.h
    RawComponent.h
    Resource.h
    StdAfx.h
    UdmApp.h
    UdmConfig.h
  }

  Resource_Files {
    CompIcon.ico
  }
}

project (RegisterPackageComponent) {
  after += PackageComponent

  Define_Custom(Register) {
    automatic           = 0
    command             = regsvr32
    commandflags        = -s -c
    inputext            = .dll
    generic_outputext   = .trg
  }

  Register_Files {
     $(PICML_ROOT)\bin\PackageComponentd.dll
  }
}
