// -*- MPC -*-
// $Id$

project(IDL_TO_PICML_BE) : acelib, core, crosscompile, cosmic_xerces_utils, game_xme, tao_idl_fe {

  sharedname   = IDL_TO_PICML_BE
  libout       = $(COSMIC_ROOT)/lib
  dllout       = $(COSMIC_ROOT)/bin
  libpaths    += $(COSMIC_ROOT)/lib
  libs        += ACE
  dynamicflags = IDL_TO_PICML_BE_BUILD_DLL

  includes    += $(GME_ROOT)

  Source_Files {
    be_global.cpp
    be_init.cpp
    be_produce.cpp
    Type_Trait.cpp

    Artifact_Generator.cpp
    File_Creator.cpp
    Implementation_Generator.cpp
    Project_Generator.cpp
    Scope.cpp
  }

  Header_Files {
    be_extern.h
    be_global.h
    IDL_TO_PICML_BE_Export.h
    Predefined_Types.h
  }

  Template_Files {
  }
}

project(IDL_TO_PICML_EXE) : aceexe, core, crosscompile, cosmic_xerces_utils, game_xme, mcpp, tao_idl_mcpp, tao_idl_fe {
  after          += IDL_TO_PICML_BE
  exename         = idl_to_picml
  libs           += IDL_TO_PICML_BE
  includes       += . $(TAO_ROOT)
  libpaths       += $(COSMIC_ROOT)/lib $(COSMIC_ROOT)/bin
  install         = $(COSMIC_ROOT)/bin

  verbatim(gnuace, local) {
    ifeq ($(TAO_IDL_PREPROCESSOR),)
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(strip $(CXX))\\\"
    else
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(subst \\,\\,$(TAO_IDL_PREPROCESSOR))\\\"
    endif

    VPATH = $(TAO_ROOT)/TAO_IDL $(TAO_ROOT)/TAO_IDL/driver

    ifeq ($(static_libs_only), 1)
      ifneq ($(with_ld), macosx)
        LDFLAGS += -static 
      endif
    endif
  }

  specific (prop:microsoft) {
    subsystem = 0
  }

  Source_Files {
    $(TAO_ROOT)/TAO_IDL/driver/drv_args.cpp
    //$(TAO_ROOT)/TAO_IDL/driver/drv_preproc.cpp
    $(TAO_ROOT)/TAO_IDL/tao_idl.cpp
  }

  Header_Files {
    $(TAO_ROOT)/TAO_IDL/include/drv_extern.h
  }
}
