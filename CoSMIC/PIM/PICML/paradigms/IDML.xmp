<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name ="IDML">

   <comment> Generated by the MetaGME2004 interpreter </comment>

   <folder name = "RootFolder" metaref = "1000"  subfolders = "InterfaceDefinitions" >
      <constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
         <![CDATA[allFileScopeDecls ()->forAll (
    x, y : gme::Model | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
  )]]>
         <dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
      </constraint>
      <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
         <![CDATA[name.trim ().match( "^[0-9]*.[0-9]*$" )]]>
         <dispname>Version must be a valid decimal number</dispname>
      </constraint>
      <constraint type="function" name="AllParams">
         <![CDATA[method;gme::Model;;ocl::Set;
         parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
      </constraint>
      <constraint type="function" name="allFileScopeDecls">
         <![CDATA[method;gme::Folder;;ocl::Set;
         let closure = self.models ("File") in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (x ; accu = Set{} | accu + x.allScopeDecls ())
  endif]]>
      </constraint>
      <constraint type="function" name="allMembers">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("BoundedString") + self.parts ("NamedTypeRef") +
self.parts ("FixedPoint") + self.parts ("PredefinedType") +
self.parts ("FixedSizeCollection") + self.parts ("VariableSizeCollection")]]>
      </constraint>
      <constraint type="function" name="allScopeDecls">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("BoxedDef") + self.parts ("ExceptionDef") +
self.parts ("ConstantDef") + self.parts ("Package") +
self.parts ("AggregateDef") + self.parts ("SwitchedAggregateDef") +
self.parts ("EnumerationDef") + self.parts ("AliasDef") +
self.parts ("ObjectDef") + self.parts ("ValueDef") +
self.parts ("EventDef") + self.parts ("ComponentDef") +
self.parts ("ComponentFactory")]]>
      </constraint>
      <constraint type="function" name="inheritedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let ancestors = self.inheritsRecursive (self) in
ancestors->iterate (ancestor; accu = Set{} | accu + ancestor.oclAsType (gme::Model).localOps ())]]>
      </constraint>
      <constraint type="function" name="inheritsRecursive">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let closure = self.referenceParts (Inherits)->collect (x : gme::Reference | x.refersTo ().oclAsType (gme::Model))->asSet () in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (rec; accu = Set{} | accu + 
      if (rec = top) then
        Set{top}
      else
        rec.inheritsRecursive (top)
      endif)
  endif]]>
      </constraint>
      <constraint type="function" name="localOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
      </constraint>
      <constraint type="function" name="supportedWithAncestors">
         <![CDATA[method;gme::Model;;ocl::Set;
         let supported_set = self.referenceParts (Supports) in
supported_set->iterate (ref; accu = Set{} | 
  let supported = ref.refersTo ().oclAsType (gme::Model) in
  accu + supported.inheritsRecursive (supported))]]>
      </constraint>
      <attrdef name="PrefixTag" metaref = "2748" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="SpecifyIdTag" metaref = "2749" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="VersionTag" metaref = "2750" valuetype = "double" defvalue = "1.0">
         <dispname></dispname>
      </attrdef>
      <atom name = "BoundedString" metaref = "1001"  attributes = "bound wide">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="bound" metaref = "2133" valuetype = "integer" defvalue = "0">
            <dispname></dispname>
         </attrdef>
         <attrdef name="wide" metaref = "2135" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
            <regnode name = "icon" value ="boundedstring.bmp"></regnode>
      </atom>
      <atom name = "EnumValue" metaref = "1791" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enumvalue.bmp"></regnode>
      </atom>
      <atom name = "FixedPoint" metaref = "2136"  attributes = "total_digits decimal_digits">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="DecimalDigitsNotGreater" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[total_digits >= decimal_digits]]>
            <dispname>The number of decimal digits cannot be greater than the number of total digits</dispname>
         </constraint>
         <constraint name="NonNegativeFixedPointParameters" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[decimal_digits >= 0 and total_digits >= 0]]>
            <dispname>Neither the number of decimal digits nor the number of total digits can be negative</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="decimal_digits" metaref = "2137" valuetype = "integer" defvalue = "">
            <dispname></dispname>
         </attrdef>
         <attrdef name="total_digits" metaref = "2139" valuetype = "integer" defvalue = "">
            <dispname></dispname>
         </attrdef>
            <regnode name = "icon" value ="fixedpoint.bmp"></regnode>
      </atom>
      <atom name = "Label" metaref = "1793" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidLabelConnectionsrcCardinality1" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", LabelConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to Label as "src" over LabelConnection, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="label.bmp"></regnode>
      </atom>
      <atom name = "PredefinedType" metaref = "1066"  attributes = "which_type">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="which_type" metaref = "2141" valuetype = "enum" defvalue = "UNSIGNED_LONG">
            <dispname></dispname>
            <enumitem dispname = "BOOLEAN" value = "BOOLEAN"></enumitem>
            <enumitem dispname = "BYTE" value = "BYTE"></enumitem>
            <enumitem dispname = "CHARACTER" value = "CHARACTER"></enumitem>
            <enumitem dispname = "WIDE_CHARACTER" value = "WIDE_CHARACTER"></enumitem>
            <enumitem dispname = "SHORT" value = "SHORT"></enumitem>
            <enumitem dispname = "UNSIGNED_SHORT" value = "UNSIGNED_SHORT"></enumitem>
            <enumitem dispname = "LONG" value = "LONG"></enumitem>
            <enumitem dispname = "UNSIGNED_LONG" value = "UNSIGNED_LONG"></enumitem>
            <enumitem dispname = "LONGLONG" value = "LONGLONG"></enumitem>
            <enumitem dispname = "UNSIGNED_LONGLONG" value = "UNSIGNED_LONGLONG"></enumitem>
            <enumitem dispname = "FLOAT" value = "FLOAT"></enumitem>
            <enumitem dispname = "DOUBLE" value = "DOUBLE"></enumitem>
            <enumitem dispname = "LONGDOUBLE" value = "LONGDOUBLE"></enumitem>
            <enumitem dispname = "STRING" value = "STRING"></enumitem>
            <enumitem dispname = "WIDE_STRING" value = "WIDE_STRING"></enumitem>
            <enumitem dispname = "GENERIC_CONTAINER" value = "GENERIC_CONTAINER"></enumitem>
            <enumitem dispname = "GENERIC_OBJECT_BY_VALUE" value = "GENERIC_OBJECT_BY_VALUE"></enumitem>
            <enumitem dispname = "GENERIC_OBJECT_REFERENCE" value = "GENERIC_OBJECT_REFERENCE"></enumitem>
            <enumitem dispname = "TYPE_ENCODING" value = "TYPE_ENCODING"></enumitem>
            <enumitem dispname = "TYPE_KIND" value = "TYPE_KIND"></enumitem>
         </attrdef>
            <regnode name = "icon" value ="predefined.bmp"></regnode>
      </atom>
      <atom name = "PrivateFlag" metaref = "2302" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidMakeMemberPrivatesrcCardinality3" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PrivateFlag as "src" over MakeMemberPrivate, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="private.bmp"></regnode>
            <regnode name = "isNameEnabled" value ="false"></regnode>
      </atom>
      <connection name = "LabelConnection" metaref = "1796" >
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "BoundedString"></pointeritem>
               <pointeritem desc = "FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef"></pointeritem>
               <pointeritem desc = "PredefinedType"></pointeritem>
               <pointeritem desc = "VariableSizeCollection"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Label"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MakeMemberPrivate" metaref = "2303" >
            <regnode name = "color" value ="0xFF0000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "BoundedString"></pointeritem>
               <pointeritem desc = "FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef"></pointeritem>
               <pointeritem desc = "PredefinedType"></pointeritem>
               <pointeritem desc = "VariableSizeCollection"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PrivateFlag"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MangesComponent" metaref = "2751" >
         <dispname>manages</dispname>
            <regnode name = "color" value ="0x00FF00"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentFactory"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentDef"></pointeritem>
               <pointeritem desc = "ComponentRef"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <reference name = "ComponentRef" metaref = "2752">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidMangesComponentsrcCardinality5" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MangesComponent ) -> size in
                     (srcCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Manageable as "src" over MangesComponent, has to match 1..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="manages.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "EnumRef" metaref = "1797">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <regnode name = "icon" value ="enumref.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "EnumerationDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ExceptionRef" metaref = "2312">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="exceptionref.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "FileRef" metaref = "2627">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="fileref.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "File"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "GetException" metaref = "2264">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="getexception.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InEventPort" metaref = "2753" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="ineventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "EventDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Inherits" metaref = "1401">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="inherits.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentDef"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "EventDef"></pointeritem>
            <pointeritem desc = "ObjectDef"></pointeritem>
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "LookupKey" metaref = "1800">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="lookupkey.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "NamedTypeRef" metaref = "1801">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="namedtyperef.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "AggregateDef"></pointeritem>
            <pointeritem desc = "AliasDef"></pointeritem>
            <pointeritem desc = "BoxedDef"></pointeritem>
            <pointeritem desc = "ComponentDef"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "EnumerationDef"></pointeritem>
            <pointeritem desc = "EventDef"></pointeritem>
            <pointeritem desc = "ObjectDef"></pointeritem>
            <pointeritem desc = "SwitchedAggregateDef"></pointeritem>
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutEventPort" metaref = "2754" attributes = "VersionTag SpecifyIdTag single_destination">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <attrdef name="single_destination" metaref = "2190" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="outeventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "EventDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ProvidedRequestPort" metaref = "2755" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="providedrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ObjectDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "RequiredRequestPort" metaref = "2756" attributes = "VersionTag SpecifyIdTag multiple_connections">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <attrdef name="multiple_connections" metaref = "2195" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ObjectDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "SetException" metaref = "1701">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="setexception.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Supports" metaref = "1404">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="supports.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ObjectDef"></pointeritem>
         </pointerspec>
      </reference>
      <model name = "AggregateDef" metaref = "1802" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="aggregate.bmp"></regnode>
         <constraint name="ValidAggregateDefPartCardinality7" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by AggregateDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "1363" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2143" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1708" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "1804" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1366" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1709" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2354" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2355" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2356" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2357" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2358" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2359" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2361" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "AliasDef" metaref = "1809" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="alias.bmp"></regnode>
         <constraint name="ValidAliasDefPartCardinality8" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by AliasDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "1068" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2145" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1712" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "1811" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1071" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1713" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2363" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2364" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2365" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2366" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2367" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2368" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2370" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Attribute" metaref = "1405" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
            <regnode name = "icon" value ="attribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality20" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "1406" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2147" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1716" kind = "FixedSizeCollection"></role>
         <role name = "GetException" metaref = "2265" kind = "GetException"></role>
         <role name = "NamedTypeRef" metaref = "1817" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1410" kind = "PredefinedType"></role>
         <role name = "SetException" metaref = "1702" kind = "SetException"></role>
         <role name = "VariableSizeCollection" metaref = "1717" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2372" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2373" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2374" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2375" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2376" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2377" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2378" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2379" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2381" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "BoxedDef" metaref = "2149" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="boxed.bmp"></regnode>
         <constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[let boxedref = parts ("NamedTypeRef") in
boxedref->size > 0 implies boxedref->forAll (
    x : gme::Reference | let ref = x.refersTo () in
    ref.kindName <> "ValueDef" and ref.kindName <> "EventDef"
)]]>
            <dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
         </constraint>
         <constraint name="ValidBoxedDefPartCardinality9" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by BoxedDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "2150" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2151" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "2152" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "2153" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "2154" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "2156" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2383" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2384" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2385" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2386" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2387" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2388" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2390" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentDef" metaref = "2209" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="component.bmp"></regnode>
            <regnode name = "isTypeShown" value ="true"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMangesComponentsrcCardinality5" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MangesComponent ) -> size in
                     (srcCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Manageable as "src" over MangesComponent, has to match 1..*.</dispname>
         </constraint>
         <role name = "Attribute" metaref = "2210" kind = "Attribute"></role>
         <role name = "InEventPort" metaref = "2757" kind = "InEventPort"></role>
         <role name = "Inherits" metaref = "2212" kind = "Inherits"></role>
         <role name = "OutEventPort" metaref = "2758" kind = "OutEventPort"></role>
         <role name = "ProvidedRequestPort" metaref = "2759" kind = "ProvidedRequestPort"></role>
         <role name = "ReadonlyAttribute" metaref = "2215" kind = "ReadonlyAttribute"></role>
         <role name = "RequiredRequestPort" metaref = "2760" kind = "RequiredRequestPort"></role>
         <role name = "Supports" metaref = "2218" kind = "Supports"></role>
         <aspect name = "InterfaceDefinition" metaref = "2392" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2393" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "2761" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "2395" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2762" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "2763" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "2398" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2764" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "2401" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentFactory" metaref = "2705" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="componentfactory.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality11" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMangesComponentdstCardinality6" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MangesComponent ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentFactory as "dst" over MangesComponent, has to match 1.</dispname>
         </constraint>
         <role name = "AggregateDef" metaref = "2706" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "2707" kind = "AliasDef"></role>
         <role name = "Attribute" metaref = "2708" kind = "Attribute"></role>
         <role name = "ConstantDef" metaref = "2709" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "2710" kind = "EnumerationDef"></role>
         <role name = "ExceptionDef" metaref = "2711" kind = "ExceptionDef"></role>
         <role name = "FactoryOperation" metaref = "2712" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2713" kind = "Inherits"></role>
         <role name = "LookupKey" metaref = "2714" kind = "LookupKey"></role>
         <role name = "LookupOperation" metaref = "2715" kind = "LookupOperation"></role>
         <role name = "OnewayOperation" metaref = "2717" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "2718" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2720" kind = "Supports"></role>
         <role name = "SwitchedAggregateDef" metaref = "2721" kind = "SwitchedAggregateDef"></role>
         <role name = "TwowayOperation" metaref = "2722" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "2724" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2725" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2726" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2727" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "2728" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2729" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2730" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2731" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2732" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2733" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2734" role = "LookupOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2736" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2737" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2739" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2740" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2741" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ConstantDef" metaref = "2317" attributes = "VersionTag SpecifyIdTag value" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="const.bmp"></regnode>
         <constraint name="ConstantDefNotEmpty" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ()->size = 1]]>
            <dispname>A ConstantDef cannot be empty</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality12" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumRef" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality13" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality14" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "FixedPoint" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality15" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PredefinedType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="value" metaref = "2318" valuetype = "string" defvalue = "">
            <dispname></dispname>
         </attrdef>
         <role name = "BoundedString" metaref = "1288" kind = "BoundedString"></role>
         <role name = "EnumRef" metaref = "1881" kind = "EnumRef"></role>
         <role name = "FixedPoint" metaref = "2170" kind = "FixedPoint"></role>
         <role name = "PredefinedType" metaref = "1290" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2422" attributes = "VersionTag SpecifyIdTag value" >
            <part metaref = "2423" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2424" role = "EnumRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2425" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2426" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Discriminator" metaref = "1887" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="discriminator.bmp"></regnode>
         <constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[parts ()->one (isTypeOf (EnumRef) 
                     or (isTypeOf (PredefinedType) 
                          and (let x = oclAsType (PredefinedType).which_type in
                                  x = #BOOLEAN or
                                  x = #CHAR or
                                  x = #SHORT or
                                  x = #UNSIGNED_SHORT or
                                  x = #LONG or
                                  x = #UNSIGNED_LONG or
                                  x = #LONGLONG or
                                  x = #UNSIGNED_LONGLONG)))]]>
            <dispname>Discriminator must have integer, character, boolean or enum type</dispname>
         </constraint>
         <constraint name="ValidDiscriminatorPartCardinality16" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumRef" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Discriminator, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDiscriminatorPartCardinality17" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PredefinedType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Discriminator, has to match 0..1.</dispname>
         </constraint>
         <role name = "EnumRef" metaref = "1888" kind = "EnumRef"></role>
         <role name = "PredefinedType" metaref = "1297" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2429" >
            <part metaref = "2430" role = "EnumRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2431" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "EnumerationDef" metaref = "1890" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enum.bmp"></regnode>
         <constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
            <dispname>An enum's member names must be unique</dispname>
         </constraint>
         <constraint name="ValidEnumerationDefPartCardinality18" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by EnumerationDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <role name = "EnumValue" metaref = "1891" kind = "EnumValue"></role>
         <aspect name = "InterfaceDefinition" metaref = "2432" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2433" role = "EnumValue" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "EventDef" metaref = "1431" attributes = "VersionTag PrefixTag SpecifyIdTag custom truncatable abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="event.bmp"></regnode>
         <constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (EventDef).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract EventDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2172" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="custom" metaref = "2173" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="truncatable" metaref = "2765" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <role name = "AggregateDef" metaref = "1897" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "1898" kind = "AliasDef"></role>
         <role name = "Attribute" metaref = "1434" kind = "Attribute"></role>
         <role name = "BoundedString" metaref = "1435" kind = "BoundedString"></role>
         <role name = "ConstantDef" metaref = "2319" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "1901" kind = "EnumerationDef"></role>
         <role name = "ExceptionDef" metaref = "2320" kind = "ExceptionDef"></role>
         <role name = "FactoryOperation" metaref = "1902" kind = "FactoryOperation"></role>
         <role name = "FixedPoint" metaref = "2175" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1728" kind = "FixedSizeCollection"></role>
         <role name = "Inherits" metaref = "1443" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "2304" kind = "MakeMemberPrivate"></role>
         <role name = "NamedTypeRef" metaref = "1904" kind = "NamedTypeRef"></role>
         <role name = "OnewayOperation" metaref = "1446" kind = "OnewayOperation"></role>
         <role name = "PredefinedType" metaref = "1448" kind = "PredefinedType"></role>
         <role name = "PrivateFlag" metaref = "2305" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "1449" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "1450" kind = "Supports"></role>
         <role name = "SwitchedAggregateDef" metaref = "1906" kind = "SwitchedAggregateDef"></role>
         <role name = "TwowayOperation" metaref = "1907" kind = "TwowayOperation"></role>
         <role name = "VariableSizeCollection" metaref = "1729" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2436" attributes = "VersionTag PrefixTag SpecifyIdTag custom truncatable abstract" >
            <part metaref = "2437" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2438" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2439" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "2440" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2441" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2442" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2443" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2444" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2445" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2446" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2447" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2448" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "2449" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2450" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2451" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2453" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "2454" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2456" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2457" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2458" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2459" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ExceptionDef" metaref = "2323" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="exception.bmp"></regnode>
         <role name = "BoundedString" metaref = "2235" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2236" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "2237" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "2238" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "2239" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "2241" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2461" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2462" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2463" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2464" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2465" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2466" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2468" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FactoryOperation" metaref = "1927" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="factory.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2324" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "1930" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2470" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2471" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2472" role = "InParameter" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "File" metaref = "2326" attributes = "PrefixTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="file.bmp"></regnode>
         <role name = "AggregateDef" metaref = "1937" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "1938" kind = "AliasDef"></role>
         <role name = "BoxedDef" metaref = "2180" kind = "BoxedDef"></role>
         <role name = "ComponentDef" metaref = "2252" kind = "ComponentDef"></role>
         <role name = "ComponentFactory" metaref = "2743" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "2766" kind = "ComponentRef"></role>
         <role name = "ConstantDef" metaref = "2327" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "1941" kind = "EnumerationDef"></role>
         <role name = "EventDef" metaref = "1483" kind = "EventDef"></role>
         <role name = "ExceptionDef" metaref = "2328" kind = "ExceptionDef"></role>
         <role name = "FileRef" metaref = "2628" kind = "FileRef"></role>
         <role name = "MangesComponent" metaref = "2767" kind = "MangesComponent"></role>
         <role name = "ObjectDef" metaref = "2665" kind = "ObjectDef"></role>
         <role name = "Package" metaref = "2330" kind = "Package"></role>
         <role name = "SwitchedAggregateDef" metaref = "1943" kind = "SwitchedAggregateDef"></role>
         <role name = "ValueDef" metaref = "1486" kind = "ValueDef"></role>
         <aspect name = "InterfaceDefinition" metaref = "2475" attributes = "PrefixTag" >
            <part metaref = "2476" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2477" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2478" role = "BoxedDef" primary = "yes" linked = "no"></part>
            <part metaref = "2479" role = "ComponentDef" primary = "yes" linked = "no"></part>
            <part metaref = "2744" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "2768" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2481" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2482" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2483" role = "EventDef" primary = "yes" linked = "no"></part>
            <part metaref = "2484" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2629" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2769" role = "MangesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "2666" role = "ObjectDef" primary = "yes" linked = "no"></part>
            <part metaref = "2487" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "2489" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2490" role = "ValueDef" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FixedSizeCollection" metaref = "1736" attributes = "bound" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="fixedcollection.bmp"></regnode>
         <constraint name="NoNestedArray" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts ("FixedSizeCollection")->size = 0]]>
            <dispname>An unaliased fixed size collection may not be the element type of a collection</dispname>
         </constraint>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidCollectionTypePartCardinality10" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by CollectionType, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="bound" metaref = "2182" valuetype = "integer" defvalue = "0">
            <dispname></dispname>
         </attrdef>
         <role name = "BoundedString" metaref = "1737" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2184" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1738" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "1951" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1740" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1741" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2491" attributes = "bound" >
            <part metaref = "2492" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2493" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2494" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2495" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2496" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2497" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "InParameter" metaref = "1549" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="in.bmp"></regnode>
         <constraint name="ValidParameterPartCardinality19" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ParameterType" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Parameter, has to match 1.</dispname>
         </constraint>
         <role name = "NamedTypeRef" metaref = "1956" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1551" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2502" >
            <part metaref = "2503" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2504" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "InoutParameter" metaref = "1555" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="inout.bmp"></regnode>
         <constraint name="ValidParameterPartCardinality19" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ParameterType" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Parameter, has to match 1.</dispname>
         </constraint>
         <role name = "NamedTypeRef" metaref = "1958" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1557" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2505" >
            <part metaref = "2506" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2507" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "LookupOperation" metaref = "1980" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="lookup.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2339" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "1983" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2523" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2524" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2525" role = "InParameter" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ObjectDef" metaref = "2667" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="object.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[if (self.local = true) then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (ObjectDef).local = false)
endif]]>
            <dispname>A non-local interface cannot inherit from a local one</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2668" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="local" metaref = "2669" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <role name = "AggregateDef" metaref = "2670" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "2671" kind = "AliasDef"></role>
         <role name = "Attribute" metaref = "2672" kind = "Attribute"></role>
         <role name = "ConstantDef" metaref = "2673" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "2674" kind = "EnumerationDef"></role>
         <role name = "ExceptionDef" metaref = "2675" kind = "ExceptionDef"></role>
         <role name = "Inherits" metaref = "2676" kind = "Inherits"></role>
         <role name = "OnewayOperation" metaref = "2677" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "2679" kind = "ReadonlyAttribute"></role>
         <role name = "SwitchedAggregateDef" metaref = "2681" kind = "SwitchedAggregateDef"></role>
         <role name = "TwowayOperation" metaref = "2682" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "2684" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <part metaref = "2685" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2686" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2687" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "2688" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2689" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2690" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2691" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2692" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2694" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2696" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2697" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OnewayOperation" metaref = "1592" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="oneway.bmp"></regnode>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <role name = "InParameter" metaref = "1594" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "2528" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2529" role = "InParameter" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OutParameter" metaref = "1610" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="out.bmp"></regnode>
         <constraint name="ValidParameterPartCardinality19" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ParameterType" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Parameter, has to match 1.</dispname>
         </constraint>
         <role name = "NamedTypeRef" metaref = "1997" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1612" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2536" >
            <part metaref = "2537" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2538" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Package" metaref = "2341" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="package.bmp"></regnode>
         <constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.parts ()->size > 0]]>
            <dispname>A package cannot be empty</dispname>
         </constraint>
         <constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let decls = self.allScopeDecls () in
if (decls->size <= 1) then
    true
else
    decls->forAll (
        x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
      )
endif]]>
            <dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
         </constraint>
         <role name = "AggregateDef" metaref = "1999" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "2000" kind = "AliasDef"></role>
         <role name = "BoxedDef" metaref = "2191" kind = "BoxedDef"></role>
         <role name = "ComponentDef" metaref = "2258" kind = "ComponentDef"></role>
         <role name = "ComponentFactory" metaref = "2745" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "2770" kind = "ComponentRef"></role>
         <role name = "ConstantDef" metaref = "2342" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "2003" kind = "EnumerationDef"></role>
         <role name = "EventDef" metaref = "1617" kind = "EventDef"></role>
         <role name = "ExceptionDef" metaref = "2343" kind = "ExceptionDef"></role>
         <role name = "MangesComponent" metaref = "2771" kind = "MangesComponent"></role>
         <role name = "ObjectDef" metaref = "2699" kind = "ObjectDef"></role>
         <role name = "Package" metaref = "2344" kind = "Package"></role>
         <role name = "SwitchedAggregateDef" metaref = "2006" kind = "SwitchedAggregateDef"></role>
         <role name = "ValueDef" metaref = "1620" kind = "ValueDef"></role>
         <aspect name = "InterfaceDefinition" metaref = "2539" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <part metaref = "2540" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2541" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2542" role = "BoxedDef" primary = "yes" linked = "no"></part>
            <part metaref = "2543" role = "ComponentDef" primary = "yes" linked = "no"></part>
            <part metaref = "2746" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "2772" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2545" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2546" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2547" role = "EventDef" primary = "yes" linked = "no"></part>
            <part metaref = "2548" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2773" role = "MangesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "2700" role = "ObjectDef" primary = "yes" linked = "no"></part>
            <part metaref = "2550" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "2553" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2554" role = "ValueDef" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReadonlyAttribute" metaref = "1626" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality20" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "1627" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2193" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1760" kind = "FixedSizeCollection"></role>
         <role name = "GetException" metaref = "2267" kind = "GetException"></role>
         <role name = "NamedTypeRef" metaref = "2020" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1631" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1761" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2560" >
            <part metaref = "2561" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2562" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2563" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2564" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2565" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2566" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2567" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReturnType" metaref = "1640" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="return.bmp"></regnode>
         <constraint name="ValidParameterPartCardinality19" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ParameterType" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Parameter, has to match 1.</dispname>
         </constraint>
         <role name = "NamedTypeRef" metaref = "2025" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1642" kind = "PredefinedType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2572" >
            <part metaref = "2573" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2574" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SwitchedAggregateDef" metaref = "2027" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
         <constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[self.allMembers ()->forAll (
    x : gme::FCO | let labels = x.connectedFCOs ()
                                in
    labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
)]]>
            <dispname>A default member cannot have multiple labels</dispname>
         </constraint>
         <constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
            <dispname>Labels in the same scope must be unique</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality21" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality22" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality23" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality24" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1..*.</dispname>
         </constraint>
         <role name = "BoundedString" metaref = "1381" kind = "BoundedString"></role>
         <role name = "Discriminator" metaref = "2028" kind = "Discriminator"></role>
         <role name = "FixedPoint" metaref = "2196" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1768" kind = "FixedSizeCollection"></role>
         <role name = "Label" metaref = "2030" kind = "Label"></role>
         <role name = "LabelConnection" metaref = "2031" kind = "LabelConnection"></role>
         <role name = "NamedTypeRef" metaref = "2032" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1386" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1769" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2575" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2576" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2577" role = "Discriminator" primary = "yes" linked = "no"></part>
            <part metaref = "2578" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2579" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2580" role = "Label" primary = "yes" linked = "no"></part>
            <part metaref = "2581" role = "LabelConnection" primary = "yes" linked = "no"></part>
            <part metaref = "2582" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2583" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2585" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TwowayOperation" metaref = "2040" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="twoway.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2348" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "2043" kind = "InParameter"></role>
         <role name = "InoutParameter" metaref = "2044" kind = "InoutParameter"></role>
         <role name = "OutParameter" metaref = "2045" kind = "OutParameter"></role>
         <role name = "ReturnType" metaref = "2046" kind = "ReturnType"></role>
         <aspect name = "InterfaceDefinition" metaref = "2587" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2588" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2589" role = "InParameter" primary = "yes" linked = "no"></part>
            <part metaref = "2590" role = "InoutParameter" primary = "yes" linked = "no"></part>
            <part metaref = "2591" role = "OutParameter" primary = "yes" linked = "no"></part>
            <part metaref = "2592" role = "ReturnType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ValueDef" metaref = "1646" attributes = "VersionTag PrefixTag SpecifyIdTag custom truncatable abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="value.bmp"></regnode>
         <constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (ValueDef).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2198" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="custom" metaref = "2199" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="truncatable" metaref = "2774" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <role name = "AggregateDef" metaref = "2056" kind = "AggregateDef"></role>
         <role name = "AliasDef" metaref = "2057" kind = "AliasDef"></role>
         <role name = "Attribute" metaref = "1649" kind = "Attribute"></role>
         <role name = "BoundedString" metaref = "1650" kind = "BoundedString"></role>
         <role name = "ConstantDef" metaref = "2350" kind = "ConstantDef"></role>
         <role name = "EnumerationDef" metaref = "2060" kind = "EnumerationDef"></role>
         <role name = "ExceptionDef" metaref = "2351" kind = "ExceptionDef"></role>
         <role name = "FactoryOperation" metaref = "2061" kind = "FactoryOperation"></role>
         <role name = "FixedPoint" metaref = "2201" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1772" kind = "FixedSizeCollection"></role>
         <role name = "Inherits" metaref = "1658" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "2308" kind = "MakeMemberPrivate"></role>
         <role name = "NamedTypeRef" metaref = "2063" kind = "NamedTypeRef"></role>
         <role name = "OnewayOperation" metaref = "1661" kind = "OnewayOperation"></role>
         <role name = "PredefinedType" metaref = "1663" kind = "PredefinedType"></role>
         <role name = "PrivateFlag" metaref = "2309" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "1664" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "1665" kind = "Supports"></role>
         <role name = "SwitchedAggregateDef" metaref = "2065" kind = "SwitchedAggregateDef"></role>
         <role name = "TwowayOperation" metaref = "2066" kind = "TwowayOperation"></role>
         <role name = "VariableSizeCollection" metaref = "1773" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2595" attributes = "VersionTag PrefixTag SpecifyIdTag custom truncatable abstract" >
            <part metaref = "2596" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2597" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "2598" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "2599" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2600" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "2601" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "2602" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "2603" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2604" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2605" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2606" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2607" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "2608" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2609" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2610" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2612" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "2613" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2615" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2616" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "2617" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2618" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "VariableSizeCollection" metaref = "1776" attributes = "bound" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="variablecollection.bmp"></regnode>
         <constraint name="NoNestedArray" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts ("FixedSizeCollection")->size = 0]]>
            <dispname>An unaliased fixed size collection may not be the element type of a collection</dispname>
         </constraint>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidCollectionTypePartCardinality10" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Member" ) -> size + self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "VariableSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by CollectionType, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality4" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="bound" metaref = "2204" valuetype = "integer" defvalue = "0">
            <dispname></dispname>
         </attrdef>
         <role name = "BoundedString" metaref = "1777" kind = "BoundedString"></role>
         <role name = "FixedPoint" metaref = "2206" kind = "FixedPoint"></role>
         <role name = "FixedSizeCollection" metaref = "1778" kind = "FixedSizeCollection"></role>
         <role name = "NamedTypeRef" metaref = "2080" kind = "NamedTypeRef"></role>
         <role name = "PredefinedType" metaref = "1780" kind = "PredefinedType"></role>
         <role name = "VariableSizeCollection" metaref = "1781" kind = "VariableSizeCollection"></role>
         <aspect name = "InterfaceDefinition" metaref = "2620" attributes = "bound" >
            <part metaref = "2621" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "2622" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "2623" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "2624" role = "NamedTypeRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2625" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "2626" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <folder name = "InterfaceDefinitions" metaref = "2775"  rootobjects = "File" >
      </folder>
   </folder>
</paradigm>
