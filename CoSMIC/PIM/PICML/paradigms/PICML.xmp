<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name ="PICML">

   <comment> Generated by the MetaGME2004 interpreter </comment>

   <folder name = "RootFolder" metaref = "1000"  subfolders = "ComponentAnalyses ComponentImplementations ComponentPackages ComponentTypes DeploymentPlans ImplementationArtifacts InterfaceDefinitions PackageConfigurations PredefinedTypes Targets TopLevelPackages" >
      <constraint type="function" name="AllParams">
         <![CDATA[method;gme::Model;;ocl::Set;
         parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
      </constraint>
      <constraint type="function" name="allFileScopeDecls">
         <![CDATA[method;gme::Folder;;ocl::Set;
         let closure = self.models ("File") in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (x ; accu = Set{} | accu 
                                                                     + x.parts () 
                                                                     - x.parts ("FileRef") 
                                                                     - x.parts ("ComponentRef") 
                                                                     - x.parts ("ManagesComponent"))
  endif]]>
      </constraint>
      <constraint type="function" name="allOps">
         <![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
         let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
  ret]]>
      </constraint>
      <constraint type="function" name="inheritedOps">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let parents = self.referenceParts ("Inherits") in
parents->iterate (ref; accu = Set{} | accu + 
(let parent = ref.refersTo ().oclAsType (gme::Model) in
if (parent == top) then Set{}
else
parent.localOps () + parent.inheritedOps (top)
endif))]]>
      </constraint>
      <constraint type="function" name="inheritedSupportedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let parents= referenceParts ("Inherits") in
parents->iterate (ref; accu = Set{} | accu +
(let parent = ref.refersTo ().oclAsType (gme::Model) in
parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
      </constraint>
      <constraint type="function" name="inheritsRecursive">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let inherits = referenceParts ("Inherits") in
inherits->iterate (ref; accu = Set{} | accu +
(let parent = ref.refersTo ().oclAsType (gme::Model) in
Set {parent} + 
(if (parent != top) then parent.inheritsRecursive (top)
else Set {}
endif)))]]>
      </constraint>
      <constraint type="function" name="localOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
      </constraint>
      <constraint type="function" name="supportedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let supported_set = referenceParts ("Supports") in
supported_set->iterate (ref; accu = Set{} | accu +
(let supported = ref.refersTo ().oclAsType (gme::Model) in
supported.localOps () + supported.inheritedOps (supported)))]]>
      </constraint>
      <attrdef name="DataValue" metaref = "2747" valuetype = "string" defvalue = "">
         <dispname>value</dispname>
      </attrdef>
      <attrdef name="PrefixTag" metaref = "2748" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="ResourceUsageKind" metaref = "3530" valuetype = "enum" defvalue = "None">
         <dispname>resourceUsage</dispname>
         <enumitem dispname = "None" value = "None"></enumitem>
         <enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
         <enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
         <enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
         <enumitem dispname = "ResouceUsesPort" value = "ResouceUsesPort"></enumitem>
      </attrdef>
      <attrdef name="SatisfierPropertyKind" metaref = "3531" valuetype = "enum" defvalue = "Quantity">
         <dispname>kind</dispname>
         <enumitem dispname = "Quantity" value = "Quantity"></enumitem>
         <enumitem dispname = "Capacity" value = "Capacity"></enumitem>
         <enumitem dispname = "Minimum" value = "Minimum"></enumitem>
         <enumitem dispname = "Maximum" value = "Maximum"></enumitem>
         <enumitem dispname = "Selection" value = "Selection"></enumitem>
         <enumitem dispname = "Attribute" value = "Attribute"></enumitem>
      </attrdef>
      <attrdef name="SpecifyIdTag" metaref = "2749" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="UUID" metaref = "3532" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="VersionTag" metaref = "2750" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="componentPort" metaref = "2751" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="exclusiveProvider" metaref = "2752" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="exclusiveUser" metaref = "4088" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="fileName" metaref = "3993" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="iterations" metaref = "3994" valuetype = "integer" defvalue = "">
      </attrdef>
      <attrdef name="label" metaref = "4089" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="location" metaref = "4090" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="optional" metaref = "4091" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="requiredName" metaref = "4092" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="requiredType" metaref = "4093" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="requiredUUID" metaref = "4094" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="resourcePort" metaref = "4095" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="resourceType" metaref = "4096" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="warmup" metaref = "3995" valuetype = "integer" defvalue = "">
      </attrdef>
      <atom name = "Average" metaref = "3996" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Average.bmp"></regnode>
      </atom>
      <atom name = "Boolean" metaref = "2914" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "Byte" metaref = "2915" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ComponentPackage" metaref = "3533"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
        self.UUID <> "" implies packages->isUnique (i : ComponentPackage | i.UUID)]]>
            <dispname>UUIDs if defined, should uniquely identify ComponentPackages</dispname>
         </constraint>
         <constraint name="ValidPackageInterfacedstCardinality72" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageInterface ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentPackage as "dst" over PackageInterface, has to match 0..1.</dispname>
         </constraint>
            <regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
      </atom>
      <atom name = "EnumValue" metaref = "1791" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enumvalue.bmp"></regnode>
      </atom>
      <atom name = "GenericObject" metaref = "2916" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValue" metaref = "2917" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValueObject" metaref = "2918" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ImplementationArtifact" metaref = "3534"  attributes = "label UUID location">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
      </atom>
      <atom name = "ImplementationDependency" metaref = "4100"  attributes = "requiredType">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
      </atom>
      <atom name = "Jitter" metaref = "3997" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Jitter.bmp"></regnode>
      </atom>
      <atom name = "Label" metaref = "1793" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidLabelConnectionsrcCardinality41" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", LabelConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to Label as "src" over LabelConnection, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="label.bmp"></regnode>
      </atom>
      <atom name = "LongInteger" metaref = "2919" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "Maximum" metaref = "3998" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Max.bmp"></regnode>
      </atom>
      <atom name = "Minimum" metaref = "3999" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Min.bmp"></regnode>
      </atom>
      <atom name = "MonolithicImplementation" metaref = "3535"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
      </atom>
      <atom name = "PackageConfiguration" metaref = "3536"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
       folder->isUnique (e1 : PackageConfiguration | e1.name)]]>
            <dispname>PackageConfiguration should be unique within a project</dispname>
         </constraint>
         <constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let packageconfigs = project.allInstancesOf (PackageConfiguration) in
        self.UUID <> "" implies packageconfigs->isUnique (i : PackageConfiguration | i.UUID)]]>
            <dispname>UUIDs if defined, should uniquely identify PackageConfigurations</dispname>
         </constraint>
         <constraint name="ValidPackageConfBasePackagedstCardinality58" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfBasePackage, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfReferencedstCardinality62" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfReference, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfSpecializedConfigdstCardinality66" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfSpecializedConfig, has to match 0..1.</dispname>
         </constraint>
            <regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
      </atom>
      <atom name = "PrivateFlag" metaref = "2302" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidMakeMemberPrivatesrcCardinality43" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PrivateFlag as "src" over MakeMemberPrivate, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="private.bmp"></regnode>
            <regnode name = "isNameEnabled" value ="false"></regnode>
      </atom>
      <atom name = "PublishConnector" metaref = "3537" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Connector.bmp"></regnode>
      </atom>
      <atom name = "RealNumber" metaref = "2920" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ShortInteger" metaref = "2921" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "String" metaref = "2922" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TimeProbe" metaref = "4075" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidTimerConnectionsrcCardinality75" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", TimerConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to TimeProbe as "src" over TimerConnection, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="timer.bmp"></regnode>
      </atom>
      <atom name = "TopLevelPackage" metaref = "2767" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidpackagedstCardinality86" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", package ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to TopLevelPackage as "dst" over package, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
      </atom>
      <atom name = "TypeEncoding" metaref = "2923" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TypeKind" metaref = "2924" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <set name = "CollocationGroup" metaref = "3711" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "mName" value ="members"></regnode>
            <regnode name = "icon" value ="ComponentSet"></regnode>
         <pointerspec name = "set">
            <pointeritem desc = "ComponentType"></pointeritem>
         </pointerspec>
      </set>
      <connection name = "ArtifactDependsOn" metaref = "3538" >
            <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
            <regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
            <regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationArtifactReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactDeployRequirement" metaref = "3150" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactExecParameter" metaref = "3151" >
            <regnode name = "labelFormatStr" value ="execParameter"></regnode>
            <regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
            <regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactInfoProperty" metaref = "3539" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
            <regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyConfigProperty" metaref = "3540" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
            <regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyDeployRequirement" metaref = "3541" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcAssemblyDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstAssemblyDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyselectRequirement" metaref = "3542" >
            <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
            <regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
            <regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Bridge2Interconnect" metaref = "3670" >
            <regnode name = "sName" value ="srcBridge2Interconnect"></regnode>
            <regnode name = "dName" value ="dstBridge2Interconnect"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Bridge"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Interconnect"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentConfigProperty" metaref = "2772" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
            <regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentInfoProperty" metaref = "2773" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
            <regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentProperty" metaref = "2774" >
            <regnode name = "labelFormatStr" value ="property"></regnode>
            <regnode name = "sName" value ="srcComponentProperty"></regnode>
            <regnode name = "dName" value ="dstComponentProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPropertyDescription"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ConfigProperty" metaref = "3543" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcConfigProperty"></regnode>
            <regnode name = "dName" value ="dstConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Implementation" metaref = "3545" >
            <regnode name = "labelFormatStr" value ="implementation"></regnode>
            <regnode name = "sName" value ="srcImplementation"></regnode>
            <regnode name = "dName" value ="dstImplementation"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationCapability" metaref = "3546" >
            <regnode name = "labelFormatStr" value ="capability"></regnode>
            <regnode name = "sName" value ="srcImplementationCapability"></regnode>
            <regnode name = "dName" value ="dstImplementationCapability"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Capability"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationDependsOn" metaref = "3159" >
            <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
            <regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
            <regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationDependency"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Implements" metaref = "3160" >
            <regnode name = "labelFormatStr" value ="implements"></regnode>
            <regnode name = "sName" value ="srcImplements"></regnode>
            <regnode name = "dName" value ="dstImplements"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "InfoProperty" metaref = "3547" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcInfoProperty"></regnode>
            <regnode name = "dName" value ="dstInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "InstanceMapping" metaref = "3548" >
            <regnode name = "labelFormatStr" value ="runsOn"></regnode>
            <regnode name = "sName" value ="srcInstanceMapping"></regnode>
            <regnode name = "dName" value ="dstInstanceMapping"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "CollocationGroup"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "NodeReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Interconnect2Bridge" metaref = "3672" >
            <regnode name = "sName" value ="srcInterconnect2Bridge"></regnode>
            <regnode name = "dName" value ="dstInterconnect2Bridge"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Interconnect"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Bridge"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Interconnect2Node" metaref = "3673" >
            <regnode name = "sName" value ="srcInterconnect2Node"></regnode>
            <regnode name = "dName" value ="dstInterconnect2Node"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Interconnect"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Node"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "LabelConnection" metaref = "1796" >
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Label"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MakeMemberPrivate" metaref = "2303" >
            <regnode name = "color" value ="0xFF0000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PrivateFlag"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ManagesComponent" metaref = "3238" >
            <regnode name = "color" value ="0x00FF00"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentFactory"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component"></pointeritem>
               <pointeritem desc = "ComponentRef"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MetricConnection" metaref = "4001" >
            <regnode name = "labelFormatStr" value ="measures"></regnode>
            <regnode name = "sName" value ="srcMetricConnection"></regnode>
            <regnode name = "dName" value ="dstMetricConnection"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "OperationRef"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Latency"></pointeritem>
               <pointeritem desc = "Throughput"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithDeployRequirement" metaref = "3549" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithExecParameter" metaref = "3550" >
            <regnode name = "labelFormatStr" value ="execParameter"></regnode>
            <regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
            <regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithprimaryArtifact" metaref = "3551" >
            <regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
            <regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
            <regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationArtifactReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Node2Interconnect" metaref = "3674" >
            <regnode name = "sName" value ="srcNode2Interconnect"></regnode>
            <regnode name = "dName" value ="dstNode2Interconnect"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Node"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Interconnect"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfBasePackage" metaref = "3552" >
            <regnode name = "labelFormatStr" value ="basePackage"></regnode>
            <regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
            <regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfConfigProperty" metaref = "3553" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
            <regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfReference" metaref = "3554" >
            <regnode name = "labelFormatStr" value ="reference"></regnode>
            <regnode name = "sName" value ="srcPackageConfReference"></regnode>
            <regnode name = "dName" value ="dstPackageConfReference"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackageReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfSelectRequirement" metaref = "3939" >
            <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
            <regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
            <regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfSpecializedConfig" metaref = "3940" >
            <regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
            <regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
            <regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfigProperty" metaref = "3555" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
            <regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInfoProperty" metaref = "3556" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
            <regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInterface" metaref = "3557" >
            <regnode name = "labelFormatStr" value ="realizes"></regnode>
            <regnode name = "sName" value ="srcPackageInterface"></regnode>
            <regnode name = "dName" value ="dstPackageInterface"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Shares" metaref = "3675" >
            <regnode name = "labelFormatStr" value ="shares"></regnode>
            <regnode name = "sName" value ="srcShares"></regnode>
            <regnode name = "dName" value ="dstShares"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Node"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "SharedResource"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "TimerConnection" metaref = "4002" >
            <regnode name = "labelFormatStr" value ="getTime"></regnode>
            <regnode name = "sName" value ="srcTimerConnection"></regnode>
            <regnode name = "dName" value ="dstTimerConnection"></regnode>
            <regnode name = "color" value ="0xFF0000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "OperationRef"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "TimeProbe"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "TimerEventSinkConn" metaref = "4003" >
            <regnode name = "labelFormatStr" value ="getTime"></regnode>
            <regnode name = "sName" value ="srcTimerEventSinkConn"></regnode>
            <regnode name = "dName" value ="dstTimerEventSinkConn"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "EventRef"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "TimeProbe"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "deliverTo" metaref = "3173" >
            <regnode name = "labelFormatStr" value ="deliverTo"></regnode>
            <regnode name = "sName" value ="srcdeliverTo"></regnode>
            <regnode name = "dName" value ="dstdeliverTo"></regnode>
            <regnode name = "color" value ="0x008000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component InEventPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "emit" metaref = "3558" >
            <regnode name = "labelFormatStr" value ="emit"></regnode>
            <regnode name = "sName" value ="srcemit"></regnode>
            <regnode name = "dName" value ="dstemit"></regnode>
            <regnode name = "color" value ="0x8F0000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component OutEventPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component InEventPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "invoke" metaref = "3559" >
            <regnode name = "labelFormatStr" value ="invoke"></regnode>
            <regnode name = "sName" value ="srcinvoke"></regnode>
            <regnode name = "dName" value ="dstinvoke"></regnode>
            <regnode name = "color" value ="0x00008F"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component RequiredRequestPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "package" metaref = "3560" >
            <regnode name = "labelFormatStr" value ="package"></regnode>
            <regnode name = "sName" value ="srcpackage"></regnode>
            <regnode name = "dName" value ="dstpackage"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "TopLevelPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PackageConfigurationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "publish" metaref = "3177" >
            <regnode name = "labelFormatStr" value ="publish"></regnode>
            <regnode name = "sName" value ="srcpublish"></regnode>
            <regnode name = "dName" value ="dstpublish"></regnode>
            <regnode name = "color" value ="0x008000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component OutEventPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <reference name = "Alias" metaref = "3119" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="alias.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "AttributeMember" metaref = "3239">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Boxed" metaref = "3120" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[let boxedref = refersTo () in
   boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
            <dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
         </constraint>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="boxed.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Collection" metaref = "3121" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="variablecollection.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentImplementationReference" metaref = "3941">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentAssembly"></pointeritem>
            <pointeritem desc = "MonolithicImplementation"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentPackageReference" metaref = "3942" attributes = "requiredType requiredUUID requiredName">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
         <constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo().isNull()]]>
            <dispname>ComponentPackageReference cannot be null</dispname>
         </constraint>
         <constraint name="OneAttribute" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.requiredName <> "" 
or self.requiredType <> "" 
or self.requiredUUID <> ""]]>
            <dispname>Atleast one of requiredName, requiredType or requiredUUID should be present</dispname>
         </constraint>
         <regnode name = "icon" value ="PackageReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentPackage"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentRef" metaref = "3240">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="componentref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentType" metaref = "2801">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentType"></regnode>
         <constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo().isNull()]]>
            <dispname>ComponentType/Node references cannot be null</dispname>
         </constraint>
         <constraint name="ValidPackageInterfacesrcCardinality71" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", PackageInterface ) -> size in
                     (srcCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentType as "src" over PackageInterface, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "isTypeShown" value ="true"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Constant" metaref = "3112" attributes = "VersionTag SpecifyIdTag value">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="LegalConstantType" eventmask = "0x400" depth = "1" priority = "1">
            <![CDATA[let x = refersTo () in
  x.isTypeOf (String) or
  x.isTypeOf (LongInteger) or
  x.isTypeOf (Enum) or
  x.isTypeOf (ShortInteger) or
  x.isTypeOf (RealNumber) or
  x.isTypeOf (Byte) or
  x.isTypeOf (Boolean)]]>
            <dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
         </constraint>
         <constraint name="LegalConstantValue" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = refersTo () in
  (x.isTypeOf (Boolean) implies ((let y = value.trim ().toInteger () in y = 0 or y = 1) or
                                                               (let z = value.trim ().toUpper () in z = "TRUE" or z = "FALSE"))) and
  (x.isTypeOf (Byte) implies (let y = value.trim ().toInteger () in y >= 0 and y < 256)) and
  (x.isTypeOf (ShortInteger) implies (let y = value.trim ().toInteger () in y > -32769 and y < 32768)) and
  (x.isTypeOf (LongInteger) implies (let y = value.trim ().toInteger () in y > -2147483649 and y < 2147483648)) and
  (x.isTypeOf (RealNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
  (x.isTypeOf (Enum) implies x.oclAsType (gme::Model).parts ()->collect (y : gme::FCO | y.name)->exists (z : ocl::String | z = value.trim ()))]]>
            <dispname>Constant's value does not match type or is out of range</dispname>
         </constraint>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="value" metaref = "3113" valuetype = "string" defvalue = "">
         </attrdef>
         <regnode name = "icon" value ="const.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "DataType" metaref = "3769">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyDataType"></regnode>
         <regnode name = "icon" value ="DataType.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Discriminator" metaref = "3122">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <regnode name = "icon" value ="discriminator.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "EventRef" metaref = "4004">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyEventRef"></regnode>
         <regnode name = "icon" value ="eventref.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ExceptionRef" metaref = "2312">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="exceptionref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "FileRef" metaref = "2627">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="fileref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "File"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "GetException" metaref = "2264">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="getexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ImplementationArtifactReference" metaref = "3562">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
         <regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ImplementationArtifact"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InEventPort" metaref = "2753" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <constraint name="ValidemitsrcCardinality81" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", emit ) -> size in
                     (srcCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to InEventPort as "src" over emit, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="ineventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InParameter" metaref = "3123">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="in.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Inherits" metaref = "1401">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="inherits.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InoutParameter" metaref = "3124">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="inout.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "LookupKey" metaref = "1800">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="lookupkey.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Member" metaref = "3125">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ParentNameClash" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[name <> parent ().name]]>
            <dispname>A member may not have the same name as its container.</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality44" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "NodeReference" metaref = "3676">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyNodeReference"></regnode>
         <constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo().isNull()]]>
            <dispname>ComponentType/Node references cannot be null</dispname>
         </constraint>
         <pointerspec name = "ref">
            <pointeritem desc = "Node"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OperationRef" metaref = "4005">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyOperationRef"></regnode>
         <constraint name="ValidMetricConnectiondstCardinality48" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MetricConnection ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over MetricConnection, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidTimerConnectiondstCardinality76" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", TimerConnection ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to OperationRef as "dst" over TimerConnection, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="operationref.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "FactoryOperation"></pointeritem>
            <pointeritem desc = "LookupOperation"></pointeritem>
            <pointeritem desc = "OnewayOperation"></pointeritem>
            <pointeritem desc = "TwowayOperation"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutEventPort" metaref = "2754" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider single_destination">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <constraint name="ValidemitdstCardinality82" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", emit ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to OutEventPort as "dst" over emit, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="single_destination" metaref = "2190" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="outeventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutParameter" metaref = "3126">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="out.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "PackageConfigurationReference" metaref = "2803">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
         <constraint name="ValidpackagesrcCardinality85" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", package ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfigurationReference as "src" over package, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "PackageConfiguration"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ProvidedRequestPort" metaref = "2755" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="providedrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "RequiredRequestPort" metaref = "2756" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider multiple_connections">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="multiple_connections" metaref = "2195" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ReturnType" metaref = "3127">
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="return.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "SetException" metaref = "1701">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="setexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Supports" metaref = "1404">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="supports.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <model name = "Aggregate" metaref = "2928" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="aggregate.bmp"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3128" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3303" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3129" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ArtifactContainer" metaref = "3566" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidArtifactContainerPartCardinality89" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ArtifactContainer, has to match 1..*.</dispname>
         </constraint>
         <role name = "ArtifactDependsOn" metaref = "3567" kind = "ArtifactDependsOn"></role>
         <role name = "ArtifactDeployRequirement" metaref = "3568" kind = "ArtifactDeployRequirement"></role>
         <role name = "ArtifactExecParameter" metaref = "3569" kind = "ArtifactExecParameter"></role>
         <role name = "ArtifactInfoProperty" metaref = "3570" kind = "ArtifactInfoProperty"></role>
         <role name = "ImplementationArtifact" metaref = "3190" kind = "ImplementationArtifact"></role>
         <role name = "ImplementationArtifactReference" metaref = "3191" kind = "ImplementationArtifactReference"></role>
         <role name = "Property" metaref = "2817" kind = "Property"></role>
         <role name = "Requirement" metaref = "2818" kind = "Requirement"></role>
         <aspect name = "Packaging" metaref = "3849" >
            <part metaref = "3850" role = "ArtifactDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "3851" role = "ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3852" role = "ArtifactExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3853" role = "ArtifactInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3854" role = "ImplementationArtifact" primary = "yes" linked = "no"></part>
            <part metaref = "3855" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
            <part metaref = "3856" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "3857" role = "Requirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Attribute" metaref = "1405" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
            <regnode name = "icon" value ="attribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality104" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3241" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2265" kind = "GetException"></role>
         <role name = "SetException" metaref = "1702" kind = "SetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "3304" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3242" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2376" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2379" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "BenchmarkAnalysis" metaref = "4006" >
            <regnode name = "namePosition" value ="4"></regnode>
         <role name = "Average" metaref = "4007" kind = "Average"></role>
         <role name = "Event" metaref = "4105" kind = "Event"></role>
         <role name = "EventRef" metaref = "4009" kind = "EventRef"></role>
         <role name = "FactoryOperation" metaref = "4106" kind = "FactoryOperation"></role>
         <role name = "Jitter" metaref = "4011" kind = "Jitter"></role>
         <role name = "Latency" metaref = "4012" kind = "Latency"></role>
         <role name = "LookupOperation" metaref = "4107" kind = "LookupOperation"></role>
         <role name = "Maximum" metaref = "4014" kind = "Maximum"></role>
         <role name = "MetricConnection" metaref = "4015" kind = "MetricConnection"></role>
         <role name = "Minimum" metaref = "4016" kind = "Minimum"></role>
         <role name = "OnewayOperation" metaref = "4108" kind = "OnewayOperation"></role>
         <role name = "OperationRef" metaref = "4018" kind = "OperationRef"></role>
         <role name = "Throughput" metaref = "4019" kind = "Throughput"></role>
         <role name = "TimeProbe" metaref = "4076" kind = "TimeProbe"></role>
         <role name = "TimerConnection" metaref = "4020" kind = "TimerConnection"></role>
         <role name = "TimerEventSinkConn" metaref = "4021" kind = "TimerEventSinkConn"></role>
         <role name = "TwowayOperation" metaref = "4109" kind = "TwowayOperation"></role>
         <aspect name = "ComponentMetrics" metaref = "4052" >
            <part metaref = "4054" role = "EventRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "4056" role = "Latency" primary = "yes" linked = "no"></part>
            <part metaref = "4058" role = "MetricConnection" primary = "yes" linked = "no"></part>
            <part metaref = "4060" role = "OperationRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "4061" role = "Throughput" primary = "yes" linked = "no"></part>
            <part metaref = "4077" role = "TimeProbe" primary = "yes" linked = "no"></part>
            <part metaref = "4062" role = "TimerConnection" primary = "yes" linked = "no"></part>
            <part metaref = "4063" role = "TimerEventSinkConn" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Bridge" metaref = "3677" attributes = "label" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Bridge"></regnode>
         <constraint name="ValidBridge2InterconnectdstCardinality16" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", Bridge2Interconnect ) -> size in
                     (dstCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Bridge as "dst" over Bridge2Interconnect, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidInterconnect2BridgesrcCardinality37" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", Interconnect2Bridge ) -> size in
                     (srcCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Bridge as "src" over Interconnect2Bridge, has to match 1..*.</dispname>
         </constraint>
         <role name = "Resource" metaref = "3678" kind = "Resource"></role>
         <aspect name = "Target" metaref = "3578" attributes = "label" >
            <part metaref = "3679" role = "Resource" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Capability" metaref = "2830" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Capability.bmp"></regnode>
         <constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.resourceType <> ""]]>
            <dispname>ResourceType should contain atleast one element</dispname>
         </constraint>
         <constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let sp = self.modelParts(SatisfierProperty) in
    sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
            <dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
         </constraint>
         <role name = "SatisfierProperty" metaref = "2831" kind = "SatisfierProperty"></role>
         <aspect name = "Packaging" metaref = "3858" attributes = "resourceType" >
            <part metaref = "3859" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Component" metaref = "1822" attributes = "VersionTag SpecifyIdTag label UUID" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="component.bmp"></regnode>
            <regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
            <regnode name = "isTypeShown" value ="true"></regnode>
         <constraint name="ComponentInstanceOnly" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[let parent = self.parent() in
if ( parent.isNull() ) then
   true
else
    parent.kindName = "ComponentAssembly" implies self.isInstance()
endif]]>
            <dispname>Only Component Instances can be created inside a Component Assembly (Press Alt)</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
            <dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
            <dispname>A component that has a base component may not also support interfaces</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Attribute" metaref = "1420" kind = "Attribute"></role>
         <role name = "InEventPort" metaref = "3243" kind = "InEventPort"></role>
         <role name = "Inherits" metaref = "1422" kind = "Inherits"></role>
         <role name = "OutEventPort" metaref = "3244" kind = "OutEventPort"></role>
         <role name = "ProvidedRequestPort" metaref = "3245" kind = "ProvidedRequestPort"></role>
         <role name = "ReadonlyAttribute" metaref = "1423" kind = "ReadonlyAttribute"></role>
         <role name = "RequiredRequestPort" metaref = "3246" kind = "RequiredRequestPort"></role>
         <role name = "Supports" metaref = "1424" kind = "Supports"></role>
         <aspect name = "InterfaceDefinition" metaref = "3436" attributes = "VersionTag SpecifyIdTag label UUID" >
            <part metaref = "3248" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3249" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3250" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3251" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3252" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3253" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3254" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3255" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentAssembly" metaref = "3581" attributes = "label UUID" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Assembly.bmp"></regnode>
         <constraint name="UniqueInstanceName" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let components = self.modelParts(Component) in
        components->isUnique (i : Component | i.name.trim())]]>
            <dispname>Instances of a Component Assembly should have unique names</dispname>
         </constraint>
         <constraint name="ValidComponentAssemblyPartCardinality90" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Component" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentAssembly, has to match 1..*.</dispname>
         </constraint>
         <role name = "AssemblyConfigProperty" metaref = "3582" kind = "AssemblyConfigProperty"></role>
         <role name = "AssemblyDeployRequirement" metaref = "3583" kind = "AssemblyDeployRequirement"></role>
         <role name = "AssemblyselectRequirement" metaref = "3201" kind = "AssemblyselectRequirement"></role>
         <role name = "Component" metaref = "4110" kind = "Component"></role>
         <role name = "ComponentPackage" metaref = "3584" kind = "ComponentPackage"></role>
         <role name = "ComponentPackageReference" metaref = "3585" kind = "ComponentPackageReference"></role>
         <role name = "Property" metaref = "2843" kind = "Property"></role>
         <role name = "PublishConnector" metaref = "3586" kind = "PublishConnector"></role>
         <role name = "Requirement" metaref = "2845" kind = "Requirement"></role>
         <role name = "deliverTo" metaref = "3205" kind = "deliverTo"></role>
         <role name = "emit" metaref = "3943" kind = "emit"></role>
         <role name = "invoke" metaref = "3944" kind = "invoke"></role>
         <role name = "publish" metaref = "3587" kind = "publish"></role>
         <aspect name = "Packaging" metaref = "3860" attributes = "label UUID" >
            <part metaref = "3861" role = "AssemblyConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3862" role = "AssemblyDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3863" role = "AssemblyselectRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "4111" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3865" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3866" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "3867" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "3868" role = "PublishConnector" primary = "yes" linked = "no"></part>
            <part metaref = "3869" role = "Requirement" primary = "yes" linked = "no"></part>
            <part metaref = "3870" role = "deliverTo" primary = "yes" linked = "no"></part>
            <part metaref = "3871" role = "emit" primary = "yes" linked = "no"></part>
            <part metaref = "3872" role = "invoke" primary = "yes" linked = "no"></part>
            <part metaref = "3873" role = "publish" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentContainer" metaref = "2862" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentContainerPartCardinality91" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentContainer, has to match 0..1.</dispname>
         </constraint>
         <role name = "ComponentConfigProperty" metaref = "2863" kind = "ComponentConfigProperty"></role>
         <role name = "ComponentInfoProperty" metaref = "2864" kind = "ComponentInfoProperty"></role>
         <role name = "ComponentProperty" metaref = "2865" kind = "ComponentProperty"></role>
         <role name = "ComponentPropertyDescription" metaref = "2866" kind = "ComponentPropertyDescription"></role>
         <role name = "ComponentType" metaref = "2867" kind = "ComponentType"></role>
         <role name = "Property" metaref = "2868" kind = "Property"></role>
         <aspect name = "Packaging" metaref = "3874" >
            <part metaref = "3875" role = "ComponentConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3876" role = "ComponentInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3877" role = "ComponentProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3878" role = "ComponentPropertyDescription" primary = "yes" linked = "no"></part>
            <part metaref = "3879" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3880" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentFactory" metaref = "3256" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="componentfactory.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
            <dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality92" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidManagesComponentdstCardinality46" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", ManagesComponent ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentFactory as "dst" over ManagesComponent, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "2940" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3132" kind = "Alias"></role>
         <role name = "Attribute" metaref = "2708" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3133" kind = "Collection"></role>
         <role name = "Constant" metaref = "3136" kind = "Constant"></role>
         <role name = "Enum" metaref = "2942" kind = "Enum"></role>
         <role name = "Exception" metaref = "2943" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2712" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2713" kind = "Inherits"></role>
         <role name = "LookupKey" metaref = "2714" kind = "LookupKey"></role>
         <role name = "LookupOperation" metaref = "2715" kind = "LookupOperation"></role>
         <role name = "OnewayOperation" metaref = "2717" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "2718" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2720" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2944" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2722" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3314" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2945" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3140" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2727" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3141" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3144" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2947" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2948" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2731" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2732" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2733" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2734" role = "LookupOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2736" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2737" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2739" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2949" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2741" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentImplementationContainer" metaref = "3591" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" priority = "2">
            <![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
(self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
            <dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
         </constraint>
         <constraint name="ValidComponentImplementationContainerPartCardinality93" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentImplementation" ) -> size + self.parts( "MonolithicImplementation" ) -> size + self.parts( "ComponentAssembly" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 1.</dispname>
         </constraint>
         <role name = "Capability" metaref = "2879" kind = "Capability"></role>
         <role name = "ComponentAssembly" metaref = "3592" kind = "ComponentAssembly"></role>
         <role name = "ComponentType" metaref = "2881" kind = "ComponentType"></role>
         <role name = "ConfigProperty" metaref = "3593" kind = "ConfigProperty"></role>
         <role name = "ImplementationArtifactReference" metaref = "3793" kind = "ImplementationArtifactReference"></role>
         <role name = "ImplementationCapability" metaref = "3594" kind = "ImplementationCapability"></role>
         <role name = "ImplementationDependency" metaref = "2884" kind = "ImplementationDependency"></role>
         <role name = "ImplementationDependsOn" metaref = "3231" kind = "ImplementationDependsOn"></role>
         <role name = "ImplementationRequirement" metaref = "2886" kind = "ImplementationRequirement"></role>
         <role name = "Implements" metaref = "3232" kind = "Implements"></role>
         <role name = "InfoProperty" metaref = "3595" kind = "InfoProperty"></role>
         <role name = "MonolithDeployRequirement" metaref = "3596" kind = "MonolithDeployRequirement"></role>
         <role name = "MonolithExecParameter" metaref = "3597" kind = "MonolithExecParameter"></role>
         <role name = "MonolithicImplementation" metaref = "3598" kind = "MonolithicImplementation"></role>
         <role name = "MonolithprimaryArtifact" metaref = "3599" kind = "MonolithprimaryArtifact"></role>
         <role name = "Property" metaref = "2893" kind = "Property"></role>
         <aspect name = "Packaging" metaref = "3881" >
            <part metaref = "3882" role = "Capability" primary = "yes" linked = "no"></part>
            <part metaref = "3883" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
            <part metaref = "3884" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3885" role = "ConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3886" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
            <part metaref = "3887" role = "ImplementationCapability" primary = "yes" linked = "no"></part>
            <part metaref = "3888" role = "ImplementationDependency" primary = "yes" linked = "no"></part>
            <part metaref = "3889" role = "ImplementationDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "3890" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3891" role = "Implements" primary = "yes" linked = "no"></part>
            <part metaref = "3892" role = "InfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3893" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3894" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3895" role = "MonolithicImplementation" primary = "yes" linked = "no"></part>
            <part metaref = "3896" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
            <part metaref = "3897" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentPropertyDescription" metaref = "2910" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
         <constraint name="ValidComponentPropertyDescriptionPartCardinality94" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentPropertyDescription, has to match 1.</dispname>
         </constraint>
         <role name = "DataType" metaref = "3770" kind = "DataType"></role>
         <aspect name = "Packaging" metaref = "3898" >
            <part metaref = "3899" role = "DataType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "DeploymentPlan" metaref = "3603" attributes = "label" >
            <regnode name = "namePosition" value ="4"></regnode>
         <role name = "CollocationGroup" metaref = "3712" kind = "CollocationGroup"></role>
         <role name = "ComponentType" metaref = "3604" kind = "ComponentType"></role>
         <role name = "InstanceMapping" metaref = "3605" kind = "InstanceMapping"></role>
         <role name = "NodeReference" metaref = "3681" kind = "NodeReference"></role>
         <aspect name = "NodeMapping" metaref = "3607" attributes = "label" >
            <part metaref = "3713" role = "CollocationGroup" primary = "yes" linked = "no"></part>
            <part metaref = "3608" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3609" role = "InstanceMapping" primary = "yes" linked = "no"></part>
            <part metaref = "3683" role = "NodeReference" primary = "yes" kindaspect = "Target" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Domain" metaref = "3611" attributes = "label UUID" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Domain"></regnode>
         <role name = "Bridge" metaref = "3684" kind = "Bridge"></role>
         <role name = "Bridge2Interconnect" metaref = "3685" kind = "Bridge2Interconnect"></role>
         <role name = "Interconnect" metaref = "3686" kind = "Interconnect"></role>
         <role name = "Interconnect2Bridge" metaref = "3687" kind = "Interconnect2Bridge"></role>
         <role name = "Interconnect2Node" metaref = "3688" kind = "Interconnect2Node"></role>
         <role name = "Node" metaref = "3689" kind = "Node"></role>
         <role name = "Node2Interconnect" metaref = "3690" kind = "Node2Interconnect"></role>
         <role name = "Property" metaref = "3616" kind = "Property"></role>
         <role name = "SharedResource" metaref = "3691" kind = "SharedResource"></role>
         <role name = "Shares" metaref = "3692" kind = "Shares"></role>
         <aspect name = "Target" metaref = "3618" attributes = "label UUID" >
            <part metaref = "3693" role = "Bridge" primary = "yes" linked = "no"></part>
            <part metaref = "3694" role = "Bridge2Interconnect" primary = "yes" linked = "no"></part>
            <part metaref = "3695" role = "Interconnect" primary = "yes" linked = "no"></part>
            <part metaref = "3696" role = "Interconnect2Bridge" primary = "yes" linked = "no"></part>
            <part metaref = "3697" role = "Interconnect2Node" primary = "yes" linked = "no"></part>
            <part metaref = "3698" role = "Node" primary = "yes" linked = "no"></part>
            <part metaref = "3699" role = "Node2Interconnect" primary = "yes" linked = "no"></part>
            <part metaref = "3623" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "3700" role = "SharedResource" primary = "yes" linked = "no"></part>
            <part metaref = "3701" role = "Shares" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Enum" metaref = "2950" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enum.bmp"></regnode>
         <constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
            <dispname>An enum's member names must be unique</dispname>
         </constraint>
         <constraint name="ValidEnumPartCardinality95" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Enum, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "EnumValue" metaref = "2951" kind = "EnumValue"></role>
         <aspect name = "InterfaceDefinition" metaref = "3318" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2953" role = "EnumValue" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Event" metaref = "2954" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="event.bmp"></regnode>
         <constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2955" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "2958" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3148" kind = "Alias"></role>
         <role name = "Attribute" metaref = "2960" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3149" kind = "Collection"></role>
         <role name = "Constant" metaref = "3152" kind = "Constant"></role>
         <role name = "Enum" metaref = "2962" kind = "Enum"></role>
         <role name = "Exception" metaref = "2963" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2964" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2965" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "2966" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3154" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "2968" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "2969" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "2970" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2971" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2972" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2973" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3330" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "2975" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3157" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2977" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3158" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3161" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2979" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2980" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2981" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2982" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2983" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3163" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2985" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2986" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "2987" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2988" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2989" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2990" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Exception" metaref = "2991" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="exception.bmp"></regnode>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3166" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3343" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3167" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FactoryOperation" metaref = "1927" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="factory.bmp"></regnode>
         <constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
            <dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
         </constraint>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2324" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3168" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3346" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2471" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3169" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "File" metaref = "2326" attributes = "PrefixTag" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" priority = "1">
            <![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
            <dispname>A file cannot be included more than once</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "2994" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3170" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3171" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3172" kind = "Collection"></role>
         <role name = "Component" metaref = "1939" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3265" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3266" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3114" kind = "Constant"></role>
         <role name = "Enum" metaref = "2997" kind = "Enum"></role>
         <role name = "Event" metaref = "2999" kind = "Event"></role>
         <role name = "Exception" metaref = "3000" kind = "Exception"></role>
         <role name = "FileRef" metaref = "2628" kind = "FileRef"></role>
         <role name = "ManagesComponent" metaref = "3267" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3001" kind = "Object"></role>
         <role name = "Package" metaref = "2330" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3003" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3004" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "3468" attributes = "PrefixTag" >
            <part metaref = "3005" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3174" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3175" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3176" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3268" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3269" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3270" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3115" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3008" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3010" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3011" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2629" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3271" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3012" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2487" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3014" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3015" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ImplementationRequirement" metaref = "2957" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
         <role name = "Property" metaref = "3625" kind = "Property"></role>
         <aspect name = "Packaging" metaref = "3902" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
            <part metaref = "3903" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Interconnect" metaref = "3702" attributes = "label" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Interconnect"></regnode>
         <constraint name="ValidInterconnect2NodedstCardinality40" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", Interconnect2Node ) -> size in
                     (dstCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Interconnect as "dst" over Interconnect2Node, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidNode2InterconnectsrcCardinality55" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", Node2Interconnect ) -> size in
                     (srcCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Interconnect as "src" over Node2Interconnect, has to match 1..*.</dispname>
         </constraint>
         <role name = "Resource" metaref = "3703" kind = "Resource"></role>
         <aspect name = "Target" metaref = "3631" attributes = "label" >
            <part metaref = "3704" role = "Resource" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Latency" metaref = "4033" attributes = "fileName warmup iterations" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Latency.bmp"></regnode>
         <constraint name="ValidMetricConnectionsrcCardinality47" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MetricConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over MetricConnection, has to match 1.</dispname>
         </constraint>
         <role name = "Average" metaref = "4034" kind = "Average"></role>
         <role name = "Jitter" metaref = "4035" kind = "Jitter"></role>
         <role name = "Maximum" metaref = "4036" kind = "Maximum"></role>
         <role name = "Minimum" metaref = "4037" kind = "Minimum"></role>
         <aspect name = "DataAnalysis" metaref = "4078" attributes = "fileName warmup iterations" >
            <part metaref = "4079" role = "Average" primary = "yes" linked = "no"></part>
            <part metaref = "4080" role = "Jitter" primary = "yes" linked = "no"></part>
            <part metaref = "4081" role = "Maximum" primary = "yes" linked = "no"></part>
            <part metaref = "4082" role = "Minimum" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "LookupOperation" metaref = "1980" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="lookup.bmp"></regnode>
         <constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
            <dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
         </constraint>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2339" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3178" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3360" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2524" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3179" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Node" metaref = "3705" attributes = "label" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Node"></regnode>
         <role name = "Resource" metaref = "3706" kind = "Resource"></role>
         <aspect name = "Target" metaref = "3639" attributes = "label" >
            <part metaref = "3707" role = "Resource" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Object" metaref = "3016" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="object.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[if (self.local = true) then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
endif]]>
            <dispname>A non-local Object cannot inherit from a local one</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not local or not abstract]]>
            <dispname>An ObjectDef cannot be both local and abstract</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3017" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <attrdef name="local" metaref = "3018" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3019" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3180" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3021" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3181" kind = "Collection"></role>
         <role name = "Constant" metaref = "3184" kind = "Constant"></role>
         <role name = "Enum" metaref = "3023" kind = "Enum"></role>
         <role name = "Exception" metaref = "3024" kind = "Exception"></role>
         <role name = "Inherits" metaref = "3025" kind = "Inherits"></role>
         <role name = "OnewayOperation" metaref = "3026" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "3027" kind = "ReadonlyAttribute"></role>
         <role name = "SwitchedAggregate" metaref = "3028" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3029" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3369" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <part metaref = "3031" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3188" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3033" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3189" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3192" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3035" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3036" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3037" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3038" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3039" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3040" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3041" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OnewayOperation" metaref = "1592" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="oneway.bmp"></regnode>
         <constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
            <dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "InParameter" metaref = "3196" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3381" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3197" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Package" metaref = "2341" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="package.bmp"></regnode>
         <constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.parts ()->size > 0]]>
            <dispname>A package cannot be empty</dispname>
         </constraint>
         <constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ()->forAll (
    x, y : gme::FCO | x.name == y.name implies (x == y or
                                                                                        (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
                                                                                        (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
  )
  ]]>
            <dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "3042" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3198" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3199" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3200" kind = "Collection"></role>
         <role name = "Component" metaref = "2001" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3276" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3277" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3116" kind = "Constant"></role>
         <role name = "Enum" metaref = "3045" kind = "Enum"></role>
         <role name = "Event" metaref = "3047" kind = "Event"></role>
         <role name = "Exception" metaref = "3048" kind = "Exception"></role>
         <role name = "ManagesComponent" metaref = "3278" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3049" kind = "Object"></role>
         <role name = "Package" metaref = "2344" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3051" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3052" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "3389" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <part metaref = "3053" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3202" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3203" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3204" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3279" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3280" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3281" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3117" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3056" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3058" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3059" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3282" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3060" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2550" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3062" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3063" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageConfigurationContainer" metaref = "2974" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="PackageConfXor" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1 
  xor self.referenceParts(ComponentPackageReference)->size = 1 
  xor self.atomParts(ComponentPackage)->size = 1]]>
            <dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality100" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality96" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality97" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality98" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality99" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <role name = "ComponentPackage" metaref = "4112" kind = "ComponentPackage"></role>
         <role name = "ComponentPackageReference" metaref = "3643" kind = "ComponentPackageReference"></role>
         <role name = "PackageConfBasePackage" metaref = "4113" kind = "PackageConfBasePackage"></role>
         <role name = "PackageConfConfigProperty" metaref = "4114" kind = "PackageConfConfigProperty"></role>
         <role name = "PackageConfReference" metaref = "3644" kind = "PackageConfReference"></role>
         <role name = "PackageConfSelectRequirement" metaref = "4115" kind = "PackageConfSelectRequirement"></role>
         <role name = "PackageConfSpecializedConfig" metaref = "3645" kind = "PackageConfSpecializedConfig"></role>
         <role name = "PackageConfiguration" metaref = "3291" kind = "PackageConfiguration"></role>
         <role name = "Property" metaref = "3646" kind = "Property"></role>
         <role name = "Requirement" metaref = "3647" kind = "Requirement"></role>
         <aspect name = "Packaging" metaref = "3909" >
            <part metaref = "3910" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3911" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "3912" role = "PackageConfBasePackage" primary = "yes" linked = "no"></part>
            <part metaref = "3913" role = "PackageConfConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3914" role = "PackageConfReference" primary = "yes" linked = "no"></part>
            <part metaref = "3915" role = "PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3916" role = "PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
            <part metaref = "3917" role = "PackageConfiguration" primary = "yes" linked = "no"></part>
            <part metaref = "3918" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "3919" role = "Requirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageContainer" metaref = "4116" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPackageContainerPartCardinality101" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageInterface" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageContainerPartCardinality102" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
         </constraint>
         <role name = "ComponentImplementationReference" metaref = "4117" kind = "ComponentImplementationReference"></role>
         <role name = "ComponentPackage" metaref = "4118" kind = "ComponentPackage"></role>
         <role name = "ComponentType" metaref = "3648" kind = "ComponentType"></role>
         <role name = "Implementation" metaref = "4119" kind = "Implementation"></role>
         <role name = "PackageConfigProperty" metaref = "4120" kind = "PackageConfigProperty"></role>
         <role name = "PackageInfoProperty" metaref = "4121" kind = "PackageInfoProperty"></role>
         <role name = "PackageInterface" metaref = "4122" kind = "PackageInterface"></role>
         <role name = "Property" metaref = "3002" kind = "Property"></role>
         <aspect name = "Packaging" metaref = "3920" >
            <part metaref = "3921" role = "ComponentImplementationReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
            <part metaref = "3922" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3923" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3924" role = "Implementation" primary = "yes" linked = "no"></part>
            <part metaref = "3925" role = "PackageConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3926" role = "PackageInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3927" role = "PackageInterface" primary = "yes" linked = "no"></part>
            <part metaref = "3928" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Property" metaref = "3650" attributes = "DataValue" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Property.bmp"></regnode>
         <constraint name="ValidPropertyPartCardinality103" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Property, has to match 1.</dispname>
         </constraint>
         <role name = "DataType" metaref = "3772" kind = "DataType"></role>
         <aspect name = "Packaging" metaref = "3929" attributes = "DataValue" >
            <part metaref = "3930" role = "DataType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReadonlyAttribute" metaref = "1626" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality104" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3283" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2267" kind = "GetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "3398" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3284" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2564" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Requirement" metaref = "3651" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Requirement.bmp"></regnode>
         <role name = "Property" metaref = "3020" kind = "Property"></role>
         <aspect name = "Packaging" metaref = "3931" attributes = "resourceType" >
            <part metaref = "3932" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Resource" metaref = "3708" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Resource"></regnode>
         <role name = "SatisfierProperty" metaref = "3653" kind = "SatisfierProperty"></role>
         <aspect name = "Target" metaref = "3655" attributes = "resourceType" >
            <part metaref = "3656" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SatisfierProperty" metaref = "3657" attributes = "DataValue SatisfierPropertyKind" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
         <constraint name="ValidSatisfierPropertyPartCardinality105" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SatisfierProperty, has to match 1.</dispname>
         </constraint>
         <role name = "DataType" metaref = "3774" kind = "DataType"></role>
         <aspect name = "Packaging" metaref = "3933" attributes = "DataValue SatisfierPropertyKind" >
            <part metaref = "3934" role = "DataType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SharedResource" metaref = "3709" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="SharedResource"></regnode>
         <constraint name="ValidSharessrcCardinality73" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", Shares ) -> size in
                     (srcCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to SharedResource as "src" over Shares, has to match 1..*.</dispname>
         </constraint>
         <role name = "SatisfierProperty" metaref = "3660" kind = "SatisfierProperty"></role>
         <aspect name = "Target" metaref = "3661" attributes = "resourceType" >
            <part metaref = "3663" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SwitchedAggregate" metaref = "3064" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
         <constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts (Member)->forAll (
    x : gme::FCO | let labels = x.connectedFCOs ()
                                in
    labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
)]]>
            <dispname>A default member cannot have multiple labels</dispname>
         </constraint>
         <constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[referenceParts (Discriminator) -> forAll (
    x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
                                     x.refersTo ().isTypeOf (Boolean) or
                                     x.refersTo ().isTypeOf (ShortInteger) or
                                     x.refersTo ().isTypeOf (LongInteger))]]>
            <dispname>Discriminator must have integer, character, boolean or enum type</dispname>
         </constraint>
         <constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
            <dispname>Labels in the same scope must be unique</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality106" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality107" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality108" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Discriminator" metaref = "3208" kind = "Discriminator"></role>
         <role name = "Label" metaref = "3066" kind = "Label"></role>
         <role name = "LabelConnection" metaref = "3067" kind = "LabelConnection"></role>
         <role name = "Member" metaref = "3209" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3404" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3210" role = "Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3071" role = "Label" primary = "yes" linked = "no"></part>
            <part metaref = "3072" role = "LabelConnection" primary = "yes" linked = "no"></part>
            <part metaref = "3211" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Throughput" metaref = "4042" attributes = "fileName warmup iterations" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Throughput.bmp"></regnode>
         <constraint name="ValidMetricConnectionsrcCardinality47" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MetricConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to MetricsBase as "src" over MetricConnection, has to match 1.</dispname>
         </constraint>
         <role name = "Average" metaref = "4043" kind = "Average"></role>
         <role name = "Jitter" metaref = "4044" kind = "Jitter"></role>
         <role name = "Maximum" metaref = "4045" kind = "Maximum"></role>
         <role name = "Minimum" metaref = "4046" kind = "Minimum"></role>
         <aspect name = "DataAnalysis" metaref = "4083" attributes = "fileName warmup iterations" >
            <part metaref = "4084" role = "Average" primary = "yes" linked = "no"></part>
            <part metaref = "4085" role = "Jitter" primary = "yes" linked = "no"></part>
            <part metaref = "4086" role = "Maximum" primary = "yes" linked = "no"></part>
            <part metaref = "4087" role = "Minimum" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TopLevelPackageContainer" metaref = "3945" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
         <constraint name="ValidTopLevelPackageContainerPartCardinality109" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidTopLevelPackageContainerPartCardinality110" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "package" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidTopLevelPackageContainerPartCardinality111" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 1.</dispname>
         </constraint>
         <role name = "PackageConfigurationReference" metaref = "3030" kind = "PackageConfigurationReference"></role>
         <role name = "TopLevelPackage" metaref = "3664" kind = "TopLevelPackage"></role>
         <role name = "package" metaref = "4123" kind = "package"></role>
         <aspect name = "Packaging" metaref = "3935" >
            <part metaref = "3936" role = "PackageConfigurationReference" primary = "yes" linked = "no"></part>
            <part metaref = "3937" role = "TopLevelPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3938" role = "package" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TwowayOperation" metaref = "2040" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="twoway.bmp"></regnode>
         <constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
            <dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
         </constraint>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidTwowayOperationPartCardinality112" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ReturnType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2348" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3212" kind = "InParameter"></role>
         <role name = "InoutParameter" metaref = "3213" kind = "InoutParameter"></role>
         <role name = "OutParameter" metaref = "3214" kind = "OutParameter"></role>
         <role name = "ReturnType" metaref = "3215" kind = "ReturnType"></role>
         <aspect name = "InterfaceDefinition" metaref = "3412" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2588" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3216" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3217" role = "InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3218" role = "OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3219" role = "ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ValueObject" metaref = "3074" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="value.bmp"></regnode>
         <constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = 
  self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[
allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
]]>
            <dispname>Local, inherited and supported operations must all have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3075" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3078" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3220" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3080" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3221" kind = "Collection"></role>
         <role name = "Constant" metaref = "3224" kind = "Constant"></role>
         <role name = "Enum" metaref = "3082" kind = "Enum"></role>
         <role name = "Exception" metaref = "3083" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "3084" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "3085" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "3086" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3226" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "3088" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "3089" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "3090" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "3091" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "3092" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3093" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3418" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "3095" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3229" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3097" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3230" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3233" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3099" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3100" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3101" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3102" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3103" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3235" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3105" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3106" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "3107" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3108" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3109" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3110" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <folder name = "ComponentAnalyses" metaref = "4051"  rootobjects = "BenchmarkAnalysis" >
      </folder>
      <folder name = "ComponentImplementations" metaref = "4124"  rootobjects = "ComponentImplementationContainer" >
      </folder>
      <folder name = "ComponentPackages" metaref = "4125"  rootobjects = "PackageContainer" >
      </folder>
      <folder name = "ComponentTypes" metaref = "3666"  rootobjects = "ComponentContainer" >
      </folder>
      <folder name = "DeploymentPlans" metaref = "3667"  rootobjects = "DeploymentPlan" >
      </folder>
      <folder name = "ImplementationArtifacts" metaref = "4126"  rootobjects = "ArtifactContainer" >
      </folder>
      <folder name = "InterfaceDefinitions" metaref = "2775"  rootobjects = "File" >
         <constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
            <![CDATA[allFileScopeDecls ()->forAll (
    x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
  )]]>
            <dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
         </constraint>
      </folder>
      <folder name = "PackageConfigurations" metaref = "3669"  rootobjects = "PackageConfigurationContainer" >
      </folder>
      <folder name = "PredefinedTypes" metaref = "3111"  rootobjects = "Boolean Byte GenericObject GenericValue GenericValueObject LongInteger RealNumber ShortInteger String TypeEncoding TypeKind" >
      </folder>
      <folder name = "Targets" metaref = "3710"  rootobjects = "Domain" >
      </folder>
      <folder name = "TopLevelPackages" metaref = "3809"  rootobjects = "TopLevelPackageContainer" >
      </folder>
   </folder>
</paradigm>
