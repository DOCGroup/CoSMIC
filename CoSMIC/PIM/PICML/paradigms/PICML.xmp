<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name ="PICML">

   <comment> Generated by the Meta2000 interpreter </comment>

   <folder name = "RootFolder" metaref = "1000" subfolders = "ComponentTypes ComponentPackages TopLevelPackageFolder ImplementationArtifacts PackageConfigurations ComponentImplementations" rootobjects = "File " >
      <constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
         <![CDATA[self.models ("File")->forAll (a : gme::Model | a.allFileScopeDecls (a)->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name))]]>
         <dispname>Declarations at global scope must have unique names</dispname>
      </constraint>
      <constraint type="function" name="inheritedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
let ancestors = self.inheritsRecursive (self) in
ancestors->iterate (ancestor; accu = Set{} | accu + ancestor.oclAsType (gme::Model).localOps ())]]>
      </constraint>
      <constraint type="function" name="inheritsRecursive">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
let closure = self.referenceParts (Inherits)->collect (x : gme::Reference | x.refersTo ().oclAsType (gme::Model))->asSet () in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (rec; accu = Set{} | accu + 
      if (rec = top) then
        Set{top}
      else
        rec.inheritsRecursive (top)
      endif)
  endif]]>
      </constraint>
      <constraint type="function" name="localOps">
         <![CDATA[method;gme::Model;;ocl::Set;
self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
      </constraint>
      <constraint type="function" name="supportedWithAncestors">
         <![CDATA[method;gme::Model;;ocl::Set;
let supported_set = self.referenceParts (Supports) in
supported_set->iterate (ref; accu = Set{} | 
  let supported = ref.refersTo ().oclAsType (gme::Model) in
  accu + supported.inheritsRecursive (supported))]]>
      </constraint>
      <constraint type="function" name="allMembers">
         <![CDATA[method;gme::Model;;ocl::Set;
self.parts ("BoundedString") + self.parts ("NamedTypeRef") +
self.parts ("FixedPoint") + self.parts ("PredefinedType") +
self.parts ("FixedSizeCollection") + self.parts ("VariableSizeCollection")]]>
      </constraint>
      <constraint type="function" name="allFileScopeDecls">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
let incl_files = self.oclAsType (gme::Model).filePartsRecursive () in
  self.oclAsType (gme::Model).allScopeDecls () +
    if (incl_files->size < 1) then
      Set{}
    else
      incl_files->iterate (file ; accu = Set{} | accu + 
        if (file = top) then
          Set{}
        else
          file.oclAsType (gme::Model).allScopeDecls ()
        endif)
    endif]]>
      </constraint>
      <constraint type="function" name="allScopeDecls">
         <![CDATA[method;gme::Model;;ocl::Set;
self.parts ("BoxedDef") + self.parts ("ExceptionDef") +
self.parts ("ConstantDef") + self.parts ("Package") +
self.parts ("AggregateDef") + self.parts ("SwitchedAggregateDef") +
self.parts ("EnumerationDef") + self.parts ("AliasDef") +
self.parts ("InterfaceDef") + self.parts ("ValueDef") +
self.parts ("EventDef") + self.parts ("ComponentDef") +
self.parts ("ComponentManager")
]]>
      </constraint>
      <constraint type="function" name="filePartsRecursive">
         <![CDATA[method;gme::Model;;ocl::Set;
let closure = self.parts ("File") in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (rec ; accu = Set{} | accu + rec.oclAsType (gme::Model).filePartsRecursive ())
  endif]]>
      </constraint>
      <attrdef name="truncatable" metaref = "3052" valuetype = "boolean" defvalue = "false">
         <dispname></dispname>
      </attrdef>
      <attrdef name="DataValue" metaref = "1854" valuetype = "string" defvalue = "">
         <dispname>value</dispname>
         <regnode name="multiLine" value = "5"></regnode>
      </attrdef>
      <attrdef name="ResourceUsageKind" metaref = "1855" valuetype = "enum" defvalue = "None">
         <dispname>resourceUsage</dispname>
         <enumitem dispname = "None" value = "None"></enumitem>
         <enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
         <enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
         <enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
         <enumitem dispname = "ResouceUsesPort" value = "ResouceUsesPort"></enumitem>
      </attrdef>
      <attrdef name="SatisfierPropertyKind" metaref = "1856" valuetype = "enum" defvalue = "Quantity">
         <dispname>kind</dispname>
         <enumitem dispname = "Quantity" value = "Quantity"></enumitem>
         <enumitem dispname = "Capacity" value = "Capacity"></enumitem>
         <enumitem dispname = "Minimum" value = "Minimum"></enumitem>
         <enumitem dispname = "Maximum" value = "Maximum"></enumitem>
         <enumitem dispname = "Selection" value = "Selection"></enumitem>
         <enumitem dispname = "Attrib" value = "Attrib"></enumitem>
      </attrdef>
      <attrdef name="UUID" metaref = "1857" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="componentPort" metaref = "1858" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="emits" metaref = "2440" valuetype = "boolean" defvalue = "false">
         <dispname></dispname>
      </attrdef>
      <attrdef name="exclusiveProvider" metaref = "1859" valuetype = "boolean" defvalue = "false">
         <dispname></dispname>
      </attrdef>
      <attrdef name="exclusiveUser" metaref = "1860" valuetype = "boolean" defvalue = "false">
         <dispname></dispname>
      </attrdef>
      <attrdef name="label" metaref = "1861" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="location" metaref = "1862" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="optional" metaref = "1863" valuetype = "boolean" defvalue = "false">
         <dispname></dispname>
      </attrdef>
      <attrdef name="requiredName" metaref = "1864" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="requiredType" metaref = "1865" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="requiredUUID" metaref = "1866" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="resourcePort" metaref = "1867" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <attrdef name="resourceType" metaref = "1868" valuetype = "string" defvalue = "">
         <dispname></dispname>
      </attrdef>
      <atom name = "PrefixTag" metaref = "3053" >
         <dispname>PrefixTag</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="prefix.bmp"></regnode>
      </atom>
      <atom name = "SpecifyIdTag" metaref = "3054" >
         <dispname>SpecifyIdTag</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="id.bmp"></regnode>
      </atom>
      <atom name = "VersionTag" metaref = "3055" >
         <dispname>VersionTag</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[name.trim ().match( "^[0-9]*.[0-9]*$" )]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
            <regnode name = "icon" value ="version.bmp"></regnode>
      </atom>
      <atom name = "PrivateFlag" metaref = "3056" >
         <dispname>PrivateFlag</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <constraint name="ValidMakeMemberPrivateDstCardinality0" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let dstCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
(dstCount <= 1)]]>
               <dispname>Multiplicity of objects, which are associated to PrivateFlag as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
            </constraint>
            <regnode name = "icon" value ="private.bmp"></regnode>
            <regnode name = "isNameEnabled" value ="false"></regnode>
      </atom>
      <atom name = "EnumValue" metaref = "3057" >
         <dispname>EnumValue</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enumvalue.bmp"></regnode>
      </atom>
      <atom name = "Label" metaref = "3058" >
         <dispname>Label</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="label.bmp"></regnode>
      </atom>
      <atom name = "BoundedString" metaref = "3059"  attributes = "bound wide">
         <dispname>BoundedString</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
            <attrdef name="bound" metaref = "3060" valuetype = "integer" defvalue = "0">
               <dispname></dispname>
            </attrdef>
            <attrdef name="wide" metaref = "3061" valuetype = "boolean" defvalue = "false">
               <dispname></dispname>
            </attrdef>
            <regnode name = "icon" value ="boundedstring.bmp"></regnode>
      </atom>
      <atom name = "FixedPoint" metaref = "3062"  attributes = "total_digits decimal_digits">
         <dispname>FixedPoint</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="DecimalDigitsNotGreater" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[total_digits >= decimal_digits]]>
            <dispname>The number of decimal digits cannot be greater than the number of total digits</dispname>
         </constraint>
         <constraint name="NonNegativeFixedPointParameters" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[decimal_digits >= 0 and total_digits >= 0]]>
            <dispname>Neither the number of decimal digits nor the number of total digits can be negative</dispname>
         </constraint>
            <attrdef name="total_digits" metaref = "3063" valuetype = "integer" defvalue = "">
               <dispname></dispname>
            </attrdef>
            <attrdef name="decimal_digits" metaref = "3064" valuetype = "integer" defvalue = "">
               <dispname></dispname>
            </attrdef>
            <regnode name = "icon" value ="fixedpoint.bmp"></regnode>
      </atom>
      <atom name = "PredefinedType" metaref = "3065"  attributes = "which_type">
         <dispname>PredefinedType</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
            <attrdef name="which_type" metaref = "3066" valuetype = "enum" defvalue = "UNSIGNED_LONG">
               <dispname></dispname>
               <enumitem dispname = "BOOLEAN" value = "BOOLEAN"></enumitem>
               <enumitem dispname = "BYTE" value = "BYTE"></enumitem>
               <enumitem dispname = "CHARACTER" value = "CHARACTER"></enumitem>
               <enumitem dispname = "WIDE_CHARACTER" value = "WIDE_CHARACTER"></enumitem>
               <enumitem dispname = "SHORT" value = "SHORT"></enumitem>
               <enumitem dispname = "UNSIGNED_SHORT" value = "UNSIGNED_SHORT"></enumitem>
               <enumitem dispname = "LONG" value = "LONG"></enumitem>
               <enumitem dispname = "UNSIGNED_LONG" value = "UNSIGNED_LONG"></enumitem>
               <enumitem dispname = "LONGLONG" value = "LONGLONG"></enumitem>
               <enumitem dispname = "UNSIGNED_LONGLONG" value = "UNSIGNED_LONGLONG"></enumitem>
               <enumitem dispname = "FLOAT" value = "FLOAT"></enumitem>
               <enumitem dispname = "DOUBLE" value = "DOUBLE"></enumitem>
               <enumitem dispname = "LONGDOUBLE" value = "LONGDOUBLE"></enumitem>
               <enumitem dispname = "STRING" value = "STRING"></enumitem>
               <enumitem dispname = "WIDE_STRING" value = "WIDE_STRING"></enumitem>
               <enumitem dispname = "GENERIC_CONTAINER" value = "GENERIC_CONTAINER"></enumitem>
               <enumitem dispname = "GENERIC_OBJECT_BY_VALUE" value = "GENERIC_OBJECT_BY_VALUE"></enumitem>
               <enumitem dispname = "GENERIC_OBJECT_REFERENCE" value = "GENERIC_OBJECT_REFERENCE"></enumitem>
               <enumitem dispname = "TYPE_ENCODING" value = "TYPE_ENCODING"></enumitem>
               <enumitem dispname = "TYPE_KIND" value = "TYPE_KIND"></enumitem>
            </attrdef>
            <regnode name = "icon" value ="predefined.bmp"></regnode>
      </atom>
      <atom name = "ImplementationDependency" metaref = "1871"  attributes = "requiredType">
         <dispname>ImplementationDependency</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
      </atom>
      <atom name = "ComponentPackage" metaref = "1872"  attributes = "label UUID">
         <dispname>ComponentPackage</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <constraint name="ValidPackageInterfaceSrcCardinality6" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let srcCount = self.attachingConnections( "src", PackageInterface ) -> size in
(srcCount = 1)]]>
               <dispname>Multiplicity of objects, which are associated to ComponentPackage as "src" over PackageInterface, has to match 1.</dispname>
            </constraint>
            <regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
      </atom>
      <atom name = "TopLevelPackage" metaref = "1870" >
         <dispname>TopLevelPackage</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <constraint name="ValidTopLevelPackageConnSrcCardinality8" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let srcCount = self.attachingConnections( "src", TopLevelPackageConn ) -> size in
(srcCount = 1)]]>
               <dispname>Multiplicity of objects, which are associated to TopLevelPackage as "src" over TopLevelPackageConn, has to match 1.</dispname>
            </constraint>
            <regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
      </atom>
      <atom name = "ImplementationArtifact" metaref = "1869"  attributes = "label UUID location">
         <dispname>ImplementationArtifact</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
      </atom>
      <atom name = "MonolithicImplementation" metaref = "1873"  attributes = "label UUID">
         <dispname>MonolithicImplementation</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
      </atom>
      <atom name = "EventConnector" metaref = "2167"  attributes = "emits">
         <dispname>EventConnector</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Connector.bmp"></regnode>
      </atom>
      <reference name = "EventRef" metaref = "3067" >
         <dispname>EventRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="eventref.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "EventDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ObjectRef" metaref = "3068" >
         <dispname>ObjectRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="objectref.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ObjectDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "GetException" metaref = "3069" >
         <dispname>GetException</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="getexception.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Inherits" metaref = "3070" >
         <dispname>Inherits</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="inherits.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ComponentDef"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "EventDef"></pointeritem>
            <pointeritem desc = "ObjectDef"></pointeritem>
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "LookupKey" metaref = "3071" >
         <dispname>LookupKey</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="lookupkey.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Manages" metaref = "3072" >
         <dispname>Manages</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="manages.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ComponentDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "SetException" metaref = "3073" >
         <dispname>SetException</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="setexception.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Supports" metaref = "3074" >
         <dispname>Supports</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="supports.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ObjectDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "EnumRef" metaref = "3075" >
         <dispname>EnumRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
            <regnode name = "icon" value ="enumref.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "EnumerationDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "NamedTypeRef" metaref = "3076" >
         <dispname>NamedTypeRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
            <regnode name = "icon" value ="namedtyperef.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "AggregateDef"></pointeritem>
            <pointeritem desc = "AliasDef"></pointeritem>
            <pointeritem desc = "BoxedDef"></pointeritem>
            <pointeritem desc = "ComponentDef"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "EnumerationDef"></pointeritem>
            <pointeritem desc = "EventDef"></pointeritem>
            <pointeritem desc = "ObjectDef"></pointeritem>
            <pointeritem desc = "SwitchedAggregateDef"></pointeritem>
            <pointeritem desc = "ValueDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ExceptionRef" metaref = "3077" >
         <dispname>ExceptionRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="exceptionref.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ExceptionDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "FileRef" metaref = "3078" >
         <dispname>FileRef</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
            <regnode name = "icon" value ="fileref.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "File"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentInterfaceReference" metaref = "2280" >
         <dispname>ComponentInterfaceReference</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <constraint name="ValidPackageInterfaceDstCardinality22" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let dstCount = self.attachingConnections( "dst", PackageInterface ) -> size in
(dstCount = 1)]]>
               <dispname>Multiplicity of objects, which are associated to ComponentInterfaceReference as "dst" over PackageInterface, has to match 1.</dispname>
            </constraint>
         <pointerspec name ="ref">
            <pointeritem desc = "ComponentDef"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentPackageReference" metaref = "1875"  attributes = "requiredType requiredUUID requiredName">
         <dispname>ComponentPackageReference</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="PackageReference.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ComponentPackage"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ImplementationArtifactReference" metaref = "2281" >
         <dispname>ImplementationArtifactReference</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ImplementationArtifact"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "PackageConfigurationReference" metaref = "2302" >
         <dispname>PackageConfigurationReference</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
            <constraint name="ValidTopLevelPackageConnDstCardinality29" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let dstCount = self.attachingConnections( "dst", TopLevelPackageConn ) -> size in
(dstCount = 1)]]>
               <dispname>Multiplicity of objects, which are associated to PackageConfigurationReference as "dst" over TopLevelPackageConn, has to match 1.</dispname>
            </constraint>
            <regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "PackageConfiguration"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentImplementationReference" metaref = "2282" >
         <dispname>ComponentImplementationReference</dispname>
            <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "rName" value ="ref"></regnode>
         <regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
            <constraint name="ValidPackageImplementationsDstCardinality30" eventmask = "0x0" depth = "0" priority = "2">
               <![CDATA[let dstCount = self.attachingConnections( "dst", PackageImplementations ) -> size in
(dstCount >= 1)]]>
               <dispname>Multiplicity of objects, which are associated to ComponentImplementationReference as "dst" over PackageImplementations, has to match 1..*.</dispname>
            </constraint>
            <regnode name = "icon" value ="ImplementationReference.bmp"></regnode>
         <pointerspec name ="ref">
            <pointeritem desc = "ComponentAssembly"></pointeritem>
            <pointeritem desc = "MonolithicImplementation"></pointeritem>
         </pointerspec>
      </reference>
      <connection name = "MakeMemberPrivate" metaref = "3079" >
         <dispname>MakeMemberPrivate</dispname>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "AggregateDef BoundedString"></pointeritem>
               <pointeritem desc = "AggregateDef FixedPoint"></pointeritem>
               <pointeritem desc = "AggregateDef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "AggregateDef NamedTypeRef"></pointeritem>
               <pointeritem desc = "AggregateDef PredefinedType"></pointeritem>
               <pointeritem desc = "AggregateDef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "AliasDef BoundedString"></pointeritem>
               <pointeritem desc = "AliasDef FixedPoint"></pointeritem>
               <pointeritem desc = "AliasDef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "AliasDef NamedTypeRef"></pointeritem>
               <pointeritem desc = "AliasDef PredefinedType"></pointeritem>
               <pointeritem desc = "AliasDef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "Attribute BoundedString"></pointeritem>
               <pointeritem desc = "Attribute FixedPoint"></pointeritem>
               <pointeritem desc = "Attribute FixedSizeCollection"></pointeritem>
               <pointeritem desc = "Attribute NamedTypeRef"></pointeritem>
               <pointeritem desc = "Attribute PredefinedType"></pointeritem>
               <pointeritem desc = "Attribute VariableSizeCollection"></pointeritem>
               <pointeritem desc = "BoundedString"></pointeritem>
               <pointeritem desc = "ConstantDef FixedPoint"></pointeritem>
               <pointeritem desc = "ConstantDef BoundedString"></pointeritem>
               <pointeritem desc = "ConstantDef PredefinedType"></pointeritem>
               <pointeritem desc = "ExceptionDef BoundedString"></pointeritem>
               <pointeritem desc = "ExceptionDef FixedPoint"></pointeritem>
               <pointeritem desc = "ExceptionDef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "ExceptionDef NamedTypeRef"></pointeritem>
               <pointeritem desc = "ExceptionDef PredefinedType"></pointeritem>
               <pointeritem desc = "ExceptionDef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection BoundedString"></pointeritem>
               <pointeritem desc = "FixedSizeCollection FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection FixedSizeCollection"></pointeritem>
               <pointeritem desc = "FixedSizeCollection NamedTypeRef"></pointeritem>
               <pointeritem desc = "FixedSizeCollection PredefinedType"></pointeritem>
               <pointeritem desc = "FixedSizeCollection VariableSizeCollection"></pointeritem>
               <pointeritem desc = "FixedSizeCollection"></pointeritem>
               <pointeritem desc = "Inherits BoundedString"></pointeritem>
               <pointeritem desc = "Inherits FixedPoint"></pointeritem>
               <pointeritem desc = "Inherits FixedSizeCollection"></pointeritem>
               <pointeritem desc = "Inherits NamedTypeRef"></pointeritem>
               <pointeritem desc = "Inherits PredefinedType"></pointeritem>
               <pointeritem desc = "Inherits VariableSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef BoundedString"></pointeritem>
               <pointeritem desc = "NamedTypeRef FixedPoint"></pointeritem>
               <pointeritem desc = "NamedTypeRef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef NamedTypeRef"></pointeritem>
               <pointeritem desc = "NamedTypeRef PredefinedType"></pointeritem>
               <pointeritem desc = "NamedTypeRef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef"></pointeritem>
               <pointeritem desc = "PredefinedType"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute BoundedString"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute FixedPoint"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute FixedSizeCollection"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute NamedTypeRef"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute PredefinedType"></pointeritem>
               <pointeritem desc = "ReadonlyAttribute VariableSizeCollection"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef BoundedString"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef FixedPoint"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef NamedTypeRef"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef PredefinedType"></pointeritem>
               <pointeritem desc = "SwitchedAggregateDef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "VariableSizeCollection BoundedString"></pointeritem>
               <pointeritem desc = "VariableSizeCollection FixedPoint"></pointeritem>
               <pointeritem desc = "VariableSizeCollection FixedSizeCollection"></pointeritem>
               <pointeritem desc = "VariableSizeCollection NamedTypeRef"></pointeritem>
               <pointeritem desc = "VariableSizeCollection PredefinedType"></pointeritem>
               <pointeritem desc = "VariableSizeCollection VariableSizeCollection"></pointeritem>
               <pointeritem desc = "VariableSizeCollection"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Inherits PrivateFlag"></pointeritem>
               <pointeritem desc = "NamedTypeRef PrivateFlag"></pointeritem>
               <pointeritem desc = "PrivateFlag"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "LabelConnection" metaref = "3080" >
         <dispname>LabelConnection</dispname>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "BoundedString"></pointeritem>
               <pointeritem desc = "Discriminator PredefinedType"></pointeritem>
               <pointeritem desc = "FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection BoundedString"></pointeritem>
               <pointeritem desc = "FixedSizeCollection FixedPoint"></pointeritem>
               <pointeritem desc = "FixedSizeCollection FixedSizeCollection"></pointeritem>
               <pointeritem desc = "FixedSizeCollection NamedTypeRef"></pointeritem>
               <pointeritem desc = "FixedSizeCollection PredefinedType"></pointeritem>
               <pointeritem desc = "FixedSizeCollection VariableSizeCollection"></pointeritem>
               <pointeritem desc = "FixedSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef BoundedString"></pointeritem>
               <pointeritem desc = "NamedTypeRef FixedPoint"></pointeritem>
               <pointeritem desc = "NamedTypeRef FixedSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef NamedTypeRef"></pointeritem>
               <pointeritem desc = "NamedTypeRef PredefinedType"></pointeritem>
               <pointeritem desc = "NamedTypeRef VariableSizeCollection"></pointeritem>
               <pointeritem desc = "NamedTypeRef"></pointeritem>
               <pointeritem desc = "PredefinedType"></pointeritem>
               <pointeritem desc = "VariableSizeCollection BoundedString"></pointeritem>
               <pointeritem desc = "VariableSizeCollection FixedPoint"></pointeritem>
               <pointeritem desc = "VariableSizeCollection FixedSizeCollection"></pointeritem>
               <pointeritem desc = "VariableSizeCollection NamedTypeRef"></pointeritem>
               <pointeritem desc = "VariableSizeCollection PredefinedType"></pointeritem>
               <pointeritem desc = "VariableSizeCollection VariableSizeCollection"></pointeritem>
               <pointeritem desc = "VariableSizeCollection"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Label"></pointeritem>
               <pointeritem desc = "NamedTypeRef Label"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentConfigProperty" metaref = "1891" >
         <dispname>ComponentConfigProperty</dispname>
         <regnode name = "labelFormatStr" value ="configProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentInfoProperty" metaref = "1892" >
         <dispname>ComponentInfoProperty</dispname>
         <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentProperty" metaref = "1893" >
         <dispname>ComponentProperty</dispname>
         <regnode name = "labelFormatStr" value ="property"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPropertyDescription"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfigProperty" metaref = "1882" >
         <dispname>PackageConfigProperty</dispname>
         <regnode name = "labelFormatStr" value ="configProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentImplementationReference ComponentPackage"></pointeritem>
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageImplementations" metaref = "1883" >
         <dispname>PackageImplementations</dispname>
         <regnode name = "labelFormatStr" value ="implementation"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentImplementationReference ComponentPackage"></pointeritem>
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInfoProperty" metaref = "1884" >
         <dispname>PackageInfoProperty</dispname>
         <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentImplementationReference ComponentPackage"></pointeritem>
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInterface" metaref = "1885" >
         <dispname>PackageInterface</dispname>
         <regnode name = "labelFormatStr" value ="realizes"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentImplementationReference ComponentPackage"></pointeritem>
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference ComponentInterfaceReference"></pointeritem>
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "TopLevelPackageConn" metaref = "1881" >
         <dispname>TopLevelPackageConn</dispname>
         <regnode name = "labelFormatStr" value ="package"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "TopLevelPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PackageConfigurationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactDependsOn" metaref = "1877" >
         <dispname>ArtifactDependsOn</dispname>
         <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationArtifactReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactDeployRequirement" metaref = "1878" >
         <dispname>ArtifactDeployRequirement</dispname>
         <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
         <regnode name = "color" value ="0xFF0000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactExecParameter" metaref = "1879" >
         <dispname>ArtifactExecParameter</dispname>
         <regnode name = "labelFormatStr" value ="execParameter"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
               <pointeritem desc = "Requirement Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactInfoProperty" metaref = "1880" >
         <dispname>ArtifactInfoProperty</dispname>
         <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
               <pointeritem desc = "Requirement Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageBaseConnection" metaref = "2303" >
         <dispname>PackageBaseConnection</dispname>
         <regnode name = "labelFormatStr" value ="basePackage"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration specializedConfig"></pointeritem>
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfigurationProperty" metaref = "1900" >
         <dispname>PackageConfigurationProperty</dispname>
         <regnode name = "labelFormatStr" value ="configProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration specializedConfig"></pointeritem>
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
               <pointeritem desc = "Requirement Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageReferenceConnection" metaref = "2304" >
         <dispname>PackageReferenceConnection</dispname>
         <regnode name = "labelFormatStr" value ="reference"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration specializedConfig"></pointeritem>
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackageReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageSelectRequirement" metaref = "1901" >
         <dispname>PackageSelectRequirement</dispname>
         <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
         <regnode name = "color" value ="0xFF0000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration specializedConfig"></pointeritem>
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ConfigProperty" metaref = "1886" >
         <dispname>ConfigProperty</dispname>
         <regnode name = "labelFormatStr" value ="configProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentAssembly Property"></pointeritem>
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationCapability" metaref = "2285" >
         <dispname>ImplementationCapability</dispname>
         <regnode name = "labelFormatStr" value ="capability"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Capability"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationDependsOn" metaref = "2283" >
         <dispname>ImplementationDependsOn</dispname>
         <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationDependency"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Implements" metaref = "2284" >
         <dispname>Implements</dispname>
         <regnode name = "labelFormatStr" value ="implements"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="arrow"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentAssembly ComponentInterfaceReference"></pointeritem>
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "InfoProperty" metaref = "1887" >
         <dispname>InfoProperty</dispname>
         <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentAssembly Property"></pointeritem>
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithDeployRequirement" metaref = "1888" >
         <dispname>MonolithDeployRequirement</dispname>
         <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
         <regnode name = "color" value ="0xFF0000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentAssembly ImplementationRequirement"></pointeritem>
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithExecParameter" metaref = "1889" >
         <dispname>MonolithExecParameter</dispname>
         <regnode name = "labelFormatStr" value ="execParameter"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentAssembly Property"></pointeritem>
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithprimaryArtifact" metaref = "1890" >
         <dispname>MonolithprimaryArtifact</dispname>
         <regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ConnectionRequirements" metaref = "2169" >
         <dispname>ConnectionRequirements</dispname>
         <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
         <regnode name = "color" value ="0xFF0000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "EventConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "InEventPortConsume" metaref = "2170" >
         <dispname>InEventPortConsume</dispname>
         <regnode name = "labelFormatStr" value ="consumes"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "EventConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentInterfaceReference InEventPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Invocation" metaref = "1896" >
         <dispname>Invocation</dispname>
         <regnode name = "labelFormatStr" value ="invokes"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference ProvidedRequestPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentInterfaceReference RequiredRequestPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "OutEventPortPublish" metaref = "2171" >
         <dispname>OutEventPortPublish</dispname>
         <regnode name = "labelFormatStr" value ="publishes"></regnode>
         <regnode name = "color" value ="0x000000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="butt"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference OutEventPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "EventConnector"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "SubComponentConfigProperty" metaref = "1898" >
         <dispname>SubComponentConfigProperty</dispname>
         <regnode name = "labelFormatStr" value ="configProperty"></regnode>
         <regnode name = "color" value ="0x0000FF"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement Property"></pointeritem>
               <pointeritem desc = "Property"></pointeritem>
               <pointeritem desc = "Requirement Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "SubComponentSelectRequirement" metaref = "1899" >
         <dispname>SubComponentSelectRequirement</dispname>
         <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
         <regnode name = "color" value ="0xFF0000"></regnode>
         <regnode name = "dstStyle" value ="butt"></regnode>
         <regnode name = "srcStyle" value ="diamond"></regnode>
         <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentInterfaceReference"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <model name = "ComponentDef" metaref = "3081"  attributes = "label UUID">
         <dispname>ComponentDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidComponentDefPartCardinality31" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentDef, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="component.bmp"></regnode>
         <role name = "Attribute" metaref = "3082" kind = "Attribute"><dispname>Attribute</dispname></role>
         <role name = "InEventPort" metaref = "3083" kind = "InEventPort"><dispname>InEventPort</dispname></role>
         <role name = "Inherits" metaref = "3084" kind = "Inherits"><dispname>Inherits</dispname></role>
         <role name = "OutEventPort" metaref = "3085" kind = "OutEventPort"><dispname>OutEventPort</dispname></role>
         <role name = "ProvidedRequestPort" metaref = "3086" kind = "ProvidedRequestPort"><dispname>ProvidedRequestPort</dispname></role>
         <role name = "ReadonlyAttribute" metaref = "3087" kind = "ReadonlyAttribute"><dispname>ReadonlyAttribute</dispname></role>
         <role name = "RequiredRequestPort" metaref = "3088" kind = "RequiredRequestPort"><dispname>RequiredRequestPort</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3089" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "Supports" metaref = "3090" kind = "Supports"><dispname>Supports</dispname></role>
         <role name = "VersionTag" metaref = "3091" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3092"  attributes = "label UUID">
            <part metaref = "3093" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3094" role = "Inherits" primary = "yes" linked = "no"></part>
            <part metaref = "3095" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3096" role = "Supports" primary = "yes" linked = "no"></part>
            <part metaref = "3097" role = "InEventPort" primary = "yes" linked = "yes"></part>
            <part metaref = "3098" role = "OutEventPort" primary = "yes" linked = "yes"></part>
            <part metaref = "3099" role = "ProvidedRequestPort" primary = "yes" linked = "yes"></part>
            <part metaref = "3100" role = "RequiredRequestPort" primary = "yes" linked = "yes"></part>
            <part metaref = "3101" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3102" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "InEventPort" metaref = "3103"  attributes = "optional exclusiveUser exclusiveProvider">
         <dispname>InEventPort</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidInEventPortPartCardinality33" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by InEventPort, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidInEventPortPartCardinality34" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EventRef" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by InEventPort, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="ineventport.bmp"></regnode>
         <role name = "EventRef" metaref = "3104" kind = "EventRef"><dispname>EventRef</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3105" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3106" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3107"  attributes = "optional exclusiveUser exclusiveProvider">
            <part metaref = "3108" role = "EventRef" primary = "yes" linked = "no"></part>
            <part metaref = "3109" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3110" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OutEventPort" metaref = "3111"  attributes = "optional exclusiveUser exclusiveProvider single_destination">
         <dispname>OutEventPort</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidOutEventPortPartCardinality36" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by OutEventPort, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidOutEventPortPartCardinality37" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EventRef" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by OutEventPort, has to match 1.</dispname>
         </constraint>
         <attrdef name="single_destination" metaref = "3112" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="outeventport.bmp"></regnode>
         <role name = "EventRef" metaref = "3113" kind = "EventRef"><dispname>EventRef</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3114" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3115" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3116"  attributes = "optional exclusiveUser exclusiveProvider single_destination">
            <part metaref = "3117" role = "EventRef" primary = "yes" linked = "no"></part>
            <part metaref = "3118" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3119" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ProvidedRequestPort" metaref = "3120"  attributes = "optional exclusiveUser exclusiveProvider">
         <dispname>ProvidedRequestPort</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidProvidedRequestPortPartCardinality39" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ProvidedRequestPort, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidProvidedRequestPortPartCardinality40" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ObjectRef" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ProvidedRequestPort, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="outrequestport.bmp"></regnode>
         <role name = "ObjectRef" metaref = "3121" kind = "ObjectRef"><dispname>ObjectRef</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3122" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3123" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3124"  attributes = "optional exclusiveUser exclusiveProvider">
            <part metaref = "3125" role = "ObjectRef" primary = "yes" linked = "no"></part>
            <part metaref = "3126" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3127" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "RequiredRequestPort" metaref = "3128"  attributes = "optional exclusiveUser exclusiveProvider multiple_connections">
         <dispname>RequiredRequestPort</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidRequiredRequestPortPartCardinality42" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by RequiredRequestPort, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidRequiredRequestPortPartCardinality43" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ObjectRef" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by RequiredRequestPort, has to match 1.</dispname>
         </constraint>
         <attrdef name="multiple_connections" metaref = "3129" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="inrequestport.bmp"></regnode>
         <role name = "ObjectRef" metaref = "3130" kind = "ObjectRef"><dispname>ObjectRef</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3131" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3132" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3133"  attributes = "optional exclusiveUser exclusiveProvider multiple_connections">
            <part metaref = "3134" role = "ObjectRef" primary = "yes" linked = "no"></part>
            <part metaref = "3135" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3136" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FactoryOperation" metaref = "3137" >
         <dispname>FactoryOperation</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidFactoryOperationPartCardinality44" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by FactoryOperation, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="factory.bmp"></regnode>
         <role name = "ExceptionRef" metaref = "3138" kind = "ExceptionRef"><dispname>ExceptionRef</dispname></role>
         <role name = "InParameter" metaref = "3139" kind = "InParameter"><dispname>InParameter</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3140" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3141" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3142" >
            <part metaref = "3143" role = "ExceptionRef" primary = "yes" linked = "no"></part>
            <part metaref = "3144" role = "InParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3145" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3146" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "InParameter" metaref = "3147" >
         <dispname>InParameter</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidInParameterPartCardinality45" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by InParameter, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="in.bmp"></regnode>
         <role name = "NamedTypeRef" metaref = "3148" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3149" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3150" >
            <part metaref = "3151" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3152" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "InoutParameter" metaref = "3153" >
         <dispname>InoutParameter</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidInoutParameterPartCardinality46" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by InoutParameter, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="inout.bmp"></regnode>
         <role name = "NamedTypeRef" metaref = "3154" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3155" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3156" >
            <part metaref = "3157" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3158" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "LookupOperation" metaref = "3159" >
         <dispname>LookupOperation</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidLookupOperationPartCardinality47" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by LookupOperation, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="lookup.bmp"></regnode>
         <role name = "ExceptionRef" metaref = "3160" kind = "ExceptionRef"><dispname>ExceptionRef</dispname></role>
         <role name = "InParameter" metaref = "3161" kind = "InParameter"><dispname>InParameter</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3162" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3163" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3164" >
            <part metaref = "3165" role = "ExceptionRef" primary = "yes" linked = "no"></part>
            <part metaref = "3166" role = "InParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3167" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3168" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OnewayOperation" metaref = "3169" >
         <dispname>OnewayOperation</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidOnewayOperationPartCardinality48" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by OnewayOperation, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="oneway.bmp"></regnode>
         <role name = "InParameter" metaref = "3170" kind = "InParameter"><dispname>InParameter</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3171" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3172" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3173" >
            <part metaref = "3174" role = "InParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3175" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3176" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OutParameter" metaref = "3177" >
         <dispname>OutParameter</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidOutParameterPartCardinality49" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by OutParameter, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="out.bmp"></regnode>
         <role name = "NamedTypeRef" metaref = "3178" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3179" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3180" >
            <part metaref = "3181" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3182" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReturnType" metaref = "3183" >
         <dispname>ReturnType</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidReturnTypePartCardinality50" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReturnType, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="return.bmp"></regnode>
         <role name = "NamedTypeRef" metaref = "3184" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3185" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3186" >
            <part metaref = "3187" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3188" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TwowayOperation" metaref = "3189" >
         <dispname>TwowayOperation</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidTwowayOperationPartCardinality51" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="twoway.bmp"></regnode>
         <role name = "ExceptionRef" metaref = "3190" kind = "ExceptionRef"><dispname>ExceptionRef</dispname></role>
         <role name = "InParameter" metaref = "3191" kind = "InParameter"><dispname>InParameter</dispname></role>
         <role name = "InoutParameter" metaref = "3192" kind = "InoutParameter"><dispname>InoutParameter</dispname></role>
         <role name = "OutParameter" metaref = "3193" kind = "OutParameter"><dispname>OutParameter</dispname></role>
         <role name = "ReturnType" metaref = "3194" kind = "ReturnType"><dispname>ReturnType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3195" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3196" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3197" >
            <part metaref = "3198" role = "ExceptionRef" primary = "yes" linked = "no"></part>
            <part metaref = "3199" role = "InParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3200" role = "InoutParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3201" role = "OutParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3202" role = "ReturnType" primary = "yes" linked = "no"></part>
            <part metaref = "3203" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3204" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Attribute" metaref = "3205" >
         <dispname>Attribute</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidAttributePartCardinality52" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Attribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidAttributePartCardinality53" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Attribute, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <regnode name = "icon" value ="attribute.bmp"></regnode>
         <role name = "BoundedString" metaref = "3206" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3207" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3208" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "GetException" metaref = "3209" kind = "GetException"><dispname>GetException</dispname></role>
         <role name = "NamedTypeRef" metaref = "3210" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3211" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SetException" metaref = "3212" kind = "SetException"><dispname>SetException</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3213" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3214" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3215" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3216" >
            <part metaref = "3217" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3218" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3219" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3220" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3221" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3222" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3223" role = "GetException" primary = "yes" linked = "no"></part>
            <part metaref = "3224" role = "SetException" primary = "yes" linked = "no"></part>
            <part metaref = "3225" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3226" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentFactory" metaref = "3227" >
         <dispname>ComponentFactory</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality54" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size + self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality55" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "Manages" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality56" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="componentfactory.bmp"></regnode>
         <role name = "AggregateDef" metaref = "3228" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3229" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "Attribute" metaref = "3230" kind = "Attribute"><dispname>Attribute</dispname></role>
         <role name = "ConstantDef" metaref = "3231" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3232" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3233" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "FactoryOperation" metaref = "3234" kind = "FactoryOperation"><dispname>FactoryOperation</dispname></role>
         <role name = "Inherits" metaref = "3235" kind = "Inherits"><dispname>Inherits</dispname></role>
         <role name = "LookupKey" metaref = "3236" kind = "LookupKey"><dispname>LookupKey</dispname></role>
         <role name = "LookupOperation" metaref = "3237" kind = "LookupOperation"><dispname>LookupOperation</dispname></role>
         <role name = "Manages" metaref = "3238" kind = "Manages"><dispname>Manages</dispname></role>
         <role name = "OnewayOperation" metaref = "3239" kind = "OnewayOperation"><dispname>OnewayOperation</dispname></role>
         <role name = "ReadonlyAttribute" metaref = "3240" kind = "ReadonlyAttribute"><dispname>ReadonlyAttribute</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3241" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "Supports" metaref = "3242" kind = "Supports"><dispname>Supports</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3243" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "TwowayOperation" metaref = "3244" kind = "TwowayOperation"><dispname>TwowayOperation</dispname></role>
         <role name = "VersionTag" metaref = "3245" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3246" >
            <part metaref = "3247" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3248" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3249" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3250" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3251" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3252" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3253" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3254" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3255" role = "Inherits" primary = "yes" linked = "no"></part>
            <part metaref = "3256" role = "LookupKey" primary = "yes" linked = "no"></part>
            <part metaref = "3257" role = "LookupOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3258" role = "Manages" primary = "yes" linked = "no"></part>
            <part metaref = "3259" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3260" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3261" role = "Supports" primary = "yes" linked = "no"></part>
            <part metaref = "3262" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3263" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3264" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "EventDef" metaref = "3265"  attributes = "custom truncatable abstract">
         <dispname>EventDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (EventDef).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract EventDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidEventDefPartCardinality57" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PrefixTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by EventDef, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidEventDefPartCardinality58" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size + self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by EventDef, has to match 0..*.</dispname>
         </constraint>
         <attrdef name="custom" metaref = "3266" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="abstract" metaref = "3267" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="event.bmp"></regnode>
         <role name = "AggregateDef" metaref = "3268" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3269" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "Attribute" metaref = "3270" kind = "Attribute"><dispname>Attribute</dispname></role>
         <role name = "BoundedString" metaref = "3271" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "ConstantDef" metaref = "3272" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3273" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3274" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "FactoryOperation" metaref = "3275" kind = "FactoryOperation"><dispname>FactoryOperation</dispname></role>
         <role name = "FixedPoint" metaref = "3276" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3277" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "Inherits" metaref = "3278" kind = "Inherits"><dispname>Inherits</dispname></role>
         <role name = "MakeMemberPrivate" metaref = "3279" kind = "MakeMemberPrivate"><dispname>MakeMemberPrivate</dispname></role>
         <role name = "NamedTypeRef" metaref = "3280" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "OnewayOperation" metaref = "3281" kind = "OnewayOperation"><dispname>OnewayOperation</dispname></role>
         <role name = "PredefinedType" metaref = "3282" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "PrefixTag" metaref = "3283" kind = "PrefixTag"><dispname>PrefixTag</dispname></role>
         <role name = "PrivateFlag" metaref = "3284" kind = "PrivateFlag"><dispname>PrivateFlag</dispname></role>
         <role name = "ReadonlyAttribute" metaref = "3285" kind = "ReadonlyAttribute"><dispname>ReadonlyAttribute</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3286" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "Supports" metaref = "3287" kind = "Supports"><dispname>Supports</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3288" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "TwowayOperation" metaref = "3289" kind = "TwowayOperation"><dispname>TwowayOperation</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3290" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3291" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3292"  attributes = "custom truncatable abstract">
            <part metaref = "3293" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3294" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3295" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3296" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3297" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3298" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3299" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3300" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3301" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3302" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3303" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3304" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3305" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3306" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3307" role = "Inherits" primary = "yes" linked = "no"></part>
            <part metaref = "3308" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3309" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3310" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "3311" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3312" role = "Supports" primary = "yes" linked = "no"></part>
            <part metaref = "3313" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3314" role = "PrefixTag" primary = "yes" linked = "no"></part>
            <part metaref = "3315" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3316" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ObjectDef" metaref = "3317"  attributes = "local abstract">
         <dispname>ObjectDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[if (self.local = true) then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (ObjectDef).local = false)
endif]]>
            <dispname>A non-local interface cannot inherit from a local one</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidObjectDefPartCardinality59" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PrefixTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ObjectDef, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidObjectDefPartCardinality60" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ObjectDef, has to match 0..*.</dispname>
         </constraint>
         <attrdef name="local" metaref = "3318" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="abstract" metaref = "3319" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="object.bmp"></regnode>
         <role name = "AggregateDef" metaref = "3320" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3321" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "Attribute" metaref = "3322" kind = "Attribute"><dispname>Attribute</dispname></role>
         <role name = "ConstantDef" metaref = "3323" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3324" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3325" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "Inherits" metaref = "3326" kind = "Inherits"><dispname>Inherits</dispname></role>
         <role name = "OnewayOperation" metaref = "3327" kind = "OnewayOperation"><dispname>OnewayOperation</dispname></role>
         <role name = "PrefixTag" metaref = "3328" kind = "PrefixTag"><dispname>PrefixTag</dispname></role>
         <role name = "ReadonlyAttribute" metaref = "3329" kind = "ReadonlyAttribute"><dispname>ReadonlyAttribute</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3330" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3331" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "TwowayOperation" metaref = "3332" kind = "TwowayOperation"><dispname>TwowayOperation</dispname></role>
         <role name = "VersionTag" metaref = "3333" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3334"  attributes = "local abstract">
            <part metaref = "3335" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3336" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3337" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3338" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3339" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3340" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3341" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3342" role = "Inherits" primary = "yes" linked = "no"></part>
            <part metaref = "3343" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3344" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3345" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3346" role = "PrefixTag" primary = "yes" linked = "no"></part>
            <part metaref = "3347" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3348" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ReadonlyAttribute" metaref = "3349" >
         <dispname>ReadonlyAttribute</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality61" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <role name = "BoundedString" metaref = "3350" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3351" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3352" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "GetException" metaref = "3353" kind = "GetException"><dispname>GetException</dispname></role>
         <role name = "NamedTypeRef" metaref = "3354" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3355" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3356" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3357" >
            <part metaref = "3358" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3359" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3360" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3361" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3362" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3363" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3364" role = "GetException" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ValueDef" metaref = "3365"  attributes = "custom truncatable abstract">
         <dispname>ValueDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (ValueDef).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(self.parts () - self.parts ("Inherits"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidValueDefPartCardinality62" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PrefixTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ValueDef, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidValueDefPartCardinality63" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size + self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ValueDef, has to match 0..*.</dispname>
         </constraint>
         <attrdef name="custom" metaref = "3366" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <attrdef name="abstract" metaref = "3367" valuetype = "boolean" defvalue = "false">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="value.bmp"></regnode>
         <role name = "AggregateDef" metaref = "3368" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3369" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "Attribute" metaref = "3370" kind = "Attribute"><dispname>Attribute</dispname></role>
         <role name = "BoundedString" metaref = "3371" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "ConstantDef" metaref = "3372" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3373" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3374" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "FactoryOperation" metaref = "3375" kind = "FactoryOperation"><dispname>FactoryOperation</dispname></role>
         <role name = "FixedPoint" metaref = "3376" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3377" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "Inherits" metaref = "3378" kind = "Inherits"><dispname>Inherits</dispname></role>
         <role name = "MakeMemberPrivate" metaref = "3379" kind = "MakeMemberPrivate"><dispname>MakeMemberPrivate</dispname></role>
         <role name = "NamedTypeRef" metaref = "3380" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "OnewayOperation" metaref = "3381" kind = "OnewayOperation"><dispname>OnewayOperation</dispname></role>
         <role name = "PredefinedType" metaref = "3382" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "PrefixTag" metaref = "3383" kind = "PrefixTag"><dispname>PrefixTag</dispname></role>
         <role name = "PrivateFlag" metaref = "3384" kind = "PrivateFlag"><dispname>PrivateFlag</dispname></role>
         <role name = "ReadonlyAttribute" metaref = "3385" kind = "ReadonlyAttribute"><dispname>ReadonlyAttribute</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3386" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "Supports" metaref = "3387" kind = "Supports"><dispname>Supports</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3388" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "TwowayOperation" metaref = "3389" kind = "TwowayOperation"><dispname>TwowayOperation</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3390" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3391" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3392"  attributes = "custom truncatable abstract">
            <part metaref = "3393" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3394" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3395" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3396" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3397" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3398" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3399" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3400" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3401" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3402" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3403" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3404" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3405" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3406" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3407" role = "Inherits" primary = "yes" linked = "no"></part>
            <part metaref = "3408" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3409" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3410" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "3411" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3412" role = "Supports" primary = "yes" linked = "no"></part>
            <part metaref = "3413" role = "TwowayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3414" role = "PrefixTag" primary = "yes" linked = "no"></part>
            <part metaref = "3415" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3416" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "AggregateDef" metaref = "3417" >
         <dispname>AggregateDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidAggregateDefPartCardinality64" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by AggregateDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidAggregateDefPartCardinality65" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by AggregateDef, has to match 1..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="aggregate.bmp"></regnode>
         <role name = "BoundedString" metaref = "3418" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3419" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3420" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3421" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3422" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3423" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3424" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3425" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3426" >
            <part metaref = "3427" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3428" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3429" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3430" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3431" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3432" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3433" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3434" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "AliasDef" metaref = "3435" >
         <dispname>AliasDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidAliasDefPartCardinality66" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by AliasDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidAliasDefPartCardinality67" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by AliasDef, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="alias.bmp"></regnode>
         <role name = "BoundedString" metaref = "3436" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3437" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3438" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3439" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3440" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3441" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3442" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3443" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3444" >
            <part metaref = "3445" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3446" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3447" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3448" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3449" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3450" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3451" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3452" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "BoxedDef" metaref = "3453" >
         <dispname>BoxedDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[let boxedref = parts ("NamedTypeRef") in
boxedref->size > 0 implies boxedref->forAll (
    x : gme::Reference | let ref = x.refersTo () in
    ref.kindName <> "ValueDef" and ref.kindName <> "EventDef"
)]]>
            <dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidBoxedDefPartCardinality68" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by BoxedDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidBoxedDefPartCardinality69" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by BoxedDef, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="boxed.bmp"></regnode>
         <role name = "BoundedString" metaref = "3454" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3455" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3456" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3457" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3458" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3459" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3460" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3461" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3462" >
            <part metaref = "3463" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3464" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3465" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3466" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3467" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3468" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3469" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3470" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Discriminator" metaref = "3471" >
         <dispname>Discriminator</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonNullDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[parts ()->size <> 0]]>
            <dispname>Discriminator must have integer, character, boolean or enum type</dispname>
         </constraint>
         <constraint name="ValidDiscriminatorPartCardinality70" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EnumRef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Discriminator, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDiscriminatorPartCardinality71" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PredefinedType" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Discriminator, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="discriminator.bmp"></regnode>
         <role name = "EnumRef" metaref = "3472" kind = "EnumRef"><dispname>EnumRef</dispname></role>
         <role name = "PredefinedType" metaref = "3473" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3474" >
            <part metaref = "3475" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3476" role = "EnumRef" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "EnumerationDef" metaref = "3477" >
         <dispname>EnumerationDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
            <dispname>An enum's member names must be unique</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidEnumerationDefPartCardinality72" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by EnumerationDef, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidEnumerationDefPartCardinality73" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by EnumerationDef, has to match 1..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="enum.bmp"></regnode>
         <role name = "EnumValue" metaref = "3478" kind = "EnumValue"><dispname>EnumValue</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3479" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3480" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3481" >
            <part metaref = "3482" role = "EnumValue" primary = "yes" linked = "no"></part>
            <part metaref = "3483" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3484" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SwitchedAggregateDef" metaref = "3485" >
         <dispname>SwitchedAggregateDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[self.allMembers ()->forAll (
    x : gme::FCO | let labels = x.connectedFCOs ()
                                in
    labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
)]]>
            <dispname>A default member cannot have multiple labels</dispname>
         </constraint>
         <constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
            <dispname>Labels in the same scope must be unique</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality74" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality75" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality76" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "Label" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality77" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregateDefPartCardinality78" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregateDef, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
         <role name = "BoundedString" metaref = "3486" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "Discriminator" metaref = "3487" kind = "Discriminator"><dispname>Discriminator</dispname></role>
         <role name = "FixedPoint" metaref = "3488" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3489" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "Label" metaref = "3490" kind = "Label"><dispname>Label</dispname></role>
         <role name = "LabelConnection" metaref = "3491" kind = "LabelConnection"><dispname>LabelConnection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3492" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3493" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3494" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3495" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3496" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3497" >
            <part metaref = "3498" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3499" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3500" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3501" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3502" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3503" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3504" role = "Discriminator" primary = "yes" linked = "no"></part>
            <part metaref = "3505" role = "Label" primary = "yes" linked = "no"></part>
            <part metaref = "3506" role = "LabelConnection" primary = "yes" linked = "no"></part>
            <part metaref = "3507" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3508" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FixedSizeCollection" metaref = "3509"  attributes = "bound">
         <dispname>FixedSizeCollection</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="NoNestedArray" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts ("FixedSizeCollection")->size = 0]]>
            <dispname>An unaliased fixed size collection may not be the element type of a collection</dispname>
         </constraint>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
         <constraint name="ValidFixedSizeCollectionPartCardinality79" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by FixedSizeCollection, has to match 1.</dispname>
         </constraint>
         <attrdef name="bound" metaref = "3510" valuetype = "integer" defvalue = "0">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="fixedcollection.bmp"></regnode>
         <role name = "BoundedString" metaref = "3511" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3512" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3513" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3514" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3515" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3516" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3517"  attributes = "bound">
            <part metaref = "3518" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3519" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3520" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3521" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3522" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3523" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "VariableSizeCollection" metaref = "3524"  attributes = "bound">
         <dispname>VariableSizeCollection</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x80000111" depth = "1" priority = "1">
            <![CDATA[let members = self.parent ().oclAsType (gme::Model).allMembers () in
if (members -> size <= 1) then
    true
else
    members -> forAll (a, b : gme::FCO | a <> b implies a.name <> b.name)
endif]]>
            <dispname>All members in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="NoNestedArray" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts ("FixedSizeCollection")->size = 0]]>
            <dispname>An unaliased fixed size collection may not be the element type of a collection</dispname>
         </constraint>
         <constraint name="NonNegativeBound" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[bound >= 0]]>
            <dispname>Bounded cannot be negative</dispname>
         </constraint>
         <constraint name="ValidVariableSizeCollectionPartCardinality80" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size + self.parts( "FixedPoint" ) -> size + self.parts( "FixedSizeCollection" ) -> size + self.parts( "NamedTypeRef" ) -> size + self.parts( "PredefinedType" ) -> size + self.parts( "VariableSizeCollection" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by VariableSizeCollection, has to match 1.</dispname>
         </constraint>
         <attrdef name="bound" metaref = "3525" valuetype = "integer" defvalue = "0">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="variablecollection.bmp"></regnode>
         <role name = "BoundedString" metaref = "3526" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3527" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3528" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3529" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3530" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3531" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3532"  attributes = "bound">
            <part metaref = "3533" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3534" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3535" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3536" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3537" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3538" role = "PredefinedType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ConstantDef" metaref = "3539"  attributes = "value">
         <dispname>ConstantDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ConstantDefNotEmpty" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ()->size = 1]]>
            <dispname>A ConstantDef cannot be empty</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality81" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality82" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "FixedPoint" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality83" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EnumRef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality84" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidConstantDefPartCardinality85" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PredefinedType" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ConstantDef, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="value" metaref = "3540" valuetype = "string" defvalue = "">
            <dispname></dispname>
         </attrdef>
         <regnode name = "icon" value ="const.bmp"></regnode>
         <role name = "BoundedString" metaref = "3541" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "EnumRef" metaref = "3542" kind = "EnumRef"><dispname>EnumRef</dispname></role>
         <role name = "FixedPoint" metaref = "3543" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "PredefinedType" metaref = "3544" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3545" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VersionTag" metaref = "3546" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3547"  attributes = "value">
            <part metaref = "3548" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3549" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3550" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3551" role = "EnumRef" primary = "yes" linked = "no"></part>
            <part metaref = "3552" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3553" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ExceptionDef" metaref = "3554" >
         <dispname>ExceptionDef</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidExceptionDefPartCardinality86" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ExceptionDef, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="exception.bmp"></regnode>
         <role name = "BoundedString" metaref = "3555" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "FixedPoint" metaref = "3556" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3557" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "NamedTypeRef" metaref = "3558" kind = "NamedTypeRef"><dispname>NamedTypeRef</dispname></role>
         <role name = "PredefinedType" metaref = "3559" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3560" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3561" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <role name = "VersionTag" metaref = "3562" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3563" >
            <part metaref = "3564" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3565" role = "FixedSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3566" role = "VariableSizeCollection" primary = "yes" linked = "no"></part>
            <part metaref = "3567" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3568" role = "NamedTypeRef" primary = "yes" linked = "no"></part>
            <part metaref = "3569" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3570" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3571" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "File" metaref = "3572" >
         <dispname>File</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidFilePartCardinality87" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PrefixTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by File, has to match 0..*.</dispname>
         </constraint>
         <role name = "AggregateDef" metaref = "3573" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3574" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "BoxedDef" metaref = "3575" kind = "BoxedDef"><dispname>BoxedDef</dispname></role>
         <role name = "ComponentDef" metaref = "3576" kind = "ComponentDef"><dispname>ComponentDef</dispname></role>
         <role name = "ComponentFactory" metaref = "3577" kind = "ComponentFactory"><dispname>ComponentFactory</dispname></role>
         <role name = "ConstantDef" metaref = "3578" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3579" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "EventDef" metaref = "3580" kind = "EventDef"><dispname>EventDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3581" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "FileRef" metaref = "3582" kind = "FileRef"><dispname>FileRef</dispname></role>
         <role name = "ObjectDef" metaref = "3583" kind = "ObjectDef"><dispname>ObjectDef</dispname></role>
         <role name = "Package" metaref = "3584" kind = "Package"><dispname>Package</dispname></role>
         <role name = "PrefixTag" metaref = "3585" kind = "PrefixTag"><dispname>PrefixTag</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3586" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "ValueDef" metaref = "3587" kind = "ValueDef"><dispname>ValueDef</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3588" >
            <part metaref = "3589" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3590" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3591" role = "BoxedDef" primary = "yes" linked = "no"></part>
            <part metaref = "3592" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3593" role = "ComponentDef" primary = "yes" linked = "no"></part>
            <part metaref = "3594" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3595" role = "EventDef" primary = "yes" linked = "no"></part>
            <part metaref = "3596" role = "ObjectDef" primary = "yes" linked = "no"></part>
            <part metaref = "3597" role = "ValueDef" primary = "yes" linked = "no"></part>
            <part metaref = "3598" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3599" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3600" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3601" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3602" role = "PrefixTag" primary = "yes" linked = "no"></part>
            <part metaref = "3603" role = "FileRef" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Package" metaref = "3604" >
         <dispname>Package</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.parts ()->size > 0]]>
            <dispname>A package cannot be empty</dispname>
         </constraint>
         <constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let decls = self.allScopeDecls () in
if (decls->size <= 1) then
    true
else
    decls->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)
endif]]>
            <dispname>Declarations in a Package must have unique names</dispname>
         </constraint>
         <constraint name="ValidPackagePartCardinality88" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PrefixTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Package, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidPackagePartCardinality89" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SpecifyIdTag" ) -> size + self.parts( "VersionTag" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Package, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="package.bmp"></regnode>
         <role name = "AggregateDef" metaref = "3605" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3606" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "BoxedDef" metaref = "3607" kind = "BoxedDef"><dispname>BoxedDef</dispname></role>
         <role name = "ComponentDef" metaref = "3608" kind = "ComponentDef"><dispname>ComponentDef</dispname></role>
         <role name = "ComponentFactory" metaref = "3609" kind = "ComponentFactory"><dispname>ComponentFactory</dispname></role>
         <role name = "ConstantDef" metaref = "3610" kind = "ConstantDef"><dispname>ConstantDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3611" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "EventDef" metaref = "3612" kind = "EventDef"><dispname>EventDef</dispname></role>
         <role name = "ExceptionDef" metaref = "3613" kind = "ExceptionDef"><dispname>ExceptionDef</dispname></role>
         <role name = "ObjectDef" metaref = "3614" kind = "ObjectDef"><dispname>ObjectDef</dispname></role>
         <role name = "Package" metaref = "3615" kind = "Package"><dispname>Package</dispname></role>
         <role name = "PrefixTag" metaref = "3616" kind = "PrefixTag"><dispname>PrefixTag</dispname></role>
         <role name = "SpecifyIdTag" metaref = "3617" kind = "SpecifyIdTag"><dispname>SpecifyIdTag</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3618" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "ValueDef" metaref = "3619" kind = "ValueDef"><dispname>ValueDef</dispname></role>
         <role name = "VersionTag" metaref = "3620" kind = "VersionTag"><dispname>VersionTag</dispname></role>
         <aspect name = "InterfaceDefinition" metaref = "3621" >
            <part metaref = "3622" role = "AggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3623" role = "AliasDef" primary = "yes" linked = "no"></part>
            <part metaref = "3624" role = "BoxedDef" primary = "yes" linked = "no"></part>
            <part metaref = "3625" role = "EnumerationDef" primary = "yes" linked = "no"></part>
            <part metaref = "3626" role = "ComponentDef" primary = "yes" linked = "no"></part>
            <part metaref = "3627" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3628" role = "EventDef" primary = "yes" linked = "no"></part>
            <part metaref = "3629" role = "ObjectDef" primary = "yes" linked = "no"></part>
            <part metaref = "3630" role = "ValueDef" primary = "yes" linked = "no"></part>
            <part metaref = "3631" role = "SwitchedAggregateDef" primary = "yes" linked = "no"></part>
            <part metaref = "3632" role = "ConstantDef" primary = "yes" linked = "no"></part>
            <part metaref = "3633" role = "ExceptionDef" primary = "yes" linked = "no"></part>
            <part metaref = "3634" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3635" role = "PrefixTag" primary = "yes" linked = "no"></part>
            <part metaref = "3636" role = "SpecifyIdTag" primary = "yes" linked = "no"></part>
            <part metaref = "3637" role = "VersionTag" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentContainer" metaref = "2101" >
         <dispname>ComponentContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentContainerPartCardinality90" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ComponentInterfaceReference" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentContainer, has to match 1.</dispname>
         </constraint>
         <role name = "ComponentConfigProperty" metaref = "2102" kind = "ComponentConfigProperty"><dispname>ComponentConfigProperty</dispname></role>
         <role name = "ComponentInfoProperty" metaref = "2104" kind = "ComponentInfoProperty"><dispname>ComponentInfoProperty</dispname></role>
         <role name = "ComponentInterfaceReference" metaref = "3026" kind = "ComponentInterfaceReference"><dispname>ComponentInterfaceReference</dispname></role>
         <role name = "ComponentProperty" metaref = "2105" kind = "ComponentProperty"><dispname>ComponentProperty</dispname></role>
         <role name = "ComponentPropertyDescription" metaref = "2106" kind = "ComponentPropertyDescription"><dispname>ComponentPropertyDescription</dispname></role>
         <role name = "Property" metaref = "2109" kind = "Property"><dispname>Property</dispname></role>
         <aspect name = "Package" metaref = "2112" >
            <part metaref = "2113" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2118" role = "ComponentConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2120" role = "ComponentInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3027" role = "ComponentInterfaceReference" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2121" role = "ComponentProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2122" role = "ComponentPropertyDescription" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentPropertyDescription" metaref = "2123" >
         <dispname>ComponentPropertyDescription</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentPropertyDescriptionPartCardinality92" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentPropertyDescription, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
         <role name = "DataType" metaref = "2124" kind = "DataType"><dispname>DataType</dispname></role>
         <aspect name = "Package" metaref = "2125" >
            <part metaref = "2126" role = "DataType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Any" metaref = "2023"  attributes = "DataValue">
         <dispname>Any</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidAnyPartCardinality93" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Any, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="Any.bmp"></regnode>
         <role name = "DataType" metaref = "2024" kind = "DataType"><dispname>DataType</dispname></role>
         <aspect name = "Package" metaref = "2025"  attributes = "DataValue">
            <part metaref = "2026" role = "DataType" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Capability" metaref = "2027"  attributes = "resourceType">
         <dispname>Capability</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="Capability.bmp"></regnode>
         <role name = "SatisfierProperty" metaref = "2028" kind = "SatisfierProperty"><dispname>SatisfierProperty</dispname></role>
         <aspect name = "Package" metaref = "2279"  attributes = "resourceType">
            <part metaref = "2029" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "DataType" metaref = "2030" >
         <dispname>DataType</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidDataTypePartCardinality95" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoundedString" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality96" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "BoxedDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality97" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "SwitchedAggregateDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality98" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "AggregateDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality99" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PredefinedType" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality100" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "EnumerationDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality101" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "AliasDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality102" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "FixedPoint" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality103" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "FixedSizeCollection" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality104" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "VariableSizeCollection" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidDataTypePartCardinality105" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ValueDef" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by DataType, has to match 0..1.</dispname>
         </constraint>
         <role name = "AggregateDef" metaref = "3638" kind = "AggregateDef"><dispname>AggregateDef</dispname></role>
         <role name = "AliasDef" metaref = "3639" kind = "AliasDef"><dispname>AliasDef</dispname></role>
         <role name = "BoundedString" metaref = "3640" kind = "BoundedString"><dispname>BoundedString</dispname></role>
         <role name = "BoxedDef" metaref = "3641" kind = "BoxedDef"><dispname>BoxedDef</dispname></role>
         <role name = "EnumerationDef" metaref = "3642" kind = "EnumerationDef"><dispname>EnumerationDef</dispname></role>
         <role name = "FixedPoint" metaref = "3643" kind = "FixedPoint"><dispname>FixedPoint</dispname></role>
         <role name = "FixedSizeCollection" metaref = "3644" kind = "FixedSizeCollection"><dispname>FixedSizeCollection</dispname></role>
         <role name = "PredefinedType" metaref = "3645" kind = "PredefinedType"><dispname>PredefinedType</dispname></role>
         <role name = "SwitchedAggregateDef" metaref = "3646" kind = "SwitchedAggregateDef"><dispname>SwitchedAggregateDef</dispname></role>
         <role name = "ValueDef" metaref = "3647" kind = "ValueDef"><dispname>ValueDef</dispname></role>
         <role name = "VariableSizeCollection" metaref = "3648" kind = "VariableSizeCollection"><dispname>VariableSizeCollection</dispname></role>
         <aspect name = "Package" metaref = "2036" >
            <part metaref = "3649" role = "AggregateDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3650" role = "AliasDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3651" role = "BoundedString" primary = "yes" linked = "no"></part>
            <part metaref = "3652" role = "BoxedDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3653" role = "EnumerationDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3654" role = "FixedPoint" primary = "yes" linked = "no"></part>
            <part metaref = "3655" role = "FixedSizeCollection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3656" role = "PredefinedType" primary = "yes" linked = "no"></part>
            <part metaref = "3657" role = "SwitchedAggregateDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3658" role = "ValueDef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3659" role = "VariableSizeCollection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Property" metaref = "2037" >
         <dispname>Property</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPropertyPartCardinality117" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "Any" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Property, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="Property.bmp"></regnode>
         <role name = "Any" metaref = "2435" kind = "Any"><dispname>Any</dispname></role>
         <aspect name = "Package" metaref = "2039" >
            <part metaref = "2436" role = "Any" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Requirement" metaref = "2293"  attributes = "resourceType">
         <dispname>Requirement</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="Requirement.bmp"></regnode>
         <role name = "Property" metaref = "2041" kind = "Property"><dispname>Property</dispname></role>
         <aspect name = "Package" metaref = "1852"  attributes = "resourceType">
            <part metaref = "2042" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SatisfierProperty" metaref = "2043"  attributes = "SatisfierPropertyKind">
         <dispname>SatisfierProperty</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidSatisfierPropertyPartCardinality122" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "Any" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SatisfierProperty, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
         <role name = "Any" metaref = "2437" kind = "Any"><dispname>Any</dispname></role>
         <aspect name = "Package" metaref = "2045"  attributes = "SatisfierPropertyKind">
            <part metaref = "2438" role = "Any" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageContainer" metaref = "2047" >
         <dispname>PackageContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPackageContainerPartCardinality123" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PackageInterface" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidPackageContainerPartCardinality124" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
(partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 1.</dispname>
         </constraint>
         <role name = "ComponentImplementationReference" metaref = "2048" kind = "ComponentImplementationReference"><dispname>ComponentImplementationReference</dispname></role>
         <role name = "ComponentInterfaceReference" metaref = "2049" kind = "ComponentInterfaceReference"><dispname>ComponentInterfaceReference</dispname></role>
         <role name = "ComponentPackage" metaref = "2050" kind = "ComponentPackage"><dispname>ComponentPackage</dispname></role>
         <role name = "PackageConfigProperty" metaref = "2051" kind = "PackageConfigProperty"><dispname>PackageConfigProperty</dispname></role>
         <role name = "PackageImplementations" metaref = "2052" kind = "PackageImplementations"><dispname>PackageImplementations</dispname></role>
         <role name = "PackageInfoProperty" metaref = "2053" kind = "PackageInfoProperty"><dispname>PackageInfoProperty</dispname></role>
         <role name = "PackageInterface" metaref = "2054" kind = "PackageInterface"><dispname>PackageInterface</dispname></role>
         <role name = "Property" metaref = "2055" kind = "Property"><dispname>Property</dispname></role>
         <aspect name = "Package" metaref = "2056" >
            <part metaref = "2064" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2058" role = "ComponentInterfaceReference" primary = "yes" linked = "no"></part>
            <part metaref = "2057" role = "ComponentImplementationReference" primary = "yes" linked = "no"></part>
            <part metaref = "2059" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "2060" role = "PackageConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2061" role = "PackageImplementations" primary = "yes" linked = "no"></part>
            <part metaref = "2062" role = "PackageInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2063" role = "PackageInterface" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TopLevelPackageContainer" metaref = "2296" >
         <dispname>TopLevelPackageContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
         <role name = "PackageConfigurationReference" metaref = "2360" kind = "PackageConfigurationReference"><dispname>PackageConfigurationReference</dispname></role>
         <role name = "TopLevelPackage" metaref = "2018" kind = "TopLevelPackage"><dispname>TopLevelPackage</dispname></role>
         <role name = "TopLevelPackageConn" metaref = "2019" kind = "TopLevelPackageConn"><dispname>TopLevelPackageConn</dispname></role>
         <aspect name = "Package" metaref = "2020" >
            <part metaref = "2361" role = "PackageConfigurationReference" primary = "yes" linked = "no"></part>
            <part metaref = "2021" role = "TopLevelPackage" primary = "yes" linked = "no"></part>
            <part metaref = "2022" role = "TopLevelPackageConn" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ArtifactContainer" metaref = "1998" >
         <dispname>ArtifactContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <role name = "ArtifactDependsOn" metaref = "1999" kind = "ArtifactDependsOn"><dispname>ArtifactDependsOn</dispname></role>
         <role name = "ArtifactDeployRequirement" metaref = "2000" kind = "ArtifactDeployRequirement"><dispname>ArtifactDeployRequirement</dispname></role>
         <role name = "ArtifactExecParameter" metaref = "2001" kind = "ArtifactExecParameter"><dispname>ArtifactExecParameter</dispname></role>
         <role name = "ArtifactInfoProperty" metaref = "2002" kind = "ArtifactInfoProperty"><dispname>ArtifactInfoProperty</dispname></role>
         <role name = "ImplementationArtifact" metaref = "2003" kind = "ImplementationArtifact"><dispname>ImplementationArtifact</dispname></role>
         <role name = "ImplementationArtifactReference" metaref = "2004" kind = "ImplementationArtifactReference"><dispname>ImplementationArtifactReference</dispname></role>
         <role name = "ImplementationRequirement" metaref = "2005" kind = "ImplementationRequirement"><dispname>ImplementationRequirement</dispname></role>
         <role name = "Property" metaref = "2006" kind = "Property"><dispname>Property</dispname></role>
         <role name = "Requirement" metaref = "2007" kind = "Requirement"><dispname>Requirement</dispname></role>
         <aspect name = "Package" metaref = "2008" >
            <part metaref = "2009" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2010" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2017" role = "Requirement" primary = "yes" linked = "no"></part>
            <part metaref = "2011" role = "ArtifactDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "2012" role = "ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2013" role = "ArtifactExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "2014" role = "ArtifactInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2015" role = "ImplementationArtifact" primary = "yes" linked = "no"></part>
            <part metaref = "2016" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageConfiguration" metaref = "2362"  attributes = "label UUID">
         <dispname>PackageConfiguration</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPackageConfigurationPartCardinality129" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "specializedConfig" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfiguration, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
         <role name = "specializedConfig" metaref = "2363" kind = "PackageConfiguration"><dispname>specializedConfig</dispname></role>
         <aspect name = "Package" metaref = "2364"  attributes = "label UUID">
            <part metaref = "2365" role = "specializedConfig" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageConfigurationContainer" metaref = "2152" >
         <dispname>PackageConfigurationContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPackageConfigurationContainerPartCardinality130" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PackageBaseConnection" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..*.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality131" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "PackageReferenceConnection" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..*.</dispname>
         </constraint>
         <role name = "ComponentPackage" metaref = "2366" kind = "ComponentPackage"><dispname>ComponentPackage</dispname></role>
         <role name = "ComponentPackageReference" metaref = "2367" kind = "ComponentPackageReference"><dispname>ComponentPackageReference</dispname></role>
         <role name = "ImplementationRequirement" metaref = "2153" kind = "ImplementationRequirement"><dispname>ImplementationRequirement</dispname></role>
         <role name = "PackageBaseConnection" metaref = "2368" kind = "PackageBaseConnection"><dispname>PackageBaseConnection</dispname></role>
         <role name = "PackageConfiguration" metaref = "2369" kind = "PackageConfiguration"><dispname>PackageConfiguration</dispname></role>
         <role name = "PackageConfigurationProperty" metaref = "2155" kind = "PackageConfigurationProperty"><dispname>PackageConfigurationProperty</dispname></role>
         <role name = "PackageReferenceConnection" metaref = "2370" kind = "PackageReferenceConnection"><dispname>PackageReferenceConnection</dispname></role>
         <role name = "PackageSelectRequirement" metaref = "2156" kind = "PackageSelectRequirement"><dispname>PackageSelectRequirement</dispname></role>
         <role name = "Property" metaref = "2157" kind = "Property"><dispname>Property</dispname></role>
         <role name = "Requirement" metaref = "2158" kind = "Requirement"><dispname>Requirement</dispname></role>
         <aspect name = "Package" metaref = "2159" >
            <part metaref = "2160" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2161" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2162" role = "Requirement" primary = "yes" linked = "no"></part>
            <part metaref = "2371" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "2372" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "2373" role = "PackageBaseConnection" primary = "yes" linked = "no"></part>
            <part metaref = "2374" role = "PackageConfiguration" primary = "yes" linked = "no"></part>
            <part metaref = "2164" role = "PackageConfigurationProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2375" role = "PackageReferenceConnection" primary = "yes" linked = "no"></part>
            <part metaref = "2165" role = "PackageSelectRequirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentImplementationContainer" metaref = "2065" >
         <dispname>ComponentImplementationContainer</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentImplementationContainerPartCardinality132" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ComponentAssembly" ) -> size + self.parts( "MonolithicImplementation" ) -> size in
(partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..*.</dispname>
         </constraint>
         <role name = "Capability" metaref = "2066" kind = "Capability"><dispname>Capability</dispname></role>
         <role name = "ComponentAssembly" metaref = "2067" kind = "ComponentAssembly"><dispname>ComponentAssembly</dispname></role>
         <role name = "ComponentInterfaceReference" metaref = "2068" kind = "ComponentInterfaceReference"><dispname>ComponentInterfaceReference</dispname></role>
         <role name = "ConfigProperty" metaref = "2069" kind = "ConfigProperty"><dispname>ConfigProperty</dispname></role>
         <role name = "ImplementationCapability" metaref = "2376" kind = "ImplementationCapability"><dispname>ImplementationCapability</dispname></role>
         <role name = "ImplementationDependency" metaref = "2070" kind = "ImplementationDependency"><dispname>ImplementationDependency</dispname></role>
         <role name = "ImplementationDependsOn" metaref = "2071" kind = "ImplementationDependsOn"><dispname>ImplementationDependsOn</dispname></role>
         <role name = "ImplementationRequirement" metaref = "2072" kind = "ImplementationRequirement"><dispname>ImplementationRequirement</dispname></role>
         <role name = "Implements" metaref = "2073" kind = "Implements"><dispname>Implements</dispname></role>
         <role name = "InfoProperty" metaref = "2074" kind = "InfoProperty"><dispname>InfoProperty</dispname></role>
         <role name = "MonolithDeployRequirement" metaref = "2075" kind = "MonolithDeployRequirement"><dispname>MonolithDeployRequirement</dispname></role>
         <role name = "MonolithExecParameter" metaref = "2076" kind = "MonolithExecParameter"><dispname>MonolithExecParameter</dispname></role>
         <role name = "MonolithicImplementation" metaref = "2077" kind = "MonolithicImplementation"><dispname>MonolithicImplementation</dispname></role>
         <role name = "MonolithprimaryArtifact" metaref = "2078" kind = "MonolithprimaryArtifact"><dispname>MonolithprimaryArtifact</dispname></role>
         <role name = "Property" metaref = "2079" kind = "Property"><dispname>Property</dispname></role>
         <aspect name = "Package" metaref = "2081" >
            <part metaref = "2095" role = "Capability" primary = "yes" linked = "no"></part>
            <part metaref = "2096" role = "ImplementationDependency" primary = "yes" linked = "no"></part>
            <part metaref = "2083" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2088" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2082" role = "ComponentInterfaceReference" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2084" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
            <part metaref = "2085" role = "MonolithicImplementation" primary = "yes" linked = "no"></part>
            <part metaref = "2086" role = "ConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2377" role = "ImplementationCapability" primary = "yes" linked = "no"></part>
            <part metaref = "2087" role = "ImplementationDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "2089" role = "Implements" primary = "yes" linked = "no"></part>
            <part metaref = "2090" role = "InfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2091" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2092" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "2093" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ImplementationRequirement" metaref = "2097"  attributes = "resourceType resourcePort componentPort ResourceUsageKind">
         <dispname>ImplementationRequirement</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <regnode name = "icon" value ="Requirement.bmp"></regnode>
         <regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
         <role name = "Property" metaref = "2098" kind = "Property"><dispname>Property</dispname></role>
         <aspect name = "Package" metaref = "2099"  attributes = "resourceType resourcePort componentPort ResourceUsageKind">
            <part metaref = "2100" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentAssembly" metaref = "2127"  attributes = "label UUID">
         <dispname>ComponentAssembly</dispname>
         <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentAssemblyPartCardinality134" eventmask = "0x0" depth = "0" priority = "2">
            <![CDATA[let partCount = self.parts( "ComponentInterfaceReference" ) -> size in
(partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentAssembly, has to match 0..*.</dispname>
         </constraint>
         <regnode name = "icon" value ="Assembly.bmp"></regnode>
         <role name = "ComponentInterfaceReference" metaref = "2129" kind = "ComponentInterfaceReference"><dispname>ComponentInterfaceReference</dispname></role>
         <role name = "ComponentPackage" metaref = "2130" kind = "ComponentPackage"><dispname>ComponentPackage</dispname></role>
         <role name = "ComponentPackageReference" metaref = "2131" kind = "ComponentPackageReference"><dispname>ComponentPackageReference</dispname></role>
         <role name = "ConnectionRequirements" metaref = "2271" kind = "ConnectionRequirements"><dispname>ConnectionRequirements</dispname></role>
         <role name = "EventConnector" metaref = "3050" kind = "EventConnector"><dispname>EventConnector</dispname></role>
         <role name = "ImplementationRequirement" metaref = "2133" kind = "ImplementationRequirement"><dispname>ImplementationRequirement</dispname></role>
         <role name = "InEventPortConsume" metaref = "2378" kind = "InEventPortConsume"><dispname>InEventPortConsume</dispname></role>
         <role name = "Invocation" metaref = "2134" kind = "Invocation"><dispname>Invocation</dispname></role>
         <role name = "OutEventPortPublish" metaref = "2379" kind = "OutEventPortPublish"><dispname>OutEventPortPublish</dispname></role>
         <role name = "Property" metaref = "2135" kind = "Property"><dispname>Property</dispname></role>
         <role name = "Requirement" metaref = "2137" kind = "Requirement"><dispname>Requirement</dispname></role>
         <role name = "SubComponentConfigProperty" metaref = "2138" kind = "SubComponentConfigProperty"><dispname>SubComponentConfigProperty</dispname></role>
         <role name = "SubComponentSelectRequirement" metaref = "2139" kind = "SubComponentSelectRequirement"><dispname>SubComponentSelectRequirement</dispname></role>
         <aspect name = "Package" metaref = "1845"  attributes = "label UUID">
            <part metaref = "2142" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2143" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "2144" role = "Requirement" primary = "yes" linked = "no"></part>
            <part metaref = "2140" role = "ComponentInterfaceReference" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2141" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "2149" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "2275" role = "ConnectionRequirements" primary = "yes" linked = "no"></part>
            <part metaref = "3051" role = "EventConnector" primary = "yes" linked = "no"></part>
            <part metaref = "2380" role = "InEventPortConsume" primary = "yes" linked = "no"></part>
            <part metaref = "2146" role = "Invocation" primary = "yes" linked = "no"></part>
            <part metaref = "2381" role = "OutEventPortPublish" primary = "yes" linked = "no"></part>
            <part metaref = "2150" role = "SubComponentConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2151" role = "SubComponentSelectRequirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <folder name = "ComponentTypes" metaref = "2297"  rootobjects = "ComponentContainer">
         <dispname>ComponentTypes</dispname>
      </folder>
      <folder name = "ComponentPackages" metaref = "2298"  rootobjects = "PackageContainer">
         <dispname>ComponentPackages</dispname>
      </folder>
      <folder name = "TopLevelPackageFolder" metaref = "2300"  rootobjects = "TopLevelPackageContainer">
         <dispname>TopLevelPackageFolder</dispname>
      </folder>
      <folder name = "ImplementationArtifacts" metaref = "2299"  rootobjects = "ArtifactContainer">
         <dispname>ImplementationArtifacts</dispname>
      </folder>
      <folder name = "PackageConfigurations" metaref = "2166"  rootobjects = "PackageConfigurationContainer">
         <dispname>PackageConfigurations</dispname>
      </folder>
      <folder name = "ComponentImplementations" metaref = "2301"  rootobjects = "ComponentImplementationContainer">
         <dispname>ComponentImplementations</dispname>
      </folder>
   </folder>
</paradigm>
