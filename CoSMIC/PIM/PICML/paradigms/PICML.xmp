<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name ="PICML">

   <comment> Generated by the MetaGME2004 interpreter </comment>

   <folder name = "RootFolder" metaref = "1000"  subfolders = "ComponentImplementations ComponentPackages ComponentTypes ImplementationArtifacts InterfaceDefinitions PackageConfigurations PredefinedTypes TopLevelPackageFolder" >
      <constraint type="function" name="AllParams">
         <![CDATA[method;gme::Model;;ocl::Set;
         parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
      </constraint>
      <constraint type="function" name="allFileScopeDecls">
         <![CDATA[method;gme::Folder;;ocl::Set;
         let closure = self.models ("File") in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (x ; accu = Set{} | accu + x.parts ())
  endif]]>
      </constraint>
      <constraint type="function" name="inheritedOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         let ancestors = self.inheritsRecursive (self) in
ancestors->iterate (ancestor; accu = Set{} | accu + ancestor.oclAsType (gme::Model).localOps ())]]>
      </constraint>
      <constraint type="function" name="inheritsRecursive">
         <![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
         let closure = self.referenceParts (Inherits)->collect (x : gme::Reference | x.refersTo ().oclAsType (gme::Model))->asSet () in
  if (closure->size < 1) then
    Set{}
  else
    closure->iterate (rec; accu = Set{} | accu + 
      if (rec = top) then
        Set{top}
      else
        rec.inheritsRecursive (top)
      endif)
  endif]]>
      </constraint>
      <constraint type="function" name="localOps">
         <![CDATA[method;gme::Model;;ocl::Set;
         self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
      </constraint>
      <constraint type="function" name="supportedWithAncestors">
         <![CDATA[method;gme::Model;;ocl::Set;
         let supported_set = self.referenceParts (Supports) in
supported_set->iterate (ref; accu = Set{} | 
  let supported = ref.refersTo ().oclAsType (gme::Model) in
  accu + supported.inheritsRecursive (supported))]]>
      </constraint>
      <attrdef name="DataValue" metaref = "2747" valuetype = "string" defvalue = "">
         <dispname>value</dispname>
         <regnode name="multiLine" value = "5"></regnode>
      </attrdef>
      <attrdef name="PrefixTag" metaref = "3419" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="ResourceUsageKind" metaref = "2748" valuetype = "enum" defvalue = "None">
         <dispname>resourceUsage</dispname>
         <enumitem dispname = "None" value = "None"></enumitem>
         <enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
         <enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
         <enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
         <enumitem dispname = "ResouceUsesPort" value = "ResouceUsesPort"></enumitem>
      </attrdef>
      <attrdef name="SatisfierPropertyKind" metaref = "2749" valuetype = "enum" defvalue = "Quantity">
         <dispname>kind</dispname>
         <enumitem dispname = "Quantity" value = "Quantity"></enumitem>
         <enumitem dispname = "Capacity" value = "Capacity"></enumitem>
         <enumitem dispname = "Minimum" value = "Minimum"></enumitem>
         <enumitem dispname = "Maximum" value = "Maximum"></enumitem>
         <enumitem dispname = "Selection" value = "Selection"></enumitem>
         <enumitem dispname = "Attribute" value = "Attribute"></enumitem>
      </attrdef>
      <attrdef name="SpecifyIdTag" metaref = "3420" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="UUID" metaref = "2750" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="VersionTag" metaref = "3421" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="componentPort" metaref = "2751" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="exclusiveProvider" metaref = "2752" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="exclusiveUser" metaref = "2753" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="label" metaref = "2754" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="location" metaref = "2755" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="optional" metaref = "2756" valuetype = "boolean" defvalue = "false">
      </attrdef>
      <attrdef name="requiredName" metaref = "2757" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="requiredType" metaref = "2758" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="requiredUUID" metaref = "2759" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="resourcePort" metaref = "2760" valuetype = "string" defvalue = "">
      </attrdef>
      <attrdef name="resourceType" metaref = "2761" valuetype = "string" defvalue = "">
      </attrdef>
      <atom name = "Boolean" metaref = "2914" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "Byte" metaref = "3422" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ComponentPackage" metaref = "3145"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
      self.UUID <> "" implies packages->forAll (elem : ComponentPackage | elem.UUID = self.UUID implies elem = self)]]>
            <dispname>UUIDs if defined, should uniquely identify ComponentPackages</dispname>
         </constraint>
         <constraint name="ValidImplementationdstCardinality24" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", Implementation ) -> size in
                     (dstCount >= 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentPackage as "dst" over Implementation, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidPackageInterfacedstCardinality60" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageInterface ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentPackage as "dst" over PackageInterface, has to match 0..1.</dispname>
         </constraint>
            <regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
      </atom>
      <atom name = "EnumValue" metaref = "1791" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enumvalue.bmp"></regnode>
      </atom>
      <atom name = "GenericObject" metaref = "2916" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValue" metaref = "2917" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "GenericValueObject" metaref = "2918" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ImplementationArtifact" metaref = "3146"  attributes = "label UUID location">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
      </atom>
      <atom name = "ImplementationDependency" metaref = "2764"  attributes = "requiredType">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
      </atom>
      <atom name = "Label" metaref = "1793" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidLabelConnectionsrcCardinality33" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", LabelConnection ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to Label as "src" over LabelConnection, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="label.bmp"></regnode>
      </atom>
      <atom name = "LongInteger" metaref = "2919" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "MonolithicImplementation" metaref = "3147"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
      </atom>
      <atom name = "PackageConfiguration" metaref = "3283"  attributes = "label UUID">
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
       folder->forAll (e1 : PackageConfiguration | e1.name() = self.name() implies e1 == self)]]>
            <dispname>PackageConfiguration should be unique within a project</dispname>
         </constraint>
         <constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let packageconfigs = project.allInstancesOf (PackageConfiguration) in
        self.UUID <> "" implies packageconfigs->forAll (i : PackageConfiguration | i.UUID = self.UUID implies i == self)]]>
            <dispname>UUIDs if defined, should uniquely identify PackageConfigurations</dispname>
         </constraint>
         <constraint name="ValidPackageConfBasePackagedstCardinality46" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfBasePackage, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfReferencedstCardinality50" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfReference, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfSpecializedConfigdstCardinality54" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfiguration as "dst" over PackageConfSpecializedConfig, has to match 0..1.</dispname>
         </constraint>
      </atom>
      <atom name = "PrivateFlag" metaref = "2302" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidMakeMemberPrivatesrcCardinality35" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PrivateFlag as "src" over MakeMemberPrivate, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="private.bmp"></regnode>
            <regnode name = "isNameEnabled" value ="false"></regnode>
      </atom>
      <atom name = "PublishConnector" metaref = "3148" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Connector.bmp"></regnode>
      </atom>
      <atom name = "RealNumber" metaref = "2920" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "ShortInteger" metaref = "2921" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "String" metaref = "2922" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TopLevelPackage" metaref = "2767" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidpackagedstCardinality68" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", package ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to TopLevelPackage as "dst" over package, has to match 1.</dispname>
         </constraint>
            <regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
      </atom>
      <atom name = "TypeEncoding" metaref = "2923" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <atom name = "TypeKind" metaref = "2924" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
      </atom>
      <connection name = "ArtifactDependsOn" metaref = "3149" >
            <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
            <regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
            <regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationArtifactReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactDeployRequirement" metaref = "3150" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactExecParameter" metaref = "3151" >
            <regnode name = "labelFormatStr" value ="execParameter"></regnode>
            <regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
            <regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ArtifactInfoProperty" metaref = "3152" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
            <regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ImplementationArtifact"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyConfigProperty" metaref = "3153" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
            <regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyDeployRequirement" metaref = "3154" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcAssemblyDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstAssemblyDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "AssemblyselectRequirement" metaref = "3155" >
            <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
            <regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
            <regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentConfigProperty" metaref = "2772" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
            <regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentInfoProperty" metaref = "2773" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
            <regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ComponentProperty" metaref = "2774" >
            <regnode name = "labelFormatStr" value ="property"></regnode>
            <regnode name = "sName" value ="srcComponentProperty"></regnode>
            <regnode name = "dName" value ="dstComponentProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPropertyDescription"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ConfigProperty" metaref = "3156" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcConfigProperty"></regnode>
            <regnode name = "dName" value ="dstConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Implementation" metaref = "3157" >
            <regnode name = "labelFormatStr" value ="implementation"></regnode>
            <regnode name = "sName" value ="srcImplementation"></regnode>
            <regnode name = "dName" value ="dstImplementation"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentImplementationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationCapability" metaref = "3158" >
            <regnode name = "labelFormatStr" value ="capability"></regnode>
            <regnode name = "sName" value ="srcImplementationCapability"></regnode>
            <regnode name = "dName" value ="dstImplementationCapability"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Capability"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ImplementationDependsOn" metaref = "3159" >
            <regnode name = "labelFormatStr" value ="dependsOn"></regnode>
            <regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
            <regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationDependency"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "Implements" metaref = "3160" >
            <regnode name = "labelFormatStr" value ="implements"></regnode>
            <regnode name = "sName" value ="srcImplements"></regnode>
            <regnode name = "dName" value ="dstImplements"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "InfoProperty" metaref = "3161" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcInfoProperty"></regnode>
            <regnode name = "dName" value ="dstInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentAssembly"></pointeritem>
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "LabelConnection" metaref = "1796" >
            <regnode name = "sName" value ="srcLabelConnection"></regnode>
            <regnode name = "dName" value ="dstLabelConnection"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Label"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MakeMemberPrivate" metaref = "2303" >
            <regnode name = "sName" value ="srcMakeMemberPrivate"></regnode>
            <regnode name = "dName" value ="dstMakeMemberPrivate"></regnode>
            <regnode name = "color" value ="0xFF0000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Member"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PrivateFlag"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "ManagesComponent" metaref = "3423" >
            <regnode name = "sName" value ="srcManagesComponent"></regnode>
            <regnode name = "dName" value ="dstManagesComponent"></regnode>
            <regnode name = "color" value ="0x00FF00"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentFactory"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component"></pointeritem>
               <pointeritem desc = "ComponentRef"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithDeployRequirement" metaref = "3162" >
            <regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
            <regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
            <regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ImplementationRequirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithExecParameter" metaref = "3163" >
            <regnode name = "labelFormatStr" value ="execParameter"></regnode>
            <regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
            <regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
            <regnode name = "color" value ="0x0000FF"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "MonolithprimaryArtifact" metaref = "3164" >
            <regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
            <regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
            <regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "MonolithicImplementation"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfBasePackage" metaref = "3165" >
            <regnode name = "labelFormatStr" value ="basePackage"></regnode>
            <regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
            <regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfConfigProperty" metaref = "3166" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
            <regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfReference" metaref = "3167" >
            <regnode name = "labelFormatStr" value ="reference"></regnode>
            <regnode name = "sName" value ="srcPackageConfReference"></regnode>
            <regnode name = "dName" value ="dstPackageConfReference"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentPackageReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfSelectRequirement" metaref = "3168" >
            <regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
            <regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
            <regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Requirement"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfSpecializedConfig" metaref = "3169" >
            <regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
            <regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
            <regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PackageConfiguration"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageConfigProperty" metaref = "3170" >
            <regnode name = "labelFormatStr" value ="configProperty"></regnode>
            <regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
            <regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInfoProperty" metaref = "3171" >
            <regnode name = "labelFormatStr" value ="infoProperty"></regnode>
            <regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
            <regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="butt"></regnode>
            <regnode name = "srcStyle" value ="diamond"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Property"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "PackageInterface" metaref = "3172" >
            <regnode name = "labelFormatStr" value ="realizes"></regnode>
            <regnode name = "sName" value ="srcPackageInterface"></regnode>
            <regnode name = "dName" value ="dstPackageInterface"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "ComponentPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "ComponentType"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "deliverTo" metaref = "3173" >
            <regnode name = "labelFormatStr" value ="deliverTo"></regnode>
            <regnode name = "sName" value ="srcdeliverTo"></regnode>
            <regnode name = "dName" value ="dstdeliverTo"></regnode>
            <regnode name = "color" value ="0x008000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component InEventPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "emit" metaref = "3174" >
            <regnode name = "labelFormatStr" value ="emit"></regnode>
            <regnode name = "sName" value ="srcemit"></regnode>
            <regnode name = "dName" value ="dstemit"></regnode>
            <regnode name = "color" value ="0x8F0000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component OutEventPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component InEventPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "invoke" metaref = "3175" >
            <regnode name = "labelFormatStr" value ="invoke"></regnode>
            <regnode name = "sName" value ="srcinvoke"></regnode>
            <regnode name = "dName" value ="dstinvoke"></regnode>
            <regnode name = "color" value ="0x00008F"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="dash"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component RequiredRequestPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "Component ProvidedRequestPort"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "package" metaref = "3176" >
            <regnode name = "labelFormatStr" value ="package"></regnode>
            <regnode name = "sName" value ="srcpackage"></regnode>
            <regnode name = "dName" value ="dstpackage"></regnode>
            <regnode name = "color" value ="0x000000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "TopLevelPackage"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PackageConfigurationReference"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <connection name = "publish" metaref = "3177" >
            <regnode name = "labelFormatStr" value ="publish"></regnode>
            <regnode name = "sName" value ="srcpublish"></regnode>
            <regnode name = "dName" value ="dstpublish"></regnode>
            <regnode name = "color" value ="0x008000"></regnode>
            <regnode name = "dstStyle" value ="arrow"></regnode>
            <regnode name = "srcStyle" value ="butt"></regnode>
            <regnode name = "lineType" value ="solid"></regnode>
         <connjoint>
            <pointerspec name = "src">
               <pointeritem desc = "Component OutEventPort"></pointeritem>
            </pointerspec>
            <pointerspec name = "dst">
               <pointeritem desc = "PublishConnector"></pointeritem>
            </pointerspec>
         </connjoint>
      </connection>
      <reference name = "Alias" metaref = "3119" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyAlias"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="alias.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "AttributeMember" metaref = "3424">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyAttributeMember"></regnode>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Boxed" metaref = "3120" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyBoxed"></regnode>
         <constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[let boxedref = refersTo () in
   boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
            <dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
         </constraint>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="boxed.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Collection" metaref = "3121" attributes = "VersionTag SpecifyIdTag">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyCollection"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="variablecollection.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentImplementationReference" metaref = "3178">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
         <regnode name = "icon" value ="ImplementationReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentAssembly"></pointeritem>
            <pointeritem desc = "MonolithicImplementation"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentPackageReference" metaref = "3179" attributes = "requiredType requiredUUID requiredName">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
         <constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo().isNull()]]>
            <dispname>ComponentPackageReference cannot be null</dispname>
         </constraint>
         <constraint name="OneAttribute" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.requiredUUID <> "" 
or self.requiredType <> "" 
or self.requiredUUID <> ""]]>
            <dispname>Atleast one of requiredName, requiredType or requiredUUID should be present</dispname>
         </constraint>
         <regnode name = "icon" value ="PackageReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ComponentPackage"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentRef" metaref = "3425">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentRef"></regnode>
         <regnode name = "icon" value ="manages.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ComponentType" metaref = "2801">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyComponentType"></regnode>
         <constraint name="ValidPackageInterfacesrcCardinality59" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", PackageInterface ) -> size in
                     (srcCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentType as "src" over PackageInterface, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "isTypeShown" value ="true"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Constant" metaref = "3112" attributes = "VersionTag SpecifyIdTag value">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyConstant"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="value" metaref = "3113" valuetype = "string" defvalue = "">
         </attrdef>
         <regnode name = "icon" value ="const.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Discriminator" metaref = "3122">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyDiscriminator"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <regnode name = "icon" value ="discriminator.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ExceptionRef" metaref = "2312">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyExceptionRef"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="exceptionref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "FileRef" metaref = "2627">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyFileRef"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="fileref.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "File"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "GetException" metaref = "2264">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyGetException"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="getexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ImplementationArtifactReference" metaref = "3180">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
         <regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ImplementationArtifact"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InEventPort" metaref = "3426" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyInEventPort"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <constraint name="ValidemitsrcCardinality63" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", emit ) -> size in
                     (srcCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to InEventPort as "src" over emit, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="ineventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InParameter" metaref = "3123">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyInParameter"></regnode>
         <regnode name = "icon" value ="in.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Inherits" metaref = "1401">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyInherits"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="inherits.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "InoutParameter" metaref = "3124">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyInoutParameter"></regnode>
         <regnode name = "icon" value ="inout.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "LookupKey" metaref = "1800">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyLookupKey"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="lookupkey.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Member" metaref = "3125">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyMember"></regnode>
         <constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[not refersTo ().isNull ()]]>
            <dispname>A reference to a named type must be assigned</dispname>
         </constraint>
         <constraint name="ValidMakeMemberPrivatedstCardinality36" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to Member as "dst" over MakeMemberPrivate, has to match 0..1.</dispname>
         </constraint>
         <regnode name = "icon" value ="member.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutEventPort" metaref = "3427" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider single_destination">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyOutEventPort"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <constraint name="ValidemitdstCardinality64" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", emit ) -> size in
                     (dstCount <= 1)]]>
            <dispname>Multiplicity of objects, which are associated to OutEventPort as "dst" over emit, has to match 0..1.</dispname>
         </constraint>
         <attrdef name="single_destination" metaref = "2190" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="outeventport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Event"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "OutParameter" metaref = "3126">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyOutParameter"></regnode>
         <regnode name = "icon" value ="out.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "PackageConfigurationReference" metaref = "2803">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
         <constraint name="ValidpackagesrcCardinality67" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let srcCount = self.attachingConnections( "dst", package ) -> size in
                     (srcCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to PackageConfigurationReference as "src" over package, has to match 1.</dispname>
         </constraint>
         <regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "PackageConfiguration"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ProvidedRequestPort" metaref = "3428" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyProvidedRequestPort"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <regnode name = "icon" value ="providedrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "RequiredRequestPort" metaref = "3429" attributes = "VersionTag optional exclusiveUser SpecifyIdTag exclusiveProvider multiple_connections">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyRequiredRequestPort"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="multiple_connections" metaref = "2195" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "ReturnType" metaref = "3127">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbyReturnType"></regnode>
         <regnode name = "icon" value ="return.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Aggregate"></pointeritem>
            <pointeritem desc = "Alias"></pointeritem>
            <pointeritem desc = "Boolean"></pointeritem>
            <pointeritem desc = "Boxed"></pointeritem>
            <pointeritem desc = "Byte"></pointeritem>
            <pointeritem desc = "Collection"></pointeritem>
            <pointeritem desc = "Component"></pointeritem>
            <pointeritem desc = "ComponentFactory"></pointeritem>
            <pointeritem desc = "Enum"></pointeritem>
            <pointeritem desc = "Event"></pointeritem>
            <pointeritem desc = "GenericObject"></pointeritem>
            <pointeritem desc = "GenericValue"></pointeritem>
            <pointeritem desc = "GenericValueObject"></pointeritem>
            <pointeritem desc = "LongInteger"></pointeritem>
            <pointeritem desc = "Object"></pointeritem>
            <pointeritem desc = "RealNumber"></pointeritem>
            <pointeritem desc = "ShortInteger"></pointeritem>
            <pointeritem desc = "String"></pointeritem>
            <pointeritem desc = "SwitchedAggregate"></pointeritem>
            <pointeritem desc = "TypeEncoding"></pointeritem>
            <pointeritem desc = "TypeKind"></pointeritem>
            <pointeritem desc = "ValueObject"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "SetException" metaref = "1701">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbySetException"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="setexception.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Exception"></pointeritem>
         </pointerspec>
      </reference>
      <reference name = "Supports" metaref = "1404">
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "rName" value ="ref"></regnode>
            <regnode name = "rrName" value ="referedbySupports"></regnode>
         <constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not self.refersTo ().isNull ()]]>
            <dispname>A reference cannot be null</dispname>
         </constraint>
         <regnode name = "icon" value ="supports.bmp"></regnode>
         <regnode name = "isNameEnabled" value ="false"></regnode>
         <pointerspec name = "ref">
            <pointeritem desc = "Object"></pointeritem>
         </pointerspec>
      </reference>
      <model name = "Aggregate" metaref = "2928" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="aggregate.bmp"></regnode>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3128" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3303" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3129" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ArtifactContainer" metaref = "3185" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidArtifactContainerPartCardinality71" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ArtifactContainer, has to match 1..*.</dispname>
         </constraint>
         <role name = "ArtifactDependsOn" metaref = "3186" kind = "ArtifactDependsOn"></role>
         <role name = "ArtifactDeployRequirement" metaref = "3187" kind = "ArtifactDeployRequirement"></role>
         <role name = "ArtifactExecParameter" metaref = "3188" kind = "ArtifactExecParameter"></role>
         <role name = "ArtifactInfoProperty" metaref = "3189" kind = "ArtifactInfoProperty"></role>
         <role name = "ImplementationArtifact" metaref = "3190" kind = "ImplementationArtifact"></role>
         <role name = "ImplementationArtifactReference" metaref = "3191" kind = "ImplementationArtifactReference"></role>
         <role name = "Property" metaref = "2817" kind = "Property"></role>
         <role name = "Requirement" metaref = "2818" kind = "Requirement"></role>
         <aspect name = "Package" metaref = "2819" >
            <part metaref = "3192" role = "ArtifactDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "3193" role = "ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3194" role = "ArtifactExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3195" role = "ArtifactInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3196" role = "ImplementationArtifact" primary = "yes" linked = "no"></part>
            <part metaref = "3197" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
            <part metaref = "2826" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2827" role = "Requirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Attribute" metaref = "1405" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
            <regnode name = "icon" value ="attribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality86" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3430" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2265" kind = "GetException"></role>
         <role name = "SetException" metaref = "1702" kind = "SetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "3304" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3431" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2376" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2379" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Capability" metaref = "2830" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Capability.bmp"></regnode>
         <constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.resourceType <> ""]]>
            <dispname>ResourceType should contain atleast one element</dispname>
         </constraint>
         <constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let sp = self.modelParts(SatisfierProperty) in
    sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
            <dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
         </constraint>
         <role name = "SatisfierProperty" metaref = "2831" kind = "SatisfierProperty"></role>
         <aspect name = "Package" metaref = "2832" attributes = "resourceType" >
            <part metaref = "2833" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Component" metaref = "1822" attributes = "VersionTag SpecifyIdTag label UUID" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="component.bmp"></regnode>
            <regnode name = "isTypeShown" value ="true"></regnode>
         <constraint name="ComponentInstanceOnly" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[let parent = self.parent() in
if ( parent.isNull() ) then
   true
else
    parent.kindName = "ComponentAssembly" implies self.isInstance()
endif]]>
            <dispname>Only Component Instances can be created inside a Component Assembly (Press Alt)</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
            <dispname>A component that has a base component may not also support interfaces</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Attribute" metaref = "1420" kind = "Attribute"></role>
         <role name = "InEventPort" metaref = "3432" kind = "InEventPort"></role>
         <role name = "Inherits" metaref = "1422" kind = "Inherits"></role>
         <role name = "OutEventPort" metaref = "3433" kind = "OutEventPort"></role>
         <role name = "ProvidedRequestPort" metaref = "3434" kind = "ProvidedRequestPort"></role>
         <role name = "ReadonlyAttribute" metaref = "1423" kind = "ReadonlyAttribute"></role>
         <role name = "RequiredRequestPort" metaref = "3435" kind = "RequiredRequestPort"></role>
         <role name = "Supports" metaref = "1424" kind = "Supports"></role>
         <aspect name = "InterfaceDefinition" metaref = "3436" attributes = "VersionTag SpecifyIdTag label UUID" >
            <part metaref = "3248" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3437" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3438" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3439" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3440" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3441" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3442" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
            <part metaref = "3443" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentAssembly" metaref = "3198" attributes = "label UUID" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Assembly.bmp"></regnode>
         <constraint name="ValidComponentAssemblyPartCardinality72" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Component" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentAssembly, has to match 1..*.</dispname>
         </constraint>
         <role name = "AssemblyConfigProperty" metaref = "3199" kind = "AssemblyConfigProperty"></role>
         <role name = "AssemblyDeployRequirement" metaref = "3200" kind = "AssemblyDeployRequirement"></role>
         <role name = "AssemblyselectRequirement" metaref = "3201" kind = "AssemblyselectRequirement"></role>
         <role name = "Component" metaref = "3444" kind = "Component"></role>
         <role name = "ComponentPackage" metaref = "3202" kind = "ComponentPackage"></role>
         <role name = "ComponentPackageReference" metaref = "3203" kind = "ComponentPackageReference"></role>
         <role name = "Property" metaref = "2843" kind = "Property"></role>
         <role name = "PublishConnector" metaref = "3204" kind = "PublishConnector"></role>
         <role name = "Requirement" metaref = "2845" kind = "Requirement"></role>
         <role name = "deliverTo" metaref = "3205" kind = "deliverTo"></role>
         <role name = "emit" metaref = "3206" kind = "emit"></role>
         <role name = "invoke" metaref = "3207" kind = "invoke"></role>
         <role name = "publish" metaref = "3208" kind = "publish"></role>
         <aspect name = "Package" metaref = "2848" attributes = "label UUID" >
            <part metaref = "3209" role = "AssemblyConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3210" role = "AssemblyDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3211" role = "AssemblyselectRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3445" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3212" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3213" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "2857" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "3214" role = "PublishConnector" primary = "yes" linked = "no"></part>
            <part metaref = "2859" role = "Requirement" primary = "yes" linked = "no"></part>
            <part metaref = "3215" role = "deliverTo" primary = "yes" linked = "no"></part>
            <part metaref = "3216" role = "emit" primary = "yes" linked = "no"></part>
            <part metaref = "3217" role = "invoke" primary = "yes" linked = "no"></part>
            <part metaref = "3218" role = "publish" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentContainer" metaref = "2862" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidComponentContainerPartCardinality73" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentContainer, has to match 0..1.</dispname>
         </constraint>
         <role name = "ComponentConfigProperty" metaref = "2863" kind = "ComponentConfigProperty"></role>
         <role name = "ComponentInfoProperty" metaref = "2864" kind = "ComponentInfoProperty"></role>
         <role name = "ComponentProperty" metaref = "2865" kind = "ComponentProperty"></role>
         <role name = "ComponentPropertyDescription" metaref = "2866" kind = "ComponentPropertyDescription"></role>
         <role name = "ComponentType" metaref = "2867" kind = "ComponentType"></role>
         <role name = "Property" metaref = "2868" kind = "Property"></role>
         <aspect name = "Package" metaref = "2869" >
            <part metaref = "2870" role = "ComponentConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2871" role = "ComponentInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2872" role = "ComponentProperty" primary = "yes" linked = "no"></part>
            <part metaref = "2873" role = "ComponentPropertyDescription" primary = "yes" linked = "no"></part>
            <part metaref = "2874" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2875" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentFactory" metaref = "3446" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="componentfactory.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.parts ("Inherits")->size < 2]]>
            <dispname>ComponentDef and ComponentManager may have only one parent</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidComponentFactoryPartCardinality74" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidManagesComponentdstCardinality38" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let dstCount = self.attachingConnections( "src", ManagesComponent ) -> size in
                     (dstCount = 1)]]>
            <dispname>Multiplicity of objects, which are associated to ComponentFactory as "dst" over ManagesComponent, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "2940" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3132" kind = "Alias"></role>
         <role name = "Attribute" metaref = "2708" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3133" kind = "Collection"></role>
         <role name = "Constant" metaref = "3136" kind = "Constant"></role>
         <role name = "Enum" metaref = "2942" kind = "Enum"></role>
         <role name = "Exception" metaref = "2943" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2712" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2713" kind = "Inherits"></role>
         <role name = "LookupKey" metaref = "2714" kind = "LookupKey"></role>
         <role name = "LookupOperation" metaref = "2715" kind = "LookupOperation"></role>
         <role name = "OnewayOperation" metaref = "2717" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "2718" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2720" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2944" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2722" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3314" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2945" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3140" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2727" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3141" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3144" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2947" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2948" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2731" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2732" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2733" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2734" role = "LookupOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2736" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2737" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2739" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2949" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2741" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentImplementationContainer" metaref = "3227" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" priority = "2">
            <![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
(self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
            <dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
         </constraint>
         <constraint name="ValidComponentImplementationContainerPartCardinality75" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentImplementation" ) -> size + self.parts( "MonolithicImplementation" ) -> size + self.parts( "ComponentAssembly" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 1.</dispname>
         </constraint>
         <role name = "Capability" metaref = "2879" kind = "Capability"></role>
         <role name = "ComponentAssembly" metaref = "3228" kind = "ComponentAssembly"></role>
         <role name = "ComponentType" metaref = "2881" kind = "ComponentType"></role>
         <role name = "ConfigProperty" metaref = "3229" kind = "ConfigProperty"></role>
         <role name = "ImplementationCapability" metaref = "3230" kind = "ImplementationCapability"></role>
         <role name = "ImplementationDependency" metaref = "2884" kind = "ImplementationDependency"></role>
         <role name = "ImplementationDependsOn" metaref = "3231" kind = "ImplementationDependsOn"></role>
         <role name = "ImplementationRequirement" metaref = "2886" kind = "ImplementationRequirement"></role>
         <role name = "Implements" metaref = "3232" kind = "Implements"></role>
         <role name = "InfoProperty" metaref = "3233" kind = "InfoProperty"></role>
         <role name = "MonolithDeployRequirement" metaref = "3234" kind = "MonolithDeployRequirement"></role>
         <role name = "MonolithExecParameter" metaref = "3235" kind = "MonolithExecParameter"></role>
         <role name = "MonolithicImplementation" metaref = "3236" kind = "MonolithicImplementation"></role>
         <role name = "MonolithprimaryArtifact" metaref = "3237" kind = "MonolithprimaryArtifact"></role>
         <role name = "Property" metaref = "2893" kind = "Property"></role>
         <aspect name = "Package" metaref = "2894" >
            <part metaref = "2895" role = "Capability" primary = "yes" linked = "no"></part>
            <part metaref = "3238" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
            <part metaref = "2897" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3239" role = "ConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3240" role = "ImplementationCapability" primary = "yes" linked = "no"></part>
            <part metaref = "2900" role = "ImplementationDependency" primary = "yes" linked = "no"></part>
            <part metaref = "3241" role = "ImplementationDependsOn" primary = "yes" linked = "no"></part>
            <part metaref = "2902" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3242" role = "Implements" primary = "yes" linked = "no"></part>
            <part metaref = "3243" role = "InfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3244" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3245" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
            <part metaref = "3246" role = "MonolithicImplementation" primary = "yes" linked = "no"></part>
            <part metaref = "3247" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
            <part metaref = "2909" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ComponentPropertyDescription" metaref = "2910" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
         <constraint name="ValidComponentPropertyDescriptionPartCardinality76" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ComponentPropertyDescription, has to match 1.</dispname>
         </constraint>
         <aspect name = "Package" metaref = "2912" >
         </aspect>
      </model>
      <model name = "Enum" metaref = "2950" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="enum.bmp"></regnode>
         <constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
            <dispname>An enum's member names must be unique</dispname>
         </constraint>
         <constraint name="ValidEnumPartCardinality77" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by Enum, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "EnumValue" metaref = "2951" kind = "EnumValue"></role>
         <aspect name = "InterfaceDefinition" metaref = "3318" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2953" role = "EnumValue" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Event" metaref = "2954" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="event.bmp"></regnode>
         <constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "2955" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3447" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3448" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3449" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3450" kind = "Collection"></role>
         <role name = "Constant" metaref = "3451" kind = "Constant"></role>
         <role name = "Enum" metaref = "2962" kind = "Enum"></role>
         <role name = "Exception" metaref = "2963" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "2964" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "2965" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "2966" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3452" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "2968" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "2969" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "2970" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "2971" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "2972" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "2973" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3330" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "2975" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3453" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2977" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3454" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3455" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2979" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "2980" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2981" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3456" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3457" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3458" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2985" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "2986" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "2987" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "2988" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2989" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "2990" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Exception" metaref = "2991" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="exception.bmp"></regnode>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Member" metaref = "3459" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3343" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3460" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "FactoryOperation" metaref = "1927" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="factory.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2324" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3507" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3346" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2471" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3508" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "File" metaref = "2326" attributes = "PrefixTag" >
            <regnode name = "namePosition" value ="4"></regnode>
         <role name = "Aggregate" metaref = "2994" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3461" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3462" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3463" kind = "Collection"></role>
         <role name = "Component" metaref = "1939" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3464" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3465" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3114" kind = "Constant"></role>
         <role name = "Enum" metaref = "3466" kind = "Enum"></role>
         <role name = "Event" metaref = "2999" kind = "Event"></role>
         <role name = "Exception" metaref = "3000" kind = "Exception"></role>
         <role name = "FileRef" metaref = "2628" kind = "FileRef"></role>
         <role name = "ManagesComponent" metaref = "3467" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3001" kind = "Object"></role>
         <role name = "Package" metaref = "2330" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3003" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3004" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "3468" attributes = "PrefixTag" >
            <part metaref = "3005" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3469" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3470" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3471" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3472" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3473" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3474" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3115" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3008" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3010" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3475" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "2629" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3476" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3477" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2487" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3014" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3015" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ImplementationRequirement" metaref = "2957" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
         <role name = "Property" metaref = "2958" kind = "Property"></role>
         <aspect name = "Package" metaref = "2959" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
            <part metaref = "2960" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "LookupOperation" metaref = "1980" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="lookup.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2339" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3509" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3360" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2524" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3510" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Object" metaref = "3016" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="object.bmp"></regnode>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[if (self.local = true) then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (Object).local = false)
endif]]>
            <dispname>A non-local Object cannot inherit from a local one</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="NotLocalAndAbstract" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[not local or not abstract]]>
            <dispname>An ObjectDef cannot be both local and abstract</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3017" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <attrdef name="local" metaref = "3018" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3478" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3479" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3021" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3181" kind = "Collection"></role>
         <role name = "Constant" metaref = "3184" kind = "Constant"></role>
         <role name = "Enum" metaref = "3023" kind = "Enum"></role>
         <role name = "Exception" metaref = "3480" kind = "Exception"></role>
         <role name = "Inherits" metaref = "3025" kind = "Inherits"></role>
         <role name = "OnewayOperation" metaref = "3026" kind = "OnewayOperation"></role>
         <role name = "ReadonlyAttribute" metaref = "3027" kind = "ReadonlyAttribute"></role>
         <role name = "SwitchedAggregate" metaref = "3028" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3511" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3369" attributes = "VersionTag PrefixTag SpecifyIdTag local abstract" >
            <part metaref = "3481" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3482" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3033" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3483" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3484" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3485" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3036" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3037" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3038" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3039" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3040" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3041" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "OnewayOperation" metaref = "1592" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="oneway.bmp"></regnode>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "InParameter" metaref = "3512" kind = "InParameter"></role>
         <aspect name = "InterfaceDefinition" metaref = "3381" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3513" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Package" metaref = "2341" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="package.bmp"></regnode>
         <constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[self.parts ()->size > 0]]>
            <dispname>A package cannot be empty</dispname>
         </constraint>
         <constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts ()->forAll (
    x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
  )
  ]]>
            <dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Aggregate" metaref = "3486" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3487" kind = "Alias"></role>
         <role name = "Boxed" metaref = "3488" kind = "Boxed"></role>
         <role name = "Collection" metaref = "3489" kind = "Collection"></role>
         <role name = "Component" metaref = "2001" kind = "Component"></role>
         <role name = "ComponentFactory" metaref = "3490" kind = "ComponentFactory"></role>
         <role name = "ComponentRef" metaref = "3491" kind = "ComponentRef"></role>
         <role name = "Constant" metaref = "3116" kind = "Constant"></role>
         <role name = "Enum" metaref = "3492" kind = "Enum"></role>
         <role name = "Event" metaref = "3047" kind = "Event"></role>
         <role name = "Exception" metaref = "3048" kind = "Exception"></role>
         <role name = "ManagesComponent" metaref = "3493" kind = "ManagesComponent"></role>
         <role name = "Object" metaref = "3049" kind = "Object"></role>
         <role name = "Package" metaref = "2344" kind = "Package"></role>
         <role name = "SwitchedAggregate" metaref = "3051" kind = "SwitchedAggregate"></role>
         <role name = "ValueObject" metaref = "3052" kind = "ValueObject"></role>
         <aspect name = "InterfaceDefinition" metaref = "3389" attributes = "VersionTag PrefixTag SpecifyIdTag" >
            <part metaref = "3053" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3494" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3495" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3496" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3497" role = "Component" primary = "yes" linked = "no"></part>
            <part metaref = "3280" role = "ComponentFactory" primary = "yes" linked = "no"></part>
            <part metaref = "3281" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3117" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3056" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3058" role = "Event" primary = "yes" linked = "no"></part>
            <part metaref = "3059" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3282" role = "ManagesComponent" primary = "yes" linked = "no"></part>
            <part metaref = "3060" role = "Object" primary = "yes" linked = "no"></part>
            <part metaref = "2550" role = "Package" primary = "yes" linked = "no"></part>
            <part metaref = "3062" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3063" role = "ValueObject" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageConfigurationContainer" metaref = "2974" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="PackageConfXor" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1 
  xor self.referenceParts(ComponentPackageReference)->size = 1 
  xor self.atomParts(ComponentPackage)->size = 1]]>
            <dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality78" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality79" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality80" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality81" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidPackageConfigurationContainerPartCardinality82" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
         </constraint>
         <role name = "ComponentPackage" metaref = "3249" kind = "ComponentPackage"></role>
         <role name = "ComponentPackageReference" metaref = "3250" kind = "ComponentPackageReference"></role>
         <role name = "PackageConfBasePackage" metaref = "3251" kind = "PackageConfBasePackage"></role>
         <role name = "PackageConfConfigProperty" metaref = "3252" kind = "PackageConfConfigProperty"></role>
         <role name = "PackageConfReference" metaref = "3253" kind = "PackageConfReference"></role>
         <role name = "PackageConfSelectRequirement" metaref = "3254" kind = "PackageConfSelectRequirement"></role>
         <role name = "PackageConfSpecializedConfig" metaref = "3255" kind = "PackageConfSpecializedConfig"></role>
         <role name = "PackageConfiguration" metaref = "3291" kind = "PackageConfiguration"></role>
         <role name = "Property" metaref = "2982" kind = "Property"></role>
         <role name = "Requirement" metaref = "2983" kind = "Requirement"></role>
         <aspect name = "Package" metaref = "2984" >
            <part metaref = "3256" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3257" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
            <part metaref = "3258" role = "PackageConfBasePackage" primary = "yes" linked = "no"></part>
            <part metaref = "3259" role = "PackageConfConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3260" role = "PackageConfReference" primary = "yes" linked = "no"></part>
            <part metaref = "3261" role = "PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
            <part metaref = "3292" role = "PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
            <part metaref = "3293" role = "PackageConfiguration" primary = "yes" linked = "no"></part>
            <part metaref = "2992" role = "Property" primary = "yes" linked = "no"></part>
            <part metaref = "2993" role = "Requirement" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "PackageContainer" metaref = "3262" >
            <regnode name = "namePosition" value ="4"></regnode>
         <constraint name="ValidPackageContainerPartCardinality83" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageInterface" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidPackageContainerPartCardinality84" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 1.</dispname>
         </constraint>
         <role name = "ComponentImplementationReference" metaref = "3263" kind = "ComponentImplementationReference"></role>
         <role name = "ComponentPackage" metaref = "3264" kind = "ComponentPackage"></role>
         <role name = "ComponentType" metaref = "2997" kind = "ComponentType"></role>
         <role name = "Implementation" metaref = "3265" kind = "Implementation"></role>
         <role name = "PackageConfigProperty" metaref = "3266" kind = "PackageConfigProperty"></role>
         <role name = "PackageInfoProperty" metaref = "3267" kind = "PackageInfoProperty"></role>
         <role name = "PackageInterface" metaref = "3268" kind = "PackageInterface"></role>
         <role name = "Property" metaref = "3002" kind = "Property"></role>
         <aspect name = "Package" metaref = "3395" >
            <part metaref = "3269" role = "ComponentImplementationReference" primary = "yes" kindaspect = "Package" linked = "no"></part>
            <part metaref = "3270" role = "ComponentPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3006" role = "ComponentType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3271" role = "Implementation" primary = "yes" linked = "no"></part>
            <part metaref = "3272" role = "PackageConfigProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3273" role = "PackageInfoProperty" primary = "yes" linked = "no"></part>
            <part metaref = "3274" role = "PackageInterface" primary = "yes" linked = "no"></part>
            <part metaref = "3011" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Property" metaref = "3012" attributes = "DataValue" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Property.bmp"></regnode>
         <constraint name="ValidPropertyPartCardinality85" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by Property, has to match 1.</dispname>
         </constraint>
         <aspect name = "Package" metaref = "3396" attributes = "DataValue" >
         </aspect>
      </model>
      <model name = "ReadonlyAttribute" metaref = "1626" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
         <constraint name="ValidReadonlyAttributePartCardinality86" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "AttributeMember" metaref = "3498" kind = "AttributeMember"></role>
         <role name = "GetException" metaref = "2267" kind = "GetException"></role>
         <aspect name = "InterfaceDefinition" metaref = "3398" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3284" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "2564" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "Requirement" metaref = "3019" attributes = "resourceType" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="Requirement.bmp"></regnode>
         <role name = "Property" metaref = "3020" kind = "Property"></role>
         <aspect name = "Package" metaref = "3400" attributes = "resourceType" >
            <part metaref = "3022" role = "Property" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "SatisfierProperty" metaref = "3024" attributes = "DataValue SatisfierPropertyKind" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
         <constraint name="ValidSatisfierPropertyPartCardinality87" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SatisfierProperty, has to match 1.</dispname>
         </constraint>
         <aspect name = "Package" metaref = "3401" attributes = "DataValue SatisfierPropertyKind" >
         </aspect>
      </model>
      <model name = "SwitchedAggregate" metaref = "3064" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
         <constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
            <![CDATA[parts (Member)->forAll (
    x : gme::FCO | let labels = x.connectedFCOs ()
                                in
    labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
)]]>
            <dispname>A default member cannot have multiple labels</dispname>
         </constraint>
         <constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[referenceParts (Discriminator) -> forAll (
    x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
                                     x.refersTo ().isTypeOf (Boolean) or
                                     x.refersTo ().isTypeOf (ShortInteger) or
                                     x.refersTo ().isTypeOf (LongInteger))]]>
            <dispname>Discriminator must have integer, character, boolean or enum type</dispname>
         </constraint>
         <constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
            <![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
            <dispname>Labels in the same scope must be unique</dispname>
         </constraint>
         <constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
            <dispname>Members of an aggregate type must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality88" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality89" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
         </constraint>
         <constraint name="ValidSwitchedAggregatePartCardinality90" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "Discriminator" metaref = "3499" kind = "Discriminator"></role>
         <role name = "Label" metaref = "3066" kind = "Label"></role>
         <role name = "LabelConnection" metaref = "3067" kind = "LabelConnection"></role>
         <role name = "Member" metaref = "3500" kind = "Member"></role>
         <aspect name = "InterfaceDefinition" metaref = "3404" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "3501" role = "Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3071" role = "Label" primary = "yes" linked = "no"></part>
            <part metaref = "3072" role = "LabelConnection" primary = "yes" linked = "no"></part>
            <part metaref = "3502" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TopLevelPackageContainer" metaref = "3029" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
         <constraint name="ValidTopLevelPackageContainerPartCardinality91" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidTopLevelPackageContainerPartCardinality92" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "package" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidTopLevelPackageContainerPartCardinality93" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
            <dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 1.</dispname>
         </constraint>
         <role name = "PackageConfigurationReference" metaref = "3030" kind = "PackageConfigurationReference"></role>
         <role name = "TopLevelPackage" metaref = "3031" kind = "TopLevelPackage"></role>
         <role name = "package" metaref = "3275" kind = "package"></role>
         <aspect name = "Package" metaref = "3407" >
            <part metaref = "3034" role = "PackageConfigurationReference" primary = "yes" linked = "no"></part>
            <part metaref = "3035" role = "TopLevelPackage" primary = "yes" linked = "no"></part>
            <part metaref = "3276" role = "package" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <model name = "TwowayOperation" metaref = "2040" attributes = "VersionTag SpecifyIdTag" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="twoway.bmp"></regnode>
         <constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let x = self.referenceParts (ExceptionRef) in
x->size > 0 implies 
x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
            <dispname>An operation's exception list cannot have repeated names</dispname>
         </constraint>
         <constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>An operation's parameters must have unique names</dispname>
         </constraint>
         <constraint name="ValidTwowayOperationPartCardinality94" eventmask = "0x0" depth = "1" priority = "1">
            <![CDATA[let partCount = self.parts( "ReturnType" ) -> size in
                     (partCount <= 1)]]>
            <dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..1.</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <role name = "ExceptionRef" metaref = "2348" kind = "ExceptionRef"></role>
         <role name = "InParameter" metaref = "3514" kind = "InParameter"></role>
         <role name = "InoutParameter" metaref = "3515" kind = "InoutParameter"></role>
         <role name = "OutParameter" metaref = "3516" kind = "OutParameter"></role>
         <role name = "ReturnType" metaref = "3517" kind = "ReturnType"></role>
         <aspect name = "InterfaceDefinition" metaref = "3412" attributes = "VersionTag SpecifyIdTag" >
            <part metaref = "2588" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3518" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3519" role = "InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3520" role = "OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3219" role = "ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
         </aspect>
      </model>
      <model name = "ValueObject" metaref = "3074" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <regnode name = "namePosition" value ="4"></regnode>
            <regnode name = "icon" value ="value.bmp"></regnode>
         <constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[let concrete_parents = 
  self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
  in
if (self.abstract = true) then
  concrete_parents->size = 0
else
  concrete_parents->size < 2
endif]]>
            <dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
         </constraint>
         <constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
            <dispname>A parent must have the same type as its child</dispname>
         </constraint>
         <constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
            <dispname>Immediate parents must all be unique</dispname>
         </constraint>
         <constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
            <dispname>There is a cycle in the inheritance graph</dispname>
         </constraint>
         <constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
            <![CDATA[(parts () - parts ("Inherits") - parts ("Supports"))->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
            <dispname>Declarations in a scope must have unique names</dispname>
         </constraint>
         <constraint name="ValidIdentifier" eventmask = "0x80000011" depth = "1" priority = "1">
            <![CDATA[name.trim().match( "^[_]?[a-zA-Z][_a-zA-Z0-9]*$" )]]>
            <dispname>Not a valid identifier</dispname>
         </constraint>
         <constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
            <![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^( 0  |  ( [1-9] [0-9]* ) ) \. ( 0 | ( [1-9] [0-9]* ) ) $")]]>
            <dispname>Version must be a valid decimal number</dispname>
         </constraint>
         <attrdef name="abstract" metaref = "3075" valuetype = "boolean" defvalue = "false">
         </attrdef>
         <role name = "Aggregate" metaref = "3078" kind = "Aggregate"></role>
         <role name = "Alias" metaref = "3220" kind = "Alias"></role>
         <role name = "Attribute" metaref = "3080" kind = "Attribute"></role>
         <role name = "Collection" metaref = "3221" kind = "Collection"></role>
         <role name = "Constant" metaref = "3224" kind = "Constant"></role>
         <role name = "Enum" metaref = "3082" kind = "Enum"></role>
         <role name = "Exception" metaref = "3083" kind = "Exception"></role>
         <role name = "FactoryOperation" metaref = "3084" kind = "FactoryOperation"></role>
         <role name = "Inherits" metaref = "3085" kind = "Inherits"></role>
         <role name = "MakeMemberPrivate" metaref = "3086" kind = "MakeMemberPrivate"></role>
         <role name = "Member" metaref = "3226" kind = "Member"></role>
         <role name = "OnewayOperation" metaref = "3088" kind = "OnewayOperation"></role>
         <role name = "PrivateFlag" metaref = "3089" kind = "PrivateFlag"></role>
         <role name = "ReadonlyAttribute" metaref = "3090" kind = "ReadonlyAttribute"></role>
         <role name = "Supports" metaref = "3091" kind = "Supports"></role>
         <role name = "SwitchedAggregate" metaref = "3092" kind = "SwitchedAggregate"></role>
         <role name = "TwowayOperation" metaref = "3093" kind = "TwowayOperation"></role>
         <aspect name = "InterfaceDefinition" metaref = "3418" attributes = "VersionTag PrefixTag SpecifyIdTag abstract" >
            <part metaref = "3095" role = "Aggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3503" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3097" role = "Attribute" primary = "yes" linked = "no"></part>
            <part metaref = "3504" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3505" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3099" role = "Enum" primary = "yes" linked = "no"></part>
            <part metaref = "3100" role = "Exception" primary = "yes" linked = "no"></part>
            <part metaref = "3101" role = "FactoryOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3102" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3103" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
            <part metaref = "3506" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3105" role = "OnewayOperation" primary = "yes" linked = "no"></part>
            <part metaref = "3106" role = "PrivateFlag" primary = "yes" linked = "no"></part>
            <part metaref = "3107" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
            <part metaref = "3108" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
            <part metaref = "3109" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
            <part metaref = "3110" role = "TwowayOperation" primary = "yes" linked = "no"></part>
         </aspect>
      </model>
      <folder name = "ComponentImplementations" metaref = "3277"  rootobjects = "ComponentImplementationContainer" >
      </folder>
      <folder name = "ComponentPackages" metaref = "3278"  rootobjects = "PackageContainer" >
      </folder>
      <folder name = "ComponentTypes" metaref = "3042"  rootobjects = "ComponentContainer" >
      </folder>
      <folder name = "ImplementationArtifacts" metaref = "3279"  rootobjects = "ArtifactContainer" >
      </folder>
      <folder name = "InterfaceDefinitions" metaref = "2775"  rootobjects = "File" >
         <constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
            <![CDATA[allFileScopeDecls ()->forAll (
    x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
  )]]>
            <dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
         </constraint>
      </folder>
      <folder name = "PackageConfigurations" metaref = "3045"  rootobjects = "PackageConfigurationContainer" >
      </folder>
      <folder name = "PredefinedTypes" metaref = "3111"  rootobjects = "Boolean Byte GenericObject GenericValue GenericValueObject LongInteger RealNumber ShortInteger String TypeEncoding TypeKind" >
      </folder>
      <folder name = "TopLevelPackageFolder" metaref = "3046"  rootobjects = "TopLevelPackageContainer" >
      </folder>
   </folder>
</paradigm>
