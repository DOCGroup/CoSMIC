<?xml version="1.0"?>
<!DOCTYPE paradigm SYSTEM "edf.dtd">

<paradigm name="PICML" guid="{746613C5-B98D-470C-B1E6-AA842DB68D7A}" cdate="Mon May 17 16:25:05 2010" mdate="WhoControlsThisObj" >

	<comment>Platform-Independent Component Modeling Language (PICML) is a domain-specific
modeling language that allows design, packaging and deployment of component 
middleware-based applications.</comment>

	<author>DOC Group at Vanderbilt University</author>

	<folder name = "RootFolder" metaref = "1000"  subfolders = "ComponentAnalyses ComponentBuild ComponentFactoryImplementations ComponentImplementations ComponentPackages ComponentTypes ConnectorImplementations DeploymentPlans ImplementationArtifacts InterfaceDefinitions PackageConfigurations PathDiagrams PredefinedTypes Targets TopLevelPackages WorkerLibraries" >
		<constraint name="UniqueComponentInstanceIds" eventmask = "0x0" depth = "1" priority = "2">
			<![CDATA[let instances = project.allInstancesOf (ComponentInstance) in
instances->isUnique (x : ComponentInstance | x.UUID.trim ())

           ]]>
			<dispname>Every Component instance should have a unique UUID</dispname>
		</constraint>
		<constraint name="UniqueUUIDImplementationArtifact" eventmask = "0x0" depth = "1" priority = "2">
			<![CDATA[let artifacts = self.atoms (ImplementationArtifact) in
  artifacts->isUnique (i : ImplementationArtifact | i.UUID.trim())
  ]]>
			<dispname>All implementation artifacts in a project must an unique UUID</dispname>
		</constraint>
		<constraint type="function" name="AllParams">
			<![CDATA[method;gme::Model;;ocl::Set;
			parts (InParameter) + parts (InoutParameter) + parts (OutParameter)]]>
		</constraint>
		<constraint type="function" name="ArtifactNotEqual">
			<![CDATA[method;meta::ImplementationArtifact;j: ImplementationArtifact;ocl::Boolean;
			self.operatingSystem <> j.operatingSystem or
self.configuration <> j.configuration or
self.artifactVersion.trim() <> j.artifactVersion.trim() or
self.architecture <> j.architecture ]]>
		</constraint>
		<constraint type="function" name="ComponentParentType">
			<![CDATA[method;gme::FCO;;gme::FCO;
			if self.isInstance()
then
   let myType = self.type() in
   if myType.isType()
   then
      myType
   else
      myType.ComponentParentType()
   endif
else
   self
endif]]>
		</constraint>
		<constraint type="function" name="MonolithicImpls">
			<![CDATA[method;gme::Atom;;ocl::Set;
			self.connectedFCOs(Implementation)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="allAscendants">
			<![CDATA[method;gme::Model;visited: ocl::Set;ocl::Set;
			let parents = self.ascendants() in
   let visited = visited.including(self) in
   parents->iterate( i : gme::Model ; accu = Set{} |
      if ( visited.includes(i) or i = self ) then
         accu.including(i)
      else
         accu.including(i) + i.allAscendants(visited)
      endif
)]]>
		</constraint>
		<constraint type="function" name="allFileScopeDecls">
			<![CDATA[method;gme::Folder;;ocl::Set;
			let closure = self.models (File) in
          if (closure->size < 1) then
          Set{}
          else
          closure->iterate (x ; accu = Set{} | accu
          + x.parts ()
          - x.parts (FileRef)
          - x.parts (ComponentRef)
          - x.parts (ManagesComponent))
          endif]]>
		</constraint>
		<constraint type="function" name="allOps">
			<![CDATA[method;gme::Model;top: gme::Model;ocl::Set;
			let ret = localOps () + inheritedOps (top) + supportedOps () + inheritedSupportedOps () in
          ret]]>
		</constraint>
		<constraint type="function" name="ascendants">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.referenceParts(Inherits)->iterate
 (i: gme::Reference; acc = Set{} | acc + Set{i.refersTo()})]]>
		</constraint>
		<constraint type="function" name="inheritedOps">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let parents = self.referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          if (parent == top) then Set{}
          else
          parent.localOps () + parent.inheritedOps (top)
          endif))]]>
		</constraint>
		<constraint type="function" name="inheritedSupportedOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			let parents= referenceParts ("Inherits") in
          parents->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          parent.supportedOps () + parent.inheritedSupportedOps ()))]]>
		</constraint>
		<constraint type="function" name="inheritsRecursive">
			<![CDATA[method;gme::Model;top : gme::Model;ocl::Set;
			let inherits = referenceParts ("Inherits") in
          inherits->iterate (ref; accu = Set{} | accu +
          (let parent = ref.refersTo ().oclAsType (gme::Model) in
          Set {parent} +
          (if (parent != top) then parent.inheritsRecursive (top)
          else Set {}
          endif)))]]>
		</constraint>
		<constraint type="function" name="isChildNode">
			<![CDATA[method;gme::Object;obj : gme::Object;ocl::Boolean;
			if self = obj then
  true
else
  let parent = obj.parent () in

  if not parent.isNull () then
    self.isChildNode (parent)
  else
    false
  endif
endif]]>
		</constraint>
		<constraint type="function" name="localOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			self.parts ("OnewayOperation") + self.parts ("TwowayOperation") +
          self.parts ("FactoryOperation") + self.parts ("LookupOperation")]]>
		</constraint>
		<constraint type="function" name="supportedOps">
			<![CDATA[method;gme::Model;;ocl::Set;
			let supported_set = referenceParts ("Supports") in
          supported_set->iterate (ref; accu = Set{} | accu +
          (let supported = ref.refersTo ().oclAsType (gme::Model) in
          supported.localOps () + supported.inheritedOps (supported)))]]>
		</constraint>
		<attrdef name="Abstract" metaref = "5155" valuetype = "boolean" defvalue = "false">
			<dispname>Abstract:</dispname>
			<regnode name="help" value = "Flag that specifys if the worker is abstract. An abstract worker is one that cannot be used directly in a class as a worker. However, it can be subclassed by other workers."></regnode>
		</attrdef>
		<attrdef name="Condition" metaref = "5156" valuetype = "string" defvalue = "">
			<dispname>Condition:</dispname>
			<regnode name="help" value = "Expression that determines if branch is executed."></regnode>
		</attrdef>
		<attrdef name="ConfigureRTQoS" metaref = "3818" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="ConsumerBasedFiltering" metaref = "3819" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="DataValue" metaref = "1001" valuetype = "string" defvalue = "">
			<dispname>value</dispname>
		</attrdef>
		<attrdef name="DisconnectDanglingConnections" metaref = "3820" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="DispatchingMultithreadingLevel" metaref = "3821" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="Distribution" metaref = "5157" valuetype = "enum" defvalue = "Constant">
			<enumitem dispname = "Constant" value = "Constant"></enumitem>
			<enumitem dispname = "Exponential" value = "Exponential"></enumitem>
		</attrdef>
		<attrdef name="Duration" metaref = "5158" valuetype = "integer" defvalue = "">
			<dispname>Duration:</dispname>
			<regnode name="help" value = "Specifies how long the action should take to execute.  This is useful when measuring the execution time of an action, or using the action in a timed simulation."></regnode>
		</attrdef>
		<attrdef name="ECFilterType" metaref = "3822" valuetype = "enum" defvalue = "DISJUNCTION">
			<enumitem dispname = "DISJUNCTION" value = "DISJUNCTION"></enumitem>
			<enumitem dispname = "CONJUNCTION" value = "CONJUNCTION"></enumitem>
			<enumitem dispname = "LOGICAL_AND" value = "LOGICAL_AND"></enumitem>
		</attrdef>
		<attrdef name="EntryPoint" metaref = "4224" valuetype = "string" defvalue = "">
			<dispname>Entrypoint:</dispname>
			<regnode name="help" value = "Defines the entrypoint for the implementation from the referenced artifact"></regnode>
		</attrdef>
		<attrdef name="Hertz" metaref = "5159" valuetype = "string" defvalue = "10">
			<dispname>Hertz</dispname>
			<regnode name="help" value = "Number of events per second generated by this object"></regnode>
		</attrdef>
		<attrdef name="IncrementExpr" metaref = "5160" valuetype = "string" defvalue = "">
			<dispname>Increment Expression:</dispname>
			<regnode name="help" value = "Determines how to increment/iterate over the for loop."></regnode>
		</attrdef>
		<attrdef name="InitialCondition" metaref = "5161" valuetype = "string" defvalue = "">
			<dispname>Initial Condition:</dispname>
			<regnode name="help" value = "Initial condition for the for loop, if applicable."></regnode>
		</attrdef>
		<attrdef name="InitialValue" metaref = "5162" valuetype = "string" defvalue = "">
			<dispname>Initial Value</dispname>
			<regnode name="help" value = "Initial value of the variable"></regnode>
		</attrdef>
		<attrdef name="InnerName" metaref = "5759" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="InterfaceSemantics" metaref = "4360" valuetype = "enum" defvalue = "standard">
			<dispname>Interface semantics</dispname>
			<enumitem dispname = "standard" value = "standard"></enumitem>
			<enumitem dispname = "abstract" value = "abstract"></enumitem>
			<enumitem dispname = "local" value = "local"></enumitem>
		</attrdef>
		<attrdef name="Location" metaref = "5163" valuetype = "string" defvalue = "">
			<dispname>Location</dispname>
			<regnode name="help" value = "Specifies the location of the object on disk. It can be a relative or absolute location."></regnode>
		</attrdef>
		<attrdef name="LogAction" metaref = "5164" valuetype = "boolean" defvalue = "false">
			<dispname>Enable Logging:</dispname>
			<regnode name="help" value = "This determines whether or not to log an action. The semantics of logging is dependent on the interpreter."></regnode>
		</attrdef>
		<attrdef name="LoopingCondition" metaref = "5165" valuetype = "string" defvalue = "">
			<dispname>Looping Condition:</dispname>
			<regnode name="help" value = "Looping condition for the loop control block."></regnode>
		</attrdef>
		<attrdef name="MultithreadedConsumer" metaref = "3823" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="MultithreadedSupplier" metaref = "3824" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="ORBServices" metaref = "1022" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="Path" metaref = "5760" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="PostPreprocessorDirectives" metaref = "5761" valuetype = "string" defvalue = "">
			<regnode name="multiLine" value = "5"></regnode>
		</attrdef>
		<attrdef name="Postcondition" metaref = "5166" valuetype = "string" defvalue = "">
			<dispname>Effects:</dispname>
			<regnode name="multiLine" value = "10"></regnode>
			<regnode name="help" value = "Defines the effects of executing the previous action."></regnode>
		</attrdef>
		<attrdef name="PrePreprocessorDirectives" metaref = "5762" valuetype = "string" defvalue = "">
			<regnode name="multiLine" value = "5"></regnode>
		</attrdef>
		<attrdef name="PrefixTag" metaref = "1023" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="ResourceUsageKind" metaref = "1024" valuetype = "enum" defvalue = "None">
			<dispname>resourceUsage</dispname>
			<enumitem dispname = "None" value = "None"></enumitem>
			<enumitem dispname = "InstanceUsesResource" value = "InstanceUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesInstance" value = "ResourceUsesInstance"></enumitem>
			<enumitem dispname = "PortUsesResource" value = "PortUsesResource"></enumitem>
			<enumitem dispname = "ResourceUsesPort" value = "ResourceUsesPort"></enumitem>
		</attrdef>
		<attrdef name="SatisfierPropertyKind" metaref = "1025" valuetype = "enum" defvalue = "Quantity">
			<dispname>kind</dispname>
			<enumitem dispname = "Quantity" value = "Quantity"></enumitem>
			<enumitem dispname = "Capacity" value = "Capacity"></enumitem>
			<enumitem dispname = "Minimum" value = "Minimum"></enumitem>
			<enumitem dispname = "Maximum" value = "Maximum"></enumitem>
			<enumitem dispname = "Selection" value = "Selection"></enumitem>
			<enumitem dispname = "Attribute" value = "Attribute"></enumitem>
		</attrdef>
		<attrdef name="Size" metaref = "5513" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="SpecifyIdTag" metaref = "1026" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="SupplierBasedFiltering" metaref = "3825" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="UUID" metaref = "1027" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="VersionTag" metaref = "1028" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="architecture" metaref = "4171" valuetype = "string" defvalue = "">
			<dispname>Architecture:</dispname>
			<regnode name="help" value = "Set the architecture for the element (e.g., x86, PowerPC, or MIPS)"></regnode>
		</attrdef>
		<attrdef name="artifactVersion" metaref = "3884" valuetype = "string" defvalue = "0.0.0.0">
			<dispname>Articfact Version:</dispname>
			<regnode name="help" value = "Set the version number of the artifact (e.g., 2.1.0.124)"></regnode>
		</attrdef>
		<attrdef name="benchmarkIterations" metaref = "1029" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="bound" metaref = "4103" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="buffer_service_requests" metaref = "3929" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="componentPort" metaref = "1031" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="configuration" metaref = "4172" valuetype = "string" defvalue = "">
			<dispname>Configuration:</dispname>
			<regnode name="help" value = "Set the configuration of the artifact (e.g., debug or release)"></regnode>
		</attrdef>
		<attrdef name="defaultVersion" metaref = "3885" valuetype = "string" defvalue = "0.0.0.0">
		</attrdef>
		<attrdef name="dynamic" metaref = "3175" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveProvider" metaref = "1036" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="exclusiveUser" metaref = "1037" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="fileName" metaref = "1038" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="fixed_prioirty_service_execution" metaref = "3930" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="initial_thread_number" metaref = "3826" valuetype = "integer" defvalue = "2">
			<dispname>Steady state number of threads</dispname>
		</attrdef>
		<attrdef name="iterations" metaref = "1041" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="label" metaref = "1042" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="libraryexport" metaref = "1043" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="location" metaref = "1044" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="maximum_simultaneous_service_level" metaref = "3931" valuetype = "integer" defvalue = "127">
		</attrdef>
		<attrdef name="minimum_simultaneous_service_level" metaref = "3932" valuetype = "integer" defvalue = "2">
		</attrdef>
		<attrdef name="operatingSystem" metaref = "4173" valuetype = "string" defvalue = "">
			<dispname>Operating System:</dispname>
			<regnode name="help" value = "Set the operating system of the element (e.g, WinVista, Linux, or SuSE10)"></regnode>
		</attrdef>
		<attrdef name="optional" metaref = "1045" valuetype = "boolean" defvalue = "false">
		</attrdef>
		<attrdef name="out_event_port_type" metaref = "5314" valuetype = "enum" defvalue = "DirectConnect">
			<enumitem dispname = "DirectConnect" value = "DirectConnect"></enumitem>
			<enumitem dispname = "RTEventChannel" value = "RTEventChannel"></enumitem>
		</attrdef>
		<attrdef name="prioritize_service_invocations" metaref = "3933" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="priority" metaref = "1048" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="rate" metaref = "1050" valuetype = "integer" defvalue = "-1">
		</attrdef>
		<attrdef name="requiredName" metaref = "1051" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredType" metaref = "1052" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="requiredUUID" metaref = "1053" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resolution" metaref = "1054" valuetype = "enum" defvalue = "microseconds">
			<enumitem dispname = "seconds" value = "seconds"></enumitem>
			<enumitem dispname = "miliseconds" value = "miliseconds"></enumitem>
			<enumitem dispname = "microseconds" value = "microseconds"></enumitem>
		</attrdef>
		<attrdef name="resourcePort" metaref = "1055" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="resourceType" metaref = "1056" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="rolekind" metaref = "4006" valuetype = "enum" defvalue = "CONSUMER">
			<enumitem dispname = "SUPPLIER" value = "SUPPLIER"></enumitem>
			<enumitem dispname = "CONSUMER" value = "CONSUMER"></enumitem>
		</attrdef>
		<attrdef name="sharedname" metaref = "1057" valuetype = "string" defvalue = "">
		</attrdef>
		<attrdef name="simultaneous_service_execution" metaref = "3934" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="timeperiod" metaref = "1059" valuetype = "integer" defvalue = "">
		</attrdef>
		<attrdef name="varying_service_levels" metaref = "3935" valuetype = "boolean" defvalue = "true">
		</attrdef>
		<attrdef name="warmup" metaref = "1061" valuetype = "integer" defvalue = "">
		</attrdef>
		<atom name = "ApplicationTask" metaref = "5167" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidInputdstCardinality80" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SingleInputBase as &quot;dst&quot; over Input, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ApplicationTask.gif"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "Average" metaref = "1063" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Average.bmp"></regnode>
		</atom>
		<atom name = "Boolean" metaref = "1064" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="boolean.bmp"></regnode>
		</atom>
		<atom name = "BranchState" metaref = "5168" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidTerminalEffectsrcCardinality141" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TerminalEffect ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to StateBase as &quot;src&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="BranchState.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "Byte" metaref = "1065" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="byte.bmp"></regnode>
		</atom>
		<atom name = "Char" metaref = "5778" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "ComponentPackage" metaref = "1066"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="SingleComponentInteface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs(PackageInterface)->size() = 1 
or
self.connectedFCOs(Implementation)->forAll (i : Reference | i.refersTo().kindName() = "ComponentAssembly")
]]>
				<dispname>A ComponentPackage that contains a reference to a MonolithicImplementation should also refer to the corresponding component interface</dispname>
			</constraint>
			<constraint name="UniqueMonolithicImpls" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let impls = self.bagConnectedFCOs(Implementation) in
   impls->forAll (i, j : ComponentImplementationReference | 
                (i.name().trim() = j.name().trim() => i = j) and 
                (i.refersTo() = j.refersTo() => i = j ) )]]>
				<dispname>Monolithic Implementations of a ComponentPackage should be unique</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (ComponentPackage) in
   packages->isUnique (i : ComponentPackage | i.UUID.trim() )]]>
				<dispname>Every Component Package should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidImplementationdstCardinality70" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Implementation ) -> size in
                     (dstCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentPackage as &quot;dst&quot; over Implementation, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPackageInterfacedstCardinality124" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PackageInterface ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentPackage as &quot;dst&quot; over PackageInterface, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ComponentPackage.bmp"></regnode>
		</atom>
		<atom name = "ConnectorImplementation" metaref = "5169"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "DisplayNode" metaref = "2844" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="vertex.bmp"></regnode>
		</atom>
		<atom name = "DoWhileState" metaref = "5170"  attributes = "LoopingCondition">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidLoopTransitiondstCardinality94" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::LoopTransition ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to LoopState as &quot;dst&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTerminalEffectsrcCardinality141" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TerminalEffect ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to StateBase as &quot;src&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="DoWhileState.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "DoubleNumber" metaref = "4266" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="DoubleNumber.bmp"></regnode>
		</atom>
		<atom name = "ECBehavior" metaref = "3831"  attributes = "DisconnectDanglingConnections ConsumerBasedFiltering SupplierBasedFiltering MultithreadedSupplier MultithreadedConsumer DispatchingMultithreadingLevel">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "ECRole" metaref = "4007"  attributes = "ECFilterType rolekind">
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "Edge" metaref = "2089" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidDstEdgesrcCardinality51" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::DstEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Edge as &quot;src&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgedstCardinality138" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::SrcEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Edge as &quot;dst&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
		</atom>
		<atom name = "EnumValue" metaref = "1069" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="enumvalue.bmp"></regnode>
		</atom>
		<atom name = "Environment" metaref = "5171" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="environment.gif"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "ExternalPort" metaref = "5551"  attributes = "location">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="HasLocation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.location.trim ().size > 0]]>
				<dispname>External ports must define a location</dispname>
			</constraint>
			<constraint name="MatchingExternalPort" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let ports = self.connectedFCOs (ExternalDelegate)  in
ports->forAll ( p1, p2 : gme::Reference |  
  let p1type : Reference = p1.refersTo () in
  let p2type : Reference = p2.refersTo () in
 
  p1type.refersTo () = p2type.refersTo ())]]>
				<dispname>All ports connected to an external port must be of the same type</dispname>
			</constraint>
				<regnode name = "icon" value ="ExternalReferenceEndPoint.bmp"></regnode>
		</atom>
		<atom name = "FixedIterationBenchmarks" metaref = "1071"  attributes = "benchmarkIterations">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality24" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as &quot;dst&quot; over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Discrete-Benchmark.bmp"></regnode>
		</atom>
		<atom name = "FloatNumber" metaref = "4267" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="FloatNumber.bmp"></regnode>
		</atom>
		<atom name = "ForState" metaref = "5172"  attributes = "InitialCondition LoopingCondition IncrementExpr">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidLoopTransitiondstCardinality94" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::LoopTransition ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to LoopState as &quot;dst&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTerminalEffectsrcCardinality141" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TerminalEffect ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to StateBase as &quot;src&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ForState.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "GenericObject" metaref = "1072" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="genericobject.bmp"></regnode>
		</atom>
		<atom name = "GenericValue" metaref = "1073" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="genericvalue.bmp"></regnode>
		</atom>
		<atom name = "GenericValueObject" metaref = "1074" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="genericvalueobject.bmp"></regnode>
		</atom>
		<atom name = "ImplementationArtifact" metaref = "1075"  attributes = "UUID label configuration artifactVersion operatingSystem architecture location">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniqueDependencies" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependsOn) in
   artifacts->forAll (i,j : ImplementationArtifactReference | 
           i.refersTo() = j.refersTo() => i = j)
                  ]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="UniqueDependentArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(ArtifactDependency) in
   artifacts->forAll (i,j : ImplementationArtifact |
                      i.name().trim() = j.name().trim() => i = j)]]>
				<dispname>Dependent artifacts of an implementation artifact should be unique</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let digit = "[0-9]" in
let twodigits = digit + digit in
let threedigits = twodigits + digit in
let fourdigits = threedigits + digit in
let singleversion = "(" + digit + "|" + twodigits + "|" + threedigits + "|" + fourdigits + "|" 
                    + "[0-5]" + fourdigits + "|"
                    + "6[0-4]" + threedigits + "|"
                    + "65[0-4]" + twodigits + "|"
                    + "655[0-2]" + digit + "|"
                    + "65553[0-5]" + ")" in
let version = self.artifactVersion.trim() in
   version.match(singleversion + "\." + singleversion + "\." + singleversion + "\." + singleversion + "$")]]>
				<dispname>Version should be of the form n.n.n.n, where 0 &lt;= n &lt;= 65535</dispname>
			</constraint>
				<regnode name = "icon" value ="ImplementationArtifact.bmp"></regnode>
		</atom>
		<atom name = "ImplementationDependency" metaref = "1076"  attributes = "requiredType">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationDependency.bmp"></regnode>
		</atom>
		<atom name = "InEventPortDelegate" metaref = "5552" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidEventSinkDelegatedstCardinality58" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::EventSinkDelegate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InEventPortDelegate as &quot;dst&quot; over EventSinkDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEventSinkDelegatesrcCardinality57" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::EventSinkDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InEventPortEnd as &quot;src&quot; over EventSinkDelegate, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="ineventport.bmp"></regnode>
		</atom>
		<atom name = "Jitter" metaref = "1077" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Jitter.bmp"></regnode>
		</atom>
		<atom name = "Key" metaref = "5763" >
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "Label" metaref = "1078" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidLabelConnectionsrcCardinality91" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::LabelConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to Label as &quot;src&quot; over LabelConnection, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="label.bmp"></regnode>
		</atom>
		<atom name = "LongDoubleNumber" metaref = "5771" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "LongInteger" metaref = "1080" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="long.bmp"></regnode>
		</atom>
		<atom name = "LongLongInteger" metaref = "5772" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "Maximum" metaref = "1081" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Max.bmp"></regnode>
		</atom>
		<atom name = "Minimum" metaref = "1082" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Min.bmp"></regnode>
		</atom>
		<atom name = "MonolithicImplementation" metaref = "5315"  attributes = "UUID label defaultVersion">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="HasExecutorArtifact" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.connectedFCOs (MonolithprimaryArtifact) in
artifacts->one (iter : gme::Reference | iter.kindName = "ComponentImplementationArtifact")]]>
				<dispname>Each monolithic implementation must be connected to one ComponentImplementationArtifact</dispname>
			</constraint>
			<constraint name="HasServantArtifact" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.connectedFCOs (MonolithprimaryArtifact) in
artifacts->one (iter : gme::Reference | iter.kindName = "ComponentServantArtifact")]]>
				<dispname>Each monolithic implementation must be connected to one ComponentServantArtifact</dispname>
			</constraint>
			<constraint name="RequiredInterface" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.connectedFCOs (Implements)->size() = 1]]>
				<dispname>Every MonolithicComponentImplementation should implement a Component interface.</dispname>
			</constraint>
			<constraint name="UniquePrimaryArtifacts" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let artifacts = self.bagConnectedFCOs(MonolithprimaryArtifact) in
  artifacts->forAll (i,j  : ImplementationArtifactReference | 
            i.name().trim() = j.name().trim() => i = j and 
            i.refersTo() = j.refersTo() => i = j )]]>
				<dispname>Primary Artifacts of a MonolithicImplementation should be unique</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let mimpls = project.allInstancesOf (MonolithicImplementation) in
   mimpls->forAll (x : MonolithicImplementation |  
          self.UUID.trim() = x.UUID.trim() => self = x)
   ]]>
				<dispname>Every ComponentImplementation should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidImplementsdstCardinality76" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentImplementation as &quot;dst&quot; over Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let digit = "[0-9]" in
let twodigits = digit + digit in
let threedigits = twodigits + digit in
let fourdigits = threedigits + digit in
let singleversion = "(" + digit + "|" + twodigits + "|" + threedigits + "|" + fourdigits + "|" 
                    + "[0-5]" + fourdigits + "|"
                    + "6[0-4]" + threedigits + "|"
                    + "65[0-4]" + twodigits + "|"
                    + "655[0-2]" + digit + "|"
                    + "65553[0-5]" + ")" in
let version = self.defaultVersion.trim() in
   version.match(singleversion + "\." + singleversion + "\." + singleversion + "\." + singleversion + "$")]]>
				<dispname>Version should be of the form n.n.n.n, where 0 &lt;= n &lt;= 65535</dispname>
			</constraint>
				<regnode name = "icon" value ="MonolithicImplementation.bmp"></regnode>
		</atom>
		<atom name = "MultipleServiceRequests" metaref = "3936"  attributes = "simultaneous_service_execution minimum_simultaneous_service_level buffer_service_requests maximum_simultaneous_service_level">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="multiinvocations.bmp"></regnode>
		</atom>
		<atom name = "NameParameter" metaref = "5525" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="NameParameter.bmp"></regnode>
		</atom>
		<atom name = "OutEventPortDelegate" metaref = "5553" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidEventSourceDelegatedstCardinality60" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::EventSourceDelegate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OutEventPortEnd as &quot;dst&quot; over EventSourceDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEventSourceDelegatesrcCardinality59" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::EventSourceDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OutEventPortDelegate as &quot;src&quot; over EventSourceDelegate, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="outeventport.bmp"></regnode>
		</atom>
		<atom name = "PackageConfiguration" metaref = "1085"  attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="UniquePackageConfiguration" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let folder = project.allInstancesOf(PackageConfiguration) in
          folder->isUnique (e1 : PackageConfiguration | e1.name)]]>
				<dispname>PackageConfiguration should be unique within a project</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let packages = project.allInstancesOf (PackageConfiguration) in
   packages->forAll 
                       (x : PackageConfiguration | 
                          self <> x implies 
                                   (
                                     (  x.UUID.trim() <> self.UUID.trim()  )
                                     or
                                     ( x.UUID.trim() = ""  or self.UUID.trim() = "")
                                   ) 
                       )]]>
				<dispname>Every PackageConfiguration should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidPackageConfBasePackagedstCardinality110" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PackageConfBasePackage ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as &quot;dst&quot; over PackageConfBasePackage, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfReferencedstCardinality114" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PackageConfReference ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as &quot;dst&quot; over PackageConfReference, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfSpecializedConfigdstCardinality118" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::PackageConfSpecializedConfig ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfiguration as &quot;dst&quot; over PackageConfSpecializedConfig, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="PackageConfiguration.bmp"></regnode>
		</atom>
		<atom name = "PeriodicBenchmarks" metaref = "1086"  attributes = "timeperiod">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality24" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as &quot;dst&quot; over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Periodic-Bench.bmp"></regnode>
		</atom>
		<atom name = "PeriodicEvent" metaref = "5173"  attributes = "Hertz Distribution">
			<dispname>PeriodicTask</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidInputdstCardinality80" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SingleInputBase as &quot;dst&quot; over Input, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="periodic.gif"></regnode>
		</atom>
		<atom name = "PrivateFlag" metaref = "1087" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidMakeMemberPrivatesrcCardinality95" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::MakeMemberPrivate ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PrivateFlag as &quot;src&quot; over MakeMemberPrivate, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="private.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "ProvidedRequestPortDelegate" metaref = "5554" >
			<dispname>providedrequestport.bmp</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
		</atom>
		<atom name = "RequiredRequestPortDelegate" metaref = "5555" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidReceptacleDelegatedstCardinality132" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::ReceptacleDelegate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to RequiredRequestPortDelegate as &quot;dst&quot; over ReceptacleDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidReceptacleDelegatesrcCardinality131" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::ReceptacleDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to RequiredRequestPortEnd as &quot;src&quot; over ReceptacleDelegate, has to match 0..1.</dispname>
			</constraint>
		</atom>
		<atom name = "ServiceConsumer" metaref = "3948"  attributes = "prioritize_service_invocations">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="consumer.bmp"></regnode>
		</atom>
		<atom name = "ServiceLevels" metaref = "3937"  attributes = "varying_service_levels">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="servicelevels.bmp"></regnode>
		</atom>
		<atom name = "ShortInteger" metaref = "1092" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="short.bmp"></regnode>
		</atom>
		<atom name = "State" metaref = "5174" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidTerminalEffectsrcCardinality141" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TerminalEffect ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to StateBase as &quot;src&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTerminalTransitiondstCardinality144" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::TerminalTransition ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to State as &quot;dst&quot; over TerminalTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitiondstCardinality150" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Transition ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to State as &quot;dst&quot; over Transition, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="State.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "String" metaref = "1093" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="string.bmp"></regnode>
		</atom>
		<atom name = "Task" metaref = "1094" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidWorkLoadOperationConnectionsrcCardinality151" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::WorkLoadOperationConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Task as &quot;src&quot; over WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="task.bmp"></regnode>
		</atom>
		<atom name = "Terminal" metaref = "5175" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidTerminalEffectdstCardinality142" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::TerminalEffect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Terminal as &quot;dst&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "TimeProbe" metaref = "1095" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidTimerConnectionsrcCardinality145" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TimerConnection ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TimeProbe as &quot;src&quot; over TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTimerEventSinkConnsrcCardinality147" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TimerEventSinkConn ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TimeProbe as &quot;src&quot; over TimerEventSinkConn, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="timer.bmp"></regnode>
		</atom>
		<atom name = "TopLevelPackage" metaref = "1096" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidpackagedstCardinality156" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::package ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to TopLevelPackage as &quot;dst&quot; over package, has to match 1.</dispname>
			</constraint>
				<regnode name = "icon" value ="TopLevelPackage.bmp"></regnode>
		</atom>
		<atom name = "TriggerBenchmarks" metaref = "1097" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidBenchmarkCharacteristicsdstCardinality24" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::BenchmarkCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BenchmarkType as &quot;dst&quot; over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="Trigger-Bench.bmp"></regnode>
		</atom>
		<atom name = "TypeEncoding" metaref = "1098" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="typeencoding.bmp"></regnode>
		</atom>
		<atom name = "TypeKind" metaref = "1099" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="typekind.bmp"></regnode>
		</atom>
		<atom name = "TypeParameter" metaref = "5526"  attributes = "Type">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<attrdef name="Type" metaref = "5527" valuetype = "enum" defvalue = "Object">
				<enumitem dispname = "Aggregate" value = "Aggregate"></enumitem>
				<enumitem dispname = "Enum" value = "Enum"></enumitem>
				<enumitem dispname = "Event" value = "Event"></enumitem>
				<enumitem dispname = "Exception" value = "Exception"></enumitem>
				<enumitem dispname = "Object" value = "Object"></enumitem>
				<enumitem dispname = "SwitchAggregate" value = "SwitchAggregate"></enumitem>
				<enumitem dispname = "ValueObject" value = "ValueObject"></enumitem>
			</attrdef>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "UnsignedLongInteger" metaref = "5773" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "UnsignedLongLongInteger" metaref = "5774" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "UnsignedShortInteger" metaref = "5775" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "WhileState" metaref = "5176"  attributes = "LoopingCondition">
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidLoopTransitiondstCardinality94" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::LoopTransition ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to LoopState as &quot;dst&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTerminalEffectsrcCardinality141" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TerminalEffect ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to StateBase as &quot;src&quot; over TerminalEffect, has to match 0..1.</dispname>
			</constraint>
				<regnode name = "icon" value ="WhileState.bmp"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
		</atom>
		<atom name = "WideChar" metaref = "5779" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<atom name = "WideString" metaref = "5777" >
				<regnode name = "namePosition" value ="4"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
		</atom>
		<set name = "CollocationGroup" metaref = "1100" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setCollocationGroup"></regnode>
				<regnode name = "icon" value ="ComponentSet"></regnode>
			<constraint name="ValidInstanceMappingdstCardinality84" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::InstanceMapping ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to CollocationGroup as &quot;dst&quot; over InstanceMapping, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "set">
				<pointeritem desc = "ComponentAssemblyReference"></pointeritem>
				<pointeritem desc = "ComponentFactoryRef"></pointeritem>
				<pointeritem desc = "ComponentInstanceRef"></pointeritem>
			</pointerspec>
		</set>
		<set name = "TaskSet" metaref = "1101" attributes = "priority rate" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setTaskSet"></regnode>
				<regnode name = "icon" value ="taskset.bmp"></regnode>
			<constraint name="ValidWorkloadCharacteristicssrcCardinality153" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::WorkloadCharacteristics ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to TaskSet as &quot;src&quot; over WorkloadCharacteristics, has to match 1.</dispname>
			</constraint>
			<pointerspec name = "set">
				<pointeritem desc = "Task"></pointeritem>
			</pointerspec>
		</set>
		<set name = "Workspaces" metaref = "1102" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "mName" value ="members"></regnode>
				<regnode name = "sName" value ="setWorkspace"></regnode>
				<regnode name = "icon" value ="Workspace.bmp"></regnode>
			<pointerspec name = "set">
				<pointeritem desc = "Project"></pointeritem>
			</pointerspec>
		</set>
		<connection name = "ArtifactDependency" metaref = "1103" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependency"></regnode>
				<regnode name = "dName" value ="dstArtifactDependency"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactDependsOn" metaref = "1104" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcArtifactDependsOn"></regnode>
				<regnode name = "dName" value ="dstArtifactDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentImplementationArtifact"></pointeritem>
					<pointeritem desc = "ComponentServantArtifact"></pointeritem>
					<pointeritem desc = "ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactDeployRequirement" metaref = "1105" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcArtifactDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstArtifactDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ECRequirements"></pointeritem>
					<pointeritem desc = "RTRequirements"></pointeritem>
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactExecParameter" metaref = "1106" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcArtifactExecParameter"></regnode>
				<regnode name = "dName" value ="dstArtifactExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ArtifactInfoProperty" metaref = "1107" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcArtifactInfoProperty"></regnode>
				<regnode name = "dName" value ="dstArtifactInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ImplementationArtifact"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AssemblyConfigProperty" metaref = "5556" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcAssemblyConfigProperty"></regnode>
				<regnode name = "dName" value ="dstAssemblyConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInstance"></pointeritem>
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AssemblyselectRequirement" metaref = "5557" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcAssemblyselectRequirement"></regnode>
				<regnode name = "dName" value ="dstAssemblyselectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInstance"></pointeritem>
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ECRequirements"></pointeritem>
					<pointeritem desc = "RTRequirements"></pointeritem>
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeDelegate" metaref = "5558" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeDelegate"></regnode>
				<regnode name = "color" value ="0x408080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentInstance AttributeInstance"></pointeritem>
					<pointeritem desc = "ConnectorInstance AttributeInstance"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeMappingDelegate" metaref = "5559" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingDelegate"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingDelegate"></regnode>
				<regnode name = "color" value ="0x008080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeMappingValue" metaref = "5560" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeMappingValue"></regnode>
				<regnode name = "dName" value ="dstAttributeMappingValue"></regnode>
				<regnode name = "color" value ="0x808000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssembly AttributeMapping"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference AttributeMapping"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "AttributeValue" metaref = "5561" >
				<regnode name = "labelFormatStr" value ="attValue"></regnode>
				<regnode name = "sName" value ="srcAttributeValue"></regnode>
				<regnode name = "dName" value ="dstAttributeValue"></regnode>
				<regnode name = "color" value ="0x800080"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInstance AttributeInstance"></pointeritem>
					<pointeritem desc = "ConnectorInstance AttributeInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "BenchmarkCharacteristics" metaref = "1115" >
				<regnode name = "sName" value ="srcBenchmarkCharacteristics"></regnode>
				<regnode name = "dName" value ="dstBenchmarkCharacteristics"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "FixedIterationBenchmarks"></pointeritem>
					<pointeritem desc = "PeriodicBenchmarks"></pointeritem>
					<pointeritem desc = "TriggerBenchmarks"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "BranchTransition" metaref = "5177" attributes = "Condition" >
				<regnode name = "sName" value ="srcBranchTransition"></regnode>
				<regnode name = "dName" value ="dstBranchTransition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "BranchState"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "QueryAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "BridgeConnection" metaref = "4174" >
				<regnode name = "sName" value ="srcBridgeConnection"></regnode>
				<regnode name = "dName" value ="dstBridgeConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Bridge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentConfigProperty" metaref = "5316" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcComponentConfigProperty"></regnode>
				<regnode name = "dName" value ="dstComponentConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentInfoProperty" metaref = "5317" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcComponentInfoProperty"></regnode>
				<regnode name = "dName" value ="dstComponentInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentOperation" metaref = "1119" >
				<regnode name = "labelFormatStr" value ="benchmarks"></regnode>
				<regnode name = "sName" value ="srcComponentOperation"></regnode>
				<regnode name = "dName" value ="dstComponentOperation"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "CompRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ComponentProperty" metaref = "5318" >
				<regnode name = "labelFormatStr" value ="property"></regnode>
				<regnode name = "sName" value ="srcComponentProperty"></regnode>
				<regnode name = "dName" value ="dstComponentProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPropertyDescription"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ConfigProperty" metaref = "4127" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcConfigProperty"></regnode>
				<regnode name = "dName" value ="dstConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ConnectorImplements" metaref = "5178" >
			<dispname>Implements</dispname>
				<regnode name = "sName" value ="srcConnectorImplements"></regnode>
				<regnode name = "dName" value ="dstConnectorImplements"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
				<regnode name= "srcLabel1" value="Implements"/>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ConnectorType"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ConnectorToFacet" metaref = "5666" attributes = "InnerName" >
				<regnode name = "sName" value ="srcConnectorToFacet"></regnode>
				<regnode name = "dName" value ="dstConnectorToFacet"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance ProvidedRequestPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance SupportsInstance"></pointeritem>
					<pointeritem desc = "ProvidedRequestPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ConnectorToReceptacle" metaref = "5667" attributes = "InnerName" >
				<regnode name = "sName" value ="srcConnectorToReceptacle"></regnode>
				<regnode name = "dName" value ="dstConnectorToReceptacle"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance RequiredRequestPortInstance"></pointeritem>
					<pointeritem desc = "RequiredRequestPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Consume" metaref = "5562" >
				<regnode name = "sName" value ="srcConsume"></regnode>
				<regnode name = "dName" value ="dstConsume"></regnode>
				<regnode name = "color" value ="0xFF00FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentInstance ExtendedPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance MirrorPortInstance"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "CriticalPath" metaref = "5319" >
				<regnode name = "labelFormatStr" value ="CriticalPath"></regnode>
				<regnode name = "sName" value ="srcCriticalPath"></regnode>
				<regnode name = "dName" value ="dstCriticalPath"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PathReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Deploys" metaref = "4106" >
				<regnode name = "sName" value ="srcDeploys"></regnode>
				<regnode name = "dName" value ="dstDeploys"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactoryRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentInstanceRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "DstEdge" metaref = "2094" >
				<regnode name = "sName" value ="srcDstEdge"></regnode>
				<regnode name = "dName" value ="dstDstEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ConnectedComponent"></pointeritem>
					<pointeritem desc = "DisplayNode"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EdgeProperty" metaref = "3063" >
				<regnode name = "sName" value ="srcPropertyConnector"></regnode>
				<regnode name = "dName" value ="dstPropertyConnector"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Effect" metaref = "5179" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcEffect"></regnode>
				<regnode name = "dName" value ="dstEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "QueryAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "BranchState"></pointeritem>
					<pointeritem desc = "DoWhileState"></pointeritem>
					<pointeritem desc = "ForState"></pointeritem>
					<pointeritem desc = "State"></pointeritem>
					<pointeritem desc = "WhileState"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSinkDelegate" metaref = "5563" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSinkDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSinkDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPortDelegate"></pointeritem>
					<pointeritem desc = "InEventPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance InEventPortInstance"></pointeritem>
					<pointeritem desc = "InEventPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "EventSourceDelegate" metaref = "5564" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcEventSourceDelegate"></regnode>
				<regnode name = "dName" value ="dstEventSourceDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance OutEventPortInstance"></pointeritem>
					<pointeritem desc = "OutEventPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "OutEventPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ExtResourceConn" metaref = "1124" >
				<regnode name = "sName" value ="srcExtResourceConn"></regnode>
				<regnode name = "dName" value ="dstExtResourceConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ExecutorProject"></pointeritem>
					<pointeritem desc = "ServantProject"></pointeritem>
					<pointeritem desc = "StubProject"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ExternalResources"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ExternalDelegate" metaref = "5565" >
				<regnode name = "labelFormatStr" value ="references"></regnode>
				<regnode name = "sName" value ="srcExternalDelegate"></regnode>
				<regnode name = "dName" value ="dstExternalDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ExternalPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssembly OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssembly ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssembly RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance ExtendedPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance InEventPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance MirrorPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance OutEventPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance ProvidedRequestPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance RequiredRequestPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance SupportsInstance"></pointeritem>
					<pointeritem desc = "InEventPortDelegate"></pointeritem>
					<pointeritem desc = "OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "RequiredRequestPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "FacetDelegate" metaref = "5566" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcFacetDelegate"></regnode>
				<regnode name = "dName" value ="dstFacetDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ProvidedRequestPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance ProvidedRequestPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance SupportsInstance"></pointeritem>
					<pointeritem desc = "ProvidedRequestPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Finish" metaref = "5180" >
				<regnode name = "sName" value ="srcFinish"></regnode>
				<regnode name = "dName" value ="dstFinish"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "BranchState"></pointeritem>
					<pointeritem desc = "DoWhileState"></pointeritem>
					<pointeritem desc = "ForState"></pointeritem>
					<pointeritem desc = "State"></pointeritem>
					<pointeritem desc = "WhileState"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "MultiInputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Implementation" metaref = "1127" >
				<regnode name = "labelFormatStr" value ="implementation"></regnode>
				<regnode name = "sName" value ="srcImplementation"></regnode>
				<regnode name = "dName" value ="dstImplementation"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentImplementationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ImplementationCapability" metaref = "5320" >
				<regnode name = "labelFormatStr" value ="capability"></regnode>
				<regnode name = "sName" value ="srcImplementationCapability"></regnode>
				<regnode name = "dName" value ="dstImplementationCapability"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Capability"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ImplementationDependsOn" metaref = "5321" >
				<regnode name = "labelFormatStr" value ="dependsOn"></regnode>
				<regnode name = "sName" value ="srcImplementationDependsOn"></regnode>
				<regnode name = "dName" value ="dstImplementationDependsOn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationDependency"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Implements" metaref = "5322" >
				<regnode name = "labelFormatStr" value ="implements"></regnode>
				<regnode name = "sName" value ="srcImplements"></regnode>
				<regnode name = "dName" value ="dstImplements"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InfoProperty" metaref = "4128" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcInfoProperty"></regnode>
				<regnode name = "dName" value ="dstInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly"></pointeritem>
					<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Input" metaref = "5181" >
				<regnode name = "sName" value ="srcInput"></regnode>
				<regnode name = "dName" value ="dstInput"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ApplicationTask"></pointeritem>
					<pointeritem desc = "ComponentInherits InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "PeriodicEvent"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "InputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InputEffect" metaref = "5182" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcInputEffect"></regnode>
				<regnode name = "dName" value ="dstInputEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "InputAction"></pointeritem>
					<pointeritem desc = "MultiInputAction"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "BranchState"></pointeritem>
					<pointeritem desc = "DoWhileState"></pointeritem>
					<pointeritem desc = "ForState"></pointeritem>
					<pointeritem desc = "State"></pointeritem>
					<pointeritem desc = "WhileState"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InstanceMapping" metaref = "1134" >
				<regnode name = "labelFormatStr" value ="runsOn"></regnode>
				<regnode name = "sName" value ="srcInstanceMapping"></regnode>
				<regnode name = "dName" value ="dstInstanceMapping"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "CollocationGroup"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "NodeReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "InterconnectConnection" metaref = "4175" >
				<regnode name = "sName" value ="srcInterconnectConnection"></regnode>
				<regnode name = "dName" value ="dstInterconnectConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Interconnect"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Invoke" metaref = "5653" >
				<regnode name = "labelFormatStr" value ="invokes"></regnode>
				<regnode name = "sName" value ="srcinvoke"></regnode>
				<regnode name = "dName" value ="dstinvoke"></regnode>
				<regnode name = "color" value ="0x00008F"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance RequiredRequestPortInstance"></pointeritem>
					<pointeritem desc = "RequiredRequestPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference ProvidedRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance ProvidedRequestPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance SupportsInstance"></pointeritem>
					<pointeritem desc = "ProvidedRequestPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "KeyMember" metaref = "5768" >
				<regnode name = "sName" value ="srcKeyMember"></regnode>
				<regnode name = "dName" value ="dstKeyMember"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Key"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ArrayMember"></pointeritem>
					<pointeritem desc = "Member"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "LabelConnection" metaref = "1137" >
				<regnode name = "sName" value ="srcLabelConnection"></regnode>
				<regnode name = "dName" value ="dstLabelConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ArrayMember"></pointeritem>
					<pointeritem desc = "Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Label"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "LoopTransition" metaref = "5183" >
				<regnode name = "sName" value ="srcLoopTransition"></regnode>
				<regnode name = "dName" value ="dstLoopTransition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "DoWhileState"></pointeritem>
					<pointeritem desc = "ForState"></pointeritem>
					<pointeritem desc = "WhileState"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "QueryAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MakeMemberPrivate" metaref = "1138" >
				<regnode name = "sName" value ="srcMakeMemberPrivate"></regnode>
				<regnode name = "dName" value ="dstMakeMemberPrivate"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ArrayMember"></pointeritem>
					<pointeritem desc = "Member"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PrivateFlag"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ManagesComponent" metaref = "5323" >
				<regnode name = "sName" value ="srcManagesComponent"></regnode>
				<regnode name = "dName" value ="dstManagesComponent"></regnode>
				<regnode name = "color" value ="0x00FF00"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactory"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Component"></pointeritem>
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MetricConnection" metaref = "1140" >
				<regnode name = "labelFormatStr" value ="measures"></regnode>
				<regnode name = "sName" value ="srcMetricConnection"></regnode>
				<regnode name = "dName" value ="dstMetricConnection"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithDeployRequirement" metaref = "4143" >
				<regnode name = "labelFormatStr" value ="deployRequirement"></regnode>
				<regnode name = "sName" value ="srcMonolithDeployRequirement"></regnode>
				<regnode name = "dName" value ="dstMonolithDeployRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ImplementationRequirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithExecParameter" metaref = "4144" >
				<regnode name = "labelFormatStr" value ="execParameter"></regnode>
				<regnode name = "sName" value ="srcMonolithExecParameter"></regnode>
				<regnode name = "dName" value ="dstMonolithExecParameter"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MonolithprimaryArtifact" metaref = "4145" >
				<regnode name = "labelFormatStr" value ="primaryArtifact"></regnode>
				<regnode name = "sName" value ="srcMonolithprimaryArtifact"></regnode>
				<regnode name = "dName" value ="dstMonolithprimaryArtifact"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
					<pointeritem desc = "ConnectorImplementation"></pointeritem>
					<pointeritem desc = "MonolithicImplementation"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentImplementationArtifact"></pointeritem>
					<pointeritem desc = "ComponentServantArtifact"></pointeritem>
					<pointeritem desc = "ImplementationArtifactReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "MultiInput" metaref = "5184" >
				<regnode name = "sName" value ="srcMultiInput"></regnode>
				<regnode name = "dName" value ="dstMultiInput"></regnode>
				<regnode name = "color" value ="0xFF8000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInherits ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "Environment"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "MultiInputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfBasePackage" metaref = "1145" >
				<regnode name = "labelFormatStr" value ="basePackage"></regnode>
				<regnode name = "sName" value ="srcPackageConfBasePackage"></regnode>
				<regnode name = "dName" value ="dstPackageConfBasePackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfConfigProperty" metaref = "1146" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfReference" metaref = "1147" >
				<regnode name = "labelFormatStr" value ="reference"></regnode>
				<regnode name = "sName" value ="srcPackageConfReference"></regnode>
				<regnode name = "dName" value ="dstPackageConfReference"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentPackageReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfSelectRequirement" metaref = "1148" >
				<regnode name = "labelFormatStr" value ="selectRequirement"></regnode>
				<regnode name = "sName" value ="srcPackageConfSelectRequirement"></regnode>
				<regnode name = "dName" value ="dstPackageConfSelectRequirement"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ECRequirements"></pointeritem>
					<pointeritem desc = "RTRequirements"></pointeritem>
					<pointeritem desc = "Requirement"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfSpecializedConfig" metaref = "1149" >
				<regnode name = "labelFormatStr" value ="specializedConfig"></regnode>
				<regnode name = "sName" value ="srcPackageConfSpecializedConfig"></regnode>
				<regnode name = "dName" value ="dstPackageConfSpecializedConfig"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "PackageConfiguration"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageConfigProperty" metaref = "1150" >
				<regnode name = "labelFormatStr" value ="configProperty"></regnode>
				<regnode name = "sName" value ="srcPackageConfigProperty"></regnode>
				<regnode name = "dName" value ="dstPackageConfigProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageInfoProperty" metaref = "1151" >
				<regnode name = "labelFormatStr" value ="infoProperty"></regnode>
				<regnode name = "sName" value ="srcPackageInfoProperty"></regnode>
				<regnode name = "dName" value ="dstPackageInfoProperty"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="diamond"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PackageInterface" metaref = "1152" >
				<regnode name = "labelFormatStr" value ="realizes"></regnode>
				<regnode name = "sName" value ="srcPackageInterface"></regnode>
				<regnode name = "dName" value ="dstPackageInterface"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "PathProperty" metaref = "3064" >
				<regnode name = "labelFormatStr" value ="pathProperty"></regnode>
				<regnode name = "sName" value ="srcPathProperty"></regnode>
				<regnode name = "dName" value ="dstPathProperty"></regnode>
				<regnode name = "color" value ="0x00F000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Path"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Property"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Publish" metaref = "5567" >
				<regnode name = "sName" value ="srcPublish"></regnode>
				<regnode name = "dName" value ="dstPublish"></regnode>
				<regnode name = "color" value ="0xFF00FF"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInstance ExtendedPortInstance"></pointeritem>
					<pointeritem desc = "ComponentInstance MirrorPortInstance"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ConnectorInstance"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "QueryInput" metaref = "5185" >
				<regnode name = "sName" value ="srcQueryInput"></regnode>
				<regnode name = "dName" value ="dstQueryInput"></regnode>
				<regnode name = "color" value ="0x008000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentInherits InEventPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "QueryInputAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "ReceptacleDelegate" metaref = "5568" >
				<regnode name = "labelFormatStr" value ="delegatesTo"></regnode>
				<regnode name = "sName" value ="srcReceptacleDelegate"></regnode>
				<regnode name = "dName" value ="dstReceptacleDelegate"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "RequiredRequestPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference RequiredRequestPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance RequiredRequestPortInstance"></pointeritem>
					<pointeritem desc = "RequiredRequestPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "SendsTo" metaref = "5569" >
				<regnode name = "sName" value ="srcSendsTo"></regnode>
				<regnode name = "dName" value ="dstSendsTo"></regnode>
				<regnode name = "color" value ="0x8F0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "ComponentAssembly OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference OutEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance OutEventPortInstance"></pointeritem>
					<pointeritem desc = "OutEventPortDelegate"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentAssembly InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentAssemblyReference InEventPortDelegate"></pointeritem>
					<pointeritem desc = "ComponentInstance InEventPortInstance"></pointeritem>
					<pointeritem desc = "InEventPortDelegate"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Shares" metaref = "1155" >
				<regnode name = "labelFormatStr" value ="shares"></regnode>
				<regnode name = "sName" value ="srcShares"></regnode>
				<regnode name = "dName" value ="dstShares"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Node"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "SharedResource"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "SrcEdge" metaref = "2101" >
				<regnode name = "sName" value ="srcSrcEdge"></regnode>
				<regnode name = "dName" value ="dstSrcEdge"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Edge"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentRef InEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentRef ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentRef RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ConnectedComponent"></pointeritem>
					<pointeritem desc = "DisplayNode"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TemplatePackageInstanceDecl" metaref = "5719" >
				<regnode name = "sName" value ="srcTemplatePackageInstanceDecl"></regnode>
				<regnode name = "dName" value ="dstTemplatePackageInstanceDecl"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "TemplatePackageInstanceRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "ComponentInherits ExtendedPort"></pointeritem>
					<pointeritem desc = "ComponentInherits InEventPort"></pointeritem>
					<pointeritem desc = "ComponentInherits MirrorPort"></pointeritem>
					<pointeritem desc = "ComponentInherits OutEventPort"></pointeritem>
					<pointeritem desc = "ComponentInherits ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ComponentInherits RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ConnectorInherits ExtendedPort"></pointeritem>
					<pointeritem desc = "ConnectorInherits MirrorPort"></pointeritem>
					<pointeritem desc = "ConnectorInherits ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "ConnectorInherits RequiredRequestPort"></pointeritem>
					<pointeritem desc = "ExtendedPort"></pointeritem>
					<pointeritem desc = "InEventPort"></pointeritem>
					<pointeritem desc = "MirrorPort"></pointeritem>
					<pointeritem desc = "OutEventPort"></pointeritem>
					<pointeritem desc = "ProvidedRequestPort"></pointeritem>
					<pointeritem desc = "RequiredRequestPort"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TerminalEffect" metaref = "5186" attributes = "Postcondition" >
				<regnode name = "sName" value ="srcTerminalEffect"></regnode>
				<regnode name = "dName" value ="dstTerminalEffect"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Terminal"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "BranchState"></pointeritem>
					<pointeritem desc = "DoWhileState"></pointeritem>
					<pointeritem desc = "ForState"></pointeritem>
					<pointeritem desc = "State"></pointeritem>
					<pointeritem desc = "WhileState"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TerminalTransition" metaref = "5187" >
				<regnode name = "sName" value ="srcTerminalTransition"></regnode>
				<regnode name = "dName" value ="dstTerminalTransition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Terminal"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TimerConnection" metaref = "1156" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerConnection"></regnode>
				<regnode name = "dName" value ="dstTimerConnection"></regnode>
				<regnode name = "color" value ="0xFF0000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "TimerEventSinkConn" metaref = "1157" >
				<regnode name = "labelFormatStr" value ="getTime"></regnode>
				<regnode name = "sName" value ="srcTimerEventSinkConn"></regnode>
				<regnode name = "dName" value ="dstTimerEventSinkConn"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="dash"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "EventRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TimeProbe"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "Transition" metaref = "5188" >
				<regnode name = "sName" value ="srcTransition"></regnode>
				<regnode name = "dName" value ="dstTransition"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "State"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Action"></pointeritem>
					<pointeritem desc = "OutputAction"></pointeritem>
					<pointeritem desc = "QueryAction"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WorkLoadOperationConnection" metaref = "1160" >
				<regnode name = "sName" value ="srcWorkLoadOperationConnection"></regnode>
				<regnode name = "dName" value ="dstWorkLoadOperationConnection"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "OperationRef"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "Task"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "WorkloadCharacteristics" metaref = "1161" >
				<regnode name = "sName" value ="srcWorkloadCharacteristics"></regnode>
				<regnode name = "dName" value ="dstWorkloadCharacteristics"></regnode>
				<regnode name = "color" value ="0x0000FF"></regnode>
				<regnode name = "dstStyle" value ="butt"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "Latency"></pointeritem>
					<pointeritem desc = "Throughput"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "TaskSet"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<connection name = "package" metaref = "1165" >
				<regnode name = "labelFormatStr" value ="package"></regnode>
				<regnode name = "sName" value ="srcpackage"></regnode>
				<regnode name = "dName" value ="dstpackage"></regnode>
				<regnode name = "color" value ="0x000000"></regnode>
				<regnode name = "dstStyle" value ="arrow"></regnode>
				<regnode name = "srcStyle" value ="butt"></regnode>
				<regnode name = "lineType" value ="solid"></regnode>
			<connjoint>
				<pointerspec name = "src">
					<pointeritem desc = "TopLevelPackage"></pointeritem>
				</pointerspec>
				<pointerspec name = "dst">
					<pointeritem desc = "PackageConfigurationReference"></pointeritem>
				</pointerspec>
			</connjoint>
		</connection>
		<reference name = "Alias" metaref = "1167" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAlias"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="alias.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ArrayMember" metaref = "5514" attributes = "Size">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMember"></regnode>
			<constraint name="LegalTemplateParameter" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let r = self.refersTo () in
 (r.isTypeOf (NameParameter) or
  r.isTypeOf (TypeParameter) or
  r.isTypeOf (CollectionParameter))
     implies r.parent ().isChildNode (self)]]>
				<dispname>Referenced template parameter is not in scope of containing package</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ParentNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[name <> parent ().name]]>
				<dispname>A member may not have the same name as its container.</dispname>
			</constraint>
			<constraint name="ValidKeyMembersrcCardinality89" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::KeyMember ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Member as &quot;src&quot; over KeyMember, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMakeMemberPrivatedstCardinality96" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Member as &quot;dst&quot; over MakeMemberPrivate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "AttributeInstance" metaref = "5571">
			<dispname>Attribute</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeInstance"></regnode>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attr : Model = self.refersTo () in
let members = attr.referenceParts () in

let props = self.connectedFCOs (AttributeValue) in
members->forAll (member : Reference |  
  props->forAll (x : Property | 
    let datatypes = x.referenceParts (DataType) in
      datatypes->forAll (prop : Reference | member.refersTo () = prop.refersTo ()))) ]]>
				<dispname>The type of the value of a property should match the type of the attribute.</dispname>
			</constraint>
			<constraint name="ValidAttributeDelegatesrcCardinality15" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::AttributeDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeInstance as &quot;src&quot; over AttributeDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidAttributeValuedstCardinality22" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::AttributeValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeInstance as &quot;dst&quot; over AttributeValue, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="attribute.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Attribute"></pointeritem>
				<pointeritem desc = "ReadonlyAttribute"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "AttributeMapping" metaref = "5572">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMapping"></regnode>
			<constraint name="MatchingAttributeMappingDelegateType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let myAttr : Model = self.refersTo() in
let attrs = myAttr.referenceParts(AttributeMember) in
let delegates = self.connectedFCOs(AttributeMappingDelegate) in
    attrs->forAll (attr : Reference | 
                      delegates->forAll (x : AttributeMapping | 
                          let refAttr : Model = x.refersTo() in
                               refAttr.referenceParts(AttributeMember)->forAll (prop : Reference |
                                    attr.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate values to AttributeMappings of the same type</dispname>
			</constraint>
			<constraint name="MatchingPropertyType" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let attr: Model = self.refersTo() in
let attrType = attr.referenceParts(AttributeMember) in
let props = self.connectedFCOs(AttributeMappingValue) in
    attrType->forAll (myType : Reference | 
                      props->forAll (x : Property | x.referenceParts(DataType)->forAll (prop : Reference |
                         myType.refersTo().kindName() = prop.refersTo().kindName()   )  )  )]]>
				<dispname>An AttributeMapping can only be used to delegate property values to attributes of the same type</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="SingleValue" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections(AttributeMappingValue)->size() <= 1]]>
				<dispname>An AttributeMapping can only have a single Property value associated with it.</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingDelegatesrcCardinality17" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::AttributeMappingDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeMapping as &quot;src&quot; over AttributeMappingDelegate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingValuedstCardinality20" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::AttributeMappingValue ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to AttributeMapping as &quot;dst&quot; over AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs(AttributeMappingDelegate)->forAll (x | x.parent() = self.parent() implies x <> self)]]>
				<dispname>An AttributeMapping of an assembly can only be delegated to an AttributeMapping in a different assembly</dispname>
			</constraint>
			<regnode name = "icon" value ="AttributeMapping.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "AttributeInstance"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "AttributeMember" metaref = "1169">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyAttributeMember"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Boxed" metaref = "1170" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyBoxed"></regnode>
			<constraint name="NoBoxedValueDef" eventmask = "0x80000011" depth = "1" priority = "1">
				<![CDATA[let boxedref = refersTo () in
          boxedref.kindName <> "ValueDef" and boxedref.kindName <> "EventDef"]]>
				<dispname>It is redundant and illegal to box a ValueDef or an EventDef</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="boxed.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Collection" metaref = "1171" attributes = "VersionTag SpecifyIdTag bound PrePreprocessorDirectives PostPreprocessorDirectives">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCollection"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="variablecollection.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CollectionParameter" metaref = "4329">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCollectionParameter"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "icon" value ="variablecollectionref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "NameParameter"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "CompRef" metaref = "1172">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyCompRef"></regnode>
			<constraint name="ValidComponentOperationsrcCardinality33" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::ComponentOperation ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to CompRef as &quot;src&quot; over ComponentOperation, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentAssemblyReference" metaref = "5573">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentAssemblyReference"></regnode>
			<constraint name="InstanceOnly" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "DeploymentPlan" implies self.refersTo().isInstance()
   endif]]>
				<dispname>A Deployment Plan can only contain references to instances of components/component assemblies; references to component/assembly types are not allowed.</dispname>
			</constraint>
			<constraint name="InstanceReferenceOnly" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let parent = self.parent() in
   if (parent.isNull()) then
      true
   else
      parent.kindName = "ComponentAssembly" => self.refersTo().isInstance()
   endif]]>
				<dispname>A ComponentAssemblyReference or a ComponentRef within a component assembly can only refer to an assembly instance, or a component instance respectively. </dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are prohibited</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[self.refersTo().parent() <> self.parent()]]>
				<dispname>A ComponentAssemblyReference/ComponentRef cannot be defined within the same assembly that contains the referred ComponentAssembly/Component.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentAssembly"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentFactoryInstance" metaref = "4112" attributes = "UUID label">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentFactoryInstance"></regnode>
			<regnode name = "icon" value ="componentfactoryref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentFactory"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentFactoryRef" metaref = "4104">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentFactoryRef"></regnode>
			<regnode name = "icon" value ="componentfactoryref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentFactoryInstance"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentImplementationArtifact" metaref = "4245" attributes = "EntryPoint">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentImplemenationArtifact"></regnode>
			<constraint name="HasEntryPoint" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.EntryPoint.trim ().size > 0]]>
				<dispname>ComponentImplementationArtifact must have an entry point</dispname>
			</constraint>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<regnode name = "icon" value ="ComponentImplementationArtifact.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentImplementationReference" metaref = "5324">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentImplementationReference"></regnode>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentAssembly"></pointeritem>
				<pointeritem desc = "MonolithicImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentInherits" metaref = "5325">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentInherits"></regnode>
			<regnode name = "icon" value ="Inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.NoShowRefersToDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentInstanceRef" metaref = "5152">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentInstanceRef"></regnode>
			<constraint name="ValidDeployssrcCardinality49" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Deploys ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentInstanceRef as &quot;src&quot; over Deploys, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentInstance"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentInstanceType" metaref = "5326">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentInstanceType"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "MonolithicImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentPackageReference" metaref = "1175" attributes = "requiredType requiredUUID requiredName">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentPackageReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ComponentImplementationReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentPackage"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentRef" metaref = "5327">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentRef"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidImplementssrcCardinality75" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Implements ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentRef as &quot;src&quot; over Implements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageInterfacesrcCardinality123" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::PackageInterface ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentRef as &quot;src&quot; over PackageInterface, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="componentref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Component"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ComponentServantArtifact" metaref = "4228" attributes = "EntryPoint">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyComponentServantArtifact"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<regnode name = "icon" value ="ComponentServantArtifact.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ConnectorImplementationType" metaref = "5189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConnectorImplementationType"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ConnectorImplementation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ConnectorInherits" metaref = "5296">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConnectorInherits"></regnode>
			<regnode name = "icon" value ="Inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.NoShowRefersToDecorator"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ConnectorObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ConnectorType" metaref = "5190">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConnectorType"></regnode>
			<constraint name="ValidConnectorImplementssrcCardinality39" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::ConnectorImplements ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ConnectorType as &quot;src&quot; over ConnectorImplements, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "ConnectorObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Constant" metaref = "1177" attributes = "VersionTag SpecifyIdTag value">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyConstant"></regnode>
			<constraint name="LegalConstantType" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[let x = refersTo () in
          x.isTypeOf (String) or
          x.isTypeOf (LongInteger) or
          x.isTypeOf (Enum) or
          x.isTypeOf (ShortInteger) or
          x.isTypeOf (FloatNumber) or
          x.isTypeOf (DoubleNumber) or
          x.isTypeOf (Byte) or
          x.isTypeOf (Boolean)]]>
				<dispname>A Constant must be a Boolean, Byte, ShortInteger, LongInteger, RealNumber, String or Enum</dispname>
			</constraint>
			<constraint name="LegalConstantValue" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = refersTo () in
    let y = value.toInteger () in
          (x.isTypeOf (Boolean) implies ((y = 0 or y = 1) or (let z = value.trim ().toUpper () in z = "TRUE" or z = "FALSE"))) and
          (x.isTypeOf (Byte) implies (y >= 0 and y < 256)) and
          (x.isTypeOf (ShortInteger) implies (y > -32769 and y < 32768)) and
          (x.isTypeOf (LongInteger) implies (value.toReal () >= -2147483648 and value.toReal () <= 2147483647)) and
          (x.isTypeOf (FloatNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
          (x.isTypeOf (DoubleNumber) implies value.trim ().match ("^\-?[0-9]+\.[0-9]*$")) and
          (x.isTypeOf (Enum) implies x.oclAsType (gme::Model).parts ()->collect (w : gme::FCO | w.name)->exists (z : ocl::String | z = value.trim ()))]]>
				<dispname>Constant&apos;s value does not match type or is out of range</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="value" metaref = "1178" valuetype = "string" defvalue = "">
			</attrdef>
			<regnode name = "icon" value ="const.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "DataType" metaref = "1179">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDataType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>DataType should reference a PredefinedType and cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="DataType.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Discriminator" metaref = "1180">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyDiscriminator"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<regnode name = "icon" value ="discriminator.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "EventRef" metaref = "1181">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyEventRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="eventref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Event"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExceptionRef" metaref = "1182">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExceptionRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="exceptionref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExtendedPort" metaref = "5484">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExtendedPortBase"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPortSet"></regnode>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<regnode name = "porticon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PortType"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExtendedPortInstance" metaref = "5574">
			<dispname>ExtendedPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExtendedPortInstance"></regnode>
			<constraint name="ValidConsumesrcCardinality45" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Consume ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ExtendPortEnd as &quot;src&quot; over Consume, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPublishdstCardinality128" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Publish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ExtendPortEnd as &quot;dst&quot; over Publish, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "ExtendedPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ExternalResources" metaref = "1183">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExternalResources"></regnode>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "FileRef" metaref = "1184">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyFileRef"></regnode>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="fileref.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "File"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "GetException" metaref = "1185">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyGetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="getexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ImplementationArtifactReference" metaref = "1186">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyImplementationArtifactReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>ImplementationArtifactReference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="ImplementationArtifactReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ImplementationArtifact"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InEventPort" metaref = "5328" attributes = "VersionTag SpecifyIdTag optional exclusiveUser exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInEventPort"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputdstCardinality80" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Input ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SingleInputBase as &quot;dst&quot; over Input, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidQueryInputdstCardinality130" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::QueryInput ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QueryInputBase as &quot;dst&quot; over QueryInput, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="ineventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InEventPortInstance" metaref = "5575">
			<dispname>InEventPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInEventPortInstance"></regnode>
			<constraint name="ValidEventSinkDelegatesrcCardinality57" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::EventSinkDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InEventPortEnd as &quot;src&quot; over EventSinkDelegate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="ineventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "InEventPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InParameter" metaref = "1188">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyParameterType"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="in.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Inherits" metaref = "1189">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInherits"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inherits.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.NoShowRefersToDecorator"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "InoutParameter" metaref = "1190">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyParameterType"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyInoutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="inout.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "LookupKey" metaref = "1191">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyLookupKey"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="lookupkey.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ValueObject"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Member" metaref = "1192">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMember"></regnode>
			<constraint name="LegalTemplateParameter" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let r = self.refersTo () in
 (r.isTypeOf (NameParameter) or
  r.isTypeOf (TypeParameter) or
  r.isTypeOf (CollectionParameter))
     implies r.parent ().isChildNode (self)]]>
				<dispname>Referenced template parameter is not in scope of containing package</dispname>
			</constraint>
			<constraint name="NonNullReference" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[not refersTo ().isNull ()]]>
				<dispname>A reference to a named type must be assigned</dispname>
			</constraint>
			<constraint name="ParentNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[name <> parent ().name]]>
				<dispname>A member may not have the same name as its container.</dispname>
			</constraint>
			<constraint name="ValidKeyMembersrcCardinality89" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::KeyMember ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Member as &quot;src&quot; over KeyMember, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMakeMemberPrivatedstCardinality96" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::MakeMemberPrivate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Member as &quot;dst&quot; over MakeMemberPrivate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "MirrorPort" metaref = "5493">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyExtendedPortBase"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPortSet"></regnode>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<regnode name = "porticon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PortType"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "MirrorPortInstance" metaref = "5576">
			<dispname>MirrorPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyMirrorPortInstance"></regnode>
			<constraint name="ValidConsumesrcCardinality45" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Consume ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ExtendPortEnd as &quot;src&quot; over Consume, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPublishdstCardinality128" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Publish ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ExtendPortEnd as &quot;dst&quot; over Publish, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "MirrorPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "NodeReference" metaref = "1193">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyNodeReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>NodeReference cannot be null</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "Node"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OperationRef" metaref = "1194">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOperationRef"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidComponentOperationdstCardinality34" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::ComponentOperation ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as &quot;dst&quot; over ComponentOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectiondstCardinality100" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::MetricConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as &quot;dst&quot; over MetricConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTimerConnectiondstCardinality146" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::TimerConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as &quot;dst&quot; over TimerConnection, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidWorkLoadOperationConnectiondstCardinality152" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::WorkLoadOperationConnection ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OperationRef as &quot;dst&quot; over WorkLoadOperationConnection, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="operationref.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "FactoryOperation"></pointeritem>
				<pointeritem desc = "LookupOperation"></pointeritem>
				<pointeritem desc = "OnewayOperation"></pointeritem>
				<pointeritem desc = "TwowayOperation"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OutEventPort" metaref = "5329" attributes = "VersionTag SpecifyIdTag optional exclusiveUser exclusiveProvider single_destination out_event_port_type">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutEventPort"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="single_destination" metaref = "5330" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OutEventPortInstance" metaref = "5577">
			<dispname>OutEventPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutEventPortInstance"></regnode>
			<constraint name="ValidEventConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let type : OutEventPort = self.refersTo () in
let n = self.attachingConnections (SendsTo)->size in

type.single_destination implies (n = 0 or n = 1)]]>
				<dispname>OutEventPort that is single destination cannot have more than 1 outgoing connection</dispname>
			</constraint>
			<constraint name="ValidEventSourceDelegatedstCardinality60" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::EventSourceDelegate ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to OutEventPortEnd as &quot;dst&quot; over EventSourceDelegate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="outeventport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "OutEventPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "OutParameter" metaref = "1197">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyParameterType"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyOutParameter"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="out.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PackageConfigurationReference" metaref = "1198">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPackageConfigurationReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>PackageConfigurationReference cannot be null</dispname>
			</constraint>
			<constraint name="ValidpackagesrcCardinality155" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::package ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to PackageConfigurationReference as &quot;src&quot; over package, has to match 1.</dispname>
			</constraint>
			<regnode name = "icon" value ="PackageConfigurationReference.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "PackageConfiguration"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PackageType" metaref = "4357">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPackageType"></regnode>
			<regnode name = "icon" value ="PackageType.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Package"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "PathReference" metaref = "3065">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyPathReference"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>Null references are disallowed</dispname>
			</constraint>
			<constraint name="ValidCriticalPathsrcCardinality47" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::CriticalPath ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to PathReference as &quot;src&quot; over CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "Path"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ProvidedRequestPort" metaref = "5332" attributes = "VersionTag SpecifyIdTag optional exclusiveUser exclusiveProvider">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyProvidedRequestPort"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<regnode name = "icon" value ="providedrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ProvidedRequestPortInstance" metaref = "5578">
			<dispname>ProvidedRequestPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyProvidedRequestPortInstance"></regnode>
			<regnode name = "icon" value ="providedrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "ProvidedRequestPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "RequiredRequestPort" metaref = "5333" attributes = "VersionTag SpecifyIdTag optional exclusiveUser exclusiveProvider multiple_connections">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRequiredRequestPort"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTemplatePackageInstanceDeclsrcCardinality139" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::TemplatePackageInstanceDecl ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to TemplatePackageRefContainerFCO as &quot;src&quot; over TemplatePackageInstanceDecl, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="multiple_connections" metaref = "5334" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "RequiredRequestPortInstance" metaref = "5579">
			<dispname>RequiredRequestPort</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyRequiredRequestPortInstance"></regnode>
			<constraint name="ValidInvokeConnection" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let requestPort : Reference = self.refersTo () in

let facetInsts = self.connectedFCOs (Invoke) in
    facetInsts->forAll ( facetInst : gme::Reference | 
       let facet : Reference = facetInst.refersTo () in
       let supertypes = facet.refersTo ().oclAsType (gme::Model).allAscendants (Set{}) in    
            (supertypes->one (k: gme::FCO | k = self.refersTo ())
                or requestPort.refersTo () = facet.refersTo ()))]]>
				<dispname>A RequiredRequestPort should be connected to a ProvidedRequestPort of the same type, or the RequiredRequestPort should be a supertype of ProvidedRequestPort</dispname>
			</constraint>
			<constraint name="ValidInvokesHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections (Invoke)->forAll (x : Connection | x.parent() <> self.parent()) ]]>
				<dispname>Within a single assembly, an RequiredRequestPort can only be connected to an ProvidedRequestPort when they are both ports of component instances</dispname>
			</constraint>
			<constraint name="ValidParent" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[self.connectedFCOs (ReceptacleDelegate) ->forAll (x | x.parent()  = self.parent() implies x <> self)]]>
				<dispname>Only RequiredRequestPorts of a component instance can be delegated</dispname>
			</constraint>
			<constraint name="ValidReceptacleConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let type : RequiredRequestPort = self.refersTo () in
not type.multiple_connections => self.attachingConnections(Invoke)->size() <= 1]]>
				<dispname>A RequiredRequestPort can be connected to multiple ProvidedRequestPorts only if its multiple_connections attribute is true.</dispname>
			</constraint>
			<constraint name="ValidReceptacleDelegatesrcCardinality131" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::ReceptacleDelegate ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to RequiredRequestPortEnd as &quot;src&quot; over ReceptacleDelegate, has to match 0..1.</dispname>
			</constraint>
			<regnode name = "icon" value ="requiredrequestport.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "RequiredRequestPort"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "ReturnType" metaref = "1203">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyReturnType"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo().isNull()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="return.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "SetException" metaref = "1204">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySetException"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="setexception.bmp"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Exception"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Supports" metaref = "1205">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySupports"></regnode>
			<constraint name="NoNullReference" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>A reference cannot be null</dispname>
			</constraint>
			<regnode name = "icon" value ="supports.bmp"></regnode>
			<regnode name = "porticon" value ="supports.bmp"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Object"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "SupportsInstance" metaref = "5580">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbySupportsInstance"></regnode>
			<constraint name="ValidSupportDelegate" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let consumers = self.connectedFCOs (Invoke)  in
 consumers->forAll ( inst : ProvidedRequestPortInstance |  
   let port : Reference = inst.refersTo () in
   port.refersTo () = self.refersTo ())]]>
				<dispname>Supports object is connected to a ProvidedRequestPort of a different Object type.</dispname>
			</constraint>
			<pointerspec name = "ref">
				<pointeritem desc = "Supports"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "TemplatePackageInstanceRef" metaref = "5720">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyTemplatePackageInstanceRef"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "TemplatePackageInstance"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "TemplateParameterValue" metaref = "4342">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyTemplateParameterValue"></regnode>
			<regnode name = "icon" value ="TemplateParameterValue.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<regnode name = "isNameEnabled" value ="false"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Aggregate"></pointeritem>
				<pointeritem desc = "Alias"></pointeritem>
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Boxed"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "Collection"></pointeritem>
				<pointeritem desc = "CollectionParameter"></pointeritem>
				<pointeritem desc = "Component"></pointeritem>
				<pointeritem desc = "ComponentFactory"></pointeritem>
				<pointeritem desc = "ConnectorObject"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "Enum"></pointeritem>
				<pointeritem desc = "Event"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "NameParameter"></pointeritem>
				<pointeritem desc = "Object"></pointeritem>
				<pointeritem desc = "PortType"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "SwitchedAggregate"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "TypeParameter"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "ValueObject"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "Variable" metaref = "5191" attributes = "InitialValue">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyVariable"></regnode>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined variable (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="member.bmp"></regnode>
			<regnode name = "decorator" value ="MGA.Decorator.ShowReference"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Boolean"></pointeritem>
				<pointeritem desc = "Byte"></pointeritem>
				<pointeritem desc = "Char"></pointeritem>
				<pointeritem desc = "DoubleNumber"></pointeritem>
				<pointeritem desc = "FloatNumber"></pointeritem>
				<pointeritem desc = "GenericObject"></pointeritem>
				<pointeritem desc = "GenericValue"></pointeritem>
				<pointeritem desc = "GenericValueObject"></pointeritem>
				<pointeritem desc = "LongDoubleNumber"></pointeritem>
				<pointeritem desc = "LongInteger"></pointeritem>
				<pointeritem desc = "LongLongInteger"></pointeritem>
				<pointeritem desc = "ShortInteger"></pointeritem>
				<pointeritem desc = "String"></pointeritem>
				<pointeritem desc = "TypeEncoding"></pointeritem>
				<pointeritem desc = "TypeKind"></pointeritem>
				<pointeritem desc = "UnsignedLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedLongLongInteger"></pointeritem>
				<pointeritem desc = "UnsignedShortInteger"></pointeritem>
				<pointeritem desc = "WideChar"></pointeritem>
				<pointeritem desc = "WideString"></pointeritem>
			</pointerspec>
		</reference>
		<reference name = "WorkerType" metaref = "5192">
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "rName" value ="ref"></regnode>
				<regnode name = "rrName" value ="referedbyWorkerType"></regnode>
			<constraint name="AbstractWorker" eventmask = "0x400" depth = "1" priority = "2">
				<![CDATA[let worker : Worker = self->refersTo () in
not worker.Abstract]]>
				<dispname>Cannot reference an abstract worker</dispname>
			</constraint>
			<constraint name="NotNull" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[not self.refersTo ().isNull ()]]>
				<dispname>Undefined type (null reference)</dispname>
			</constraint>
			<regnode name = "icon" value ="workerref.gif"></regnode>
			<pointerspec name = "ref">
				<pointeritem desc = "Worker"></pointeritem>
			</pointerspec>
		</reference>
		<model name = "Action" metaref = "5193" attributes = "Duration LogAction" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="action.bmp"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="DanglingAction" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if self.kindName () = "Action" and self.isInstance () then
  let parent : Component = self.parent () in
  let workers = parent.parts (WorkerType) in

  workers.exists (iter : WorkerType | iter->name () = self.name ())
else
  true
endif]]>
				<dispname>The name of action instances must match the name of a worker.</dispname>
			</constraint>
			<constraint name="HasEffect" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let name = self->parent ().kindName in

if name <> "Worker" then
  self->attachingConnections( "src", Effect) -> size = 1
else
  true
endif]]>
				<dispname>Action is missing effect connection</dispname>
			</constraint>
			<constraint name="ValidBranchTransitionsrcCardinality25" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::BranchTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over BranchTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality56" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;dst&quot; over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidLoopTransitionsrcCardinality93" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::LoopTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality149" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2916" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2917" attributes = "Duration LogAction" >
				<part metaref = "2918" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Aggregate" metaref = "1206" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="aggregate.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidAggregatePartCardinality157" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Key" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by Aggregate, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ArrayMember" metaref = "5515" kind = "ArrayMember"></role>
			<role name = "Key" metaref = "5765" kind = "Key"></role>
			<role name = "KeyMember" metaref = "5769" kind = "KeyMember"></role>
			<role name = "Member" metaref = "1207" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "5680" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "5516" role = "ArrayMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5767" role = "Key" primary = "yes" linked = "no"></part>
				<part metaref = "5770" role = "KeyMember" primary = "yes" linked = "no"></part>
				<part metaref = "1209" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ArtifactContainer" metaref = "1210" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniqueImplementationArtifacts" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.atomParts(ImplementationArtifact) in
artifacts->forAll ( i, j : ImplementationArtifact | 
    i.name.trim() = j.name.trim() => (i = j or i.ArtifactNotEqual (j))  )]]>
				<dispname>Implementation Artifacts should have unique names or they should differ in atleast one of configuration, operatingSystem, artifactVersion or architecture  attributes</dispname>
			</constraint>
			<constraint name="ValidArtifactContainerPartCardinality158" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifact" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ArtifactContainer, has to match 1..*.</dispname>
			</constraint>
			<role name = "ArtifactDependency" metaref = "1211" kind = "ArtifactDependency"></role>
			<role name = "ArtifactDependsOn" metaref = "1212" kind = "ArtifactDependsOn"></role>
			<role name = "ArtifactDeployRequirement" metaref = "1213" kind = "ArtifactDeployRequirement"></role>
			<role name = "ArtifactExecParameter" metaref = "1214" kind = "ArtifactExecParameter"></role>
			<role name = "ArtifactInfoProperty" metaref = "1215" kind = "ArtifactInfoProperty"></role>
			<role name = "ComponentImplementationArtifact" metaref = "4250" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4251" kind = "ComponentServantArtifact"></role>
			<role name = "ECRequirements" metaref = "4008" kind = "ECRequirements"></role>
			<role name = "ImplementationArtifact" metaref = "1216" kind = "ImplementationArtifact"></role>
			<role name = "ImplementationArtifactReference" metaref = "1217" kind = "ImplementationArtifactReference"></role>
			<role name = "Property" metaref = "1218" kind = "Property"></role>
			<role name = "RTRequirements" metaref = "3949" kind = "RTRequirements"></role>
			<role name = "Requirement" metaref = "1219" kind = "Requirement"></role>
			<aspect name = "Packaging" metaref = "1220" >
				<part metaref = "1221" role = "ArtifactDependency" primary = "yes" linked = "no"></part>
				<part metaref = "1222" role = "ArtifactDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "1223" role = "ArtifactDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1224" role = "ArtifactExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "1225" role = "ArtifactInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "4252" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4253" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4009" role = "ECRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "1226" role = "ImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "1227" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "1228" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "3950" role = "RTRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "1229" role = "Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Attribute" metaref = "1230" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
				<regnode name = "icon" value ="attribute.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidReadonlyAttributePartCardinality185" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "AttributeMember" metaref = "1231" kind = "AttributeMember"></role>
			<role name = "GetException" metaref = "1232" kind = "GetException"></role>
			<role name = "SetException" metaref = "1233" kind = "SetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "5681" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1235" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1236" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1237" role = "SetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "BenchmarkAnalysis" metaref = "1238" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Average" metaref = "1239" kind = "Average"></role>
			<role name = "BenchmarkCharacteristics" metaref = "1240" kind = "BenchmarkCharacteristics"></role>
			<role name = "CompRef" metaref = "1241" kind = "CompRef"></role>
			<role name = "ComponentOperation" metaref = "1242" kind = "ComponentOperation"></role>
			<role name = "Event" metaref = "1243" kind = "Event"></role>
			<role name = "EventRef" metaref = "1244" kind = "EventRef"></role>
			<role name = "FactoryOperation" metaref = "1245" kind = "FactoryOperation"></role>
			<role name = "FixedIterationBenchmarks" metaref = "1246" kind = "FixedIterationBenchmarks"></role>
			<role name = "Jitter" metaref = "1247" kind = "Jitter"></role>
			<role name = "Latency" metaref = "1248" kind = "Latency"></role>
			<role name = "LookupOperation" metaref = "1249" kind = "LookupOperation"></role>
			<role name = "Maximum" metaref = "1250" kind = "Maximum"></role>
			<role name = "MetricConnection" metaref = "1251" kind = "MetricConnection"></role>
			<role name = "Minimum" metaref = "1252" kind = "Minimum"></role>
			<role name = "OnewayOperation" metaref = "1253" kind = "OnewayOperation"></role>
			<role name = "OperationRef" metaref = "1254" kind = "OperationRef"></role>
			<role name = "PeriodicBenchmarks" metaref = "1255" kind = "PeriodicBenchmarks"></role>
			<role name = "Task" metaref = "1256" kind = "Task"></role>
			<role name = "TaskSet" metaref = "1257" kind = "TaskSet"></role>
			<role name = "Throughput" metaref = "1258" kind = "Throughput"></role>
			<role name = "TimeProbe" metaref = "1259" kind = "TimeProbe"></role>
			<role name = "TimerConnection" metaref = "1260" kind = "TimerConnection"></role>
			<role name = "TimerEventSinkConn" metaref = "1261" kind = "TimerEventSinkConn"></role>
			<role name = "TriggerBenchmarks" metaref = "1262" kind = "TriggerBenchmarks"></role>
			<role name = "TwowayOperation" metaref = "1263" kind = "TwowayOperation"></role>
			<role name = "WorkLoadOperationConnection" metaref = "1264" kind = "WorkLoadOperationConnection"></role>
			<role name = "WorkloadCharacteristics" metaref = "1265" kind = "WorkloadCharacteristics"></role>
			<aspect name = "ComponentMetrics" metaref = "1266" >
				<part metaref = "1267" role = "BenchmarkCharacteristics" primary = "yes" linked = "no"></part>
				<part metaref = "1268" role = "CompRef" primary = "yes" linked = "no"></part>
				<part metaref = "1269" role = "ComponentOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1270" role = "EventRef" primary = "yes" linked = "no"></part>
				<part metaref = "1271" role = "FixedIterationBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1272" role = "Latency" primary = "yes" linked = "no"></part>
				<part metaref = "1273" role = "MetricConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1274" role = "OperationRef" primary = "yes" linked = "no"></part>
				<part metaref = "1275" role = "PeriodicBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1276" role = "Task" primary = "yes" linked = "no"></part>
				<part metaref = "1277" role = "TaskSet" primary = "yes" linked = "no"></part>
				<part metaref = "1278" role = "Throughput" primary = "yes" linked = "no"></part>
				<part metaref = "1279" role = "TimeProbe" primary = "yes" linked = "no"></part>
				<part metaref = "1280" role = "TimerConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1281" role = "TimerEventSinkConn" primary = "yes" linked = "no"></part>
				<part metaref = "1282" role = "TriggerBenchmarks" primary = "yes" linked = "no"></part>
				<part metaref = "1283" role = "WorkLoadOperationConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1284" role = "WorkloadCharacteristics" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Bridge" metaref = "1285" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Bridge"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Resource" metaref = "1286" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1287" attributes = "label" >
				<part metaref = "1288" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Capability" metaref = "1289" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Capability.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="NoCapacityOrQuantity" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let sp = self.modelParts(SatisfierProperty) in
          sp->forAll (elem : SatisfierProperty | elem.SatisfierPropertyKind <> #Capacity && elem.SatisfierPropertyKind <> #Quantity)]]>
				<dispname>Capability elements cannot have a SatisfierProperty with kind Capacity or Quantity</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1290" kind = "SatisfierProperty"></role>
			<aspect name = "Packaging" metaref = "1291" attributes = "resourceType" >
				<part metaref = "1292" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Component" metaref = "5335" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.ComponentDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoEmitsUsesPortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ()->forAll (
  a, b : gme::Reference | (a.oclAsType (OutEventPort).single_destination = true
                                        and b.isTypeOf (RequiredRequestPort)
                                       )
  implies
    a.name <> b.name)]]>
				<dispname>None of a Component&apos;s RequiredRequestPort names can be the same as any of its single-destination OutEventPort names</dispname>
			</constraint>
			<constraint name="NoInheritsAndSupports" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ("Inherits")->size () > 0 implies parts ("Supports")->size () = 0]]>
				<dispname>A component that has a base component may not also support interfaces</dispname>
			</constraint>
			<constraint name="NoSameTypePortNameClash" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts (InEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (OutEventPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (ProvidedRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)
and
referenceParts (RequiredRequestPort)->forAll (a, b : gme::Reference | a <> b implies a.name <> b.name)]]>
				<dispname>A Component&apos;s ports of the category must all have unique names</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="TerminalCount" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let ctrlblocks = 
  self.parts (meta::BranchState) + 
  self.parts (meta::ForState) + self.parts (meta::DoWhileState) +
  self.parts (meta::WhileState) in

let terminals = self.parts (meta::Terminal) in

ctrlblocks->size = terminals->size]]>
				<dispname>Number of terminals must equal the number of control blocks (i.e., BranchState, ForState, DoWhileState, and WhileState).</dispname>
			</constraint>
			<constraint name="UniqueApplicationTask" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.atomParts (ApplicationTask)->isUnique (iter: ApplicationTask | iter.name)]]>
				<dispname>Each ApplicationTask must have a unique name</dispname>
			</constraint>
			<constraint name="UniquePeriodicEvent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.atomParts (PeriodicEvent)->isUnique (iter: PeriodicEvent | iter.name)]]>
				<dispname>Each PeriodicEvent must have a unique name</dispname>
			</constraint>
			<constraint name="UniqueWorkerType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (WorkerType) in
   workers->isUnique (iter : WorkerType | iter->name ())]]>
				<dispname>Component contains duplicate worker names</dispname>
			</constraint>
			<constraint name="ValidComponentPartCardinality159" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentInherits" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by Component, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidTopLevelBehaviorPartCardinality198" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Environment" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelBehavior, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Action" metaref = "5194" kind = "Action"></role>
			<role name = "ApplicationTask" metaref = "5195" kind = "ApplicationTask"></role>
			<role name = "Attribute" metaref = "1294" kind = "Attribute"></role>
			<role name = "BranchState" metaref = "5196" kind = "BranchState"></role>
			<role name = "BranchTransition" metaref = "5197" kind = "BranchTransition"></role>
			<role name = "ComponentInherits" metaref = "5336" kind = "ComponentInherits"></role>
			<role name = "DoWhileState" metaref = "5198" kind = "DoWhileState"></role>
			<role name = "Effect" metaref = "5199" kind = "Effect"></role>
			<role name = "Environment" metaref = "5200" kind = "Environment"></role>
			<role name = "ExtendedPort" metaref = "5485" kind = "ExtendedPort"></role>
			<role name = "Finish" metaref = "5201" kind = "Finish"></role>
			<role name = "ForState" metaref = "5202" kind = "ForState"></role>
			<role name = "InEventPort" metaref = "5337" kind = "InEventPort"></role>
			<role name = "Input" metaref = "5203" kind = "Input"></role>
			<role name = "InputAction" metaref = "5204" kind = "InputAction"></role>
			<role name = "InputEffect" metaref = "5205" kind = "InputEffect"></role>
			<role name = "LoopTransition" metaref = "5206" kind = "LoopTransition"></role>
			<role name = "MirrorPort" metaref = "5494" kind = "MirrorPort"></role>
			<role name = "MultiInput" metaref = "5207" kind = "MultiInput"></role>
			<role name = "MultiInputAction" metaref = "5208" kind = "MultiInputAction"></role>
			<role name = "OutEventPort" metaref = "5338" kind = "OutEventPort"></role>
			<role name = "OutputAction" metaref = "5209" kind = "OutputAction"></role>
			<role name = "PeriodicEvent" metaref = "5210" kind = "PeriodicEvent"></role>
			<role name = "ProvidedRequestPort" metaref = "5340" kind = "ProvidedRequestPort"></role>
			<role name = "QueryAction" metaref = "5211" kind = "QueryAction"></role>
			<role name = "QueryInput" metaref = "5212" kind = "QueryInput"></role>
			<role name = "QueryInputAction" metaref = "5213" kind = "QueryInputAction"></role>
			<role name = "ReadonlyAttribute" metaref = "1298" kind = "ReadonlyAttribute"></role>
			<role name = "RequiredRequestPort" metaref = "5341" kind = "RequiredRequestPort"></role>
			<role name = "State" metaref = "5214" kind = "State"></role>
			<role name = "Supports" metaref = "1300" kind = "Supports"></role>
			<role name = "TemplatePackageInstanceDecl" metaref = "5737" kind = "TemplatePackageInstanceDecl"></role>
			<role name = "TemplatePackageInstanceRef" metaref = "5721" kind = "TemplatePackageInstanceRef"></role>
			<role name = "Terminal" metaref = "5215" kind = "Terminal"></role>
			<role name = "TerminalEffect" metaref = "5216" kind = "TerminalEffect"></role>
			<role name = "TerminalTransition" metaref = "5217" kind = "TerminalTransition"></role>
			<role name = "Transition" metaref = "5218" kind = "Transition"></role>
			<role name = "Variable" metaref = "5219" kind = "Variable"></role>
			<role name = "WhileState" metaref = "5220" kind = "WhileState"></role>
			<role name = "WorkerType" metaref = "5221" kind = "WorkerType"></role>
			<aspect name = "InterfaceDefinition" metaref = "5682" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID label" >
				<part metaref = "1302" role = "Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5342" role = "ComponentInherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5486" role = "ExtendedPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5343" role = "InEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5495" role = "MirrorPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5344" role = "OutEventPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5346" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1306" role = "ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5347" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1308" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
			</aspect>
			<aspect name = "Behavior" metaref = "1978" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID label" >
				<part metaref = "5222" role = "Action" primary = "yes" linked = "no"></part>
				<part metaref = "5223" role = "ApplicationTask" primary = "yes" linked = "no"></part>
				<part metaref = "4222" role = "Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5224" role = "BranchState" primary = "yes" linked = "no"></part>
				<part metaref = "5225" role = "BranchTransition" primary = "yes" linked = "no"></part>
				<part metaref = "5226" role = "DoWhileState" primary = "yes" linked = "no"></part>
				<part metaref = "5227" role = "Effect" primary = "yes" linked = "no"></part>
				<part metaref = "5228" role = "Environment" primary = "yes" linked = "no"></part>
				<part metaref = "5229" role = "Finish" primary = "yes" linked = "no"></part>
				<part metaref = "5230" role = "ForState" primary = "yes" linked = "no"></part>
				<part metaref = "5348" role = "InEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5231" role = "Input" primary = "yes" linked = "no"></part>
				<part metaref = "5232" role = "InputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5233" role = "InputEffect" primary = "yes" linked = "no"></part>
				<part metaref = "5234" role = "LoopTransition" primary = "yes" linked = "no"></part>
				<part metaref = "5235" role = "MultiInput" primary = "yes" linked = "no"></part>
				<part metaref = "5236" role = "MultiInputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5349" role = "OutEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5237" role = "OutputAction" primary = "yes" linked = "no"></part>
				<part metaref = "5238" role = "PeriodicEvent" primary = "yes" linked = "no"></part>
				<part metaref = "5350" role = "ProvidedRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5239" role = "QueryAction" primary = "yes" linked = "no"></part>
				<part metaref = "5240" role = "QueryInput" primary = "yes" linked = "no"></part>
				<part metaref = "5241" role = "QueryInputAction" primary = "yes" linked = "no"></part>
				<part metaref = "4223" role = "ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5351" role = "RequiredRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5242" role = "State" primary = "yes" linked = "no"></part>
				<part metaref = "5243" role = "Terminal" primary = "yes" linked = "no"></part>
				<part metaref = "5244" role = "TerminalEffect" primary = "yes" linked = "no"></part>
				<part metaref = "5245" role = "TerminalTransition" primary = "yes" linked = "no"></part>
				<part metaref = "5246" role = "Transition" primary = "yes" linked = "no"></part>
				<part metaref = "5247" role = "Variable" primary = "yes" linked = "no"></part>
				<part metaref = "5248" role = "WhileState" primary = "yes" linked = "no"></part>
				<part metaref = "5249" role = "WorkerType" primary = "yes" kindaspect = "Behavior" linked = "no"></part>
			</aspect>
			<aspect name = "TemplatePackageType" metaref = "5743" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID label" >
				<part metaref = "5744" role = "ExtendedPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5745" role = "InEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5746" role = "MirrorPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5747" role = "OutEventPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5748" role = "ProvidedRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5749" role = "RequiredRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5750" role = "TemplatePackageInstanceDecl" primary = "yes" linked = "no"></part>
				<part metaref = "5751" role = "TemplatePackageInstanceRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentAssembly" metaref = "5581" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.IDMLDecorator"></regnode>
				<regnode name = "isTypeShown" value ="true"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="RequiredMonolithicImplementation" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let instances = self.modelParts(Component) in
let monolithicImpls = project.allInstancesOf (MonolithicImplementation) in
instances->forAll (x : Component | 
         let myType = x.ComponentParentType() in
                 monolithicImpls->exists ( impl : MonolithicImplementation | 
                    let interfaces = impl.connectedFCOs(Implements) in
                     interfaces->size() = 1 and
                         interfaces->exists (interface : Reference |
                             interface.refersTo().name() = myType.name() )  ) )
                                                            ]]>
				<dispname>Every component instance in an assembly should have a corresponding MonolithicImplementation, or there should exist a MonolithicImplementation for the corresponding component type</dispname>
			</constraint>
			<constraint name="UniqueAttributeMappingNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(AttributeMapping)->isUnique( x : AttributeMapping | x.name().trim())]]>
				<dispname>AttributeMappings used in a ComponentAssembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueInstanceName" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let components = self.modelParts(Component) in
          components->isUnique (i : Component | i.name.trim())]]>
				<dispname>Components of an Assembly should have unique names</dispname>
			</constraint>
			<constraint name="UniqueUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let assemblies = project.allInstancesOf(ComponentAssembly) in 
   assemblies->forAll (a : ComponentAssembly |  
            self.UUID.trim() = a.UUID.trim() => self = a)]]>
				<dispname>Every ComponentImplementation should have a unique UUID</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingHierarchy" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let mappings = self.referenceParts (AttributeMapping) in
    let children = self.modelParts(ComponentAssembly) in
           mappings->forAll ( x : AttributeMapping | 
                let delegates = x.connectedFCOs("dstAttributeMappingDelegate", AttributeMappingDelegate) in
                       delegates->forAll ( y : FCO |
                              let  delParent : Model = y.parent() in
                                          children->exists ( z : ComponentAssembly | delParent.name() = z.name() ) ) ) ]]>
				<dispname>AttributeMappings can only be delegated from a high-level assembly to sub-assemblies, and not vice-versa (Change the connection direction)</dispname>
			</constraint>
			<constraint name="ValidCriticalPathdstCardinality48" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::CriticalPath ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentAssembly as &quot;dst&quot; over CriticalPath, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidImplementsdstCardinality76" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Implements ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentImplementation as &quot;dst&quot; over Implements, has to match 0..1.</dispname>
			</constraint>
			<role name = "AssemblyConfigProperty" metaref = "5582" kind = "AssemblyConfigProperty"></role>
			<role name = "AssemblyselectRequirement" metaref = "5583" kind = "AssemblyselectRequirement"></role>
			<role name = "AttributeDelegate" metaref = "5584" kind = "AttributeDelegate"></role>
			<role name = "AttributeMapping" metaref = "5585" kind = "AttributeMapping"></role>
			<role name = "AttributeMappingDelegate" metaref = "5586" kind = "AttributeMappingDelegate"></role>
			<role name = "AttributeMappingValue" metaref = "5587" kind = "AttributeMappingValue"></role>
			<role name = "AttributeValue" metaref = "5588" kind = "AttributeValue"></role>
			<role name = "ComponentAssembly" metaref = "5589" kind = "ComponentAssembly"></role>
			<role name = "ComponentAssemblyReference" metaref = "5590" kind = "ComponentAssemblyReference"></role>
			<role name = "ComponentInstance" metaref = "5352" kind = "ComponentInstance"></role>
			<role name = "ComponentPackage" metaref = "1320" kind = "ComponentPackage"></role>
			<role name = "ComponentPackageReference" metaref = "1321" kind = "ComponentPackageReference"></role>
			<role name = "ConnectorInstance" metaref = "5250" kind = "ConnectorInstance"></role>
			<role name = "ConnectorToFacet" metaref = "5668" kind = "ConnectorToFacet"></role>
			<role name = "ConnectorToReceptacle" metaref = "5669" kind = "ConnectorToReceptacle"></role>
			<role name = "Consume" metaref = "5591" kind = "Consume"></role>
			<role name = "ECRequirements" metaref = "4010" kind = "ECRequirements"></role>
			<role name = "EventSinkDelegate" metaref = "5592" kind = "EventSinkDelegate"></role>
			<role name = "EventSourceDelegate" metaref = "5593" kind = "EventSourceDelegate"></role>
			<role name = "ExternalDelegate" metaref = "5594" kind = "ExternalDelegate"></role>
			<role name = "ExternalPort" metaref = "5595" kind = "ExternalPort"></role>
			<role name = "FacetDelegate" metaref = "5596" kind = "FacetDelegate"></role>
			<role name = "InEventPortDelegate" metaref = "5597" kind = "InEventPortDelegate"></role>
			<role name = "Invoke" metaref = "5654" kind = "Invoke"></role>
			<role name = "OutEventPortDelegate" metaref = "5598" kind = "OutEventPortDelegate"></role>
			<role name = "Property" metaref = "1329" kind = "Property"></role>
			<role name = "ProvidedRequestPortDelegate" metaref = "5599" kind = "ProvidedRequestPortDelegate"></role>
			<role name = "Publish" metaref = "5600" kind = "Publish"></role>
			<role name = "RTRequirements" metaref = "3951" kind = "RTRequirements"></role>
			<role name = "ReceptacleDelegate" metaref = "5601" kind = "ReceptacleDelegate"></role>
			<role name = "RequiredRequestPortDelegate" metaref = "5602" kind = "RequiredRequestPortDelegate"></role>
			<role name = "Requirement" metaref = "1334" kind = "Requirement"></role>
			<role name = "SendsTo" metaref = "5603" kind = "SendsTo"></role>
			<aspect name = "Packaging" metaref = "1339" attributes = "UUID label" >
				<part metaref = "5605" role = "AssemblyConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5606" role = "AssemblyselectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5607" role = "AttributeDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5608" role = "AttributeMapping" primary = "yes" linked = "yes"></part>
				<part metaref = "5609" role = "AttributeMappingDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5610" role = "AttributeMappingValue" primary = "yes" linked = "no"></part>
				<part metaref = "5611" role = "AttributeValue" primary = "yes" linked = "no"></part>
				<part metaref = "5612" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "5613" role = "ComponentAssemblyReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "5358" role = "ComponentInstance" primary = "yes" linked = "no"></part>
				<part metaref = "1350" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1351" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "5251" role = "ConnectorInstance" primary = "yes" linked = "no"></part>
				<part metaref = "5670" role = "ConnectorToFacet" primary = "yes" linked = "no"></part>
				<part metaref = "5671" role = "ConnectorToReceptacle" primary = "yes" linked = "no"></part>
				<part metaref = "5614" role = "Consume" primary = "yes" linked = "no"></part>
				<part metaref = "4011" role = "ECRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "5615" role = "EventSinkDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5616" role = "EventSourceDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5617" role = "ExternalDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5618" role = "ExternalPort" primary = "yes" linked = "no"></part>
				<part metaref = "5619" role = "FacetDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5620" role = "InEventPortDelegate" primary = "yes" linked = "yes"></part>
				<part metaref = "5655" role = "Invoke" primary = "yes" linked = "no"></part>
				<part metaref = "5621" role = "OutEventPortDelegate" primary = "yes" linked = "yes"></part>
				<part metaref = "1359" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "5622" role = "ProvidedRequestPortDelegate" primary = "yes" linked = "yes"></part>
				<part metaref = "5623" role = "Publish" primary = "yes" linked = "no"></part>
				<part metaref = "3952" role = "RTRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "5624" role = "ReceptacleDelegate" primary = "yes" linked = "no"></part>
				<part metaref = "5625" role = "RequiredRequestPortDelegate" primary = "yes" linked = "yes"></part>
				<part metaref = "1364" role = "Requirement" primary = "yes" linked = "no"></part>
				<part metaref = "5626" role = "SendsTo" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentContainer" metaref = "5364" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidComponentContainerPartCardinality160" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentConfigProperty" metaref = "5365" kind = "ComponentConfigProperty"></role>
			<role name = "ComponentInfoProperty" metaref = "5366" kind = "ComponentInfoProperty"></role>
			<role name = "ComponentProperty" metaref = "5367" kind = "ComponentProperty"></role>
			<role name = "ComponentPropertyDescription" metaref = "5368" kind = "ComponentPropertyDescription"></role>
			<role name = "ComponentRef" metaref = "5369" kind = "ComponentRef"></role>
			<role name = "Property" metaref = "1375" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1376" >
				<part metaref = "5370" role = "ComponentConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5371" role = "ComponentInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5372" role = "ComponentProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5373" role = "ComponentPropertyDescription" primary = "yes" linked = "no"></part>
				<part metaref = "5374" role = "ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "1382" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentFactory" metaref = "5375" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="componentfactory.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDeriveAndSupport" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[referenceParts ("Inherits")->size > 0 implies referenceParts ("Supports")->size = 0]]>
				<dispname>A derived Component or ComponentFactory may not directly support an Object</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="OneParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.parts ("Inherits")->size < 2]]>
				<dispname>ComponentDef and ComponentManager may have only one parent</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidComponentFactoryPartCardinality161" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "LookupKey" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentFactory, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidManagesComponentdstCardinality98" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::ManagesComponent ) -> size in
                     (dstCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to ComponentFactory as &quot;dst&quot; over ManagesComponent, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1384" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1385" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1386" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1387" kind = "Collection"></role>
			<role name = "Constant" metaref = "1388" kind = "Constant"></role>
			<role name = "Enum" metaref = "1389" kind = "Enum"></role>
			<role name = "Exception" metaref = "1390" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1391" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1392" kind = "Inherits"></role>
			<role name = "LookupKey" metaref = "1393" kind = "LookupKey"></role>
			<role name = "LookupOperation" metaref = "1394" kind = "LookupOperation"></role>
			<role name = "OnewayOperation" metaref = "1395" kind = "OnewayOperation"></role>
			<role name = "PortType" metaref = "5376" kind = "PortType"></role>
			<role name = "ReadonlyAttribute" metaref = "1396" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1397" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1398" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1399" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5683" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1401" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1402" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1403" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1404" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1405" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1406" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1407" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1408" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1409" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1410" role = "LookupKey" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1411" role = "LookupOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1412" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5377" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1413" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1414" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1415" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1416" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentFactoryImplementationContainer" metaref = "4113" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "ComponentFactoryInstance" metaref = "4114" kind = "ComponentFactoryInstance"></role>
			<role name = "ComponentImplementationArtifact" metaref = "4246" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4230" kind = "ComponentServantArtifact"></role>
			<role name = "ConfigProperty" metaref = "4134" kind = "ConfigProperty"></role>
			<role name = "ImplementationArtifactReference" metaref = "4146" kind = "ImplementationArtifactReference"></role>
			<role name = "ImplementationRequirement" metaref = "4147" kind = "ImplementationRequirement"></role>
			<role name = "InfoProperty" metaref = "4135" kind = "InfoProperty"></role>
			<role name = "MonolithDeployRequirement" metaref = "4148" kind = "MonolithDeployRequirement"></role>
			<role name = "MonolithExecParameter" metaref = "4149" kind = "MonolithExecParameter"></role>
			<role name = "MonolithprimaryArtifact" metaref = "4150" kind = "MonolithprimaryArtifact"></role>
			<role name = "Property" metaref = "4116" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "4117" >
				<part metaref = "4118" role = "ComponentFactoryInstance" primary = "yes" linked = "no"></part>
				<part metaref = "4247" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4238" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4138" role = "ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "4151" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "4152" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "4139" role = "InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "4153" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "4154" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "4155" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4120" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentImplementationContainer" metaref = "5378" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ImplementationXor" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[(self.modelParts (ComponentAssembly)->size = 1 implies self.atomParts (MonolithicImplementation)->size = 0)and
          (self.atomParts (MonolithicImplementation)->size = 1 implies self.modelParts (ComponentAssembly)->size = 0)]]>
				<dispname>ComponentImplementation can either be Monolithic or be assembly based, but not both</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality162" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Implements" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality163" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PathReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidComponentImplementationContainerPartCardinality164" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentImplementationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "Capability" metaref = "1418" kind = "Capability"></role>
			<role name = "ComponentAssembly" metaref = "5628" kind = "ComponentAssembly"></role>
			<role name = "ComponentImplementationArtifact" metaref = "4248" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentRef" metaref = "5379" kind = "ComponentRef"></role>
			<role name = "ComponentServantArtifact" metaref = "4234" kind = "ComponentServantArtifact"></role>
			<role name = "ConfigProperty" metaref = "4129" kind = "ConfigProperty"></role>
			<role name = "CriticalPath" metaref = "5380" kind = "CriticalPath"></role>
			<role name = "ImplementationArtifactReference" metaref = "1422" kind = "ImplementationArtifactReference"></role>
			<role name = "ImplementationCapability" metaref = "5381" kind = "ImplementationCapability"></role>
			<role name = "ImplementationDependency" metaref = "1424" kind = "ImplementationDependency"></role>
			<role name = "ImplementationDependsOn" metaref = "5382" kind = "ImplementationDependsOn"></role>
			<role name = "ImplementationRequirement" metaref = "1426" kind = "ImplementationRequirement"></role>
			<role name = "Implements" metaref = "5383" kind = "Implements"></role>
			<role name = "InfoProperty" metaref = "4130" kind = "InfoProperty"></role>
			<role name = "MonolithDeployRequirement" metaref = "4156" kind = "MonolithDeployRequirement"></role>
			<role name = "MonolithExecParameter" metaref = "4157" kind = "MonolithExecParameter"></role>
			<role name = "MonolithicImplementation" metaref = "5384" kind = "MonolithicImplementation"></role>
			<role name = "MonolithprimaryArtifact" metaref = "4158" kind = "MonolithprimaryArtifact"></role>
			<role name = "PathReference" metaref = "3067" kind = "PathReference"></role>
			<role name = "Property" metaref = "1433" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1434" >
				<part metaref = "1435" role = "Capability" primary = "yes" linked = "no"></part>
				<part metaref = "5629" role = "ComponentAssembly" primary = "yes" linked = "no"></part>
				<part metaref = "4249" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "5385" role = "ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "4242" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4131" role = "ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5386" role = "CriticalPath" primary = "yes" linked = "no"></part>
				<part metaref = "1439" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "5387" role = "ImplementationCapability" primary = "yes" linked = "no"></part>
				<part metaref = "1441" role = "ImplementationDependency" primary = "yes" linked = "no"></part>
				<part metaref = "5388" role = "ImplementationDependsOn" primary = "yes" linked = "no"></part>
				<part metaref = "1443" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "5389" role = "Implements" primary = "yes" linked = "no"></part>
				<part metaref = "4132" role = "InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "4159" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "4160" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5390" role = "MonolithicImplementation" primary = "yes" linked = "no"></part>
				<part metaref = "4161" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "3069" role = "PathReference" primary = "yes" kindaspect = "PathDiagram" linked = "no"></part>
				<part metaref = "1450" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ComponentInstance" metaref = "5391" attributes = "UUID" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="component.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="HasUUID" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.UUID.trim ().size <> 0]]>
				<dispname>Component instance must have a UUID</dispname>
			</constraint>
			<constraint name="NonRedundantProperties" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let properties = self.bagConnectedFCOs (AssemblyConfigProperty) in 
properties->isUnique (x: Property | x.name().trim())]]>
				<dispname>Property with the same name is connected directly to instance.</dispname>
			</constraint>
			<constraint name="ValidComponentInstancePartCardinality165" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentInstanceType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentInstance, has to match 1.</dispname>
			</constraint>
			<role name = "AttributeInstance" metaref = "5630" kind = "AttributeInstance"></role>
			<role name = "ComponentInstanceType" metaref = "5392" kind = "ComponentInstanceType"></role>
			<role name = "ExtendedPortInstance" metaref = "5631" kind = "ExtendedPortInstance"></role>
			<role name = "InEventPortInstance" metaref = "5632" kind = "InEventPortInstance"></role>
			<role name = "MirrorPortInstance" metaref = "5633" kind = "MirrorPortInstance"></role>
			<role name = "OutEventPortInstance" metaref = "5634" kind = "OutEventPortInstance"></role>
			<role name = "ProvidedRequestPortInstance" metaref = "5635" kind = "ProvidedRequestPortInstance"></role>
			<role name = "RequiredRequestPortInstance" metaref = "5636" kind = "RequiredRequestPortInstance"></role>
			<role name = "SupportsInstance" metaref = "5637" kind = "SupportsInstance"></role>
			<aspect name = "ComponentImplementation" metaref = "5708" attributes = "UUID" >
				<dispname>Component Implementation</dispname>
				<part metaref = "5709" role = "ComponentInstanceType" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "ComponentInterface" metaref = "5710" attributes = "UUID" >
				<dispname>Component Interface</dispname>
				<part metaref = "5711" role = "AttributeInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5712" role = "ExtendedPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5713" role = "InEventPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5714" role = "MirrorPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5715" role = "OutEventPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5716" role = "ProvidedRequestPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5717" role = "RequiredRequestPortInstance" primary = "yes" linked = "yes"></part>
				<part metaref = "5718" role = "SupportsInstance" primary = "yes" linked = "yes"></part>
			</aspect>
		</model>
		<model name = "ComponentPropertyDescription" metaref = "5412" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ComponentProperty.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidComponentPropertyDescriptionPartCardinality166" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ComponentPropertyDescription, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1452" kind = "DataType"></role>
			<aspect name = "Packaging" metaref = "1453" >
				<part metaref = "1454" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ConnectedComponent" metaref = "2011" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidDstEdgedstCardinality52" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::DstEdge ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;dst&quot; over DstEdge, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidSrcEdgesrcCardinality137" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::SrcEdge ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to GraphVertex as &quot;src&quot; over SrcEdge, has to match 0..1.</dispname>
			</constraint>
			<role name = "DstEdge" metaref = "2114" kind = "DstEdge"></role>
			<role name = "InEventPort" metaref = "5413" kind = "InEventPort"></role>
			<role name = "OutEventPort" metaref = "5414" kind = "OutEventPort"></role>
			<role name = "ProvidedRequestPort" metaref = "5415" kind = "ProvidedRequestPort"></role>
			<role name = "RequiredRequestPort" metaref = "5416" kind = "RequiredRequestPort"></role>
			<aspect name = "PathDiagram" metaref = "3131" >
				<part metaref = "3132" role = "DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "5417" role = "InEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5418" role = "OutEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5419" role = "ProvidedRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "5420" role = "RequiredRequestPort" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ConnectorImplementationContainer" metaref = "5252" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "ComponentImplementationArtifact" metaref = "4870" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4871" kind = "ComponentServantArtifact"></role>
			<role name = "ConfigProperty" metaref = "4872" kind = "ConfigProperty"></role>
			<role name = "ConnectorImplementation" metaref = "5253" kind = "ConnectorImplementation"></role>
			<role name = "ConnectorImplements" metaref = "5254" kind = "ConnectorImplements"></role>
			<role name = "ConnectorType" metaref = "5255" kind = "ConnectorType"></role>
			<role name = "ImplementationArtifactReference" metaref = "4874" kind = "ImplementationArtifactReference"></role>
			<role name = "ImplementationRequirement" metaref = "4875" kind = "ImplementationRequirement"></role>
			<role name = "InfoProperty" metaref = "4876" kind = "InfoProperty"></role>
			<role name = "MonolithDeployRequirement" metaref = "4877" kind = "MonolithDeployRequirement"></role>
			<role name = "MonolithExecParameter" metaref = "4878" kind = "MonolithExecParameter"></role>
			<role name = "MonolithprimaryArtifact" metaref = "4879" kind = "MonolithprimaryArtifact"></role>
			<role name = "Property" metaref = "4880" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "4881" >
				<part metaref = "4882" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4883" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4884" role = "ConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5256" role = "ConnectorImplementation" primary = "yes" linked = "no"></part>
				<part metaref = "5257" role = "ConnectorImplements" primary = "yes" linked = "no"></part>
				<part metaref = "5258" role = "ConnectorType" primary = "yes" linked = "no"></part>
				<part metaref = "4886" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
				<part metaref = "4887" role = "ImplementationRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "4888" role = "InfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "4889" role = "MonolithDeployRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "4890" role = "MonolithExecParameter" primary = "yes" linked = "no"></part>
				<part metaref = "4891" role = "MonolithprimaryArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4892" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ConnectorInstance" metaref = "5259" attributes = "UUID" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Connector.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
			<constraint name="NonRedundantProperties" eventmask = "0x800" depth = "1" priority = "1">
				<![CDATA[let properties = self.bagConnectedFCOs (AssemblyConfigProperty) in 
properties->isUnique (x: Property | x.name().trim())]]>
				<dispname>Property with the same name is connected directly to instance.</dispname>
			</constraint>
			<constraint name="ValidConnectorInstancePartCardinality167" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ConnectorImplementationType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ConnectorInstance, has to match 1.</dispname>
			</constraint>
			<role name = "AttributeInstance" metaref = "5656" kind = "AttributeInstance"></role>
			<role name = "ConnectorImplementationType" metaref = "5260" kind = "ConnectorImplementationType"></role>
			<aspect name = "ConnectorInterfaceAspect" metaref = "5306" attributes = "UUID" >
				<dispname>Connector Interface</dispname>
				<part metaref = "5661" role = "AttributeInstance" primary = "yes" linked = "yes"></part>
			</aspect>
			<aspect name = "ConnectorImplAspect" metaref = "5424" attributes = "UUID" >
				<dispname>Connector Implementation</dispname>
				<part metaref = "5425" role = "ConnectorImplementationType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ConnectorObject" metaref = "5262" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID" >
			<dispname>Connector</dispname>
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="ConnectorObject.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidConnectorObjectPartCardinality168" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ConnectorInherits" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ConnectorObject, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Attribute" metaref = "4324" kind = "Attribute"></role>
			<role name = "ConnectorInherits" metaref = "5297" kind = "ConnectorInherits"></role>
			<role name = "ExtendedPort" metaref = "5491" kind = "ExtendedPort"></role>
			<role name = "MirrorPort" metaref = "5500" kind = "MirrorPort"></role>
			<role name = "ProvidedRequestPort" metaref = "5430" kind = "ProvidedRequestPort"></role>
			<role name = "ReadonlyAttribute" metaref = "4325" kind = "ReadonlyAttribute"></role>
			<role name = "RequiredRequestPort" metaref = "5431" kind = "RequiredRequestPort"></role>
			<role name = "TemplatePackageInstanceDecl" metaref = "5740" kind = "TemplatePackageInstanceDecl"></role>
			<role name = "TemplatePackageInstanceRef" metaref = "5730" kind = "TemplatePackageInstanceRef"></role>
			<aspect name = "InterfaceDefinition" metaref = "5693" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID" >
				<part metaref = "4326" role = "Attribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5298" role = "ConnectorInherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5492" role = "ExtendedPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5501" role = "MirrorPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "5433" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "4327" role = "ReadonlyAttribute" primary = "yes" linked = "yes"></part>
				<part metaref = "5434" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
			</aspect>
			<aspect name = "TemplatePackageType" metaref = "5752" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives UUID" >
				<part metaref = "5753" role = "ExtendedPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5754" role = "MirrorPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5755" role = "ProvidedRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5756" role = "RequiredRequestPort" primary = "yes" linked = "yes"></part>
				<part metaref = "5757" role = "TemplatePackageInstanceDecl" primary = "yes" linked = "no"></part>
				<part metaref = "5758" role = "TemplatePackageInstanceRef" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "DeploymentPlan" metaref = "1455" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniquePropertyNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let properties = self.modelParts(Property) in
          properties->isUnique (i : Property | i.name.trim())]]>
				<dispname>Names of the properties in a deployment plan should be unique</dispname>
			</constraint>
			<role name = "CollocationGroup" metaref = "1456" kind = "CollocationGroup"></role>
			<role name = "ComponentAssemblyReference" metaref = "5645" kind = "ComponentAssemblyReference"></role>
			<role name = "ComponentFactoryRef" metaref = "4105" kind = "ComponentFactoryRef"></role>
			<role name = "ComponentInstanceRef" metaref = "5153" kind = "ComponentInstanceRef"></role>
			<role name = "Deploys" metaref = "4107" kind = "Deploys"></role>
			<role name = "InstanceMapping" metaref = "1459" kind = "InstanceMapping"></role>
			<role name = "NodeReference" metaref = "1460" kind = "NodeReference"></role>
			<role name = "Property" metaref = "3626" kind = "Property"></role>
			<aspect name = "NodeMapping" metaref = "1461" attributes = "UUID label" >
				<part metaref = "1462" role = "CollocationGroup" primary = "yes" linked = "no"></part>
				<part metaref = "5646" role = "ComponentAssemblyReference" primary = "yes" linked = "no"></part>
				<part metaref = "4108" role = "ComponentFactoryRef" primary = "yes" linked = "no"></part>
				<part metaref = "5154" role = "ComponentInstanceRef" primary = "yes" linked = "no"></part>
				<part metaref = "4109" role = "Deploys" primary = "yes" linked = "no"></part>
				<part metaref = "1465" role = "InstanceMapping" primary = "yes" linked = "no"></part>
				<part metaref = "1466" role = "NodeReference" primary = "yes" kindaspect = "Target" linked = "no"></part>
				<part metaref = "3627" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Domain" metaref = "1467" attributes = "UUID label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Domain"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Bridge" metaref = "1468" kind = "Bridge"></role>
			<role name = "BridgeConnection" metaref = "4176" kind = "BridgeConnection"></role>
			<role name = "Interconnect" metaref = "1470" kind = "Interconnect"></role>
			<role name = "InterconnectConnection" metaref = "4177" kind = "InterconnectConnection"></role>
			<role name = "Node" metaref = "1473" kind = "Node"></role>
			<role name = "Property" metaref = "1475" kind = "Property"></role>
			<role name = "SharedResource" metaref = "1476" kind = "SharedResource"></role>
			<role name = "Shares" metaref = "1477" kind = "Shares"></role>
			<aspect name = "Target" metaref = "1478" attributes = "UUID label" >
				<part metaref = "1479" role = "Bridge" primary = "yes" linked = "no"></part>
				<part metaref = "4178" role = "BridgeConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1481" role = "Interconnect" primary = "yes" linked = "no"></part>
				<part metaref = "4179" role = "InterconnectConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1484" role = "Node" primary = "yes" linked = "no"></part>
				<part metaref = "1486" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "1487" role = "SharedResource" primary = "yes" linked = "no"></part>
				<part metaref = "1488" role = "Shares" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ECRequirements" metaref = "4012" attributes = "resourceType ConfigureRTQoS" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidECRequirementsPartCardinality169" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ECBehavior" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ECRequirements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidECRequirementsPartCardinality170" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ECRole" ) -> size in
                     (partCount = 2)]]>
				<dispname>Multiplicity of parts, which are contained by ECRequirements, has to match 2.</dispname>
			</constraint>
			<role name = "ECBehavior" metaref = "4013" kind = "ECBehavior"></role>
			<role name = "ECRole" metaref = "4014" kind = "ECRole"></role>
			<role name = "Property" metaref = "4015" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "4016" attributes = "resourceType ConfigureRTQoS" >
				<part metaref = "4017" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "EventChannelRequirement" metaref = "4018" attributes = "resourceType ConfigureRTQoS" >
				<part metaref = "4019" role = "ECBehavior" primary = "yes" linked = "no"></part>
				<part metaref = "4020" role = "ECRole" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Enum" metaref = "1489" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="enum.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniqueEnumValues" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[atomParts ()->forAll (x, y : gme::Atom | x <> y implies x.name <> y.name)]]>
				<dispname>An enum&apos;s member names must be unique</dispname>
			</constraint>
			<constraint name="ValidEnumPartCardinality171" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "EnumValue" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by Enum, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "EnumValue" metaref = "1490" kind = "EnumValue"></role>
			<aspect name = "InterfaceDefinition" metaref = "5694" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1492" role = "EnumValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Event" metaref = "1493" attributes = "VersionTag PrefixTag SpecifyIdTag abstract PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="event.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ConcreteEventParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents = self.parts ("Inherits")->select (x : gme::Model | x.oclAsType (Event).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract Event can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "1494" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "Aggregate" metaref = "1495" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1496" kind = "Alias"></role>
			<role name = "ArrayMember" metaref = "5517" kind = "ArrayMember"></role>
			<role name = "Attribute" metaref = "1497" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1498" kind = "Collection"></role>
			<role name = "Constant" metaref = "1499" kind = "Constant"></role>
			<role name = "Enum" metaref = "1500" kind = "Enum"></role>
			<role name = "Exception" metaref = "1501" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1502" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1503" kind = "Inherits"></role>
			<role name = "MakeMemberPrivate" metaref = "1504" kind = "MakeMemberPrivate"></role>
			<role name = "Member" metaref = "1505" kind = "Member"></role>
			<role name = "OnewayOperation" metaref = "1506" kind = "OnewayOperation"></role>
			<role name = "PortType" metaref = "5435" kind = "PortType"></role>
			<role name = "PrivateFlag" metaref = "1507" kind = "PrivateFlag"></role>
			<role name = "ReadonlyAttribute" metaref = "1508" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1509" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1510" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1511" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5695" attributes = "VersionTag PrefixTag SpecifyIdTag abstract PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1513" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1514" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5518" role = "ArrayMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1515" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1516" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1517" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1518" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1519" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1520" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1521" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1522" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "1523" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1524" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5436" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1525" role = "PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "1526" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1527" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1528" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1529" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Exception" metaref = "1552" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="exception.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ArrayMember" metaref = "5519" kind = "ArrayMember"></role>
			<role name = "Member" metaref = "1553" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "5696" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "5520" role = "ArrayMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1555" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ExecutorProject" metaref = "1556" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidExecutorProjectPartCardinality172" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size + self.parts( "ComponentImplementationArtifact" ) -> size + self.parts( "ComponentServantArtifact" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ExecutorProject, has to match 1.</dispname>
			</constraint>
			<constraint name="execOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>One An executor project can exist as a part of the Component Project</dispname>
			</constraint>
			<role name = "ComponentImplementationArtifact" metaref = "4254" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4255" kind = "ComponentServantArtifact"></role>
			<role name = "ImplementationArtifactReference" metaref = "1557" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1558" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "4256" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4257" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "1559" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "FactoryOperation" metaref = "1560" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="factory.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1561" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1562" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5697" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1564" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1565" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "File" metaref = "1566" attributes = "Path PrefixTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniqueFileIncludes" eventmask = "0x400" depth = "1" priority = "1">
				<![CDATA[referenceParts (FileRef)->forAll (x, y : gme::Reference | x <> y implies x.refersTo ().name <> y.refersTo ().name)]]>
				<dispname>A file cannot be included more than once</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1567" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1568" kind = "Alias"></role>
			<role name = "Boxed" metaref = "1569" kind = "Boxed"></role>
			<role name = "Collection" metaref = "1570" kind = "Collection"></role>
			<role name = "Component" metaref = "5437" kind = "Component"></role>
			<role name = "ComponentFactory" metaref = "5438" kind = "ComponentFactory"></role>
			<role name = "ComponentRef" metaref = "5439" kind = "ComponentRef"></role>
			<role name = "ConnectorObject" metaref = "5263" kind = "ConnectorObject"></role>
			<role name = "Constant" metaref = "1574" kind = "Constant"></role>
			<role name = "Enum" metaref = "1575" kind = "Enum"></role>
			<role name = "Event" metaref = "1576" kind = "Event"></role>
			<role name = "Exception" metaref = "1577" kind = "Exception"></role>
			<role name = "FileRef" metaref = "1578" kind = "FileRef"></role>
			<role name = "ManagesComponent" metaref = "5440" kind = "ManagesComponent"></role>
			<role name = "Object" metaref = "1580" kind = "Object"></role>
			<role name = "Package" metaref = "1581" kind = "Package"></role>
			<role name = "PortType" metaref = "5441" kind = "PortType"></role>
			<role name = "SwitchedAggregate" metaref = "1582" kind = "SwitchedAggregate"></role>
			<role name = "TemplatePackageInstance" metaref = "5541" kind = "TemplatePackageInstance"></role>
			<role name = "ValueObject" metaref = "1583" kind = "ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "5698" attributes = "Path PrefixTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1585" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1586" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1587" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1588" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5442" role = "Component" primary = "yes" linked = "no"></part>
				<part metaref = "5443" role = "ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5444" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5264" role = "ConnectorObject" primary = "yes" linked = "no"></part>
				<part metaref = "1592" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1593" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1594" role = "Event" primary = "yes" linked = "no"></part>
				<part metaref = "1595" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1596" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5445" role = "ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "1598" role = "Object" primary = "yes" linked = "no"></part>
				<part metaref = "1599" role = "Package" primary = "yes" linked = "no"></part>
				<part metaref = "5446" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1600" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5542" role = "TemplatePackageInstance" primary = "yes" linked = "no"></part>
				<part metaref = "1601" role = "ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ImplementationRequirement" metaref = "1602" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="ImplementationRequirement.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Property" metaref = "1603" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1604" attributes = "resourceType resourcePort componentPort ResourceUsageKind" >
				<part metaref = "1605" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "InputAction" metaref = "5265" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
				<regnode name = "isNameEnabled" value ="false"></regnode>
			<constraint name="MustHaveFinish" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections( "dst", Finish ) -> size = 1]]>
				<dispname>Input actions must have one finish connection</dispname>
			</constraint>
			<constraint name="ValidFinishsrcCardinality67" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BehaviorInputAction as &quot;src&quot; over Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputEffectdstCardinality82" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::InputEffect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BehaviorInputAction as &quot;dst&quot; over InputEffect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputsrcCardinality79" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Input ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to InputAction as &quot;src&quot; over Input, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2023" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2934" >
				<part metaref = "2935" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Interconnect" metaref = "1606" attributes = "label" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Interconnect"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Resource" metaref = "1607" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1608" attributes = "label" >
				<part metaref = "1609" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Latency" metaref = "1610" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Latency.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidBenchmarkCharacteristicssrcCardinality23" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;src&quot; over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectionsrcCardinality99" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;src&quot; over MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWorkloadCharacteristicsdstCardinality154" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;dst&quot; over WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "Average" metaref = "1611" kind = "Average"></role>
			<role name = "Jitter" metaref = "1612" kind = "Jitter"></role>
			<role name = "Maximum" metaref = "1613" kind = "Maximum"></role>
			<role name = "Minimum" metaref = "1614" kind = "Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "1615" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "1616" role = "Average" primary = "yes" linked = "no"></part>
				<part metaref = "1617" role = "Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "1618" role = "Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "1619" role = "Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "LookupOperation" metaref = "1620" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="lookup.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1621" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1622" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5699" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1624" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1625" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "MPC" metaref = "1626" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Project" metaref = "1627" kind = "Project"></role>
			<role name = "Workspaces" metaref = "1628" kind = "Workspaces"></role>
			<aspect name = "Workspace" metaref = "1629" >
				<part metaref = "1630" role = "Project" primary = "yes" linked = "no"></part>
				<part metaref = "1631" role = "Workspaces" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "MultiInputAction" metaref = "5266" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="InputAction.bmp"></regnode>
				<regnode name = "icon" value ="MultiInputAction.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="MustHaveFinish" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.attachingConnections( "dst", Finish ) -> size = 1]]>
				<dispname>Input actions must have one finish connection</dispname>
			</constraint>
			<constraint name="ValidFinishsrcCardinality67" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Finish ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BehaviorInputAction as &quot;src&quot; over Finish, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidInputEffectdstCardinality82" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::InputEffect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to BehaviorInputAction as &quot;dst&quot; over InputEffect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMultiInputsrcCardinality107" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::MultiInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MultiInputAction as &quot;src&quot; over MultiInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "4211" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "4212" >
				<part metaref = "4213" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Node" metaref = "1632" attributes = "label operatingSystem architecture" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Node"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Resource" metaref = "1633" kind = "Resource"></role>
			<aspect name = "Target" metaref = "1634" attributes = "label operatingSystem architecture" >
				<part metaref = "1635" role = "Resource" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Object" metaref = "1636" attributes = "VersionTag PrefixTag SpecifyIdTag PrePreprocessorDirectives InterfaceSemantics PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="object.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoNonLocalFromLocal" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[if (self.InterfaceSemantics = "local") then
  true
else
  let parents = self.parts ("Inherits")->collect (x : gme::Reference | x.refersTo ()) in
  parents->forAll (x : gme::Model | x.oclAsType (Object).InterfaceSemantics != "local")
endif]]>
				<dispname>A non-local Object cannot inherit from a local one</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1639" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1640" kind = "Alias"></role>
			<role name = "Attribute" metaref = "1641" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1642" kind = "Collection"></role>
			<role name = "Constant" metaref = "1643" kind = "Constant"></role>
			<role name = "Enum" metaref = "1644" kind = "Enum"></role>
			<role name = "Exception" metaref = "1645" kind = "Exception"></role>
			<role name = "Inherits" metaref = "1646" kind = "Inherits"></role>
			<role name = "OnewayOperation" metaref = "1647" kind = "OnewayOperation"></role>
			<role name = "PortType" metaref = "5447" kind = "PortType"></role>
			<role name = "ReadonlyAttribute" metaref = "1648" kind = "ReadonlyAttribute"></role>
			<role name = "SwitchedAggregate" metaref = "1649" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1650" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5700" attributes = "VersionTag PrefixTag SpecifyIdTag PrePreprocessorDirectives InterfaceSemantics PostPreprocessorDirectives" >
				<part metaref = "1652" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1653" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1654" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1655" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1656" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1657" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1658" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1659" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1660" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5448" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1661" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1662" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1663" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "OnewayOperation" metaref = "1664" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="oneway.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "InParameter" metaref = "1665" kind = "InParameter"></role>
			<aspect name = "InterfaceDefinition" metaref = "5701" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1667" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "OutputAction" metaref = "5267" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="OutputAction.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="HasEffect" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let name = self->parent ().kindName in

if name <> "Worker" then
  self->attachingConnections( "src", Effect) -> size = 1
else
  true
endif]]>
				<dispname>Action is missing effect connection</dispname>
			</constraint>
			<constraint name="UnknownOutput" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let parent : Component = self.parent () in
let ports = parent.parts (OutEventPort) in

ports.exists (iter : OutEventPort | iter->name () = self.name ())]]>
				<dispname>Name of the output action must match the name of output port</dispname>
			</constraint>
			<constraint name="ValidBranchTransitionsrcCardinality25" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::BranchTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over BranchTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality56" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;dst&quot; over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidLoopTransitionsrcCardinality93" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::LoopTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality149" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "2939" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "2038" >
				<part metaref = "2039" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Package" metaref = "1668" attributes = "VersionTag PrefixTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
				<regnode name = "decorator" value ="MGA.Decorator.PackageDecorator"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="NonEmptyPackage" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.parts ()->size > 0]]>
				<dispname>A package cannot be empty</dispname>
			</constraint>
			<constraint name="UniquePackageDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts ()->forAll (
          x, y : gme::FCO | x.name == y.name implies (x == y or
          (x.oclIsTypeOf (Package) and y.oclIsTypeOf (Package)) or
          (x.oclIsTypeOf (gme::Connection) or y.oclIsTypeOf (gme::Connection)))
          )
          ]]>
				<dispname>Declarations in a Package must have unique names unless they are themselves Packages</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Aggregate" metaref = "1669" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1670" kind = "Alias"></role>
			<role name = "Boxed" metaref = "1671" kind = "Boxed"></role>
			<role name = "Collection" metaref = "1672" kind = "Collection"></role>
			<role name = "CollectionParameter" metaref = "4331" kind = "CollectionParameter"></role>
			<role name = "Component" metaref = "5449" kind = "Component"></role>
			<role name = "ComponentFactory" metaref = "5450" kind = "ComponentFactory"></role>
			<role name = "ComponentRef" metaref = "5451" kind = "ComponentRef"></role>
			<role name = "ConnectorObject" metaref = "5268" kind = "ConnectorObject"></role>
			<role name = "Constant" metaref = "1676" kind = "Constant"></role>
			<role name = "Enum" metaref = "1677" kind = "Enum"></role>
			<role name = "Event" metaref = "1678" kind = "Event"></role>
			<role name = "Exception" metaref = "1679" kind = "Exception"></role>
			<role name = "ManagesComponent" metaref = "5452" kind = "ManagesComponent"></role>
			<role name = "NameParameter" metaref = "5528" kind = "NameParameter"></role>
			<role name = "Object" metaref = "1681" kind = "Object"></role>
			<role name = "Package" metaref = "1682" kind = "Package"></role>
			<role name = "PortType" metaref = "5453" kind = "PortType"></role>
			<role name = "SwitchedAggregate" metaref = "1683" kind = "SwitchedAggregate"></role>
			<role name = "TemplatePackageInstance" metaref = "5543" kind = "TemplatePackageInstance"></role>
			<role name = "TypeParameter" metaref = "5529" kind = "TypeParameter"></role>
			<role name = "ValueObject" metaref = "1684" kind = "ValueObject"></role>
			<aspect name = "InterfaceDefinition" metaref = "5702" attributes = "VersionTag PrefixTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1686" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1687" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1688" role = "Boxed" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1689" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5454" role = "Component" primary = "yes" linked = "no"></part>
				<part metaref = "5455" role = "ComponentFactory" primary = "yes" linked = "no"></part>
				<part metaref = "5456" role = "ComponentRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5269" role = "ConnectorObject" primary = "yes" linked = "no"></part>
				<part metaref = "1693" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1694" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1695" role = "Event" primary = "yes" linked = "no"></part>
				<part metaref = "1696" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "5457" role = "ManagesComponent" primary = "yes" linked = "no"></part>
				<part metaref = "1698" role = "Object" primary = "yes" linked = "no"></part>
				<part metaref = "1699" role = "Package" primary = "yes" linked = "no"></part>
				<part metaref = "5458" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1700" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "5544" role = "TemplatePackageInstance" primary = "yes" linked = "no"></part>
				<part metaref = "1701" role = "ValueObject" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "TemplateParameters" metaref = "4334" attributes = "VersionTag PrefixTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<dispname>Template Parameters</dispname>
				<part metaref = "4335" role = "CollectionParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5536" role = "NameParameter" primary = "yes" linked = "no"></part>
				<part metaref = "5537" role = "TypeParameter" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PackageConfigurationContainer" metaref = "1702" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="PackageConfXor" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts(PackageConfigurationReference)->size = 1
          xor self.referenceParts(ComponentPackageReference)->size = 1
          xor self.atomParts(ComponentPackage)->size = 1]]>
				<dispname>A PackageConfiguration can either specialize another PackageConfiguration, or contain a ComponentPackage, or contain a reference to a ComponentPackage</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality173" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality174" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackageReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality175" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfiguration" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality176" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfSpecializedConfig" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality177" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfReference" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageConfigurationContainerPartCardinality178" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfBasePackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageConfigurationContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentPackage" metaref = "1703" kind = "ComponentPackage"></role>
			<role name = "ComponentPackageReference" metaref = "1704" kind = "ComponentPackageReference"></role>
			<role name = "ECRequirements" metaref = "4021" kind = "ECRequirements"></role>
			<role name = "PackageConfBasePackage" metaref = "1705" kind = "PackageConfBasePackage"></role>
			<role name = "PackageConfConfigProperty" metaref = "1706" kind = "PackageConfConfigProperty"></role>
			<role name = "PackageConfReference" metaref = "1707" kind = "PackageConfReference"></role>
			<role name = "PackageConfSelectRequirement" metaref = "1708" kind = "PackageConfSelectRequirement"></role>
			<role name = "PackageConfSpecializedConfig" metaref = "1709" kind = "PackageConfSpecializedConfig"></role>
			<role name = "PackageConfiguration" metaref = "1710" kind = "PackageConfiguration"></role>
			<role name = "Property" metaref = "1711" kind = "Property"></role>
			<role name = "RTRequirements" metaref = "3953" kind = "RTRequirements"></role>
			<role name = "Requirement" metaref = "1712" kind = "Requirement"></role>
			<aspect name = "Packaging" metaref = "1713" >
				<part metaref = "1714" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1715" role = "ComponentPackageReference" primary = "yes" linked = "no"></part>
				<part metaref = "4022" role = "ECRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "1716" role = "PackageConfBasePackage" primary = "yes" linked = "no"></part>
				<part metaref = "1717" role = "PackageConfConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1718" role = "PackageConfReference" primary = "yes" linked = "no"></part>
				<part metaref = "1719" role = "PackageConfSelectRequirement" primary = "yes" linked = "no"></part>
				<part metaref = "1720" role = "PackageConfSpecializedConfig" primary = "yes" linked = "no"></part>
				<part metaref = "1721" role = "PackageConfiguration" primary = "yes" linked = "no"></part>
				<part metaref = "1722" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "3954" role = "RTRequirements" primary = "yes" linked = "no"></part>
				<part metaref = "1723" role = "Requirement" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PackageContainer" metaref = "1724" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="MatchingInterfaces" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let pkgInterface = self.referenceParts (ComponentRef) in
let impls = self.referenceParts(ComponentImplementationReference) in
  impls->forAll (i : ComponentImplementationReference | 
        let implementation: ComponentImplementation = i.refersTo() in
        let interfaces = implementation.connectedFCOs(Implements) in
            interfaces->forAll ( j: Component | 
               pkgInterface->forAll ( k: ComponentRef |
                       j.name() = k.refersTo().name() ) ) )]]>
				<dispname>Monolithic implementation in a ComponentPackage should all implement the same component interface</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality179" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageInterface" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality180" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPackageContainerPartCardinality181" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ComponentRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by PackageContainer, has to match 0..1.</dispname>
			</constraint>
			<role name = "ComponentImplementationReference" metaref = "5459" kind = "ComponentImplementationReference"></role>
			<role name = "ComponentPackage" metaref = "1726" kind = "ComponentPackage"></role>
			<role name = "ComponentRef" metaref = "5460" kind = "ComponentRef"></role>
			<role name = "Implementation" metaref = "1728" kind = "Implementation"></role>
			<role name = "PackageConfigProperty" metaref = "1729" kind = "PackageConfigProperty"></role>
			<role name = "PackageInfoProperty" metaref = "1730" kind = "PackageInfoProperty"></role>
			<role name = "PackageInterface" metaref = "1731" kind = "PackageInterface"></role>
			<role name = "Property" metaref = "1732" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1733" >
				<part metaref = "5461" role = "ComponentImplementationReference" primary = "yes" kindaspect = "Packaging" linked = "no"></part>
				<part metaref = "1735" role = "ComponentPackage" primary = "yes" linked = "no"></part>
				<part metaref = "5462" role = "ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "1737" role = "Implementation" primary = "yes" linked = "no"></part>
				<part metaref = "1738" role = "PackageConfigProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1739" role = "PackageInfoProperty" primary = "yes" linked = "no"></part>
				<part metaref = "1740" role = "PackageInterface" primary = "yes" linked = "no"></part>
				<part metaref = "1741" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Path" metaref = "2116" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "ComponentRef" metaref = "5463" kind = "ComponentRef"></role>
			<role name = "ConnectedComponent" metaref = "2024" kind = "ConnectedComponent"></role>
			<role name = "DisplayNode" metaref = "2845" kind = "DisplayNode"></role>
			<role name = "DstEdge" metaref = "2117" kind = "DstEdge"></role>
			<role name = "Edge" metaref = "2118" kind = "Edge"></role>
			<role name = "EdgeProperty" metaref = "3070" kind = "EdgeProperty"></role>
			<role name = "InEventPort" metaref = "5464" kind = "InEventPort"></role>
			<role name = "OutEventPort" metaref = "5465" kind = "OutEventPort"></role>
			<role name = "Property" metaref = "2080" kind = "Property"></role>
			<role name = "ProvidedRequestPort" metaref = "5466" kind = "ProvidedRequestPort"></role>
			<role name = "RequiredRequestPort" metaref = "5467" kind = "RequiredRequestPort"></role>
			<role name = "SrcEdge" metaref = "2119" kind = "SrcEdge"></role>
			<aspect name = "PathDiagram" metaref = "3137" >
				<part metaref = "5468" role = "ComponentRef" primary = "yes" linked = "no"></part>
				<part metaref = "3139" role = "ConnectedComponent" primary = "yes" linked = "no"></part>
				<part metaref = "3140" role = "DisplayNode" primary = "yes" linked = "no"></part>
				<part metaref = "3141" role = "DstEdge" primary = "yes" linked = "no"></part>
				<part metaref = "3142" role = "Edge" primary = "yes" linked = "no"></part>
				<part metaref = "3143" role = "EdgeProperty" primary = "yes" linked = "no"></part>
				<part metaref = "5469" role = "InEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "5470" role = "OutEventPort" primary = "yes" linked = "no"></part>
				<part metaref = "3146" role = "Property" primary = "yes" linked = "no"></part>
				<part metaref = "5471" role = "ProvidedRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "5472" role = "RequiredRequestPort" primary = "yes" linked = "no"></part>
				<part metaref = "3149" role = "SrcEdge" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Paths" metaref = "3072" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Path" metaref = "3073" kind = "Path"></role>
			<role name = "PathProperty" metaref = "3074" kind = "PathProperty"></role>
			<role name = "Property" metaref = "3075" kind = "Property"></role>
			<aspect name = "PathDiagram" metaref = "3150" >
				<part metaref = "3151" role = "Path" primary = "yes" linked = "no"></part>
				<part metaref = "3152" role = "PathProperty" primary = "yes" linked = "no"></part>
				<part metaref = "3153" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "PortType" metaref = "5473" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="PortType.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "Attribute" metaref = "4674" kind = "Attribute"></role>
			<role name = "ProvidedRequestPort" metaref = "5474" kind = "ProvidedRequestPort"></role>
			<role name = "ReadonlyAttribute" metaref = "4675" kind = "ReadonlyAttribute"></role>
			<role name = "RequiredRequestPort" metaref = "5475" kind = "RequiredRequestPort"></role>
			<aspect name = "InterfaceDefinition" metaref = "5703" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "4677" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "5476" role = "ProvidedRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "4678" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "5477" role = "RequiredRequestPort" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Project" metaref = "1742" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="comp-proj.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "ExecutorProject" metaref = "1743" kind = "ExecutorProject"></role>
			<role name = "ExtResourceConn" metaref = "1744" kind = "ExtResourceConn"></role>
			<role name = "ExternalResources" metaref = "1745" kind = "ExternalResources"></role>
			<role name = "ImplementationArtifact" metaref = "1746" kind = "ImplementationArtifact"></role>
			<role name = "ServantProject" metaref = "1747" kind = "ServantProject"></role>
			<role name = "StubProject" metaref = "1748" kind = "StubProject"></role>
			<aspect name = "ComponentLibraries" metaref = "1749" >
				<part metaref = "1750" role = "ExecutorProject" primary = "yes" linked = "no"></part>
				<part metaref = "1751" role = "ExtResourceConn" primary = "yes" linked = "no"></part>
				<part metaref = "1752" role = "ExternalResources" primary = "yes" linked = "no"></part>
				<part metaref = "1753" role = "ServantProject" primary = "yes" linked = "no"></part>
				<part metaref = "1754" role = "StubProject" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Property" metaref = "1755" attributes = "DataValue" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Property.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="PropertyAsAttribute" eventmask = "0x800" depth = "1" priority = "2">
				<![CDATA[let eps = self.connectedFCOs (AssemblyConfigProperty) in

eps->forAll (m : gme::Model |
  let attrs = m.parts (AttributeInstance) in 
    attrs->forAll (attr : gme::FCO | self.name () <> attr.name ()))]]>
				<dispname>To set the value of an attribute, connect the property directly to that attribute</dispname>
			</constraint>
			<constraint name="ValidAttributeMappingValuesrcCardinality19" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::AttributeMappingValue ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to Property as &quot;src&quot; over AttributeMappingValue, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidPropertyPartCardinality182" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by Property, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1756" kind = "DataType"></role>
			<aspect name = "DataTypeAspect" metaref = "5672" attributes = "DataValue" >
				<part metaref = "5673" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "QueryAction" metaref = "5270" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="QueryAction.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="HasEffect" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let name = self->parent ().kindName in

if name <> "Worker" then
  self->attachingConnections( "src", Effect) -> size = 1
else
  true
endif]]>
				<dispname>Action is missing effect connection</dispname>
			</constraint>
			<constraint name="ValidBranchTransitionsrcCardinality25" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::BranchTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over BranchTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidEffectdstCardinality56" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::Effect ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;dst&quot; over Effect, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidLoopTransitionsrcCardinality93" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::LoopTransition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over LoopTransition, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTransitionsrcCardinality149" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Transition ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to ActionBase as &quot;src&quot; over Transition, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "4186" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "4187" >
				<part metaref = "4188" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "QueryInputAction" metaref = "5271" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="QueryInputAction.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidQueryInputsrcCardinality129" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::QueryInput ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to QueryInputAction as &quot;src&quot; over QueryInput, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "4198" kind = "Property"></role>
			<aspect name = "Behavior" metaref = "4199" >
				<part metaref = "4200" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "RTRequirements" metaref = "3955" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
				<regnode name = "icon" value ="rtrequirements.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidRTRequirementsPartCardinality183" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ServiceProvider" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by RTRequirements, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidRTRequirementsPartCardinality184" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ServiceConsumer" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by RTRequirements, has to match 0..1.</dispname>
			</constraint>
			<role name = "Property" metaref = "3956" kind = "Property"></role>
			<role name = "ServiceConsumer" metaref = "3957" kind = "ServiceConsumer"></role>
			<role name = "ServiceProvider" metaref = "3958" kind = "ServiceProvider"></role>
			<aspect name = "Packaging" metaref = "3959" attributes = "resourceType" >
				<part metaref = "3960" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "RTReq" metaref = "3961" attributes = "resourceType" >
				<part metaref = "3962" role = "ServiceConsumer" primary = "yes" linked = "no"></part>
				<part metaref = "3963" role = "ServiceProvider" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ReadonlyAttribute" metaref = "1785" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="readonlyattribute.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidReadonlyAttributePartCardinality185" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "AttributeMember" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ReadonlyAttribute, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "AttributeMember" metaref = "1786" kind = "AttributeMember"></role>
			<role name = "GetException" metaref = "1787" kind = "GetException"></role>
			<aspect name = "InterfaceDefinition" metaref = "5704" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1789" role = "AttributeMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1790" role = "GetException" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Requirement" metaref = "1791" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Requirement.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Property" metaref = "1792" kind = "Property"></role>
			<aspect name = "Packaging" metaref = "1793" attributes = "resourceType" >
				<part metaref = "1794" role = "Property" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Resource" metaref = "1795" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Resource"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1796" kind = "SatisfierProperty"></role>
			<aspect name = "Target" metaref = "1797" attributes = "resourceType" >
				<part metaref = "1798" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SatisfierProperty" metaref = "1799" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SatisfierProperty.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidSatisfierPropertyPartCardinality186" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "DataType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by SatisfierProperty, has to match 1.</dispname>
			</constraint>
			<role name = "DataType" metaref = "1800" kind = "DataType"></role>
			<aspect name = "Target" metaref = "3180" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "3181" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
			<aspect name = "Packaging" metaref = "1801" attributes = "dynamic DataValue SatisfierPropertyKind" >
				<part metaref = "1802" role = "DataType" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ServantProject" metaref = "1803" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidServantProjectPartCardinality187" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size + self.parts( "ComponentImplementationArtifact" ) -> size + self.parts( "ComponentServantArtifact" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServantProject, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidServantProjectPartCardinality188" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "FileRef" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServantProject, has to match 0..1.</dispname>
			</constraint>
			<constraint name="servantOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only A servant project can exists as a part of the Component project</dispname>
			</constraint>
			<role name = "ComponentImplementationArtifact" metaref = "4258" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4259" kind = "ComponentServantArtifact"></role>
			<role name = "FileRef" metaref = "1804" kind = "FileRef"></role>
			<role name = "ImplementationArtifactReference" metaref = "1805" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1806" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "4260" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4261" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "1807" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1808" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ServiceProvider" metaref = "3942" attributes = "fixed_prioirty_service_execution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="provider.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidServiceProviderPartCardinality189" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "MultipleServiceRequests" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServiceProvider, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidServiceProviderPartCardinality190" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ServiceLevels" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by ServiceProvider, has to match 0..1.</dispname>
			</constraint>
			<role name = "MultipleServiceRequests" metaref = "3943" kind = "MultipleServiceRequests"></role>
			<role name = "ServiceLevels" metaref = "3944" kind = "ServiceLevels"></role>
			<aspect name = "RTReq" metaref = "3964" attributes = "fixed_prioirty_service_execution" >
				<part metaref = "3965" role = "MultipleServiceRequests" primary = "yes" linked = "no"></part>
				<part metaref = "3966" role = "ServiceLevels" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SharedResource" metaref = "1809" attributes = "resourceType" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="SharedResource"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="AtleastOneResourceType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.resourceType <> ""]]>
				<dispname>ResourceType should contain atleast one element</dispname>
			</constraint>
			<constraint name="ValidSharessrcCardinality135" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::Shares ) -> size in
                     (srcCount >= 1)]]>
				<dispname>Multiplicity of objects, which are associated to SharedResource as &quot;src&quot; over Shares, has to match 1..*.</dispname>
			</constraint>
			<role name = "SatisfierProperty" metaref = "1810" kind = "SatisfierProperty"></role>
			<aspect name = "Target" metaref = "1811" attributes = "resourceType" >
				<part metaref = "1812" role = "SatisfierProperty" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "StubProject" metaref = "1813" attributes = "libraryexport sharedname ORBServices" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="project.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidStubProjectPartCardinality191" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ImplementationArtifactReference" ) -> size + self.parts( "ComponentImplementationArtifact" ) -> size + self.parts( "ComponentServantArtifact" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidStubProjectPartCardinality192" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "FileRef" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by StubProject, has to match 1.</dispname>
			</constraint>
			<constraint name="stubOneInstance" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.instances ()->size <= 1]]>
				<dispname>Only One stub project can exisit as a part of the Component project</dispname>
			</constraint>
			<role name = "ComponentImplementationArtifact" metaref = "4262" kind = "ComponentImplementationArtifact"></role>
			<role name = "ComponentServantArtifact" metaref = "4263" kind = "ComponentServantArtifact"></role>
			<role name = "FileRef" metaref = "1814" kind = "FileRef"></role>
			<role name = "ImplementationArtifactReference" metaref = "1815" kind = "ImplementationArtifactReference"></role>
			<aspect name = "LibraryArtifact" metaref = "1816" attributes = "libraryexport sharedname ORBServices" >
				<part metaref = "4264" role = "ComponentImplementationArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "4265" role = "ComponentServantArtifact" primary = "yes" linked = "no"></part>
				<part metaref = "1817" role = "FileRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1818" role = "ImplementationArtifactReference" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "SwitchedAggregate" metaref = "1819" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="switchedaggregate.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="DefaultCaseCardinality" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[parts (Member)->forAll (
          x : gme::FCO | let labels = x.connectedFCOs ()
          in
          labels->exists (y : gme::Atom | y.name = "default") implies labels->size = 1
          )]]>
				<dispname>A default member cannot have multiple labels</dispname>
			</constraint>
			<constraint name="LegalDiscriminatorType" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[referenceParts (Discriminator) -> forAll (
          x : gme::Reference | x.refersTo ().isTypeOf (Enum) or
          x.refersTo ().isTypeOf (Boolean) or
          x.refersTo ().isTypeOf (Byte) or
          x.refersTo ().isTypeOf (ShortInteger) or
          x.refersTo ().isTypeOf (LongInteger))]]>
				<dispname>Discriminator must have integer, character, boolean or enum type</dispname>
			</constraint>
			<constraint name="UniqueLabelNames" eventmask = "0x80000010" depth = "1" priority = "1">
				<![CDATA[parts ("Label")->forAll (a, b : gme::Atom | a <> b implies a.name <> b.name)]]>
				<dispname>Labels in the same scope must be unique</dispname>
			</constraint>
			<constraint name="UniqueMemberNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[parts (Member)->forAll (x, y : gme::Reference |  x <> y implies x.name <> y.name)]]>
				<dispname>Members of an aggregate type must have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality193" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Label" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality194" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "Discriminator" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidSwitchedAggregatePartCardinality195" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "LabelConnection" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by SwitchedAggregate, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ArrayMember" metaref = "5521" kind = "ArrayMember"></role>
			<role name = "Discriminator" metaref = "1820" kind = "Discriminator"></role>
			<role name = "Label" metaref = "1821" kind = "Label"></role>
			<role name = "LabelConnection" metaref = "1822" kind = "LabelConnection"></role>
			<role name = "Member" metaref = "1823" kind = "Member"></role>
			<aspect name = "InterfaceDefinition" metaref = "5705" attributes = "VersionTag SpecifyIdTag PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "5522" role = "ArrayMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1825" role = "Discriminator" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1826" role = "Label" primary = "yes" linked = "no"></part>
				<part metaref = "1827" role = "LabelConnection" primary = "yes" linked = "no"></part>
				<part metaref = "1828" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "TemplatePackageInstance" metaref = "5545" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidTemplatePackageInstancePartCardinality196" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "TemplateParameterValue" ) -> size in
                     (partCount >= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TemplatePackageInstance, has to match 1..*.</dispname>
			</constraint>
			<constraint name="ValidTemplatePackageInstancePartCardinality197" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageType" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by TemplatePackageInstance, has to match 1.</dispname>
			</constraint>
			<role name = "PackageType" metaref = "5546" kind = "PackageType"></role>
			<role name = "TemplateParameterValue" metaref = "5547" kind = "TemplateParameterValue"></role>
			<aspect name = "TemplateParameters" metaref = "5548" >
				<dispname>Template Parameters</dispname>
				<part metaref = "5549" role = "PackageType" primary = "yes" kindaspect = "TemplateParameters" linked = "no"></part>
				<part metaref = "5550" role = "TemplateParameterValue" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Throughput" metaref = "1829" attributes = "fileName priority rate warmup iterations resolution" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="Throughput.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidBenchmarkCharacteristicssrcCardinality23" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::BenchmarkCharacteristics ) -> size in
                     (srcCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;src&quot; over BenchmarkCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidMetricConnectionsrcCardinality99" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let srcCount = self.attachingConnections( "dst", meta::MetricConnection ) -> size in
                     (srcCount = 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;src&quot; over MetricConnection, has to match 1.</dispname>
			</constraint>
			<constraint name="ValidWorkloadCharacteristicsdstCardinality154" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let dstCount = self.attachingConnections( "src", meta::WorkloadCharacteristics ) -> size in
                     (dstCount <= 1)]]>
				<dispname>Multiplicity of objects, which are associated to MetricsBase as &quot;dst&quot; over WorkloadCharacteristics, has to match 0..1.</dispname>
			</constraint>
			<role name = "Average" metaref = "1830" kind = "Average"></role>
			<role name = "Jitter" metaref = "1831" kind = "Jitter"></role>
			<role name = "Maximum" metaref = "1832" kind = "Maximum"></role>
			<role name = "Minimum" metaref = "1833" kind = "Minimum"></role>
			<aspect name = "DataAnalysis" metaref = "1834" attributes = "fileName priority rate warmup iterations resolution" >
				<part metaref = "1835" role = "Average" primary = "yes" linked = "no"></part>
				<part metaref = "1836" role = "Jitter" primary = "yes" linked = "no"></part>
				<part metaref = "1837" role = "Maximum" primary = "yes" linked = "no"></part>
				<part metaref = "1838" role = "Minimum" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "TopLevelPackageContainer" metaref = "1839" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="TopLevelPackageConfiguration.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ValidTopLevelPackageContainerPartCardinality199" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "package" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTopLevelPackageContainerPartCardinality200" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "TopLevelPackage" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidTopLevelPackageContainerPartCardinality201" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "PackageConfigurationReference" ) -> size in
                     (partCount = 1)]]>
				<dispname>Multiplicity of parts, which are contained by TopLevelPackageContainer, has to match 1.</dispname>
			</constraint>
			<role name = "PackageConfigurationReference" metaref = "1840" kind = "PackageConfigurationReference"></role>
			<role name = "TopLevelPackage" metaref = "1841" kind = "TopLevelPackage"></role>
			<role name = "package" metaref = "1842" kind = "package"></role>
			<aspect name = "Packaging" metaref = "1843" >
				<part metaref = "1844" role = "PackageConfigurationReference" primary = "yes" linked = "no"></part>
				<part metaref = "1845" role = "TopLevelPackage" primary = "yes" linked = "no"></part>
				<part metaref = "1846" role = "package" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "TwowayOperation" metaref = "1847" attributes = "VersionTag SpecifyIdTag" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="twoway.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="TimerMetricConnection" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[attachingConnections("MetricConnection")->size + attachingConnections("TimerConnection")->size <= 1]]>
				<dispname>An operation cannot have more than 1 Timer connection or 1 Metrics connection</dispname>
			</constraint>
			<constraint name="UniqueExceptions" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let x = self.referenceParts (ExceptionRef) in
          x->size > 0 implies
          x->forAll (a, b : ExeceptionRef | a <> b implies a.refersTo ().name <> b.refersTo ().name)]]>
				<dispname>An operation&apos;s exception list cannot have repeated names</dispname>
			</constraint>
			<constraint name="UniqueParamNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[AllParams ()->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>An operation&apos;s parameters must have unique names</dispname>
			</constraint>
			<constraint name="ValidTwowayOperationPartCardinality202" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[let partCount = self.parts( "ReturnType" ) -> size in
                     (partCount <= 1)]]>
				<dispname>Multiplicity of parts, which are contained by TwowayOperation, has to match 0..1.</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<role name = "ExceptionRef" metaref = "1848" kind = "ExceptionRef"></role>
			<role name = "InParameter" metaref = "1849" kind = "InParameter"></role>
			<role name = "InoutParameter" metaref = "1850" kind = "InoutParameter"></role>
			<role name = "OutParameter" metaref = "1851" kind = "OutParameter"></role>
			<role name = "ReturnType" metaref = "1852" kind = "ReturnType"></role>
			<aspect name = "InterfaceDefinition" metaref = "5706" attributes = "VersionTag SpecifyIdTag" >
				<part metaref = "1854" role = "ExceptionRef" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1855" role = "InParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1856" role = "InoutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1857" role = "OutParameter" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1858" role = "ReturnType" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
			</aspect>
		</model>
		<model name = "ValueObject" metaref = "1859" attributes = "VersionTag PrefixTag SpecifyIdTag abstract PrePreprocessorDirectives PostPreprocessorDirectives" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="member.bmp"></regnode>
				<regnode name = "icon" value ="value.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="ConcreteValueParent" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let concrete_parents =
          self.parts ("Inherits")->select (x : gme::Reference | x.refersTo ().oclAsType (ValueObject).abstract = false)
          in
          if (self.abstract = true) then
          concrete_parents->size = 0
          else
          concrete_parents->size < 2
          endif]]>
				<dispname>An abstract ValueDef can have no concrete parent, if it is concrete it can have at most one.</dispname>
			</constraint>
			<constraint name="InheritsSameType" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x : gme::Reference | x.refersTo ().type () = self.type ())]]>
				<dispname>A parent must have the same type as its child</dispname>
			</constraint>
			<constraint name="NoDuplicateImmediateParents" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[self.referenceParts (Inherits)->forAll (x, y : gme::Reference | x <> y implies x.refersTo () <> y.refersTo ())]]>
				<dispname>Immediate parents must all be unique</dispname>
			</constraint>
			<constraint name="NoRecursiveInheritance" eventmask = "0x0" depth = "1" priority = "1">
				<![CDATA[self.inheritsRecursive (self)->forAll (x : gme::Model | x <> self)]]>
				<dispname>There is a cycle in the inheritance graph</dispname>
			</constraint>
			<constraint name="UniqueInheritableDeclNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let a = parts () - parts ("Inherits") - parts ("Supports") - parts ("MakeMemberPrivate") - parts ("PrivateFlag") in
          a->forAll (x, y : gme::FCO | x <> y implies x.name <> y.name)]]>
				<dispname>Declarations in a scope must have unique names</dispname>
			</constraint>
			<constraint name="UniqueOperationNames" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[
            allOps (self)->forAll (x, y: gme::Model | x.name = y.name implies x == y)
          ]]>
				<dispname>Local, inherited and supported operations must all have unique names</dispname>
			</constraint>
			<constraint name="ValidIdentifier" eventmask = "0x80000000" depth = "1" priority = "1">
				<![CDATA[let name = self.name().trim() in
name <> "" implies name.match( "^[a-zA-Z][_a-zA-Z0-9]*$" )]]>
				<dispname>Not a valid identifier</dispname>
			</constraint>
			<constraint name="ValidVersion" eventmask = "0x1" depth = "1" priority = "1">
				<![CDATA[VersionTag <> "" implies VersionTag.trim ().match ("^[0-9]+\.[0-9]+$")]]>
				<dispname>Version must be a valid decimal number</dispname>
			</constraint>
			<attrdef name="abstract" metaref = "1860" valuetype = "boolean" defvalue = "false">
			</attrdef>
			<role name = "Aggregate" metaref = "1861" kind = "Aggregate"></role>
			<role name = "Alias" metaref = "1862" kind = "Alias"></role>
			<role name = "ArrayMember" metaref = "5523" kind = "ArrayMember"></role>
			<role name = "Attribute" metaref = "1863" kind = "Attribute"></role>
			<role name = "Collection" metaref = "1864" kind = "Collection"></role>
			<role name = "Constant" metaref = "1865" kind = "Constant"></role>
			<role name = "Enum" metaref = "1866" kind = "Enum"></role>
			<role name = "Exception" metaref = "1867" kind = "Exception"></role>
			<role name = "FactoryOperation" metaref = "1868" kind = "FactoryOperation"></role>
			<role name = "Inherits" metaref = "1869" kind = "Inherits"></role>
			<role name = "MakeMemberPrivate" metaref = "1870" kind = "MakeMemberPrivate"></role>
			<role name = "Member" metaref = "1871" kind = "Member"></role>
			<role name = "OnewayOperation" metaref = "1872" kind = "OnewayOperation"></role>
			<role name = "PortType" metaref = "5478" kind = "PortType"></role>
			<role name = "PrivateFlag" metaref = "1873" kind = "PrivateFlag"></role>
			<role name = "ReadonlyAttribute" metaref = "1874" kind = "ReadonlyAttribute"></role>
			<role name = "Supports" metaref = "1875" kind = "Supports"></role>
			<role name = "SwitchedAggregate" metaref = "1876" kind = "SwitchedAggregate"></role>
			<role name = "TwowayOperation" metaref = "1877" kind = "TwowayOperation"></role>
			<aspect name = "InterfaceDefinition" metaref = "5707" attributes = "VersionTag PrefixTag SpecifyIdTag abstract PrePreprocessorDirectives PostPreprocessorDirectives" >
				<part metaref = "1879" role = "Aggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1880" role = "Alias" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "5524" role = "ArrayMember" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1881" role = "Attribute" primary = "yes" linked = "no"></part>
				<part metaref = "1882" role = "Collection" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1883" role = "Constant" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1884" role = "Enum" primary = "yes" linked = "no"></part>
				<part metaref = "1885" role = "Exception" primary = "yes" linked = "no"></part>
				<part metaref = "1886" role = "FactoryOperation" primary = "yes" linked = "no"></part>
				<part metaref = "1887" role = "Inherits" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1888" role = "MakeMemberPrivate" primary = "yes" linked = "no"></part>
				<part metaref = "1889" role = "Member" primary = "yes" kindaspect = "InterfaceDefinition" linked = "no"></part>
				<part metaref = "1890" role = "OnewayOperation" primary = "yes" linked = "no"></part>
				<part metaref = "5479" role = "PortType" primary = "yes" linked = "no"></part>
				<part metaref = "1891" role = "PrivateFlag" primary = "yes" linked = "no"></part>
				<part metaref = "1892" role = "ReadonlyAttribute" primary = "yes" linked = "no"></part>
				<part metaref = "1893" role = "Supports" primary = "yes" kindaspect = "InterfaceDefinition" linked = "yes"></part>
				<part metaref = "1894" role = "SwitchedAggregate" primary = "yes" linked = "no"></part>
				<part metaref = "1895" role = "TwowayOperation" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "Worker" metaref = "5272" attributes = "Abstract" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="worker.gif"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Action" metaref = "5273" kind = "Action"></role>
			<aspect name = "Behavior" metaref = "2958" attributes = "Abstract" >
				<part metaref = "5274" role = "Action" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerFile" metaref = "5275" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="file.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Worker" metaref = "5276" kind = "Worker"></role>
			<role name = "WorkerPackage" metaref = "5277" kind = "WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "2990" attributes = "Location" >
				<part metaref = "5278" role = "Worker" primary = "yes" linked = "no"></part>
				<part metaref = "5279" role = "WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerLibrary" metaref = "5280" attributes = "Location" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<constraint name="UniqueWorker" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let workers = self->parts (Worker) in
    workers->isUnique (iter : Worker | iter->name ())]]>
				<dispname>Worker library constains duplicate worker names</dispname>
			</constraint>
			<role name = "WorkerFile" metaref = "5281" kind = "WorkerFile"></role>
			<aspect name = "Behavior" metaref = "2966" attributes = "Location" >
				<part metaref = "5282" role = "WorkerFile" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<model name = "WorkerPackage" metaref = "5283" >
				<regnode name = "namePosition" value ="4"></regnode>
				<regnode name = "icon" value ="package.bmp"></regnode>
				<regnode name = "isTypeInfoShown" value ="true"></regnode>
			<role name = "Worker" metaref = "5284" kind = "Worker"></role>
			<role name = "WorkerPackage" metaref = "5285" kind = "WorkerPackage"></role>
			<aspect name = "Behavior" metaref = "2993" >
				<part metaref = "5286" role = "Worker" primary = "yes" linked = "no"></part>
				<part metaref = "5287" role = "WorkerPackage" primary = "yes" linked = "no"></part>
			</aspect>
		</model>
		<folder name = "ComponentAnalyses" metaref = "1896"  rootobjects = "BenchmarkAnalysis" >
		</folder>
		<folder name = "ComponentBuild" metaref = "1897"  rootobjects = "MPC" >
		</folder>
		<folder name = "ComponentFactoryImplementations" metaref = "4123"  rootobjects = "ComponentFactoryImplementationContainer" >
		</folder>
		<folder name = "ComponentImplementations" metaref = "5480"  rootobjects = "ComponentImplementationContainer" >
			<constraint name="UniqueComponentImplementations" eventmask = "0x0" depth = "1" priority = "2">
				<![CDATA[let artifacts = self.models(ComponentImplementationContainer) in
   artifacts->isUnique (i : ComponentImplementationContainer | i.name.trim())]]>
				<dispname>ComponentImplementationContainers should have unique names</dispname>
			</constraint>
		</folder>
		<folder name = "ComponentPackages" metaref = "1899"  rootobjects = "PackageContainer" >
		</folder>
		<folder name = "ComponentTypes" metaref = "5481"  rootobjects = "ComponentContainer" >
		</folder>
		<folder name = "ConnectorImplementations" metaref = "5288"  rootobjects = "ConnectorImplementationContainer" >
			<dispname>Connector Implementations</dispname>
		</folder>
		<folder name = "DeploymentPlans" metaref = "1901"  rootobjects = "DeploymentPlan" >
		</folder>
		<folder name = "ImplementationArtifacts" metaref = "1903"  rootobjects = "ArtifactContainer" >
		</folder>
		<folder name = "InterfaceDefinitions" metaref = "1904"  rootobjects = "File" >
			<constraint name="UniqueGlobalDeclNames" eventmask = "0x0" depth = "0" priority = "1">
				<![CDATA[allFileScopeDecls ()->forAll (
          x, y : gme::FCO | x <> y and (not x.isTypeOf (Package) or not y.isTypeOf (Package)) implies x.name <> y.name
          )]]>
				<dispname>Declarations at global scope must have unique names unless they are Packages</dispname>
			</constraint>
		</folder>
		<folder name = "PackageConfigurations" metaref = "1905"  rootobjects = "PackageConfigurationContainer" >
		</folder>
		<folder name = "PathDiagrams" metaref = "3173"  rootobjects = "Paths" >
		</folder>
		<folder name = "PredefinedTypes" metaref = "1906"  rootobjects = "Boolean Byte Char DoubleNumber FloatNumber GenericObject GenericValue GenericValueObject LongDoubleNumber LongInteger LongLongInteger ShortInteger String TypeEncoding TypeKind UnsignedLongInteger UnsignedLongLongInteger UnsignedShortInteger WideChar WideString" >
		</folder>
		<folder name = "Targets" metaref = "1907"  rootobjects = "Domain" >
		</folder>
		<folder name = "TopLevelPackages" metaref = "1908"  rootobjects = "TopLevelPackageContainer" >
		</folder>
		<folder name = "WorkerLibraries" metaref = "5289"  rootobjects = "WorkerLibrary" >
		</folder>
	</folder>
</paradigm>
