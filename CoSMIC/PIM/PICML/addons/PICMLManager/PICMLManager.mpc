// $Id$

project (PICML_Model_Intelligence): game_dialogs, game_component, \
                        picml_game_utils, boost_base, cosmic_utils {
  sharedname = PICML_Model_Intelligence

  pch_header = StdAfx.h
  pch_source = StdAfx.cpp

  Source_Files {
    Configurator.idl
    PICMLManager.idl

    PICMLManager_Impl.cpp
    PICMLManager_Module.cpp
    PICML_Manager_Addon.cpp

    DefaultImplementationGenerator.cpp
    DefaultArtifactGenerator.cpp
    Dialogs.cpp

    Type_Handlers {
      Event_Handler_Config.cpp
	  
      AMI4CCM_Event_Handler.cpp
      AttributeMember_Event_Handler.cpp
      AttributeValue_Event_Handler.cpp
      CollocationGroup_Event_Handler.cpp
      ComplexTypeReference_Event_Handler.cpp
      Component_Event_Handler.cpp
      ComponentInstance_Event_Handler.cpp
      ComponentInstanceRef_Event_Handler.cpp
      ComponentInstanceType_Event_Handler.cpp
      ConnectorInstance_Event_Handler.cpp
      Event_Handler_Base.cpp
      ExternalDelegate_Event_Handler.cpp
      NodeReference_Event_Handler.cpp
      PortInstance_Event_Handler.cpp
      ToConnector_Event_Handler.cpp
      UUID_Event_Handler.cpp
      // Template_Module_Instance_Handler.cpp
    }

    Instance_Handlers {

    }
  }

  Header_Files {
    NewComponentConfig.h
  }

  Resource_Files {
    PICMLManager.rc
  }

  specific (wix) {
    gme_install     = 1
    gme_component_type = 2
    gme_progid      = MGA.AddOn.PICMLManager
    gme_uuid        = B744B044-436A-4463-AF72-41D1D94815D9
    gme_paradigms   = PICML CQML
    gme_description = PICML Model Intelligence
    gme_tooltip     = PICML Model Intelligence
  }
}
