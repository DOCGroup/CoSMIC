// $Id$

project (PICML_Model_Intelligence): game_dialogs, game_component, game_manip, \
                        picml_game_utils, boost_base, cosmic_utils {
  sharedname = PICML_Model_Intelligence

  pch_header = StdAfx.h
  pch_source = StdAfx.cpp

  Source_Files {
    Configurator.idl

    Default_Implementation_Generator.cpp
    Default_Artifact_Generator.cpp
    Dialogs.cpp
    Event_Handler_Config.cpp
    Implementation_Configuration.cpp
    PICMLManager.idl
    PICMLManager_Impl.cpp
    PICMLManager_Module.cpp
    PICML_Manager_Addon.cpp
    Scope_Display_Strategy.cpp
    Validation.cpp

    General_Event_Handlers {
      AMI4CCM_Event_Handler.cpp
      Default_Implementation_Event_Handler.cpp
      UUID_Event_Handler.cpp
    }

    Type_Event_Handlers {
      AttributeMember_Event_Handler.cpp
      AttributeValue_Event_Handler.cpp
      CollocationGroup_Event_Handler.cpp
      ComplexTypeReference_Event_Handler.cpp
      Component_Event_Handler.cpp
      ComponentInstance_Event_Handler.cpp
      ComponentInstanceRef_Event_Handler.cpp
      ComponentInstanceType_Event_Handler.cpp
      ConnectorInstance_Event_Handler.cpp
      Event_Handler_Base.cpp
      NodeReference_Event_Handler.cpp
      Package_Type_Handler.cpp
      PortInstance_Event_Handler.cpp
      ToConnector_Event_Handler.cpp
      Template_Module_Instance_Handler.cpp
    }

    Instance_Event_Handlers {
      Template_Parameter_Value_Handler.cpp
    }
  }

  Header_Files {

  }

  Resource_Files {
    PICMLManager.rc
  }

  specific (wix) {
    gme_install     = 1
    gme_component_type = 2
    gme_progid      = MGA.AddOn.PICMLManager
    gme_uuid        = B744B044-436A-4463-AF72-41D1D94815D9
    gme_paradigms   = PICML CQML
    gme_description = PICML Model Intelligence
    gme_tooltip     = PICML Model Intelligence
  }
}
