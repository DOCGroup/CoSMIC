#
# The Apache Software License, Version 1.1
#
# Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
# reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
#
# 3. The end-user documentation included with the redistribution,
#    if any, must include the following acknowledgment:
#       "This product includes software developed by the
#        Apache Software Foundation (http://www.apache.org/)."
#    Alternately, this acknowledgment may appear in the software itself,
#    if and wherever such third-party acknowledgments normally appear.
#
# 4. The names "Xerces" and "Apache Software Foundation" must
#    not be used to endorse or promote products derived from this
#    software without prior written permission. For written
#    permission, please contact apache\@apache.org.
#
# 5. Products derived from this software may not be called "Apache",
#    nor may "Apache" appear in their name, without prior written
#    permission of the Apache Software Foundation.
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
# ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# ====================================================================
#
# This software consists of voluntary contributions made by many
# individuals on behalf of the Apache Software Foundation, and was
# originally based on software copyright (c) 1999, International
# Business Machines, Inc., http://www.ibm.com .  For more information
# on the Apache Software Foundation, please see
# <http://www.apache.org/>.
#
#
# $Id$
#

PLATFORM = @platform@
CC  = @cc@
CXX = @cxx@
GCC = @GCC@
GXX = @GXX@
CXXFLAGS = @cxxflags@
CFLAGS = @cflags@
PREFIX = @prefix@
PREFIX_INCLUDE = @prefix_include@
LDFLAGS = @ldflags@
LIBS = @libs@
OSVER = @osver@
USELIBWWW = @uselibwww@
MESSAGELOADER = @messageloader@
TRANSCODER = @transcoder@
THREADS = @threads@

MODULE = dom
SUBMODULE = deprecated

include ../../Makefile.incl

DOM_DEPRECATED_CPP_PUBHEADERS = \
	DOM.hpp \
	DOMParser.hpp \
	DOMString.hpp \
	DOM_Attr.hpp \
	DOM_CDATASection.hpp \
	DOM_CharacterData.hpp \
	DOM_Comment.hpp \
	DOM_DOMException.hpp \
	DOM_DOMImplementation.hpp \
	DOM_Document.hpp \
	DOM_DocumentFragment.hpp \
	DOM_DocumentType.hpp \
	DOM_Element.hpp \
	DOM_Entity.hpp \
	DOM_EntityReference.hpp \
	DomMemDebug.hpp \
	DOM_NamedNodeMap.hpp \
	DOM_Node.hpp \
	DOM_NodeFilter.hpp \
	DOM_NodeIterator.hpp \
	DOM_NodeList.hpp \
	DOM_Notation.hpp \
	DOM_ProcessingInstruction.hpp \
	DOM_Range.hpp \
	DOM_RangeException.hpp \
	DOM_Text.hpp \
	DOM_TreeWalker.hpp \
	DOM_XMLDecl.hpp

DOM_DEPRECATED_CPP_PRIVHEADERS =  \
	AttrImpl.hpp \
	AttrMapImpl.hpp \
	AttrNSImpl.hpp \
	CDATASectionImpl.hpp \
	CharacterDataImpl.hpp \
	ChildNode.hpp \
	CommentImpl.hpp \
	DStringPool.hpp \
	DOMStringImpl.hpp \
	DeepNodeListImpl.hpp \
	DocumentFragmentImpl.hpp \
	DocumentImpl.hpp \
	DocumentTypeImpl.hpp \
	ElementDefinitionImpl.hpp \
	ElementImpl.hpp \
	ElementNSImpl.hpp \
	EntityImpl.hpp \
	EntityReferenceImpl.hpp \
	MemDebug.hpp \
	NameNodeFilter.hpp \
	NamedNodeMapImpl.hpp \
	NodeIDMap.hpp \
	NodeImpl.hpp \
	NodeIteratorImpl.hpp \
	NodeListImpl.hpp \
	NodeVector.hpp \
	NotationImpl.hpp \
	ParentNode.hpp \
	ProcessingInstructionImpl.hpp \
	RangeImpl.hpp \
	RefCountedImpl.hpp \
	TextImpl.hpp \
	TreeWalkerImpl.hpp \
	XMLDeclImpl.hpp

DOM_DEPRECATED_C_FILES =


DOM_DEPRECATED_CPP_OBJECTS = \
	AttrImpl.$(TO) \
	AttrMapImpl.$(TO) \
	AttrNSImpl.$(TO) \
	CDATASectionImpl.$(TO) \
	CharacterDataImpl.$(TO) \
	ChildNode.$(TO) \
	CommentImpl.$(TO) \
	DOMParser.$(TO) \
	DOMString.$(TO) \
	DOM_Attr.$(TO) \
	DOM_CDATASection.$(TO) \
	DOM_CharacterData.$(TO) \
	DOM_Comment.$(TO) \
	DOM_DOMException.$(TO) \
	DOM_DOMImplementation.$(TO) \
	DOM_Document.$(TO) \
	DOM_DocumentFragment.$(TO) \
	DOM_DocumentType.$(TO) \
	DOM_Element.$(TO) \
	DOM_Entity.$(TO) \
	DOM_EntityReference.$(TO) \
	DOM_NamedNodeMap.$(TO) \
	DOM_Node.$(TO) \
	DOM_NodeList.$(TO) \
	DOM_NodeFilter.$(TO) \
	DOM_NodeIterator.$(TO) \
	DOM_TreeWalker.$(TO) \
	DOM_Notation.$(TO) \
	DOM_ProcessingInstruction.$(TO) \
	DOM_Range.$(TO) \
	DOM_RangeException.$(TO) \
	DOM_Text.$(TO) \
	DOM_XMLDecl.$(TO) \
	DStringPool.$(TO) \
	DeepNodeListImpl.$(TO) \
	DocumentFragmentImpl.$(TO) \
	DocumentImpl.$(TO) \
	DocumentTypeImpl.$(TO) \
	DomMemDebug.$(TO) \
	ElementDefinitionImpl.$(TO) \
	ElementImpl.$(TO) \
	ElementNSImpl.$(TO) \
	EntityImpl.$(TO) \
	EntityReferenceImpl.$(TO) \
	NamedNodeMapImpl.$(TO) \
	NodeIDMap.$(TO) \
	NodeImpl.$(TO) \
	NodeIteratorImpl.$(TO) \
	NodeListImpl.$(TO) \
	NodeVector.$(TO) \
	NotationImpl.$(TO) \
	ParentNode.$(TO) \
	ProcessingInstructionImpl.$(TO) \
	RangeImpl.$(TO) \
	RefCountedImpl.$(TO) \
	TextImpl.$(TO) \
	TreeWalkerImpl.$(TO) \
	XMLDeclImpl.$(TO)


all::	includes $(DOM_DEPRECATED_CPP_OBJECTS)

includes::	pubheaders $(DOM_DEPRECATED_C_FILES)

pubheaders::
	-mkdir -p $(XML_INC_DIR)/$(MODULE)/$(SUBMODULE)
	$(CP) $(DOM_DEPRECATED_CPP_PUBHEADERS) $(DOM_DEPRECATED_C_FILES) $(XML_INC_DIR)/$(MODULE)/$(SUBMODULE)

# this may generate unnecessary dependencies, but it makes life easier
depend:: includes
	$(MAKE_DEPEND) $(XML_INCL)  *.cpp > $(DEPFILE)

clean::
	@echo "Making clean in $(MODULE)/$(SUBMODULE) ..."
	$(RM2) $(addprefix $(XML_OBJ_DIR)/,$(DOM_DEPRECATED_CPP_OBJECTS))

distclean::	clean
	$(RM) Makefile $(DEPFILE)
	@echo "Removing all $(MODULE)/$(SUBMODULE) header files ..."
	$(RM2) $(addprefix $(XML_INC_DIR)/$(MODULE)/$(SUBMODULE)/,$(DOM_DEPRECATED_CPP_PUBHEADERS))

install::
	-mkdir -p $(DESTDIR)$(PREFIX_INCLUDE)/$(MODULE)/$(SUBMODULE)
	$(CP) $(DOM_DEPRECATED_CPP_PUBHEADERS) $(DOM_DEPRECATED_C_FILES) $(DESTDIR)$(PREFIX_INCLUDE)/$(MODULE)/$(SUBMODULE)
